apply plugin: 'application'

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'com.github.tommyettinger.lwjgl3.Lwjgl3Launcher'
eclipse.project.name = appName + '-lwjgl3'

java.sourceCompatibility = 11
compileJava {
	sourceCompatibility = 11
	targetCompatibility = 11
	if (JavaVersion.current().isJava9Compatible()) {
		options.release.set(11)
	}
}

if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_11)) {
		compileTestJava.sourceCompatibility = 11
		compileTestJava.targetCompatibility = 11
		compileTestJava.options.release.set(11)
} else if (JavaVersion.current().isJava9Compatible()) {
	compileTestJava.sourceCompatibility = 11
	compileTestJava.targetCompatibility = 11
	compileTestJava.options.release.set(11)
//	apply plugin: 'idea'
//	idea.module.excludeDirs += [file("src/test/java/com/github/tommyettinger/random/")]
//	compileTestJava.exclude("com/github/tommyettinger/random")
}


dependencies {
	implementation project(':core')
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	testImplementation "junit:junit:4.13.2"
}

import org.gradle.internal.os.OperatingSystem

run {
	workingDir = rootProject.file('assets').path
	setIgnoreExitValue(true)
	
	if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
		// Required to run LWJGL3 Java apps on MacOS
		jvmArgs += "-XstartOnFirstThread"
	}
}

jar {
// sets the name of the .jar file this produces to the name of the game or app.
	archiveBaseName.set(appName)
// the duplicatesStrategy will matter starting in Gradle 7.0; this setting works.
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	dependsOn configurations.runtimeClasspath
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
// these "exclude" lines remove some unnecessary duplicate files in the output JAR.
	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
	dependencies {
		exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
	}
// setting the manifest makes the JAR runnable.
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
// this last step may help on some OSes that need extra instruction to make runnable JARs.
	doLast {
		file(archiveFile).setExecutable(true, false)
	}
}
