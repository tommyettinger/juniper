"use strict";
var main;
(function($rt_globals) {
var $rt_seed = 2463534242;
function $rt_nextId() {
    var x = $rt_seed;
    x ^= x << 13;
    x ^= x >> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
}
function $rt_compare(a, b) {
    return a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1;
}
function $rt_isInstance(obj, cls) {
    return obj !== null && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls);
}
function $rt_isAssignable(from, to) {
    if (from === to) {
        return true;
    }
    if (to.$meta.item !== null) {
        return from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
    }
    var supertypes = from.$meta.supertypes;
    for (var i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            return true;
        }
    }
    return false;
}
function $rt_castToInterface(obj, cls) {
    if (obj !== null && !$rt_isInstance(obj, cls)) {
        $rt_throwCCE();
    }
    return obj;
}
function $rt_castToClass(obj, cls) {
    if (obj !== null && !(obj instanceof cls)) {
        $rt_throwCCE();
    }
    return obj;
}
$rt_globals.Array.prototype.fill = $rt_globals.Array.prototype.fill || function(value, start, end) {
    var len = this.length;
    if (!len) return this;
    start = start | 0;
    var i = start < 0 ? $rt_globals.Math.max(len + start, 0) : $rt_globals.Math.min(start, len);
    end = end === $rt_globals.undefined ? len : end | 0;
    end = end < 0 ? $rt_globals.Math.max(len + end, 0) : $rt_globals.Math.min(end, len);
    for (;i < end;i++) {
        this[i] = value;
    }
    return this;
};
function $rt_createArray(cls, sz) {
    var data = new $rt_globals.Array(sz);
    data.fill(null);
    return new $rt_array(cls, data);
}
function $rt_createArrayFromData(cls, init) {
    return $rt_wrapArray(cls, init);
}
function $rt_wrapArray(cls, data) {
    return new $rt_array(cls, data);
}
function $rt_createUnfilledArray(cls, sz) {
    return new $rt_array(cls, new $rt_globals.Array(sz));
}
function $rt_createNumericArray(cls, nativeArray) {
    return new $rt_array(cls, nativeArray);
}
var $rt_createLongArray;
var $rt_createLongArrayFromData;
if (typeof $rt_globals.BigInt64Array !== 'function') {
    $rt_createLongArray = function(sz) {
        var data = new $rt_globals.Array(sz);
        var arr = new $rt_array($rt_longcls(), data);
        data.fill(Long_ZERO);
        return arr;
    };
    $rt_createLongArrayFromData = function(init) {
        return new $rt_array($rt_longcls(), init);
    };
} else {
    $rt_createLongArray = function(sz) {
        return $rt_createNumericArray($rt_longcls(), new $rt_globals.BigInt64Array(sz));
    };
    $rt_createLongArrayFromData = function(data) {
        var buffer = new $rt_globals.BigInt64Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_longcls(), buffer);
    };
}
function $rt_createCharArray(sz) {
    return $rt_createNumericArray($rt_charcls(), new $rt_globals.Uint16Array(sz));
}
function $rt_createCharArrayFromData(data) {
    var buffer = new $rt_globals.Uint16Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_charcls(), buffer);
}
function $rt_createByteArray(sz) {
    return $rt_createNumericArray($rt_bytecls(), new $rt_globals.Int8Array(sz));
}
function $rt_createByteArrayFromData(data) {
    var buffer = new $rt_globals.Int8Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_bytecls(), buffer);
}
function $rt_createShortArray(sz) {
    return $rt_createNumericArray($rt_shortcls(), new $rt_globals.Int16Array(sz));
}
function $rt_createShortArrayFromData(data) {
    var buffer = new $rt_globals.Int16Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_shortcls(), buffer);
}
function $rt_createIntArray(sz) {
    return $rt_createNumericArray($rt_intcls(), new $rt_globals.Int32Array(sz));
}
function $rt_createIntArrayFromData(data) {
    var buffer = new $rt_globals.Int32Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_intcls(), buffer);
}
function $rt_createBooleanArray(sz) {
    return $rt_createNumericArray($rt_booleancls(), new $rt_globals.Int8Array(sz));
}
function $rt_createBooleanArrayFromData(data) {
    var buffer = new $rt_globals.Int8Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_booleancls(), buffer);
}
function $rt_createFloatArray(sz) {
    return $rt_createNumericArray($rt_floatcls(), new $rt_globals.Float32Array(sz));
}
function $rt_createFloatArrayFromData(data) {
    var buffer = new $rt_globals.Float32Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_floatcls(), buffer);
}
function $rt_createDoubleArray(sz) {
    return $rt_createNumericArray($rt_doublecls(), new $rt_globals.Float64Array(sz));
}
function $rt_createDoubleArrayFromData(data) {
    var buffer = new $rt_globals.Float64Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_doublecls(), buffer);
}
function $rt_arraycls(cls) {
    var result = cls.$array;
    if (result === null) {
        var arraycls = {  };
        var name = "[" + cls.$meta.binaryName;
        arraycls.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        arraycls.classObject = null;
        arraycls.$array = null;
        result = arraycls;
        cls.$array = arraycls;
    }
    return result;
}
function $rt_createcls() {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
}
function $rt_createPrimitiveCls(name, binaryName) {
    var cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
}
var $rt_booleanclsCache = null;
function $rt_booleancls() {
    if ($rt_booleanclsCache === null) {
        $rt_booleanclsCache = $rt_createPrimitiveCls("boolean", "Z");
    }
    return $rt_booleanclsCache;
}
var $rt_charclsCache = null;
function $rt_charcls() {
    if ($rt_charclsCache === null) {
        $rt_charclsCache = $rt_createPrimitiveCls("char", "C");
    }
    return $rt_charclsCache;
}
var $rt_byteclsCache = null;
function $rt_bytecls() {
    if ($rt_byteclsCache === null) {
        $rt_byteclsCache = $rt_createPrimitiveCls("byte", "B");
    }
    return $rt_byteclsCache;
}
var $rt_shortclsCache = null;
function $rt_shortcls() {
    if ($rt_shortclsCache === null) {
        $rt_shortclsCache = $rt_createPrimitiveCls("short", "S");
    }
    return $rt_shortclsCache;
}
var $rt_intclsCache = null;
function $rt_intcls() {
    if ($rt_intclsCache === null) {
        $rt_intclsCache = $rt_createPrimitiveCls("int", "I");
    }
    return $rt_intclsCache;
}
var $rt_longclsCache = null;
function $rt_longcls() {
    if ($rt_longclsCache === null) {
        $rt_longclsCache = $rt_createPrimitiveCls("long", "J");
    }
    return $rt_longclsCache;
}
var $rt_floatclsCache = null;
function $rt_floatcls() {
    if ($rt_floatclsCache === null) {
        $rt_floatclsCache = $rt_createPrimitiveCls("float", "F");
    }
    return $rt_floatclsCache;
}
var $rt_doubleclsCache = null;
function $rt_doublecls() {
    if ($rt_doubleclsCache === null) {
        $rt_doubleclsCache = $rt_createPrimitiveCls("double", "D");
    }
    return $rt_doubleclsCache;
}
var $rt_voidclsCache = null;
function $rt_voidcls() {
    if ($rt_voidclsCache === null) {
        $rt_voidclsCache = $rt_createPrimitiveCls("void", "V");
    }
    return $rt_voidclsCache;
}
function $rt_throw(ex) {
    throw $rt_exception(ex);
}
var $rt_javaExceptionProp = $rt_globals.Symbol("javaException");
function $rt_exception(ex) {
    var err = ex.$jsException;
    if (!err) {
        var javaCause = $rt_throwableCause(ex);
        var jsCause = javaCause !== null ? javaCause.$jsException : $rt_globals.undefined;
        var cause = typeof jsCause === "object" ? { cause : jsCause } : $rt_globals.undefined;
        err = new JavaError("Java exception thrown", cause);
        if (typeof $rt_globals.Error.captureStackTrace === "function") {
            $rt_globals.Error.captureStackTrace(err);
        }
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return err;
}
function $rt_fillStack(err, ex) {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        var stack = $rt_decodeStack(err.stack);
        var javaStack = $rt_createArray($rt_stecls(), stack.length);
        var elem;
        var noStack = false;
        for (var i = 0;i < stack.length;++i) {
            var element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
}
function $rt_createMultiArray(cls, dimensions) {
    var first = 0;
    for (var i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, first));
    var firstDim = dimensions[first] | 0;
    for (i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
}
function $rt_createByteMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_bytecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createByteArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_bytecls(), arrays, dimensions);
}
function $rt_createCharMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_charcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createCharArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_charcls(), arrays, dimensions, 0);
}
function $rt_createBooleanMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_booleancls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createBooleanArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_booleancls(), arrays, dimensions, 0);
}
function $rt_createShortMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_shortcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createShortArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_shortcls(), arrays, dimensions, 0);
}
function $rt_createIntMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_intcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createIntArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_intcls(), arrays, dimensions, 0);
}
function $rt_createLongMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_longcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createLongArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_longcls(), arrays, dimensions, 0);
}
function $rt_createFloatMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_floatcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createFloatArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_floatcls(), arrays, dimensions, 0);
}
function $rt_createDoubleMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_doublecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createDoubleArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_doublecls(), arrays, dimensions, 0);
}
function $rt_primitiveArrayCount(dimensions, start) {
    var val = dimensions[start + 1] | 0;
    for (var i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
}
function $rt_createMultiArrayImpl(cls, arrays, dimensions, start) {
    var limit = arrays.length;
    for (var i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        var dim = dimensions[i];
        var index = 0;
        var packedIndex = 0;
        while (index < limit) {
            var arr = $rt_createUnfilledArray(cls, dim);
            for (var j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
}
function $rt_assertNotNaN(value) {
    if (typeof value === 'number' && $rt_globals.isNaN(value)) {
        throw "NaN";
    }
    return value;
}
function $rt_createOutputFunction(printFunction) {
    var buffer = "";
    var utf8Buffer = 0;
    var utf8Remaining = 0;
    function putCodePoint(ch) {
        if (ch === 0xA) {
            printFunction(buffer);
            buffer = "";
        } else if (ch < 0x10000) {
            buffer += $rt_globals.String.fromCharCode(ch);
        } else {
            ch = ch - 0x10000 | 0;
            var hi = (ch >> 10) + 0xD800;
            var lo = (ch & 0x3FF) + 0xDC00;
            buffer += $rt_globals.String.fromCharCode(hi, lo);
        }
    }
    return function(ch) {
        if ((ch & 0x80) === 0) {
            putCodePoint(ch);
        } else if ((ch & 0xC0) === 0x80) {
            if (utf8Buffer > 0) {
                utf8Remaining <<= 6;
                utf8Remaining |= ch & 0x3F;
                if ( --utf8Buffer === 0) {
                    putCodePoint(utf8Remaining);
                }
            }
        } else if ((ch & 0xE0) === 0xC0) {
            utf8Remaining = ch & 0x1F;
            utf8Buffer = 1;
        } else if ((ch & 0xF0) === 0xE0) {
            utf8Remaining = ch & 0x0F;
            utf8Buffer = 2;
        } else if ((ch & 0xF8) === 0xF0) {
            utf8Remaining = ch & 0x07;
            utf8Buffer = 3;
        }
    };
}
var $rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof $rt_globals.console === "object" ? $rt_createOutputFunction(function(msg) {
    $rt_globals.console.info(msg);
}) : function() {
};
var $rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof $rt_globals.console === "object" ? $rt_createOutputFunction(function(msg) {
    $rt_globals.console.error(msg);
}) : function() {
};
var $rt_packageData = null;
function $rt_packages(data) {
    var i = 0;
    var packages = new $rt_globals.Array(data.length);
    for (var j = 0;j < data.length;++j) {
        var prefixIndex = data[i++];
        var prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
}
function $rt_metadata(data) {
    var packages = $rt_packageData;
    var i = 0;
    while (i < data.length) {
        var cls = data[i++];
        cls.$meta = {  };
        var m = cls.$meta;
        var className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            var packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        var superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = $rt_globals.Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        var flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        var innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            var enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            var declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            var simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        var clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        var virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (var j = 0;j < virtualMethods.length;j += 2) {
                var name = virtualMethods[j];
                var func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (var k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
}
function $rt_wrapFunction0(f) {
    return function() {
        return f(this);
    };
}
function $rt_wrapFunction1(f) {
    return function(p1) {
        return f(this, p1);
    };
}
function $rt_wrapFunction2(f) {
    return function(p1, p2) {
        return f(this, p1, p2);
    };
}
function $rt_wrapFunction3(f) {
    return function(p1, p2, p3) {
        return f(this, p1, p2, p3, p3);
    };
}
function $rt_wrapFunction4(f) {
    return function(p1, p2, p3, p4) {
        return f(this, p1, p2, p3, p4);
    };
}
function $rt_threadStarter(f) {
    return function() {
        var args = $rt_globals.Array.prototype.slice.apply(arguments);
        $rt_startThread(function() {
            f.apply(this, args);
        });
    };
}
function $rt_mainStarter(f) {
    return function(args, callback) {
        if (!args) {
            args = [];
        }
        var javaArgs = $rt_createArray($rt_objcls(), args.length);
        for (var i = 0;i < args.length;++i) {
            javaArgs.data[i] = $rt_str(args[i]);
        }
        $rt_startThread(function() {
            f.call(null, javaArgs);
        }, callback);
    };
}
var $rt_stringPool_instance;
function $rt_stringPool(strings) {
    $rt_stringPool_instance = new $rt_globals.Array(strings.length);
    for (var i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
}
function $rt_s(index) {
    return $rt_stringPool_instance[index];
}
function $rt_eraseClinit(target) {
    return target.$clinit = function() {
    };
}
var $rt_numberConversionView = new $rt_globals.DataView(new $rt_globals.ArrayBuffer(8));
var $rt_doubleToLongBits;
var $rt_longBitsToDouble;
if (typeof $rt_globals.BigInt !== 'function') {
    $rt_doubleToLongBits = function(n) {
        $rt_numberConversionView.setFloat64(0, n, true);
        return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
    };
    $rt_longBitsToDouble = function(n) {
        $rt_numberConversionView.setInt32(0, n.lo, true);
        $rt_numberConversionView.setInt32(4, n.hi, true);
        return $rt_numberConversionView.getFloat64(0, true);
    };
} else {
    $rt_doubleToLongBits = function(n) {
        $rt_numberConversionView.setFloat64(0, n, true);
        var lo = $rt_numberConversionView.getInt32(0, true);
        var hi = $rt_numberConversionView.getInt32(4, true);
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(32, $rt_globals.BigInt(lo)) | $rt_globals.BigInt(hi) << $rt_globals.BigInt(32));
    };
    $rt_longBitsToDouble = function(n) {
        var hi = $rt_globals.Number($rt_globals.BigInt.asIntN(32, n >> $rt_globals.BigInt(32)));
        var lo = $rt_globals.Number($rt_globals.BigInt.asIntN(32, n & $rt_globals.BigInt(0xFFFFFFFF)));
        $rt_numberConversionView.setInt32(0, lo, true);
        $rt_numberConversionView.setInt32(4, hi, true);
        return $rt_numberConversionView.getFloat64(0, true);
    };
}
function $rt_floatToIntBits(n) {
    $rt_numberConversionView.setFloat32(0, n);
    return $rt_numberConversionView.getInt32(0);
}
function $rt_intBitsToFloat(n) {
    $rt_numberConversionView.setInt32(0, n);
    return $rt_numberConversionView.getFloat32(0);
}
var JavaError;
if (typeof $rt_globals.Reflect === 'object') {
    var defaultMessage = $rt_globals.Symbol("defaultMessage");
    JavaError = function JavaError(message, cause) {
        var self = $rt_globals.Reflect.construct($rt_globals.Error, [$rt_globals.undefined, cause], JavaError);
        $rt_globals.Object.setPrototypeOf(self, JavaError.prototype);
        self[defaultMessage] = message;
        return self;
    };
    JavaError.prototype = $rt_globals.Object.create($rt_globals.Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get : function() {
        try {
            var javaException = this[$rt_javaExceptionProp];
            if (typeof javaException === 'object') {
                var javaMessage = $rt_throwableMessage(javaException);
                if (typeof javaMessage === "object") {
                    return javaMessage !== null ? javaMessage.toString() : null;
                }
            }
            return this[defaultMessage];
        } catch (e){
            return "Exception occurred trying to extract Java exception message: " + e;
        }
    } } });
} else {
    JavaError = $rt_globals.Error;
}
function $rt_javaException(e) {
    return e instanceof $rt_globals.Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null;
}
function $rt_jsException(e) {
    return typeof e.$jsException === 'object' ? e.$jsException : null;
}
function $rt_wrapException(err) {
    var ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
}
function $dbg_class(obj) {
    var cls = obj.constructor;
    var arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    var clsName = "";
    if (cls === $rt_booleancls()) {
        clsName = "boolean";
    } else if (cls === $rt_bytecls()) {
        clsName = "byte";
    } else if (cls === $rt_shortcls()) {
        clsName = "short";
    } else if (cls === $rt_charcls()) {
        clsName = "char";
    } else if (cls === $rt_intcls()) {
        clsName = "int";
    } else if (cls === $rt_longcls()) {
        clsName = "long";
    } else if (cls === $rt_floatcls()) {
        clsName = "float";
    } else if (cls === $rt_doublecls()) {
        clsName = "double";
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
}
function Long(lo, hi) {
    this.lo = lo | 0;
    this.hi = hi | 0;
}
Long.prototype.__teavm_class__ = function() {
    return "long";
};
function Long_isPositive(a) {
    return (a.hi & 0x80000000) === 0;
}
function Long_isNegative(a) {
    return (a.hi & 0x80000000) !== 0;
}
var Long_MAX_NORMAL = 1 << 18;
var Long_ZERO;
var Long_create;
var Long_fromInt;
var Long_fromNumber;
var Long_toNumber;
var Long_hi;
var Long_lo;
if (typeof $rt_globals.BigInt !== "function") {
    Long.prototype.toString = function() {
        var result = [];
        var n = this;
        var positive = Long_isPositive(n);
        if (!positive) {
            n = Long_neg(n);
        }
        var radix = new Long(10, 0);
        do  {
            var divRem = Long_divRem(n, radix);
            result.push($rt_globals.String.fromCharCode(48 + divRem[1].lo));
            n = divRem[0];
        }while (n.lo !== 0 || n.hi !== 0);
        result = (result.reverse()).join('');
        return positive ? result : "-" + result;
    };
    Long.prototype.valueOf = function() {
        return Long_toNumber(this);
    };
    Long_ZERO = new Long(0, 0);
    Long_fromInt = function(val) {
        return new Long(val,  -(val < 0) | 0);
    };
    Long_fromNumber = function(val) {
        if (val >= 0) {
            return new Long(val | 0, val / 0x100000000 | 0);
        } else {
            return Long_neg(new Long( -val | 0,  -val / 0x100000000 | 0));
        }
    };
    Long_create = function(lo, hi) {
        return new Long(lo, hi);
    };
    Long_toNumber = function(val) {
        return 0x100000000 * val.hi + (val.lo >>> 0);
    };
    Long_hi = function(val) {
        return val.hi;
    };
    Long_lo = function(val) {
        return val.lo;
    };
} else {
    Long_ZERO = $rt_globals.BigInt(0);
    Long_create = function(lo, hi) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(32, $rt_globals.BigInt(lo)) | $rt_globals.BigInt(hi) << $rt_globals.BigInt(32));
    };
    Long_fromInt = function(val) {
        return $rt_globals.BigInt(val);
    };
    Long_fromNumber = function(val) {
        return $rt_globals.BigInt(val >= 0 ? $rt_globals.Math.floor(val) : $rt_globals.Math.ceil(val));
    };
    Long_toNumber = function(val) {
        return $rt_globals.Number(val);
    };
    Long_hi = function(val) {
        return $rt_globals.Number($rt_globals.BigInt.asIntN(64, val >> $rt_globals.BigInt(32))) | 0;
    };
    Long_lo = function(val) {
        return $rt_globals.Number($rt_globals.BigInt.asIntN(32, val)) | 0;
    };
}
var $rt_imul = $rt_globals.Math.imul || function(a, b) {
    var ah = a >>> 16 & 0xFFFF;
    var al = a & 0xFFFF;
    var bh = b >>> 16 & 0xFFFF;
    var bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
};
var $rt_udiv = function(a, b) {
    return (a >>> 0) / (b >>> 0) >>> 0;
};
var $rt_umod = function(a, b) {
    return (a >>> 0) % (b >>> 0) >>> 0;
};
var $rt_ucmp = function(a, b) {
    a >>>= 0;
    b >>>= 0;
    return a < b ?  -1 : a > b ? 1 : 0;
};
function $rt_checkBounds(index, array) {
    if (index < 0 || index >= array.length) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_checkUpperBound(index, array) {
    if (index >= array.length) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_checkLowerBound(index) {
    if (index < 0) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_classWithoutFields(superclass) {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
}
function $rt_setCloneMethod(target, f) {
    target.$clone = f;
}
function $rt_cls(cls) {
    return jl_Class_getClass(cls);
}
function $rt_str(str) {
    if (str === null) {
        return null;
    }
    var characters = $rt_createCharArray(str.length);
    var charsBuffer = characters.data;
    for (var i = 0; i < str.length; i = (i + 1) | 0) {
        charsBuffer[i] = str.charCodeAt(i) & 0xFFFF;
    }
    return jl_String__init_(characters);
}
function $rt_ustr(str) {
    if (str === null) {
        return null;
    }
    var data = str.$characters.data;
    var result = "";
    for (var i = 0; i < data.length; i = (i + 1) | 0) {
        result += String.fromCharCode(data[i]);
    }
    return result;
}
function $rt_objcls() { return jl_Object; }
function $rt_stecls() {
    return jl_Object;
}
function $rt_throwableMessage(t) {
    return jl_Throwable_getMessage(t);
}
function $rt_throwableCause(t) {
    return jl_Throwable_getCause(t);
}
function $rt_nullCheck(val) {
    if (val === null) {
        $rt_throw(jl_NullPointerException__init_());
    }
    return val;
}
function $rt_intern(str) {
    return str;
}
function $rt_getThread() {
    return jl_Thread_currentThread();
}
function $rt_setThread(t) {
    return jl_Thread_setCurrentThread(t);
}
function $rt_createException(message) {
    return jl_RuntimeException__init_(message);
}
function $rt_createStackElement(className, methodName, fileName, lineNumber) {
    return null;
}
function $rt_setStack(e, stack) {
}
function $rt_throwAIOOBE() {
}
function $rt_throwCCE() {
}
var $java = Object.create(null);
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
function jl_Object__init_() {
    var var_0 = new jl_Object();
    jl_Object__init_0(var_0);
    return var_0;
}
function jl_Object_monitorEnterSync($o) {
    var var$2;
    if ($o.$monitor === null) {
        var$2 = new jl_Object$Monitor;
        jl_Thread_$callClinit();
        var$2.$owner = jl_Thread_currentThread0;
        $o.$monitor = var$2;
    }
    $o = $o.$monitor;
    var$2 = $o.$owner;
    if (var$2 === null) {
        jl_Thread_$callClinit();
        $o.$owner = jl_Thread_currentThread0;
    } else {
        jl_Thread_$callClinit();
        if (var$2 !== jl_Thread_currentThread0) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = $rt_s(0);
            $rt_throw(var$2);
        }
    }
    $o.$count = $o.$count + 1 | 0;
}
function jl_Object_monitorExitSync($o) {
    var var$2, var$3, var$4;
    if (!jl_Object_isEmptyMonitor($o)) {
        var$2 = $o.$monitor;
        var$3 = var$2.$owner;
        jl_Thread_$callClinit();
        if (var$3 === jl_Thread_currentThread0) {
            var$4 = var$2.$count - 1 | 0;
            var$2.$count = var$4;
            if (!var$4)
                var$2.$owner = null;
            jl_Object_isEmptyMonitor($o);
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    $o.$suppressionEnabled = 1;
    $o.$writableStackTrace = 1;
    $rt_throw($o);
}
function jl_Object_monitorEnter($o) {
    jl_Object_monitorEnter0($o, 1);
}
function jl_Object_monitorEnter0($o, $count) {
    var var$3, var$4, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null) {
            var$3 = new jl_Object$Monitor;
            jl_Thread_$callClinit();
            var$3.$owner = jl_Thread_currentThread0;
            $o.$monitor = var$3;
        }
        var$3 = $o.$monitor;
        if (var$3.$owner === null) {
            jl_Thread_$callClinit();
            var$3.$owner = jl_Thread_currentThread0;
        }
        var$4 = var$3.$owner;
        jl_Thread_$callClinit();
        if (var$4 === jl_Thread_currentThread0) {
            var$3.$count = var$3.$count + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, var$4, $ptr);
}
function jl_Object_monitorEnterWait(var$1, var$2) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Object_monitorEnterWait0($o, $count, $callback) {
    var $thread_0, $monitor, var$6;
    jl_Thread_$callClinit();
    $thread_0 = jl_Thread_currentThread0;
    $monitor = $o.$monitor;
    if ($monitor === null) {
        $monitor = new jl_Object$Monitor;
        $monitor.$owner = $thread_0;
        $o.$monitor = $monitor;
        if ($thread_0 !== $thread_0)
            jl_Thread_currentThread0 = $thread_0;
        jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        $callback.$realAsyncCallback.$complete($o);
        return;
    }
    if ($monitor.$owner === null) {
        $monitor.$owner = $thread_0;
        if ($thread_0 !== $thread_0)
            jl_Thread_currentThread0 = $thread_0;
        jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        $callback.$realAsyncCallback.$complete($o);
        return;
    }
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueueJs$js_body$_30();
    $monitor = $monitor.$enteringThreads;
    var$6 = new jl_Object$monitorEnterWait$lambda$_6_0;
    var$6.$_0 = $thread_0;
    var$6.$_1 = $o;
    var$6.$_2 = $count;
    var$6.$_3 = $callback;
    $callback = var$6;
    $monitor.push($callback);
}
function jl_Object_monitorExit($o) {
    jl_Object_monitorExit0($o, 1);
}
function jl_Object_monitorExit0($o, $count) {
    var $monitor, var$4;
    if (!jl_Object_isEmptyMonitor($o)) {
        $monitor = $o.$monitor;
        var$4 = $monitor.$owner;
        jl_Thread_$callClinit();
        if (var$4 === jl_Thread_currentThread0) {
            $count = $monitor.$count - $count | 0;
            $monitor.$count = $count;
            if ($count > 0)
                return;
            $monitor.$owner = null;
            $monitor = $monitor.$enteringThreads;
            if ($monitor !== null && !($monitor.length ? 0 : 1)) {
                $monitor = new jl_Object$monitorExit$lambda$_8_0;
                $monitor.$_00 = $o;
                otp_Platform_schedule($monitor, 0);
            } else
                jl_Object_isEmptyMonitor($o);
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    $o.$suppressionEnabled = 1;
    $o.$writableStackTrace = 1;
    $rt_throw($o);
}
function jl_Object_isEmptyMonitor($this) {
    var $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        if ($monitor.$owner === null) {
            var$2 = $monitor.$enteringThreads;
            if (!(var$2 !== null && !(var$2.length ? 0 : 1))) {
                $monitor = $monitor.$notifyListeners;
                if ($monitor === null)
                    break a;
                if ($monitor.length ? 0 : 1)
                    break a;
            }
        }
        return 0;
    }
    $this.$monitor = null;
    return 1;
}
function jl_Object__init_0($this) {}
function jl_Object_getClass($this) {
    var var$1, var$2, var$3;
    var$1 = $this.constructor;
    if (var$1 === null)
        var$2 = null;
    else {
        var$2 = var$1.classObject;
        if (var$2 === null) {
            var$2 = new jl_Class;
            var$2.$platformClass = var$1;
            var$3 = var$2;
            var$1.classObject = var$3;
        }
    }
    return var$2;
}
function jl_Object_hashCode($this) {
    var var$1, var$2;
    var$1 = $this;
    if (!var$1.$id$) {
        var$2 = $rt_nextId();
        var$1.$id$ = var$2;
    }
    return $this.$id$;
}
function jl_Object_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Object_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.constructor;
    if (var$1 === null)
        var$2 = null;
    else {
        var$2 = var$1.classObject;
        if (var$2 === null) {
            var$2 = new jl_Class;
            var$2.$platformClass = var$1;
            var$3 = var$2;
            var$1.classObject = var$3;
        }
    }
    if (var$2.$name === null)
        var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
    var$1 = var$2.$name;
    var$3 = $this;
    if (!var$3.$id$) {
        var$2 = $rt_nextId();
        var$3.$id$ = var$2;
    }
    var$2 = otci_IntegerUtil_toUnsignedLogRadixString($this.$id$, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
    var$5 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
    var$3.$buffer.data[var$5] = 64;
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$1 = new jl_String;
    var$6 = var$3.$buffer;
    var$5 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$5);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$5) {
        var$8[var$9] = var$6.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jl_Object_identity($this) {
    var $platformThis, var$2;
    $platformThis = $this;
    if (!$platformThis.$id$) {
        var$2 = $rt_nextId();
        $platformThis.$id$ = var$2;
    }
    return $this.$id$;
}
function jl_Object_clone($this) {
    var $result, var$2, var$3;
    if (!$rt_isInstance($this, jl_Cloneable) && $this.constructor.$meta.item === null) {
        $result = new jl_CloneNotSupportedException;
        $result.$suppressionEnabled = 1;
        $result.$writableStackTrace = 1;
        $rt_throw($result);
    }
    $result = otp_Platform_clone($this);
    var$2 = $result;
    var$3 = $rt_nextId();
    var$2.$id$ = var$3;
    return $result;
}
function jl_Object_notifyAll($this) {
    var $listeners, $listener, var$3;
    a: {
        $listeners = $this.$monitor;
        if ($listeners !== null) {
            $listener = $listeners.$owner;
            jl_Thread_$callClinit();
            if ($listener === jl_Thread_currentThread0) {
                var$3 = 1;
                break a;
            }
        }
        var$3 = 0;
    }
    if (!var$3) {
        $listeners = new jl_IllegalMonitorStateException;
        $listeners.$suppressionEnabled = 1;
        $listeners.$writableStackTrace = 1;
        $rt_throw($listeners);
    }
    $listeners = $listeners.$notifyListeners;
    if ($listeners === null)
        return;
    while (!($listeners.length ? 0 : 1)) {
        $listener = $listeners.shift();
        if (!$listener.$expired())
            otp_Platform_schedule($listener, 0);
    }
    $this.$monitor.$notifyListeners = null;
}
var cgtt_TeaVMLauncher = $rt_classWithoutFields();
function cgtt_TeaVMLauncher_main($args) {
    var $config;
    $config = new cbgm_Vector2;
    $config.$x = 1.0;
    $config.$y = 0.0;
    cbgm_Vector2_X = $config;
    $config = new cbgm_Vector2;
    $config.$x = 0.0;
    $config.$y = 1.0;
    cbgm_Vector2_Y = $config;
    $config = new cbgm_Vector2;
    $config.$x = 0.0;
    $config.$y = 0.0;
    cbgm_Vector2_Zero = $config;
    cbgss_Group_tmp = new cbgm_Vector2;
    cbgss_InputListener_tmpCoords = new cbgm_Vector2;
    cbgssu_ActorGestureListener_tmpCoords = new cbgm_Vector2;
    cbgssu_ActorGestureListener_tmpCoords2 = new cbgm_Vector2;
    cbgssu_DragScrollListener_tmpCoords = new cbgm_Vector2;
    cbgssu_DragAndDrop_tmpVector = new cbgm_Vector2;
    cbgm_Rectangle_tmp = new cbgm_Rectangle;
    cbgm_Rectangle_tmp2 = new cbgm_Rectangle;
    cbgssu_ClickListener_visualPressedDuration = 0.10000000149011612;
    cbgssu_Skin__clinit_();
    jl_Float_NaN = $rt_globals.NaN;
    jl_Float_TYPE = $rt_cls($rt_floatcls());
    cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
    cbgssu_Window_tmpPosition = new cbgm_Vector2;
    cbgssu_Window_tmpSize = new cbgm_Vector2;
    cbgu_ObjectMap_dummy = new jl_Object;
    jl_AbstractStringBuilder$Constants__clinit_();
    jl_Integer_TYPE = $rt_cls($rt_intcls());
    otcit_FloatAnalyzer__clinit_();
    jl_Character_TYPE = $rt_cls($rt_charcls());
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
    jl_Long_TYPE = $rt_cls($rt_longcls());
    jlr_Modifier__clinit_();
    cbgu_StringBuilder__clinit_();
    jur_AbstractSet_counter = 1;
    cbgssu_TextField_tmp1 = new cbgm_Vector2;
    cbgssu_TextField_tmp2 = new cbgm_Vector2;
    cbgssu_TextField_tmp3 = new cbgm_Vector2;
    cbgssu_TextField_keyRepeatInitialTime = 0.4000000059604645;
    cbgssu_TextField_keyRepeatTime = 0.10000000149011612;
    cbgssu_SelectBox_temp = new cbgm_Vector2;
    cbgssu_Tooltip_tmp = new cbgm_Vector2;
    cbgssu_Tree_tmp = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp1 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp2 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp3 = new cbgm_Vector2;
    cbgm_MathUtils$Sin__clinit_();
    cbgg_Texture__clinit_();
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
    cbgggpv_GradientColorValue_temp = $rt_createFloatArray(3);
    ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
    ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
    $config = new otcic_StdoutOutputStream;
    $config.$buffer0 = $rt_createByteArray(1);
    otcic_StdoutOutputStream_INSTANCE = $config;
    $config = new otcic_StderrOutputStream;
    $config.$buffer0 = $rt_createByteArray(1);
    otcic_StderrOutputStream_INSTANCE = $config;
    jl_Double_NaN = $rt_globals.NaN;
    jl_Double_TYPE = $rt_cls($rt_doublecls());
    otcit_DoubleAnalyzer__clinit_();
    cbgg_Mesh__clinit_();
    $config = new jnc_CoderResult;
    $config.$kind = 0;
    $config.$length0 = 0;
    jnc_CoderResult_UNDERFLOW = $config;
    $config = new jnc_CoderResult;
    $config.$kind = 1;
    $config.$length0 = 0;
    jnc_CoderResult_OVERFLOW = $config;
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
    cbggg_MipMapGenerator_useHWMipMap = 1;
    cgxgbtf_FileDB_INSTANCE = null;
    cgxgbtf_HEXCoder__clinit_();
    $config = new jl_Boolean;
    $config.$value = 1;
    jl_Boolean_TRUE = $config;
    $config = new jl_Boolean;
    $config.$value = 0;
    jl_Boolean_FALSE = $config;
    jl_Boolean_TYPE = $rt_cls($rt_booleancls());
    $config = cgxgbt_TeaApplicationConfiguration__init_($rt_s(2));
    $config.$width = 512;
    $config.$height = 520;
    cgxgbt_TeaApplication__init_(new cgxgbt_TeaApplication, new cgt_SpeedDemo, $config);
}
var cbgssu_UIUtilsEmu = $rt_classWithoutFields();
var cbgssu_UIUtilsEmu_isAndroid = 0;
var cbgssu_UIUtilsEmu_isMac = 0;
var cbgssu_UIUtilsEmu_isWindows = 0;
var cbgssu_UIUtilsEmu_isLinux = 0;
var cbgssu_UIUtilsEmu_isIos = 0;
function cbgssu_UIUtilsEmu_$callClinit() {
    cbgssu_UIUtilsEmu_$callClinit = $rt_eraseClinit(cbgssu_UIUtilsEmu);
    cbgssu_UIUtilsEmu__clinit_();
}
function cbgssu_UIUtilsEmu__clinit_() {
    cbgssu_UIUtilsEmu_isAndroid = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(3));
    cbgssu_UIUtilsEmu_isMac = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(4));
    cbgssu_UIUtilsEmu_isWindows = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(5));
    cbgssu_UIUtilsEmu_isLinux = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(6)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(7)) ? 0 : 1;
    cbgssu_UIUtilsEmu_isIos = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(8)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(9)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(10)) ? 0 : 1;
}
var cbg_InputProcessor = $rt_classWithoutFields(0);
var cbg_InputAdapter = $rt_classWithoutFields();
var cbgu_Disposable = $rt_classWithoutFields(0);
var cbgss_Stage = $rt_classWithoutFields(cbg_InputAdapter);
var cbgu_Pool$Poolable = $rt_classWithoutFields(0);
var cbgss_Event = $rt_classWithoutFields();
var jl_Comparable = $rt_classWithoutFields(0);
var ji_Serializable = $rt_classWithoutFields(0);
function jl_Enum() {
    var a = this; jl_Object.call(a);
    a.$name0 = null;
    a.$ordinal = 0;
}
function jl_Enum_ordinal($this) {
    return $this.$ordinal;
}
function jl_Enum_toString($this) {
    return $this.$name0;
}
var cbgss_Touchable = $rt_classWithoutFields(jl_Enum);
var cbgss_Touchable_enabled = null;
var cbgss_Touchable_disabled = null;
var cbgss_Touchable_childrenOnly = null;
var cbgss_Touchable_$VALUES = null;
function cbgss_Touchable_$callClinit() {
    cbgss_Touchable_$callClinit = $rt_eraseClinit(cbgss_Touchable);
    cbgss_Touchable__clinit_();
}
function cbgss_Touchable__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new cbgss_Touchable;
    cbgss_Touchable_$callClinit();
    var$1.$name0 = $rt_s(11);
    var$1.$ordinal = 0;
    cbgss_Touchable_enabled = var$1;
    var$2 = new cbgss_Touchable;
    var$2.$name0 = $rt_s(12);
    var$2.$ordinal = 1;
    cbgss_Touchable_disabled = var$2;
    var$3 = new cbgss_Touchable;
    var$3.$name0 = $rt_s(13);
    var$3.$ordinal = 2;
    cbgss_Touchable_childrenOnly = var$3;
    cbgss_Touchable_$VALUES = $rt_createArrayFromData(cbgss_Touchable, [var$1, var$2, var$3]);
}
var cbgss_Actor = $rt_classWithoutFields();
var cbgssu_Cullable = $rt_classWithoutFields(0);
var cbgss_Group = $rt_classWithoutFields(cbgss_Actor);
var cbgss_Group_tmp = null;
function cbgss_Group__clinit_() {
    cbgss_Group_tmp = new cbgm_Vector2;
}
var cbgssu_Disableable = $rt_classWithoutFields(0);
var jl_Iterable = $rt_classWithoutFields(0);
var cbgssu_Selection = $rt_classWithoutFields();
var cbgss_EventListener = $rt_classWithoutFields(0);
var cbgss_InputListener = $rt_classWithoutFields();
var cbgss_InputListener_tmpCoords = null;
function cbgss_InputListener__clinit_() {
    cbgss_InputListener_tmpCoords = new cbgm_Vector2;
}
var cbgssu_DragListener = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_DragAndDrop$1 = $rt_classWithoutFields(cbgssu_DragListener);
var cbgssu_FocusListener$FocusEvent$Type = $rt_classWithoutFields(jl_Enum);
var cbgssu_FocusListener$FocusEvent$Type_keyboard = null;
var cbgssu_FocusListener$FocusEvent$Type_scroll = null;
var cbgssu_FocusListener$FocusEvent$Type_$VALUES = null;
function cbgssu_FocusListener$FocusEvent$Type_$callClinit() {
    cbgssu_FocusListener$FocusEvent$Type_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$FocusEvent$Type);
    cbgssu_FocusListener$FocusEvent$Type__clinit_();
}
function cbgssu_FocusListener$FocusEvent$Type__clinit_() {
    var var$1, var$2;
    var$1 = new cbgssu_FocusListener$FocusEvent$Type;
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    var$1.$name0 = $rt_s(14);
    var$1.$ordinal = 0;
    cbgssu_FocusListener$FocusEvent$Type_keyboard = var$1;
    var$2 = new cbgssu_FocusListener$FocusEvent$Type;
    var$2.$name0 = $rt_s(15);
    var$2.$ordinal = 1;
    cbgssu_FocusListener$FocusEvent$Type_scroll = var$2;
    cbgssu_FocusListener$FocusEvent$Type_$VALUES = $rt_createArrayFromData(cbgssu_FocusListener$FocusEvent$Type, [var$1, var$2]);
}
var cbgssu_Drawable = $rt_classWithoutFields(0);
var cbgssu_TransformDrawable = $rt_classWithoutFields(0);
var jl_Runnable = $rt_classWithoutFields(0);
var cbgu_Timer$Task = $rt_classWithoutFields();
var cbgssu_DragScrollListener$1 = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgssu_ArraySelection = $rt_classWithoutFields(cbgssu_Selection);
var cbgssu_ActorGestureListener = $rt_classWithoutFields();
var cbgssu_ActorGestureListener_tmpCoords = null;
var cbgssu_ActorGestureListener_tmpCoords2 = null;
function cbgssu_ActorGestureListener__clinit_() {
    cbgssu_ActorGestureListener_tmpCoords = new cbgm_Vector2;
    cbgssu_ActorGestureListener_tmpCoords2 = new cbgm_Vector2;
}
var cbgssu_DragAndDrop$Source = $rt_classWithoutFields();
var cbgssu_DragAndDrop$Payload = $rt_classWithoutFields();
var cbgi_GestureDetector$GestureListener = $rt_classWithoutFields(0);
var cbgi_GestureDetector$GestureAdapter = $rt_classWithoutFields();
var cbgssu_ActorGestureListener$1 = $rt_classWithoutFields(cbgi_GestureDetector$GestureAdapter);
var cbgssu_FocusListener$FocusEvent = $rt_classWithoutFields(cbgss_Event);
var cbgssu_FocusListener$1 = $rt_classWithoutFields();
var cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = null;
function cbgssu_FocusListener$1_$callClinit() {
    cbgssu_FocusListener$1_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$1);
    cbgssu_FocusListener$1__clinit_();
}
function cbgssu_FocusListener$1__clinit_() {
    var var$1, var$2;
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    var$1 = $rt_createIntArray((cbgssu_FocusListener$FocusEvent$Type_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = var$1;
    var$2[cbgssu_FocusListener$FocusEvent$Type_keyboard.$ordinal] = 1;
    var$2[cbgssu_FocusListener$FocusEvent$Type_scroll.$ordinal] = 2;
}
var cbgssu_DragAndDrop$Target = $rt_classWithoutFields();
var cbgssu_ActorGestureListener$2 = $rt_classWithoutFields();
var cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null;
function cbgssu_ActorGestureListener$2_$callClinit() {
    cbgssu_ActorGestureListener$2_$callClinit = $rt_eraseClinit(cbgssu_ActorGestureListener$2);
    cbgssu_ActorGestureListener$2__clinit_();
}
function cbgssu_ActorGestureListener$2__clinit_() {
    var var$1, var$2;
    cbgss_InputEvent$Type_$callClinit();
    var$1 = $rt_createIntArray((cbgss_InputEvent$Type_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = var$1;
    var$2[cbgss_InputEvent$Type_touchDown.$ordinal] = 1;
    var$2[cbgss_InputEvent$Type_touchUp.$ordinal] = 2;
    var$2[cbgss_InputEvent$Type_touchDragged.$ordinal] = 3;
}
var cbgssu_DragScrollListener$2 = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgssu_BaseDrawable = $rt_classWithoutFields();
var cbgssu_NinePatchDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
var cbgssu_UIUtils = $rt_classWithoutFields();
var cbgssu_UIUtils_isAndroid = 0;
var cbgssu_UIUtils_isMac = 0;
var cbgssu_UIUtils_isWindows = 0;
var cbgssu_UIUtils_isLinux = 0;
var cbgssu_UIUtils_isIos = 0;
function cbgssu_UIUtils_$callClinit() {
    cbgssu_UIUtils_$callClinit = $rt_eraseClinit(cbgssu_UIUtils);
    cbgssu_UIUtils__clinit_();
}
function cbgssu_UIUtils__clinit_() {
    cbgssu_UIUtils_isAndroid = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(3));
    cbgssu_UIUtils_isMac = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(4));
    cbgssu_UIUtils_isWindows = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(5));
    cbgssu_UIUtils_isLinux = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(6)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(7)) ? 0 : 1;
    cbgssu_UIUtils_isIos = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(8)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(9)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(10)) ? 0 : 1;
}
var cbgssu_FocusListener = $rt_classWithoutFields();
var cbgssu_DragScrollListener = $rt_classWithoutFields(cbgssu_DragListener);
var cbgssu_DragScrollListener_tmpCoords = null;
function cbgssu_DragScrollListener__clinit_() {
    cbgssu_DragScrollListener_tmpCoords = new cbgm_Vector2;
}
var cbgssu_DragAndDrop = $rt_classWithoutFields();
var cbgssu_DragAndDrop_tmpVector = null;
function cbgssu_DragAndDrop__clinit_() {
    cbgssu_DragAndDrop_tmpVector = new cbgm_Vector2;
}
var cbgssu_ScissorStack = $rt_classWithoutFields();
var cbgssu_ScissorStack_scissors = null;
var cbgssu_ScissorStack_tmp = null;
var cbgssu_ScissorStack_viewport = null;
function cbgssu_ScissorStack_$callClinit() {
    cbgssu_ScissorStack_$callClinit = $rt_eraseClinit(cbgssu_ScissorStack);
    cbgssu_ScissorStack__clinit_();
}
function cbgssu_ScissorStack__clinit_() {
    var var$1;
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 16);
    cbgssu_ScissorStack_scissors = var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgssu_ScissorStack_tmp = var$1;
    cbgssu_ScissorStack_viewport = new cbgm_Rectangle;
}
var cbgssu_ChangeListener = $rt_classWithoutFields();
var cbgssu_TextureRegionDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
var cbgssu_SpriteDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
var cbgssu_ClickListener = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_ClickListener_visualPressedDuration = 0.0;
function cbgssu_ClickListener__clinit_() {
    cbgssu_ClickListener_visualPressedDuration = 0.10000000149011612;
}
var cbgssu_TiledDrawable = $rt_classWithoutFields(cbgssu_TextureRegionDrawable);
var cbgssu_ChangeListener$ChangeEvent = $rt_classWithoutFields(cbgss_Event);
var cbgssu_Layout = $rt_classWithoutFields(0);
var cbgss_InputEvent = $rt_classWithoutFields(cbgss_Event);
var cbgss_Stage$TouchFocus = $rt_classWithoutFields();
var cbgss_InputListener$1 = $rt_classWithoutFields();
var cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null;
function cbgss_InputListener$1_$callClinit() {
    cbgss_InputListener$1_$callClinit = $rt_eraseClinit(cbgss_InputListener$1);
    cbgss_InputListener$1__clinit_();
}
function cbgss_InputListener$1__clinit_() {
    var var$1, var$2;
    cbgss_InputEvent$Type_$callClinit();
    var$1 = $rt_createIntArray((cbgss_InputEvent$Type_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = var$1;
    var$2[cbgss_InputEvent$Type_keyDown.$ordinal] = 1;
    var$2[cbgss_InputEvent$Type_keyUp.$ordinal] = 2;
    var$2[cbgss_InputEvent$Type_keyTyped.$ordinal] = 3;
    var$2[cbgss_InputEvent$Type_touchDown.$ordinal] = 4;
    var$2[cbgss_InputEvent$Type_touchUp.$ordinal] = 5;
    var$2[cbgss_InputEvent$Type_touchDragged.$ordinal] = 6;
    var$2[cbgss_InputEvent$Type_mouseMoved.$ordinal] = 7;
    var$2[cbgss_InputEvent$Type_scrolled.$ordinal] = 8;
    var$2[cbgss_InputEvent$Type_enter.$ordinal] = 9;
    var$2[cbgss_InputEvent$Type_exit.$ordinal] = 10;
}
var cbgss_InputEvent$Type = $rt_classWithoutFields(jl_Enum);
var cbgss_InputEvent$Type_touchDown = null;
var cbgss_InputEvent$Type_touchUp = null;
var cbgss_InputEvent$Type_touchDragged = null;
var cbgss_InputEvent$Type_mouseMoved = null;
var cbgss_InputEvent$Type_enter = null;
var cbgss_InputEvent$Type_exit = null;
var cbgss_InputEvent$Type_scrolled = null;
var cbgss_InputEvent$Type_keyDown = null;
var cbgss_InputEvent$Type_keyUp = null;
var cbgss_InputEvent$Type_keyTyped = null;
var cbgss_InputEvent$Type_$VALUES = null;
function cbgss_InputEvent$Type_$callClinit() {
    cbgss_InputEvent$Type_$callClinit = $rt_eraseClinit(cbgss_InputEvent$Type);
    cbgss_InputEvent$Type__clinit_();
}
function cbgss_InputEvent$Type__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = new cbgss_InputEvent$Type;
    cbgss_InputEvent$Type_$callClinit();
    var$1.$name0 = $rt_s(16);
    var$1.$ordinal = 0;
    cbgss_InputEvent$Type_touchDown = var$1;
    var$2 = new cbgss_InputEvent$Type;
    var$2.$name0 = $rt_s(17);
    var$2.$ordinal = 1;
    cbgss_InputEvent$Type_touchUp = var$2;
    var$3 = new cbgss_InputEvent$Type;
    var$3.$name0 = $rt_s(18);
    var$3.$ordinal = 2;
    cbgss_InputEvent$Type_touchDragged = var$3;
    var$4 = new cbgss_InputEvent$Type;
    var$4.$name0 = $rt_s(19);
    var$4.$ordinal = 3;
    cbgss_InputEvent$Type_mouseMoved = var$4;
    var$5 = new cbgss_InputEvent$Type;
    var$5.$name0 = $rt_s(20);
    var$5.$ordinal = 4;
    cbgss_InputEvent$Type_enter = var$5;
    var$6 = new cbgss_InputEvent$Type;
    var$6.$name0 = $rt_s(21);
    var$6.$ordinal = 5;
    cbgss_InputEvent$Type_exit = var$6;
    var$7 = new cbgss_InputEvent$Type;
    var$7.$name0 = $rt_s(22);
    var$7.$ordinal = 6;
    cbgss_InputEvent$Type_scrolled = var$7;
    var$8 = new cbgss_InputEvent$Type;
    var$8.$name0 = $rt_s(23);
    var$8.$ordinal = 7;
    cbgss_InputEvent$Type_keyDown = var$8;
    var$9 = new cbgss_InputEvent$Type;
    var$9.$name0 = $rt_s(24);
    var$9.$ordinal = 8;
    cbgss_InputEvent$Type_keyUp = var$9;
    var$10 = new cbgss_InputEvent$Type;
    var$10.$name0 = $rt_s(25);
    var$10.$ordinal = 9;
    cbgss_InputEvent$Type_keyTyped = var$10;
    cbgss_InputEvent$Type_$VALUES = $rt_createArrayFromData(cbgss_InputEvent$Type, [var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10]);
}
var cbgss_Action = $rt_classWithoutFields();
var cbgssa_DelegateAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_TimeScaleAction = $rt_classWithoutFields(cbgssa_DelegateAction);
var cbgssa_DelayAction = $rt_classWithoutFields(cbgssa_DelegateAction);
var cbgssa_TemporalAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_RelativeTemporalAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_SizeByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
var cbgssa_EventAction$1 = $rt_classWithoutFields();
var cbgssa_ParallelAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_SequenceAction = $rt_classWithoutFields(cbgssa_ParallelAction);
var cbgssa_RemoveListenerAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_AddListenerAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_TouchableAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_Actions = $rt_classWithoutFields();
var cbgssa_EventAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_CountdownEventAction = $rt_classWithoutFields(cbgssa_EventAction);
var cbgssa_MoveToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_ScaleToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_RotateByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
var cbgssa_VisibleAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_ScaleByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
var cbgssa_IntAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_ColorAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_RunnableAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_SizeToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_LayoutAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_RemoveActorAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_AfterAction = $rt_classWithoutFields(cbgssa_DelegateAction);
var cbgssa_FloatAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_RemoveAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_MoveByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
var cbgssa_RepeatAction = $rt_classWithoutFields(cbgssa_DelegateAction);
var cbgssa_AddAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_RotateToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_AlphaAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssu_Skin = $rt_classWithoutFields();
var cbgssu_Skin_defaultTagClasses = null;
function cbgssu_Skin__clinit_() {
    cbgssu_Skin_defaultTagClasses = $rt_createArrayFromData(jl_Class, [$rt_cls(cbggg_BitmapFont), $rt_cls(cbgg_Color), $rt_cls(cbgssu_Skin$TintedDrawable), $rt_cls(cbgssu_NinePatchDrawable), $rt_cls(cbgssu_SpriteDrawable), $rt_cls(cbgssu_TextureRegionDrawable), $rt_cls(cbgssu_TiledDrawable), $rt_cls(cbgssu_Button$ButtonStyle), $rt_cls(cbgssu_CheckBox$CheckBoxStyle), $rt_cls(cbgssu_ImageButton$ImageButtonStyle), $rt_cls(cbgssu_ImageTextButton$ImageTextButtonStyle), $rt_cls(cbgssu_Label$LabelStyle), $rt_cls(cbgssu_List$ListStyle),
    $rt_cls(cbgssu_ProgressBar$ProgressBarStyle), $rt_cls(cbgssu_ScrollPane$ScrollPaneStyle), $rt_cls(cbgssu_SelectBox$SelectBoxStyle), $rt_cls(cbgssu_Slider$SliderStyle), $rt_cls(cbgssu_SplitPane$SplitPaneStyle), $rt_cls(cbgssu_TextButton$TextButtonStyle), $rt_cls(cbgssu_TextField$TextFieldStyle), $rt_cls(cbgssu_TextTooltip$TextTooltipStyle), $rt_cls(cbgssu_Touchpad$TouchpadStyle), $rt_cls(cbgssu_Tree$TreeStyle), $rt_cls(cbgssu_Window$WindowStyle)]);
}
var cbgssu_WidgetGroup = $rt_classWithoutFields(cbgss_Group);
var cbgssu_Table = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_Table_debugTableColor = null;
var cbgssu_Table_debugCellColor = null;
var cbgssu_Table_debugActorColor = null;
var cbgssu_Table_cellPool = null;
var cbgssu_Table_backgroundTop = null;
var cbgssu_Table_backgroundLeft = null;
var cbgssu_Table_backgroundBottom = null;
var cbgssu_Table_backgroundRight = null;
function cbgssu_Table_$callClinit() {
    cbgssu_Table_$callClinit = $rt_eraseClinit(cbgssu_Table);
    cbgssu_Table__clinit_();
}
function cbgssu_Table__clinit_() {
    var var$1, var$2;
    var$1 = new cbgg_Color;
    cbgg_Color_$callClinit();
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgssu_Table_debugTableColor = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 0.0;
    var$1.$b = 0.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgssu_Table_debugCellColor = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 1.0;
    var$1.$b = 0.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgssu_Table_debugActorColor = var$1;
    var$1 = new cbgssu_Table$1;
    var$2 = new cbgu_Array;
    var$2.$ordered = 0;
    var$2.$items = $rt_createArray(jl_Object, 16);
    var$1.$freeObjects = var$2;
    var$1.$max = 2147483647;
    cbgssu_Table_cellPool = var$1;
    var$1 = new cbgssu_Table$2;
    cbgssu_Value_$callClinit();
    cbgssu_Table_backgroundTop = var$1;
    cbgssu_Table_backgroundLeft = new cbgssu_Table$3;
    cbgssu_Table_backgroundBottom = new cbgssu_Table$4;
    cbgssu_Table_backgroundRight = new cbgssu_Table$5;
}
var cbgssu_Button = $rt_classWithoutFields(cbgssu_Table);
var cbgssu_TextButton = $rt_classWithoutFields(cbgssu_Button);
var cbgssu_CheckBox = $rt_classWithoutFields(cbgssu_TextButton);
var cbgssu_Dialog$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Container = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgu_Json$Serializer = $rt_classWithoutFields(0);
var cbgu_Json$ReadOnlySerializer = $rt_classWithoutFields();
var cbgssu_Skin$2 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_Widget = $rt_classWithoutFields(cbgss_Actor);
var cbgssu_Touchpad = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_Dialog$4 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Value = $rt_classWithoutFields();
var cbgssu_Value_zero = null;
var cbgssu_Value_minWidth = null;
var cbgssu_Value_minHeight = null;
var cbgssu_Value_prefWidth = null;
var cbgssu_Value_prefHeight = null;
var cbgssu_Value_maxWidth = null;
var cbgssu_Value_maxHeight = null;
function cbgssu_Value_$callClinit() {
    cbgssu_Value_$callClinit = $rt_eraseClinit(cbgssu_Value);
    cbgssu_Value__clinit_();
}
function cbgssu_Value__clinit_() {
    var var$1;
    var$1 = new cbgssu_Value$Fixed;
    cbgssu_Value_$callClinit();
    var$1.$value0 = 0.0;
    cbgssu_Value_zero = var$1;
    cbgssu_Value_minWidth = new cbgssu_Value$1;
    cbgssu_Value_minHeight = new cbgssu_Value$2;
    cbgssu_Value_prefWidth = new cbgssu_Value$3;
    cbgssu_Value_prefHeight = new cbgssu_Value$4;
    cbgssu_Value_maxWidth = new cbgssu_Value$5;
    cbgssu_Value_maxHeight = new cbgssu_Value$6;
}
var cbgssu_Value$4 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Value$7 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_TextField$TextFieldClickListener = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgssu_TextArea$TextAreaListener = $rt_classWithoutFields(cbgssu_TextField$TextFieldClickListener);
var cbgssu_Table$3 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_SelectBox$SelectBoxScrollPane$2 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Window = $rt_classWithoutFields(cbgssu_Table);
var cbgssu_Window_tmpPosition = null;
var cbgssu_Window_tmpSize = null;
function cbgssu_Window__clinit_() {
    cbgssu_Window_tmpPosition = new cbgm_Vector2;
    cbgssu_Window_tmpSize = new cbgm_Vector2;
}
var cbgssu_Value$9 = $rt_classWithoutFields(cbgssu_Value);
var cbgm_Shape2D = $rt_classWithoutFields(0);
var cbgm_Rectangle = $rt_classWithoutFields();
var cbgm_Rectangle_tmp = null;
var cbgm_Rectangle_tmp2 = null;
function cbgm_Rectangle__clinit_() {
    cbgm_Rectangle_tmp = new cbgm_Rectangle;
    cbgm_Rectangle_tmp2 = new cbgm_Rectangle;
}
var cbgssu_Table$DebugRect = $rt_classWithoutFields(cbgm_Rectangle);
var cbgssu_Table$DebugRect_pool = null;
function cbgssu_Table$DebugRect_$callClinit() {
    cbgssu_Table$DebugRect_$callClinit = $rt_eraseClinit(cbgssu_Table$DebugRect);
    cbgssu_Table$DebugRect__clinit_();
}
function cbgssu_Table$DebugRect__init_() {
    var var_0 = new cbgssu_Table$DebugRect();
    cbgssu_Table$DebugRect__init_0(var_0);
    return var_0;
}
function cbgssu_Table$DebugRect__init_0($this) {
    cbgssu_Table$DebugRect_$callClinit();
}
function cbgssu_Table$DebugRect__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, $$je;
    cbgu_Pools_$callClinit();
    var$1 = cbgu_Pools_typePools;
    var$2 = cbgu_ObjectMap_locateKey(var$1, $rt_cls(cbgssu_Table$DebugRect));
    var$1 = var$2 < 0 ? null : var$1.$valueTable.data[var$2];
    if (var$1 === null) {
        var$1 = new cbgu_ReflectionPool;
        var$3 = new cbgu_Array;
        var$3.$ordered = 0;
        var$3.$items = $rt_createArray(jl_Object, 4);
        var$1.$freeObjects = var$3;
        var$1.$max = 100;
        a: {
            try {
                var$3 = cbgur_ClassReflection_getConstructor($rt_cls(cbgssu_Table$DebugRect), null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
            try {
                var$3 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbgssu_Table$DebugRect), null);
                cbgur_Constructor_setAccessible(var$3, 1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cbgur_ReflectionException) {
                } else {
                    throw $$e;
                }
            }
            var$3 = null;
        }
        var$1.$constructor = var$3;
        if (var$3 === null) {
            var$1 = new jl_RuntimeException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(26));
            if ($rt_cls(cbgssu_Table$DebugRect).$name === null)
                $rt_cls(cbgssu_Table$DebugRect).$name = $rt_str($rt_cls(cbgssu_Table$DebugRect).$platformClass.$meta.name);
            var$4 = $rt_cls(cbgssu_Table$DebugRect).$name;
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$4);
            var$4 = new jl_String;
            var$5 = var$3.$buffer;
            var$2 = var$3.$length;
            jl_String_$callClinit();
            var$6 = $rt_createCharArray(var$2);
            var$7 = var$6.data;
            var$4.$characters = var$6;
            var$8 = 0;
            while (var$8 < var$2) {
                var$7[var$8] = var$5.data[var$8 + 0 | 0];
                var$8 = var$8 + 1 | 0;
            }
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = var$4;
            $rt_throw(var$1);
        }
        cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbgssu_Table$DebugRect), var$1);
    }
    cbgssu_Table$DebugRect_pool = var$1;
}
var cbgssu_Skin$5 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_TextField = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_TextField_tmp1 = null;
var cbgssu_TextField_tmp2 = null;
var cbgssu_TextField_tmp3 = null;
var cbgssu_TextField_keyRepeatInitialTime = 0.0;
var cbgssu_TextField_keyRepeatTime = 0.0;
function cbgssu_TextField__clinit_() {
    cbgssu_TextField_tmp1 = new cbgm_Vector2;
    cbgssu_TextField_tmp2 = new cbgm_Vector2;
    cbgssu_TextField_tmp3 = new cbgm_Vector2;
    cbgssu_TextField_keyRepeatInitialTime = 0.4000000059604645;
    cbgssu_TextField_keyRepeatTime = 0.10000000149011612;
}
var cbgssu_TextArea = $rt_classWithoutFields(cbgssu_TextField);
var cbgssu_ScrollPane$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_TextField$OnscreenKeyboard = $rt_classWithoutFields(0);
var cbgssu_TextField$DefaultOnscreenKeyboard = $rt_classWithoutFields();
var cbgssu_Button$ButtonStyle = $rt_classWithoutFields();
var cbgssu_TextButton$TextButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle);
var cbgssu_ImageTextButton$ImageTextButtonStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle);
var cbgssu_ProgressBar = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_Slider = $rt_classWithoutFields(cbgssu_ProgressBar);
var cbgssu_Tooltip$1 = $rt_classWithoutFields(cbgssu_Container);
var cbgssu_ScrollPane = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_ImageButton = $rt_classWithoutFields(cbgssu_Button);
var cbgssu_List = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_Table$5 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_TextTooltip$TextTooltipStyle = $rt_classWithoutFields();
var cbgssu_Dialog$4$1 = $rt_classWithoutFields();
var cbgssu_Touchpad$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_TextField$KeyRepeatTask = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgssu_ButtonGroup = $rt_classWithoutFields();
var cbgssu_SplitPane$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Tree$2 = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgssu_ScrollPane$2 = $rt_classWithoutFields(cbgssu_ActorGestureListener);
var cbgssu_Value$6 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Value$5 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_TextField$TextFieldFilter = $rt_classWithoutFields(0);
var cbgssu_ProgressBar$ProgressBarStyle = $rt_classWithoutFields();
var cbgssu_Slider$SliderStyle = $rt_classWithoutFields(cbgssu_ProgressBar$ProgressBarStyle);
var cbgssu_Skin$3 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_Dialog$3 = $rt_classWithoutFields(cbgssu_FocusListener);
var cbgssu_Dialog$2 = $rt_classWithoutFields(cbgssu_ChangeListener);
var cbgssu_SelectBox$SelectBoxScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_SelectBox$SelectBoxScrollPane$1 = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgssu_Table$4 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Cell = $rt_classWithoutFields();
var cbgssu_Cell_zerof = null;
var cbgssu_Cell_onef = null;
var cbgssu_Cell_zeroi = null;
var cbgssu_Cell_onei = null;
var cbgssu_Cell_centeri = null;
var cbgssu_Cell_topi = null;
var cbgssu_Cell_bottomi = null;
var cbgssu_Cell_lefti = null;
var cbgssu_Cell_righti = null;
function cbgssu_Cell_$callClinit() {
    cbgssu_Cell_$callClinit = $rt_eraseClinit(cbgssu_Cell);
    cbgssu_Cell__clinit_();
}
function cbgssu_Cell__clinit_() {
    var var$1;
    var$1 = new jl_Float;
    var$1.$value1 = 0.0;
    cbgssu_Cell_zerof = var$1;
    var$1 = new jl_Float;
    var$1.$value1 = 1.0;
    cbgssu_Cell_onef = var$1;
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_zeroi = jl_Integer_integerCache.data[128];
    jl_Integer_ensureIntegerCache();
    var$1 = jl_Integer_integerCache.data[129];
    cbgssu_Cell_onei = var$1;
    cbgssu_Cell_centeri = var$1;
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_topi = jl_Integer_integerCache.data[130];
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_bottomi = jl_Integer_integerCache.data[132];
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_lefti = jl_Integer_integerCache.data[136];
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_righti = jl_Integer_integerCache.data[144];
}
var cbgssu_CheckBox$CheckBoxStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle);
var cbgssu_List$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_TooltipManager$2 = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgssu_Value$1 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Stack = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_ScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Touchpad$TouchpadStyle = $rt_classWithoutFields();
function cbgssu_Value$Fixed() {
    cbgssu_Value.call(this);
    this.$value0 = 0.0;
}
var cbgssu_Value$Fixed_cache = null;
function cbgssu_Value$Fixed__clinit_() {
    cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
}
var cbgssu_SelectBox$SelectBoxScrollPane = $rt_classWithoutFields(cbgssu_ScrollPane);
var cbgssu_Value$3 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_SelectBox = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_SelectBox_temp = null;
function cbgssu_SelectBox__clinit_() {
    cbgssu_SelectBox_temp = new cbgm_Vector2;
}
var cbgssu_SelectBox$1 = $rt_classWithoutFields(cbgssu_ArraySelection);
var cbgssu_SplitPane$SplitPaneStyle = $rt_classWithoutFields();
var cbgssu_Label = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_Label_tempColor = null;
var cbgssu_Label_prefSizeLayout = null;
function cbgssu_Label_$callClinit() {
    cbgssu_Label_$callClinit = $rt_eraseClinit(cbgssu_Label);
    cbgssu_Label__clinit_();
}
function cbgssu_Label__clinit_() {
    var var$1, var$2;
    var$1 = new cbgg_Color;
    cbgg_Color_$callClinit();
    cbgssu_Label_tempColor = var$1;
    var$1 = new cbggg_GlyphLayout;
    cbggg_GlyphLayout_$callClinit();
    var$2 = new cbgu_Array;
    var$2.$ordered = 1;
    var$2.$items = $rt_createArray(jl_Object, 1);
    var$1.$runs = var$2;
    var$2 = new cbgu_IntArray;
    var$2.$ordered0 = 1;
    var$2.$items0 = $rt_createIntArray(2);
    var$1.$colors = var$2;
    cbgssu_Label_prefSizeLayout = var$1;
}
var cbgssu_Window$WindowStyle = $rt_classWithoutFields();
var cbgssu_Value$8 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Table$2 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Dialog = $rt_classWithoutFields(cbgssu_Window);
var cbgssu_Value$2 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Label$LabelStyle = $rt_classWithoutFields();
var cbgssu_TooltipManager = $rt_classWithoutFields();
var cbgssu_Table$Debug = $rt_classWithoutFields(jl_Enum);
var cbgssu_Table$Debug_none = null;
var cbgssu_Table$Debug_all = null;
var cbgssu_Table$Debug_table = null;
var cbgssu_Table$Debug_cell = null;
var cbgssu_Table$Debug_actor = null;
var cbgssu_Table$Debug_$VALUES = null;
function cbgssu_Table$Debug_$callClinit() {
    cbgssu_Table$Debug_$callClinit = $rt_eraseClinit(cbgssu_Table$Debug);
    cbgssu_Table$Debug__clinit_();
}
function cbgssu_Table$Debug__clinit_() {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new cbgssu_Table$Debug;
    cbgssu_Table$Debug_$callClinit();
    var$1.$name0 = $rt_s(27);
    var$1.$ordinal = 0;
    cbgssu_Table$Debug_none = var$1;
    var$2 = new cbgssu_Table$Debug;
    var$2.$name0 = $rt_s(28);
    var$2.$ordinal = 1;
    cbgssu_Table$Debug_all = var$2;
    var$3 = new cbgssu_Table$Debug;
    var$3.$name0 = $rt_s(29);
    var$3.$ordinal = 2;
    cbgssu_Table$Debug_table = var$3;
    var$4 = new cbgssu_Table$Debug;
    var$4.$name0 = $rt_s(30);
    var$4.$ordinal = 3;
    cbgssu_Table$Debug_cell = var$4;
    var$5 = new cbgssu_Table$Debug;
    var$5.$name0 = $rt_s(31);
    var$5.$ordinal = 4;
    cbgssu_Table$Debug_actor = var$5;
    cbgssu_Table$Debug_$VALUES = $rt_createArrayFromData(cbgssu_Table$Debug, [var$1, var$2, var$3, var$4, var$5]);
}
var cbgssu_Value$10 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_TextField$1 = $rt_classWithoutFields(cbgu_Timer$Task);
function cbgu_Pool() {
    var a = this; jl_Object.call(a);
    a.$max = 0;
    a.$peak = 0;
    a.$freeObjects = null;
}
function cbgu_Pool_obtain($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $$je;
    a: {
        var$1 = $this.$freeObjects;
        var$2 = var$1.$size;
        if (var$2) {
            if (var$2) {
                var$2 = var$2 - 1 | 0;
                var$1.$size = var$2;
                var$3 = var$1.$items.data;
                var$1 = var$3[var$2];
                var$3[var$2] = null;
                break a;
            }
            var$1 = new jl_IllegalStateException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = $rt_s(32);
            $rt_throw(var$1);
        }
        try {
            var$1 = cbgur_Constructor_newInstance($this.$constructor, null);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                var$11 = $$je;
                var$4 = new cbgu_GdxRuntimeException;
                var$1 = new jl_StringBuilder;
                var$1.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(33));
                var$5 = $this.$constructor.$constructor0.$declaringClass;
                if (var$5.$name === null)
                    var$5.$name = $rt_str(var$5.$platformClass.$meta.name);
                var$6 = var$5.$name;
                jl_AbstractStringBuilder_insert(var$1, var$1.$length, var$6);
                var$6 = new jl_String;
                var$7 = var$1.$buffer;
                var$8 = var$1.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray(var$8);
                var$3 = var$9.data;
                var$6.$characters = var$9;
                var$10 = 0;
                while (var$10 < var$8) {
                    var$3[var$10] = var$7.data[var$10 + 0 | 0];
                    var$10 = var$10 + 1 | 0;
                }
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$6;
                var$4.$cause = var$11;
                $rt_throw(var$4);
            } else {
                throw $$e;
            }
        }
    }
    return var$1;
}
function cbgu_Pool_free($this, $object) {
    var var$2, var$3, var$4;
    if ($object === null) {
        $object = new jl_IllegalArgumentException;
        $object.$suppressionEnabled = 1;
        $object.$writableStackTrace = 1;
        $object.$message = $rt_s(34);
        $rt_throw($object);
    }
    var$2 = $this.$freeObjects;
    if (var$2.$size < $this.$max) {
        cbgu_Array_add(var$2, $object);
        var$3 = $this.$peak;
        var$4 = $this.$freeObjects.$size;
        if (var$3 > var$4)
            var$4 = var$3;
        $this.$peak = var$4;
        if ($rt_isInstance($object, cbgu_Pool$Poolable))
            $object.$reset();
    } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
        $object.$reset();
}
function cbgu_Pool_freeAll($this, $objects) {
    var $freeObjects, $max, $i, $n, $object, var$7, var$8, var$9;
    if ($objects === null) {
        $objects = new jl_IllegalArgumentException;
        $objects.$suppressionEnabled = 1;
        $objects.$writableStackTrace = 1;
        $objects.$message = $rt_s(35);
        $rt_throw($objects);
    }
    $freeObjects = $this.$freeObjects;
    $max = $this.$max;
    $i = 0;
    $n = $objects.$size;
    while ($i < $n) {
        if ($i >= $objects.$size) {
            $object = new jl_IndexOutOfBoundsException;
            $freeObjects = new jl_StringBuilder;
            $freeObjects.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($freeObjects, $freeObjects.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0($freeObjects, $freeObjects.$length, $i, 10);
            jl_AbstractStringBuilder_insert($freeObjects, $freeObjects.$length, $rt_s(37));
            $max = $objects.$size;
            jl_AbstractStringBuilder_insert0($freeObjects, $freeObjects.$length, $max, 10);
            $objects = new jl_String;
            var$7 = $freeObjects.$buffer;
            $i = $freeObjects.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray($i);
            var$9 = var$8.data;
            $objects.$characters = var$8;
            $n = 0;
            while ($n < $i) {
                var$9[$n] = var$7.data[$n + 0 | 0];
                $n = $n + 1 | 0;
            }
            $object.$suppressionEnabled = 1;
            $object.$writableStackTrace = 1;
            $object.$message = $objects;
            $rt_throw($object);
        }
        $object = $objects.$items.data[$i];
        if ($object !== null) {
            if ($freeObjects.$size < $max) {
                cbgu_Array_add($freeObjects, $object);
                if ($rt_isInstance($object, cbgu_Pool$Poolable))
                    $object.$reset();
            } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
                $object.$reset();
        }
        $i = $i + 1 | 0;
    }
    $max = $this.$peak;
    $i = $freeObjects.$size;
    if ($max > $i)
        $i = $max;
    $this.$peak = $i;
}
var cbgssu_Table$1 = $rt_classWithoutFields(cbgu_Pool);
var cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter = $rt_classWithoutFields();
var cbgssu_List$ListStyle = $rt_classWithoutFields();
var cbgssu_Skin$TintedDrawable = $rt_classWithoutFields();
var cbgssu_SelectBox$SelectBoxStyle = $rt_classWithoutFields();
var cbgssu_Tooltip = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Tooltip_tmp = null;
function cbgssu_Tooltip__clinit_() {
    cbgssu_Tooltip_tmp = new cbgm_Vector2;
}
var cbgssu_TooltipManager$1 = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgssu_SelectBox$SelectBoxScrollPane$4 = $rt_classWithoutFields(cbgssu_List);
var cbgssu_TextField$TextFieldListener = $rt_classWithoutFields(0);
var cbgssu_List$2 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_VerticalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_SplitPane = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_SelectBox$2 = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgu_Json = $rt_classWithoutFields();
var cbgssu_Skin$1 = $rt_classWithoutFields(cbgu_Json);
var cbgssu_ParticleEffectActor = $rt_classWithoutFields(cbgss_Actor);
var cbgssu_Window$3 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_ImageTextButton = $rt_classWithoutFields(cbgssu_Button);
var cbgssu_Slider$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Button$1 = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgssu_ImageButton$ImageButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle);
var cbgssu_HorizontalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_TextField$TextFieldStyle = $rt_classWithoutFields();
var cbgssu_Tree$TreeStyle = $rt_classWithoutFields();
var cbgssu_Image = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_Tree$1 = $rt_classWithoutFields(cbgssu_Selection);
var cbgssu_Window$2 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Tree = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_Tree_tmp = null;
function cbgssu_Tree__clinit_() {
    cbgssu_Tree_tmp = new cbgm_Vector2;
}
var cbgssu_TextTooltip = $rt_classWithoutFields(cbgssu_Tooltip);
var cbgssu_Window$1 = $rt_classWithoutFields(cbgssu_Table);
var cbgssu_Skin$4 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_Tree$Node = $rt_classWithoutFields();
var cbgssu_ScrollPane$ScrollPaneStyle = $rt_classWithoutFields();
var cbgm_Matrix4Emu = $rt_classWithoutFields();
var cbgm_Matrix4Emu_tmp = null;
var cbgm_Matrix4Emu_quat = null;
var cbgm_Matrix4Emu_quat2 = null;
var cbgm_Matrix4Emu_l_vez = null;
var cbgm_Matrix4Emu_l_vex = null;
var cbgm_Matrix4Emu_l_vey = null;
var cbgm_Matrix4Emu_tmpVec = null;
var cbgm_Matrix4Emu_tmpMat = null;
var cbgm_Matrix4Emu_right = null;
var cbgm_Matrix4Emu_tmpForward = null;
var cbgm_Matrix4Emu_tmpUp = null;
function cbgm_Matrix4Emu_$callClinit() {
    cbgm_Matrix4Emu_$callClinit = $rt_eraseClinit(cbgm_Matrix4Emu);
    cbgm_Matrix4Emu__clinit_();
}
function cbgm_Matrix4Emu__clinit_() {
    var var$1;
    cbgm_Matrix4Emu_tmp = $rt_createFloatArray(16);
    var$1 = new cbgm_Quaternion;
    cbgm_Quaternion_$callClinit();
    var$1.$x0 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4Emu_quat = var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x0 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4Emu_quat2 = var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Matrix4Emu_l_vez = var$1;
    cbgm_Matrix4Emu_l_vex = new cbgm_Vector3;
    cbgm_Matrix4Emu_l_vey = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpVec = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4Emu_right = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpForward = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpUp = new cbgm_Vector3;
}
var cbgm_Interpolation = $rt_classWithoutFields();
var cbgm_Interpolation_linear = null;
var cbgm_Interpolation_smooth = null;
var cbgm_Interpolation_smooth2 = null;
var cbgm_Interpolation_smoother = null;
var cbgm_Interpolation_fade = null;
var cbgm_Interpolation_pow2 = null;
var cbgm_Interpolation_pow2In = null;
var cbgm_Interpolation_slowFast = null;
var cbgm_Interpolation_pow2Out = null;
var cbgm_Interpolation_fastSlow = null;
var cbgm_Interpolation_pow2InInverse = null;
var cbgm_Interpolation_pow2OutInverse = null;
var cbgm_Interpolation_pow3 = null;
var cbgm_Interpolation_pow3In = null;
var cbgm_Interpolation_pow3Out = null;
var cbgm_Interpolation_pow3InInverse = null;
var cbgm_Interpolation_pow3OutInverse = null;
var cbgm_Interpolation_pow4 = null;
var cbgm_Interpolation_pow4In = null;
var cbgm_Interpolation_pow4Out = null;
var cbgm_Interpolation_pow5 = null;
var cbgm_Interpolation_pow5In = null;
var cbgm_Interpolation_pow5Out = null;
var cbgm_Interpolation_sine = null;
var cbgm_Interpolation_sineIn = null;
var cbgm_Interpolation_sineOut = null;
var cbgm_Interpolation_exp10 = null;
var cbgm_Interpolation_exp10In = null;
var cbgm_Interpolation_exp10Out = null;
var cbgm_Interpolation_exp5 = null;
var cbgm_Interpolation_exp5In = null;
var cbgm_Interpolation_exp5Out = null;
var cbgm_Interpolation_circle = null;
var cbgm_Interpolation_circleIn = null;
var cbgm_Interpolation_circleOut = null;
var cbgm_Interpolation_elastic = null;
var cbgm_Interpolation_elasticIn = null;
var cbgm_Interpolation_elasticOut = null;
var cbgm_Interpolation_swing = null;
var cbgm_Interpolation_swingIn = null;
var cbgm_Interpolation_swingOut = null;
var cbgm_Interpolation_bounce = null;
var cbgm_Interpolation_bounceIn = null;
var cbgm_Interpolation_bounceOut = null;
function cbgm_Interpolation_$callClinit() {
    cbgm_Interpolation_$callClinit = $rt_eraseClinit(cbgm_Interpolation);
    cbgm_Interpolation__clinit_();
}
function cbgm_Interpolation__clinit_() {
    var var$1, var$2;
    var$1 = new cbgm_Interpolation$1;
    cbgm_Interpolation_$callClinit();
    cbgm_Interpolation_linear = var$1;
    cbgm_Interpolation_smooth = new cbgm_Interpolation$2;
    cbgm_Interpolation_smooth2 = new cbgm_Interpolation$3;
    var$1 = new cbgm_Interpolation$4;
    cbgm_Interpolation_smoother = var$1;
    cbgm_Interpolation_fade = var$1;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 2;
    cbgm_Interpolation_pow2 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 2;
    cbgm_Interpolation_pow2In = var$1;
    cbgm_Interpolation_slowFast = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 2;
    cbgm_Interpolation_pow2Out = var$1;
    cbgm_Interpolation_fastSlow = var$1;
    cbgm_Interpolation_pow2InInverse = new cbgm_Interpolation$5;
    cbgm_Interpolation_pow2OutInverse = new cbgm_Interpolation$6;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 3;
    cbgm_Interpolation_pow3 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 3;
    cbgm_Interpolation_pow3In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 3;
    cbgm_Interpolation_pow3Out = var$1;
    cbgm_Interpolation_pow3InInverse = new cbgm_Interpolation$7;
    cbgm_Interpolation_pow3OutInverse = new cbgm_Interpolation$8;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 4;
    cbgm_Interpolation_pow4 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 4;
    cbgm_Interpolation_pow4In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 4;
    cbgm_Interpolation_pow4Out = var$1;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 5;
    cbgm_Interpolation_pow5 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 5;
    cbgm_Interpolation_pow5In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 5;
    cbgm_Interpolation_pow5Out = var$1;
    cbgm_Interpolation_sine = new cbgm_Interpolation$9;
    cbgm_Interpolation_sineIn = new cbgm_Interpolation$10;
    cbgm_Interpolation_sineOut = new cbgm_Interpolation$11;
    var$1 = new cbgm_Interpolation$Exp;
    var$1.$value2 = 2.0;
    var$1.$power0 = 10.0;
    var$2 = jl_Math_powImpl(2.0, (-10.0));
    var$1.$min = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp10 = var$1;
    var$1 = new cbgm_Interpolation$ExpIn;
    var$1.$value2 = 2.0;
    var$1.$power0 = 10.0;
    var$2 = jl_Math_powImpl(2.0, (-10.0));
    var$1.$min = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp10In = var$1;
    var$1 = new cbgm_Interpolation$ExpOut;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 10.0);
    cbgm_Interpolation_exp10Out = var$1;
    cbgm_Interpolation_exp5 = cbgm_Interpolation$Exp__init_0(2.0, 5.0);
    cbgm_Interpolation_exp5In = cbgm_Interpolation$ExpIn__init_(2.0, 5.0);
    cbgm_Interpolation_exp5Out = cbgm_Interpolation$ExpOut__init_(2.0, 5.0);
    cbgm_Interpolation_circle = cbgm_Interpolation$12__init_();
    cbgm_Interpolation_circleIn = cbgm_Interpolation$13__init_();
    cbgm_Interpolation_circleOut = cbgm_Interpolation$14__init_();
    cbgm_Interpolation_elastic = cbgm_Interpolation$Elastic__init_(2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_elasticIn = cbgm_Interpolation$ElasticIn__init_(2.0, 10.0, 6, 1.0);
    cbgm_Interpolation_elasticOut = cbgm_Interpolation$ElasticOut__init_(2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_swing = cbgm_Interpolation$Swing__init_(1.5);
    cbgm_Interpolation_swingIn = cbgm_Interpolation$SwingIn__init_(2.0);
    cbgm_Interpolation_swingOut = cbgm_Interpolation$SwingOut__init_(2.0);
    cbgm_Interpolation_bounce = cbgm_Interpolation$Bounce__init_(4);
    cbgm_Interpolation_bounceIn = cbgm_Interpolation$BounceIn__init_(4);
    cbgm_Interpolation_bounceOut = cbgm_Interpolation$BounceOut__init_(4);
}
function cbgm_Interpolation$SwingIn() {
    cbgm_Interpolation.call(this);
    this.$scale0 = 0.0;
}
function cbgm_Interpolation$SwingIn__init_(var_0) {
    var var_1 = new cbgm_Interpolation$SwingIn();
    cbgm_Interpolation$SwingIn__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$SwingIn__init_0($this, $scale) {
    cbgm_Interpolation_$callClinit();
    $this.$scale0 = $scale;
}
var cbgm_Bresenham2 = $rt_classWithoutFields();
var cbgm_Interpolation$7 = $rt_classWithoutFields(cbgm_Interpolation);
var cbgm_ConvexHull = $rt_classWithoutFields();
function cbgm_Interpolation$Pow() {
    cbgm_Interpolation.call(this);
    this.$power = 0;
}
var cbgm_Interpolation$PowIn = $rt_classWithoutFields(cbgm_Interpolation$Pow);
var cbgm_Interpolation$PowOut = $rt_classWithoutFields(cbgm_Interpolation$Pow);
var cbgm_Path = $rt_classWithoutFields(0);
var cbgm_BSpline = $rt_classWithoutFields();
var cbgm_Interpolation$8 = $rt_classWithoutFields(cbgm_Interpolation);
var cbgm_Polygon = $rt_classWithoutFields();
var cbgm_Interpolation$4 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$Elastic() {
    var a = this; cbgm_Interpolation.call(a);
    a.$value3 = 0.0;
    a.$power1 = 0.0;
    a.$scale1 = 0.0;
    a.$bounces = 0.0;
}
function cbgm_Interpolation$Elastic__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Interpolation$Elastic();
    cbgm_Interpolation$Elastic__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale) {
    cbgm_Interpolation_$callClinit();
    $this.$value3 = $value;
    $this.$power1 = $power;
    $this.$scale1 = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
}
var cbgm_Interpolation$5 = $rt_classWithoutFields(cbgm_Interpolation);
var cbgm_Interpolation$2 = $rt_classWithoutFields(cbgm_Interpolation);
var cbgm_GeometryUtils = $rt_classWithoutFields();
var cbgm_GeometryUtils_tmp1 = null;
var cbgm_GeometryUtils_tmp2 = null;
var cbgm_GeometryUtils_tmp3 = null;
function cbgm_GeometryUtils__clinit_() {
    cbgm_GeometryUtils_tmp1 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp2 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp3 = new cbgm_Vector2;
}
var cbgm_Bresenham2$1 = $rt_classWithoutFields(cbgu_Pool);
var cbgm_Vector = $rt_classWithoutFields(0);
function cbgm_Vector2() {
    var a = this; jl_Object.call(a);
    a.$x = 0.0;
    a.$y = 0.0;
}
var cbgm_Vector2_X = null;
var cbgm_Vector2_Y = null;
var cbgm_Vector2_Zero = null;
function cbgm_Vector2__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x = 1.0;
    var$1.$y = 0.0;
    cbgm_Vector2_X = var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x = 0.0;
    var$1.$y = 1.0;
    cbgm_Vector2_Y = var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x = 0.0;
    var$1.$y = 0.0;
    cbgm_Vector2_Zero = var$1;
}
var cbgm_Interpolation$13 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$13__init_() {
    var var_0 = new cbgm_Interpolation$13();
    cbgm_Interpolation$13__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$13__init_0($this) {
    cbgm_Interpolation_$callClinit();
}
function cbgm_Interpolation$Exp() {
    var a = this; cbgm_Interpolation.call(a);
    a.$value2 = 0.0;
    a.$power0 = 0.0;
    a.$min = 0.0;
    a.$scale = 0.0;
}
function cbgm_Interpolation$Exp__init_0(var_0, var_1) {
    var var_2 = new cbgm_Interpolation$Exp();
    cbgm_Interpolation$Exp__init_(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Interpolation$Exp__init_($this, $value, $power) {
    cbgm_Interpolation_$callClinit();
    $this.$value2 = $value;
    $this.$power0 = $power;
    $power = jl_Math_powImpl($value,  -$power);
    $this.$min = $power;
    $this.$scale = 1.0 / (1.0 - $power);
}
var cbgm_CumulativeDistribution = $rt_classWithoutFields();
var cbgm_Interpolation$1 = $rt_classWithoutFields(cbgm_Interpolation);
var cbgm_Interpolation$ExpOut = $rt_classWithoutFields(cbgm_Interpolation$Exp);
function cbgm_Interpolation$ExpOut__init_(var_0, var_1) {
    var var_2 = new cbgm_Interpolation$ExpOut();
    cbgm_Interpolation$ExpOut__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Interpolation$ExpOut__init_0($this, $value, $power) {
    cbgm_Interpolation_$callClinit();
    $this.$value2 = $value;
    $this.$power0 = $power;
    $power = jl_Math_powImpl($value,  -$power);
    $this.$min = $power;
    $this.$scale = 1.0 / (1.0 - $power);
}
var cbgm_FloatCounter = $rt_classWithoutFields();
var cbgm_Plane$PlaneSide = $rt_classWithoutFields(jl_Enum);
var cbgm_Plane$PlaneSide_OnPlane = null;
var cbgm_Plane$PlaneSide_Back = null;
var cbgm_Plane$PlaneSide_Front = null;
var cbgm_Plane$PlaneSide_$VALUES = null;
function cbgm_Plane$PlaneSide_$callClinit() {
    cbgm_Plane$PlaneSide_$callClinit = $rt_eraseClinit(cbgm_Plane$PlaneSide);
    cbgm_Plane$PlaneSide__clinit_();
}
function cbgm_Plane$PlaneSide__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new cbgm_Plane$PlaneSide;
    cbgm_Plane$PlaneSide_$callClinit();
    var$1.$name0 = $rt_s(38);
    var$1.$ordinal = 0;
    cbgm_Plane$PlaneSide_OnPlane = var$1;
    var$2 = new cbgm_Plane$PlaneSide;
    var$2.$name0 = $rt_s(39);
    var$2.$ordinal = 1;
    cbgm_Plane$PlaneSide_Back = var$2;
    var$3 = new cbgm_Plane$PlaneSide;
    var$3.$name0 = $rt_s(40);
    var$3.$ordinal = 2;
    cbgm_Plane$PlaneSide_Front = var$3;
    cbgm_Plane$PlaneSide_$VALUES = $rt_createArrayFromData(cbgm_Plane$PlaneSide, [var$1, var$2, var$3]);
}
var cbgm_Octree = $rt_classWithoutFields();
var cbgm_Octree_tmp = null;
function cbgm_Octree_$callClinit() {
    cbgm_Octree_$callClinit = $rt_eraseClinit(cbgm_Octree);
    cbgm_Octree__clinit_();
}
function cbgm_Octree__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Octree_tmp = var$1;
}
function cbgm_Interpolation$BounceOut() {
    var a = this; cbgm_Interpolation.call(a);
    a.$widths = null;
    a.$heights = null;
}
function cbgm_Interpolation$BounceOut__init_(var_0) {
    var var_1 = new cbgm_Interpolation$BounceOut();
    cbgm_Interpolation$BounceOut__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$BounceOut__init_0($this, $bounces) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbgm_Interpolation_$callClinit();
    if ($bounces >= 2 && $bounces <= 5) {
        a: {
            var$2 = $rt_createFloatArray($bounces);
            $this.$widths = var$2;
            var$3 = $rt_createFloatArray($bounces);
            var$4 = var$3.data;
            $this.$heights = var$3;
            var$4[0] = 1.0;
            switch ($bounces) {
                case 2:
                    break;
                case 3:
                    var$3 = var$2.data;
                    var$3[0] = 0.4000000059604645;
                    var$3[1] = 0.4000000059604645;
                    var$3[2] = 0.20000000298023224;
                    var$4[1] = 0.33000001311302185;
                    var$4[2] = 0.10000000149011612;
                    break a;
                case 4:
                    var$3 = var$2.data;
                    var$3[0] = 0.3400000035762787;
                    var$3[1] = 0.3400000035762787;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.15000000596046448;
                    var$4[1] = 0.25999999046325684;
                    var$4[2] = 0.10999999940395355;
                    var$4[3] = 0.029999999329447746;
                    break a;
                case 5:
                    var$3 = var$2.data;
                    var$3[0] = 0.30000001192092896;
                    var$3[1] = 0.30000001192092896;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.10000000149011612;
                    var$3[4] = 0.10000000149011612;
                    var$4[1] = 0.44999998807907104;
                    var$4[2] = 0.30000001192092896;
                    var$4[3] = 0.15000000596046448;
                    var$4[4] = 0.05999999865889549;
                    break a;
                default:
                    break a;
            }
            var$3 = var$2.data;
            var$3[0] = 0.6000000238418579;
            var$3[1] = 0.4000000059604645;
            var$4[1] = 0.33000001311302185;
        }
        var$2 = var$2.data;
        var$2[0] = var$2[0] * 2.0;
        return;
    }
    var$5 = new jl_IllegalArgumentException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(41));
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $bounces, 10);
    var$7 = new jl_String;
    var$2 = var$6.$buffer;
    var$8 = var$6.$length;
    jl_String_$callClinit();
    var$3 = $rt_createCharArray(var$8);
    var$4 = var$3.data;
    var$7.$characters = var$3;
    var$9 = 0;
    while (var$9 < var$8) {
        var$4[var$9] = var$2.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    var$5.$message = var$7;
    $rt_throw(var$5);
}
var cbgm_Interpolation$BounceIn = $rt_classWithoutFields(cbgm_Interpolation$BounceOut);
function cbgm_Interpolation$BounceIn__init_(var_0) {
    var var_1 = new cbgm_Interpolation$BounceIn();
    cbgm_Interpolation$BounceIn__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$BounceIn__init_0($this, $bounces) {
    cbgm_Interpolation$BounceOut__init_0($this, $bounces);
}
var cbgm_Interpolation$10 = $rt_classWithoutFields(cbgm_Interpolation);
var cbgm_Affine2 = $rt_classWithoutFields();
var cbgm_Interpolation$3 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Vector4() {
    var a = this; jl_Object.call(a);
    a.$x1 = 0.0;
    a.$y1 = 0.0;
    a.$z0 = 0.0;
    a.$w0 = 0.0;
}
var cbgm_Vector4_X = null;
var cbgm_Vector4_Y = null;
var cbgm_Vector4_Z = null;
var cbgm_Vector4_W = null;
var cbgm_Vector4_Zero = null;
function cbgm_Vector4_$callClinit() {
    cbgm_Vector4_$callClinit = $rt_eraseClinit(cbgm_Vector4);
    cbgm_Vector4__clinit_();
}
function cbgm_Vector4__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector4;
    cbgm_Vector4_$callClinit();
    var$1.$x1 = 1.0;
    var$1.$y1 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_X = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x1 = 0.0;
    var$1.$y1 = 1.0;
    var$1.$z0 = 0.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_Y = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x1 = 0.0;
    var$1.$y1 = 0.0;
    var$1.$z0 = 1.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_Z = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x1 = 0.0;
    var$1.$y1 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w0 = 1.0;
    cbgm_Vector4_W = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x1 = 0.0;
    var$1.$y1 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_Zero = var$1;
}
var cbgm_Interpolation$ElasticIn = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
function cbgm_Interpolation$ElasticIn__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Interpolation$ElasticIn();
    cbgm_Interpolation$ElasticIn__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Interpolation$ElasticIn__init_0($this, $value, $power, $bounces, $scale) {
    cbgm_Interpolation_$callClinit();
    $this.$value3 = $value;
    $this.$power1 = $power;
    $this.$scale1 = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
}
function cbgm_Interpolation$Swing() {
    cbgm_Interpolation.call(this);
    this.$scale2 = 0.0;
}
function cbgm_Interpolation$Swing__init_(var_0) {
    var var_1 = new cbgm_Interpolation$Swing();
    cbgm_Interpolation$Swing__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$Swing__init_0($this, $scale) {
    cbgm_Interpolation_$callClinit();
    $this.$scale2 = $scale * 2.0;
}
var cbgm_DelaunayTriangulator = $rt_classWithoutFields();
var cbgm_Polyline = $rt_classWithoutFields();
var cbgm_Interpolation$6 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$SwingOut() {
    cbgm_Interpolation.call(this);
    this.$scale3 = 0.0;
}
function cbgm_Interpolation$SwingOut__init_(var_0) {
    var var_1 = new cbgm_Interpolation$SwingOut();
    cbgm_Interpolation$SwingOut__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$SwingOut__init_0($this, $scale) {
    cbgm_Interpolation_$callClinit();
    $this.$scale3 = $scale;
}
var cbgm_Interpolation$14 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$14__init_() {
    var var_0 = new cbgm_Interpolation$14();
    cbgm_Interpolation$14__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$14__init_0($this) {
    cbgm_Interpolation_$callClinit();
}
var cbgm_Interpolation$ElasticOut = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
function cbgm_Interpolation$ElasticOut__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Interpolation$ElasticOut();
    cbgm_Interpolation$ElasticOut__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Interpolation$ElasticOut__init_0($this, $value, $power, $bounces, $scale) {
    cbgm_Interpolation_$callClinit();
    $this.$value3 = $value;
    $this.$power1 = $power;
    $this.$scale1 = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
}
var cbgmc_OrientedBoundingBox = $rt_classWithoutFields();
var cbgmc_OrientedBoundingBox_tempAxes = null;
var cbgmc_OrientedBoundingBox_tempVertices = null;
var cbgmc_OrientedBoundingBox_tmpVectors = null;
function cbgmc_OrientedBoundingBox_$callClinit() {
    cbgmc_OrientedBoundingBox_$callClinit = $rt_eraseClinit(cbgmc_OrientedBoundingBox);
    cbgmc_OrientedBoundingBox__clinit_();
}
function cbgmc_OrientedBoundingBox__clinit_() {
    var var$1, var$2, var$3, $i, var$5, var$6;
    cbgmc_OrientedBoundingBox_tempAxes = $rt_createArray(cbgm_Vector3, 15);
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    cbgmc_OrientedBoundingBox_tempVertices = var$1;
    var$2 = $rt_createArray(cbgm_Vector3, 9);
    var$3 = var$2.data;
    cbgmc_OrientedBoundingBox_tmpVectors = var$2;
    $i = 0;
    var$5 = var$3.length;
    while ($i < var$5) {
        var$6 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$3[$i] = var$6;
        $i = $i + 1 | 0;
    }
    var$1 = var$1.data;
    $i = 0;
    var$5 = var$1.length;
    while ($i < var$5) {
        var$6 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$1[$i] = var$6;
        $i = $i + 1 | 0;
    }
}
function cbgmc_BoundingBox() {
    var a = this; jl_Object.call(a);
    a.$min0 = null;
    a.$max0 = null;
    a.$cnt = null;
    a.$dim = null;
}
var cbgmc_BoundingBox_tmpVector = null;
function cbgmc_BoundingBox_$callClinit() {
    cbgmc_BoundingBox_$callClinit = $rt_eraseClinit(cbgmc_BoundingBox);
    cbgmc_BoundingBox__clinit_();
}
function cbgmc_BoundingBox_set($this, $minimum, $maximum) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = $this.$min0;
    var$4 = $minimum.$x2;
    var$5 = $maximum.$x2;
    if (var$4 < var$5)
        var$5 = var$4;
    var$4 = $minimum.$y2;
    var$6 = $maximum.$y2;
    if (var$4 < var$6)
        var$6 = var$4;
    var$4 = $minimum.$z1;
    var$7 = $maximum.$z1;
    if (var$4 < var$7)
        var$7 = var$4;
    var$3.$x2 = var$5;
    var$3.$y2 = var$6;
    var$3.$z1 = var$7;
    var$8 = $this.$max0;
    var$4 = $minimum.$x2;
    var$6 = $maximum.$x2;
    if (var$4 > var$6)
        var$6 = var$4;
    var$4 = $minimum.$y2;
    var$7 = $maximum.$y2;
    if (var$4 > var$7)
        var$7 = var$4;
    var$4 = $minimum.$z1;
    var$5 = $maximum.$z1;
    if (var$4 > var$5)
        var$5 = var$4;
    var$8.$x2 = var$6;
    var$8.$y2 = var$7;
    var$8.$z1 = var$5;
    $minimum = $this.$cnt;
    var$7 = var$3.$x2;
    var$9 = var$3.$y2;
    var$10 = var$3.$z1;
    $minimum.$x2 = var$7;
    $minimum.$y2 = var$9;
    $minimum.$z1 = var$10;
    var$4 = var$8.$x2;
    var$5 = var$8.$y2;
    var$6 = var$8.$z1;
    var$7 = var$7 + var$4;
    var$9 = var$9 + var$5;
    var$10 = var$10 + var$6;
    $minimum.$x2 = var$7;
    $minimum.$y2 = var$9;
    $minimum.$z1 = var$10;
    var$5 = var$7 * 0.5;
    var$6 = var$9 * 0.5;
    var$4 = var$10 * 0.5;
    $minimum.$x2 = var$5;
    $minimum.$y2 = var$6;
    $minimum.$z1 = var$4;
    $minimum = $this.$dim;
    var$6 = var$8.$x2;
    var$7 = var$8.$y2;
    var$9 = var$8.$z1;
    $minimum.$x2 = var$6;
    $minimum.$y2 = var$7;
    $minimum.$z1 = var$9;
    var$4 = var$3.$x2;
    var$5 = var$3.$y2;
    var$10 = var$3.$z1;
    var$6 = var$6 - var$4;
    var$4 = var$7 - var$5;
    var$5 = var$9 - var$10;
    $minimum.$x2 = var$6;
    $minimum.$y2 = var$4;
    $minimum.$z1 = var$5;
    return $this;
}
function cbgmc_BoundingBox__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgmc_BoundingBox_tmpVector = var$1;
}
function cbgmc_Ray() {
    var a = this; jl_Object.call(a);
    a.$origin = null;
    a.$direction = null;
}
var cbgmc_Ray_tmp = null;
function cbgmc_Ray_$callClinit() {
    cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
    cbgmc_Ray__clinit_();
}
function cbgmc_Ray__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgmc_Ray_tmp = var$1;
}
var cbgmc_Segment = $rt_classWithoutFields();
var cbgmc_Sphere = $rt_classWithoutFields();
var cbgm_Ellipse = $rt_classWithoutFields();
var cbgm_CatmullRomSpline = $rt_classWithoutFields();
var cbgm_MathUtils = $rt_classWithoutFields();
var cbgm_MathUtils_random = null;
function cbgm_MathUtils_$callClinit() {
    cbgm_MathUtils_$callClinit = $rt_eraseClinit(cbgm_MathUtils);
    cbgm_MathUtils__clinit_();
}
function cbgm_MathUtils_nextPowerOfTwo($value) {
    var var$2;
    cbgm_MathUtils_$callClinit();
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    $value = var$2 | var$2 >> 1;
    $value = $value | $value >> 2;
    $value = $value | $value >> 4;
    $value = $value | $value >> 8;
    return ($value | $value >> 16) + 1 | 0;
}
function cbgm_MathUtils__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = new cbgm_RandomXS128;
    var$2 = Long_or(Long_shl(Long_fromInt($rt_globals.Math.random() * 4.294967295E9 + (-2.147483648E9) | 0), 32), Long_fromInt($rt_globals.Math.random() * 4.294967295E9 + (-2.147483648E9) | 0));
    if (Long_eq(var$2, Long_ZERO))
        var$2 = Long_create(0, 2147483648);
    var$3 = Long_mul(Long_xor(var$2, Long_shru(var$2, 33)), Long_create(3981806797, 4283543511));
    var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
    var$4 = Long_xor(var$3, Long_shru(var$3, 33));
    var$3 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(3981806797, 4283543511));
    var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
    var$3 = Long_xor(var$3, Long_shru(var$3, 33));
    var$1.$seed0 = var$4;
    var$1.$seed1 = var$3;
    cbgm_MathUtils_random = var$1;
}
var cbgm_Intersector = $rt_classWithoutFields();
var cbgm_Intersector_v0 = null;
var cbgm_Intersector_v1 = null;
var cbgm_Intersector_v2 = null;
var cbgm_Intersector_floatArray = null;
var cbgm_Intersector_floatArray2 = null;
var cbgm_Intersector_ip = null;
var cbgm_Intersector_ep1 = null;
var cbgm_Intersector_ep2 = null;
var cbgm_Intersector_s = null;
var cbgm_Intersector_e = null;
var cbgm_Intersector_v2a = null;
var cbgm_Intersector_v2b = null;
var cbgm_Intersector_v2c = null;
var cbgm_Intersector_v2d = null;
var cbgm_Intersector_p = null;
var cbgm_Intersector_i = null;
var cbgm_Intersector_dir = null;
var cbgm_Intersector_start = null;
var cbgm_Intersector_best = null;
var cbgm_Intersector_tmp = null;
var cbgm_Intersector_tmp1 = null;
var cbgm_Intersector_tmp2 = null;
var cbgm_Intersector_tmp3 = null;
var cbgm_Intersector_intersection = null;
function cbgm_Intersector_$callClinit() {
    cbgm_Intersector_$callClinit = $rt_eraseClinit(cbgm_Intersector);
    cbgm_Intersector__clinit_();
}
function cbgm_Intersector__clinit_() {
    var var$1, var$2;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Intersector_v0 = var$1;
    cbgm_Intersector_v1 = new cbgm_Vector3;
    cbgm_Intersector_v2 = new cbgm_Vector3;
    var$1 = new cbgu_FloatArray;
    var$1.$ordered1 = 1;
    var$1.$items1 = $rt_createFloatArray(16);
    cbgm_Intersector_floatArray = var$1;
    var$1 = new cbgu_FloatArray;
    var$1.$ordered1 = 1;
    var$1.$items1 = $rt_createFloatArray(16);
    cbgm_Intersector_floatArray2 = var$1;
    cbgm_Intersector_ip = new cbgm_Vector2;
    cbgm_Intersector_ep1 = new cbgm_Vector2;
    cbgm_Intersector_ep2 = new cbgm_Vector2;
    cbgm_Intersector_s = new cbgm_Vector2;
    cbgm_Intersector_e = new cbgm_Vector2;
    cbgm_Intersector_v2a = new cbgm_Vector2;
    cbgm_Intersector_v2b = new cbgm_Vector2;
    cbgm_Intersector_v2c = new cbgm_Vector2;
    cbgm_Intersector_v2d = new cbgm_Vector2;
    var$1 = new cbgm_Plane;
    var$2 = new cbgm_Vector3;
    var$1.$normal = var$2;
    var$1.$d = 0.0;
    var$2.$x2 = 0.0;
    var$2.$y2 = 0.0;
    var$2.$z1 = 0.0;
    var$1.$d = 0.0;
    cbgm_Intersector_p = var$1;
    cbgm_Intersector_i = new cbgm_Vector3;
    cbgm_Intersector_dir = new cbgm_Vector3;
    cbgm_Intersector_start = new cbgm_Vector3;
    cbgm_Intersector_best = new cbgm_Vector3;
    cbgm_Intersector_tmp = new cbgm_Vector3;
    cbgm_Intersector_tmp1 = new cbgm_Vector3;
    cbgm_Intersector_tmp2 = new cbgm_Vector3;
    cbgm_Intersector_tmp3 = new cbgm_Vector3;
    cbgm_Intersector_intersection = new cbgm_Vector3;
}
var cbgm_WindowedMean = $rt_classWithoutFields();
var cbgm_Interpolation$Bounce = $rt_classWithoutFields(cbgm_Interpolation$BounceOut);
function cbgm_Interpolation$Bounce__init_(var_0) {
    var var_1 = new cbgm_Interpolation$Bounce();
    cbgm_Interpolation$Bounce__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$Bounce__init_0($this, $bounces) {
    cbgm_Interpolation$BounceOut__init_0($this, $bounces);
}
function cbgm_Matrix4() {
    jl_Object.call(this);
    this.$val = null;
}
var cbgm_Matrix4_tmp = null;
var cbgm_Matrix4_quat = null;
var cbgm_Matrix4_quat2 = null;
var cbgm_Matrix4_l_vez = null;
var cbgm_Matrix4_l_vex = null;
var cbgm_Matrix4_l_vey = null;
var cbgm_Matrix4_tmpVec = null;
var cbgm_Matrix4_tmpMat = null;
var cbgm_Matrix4_right = null;
var cbgm_Matrix4_tmpForward = null;
var cbgm_Matrix4_tmpUp = null;
function cbgm_Matrix4_$callClinit() {
    cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
    cbgm_Matrix4__clinit_();
}
function cbgm_Matrix4__init_() {
    var var_0 = new cbgm_Matrix4();
    cbgm_Matrix4__init_0(var_0);
    return var_0;
}
function cbgm_Matrix4__init_0($this) {
    var var$1, var$2;
    cbgm_Matrix4_$callClinit();
    var$1 = $rt_createFloatArray(16);
    var$2 = var$1.data;
    $this.$val = var$1;
    var$2[0] = 1.0;
    var$2[5] = 1.0;
    var$2[10] = 1.0;
    var$2[15] = 1.0;
}
function cbgm_Matrix4_set($this, $values) {
    var var$2;
    var$2 = $values.data;
    $values = $this.$val.data;
    $values[0] = var$2[0];
    $values[1] = var$2[1];
    $values[2] = var$2[2];
    $values[3] = var$2[3];
    $values[4] = var$2[4];
    $values[5] = var$2[5];
    $values[6] = var$2[6];
    $values[7] = var$2[7];
    $values[8] = var$2[8];
    $values[9] = var$2[9];
    $values[10] = var$2[10];
    $values[11] = var$2[11];
    $values[12] = var$2[12];
    $values[13] = var$2[13];
    $values[14] = var$2[14];
    $values[15] = var$2[15];
    return $this;
}
function cbgm_Matrix4_mul($this, $matrix) {
    var var$2, var$3, var$4, var$5, var$6;
    cbgm_Matrix4_$callClinit();
    var$2 = cbgm_Matrix4_tmp;
    var$3 = var$2.data;
    var$4 = $this.$val.data;
    var$5 = var$4[0];
    var$6 = $matrix.$val.data;
    var$3[0] = var$5 * var$6[0] + var$4[4] * var$6[1] + var$4[8] * var$6[2] + var$4[12] * var$6[3];
    var$3[4] = var$4[0] * var$6[4] + var$4[4] * var$6[5] + var$4[8] * var$6[6] + var$4[12] * var$6[7];
    var$3[8] = var$4[0] * var$6[8] + var$4[4] * var$6[9] + var$4[8] * var$6[10] + var$4[12] * var$6[11];
    var$3[12] = var$4[0] * var$6[12] + var$4[4] * var$6[13] + var$4[8] * var$6[14] + var$4[12] * var$6[15];
    var$3[1] = var$4[1] * var$6[0] + var$4[5] * var$6[1] + var$4[9] * var$6[2] + var$4[13] * var$6[3];
    var$3[5] = var$4[1] * var$6[4] + var$4[5] * var$6[5] + var$4[9] * var$6[6] + var$4[13] * var$6[7];
    var$3[9] = var$4[1] * var$6[8] + var$4[5] * var$6[9] + var$4[9] * var$6[10] + var$4[13] * var$6[11];
    var$3[13] = var$4[1] * var$6[12] + var$4[5] * var$6[13] + var$4[9] * var$6[14] + var$4[13] * var$6[15];
    var$3[2] = var$4[2] * var$6[0] + var$4[6] * var$6[1] + var$4[10] * var$6[2] + var$4[14] * var$6[3];
    var$3[6] = var$4[2] * var$6[4] + var$4[6] * var$6[5] + var$4[10] * var$6[6] + var$4[14] * var$6[7];
    var$3[10] = var$4[2] * var$6[8] + var$4[6] * var$6[9] + var$4[10] * var$6[10] + var$4[14] * var$6[11];
    var$3[14] = var$4[2] * var$6[12] + var$4[6] * var$6[13] + var$4[10] * var$6[14] + var$4[14] * var$6[15];
    var$3[3] = var$4[3] * var$6[0] + var$4[7] * var$6[1] + var$4[11] * var$6[2] + var$4[15] * var$6[3];
    var$3[7] = var$4[3] * var$6[4] + var$4[7] * var$6[5] + var$4[11] * var$6[6] + var$4[15] * var$6[7];
    var$3[11] = var$4[3] * var$6[8] + var$4[7] * var$6[9] + var$4[11] * var$6[10] + var$4[15] * var$6[11];
    var$3[15] = var$4[3] * var$6[12] + var$4[7] * var$6[13] + var$4[11] * var$6[14] + var$4[15] * var$6[15];
    return cbgm_Matrix4_set($this, var$2);
}
function cbgm_Matrix4_idt($this) {
    var var$1;
    var$1 = $this.$val.data;
    var$1[0] = 1.0;
    var$1[4] = 0.0;
    var$1[8] = 0.0;
    var$1[12] = 0.0;
    var$1[1] = 0.0;
    var$1[5] = 1.0;
    var$1[9] = 0.0;
    var$1[13] = 0.0;
    var$1[2] = 0.0;
    var$1[6] = 0.0;
    var$1[10] = 1.0;
    var$1[14] = 0.0;
    var$1[3] = 0.0;
    var$1[7] = 0.0;
    var$1[11] = 0.0;
    var$1[15] = 1.0;
    return $this;
}
function cbgm_Matrix4_setToOrtho($this, $left, $right, $bottom, $top, $near, $far) {
    var $tx, $x_orth, $ty, $y_orth, $tz, $z_orth, var$13;
    cbgm_Matrix4_idt($this);
    $tx = $right - $left;
    $x_orth = 2.0 / $tx;
    $ty = $top - $bottom;
    $y_orth = 2.0 / $ty;
    $tz = $far - $near;
    $z_orth = (-2.0) / $tz;
    $tx =  -($right + $left) / $tx;
    $ty =  -($top + $bottom) / $ty;
    $tz =  -($far + $near) / $tz;
    var$13 = $this.$val.data;
    var$13[0] = $x_orth;
    var$13[1] = 0.0;
    var$13[2] = 0.0;
    var$13[3] = 0.0;
    var$13[4] = 0.0;
    var$13[5] = $y_orth;
    var$13[6] = 0.0;
    var$13[7] = 0.0;
    var$13[8] = 0.0;
    var$13[9] = 0.0;
    var$13[10] = $z_orth;
    var$13[11] = 0.0;
    var$13[12] = $tx;
    var$13[13] = $ty;
    var$13[14] = $tz;
    var$13[15] = 1.0;
    return $this;
}
function cbgm_Matrix4_setToLookAt($this, $direction, $up) {
    var var$3, var$4, var$5, var$6, var$7, var$8;
    cbgm_Matrix4_$callClinit();
    var$3 = cbgm_Matrix4_l_vez;
    var$4 = $direction.$x2;
    var$5 = $direction.$y2;
    var$6 = $direction.$z1;
    var$3.$x2 = var$4;
    var$3.$y2 = var$5;
    var$3.$z1 = var$6;
    var$5 = var$4 * var$4 + var$5 * var$5 + var$6 * var$6;
    if (var$5 !== 0.0 && var$5 !== 1.0) {
        var$4 = 1.0 / jl_Math_sqrt(var$5);
        var$5 = var$3.$x2 * var$4;
        var$6 = var$3.$y2 * var$4;
        var$4 = var$3.$z1 * var$4;
        var$3.$x2 = var$5;
        var$3.$y2 = var$6;
        var$3.$z1 = var$4;
    }
    var$3 = cbgm_Matrix4_l_vex;
    var$4 = $direction.$x2;
    var$5 = $direction.$y2;
    var$6 = $direction.$z1;
    var$3.$x2 = var$4;
    var$3.$y2 = var$5;
    var$3.$z1 = var$6;
    var$5 = var$4 * var$4 + var$5 * var$5 + var$6 * var$6;
    if (var$5 !== 0.0 && var$5 !== 1.0) {
        var$4 = 1.0 / jl_Math_sqrt(var$5);
        var$5 = var$3.$x2 * var$4;
        var$6 = var$3.$y2 * var$4;
        var$4 = var$3.$z1 * var$4;
        var$3.$x2 = var$5;
        var$3.$y2 = var$6;
        var$3.$z1 = var$4;
    }
    $direction = cbgm_Vector3_crs(cbgm_Matrix4_l_vex, $up);
    var$4 = $direction.$x2;
    var$4 = var$4 * var$4;
    var$5 = $direction.$y2;
    var$4 = var$4 + var$5 * var$5;
    var$5 = $direction.$z1;
    var$4 = var$4 + var$5 * var$5;
    if (var$4 !== 0.0 && var$4 !== 1.0) {
        var$6 = 1.0 / jl_Math_sqrt(var$4);
        var$7 = $direction.$x2 * var$6;
        var$4 = $direction.$y2 * var$6;
        var$5 = $direction.$z1 * var$6;
        $direction.$x2 = var$7;
        $direction.$y2 = var$4;
        $direction.$z1 = var$5;
    }
    $direction = cbgm_Matrix4_l_vey;
    $up = cbgm_Matrix4_l_vex;
    var$4 = $up.$x2;
    var$5 = $up.$y2;
    var$6 = $up.$z1;
    $direction.$x2 = var$4;
    $direction.$y2 = var$5;
    $direction.$z1 = var$6;
    $direction = cbgm_Vector3_crs($direction, cbgm_Matrix4_l_vez);
    var$4 = $direction.$x2;
    var$4 = var$4 * var$4;
    var$5 = $direction.$y2;
    var$4 = var$4 + var$5 * var$5;
    var$5 = $direction.$z1;
    var$5 = var$4 + var$5 * var$5;
    if (var$5 !== 0.0 && var$5 !== 1.0) {
        var$4 = 1.0 / jl_Math_sqrt(var$5);
        var$5 = $direction.$x2 * var$4;
        var$6 = $direction.$y2 * var$4;
        var$4 = $direction.$z1 * var$4;
        $direction.$x2 = var$5;
        $direction.$y2 = var$6;
        $direction.$z1 = var$4;
    }
    cbgm_Matrix4_idt($this);
    var$8 = $this.$val.data;
    $direction = cbgm_Matrix4_l_vex;
    var$8[0] = $direction.$x2;
    var$8[4] = $direction.$y2;
    var$8[8] = $direction.$z1;
    $direction = cbgm_Matrix4_l_vey;
    var$8[1] = $direction.$x2;
    var$8[5] = $direction.$y2;
    var$8[9] = $direction.$z1;
    $direction = cbgm_Matrix4_l_vez;
    var$8[2] =  -$direction.$x2;
    var$8[6] =  -$direction.$y2;
    var$8[10] =  -$direction.$z1;
    return $this;
}
function cbgm_Matrix4_matrix4_mul($mata, $matb) {
    var var$3, $tmp_0, var$5;
    cbgm_Matrix4_$callClinit();
    var$3 = $matb.data;
    $matb = $mata.data;
    $tmp_0 = $rt_createFloatArray(16);
    var$5 = $tmp_0.data;
    var$5[0] = $matb[0] * var$3[0] + $matb[4] * var$3[1] + $matb[8] * var$3[2] + $matb[12] * var$3[3];
    var$5[4] = $matb[0] * var$3[4] + $matb[4] * var$3[5] + $matb[8] * var$3[6] + $matb[12] * var$3[7];
    var$5[8] = $matb[0] * var$3[8] + $matb[4] * var$3[9] + $matb[8] * var$3[10] + $matb[12] * var$3[11];
    var$5[12] = $matb[0] * var$3[12] + $matb[4] * var$3[13] + $matb[8] * var$3[14] + $matb[12] * var$3[15];
    var$5[1] = $matb[1] * var$3[0] + $matb[5] * var$3[1] + $matb[9] * var$3[2] + $matb[13] * var$3[3];
    var$5[5] = $matb[1] * var$3[4] + $matb[5] * var$3[5] + $matb[9] * var$3[6] + $matb[13] * var$3[7];
    var$5[9] = $matb[1] * var$3[8] + $matb[5] * var$3[9] + $matb[9] * var$3[10] + $matb[13] * var$3[11];
    var$5[13] = $matb[1] * var$3[12] + $matb[5] * var$3[13] + $matb[9] * var$3[14] + $matb[13] * var$3[15];
    var$5[2] = $matb[2] * var$3[0] + $matb[6] * var$3[1] + $matb[10] * var$3[2] + $matb[14] * var$3[3];
    var$5[6] = $matb[2] * var$3[4] + $matb[6] * var$3[5] + $matb[10] * var$3[6] + $matb[14] * var$3[7];
    var$5[10] = $matb[2] * var$3[8] + $matb[6] * var$3[9] + $matb[10] * var$3[10] + $matb[14] * var$3[11];
    var$5[14] = $matb[2] * var$3[12] + $matb[6] * var$3[13] + $matb[10] * var$3[14] + $matb[14] * var$3[15];
    var$5[3] = $matb[3] * var$3[0] + $matb[7] * var$3[1] + $matb[11] * var$3[2] + $matb[15] * var$3[3];
    var$5[7] = $matb[3] * var$3[4] + $matb[7] * var$3[5] + $matb[11] * var$3[6] + $matb[15] * var$3[7];
    var$5[11] = $matb[3] * var$3[8] + $matb[7] * var$3[9] + $matb[11] * var$3[10] + $matb[15] * var$3[11];
    var$5[15] = $matb[3] * var$3[12] + $matb[7] * var$3[13] + $matb[11] * var$3[14] + $matb[15] * var$3[15];
    jl_System_arraycopy($tmp_0, 0, $mata, 0, 16);
}
function cbgm_Matrix4_matrix4_det($val) {
    cbgm_Matrix4_$callClinit();
    $val = $val.data;
    return $val[3] * $val[6] * $val[9] * $val[12] - $val[2] * $val[7] * $val[9] * $val[12] - $val[3] * $val[5] * $val[10] * $val[12] + $val[1] * $val[7] * $val[10] * $val[12] + $val[2] * $val[5] * $val[11] * $val[12] - $val[1] * $val[6] * $val[11] * $val[12] - $val[3] * $val[6] * $val[8] * $val[13] + $val[2] * $val[7] * $val[8] * $val[13] + $val[3] * $val[4] * $val[10] * $val[13] - $val[0] * $val[7] * $val[10] * $val[13] - $val[2] * $val[4] * $val[11] * $val[13] + $val[0] * $val[6] * $val[11] * $val[13] + $val[3]
    * $val[5] * $val[8] * $val[14] - $val[1] * $val[7] * $val[8] * $val[14] - $val[3] * $val[4] * $val[9] * $val[14] + $val[0] * $val[7] * $val[9] * $val[14] + $val[1] * $val[4] * $val[11] * $val[14] - $val[0] * $val[5] * $val[11] * $val[14] - $val[2] * $val[5] * $val[8] * $val[15] + $val[1] * $val[6] * $val[8] * $val[15] + $val[2] * $val[4] * $val[9] * $val[15] - $val[0] * $val[6] * $val[9] * $val[15] - $val[1] * $val[4] * $val[10] * $val[15] + $val[0] * $val[5] * $val[10] * $val[15];
}
function cbgm_Matrix4_matrix4_inv($val) {
    var $tmp_0, $l_det, $inv_det;
    cbgm_Matrix4_$callClinit();
    $tmp_0 = $rt_createFloatArray(16);
    $l_det = cbgm_Matrix4_matrix4_det($val);
    if ($l_det === 0.0)
        return 0;
    $tmp_0 = $tmp_0.data;
    $val = $val.data;
    $tmp_0[0] = $val[9] * $val[14] * $val[7] - $val[13] * $val[10] * $val[7] + $val[13] * $val[6] * $val[11] - $val[5] * $val[14] * $val[11] - $val[9] * $val[6] * $val[15] + $val[5] * $val[10] * $val[15];
    $tmp_0[4] = $val[12] * $val[10] * $val[7] - $val[8] * $val[14] * $val[7] - $val[12] * $val[6] * $val[11] + $val[4] * $val[14] * $val[11] + $val[8] * $val[6] * $val[15] - $val[4] * $val[10] * $val[15];
    $tmp_0[8] = $val[8] * $val[13] * $val[7] - $val[12] * $val[9] * $val[7] + $val[12] * $val[5] * $val[11] - $val[4] * $val[13] * $val[11] - $val[8] * $val[5] * $val[15] + $val[4] * $val[9] * $val[15];
    $tmp_0[12] = $val[12] * $val[9] * $val[6] - $val[8] * $val[13] * $val[6] - $val[12] * $val[5] * $val[10] + $val[4] * $val[13] * $val[10] + $val[8] * $val[5] * $val[14] - $val[4] * $val[9] * $val[14];
    $tmp_0[1] = $val[13] * $val[10] * $val[3] - $val[9] * $val[14] * $val[3] - $val[13] * $val[2] * $val[11] + $val[1] * $val[14] * $val[11] + $val[9] * $val[2] * $val[15] - $val[1] * $val[10] * $val[15];
    $tmp_0[5] = $val[8] * $val[14] * $val[3] - $val[12] * $val[10] * $val[3] + $val[12] * $val[2] * $val[11] - $val[0] * $val[14] * $val[11] - $val[8] * $val[2] * $val[15] + $val[0] * $val[10] * $val[15];
    $tmp_0[9] = $val[12] * $val[9] * $val[3] - $val[8] * $val[13] * $val[3] - $val[12] * $val[1] * $val[11] + $val[0] * $val[13] * $val[11] + $val[8] * $val[1] * $val[15] - $val[0] * $val[9] * $val[15];
    $tmp_0[13] = $val[8] * $val[13] * $val[2] - $val[12] * $val[9] * $val[2] + $val[12] * $val[1] * $val[10] - $val[0] * $val[13] * $val[10] - $val[8] * $val[1] * $val[14] + $val[0] * $val[9] * $val[14];
    $tmp_0[2] = $val[5] * $val[14] * $val[3] - $val[13] * $val[6] * $val[3] + $val[13] * $val[2] * $val[7] - $val[1] * $val[14] * $val[7] - $val[5] * $val[2] * $val[15] + $val[1] * $val[6] * $val[15];
    $tmp_0[6] = $val[12] * $val[6] * $val[3] - $val[4] * $val[14] * $val[3] - $val[12] * $val[2] * $val[7] + $val[0] * $val[14] * $val[7] + $val[4] * $val[2] * $val[15] - $val[0] * $val[6] * $val[15];
    $tmp_0[10] = $val[4] * $val[13] * $val[3] - $val[12] * $val[5] * $val[3] + $val[12] * $val[1] * $val[7] - $val[0] * $val[13] * $val[7] - $val[4] * $val[1] * $val[15] + $val[0] * $val[5] * $val[15];
    $tmp_0[14] = $val[12] * $val[5] * $val[2] - $val[4] * $val[13] * $val[2] - $val[12] * $val[1] * $val[6] + $val[0] * $val[13] * $val[6] + $val[4] * $val[1] * $val[14] - $val[0] * $val[5] * $val[14];
    $tmp_0[3] = $val[9] * $val[6] * $val[3] - $val[5] * $val[10] * $val[3] - $val[9] * $val[2] * $val[7] + $val[1] * $val[10] * $val[7] + $val[5] * $val[2] * $val[11] - $val[1] * $val[6] * $val[11];
    $tmp_0[7] = $val[4] * $val[10] * $val[3] - $val[8] * $val[6] * $val[3] + $val[8] * $val[2] * $val[7] - $val[0] * $val[10] * $val[7] - $val[4] * $val[2] * $val[11] + $val[0] * $val[6] * $val[11];
    $tmp_0[11] = $val[8] * $val[5] * $val[3] - $val[4] * $val[9] * $val[3] - $val[8] * $val[1] * $val[7] + $val[0] * $val[9] * $val[7] + $val[4] * $val[1] * $val[11] - $val[0] * $val[5] * $val[11];
    $tmp_0[15] = $val[4] * $val[9] * $val[2] - $val[8] * $val[5] * $val[2] + $val[8] * $val[1] * $val[6] - $val[0] * $val[9] * $val[6] - $val[4] * $val[1] * $val[10] + $val[0] * $val[5] * $val[10];
    $inv_det = 1.0 / $l_det;
    $val[0] = $tmp_0[0] * $inv_det;
    $val[4] = $tmp_0[4] * $inv_det;
    $val[8] = $tmp_0[8] * $inv_det;
    $val[12] = $tmp_0[12] * $inv_det;
    $val[1] = $tmp_0[1] * $inv_det;
    $val[5] = $tmp_0[5] * $inv_det;
    $val[9] = $tmp_0[9] * $inv_det;
    $val[13] = $tmp_0[13] * $inv_det;
    $val[2] = $tmp_0[2] * $inv_det;
    $val[6] = $tmp_0[6] * $inv_det;
    $val[10] = $tmp_0[10] * $inv_det;
    $val[14] = $tmp_0[14] * $inv_det;
    $val[3] = $tmp_0[3] * $inv_det;
    $val[7] = $tmp_0[7] * $inv_det;
    $val[11] = $tmp_0[11] * $inv_det;
    $val[15] = $tmp_0[15] * $inv_det;
    return 1;
}
function cbgm_Matrix4_matrix4_proj($mat, $vec, $offset) {
    var var$4, $z, var$6, var$7, var$8, $inv_w, $x, $y;
    cbgm_Matrix4_$callClinit();
    $mat = $mat.data;
    $vec = $vec.data;
    var$4 = $offset + 0 | 0;
    $z = $vec[var$4] * $mat[3];
    var$6 = $offset + 1 | 0;
    var$7 = $z + $vec[var$6] * $mat[7];
    var$8 = $offset + 2 | 0;
    $inv_w = 1.0 / (var$7 + $vec[var$8] * $mat[11] + $mat[15]);
    $x = ($vec[var$4] * $mat[0] + $vec[var$6] * $mat[4] + $vec[var$8] * $mat[8] + $mat[12]) * $inv_w;
    $y = ($vec[var$4] * $mat[1] + $vec[var$6] * $mat[5] + $vec[var$8] * $mat[9] + $mat[13]) * $inv_w;
    $z = ($vec[var$4] * $mat[2] + $vec[var$6] * $mat[6] + $vec[var$8] * $mat[10] + $mat[14]) * $inv_w;
    $vec[var$4] = $x;
    $vec[var$6] = $y;
    $vec[var$8] = $z;
}
function cbgm_Matrix4__clinit_() {
    var var$1;
    cbgm_Matrix4_tmp = $rt_createFloatArray(16);
    var$1 = new cbgm_Quaternion;
    cbgm_Quaternion_$callClinit();
    var$1.$x0 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4_quat = var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x0 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4_quat2 = var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Matrix4_l_vez = var$1;
    cbgm_Matrix4_l_vex = new cbgm_Vector3;
    cbgm_Matrix4_l_vey = new cbgm_Vector3;
    cbgm_Matrix4_tmpVec = new cbgm_Vector3;
    cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4_right = new cbgm_Vector3;
    cbgm_Matrix4_tmpForward = new cbgm_Vector3;
    cbgm_Matrix4_tmpUp = new cbgm_Vector3;
}
var ju_Random = $rt_classWithoutFields();
function cbgm_RandomXS128() {
    var a = this; ju_Random.call(a);
    a.$seed0 = Long_ZERO;
    a.$seed1 = Long_ZERO;
}
var cbgm_Interpolation$12 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$12__init_() {
    var var_0 = new cbgm_Interpolation$12();
    cbgm_Interpolation$12__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$12__init_0($this) {
    cbgm_Interpolation_$callClinit();
}
var cbgm_Interpolation$9 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Frustum() {
    var a = this; jl_Object.call(a);
    a.$planes = null;
    a.$planePoints = null;
    a.$planePointsArray = null;
}
var cbgm_Frustum_clipSpacePlanePoints = null;
var cbgm_Frustum_clipSpacePlanePointsArray = null;
var cbgm_Frustum_tmpV = null;
function cbgm_Frustum_$callClinit() {
    cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
    cbgm_Frustum__clinit_();
}
function cbgm_Frustum__init_() {
    var var_0 = new cbgm_Frustum();
    cbgm_Frustum__init_0(var_0);
    return var_0;
}
function cbgm_Frustum__init_0($this) {
    var var$1, var$2, var$3, var$4, $i, var$6;
    cbgm_Frustum_$callClinit();
    var$1 = $rt_createArray(cbgm_Plane, 6);
    var$2 = var$1.data;
    $this.$planes = var$1;
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$3 = var$1.data;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3[0] = var$4;
    var$3[1] = new cbgm_Vector3;
    var$3[2] = new cbgm_Vector3;
    var$3[3] = new cbgm_Vector3;
    var$3[4] = new cbgm_Vector3;
    var$3[5] = new cbgm_Vector3;
    var$3[6] = new cbgm_Vector3;
    var$3[7] = new cbgm_Vector3;
    $this.$planePoints = var$1;
    $this.$planePointsArray = $rt_createFloatArray(24);
    $i = 0;
    while ($i < 6) {
        var$4 = new cbgm_Plane;
        var$6 = new cbgm_Vector3;
        var$4.$normal = var$6;
        var$4.$d = 0.0;
        var$6.$x2 = 0.0;
        var$6.$y2 = 0.0;
        var$6.$z1 = 0.0;
        var$4.$d = 0.0;
        var$2[$i] = var$4;
        $i = $i + 1 | 0;
    }
}
function cbgm_Frustum_update($this, $inverseProjectionView) {
    var var$2, var$3, var$4, $i, var$6, $j, $v, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19;
    cbgm_Frustum_$callClinit();
    var$2 = cbgm_Frustum_clipSpacePlanePointsArray;
    var$3 = var$2.data;
    jl_System_arraycopy(var$2, 0, $this.$planePointsArray, 0, var$3.length);
    var$2 = $inverseProjectionView.$val;
    var$4 = $this.$planePointsArray;
    $i = 0;
    cbgm_Matrix4_$callClinit();
    var$6 = 0;
    while (var$6 < 8) {
        cbgm_Matrix4_matrix4_proj(var$2, var$4, $i);
        $i = $i + 3 | 0;
        var$6 = var$6 + 1 | 0;
    }
    $i = 0;
    $j = 0;
    while ($i < 8) {
        $v = $this.$planePoints.data[$i];
        var$2 = $this.$planePointsArray.data;
        var$9 = $j + 1 | 0;
        $v.$x2 = var$2[$j];
        var$6 = var$9 + 1 | 0;
        $v.$y2 = var$2[var$9];
        $j = var$6 + 1 | 0;
        $v.$z1 = var$2[var$6];
        $i = $i + 1 | 0;
    }
    $inverseProjectionView = $this.$planes.data[0];
    var$2 = $this.$planePoints.data;
    $v = var$2[1];
    var$10 = var$2[0];
    var$11 = var$2[2];
    var$12 = $inverseProjectionView.$normal;
    var$13 = $v.$x2;
    var$14 = $v.$y2;
    var$15 = $v.$z1;
    var$12.$x2 = var$13;
    var$12.$y2 = var$14;
    var$12.$z1 = var$15;
    var$16 = var$10.$x2;
    var$17 = var$10.$y2;
    var$18 = var$10.$z1;
    var$16 = var$13 - var$16;
    var$14 = var$14 - var$17;
    var$13 = var$15 - var$18;
    var$12.$x2 = var$16;
    var$12.$y2 = var$14;
    var$12.$z1 = var$13;
    var$15 = var$10.$x2 - var$11.$x2;
    var$17 = var$10.$y2 - var$11.$y2;
    var$18 = var$10.$z1 - var$11.$z1;
    var$19 = var$14 * var$18 - var$13 * var$17;
    var$18 = var$13 * var$15 - var$16 * var$18;
    var$16 = var$16 * var$17 - var$14 * var$15;
    var$12.$x2 = var$19;
    var$12.$y2 = var$18;
    var$12.$z1 = var$16;
    var$15 = var$19 * var$19 + var$18 * var$18 + var$16 * var$16;
    if (var$15 !== 0.0 && var$15 !== 1.0) {
        var$14 = 1.0 / jl_Math_sqrt(var$15);
        var$15 = var$12.$x2 * var$14;
        var$16 = var$12.$y2 * var$14;
        var$14 = var$12.$z1 * var$14;
        var$12.$x2 = var$15;
        var$12.$y2 = var$16;
        var$12.$z1 = var$14;
    }
    var$10 = $inverseProjectionView.$normal;
    $inverseProjectionView.$d =  -($v.$x2 * var$10.$x2 + $v.$y2 * var$10.$y2 + $v.$z1 * var$10.$z1);
    $inverseProjectionView = $this.$planes.data[1];
    var$2 = $this.$planePoints.data;
    $v = var$2[4];
    var$10 = var$2[5];
    var$11 = var$2[7];
    var$12 = $inverseProjectionView.$normal;
    var$17 = $v.$x2;
    var$18 = $v.$y2;
    var$13 = $v.$z1;
    var$12.$x2 = var$17;
    var$12.$y2 = var$18;
    var$12.$z1 = var$13;
    var$14 = var$10.$x2;
    var$15 = var$10.$y2;
    var$16 = var$10.$z1;
    var$14 = var$17 - var$14;
    var$15 = var$18 - var$15;
    var$16 = var$13 - var$16;
    var$12.$x2 = var$14;
    var$12.$y2 = var$15;
    var$12.$z1 = var$16;
    cbgm_Vector3_nor(cbgm_Vector3_crs0(var$12, var$10.$x2 - var$11.$x2, var$10.$y2 - var$11.$y2, var$10.$z1 - var$11.$z1));
    $inverseProjectionView.$d =  -cbgm_Vector3_dot($v, $inverseProjectionView.$normal);
    $inverseProjectionView = $this.$planes.data[2];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[0], var$2[4], var$2[3]);
    $inverseProjectionView = $this.$planes.data[3];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[5], var$2[1], var$2[6]);
    $inverseProjectionView = $this.$planes.data[4];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[2], var$2[3], var$2[6]);
    $inverseProjectionView = $this.$planes.data[5];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set($inverseProjectionView, var$2[4], var$2[0], var$2[1]);
}
function cbgm_Frustum__clinit_() {
    var var$1, var$2, $v, var$4, $j, var$6, var$7, var$8, var$9;
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$2 = var$1.data;
    $v = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    $v.$x2 = (-1.0);
    $v.$y2 = (-1.0);
    $v.$z1 = (-1.0);
    var$2[0] = $v;
    $v = new cbgm_Vector3;
    $v.$x2 = 1.0;
    $v.$y2 = (-1.0);
    $v.$z1 = (-1.0);
    var$2[1] = $v;
    $v = new cbgm_Vector3;
    $v.$x2 = 1.0;
    $v.$y2 = 1.0;
    $v.$z1 = (-1.0);
    var$2[2] = $v;
    $v = new cbgm_Vector3;
    $v.$x2 = (-1.0);
    $v.$y2 = 1.0;
    $v.$z1 = (-1.0);
    var$2[3] = $v;
    $v = new cbgm_Vector3;
    $v.$x2 = (-1.0);
    $v.$y2 = (-1.0);
    $v.$z1 = 1.0;
    var$2[4] = $v;
    $v = new cbgm_Vector3;
    $v.$x2 = 1.0;
    $v.$y2 = (-1.0);
    $v.$z1 = 1.0;
    var$2[5] = $v;
    $v = new cbgm_Vector3;
    $v.$x2 = 1.0;
    $v.$y2 = 1.0;
    $v.$z1 = 1.0;
    var$2[6] = $v;
    $v = new cbgm_Vector3;
    $v.$x2 = (-1.0);
    $v.$y2 = 1.0;
    $v.$z1 = 1.0;
    var$2[7] = $v;
    cbgm_Frustum_clipSpacePlanePoints = var$1;
    var$1 = $rt_createFloatArray(24);
    var$4 = var$1.data;
    cbgm_Frustum_clipSpacePlanePointsArray = var$1;
    $j = 0;
    var$6 = var$2.length;
    var$7 = 0;
    while (var$7 < var$6) {
        $v = var$2[var$7];
        var$8 = $j + 1 | 0;
        var$4[$j] = $v.$x2;
        var$9 = var$8 + 1 | 0;
        var$4[var$8] = $v.$y2;
        $j = var$9 + 1 | 0;
        var$4[var$9] = $v.$z1;
        var$7 = var$7 + 1 | 0;
    }
    cbgm_Frustum_tmpV = new cbgm_Vector3;
}
function cbgm_Quaternion() {
    var a = this; jl_Object.call(a);
    a.$x0 = 0.0;
    a.$y0 = 0.0;
    a.$z = 0.0;
    a.$w = 0.0;
}
var cbgm_Quaternion_tmp1 = null;
var cbgm_Quaternion_tmp2 = null;
function cbgm_Quaternion_$callClinit() {
    cbgm_Quaternion_$callClinit = $rt_eraseClinit(cbgm_Quaternion);
    cbgm_Quaternion__clinit_();
}
function cbgm_Quaternion__clinit_() {
    var var$1;
    var$1 = new cbgm_Quaternion;
    cbgm_Quaternion_$callClinit();
    var$1.$x0 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z = 0.0;
    var$1.$w = 0.0;
    cbgm_Quaternion_tmp1 = var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x0 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z = 0.0;
    var$1.$w = 0.0;
    cbgm_Quaternion_tmp2 = var$1;
}
var cbgm_EarClippingTriangulator = $rt_classWithoutFields();
var cbgm_Octree$RayCastResult = $rt_classWithoutFields();
function cbgm_Vector3() {
    var a = this; jl_Object.call(a);
    a.$x2 = 0.0;
    a.$y2 = 0.0;
    a.$z1 = 0.0;
}
var cbgm_Vector3_X = null;
var cbgm_Vector3_Y = null;
var cbgm_Vector3_Z = null;
var cbgm_Vector3_Zero = null;
var cbgm_Vector3_tmpMat = null;
function cbgm_Vector3_$callClinit() {
    cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
    cbgm_Vector3__clinit_();
}
function cbgm_Vector3_nor($this) {
    var var$1, $len2, var$3;
    var$1 = $this.$x2;
    var$1 = var$1 * var$1;
    $len2 = $this.$y2;
    var$1 = var$1 + $len2 * $len2;
    $len2 = $this.$z1;
    $len2 = var$1 + $len2 * $len2;
    if ($len2 !== 0.0 && $len2 !== 1.0) {
        var$1 = 1.0 / jl_Math_sqrt($len2);
        $len2 = $this.$x2 * var$1;
        var$3 = $this.$y2 * var$1;
        var$1 = $this.$z1 * var$1;
        $this.$x2 = $len2;
        $this.$y2 = var$3;
        $this.$z1 = var$1;
        return $this;
    }
    return $this;
}
function cbgm_Vector3_dot($this, $vector) {
    return $this.$x2 * $vector.$x2 + $this.$y2 * $vector.$y2 + $this.$z1 * $vector.$z1;
}
function cbgm_Vector3_crs($this, $vector) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = $this.$y2;
    var$3 = $vector.$z1;
    var$4 = var$2 * var$3;
    var$5 = $this.$z1;
    var$6 = $vector.$y2;
    var$7 = var$4 - var$5 * var$6;
    var$4 = $vector.$x2;
    var$5 = var$5 * var$4;
    var$8 = $this.$x2;
    var$3 = var$5 - var$8 * var$3;
    var$2 = var$8 * var$6 - var$2 * var$4;
    $this.$x2 = var$7;
    $this.$y2 = var$3;
    $this.$z1 = var$2;
    return $this;
}
function cbgm_Vector3_crs0($this, $x, $y, $z) {
    var var$4, var$5, var$6, var$7;
    var$4 = $this.$y2;
    var$5 = var$4 * $z;
    var$6 = $this.$z1;
    var$7 = var$5 - var$6 * $y;
    var$6 = var$6 * $x;
    var$5 = $this.$x2;
    $z = var$6 - var$5 * $z;
    $x = var$5 * $y - var$4 * $x;
    $this.$x2 = var$7;
    $this.$y2 = $z;
    $this.$z1 = $x;
    return $this;
}
function cbgm_Vector3__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$1.$x2 = 1.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = 0.0;
    cbgm_Vector3_X = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x2 = 0.0;
    var$1.$y2 = 1.0;
    var$1.$z1 = 0.0;
    cbgm_Vector3_Y = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x2 = 0.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = 1.0;
    cbgm_Vector3_Z = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x2 = 0.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = 0.0;
    cbgm_Vector3_Zero = var$1;
    cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
}
var cbgm_Circle = $rt_classWithoutFields();
var cbgm_Octree$1 = $rt_classWithoutFields(cbgu_Pool);
var cbgm_Interpolation$ExpIn = $rt_classWithoutFields(cbgm_Interpolation$Exp);
function cbgm_Interpolation$ExpIn__init_(var_0, var_1) {
    var var_2 = new cbgm_Interpolation$ExpIn();
    cbgm_Interpolation$ExpIn__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Interpolation$ExpIn__init_0($this, $value, $power) {
    cbgm_Interpolation_$callClinit();
    $this.$value2 = $value;
    $this.$power0 = $power;
    $power = jl_Math_powImpl($value,  -$power);
    $this.$min = $power;
    $this.$scale = 1.0 / (1.0 - $power);
}
var cbgm_Bezier = $rt_classWithoutFields();
var cbgm_CumulativeDistribution$CumulativeValue = $rt_classWithoutFields();
var cbgm_GridPoint2 = $rt_classWithoutFields();
function cbgm_Plane() {
    var a = this; jl_Object.call(a);
    a.$normal = null;
    a.$d = 0.0;
}
function cbgm_Plane_set($this, $point1, $point2, $point3) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$4 = $this.$normal;
    var$5 = $point1.$x2;
    var$6 = $point1.$y2;
    var$7 = $point1.$z1;
    var$4.$x2 = var$5;
    var$4.$y2 = var$6;
    var$4.$z1 = var$7;
    var$8 = $point2.$x2;
    var$9 = $point2.$y2;
    var$10 = $point2.$z1;
    var$5 = var$5 - var$8;
    var$6 = var$6 - var$9;
    var$10 = var$7 - var$10;
    var$4.$x2 = var$5;
    var$4.$y2 = var$6;
    var$4.$z1 = var$10;
    var$7 = $point2.$x2 - $point3.$x2;
    var$9 = $point2.$y2 - $point3.$y2;
    var$11 = $point2.$z1 - $point3.$z1;
    var$8 = var$6 * var$11 - var$10 * var$9;
    var$10 = var$10 * var$7 - var$5 * var$11;
    var$5 = var$5 * var$9 - var$6 * var$7;
    var$4.$x2 = var$8;
    var$4.$y2 = var$10;
    var$4.$z1 = var$5;
    var$5 = var$8 * var$8 + var$10 * var$10 + var$5 * var$5;
    if (var$5 !== 0.0 && var$5 !== 1.0) {
        var$10 = 1.0 / jl_Math_sqrt(var$5);
        var$5 = var$4.$x2 * var$10;
        var$6 = var$4.$y2 * var$10;
        var$10 = var$4.$z1 * var$10;
        var$4.$x2 = var$5;
        var$4.$y2 = var$6;
        var$4.$z1 = var$10;
    }
    $point2 = $this.$normal;
    $this.$d =  -($point1.$x2 * $point2.$x2 + $point1.$y2 * $point2.$y2 + $point1.$z1 * $point2.$z1);
}
var cbgm_Interpolation$11 = $rt_classWithoutFields(cbgm_Interpolation);
var cbgm_Octree$OctreeNode = $rt_classWithoutFields();
var cbgm_Intersector$MinimumTranslationVector = $rt_classWithoutFields();
var cbgm_Intersector$SplitTriangle = $rt_classWithoutFields();
var cbgm_GridPoint3 = $rt_classWithoutFields();
var cbgm_Octree$Collider = $rt_classWithoutFields(0);
var cbgm_Matrix3 = $rt_classWithoutFields();
var cbgm_MathUtils$Sin = $rt_classWithoutFields();
var cbgm_MathUtils$Sin_table = null;
function cbgm_MathUtils$Sin__clinit_() {
    var $i, var$2;
    cbgm_MathUtils$Sin_table = $rt_createFloatArray(16384);
    $i = 0;
    while ($i < 16384) {
        cbgm_MathUtils$Sin_table.data[$i] = jl_Math_sin(($i + 0.5) / 16384.0 * 6.2831854820251465);
        $i = $i + 1 | 0;
    }
    var$2 = cbgm_MathUtils$Sin_table.data;
    var$2[0] = 0.0;
    var$2[4096] = 1.0;
    var$2[8192] = 0.0;
    var$2[12288] = (-1.0);
}
function cbggg_GlyphLayout() {
    var a = this; jl_Object.call(a);
    a.$runs = null;
    a.$colors = null;
    a.$glyphCount = 0;
    a.$width0 = 0.0;
    a.$height0 = 0.0;
}
var cbggg_GlyphLayout_glyphRunPool = null;
var cbggg_GlyphLayout_colorStack = null;
function cbggg_GlyphLayout_$callClinit() {
    cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
    cbggg_GlyphLayout__clinit_();
}
function cbggg_GlyphLayout__init_() {
    var var_0 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_0(var_0);
    return var_0;
}
function cbggg_GlyphLayout__init_1(var_0, var_1) {
    var var_2 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbggg_GlyphLayout__init_3(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_4(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function cbggg_GlyphLayout__init_5(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_6(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function cbggg_GlyphLayout__init_0($this) {
    var var$1;
    cbggg_GlyphLayout_$callClinit();
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$1;
    var$1 = new cbgu_IntArray;
    var$1.$ordered0 = 1;
    var$1.$items0 = $rt_createIntArray(2);
    $this.$colors = var$1;
}
function cbggg_GlyphLayout__init_2($this, $font, $str) {
    var var$3;
    cbggg_GlyphLayout_$callClinit();
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$3;
    var$3 = new cbgu_IntArray;
    var$3.$ordered0 = 1;
    var$3.$items0 = $rt_createIntArray(2);
    $this.$colors = var$3;
    cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$length1(), $font.$getColor(), 0.0, 8, 0, null);
}
function cbggg_GlyphLayout__init_4($this, $font, $str, $color, $targetWidth, $halign, $wrap) {
    var var$7;
    cbggg_GlyphLayout_$callClinit();
    var$7 = new cbgu_Array;
    var$7.$ordered = 1;
    var$7.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$7;
    var$7 = new cbgu_IntArray;
    var$7.$ordered0 = 1;
    var$7.$items0 = $rt_createIntArray(2);
    $this.$colors = var$7;
    cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$length1(), $color, $targetWidth, $halign, $wrap, null);
}
function cbggg_GlyphLayout__init_6($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
    var var$10;
    cbggg_GlyphLayout_$callClinit();
    var$10 = new cbgu_Array;
    var$10.$ordered = 1;
    var$10.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$10;
    var$10 = new cbgu_IntArray;
    var$10.$ordered0 = 1;
    var$10.$items0 = $rt_createIntArray(2);
    $this.$colors = var$10;
    cbggg_GlyphLayout_setText($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate);
}
function cbggg_GlyphLayout_setText($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
    var $fontData, var$11, $wrapOrTruncate, $currentColor, $markupEnabled, $isLastRun, $y, $down, $lineRun, $lastGlyph, var$20, $runStart, $newline, $runEnd, var$24, $length, $run, $runWidth, $i, $wrapIndex;
    cbggg_GlyphLayout_reset($this);
    $fontData = $font.$data;
    if ($start == $end) {
        $this.$height0 = $fontData.$capHeight;
        return;
    }
    if (!$wrap)
        var$11 = $targetWidth;
    else {
        var$11 = $fontData.$spaceXadvance * 3.0;
        if ($targetWidth > var$11)
            var$11 = $targetWidth;
    }
    $wrapOrTruncate = !$wrap && $truncate === null ? 0 : 1;
    $currentColor = cbgg_Color_toIntBits($color);
    cbgu_IntArray_add($this.$colors, 0, $currentColor);
    $markupEnabled = $fontData.$markupEnabled;
    if ($markupEnabled)
        cbgu_IntArray_add0(cbggg_GlyphLayout_colorStack, $currentColor);
    $isLastRun = 0;
    $y = 0.0;
    $down = $fontData.$down;
    $lineRun = null;
    $lastGlyph = null;
    var$20 = $currentColor;
    $runStart = $start;
    a: {
        b: while (true) {
            c: {
                $newline = 0;
                if ($start == $end) {
                    if ($runStart == $end)
                        break a;
                    $isLastRun = 1;
                    $runEnd = $end;
                } else {
                    $wrap = $start + 1 | 0;
                    if ($start < 0)
                        break b;
                    var$24 = $str.$characters.data;
                    if ($start >= var$24.length)
                        break b;
                    d: {
                        switch (var$24[$start]) {
                            case 10:
                                $runEnd = $wrap - 1 | 0;
                                $newline = 1;
                                $start = $wrap;
                                break c;
                            case 91:
                                if (!$markupEnabled) {
                                    $start = $wrap;
                                    break d;
                                }
                                $length = cbggg_GlyphLayout_parseColorMarkup($this, $str, $wrap, $end);
                                if ($length >= 0) {
                                    $runEnd = $wrap - 1 | 0;
                                    $start = $wrap + ($length + 1 | 0) | 0;
                                    if ($start == $end) {
                                        $isLastRun = 1;
                                        break c;
                                    }
                                    $currentColor = cbgu_IntArray_peek(cbggg_GlyphLayout_colorStack);
                                    break c;
                                }
                                if ($length != (-2)) {
                                    $start = $wrap;
                                    break d;
                                }
                                $start = $wrap + 1 | 0;
                                break d;
                            default:
                        }
                        $start = $wrap;
                    }
                    continue b;
                }
            }
            $color = cbggg_GlyphLayout_glyphRunPool;
            $font = $color.$freeObjects;
            $wrap = $font.$size;
            if (!$wrap)
                $font = cbgu_ReflectionPool_newObject($color);
            else {
                if (!$wrap) {
                    $font = new jl_IllegalStateException;
                    $font.$suppressionEnabled = 1;
                    $font.$writableStackTrace = 1;
                    $font.$message = $rt_s(32);
                    $rt_throw($font);
                }
                $wrap = $wrap - 1 | 0;
                $font.$size = $wrap;
                var$24 = $font.$items.data;
                $font = var$24[$wrap];
                var$24[$wrap] = null;
            }
            $run = $font;
            $run.$x3 = 0.0;
            $run.$y3 = $y;
            cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $run, $str, $runStart, $runEnd, $lastGlyph);
            $this.$glyphCount = $this.$glyphCount + $run.$glyphs.$size | 0;
            if ($currentColor != var$20) {
                $font = $this.$colors;
                $wrap = cbgu_IntArray_get($font, $font.$size0 - 2 | 0);
                var$20 = $this.$glyphCount;
                if ($wrap != var$20) {
                    cbgu_IntArray_add0($this.$colors, var$20);
                    cbgu_IntArray_add0($this.$colors, $currentColor);
                } else {
                    $font = $this.$colors;
                    cbgu_IntArray_set($font, $font.$size0 - 1 | 0, $currentColor);
                }
                var$20 = $currentColor;
            }
            e: {
                if (!$run.$glyphs.$size) {
                    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                    if ($lineRun === null)
                        break e;
                } else if ($lineRun !== null) {
                    cbggg_GlyphLayout$GlyphRun_appendRun($lineRun, $run);
                    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                } else {
                    cbgu_Array_add($this.$runs, $run);
                    $lineRun = $run;
                }
                if (!$newline && !$isLastRun)
                    $lastGlyph = cbgu_Array_peek($lineRun.$glyphs);
                else {
                    cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $lineRun);
                    $lastGlyph = null;
                }
                if ($wrapOrTruncate && $lineRun.$glyphs.$size && !(!$newline && !$isLastRun)) {
                    $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                    $i = 2;
                    while ($i < $lineRun.$xAdvances.$size1) {
                        $font = $lineRun.$glyphs;
                        $wrap = $i - 1 | 0;
                        if ($runWidth + cbggg_GlyphLayout_getGlyphWidth($this, cbgu_Array_get($font, $wrap), $fontData) - 9.999999747378752E-5 <= var$11)
                            $runWidth = $runWidth + $lineRun.$xAdvances.$items1.data[$i];
                        else {
                            if ($truncate !== null) {
                                cbggg_GlyphLayout_truncate($this, $fontData, $lineRun, var$11, $truncate);
                                break a;
                            }
                            $wrapIndex = cbggg_BitmapFont$BitmapFontData_getWrapIndex($fontData, $lineRun.$glyphs, $i);
                            if (!(!$wrapIndex && $lineRun.$x3 === 0.0) && $wrapIndex < $lineRun.$glyphs.$size)
                                $wrap = $wrapIndex;
                            $lineRun = cbggg_GlyphLayout_wrap($this, $fontData, $lineRun, $wrap);
                            if ($lineRun === null)
                                break e;
                            cbgu_Array_add($this.$runs, $lineRun);
                            $y = $y + $down;
                            $lineRun.$x3 = 0.0;
                            $lineRun.$y3 = $y;
                            $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                            $i = 1;
                        }
                        $i = $i + 1 | 0;
                    }
                }
            }
            if ($newline) {
                $lineRun = null;
                $lastGlyph = null;
                $y = $runEnd != $runStart ? $y + $down : $y + $down * $fontData.$blankLineScale;
            }
            $runStart = $start;
        }
        $font = new jl_StringIndexOutOfBoundsException;
        $font.$suppressionEnabled = 1;
        $font.$writableStackTrace = 1;
        $rt_throw($font);
    }
    $targetWidth = $fontData.$capHeight;
    if ($y <= 0.0)
        $y =  -$y;
    $this.$height0 = $targetWidth + $y;
    cbggg_GlyphLayout_calculateWidths($this, $fontData);
    cbggg_GlyphLayout_alignRuns($this, var$11, $halign);
    if ($markupEnabled)
        cbggg_GlyphLayout_colorStack.$size0 = 0;
}
function cbggg_GlyphLayout_calculateWidths($this, $fontData) {
    var $width, $run, $runsItems, $i, $n, var$7, var$8, $runWidth, $max, $glyph, $glyphs, $ii, $nn, $glyphWidth;
    $width = 0.0;
    $run = $this.$runs;
    $runsItems = $run.$items;
    $i = 0;
    $n = $run.$size;
    while ($i < $n) {
        $run = $runsItems.data[$i];
        var$7 = $run.$xAdvances.$items1.data;
        var$8 = $run.$x3;
        $runWidth = var$8 + var$7[0];
        $max = 0.0;
        $glyph = $run.$glyphs;
        $glyphs = $glyph.$items;
        $ii = 0;
        $nn = $glyph.$size;
        while ($ii < $nn) {
            $glyph = $glyphs.data[$ii];
            $glyphWidth = $runWidth + ($glyph.$width1 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
            if ($max > $glyphWidth)
                $glyphWidth = $max;
            $ii = $ii + 1 | 0;
            $runWidth = $runWidth + var$7[$ii];
            $max = $glyphWidth;
        }
        if ($runWidth > $max)
            $max = $runWidth;
        $glyphWidth = $max - var$8;
        $run.$width2 = $glyphWidth;
        var$8 = var$8 + $glyphWidth;
        if ($width > var$8)
            var$8 = $width;
        $i = $i + 1 | 0;
        $width = var$8;
    }
    $this.$width0 = $width;
}
function cbggg_GlyphLayout_alignRuns($this, $targetWidth, $halign) {
    var $center, $run, $runsItems, $i, $n;
    a: {
        if (!($halign & 8)) {
            $center = !($halign & 1) ? 0 : 1;
            $run = $this.$runs;
            $runsItems = $run.$items;
            $i = 0;
            $n = $run.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                $run = $runsItems.data[$i];
                $run.$x3 = $run.$x3 + (!$center ? $targetWidth - $run.$width2 : 0.5 * ($targetWidth - $run.$width2));
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_GlyphLayout_truncate($this, $fontData, $run, $targetWidth, $truncate) {
    var $glyphCount, var$6, var$7, $count, $xAdvances, $droppedGlyphCount, var$11, var$12, $i, $truncateRun, $truncateWidth, var$16, $n, $width, var$19, $$je;
    $glyphCount = $run.$glyphs.$size;
    cbggg_GlyphLayout_$callClinit();
    var$6 = cbggg_GlyphLayout_glyphRunPool;
    var$7 = var$6.$freeObjects;
    $count = var$7.$size;
    if ($count) {
        if (!$count) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(32);
            $rt_throw($fontData);
        }
        $count = $count - 1 | 0;
        var$7.$size = $count;
        $xAdvances = var$7.$items.data;
        var$7 = $xAdvances[$count];
        $xAdvances[$count] = null;
    } else
        a: {
            try {
                var$7 = cbgur_Constructor_newInstance(var$6.$constructor, null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $run = $$je;
                } else {
                    throw $$e;
                }
            }
            $truncate = new cbgu_GdxRuntimeException;
            $fontData = new jl_StringBuilder;
            $fontData.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(33));
            var$6 = var$6.$constructor.$constructor0.$declaringClass;
            if (var$6.$name === null)
                var$6.$name = $rt_str(var$6.$platformClass.$meta.name);
            var$7 = var$6.$name;
            jl_AbstractStringBuilder_insert($fontData, $fontData.$length, var$7);
            var$7 = new jl_String;
            $xAdvances = $fontData.$buffer;
            $droppedGlyphCount = $fontData.$length;
            jl_String_$callClinit();
            var$11 = $rt_createCharArray($droppedGlyphCount);
            var$12 = var$11.data;
            var$7.$characters = var$11;
            $i = 0;
            while ($i < $droppedGlyphCount) {
                var$12[$i] = $xAdvances.data[$i + 0 | 0];
                $i = $i + 1 | 0;
            }
            $truncate.$suppressionEnabled = 1;
            $truncate.$writableStackTrace = 1;
            $truncate.$message = var$7;
            $truncate.$cause = $run;
            $rt_throw($truncate);
        }
    $truncateRun = var$7;
    cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $truncateRun, $truncate, 0, $truncate.$length1(), null);
    $truncateWidth = 0.0;
    var$16 = $truncateRun.$xAdvances;
    $n = var$16.$size1;
    if ($n > 0) {
        var$7 = $truncateRun.$glyphs;
        $droppedGlyphCount = var$7.$size;
        if (!$droppedGlyphCount) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(32);
            $rt_throw($fontData);
        }
        var$7 = var$7.$items.data[$droppedGlyphCount - 1 | 0];
        if (!var$7.$fixedWidth)
            var$16.$items1.data[$n - 1 | 0] = (var$7.$width1 + var$7.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
        $xAdvances = var$16.$items1;
        $i = 1;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $xAdvances.data[$i];
            $i = $i + 1 | 0;
        }
    }
    $targetWidth = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x3;
    var$6 = $run.$xAdvances;
    $xAdvances = var$6.$items1;
    b: {
        while (true) {
            if ($count >= var$6.$size1)
                break b;
            $width = $width + $xAdvances.data[$count];
            if ($width > $targetWidth)
                break;
            $count = $count + 1 | 0;
        }
    }
    if ($count <= 1) {
        var$19 = $run.$glyphs;
        $xAdvances = var$19.$items;
        $count = 0;
        $droppedGlyphCount = var$19.$size;
        var$7 = null;
        if ($count > $droppedGlyphCount) {
            $fontData = new jl_IllegalArgumentException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $rt_throw($fontData);
        }
        while ($count < $droppedGlyphCount) {
            var$11 = $xAdvances.data;
            $i = $count + 1 | 0;
            var$11[$count] = var$7;
            $count = $i;
        }
        var$19.$size = 0;
        var$6.$size1 = 0;
        cbgu_FloatArray_addAll(var$6, var$16.$items1, 0, var$16.$size1);
    } else {
        cbgu_Array_truncate($run.$glyphs, $count - 1 | 0);
        cbgu_FloatArray_truncate($run.$xAdvances, $count);
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run);
        var$7 = $truncateRun.$xAdvances;
        $count = var$7.$size1;
        if ($count > 0)
            cbgu_FloatArray_addAll0($run.$xAdvances, var$7, 1, $count - 1 | 0);
    }
    c: {
        $droppedGlyphCount = $glyphCount - $run.$glyphs.$size | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled)
                while (true) {
                    $fontData = $this.$colors;
                    $count = $fontData.$size0;
                    if ($count <= 2)
                        break c;
                    if (cbgu_IntArray_get($fontData, $count - 2 | 0) < $this.$glyphCount)
                        break c;
                    $fontData = $this.$colors;
                    $fontData.$size0 = $fontData.$size0 - 2 | 0;
                }
        }
    }
    cbgu_Array_addAll($run.$glyphs, $truncateRun.$glyphs);
    $this.$glyphCount = $this.$glyphCount + $truncate.$length1() | 0;
    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $truncateRun);
}
function cbggg_GlyphLayout_wrap($this, $fontData, $first, $secondStart) {
    var $glyphs2, $glyphCount, $xAdvances2, $firstEnd, $reductionThreshold, $second, var$10, var$11, var$12, $i, $droppedGlyphCount, $lastColor, $glyphs1, $xAdvances1, $firstGlyphCount, $secondGlyphCount, $colorChangeIndex;
    $glyphs2 = $first.$glyphs;
    $glyphCount = $glyphs2.$size;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            $reductionThreshold = $firstEnd - 1 | 0;
            if ($reductionThreshold >= $glyphCount)
                break;
            b: {
                switch ($glyphs2.$items.data[$reductionThreshold].$id & 65535) {
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        break;
                    default:
                        $reductionThreshold = 0;
                        break b;
                }
                $reductionThreshold = 1;
            }
            if (!$reductionThreshold)
                break a;
            $firstEnd = $firstEnd + (-1) | 0;
        }
        $first = new jl_IndexOutOfBoundsException;
        $fontData = new jl_StringBuilder;
        $fontData.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $reductionThreshold, 10);
        jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(37));
        $secondStart = $glyphs2.$size;
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $secondStart, 10);
        $second = new jl_String;
        var$10 = $fontData.$buffer;
        $reductionThreshold = $fontData.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray($reductionThreshold);
        var$12 = var$11.data;
        $second.$characters = var$11;
        $i = 0;
        while ($i < $reductionThreshold) {
            var$12[$i] = var$10.data[$i + 0 | 0];
            $i = $i + 1 | 0;
        }
        $first.$suppressionEnabled = 1;
        $first.$writableStackTrace = 1;
        $first.$message = $second;
        $rt_throw($first);
    }
    c: {
        while (true) {
            $i = $rt_compare($secondStart, $glyphCount);
            if ($i >= 0)
                break c;
            if ($i >= 0)
                break;
            d: {
                switch ($glyphs2.$items.data[$secondStart].$id & 65535) {
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        break;
                    default:
                        $reductionThreshold = 0;
                        break d;
                }
                $reductionThreshold = 1;
            }
            if (!$reductionThreshold)
                break c;
            $secondStart = $secondStart + 1 | 0;
        }
        $first = new jl_IndexOutOfBoundsException;
        $fontData = new jl_StringBuilder;
        $fontData.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $secondStart, 10);
        jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(37));
        $secondStart = $glyphs2.$size;
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $secondStart, 10);
        $second = new jl_String;
        var$10 = $fontData.$buffer;
        $reductionThreshold = $fontData.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray($reductionThreshold);
        var$12 = var$11.data;
        $second.$characters = var$11;
        $i = 0;
        while ($i < $reductionThreshold) {
            var$12[$i] = var$10.data[$i + 0 | 0];
            $i = $i + 1 | 0;
        }
        $first.$suppressionEnabled = 1;
        $first.$writableStackTrace = 1;
        $first.$message = $second;
        $rt_throw($first);
    }
    $second = null;
    if ($i >= 0) {
        cbgu_Array_truncate($glyphs2, $firstEnd);
        cbgu_FloatArray_truncate($xAdvances2, $firstEnd + 1 | 0);
        $droppedGlyphCount = $secondStart - $firstEnd | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled) {
                $glyphs2 = $this.$colors;
                if (cbgu_IntArray_get($glyphs2, $glyphs2.$size0 - 2 | 0) > $this.$glyphCount) {
                    $lastColor = cbgu_IntArray_peek($this.$colors);
                    while (true) {
                        $glyphs2 = $this.$colors;
                        $secondStart = cbgu_IntArray_get($glyphs2, $glyphs2.$size0 - 2 | 0);
                        $reductionThreshold = $this.$glyphCount;
                        if ($secondStart <= $reductionThreshold)
                            break;
                        $glyphs2 = $this.$colors;
                        $glyphs2.$size0 = $glyphs2.$size0 - 2 | 0;
                    }
                    $glyphs2 = $this.$colors;
                    cbgu_IntArray_set($glyphs2, $glyphs2.$size0 - 2 | 0, $reductionThreshold);
                    $glyphs2 = $this.$colors;
                    cbgu_IntArray_set($glyphs2, $glyphs2.$size0 - 1 | 0, $lastColor);
                }
            }
        }
    } else
        e: {
            cbggg_GlyphLayout_$callClinit();
            $second = cbgu_Pool_obtain(cbggg_GlyphLayout_glyphRunPool);
            $glyphs1 = $second.$glyphs;
            cbgu_Array_addAll0($glyphs1, $glyphs2, 0, $firstEnd);
            cbgu_Array_removeRange($glyphs2, 0, $secondStart - 1 | 0);
            $first.$glyphs = $glyphs1;
            $second.$glyphs = $glyphs2;
            $xAdvances1 = $second.$xAdvances;
            cbgu_FloatArray_addAll0($xAdvances1, $xAdvances2, 0, $firstEnd + 1 | 0);
            cbgu_FloatArray_removeRange($xAdvances2, 1, $secondStart);
            $xAdvances2.$items1.data[0] = cbggg_GlyphLayout_getLineOffset($this, $glyphs2, $fontData);
            $first.$xAdvances = $xAdvances1;
            $second.$xAdvances = $xAdvances2;
            $firstGlyphCount = $first.$glyphs.$size;
            $secondGlyphCount = $second.$glyphs.$size;
            $droppedGlyphCount = ($glyphCount - $firstGlyphCount | 0) - $secondGlyphCount | 0;
            $secondStart = $this.$glyphCount - $droppedGlyphCount | 0;
            $this.$glyphCount = $secondStart;
            if ($fontData.$markupEnabled && $droppedGlyphCount > 0) {
                $reductionThreshold = $secondStart - $secondGlyphCount | 0;
                $i = $this.$colors.$size0 - 2 | 0;
                while (true) {
                    if ($i < 2)
                        break e;
                    $colorChangeIndex = cbgu_IntArray_get($this.$colors, $i);
                    if ($colorChangeIndex <= $reductionThreshold)
                        break;
                    cbgu_IntArray_set($this.$colors, $i, $colorChangeIndex - $droppedGlyphCount | 0);
                    $i = $i + (-2) | 0;
                }
            }
        }
    if ($firstEnd)
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $first);
    else {
        cbggg_GlyphLayout_$callClinit();
        cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $first);
        cbgu_Array_pop($this.$runs);
    }
    return $second;
}
function cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run) {
    var $last, var$4;
    $last = $run.$glyphs;
    var$4 = $last.$size;
    if (!var$4) {
        $fontData = new jl_IllegalStateException;
        $fontData.$suppressionEnabled = 1;
        $fontData.$writableStackTrace = 1;
        $fontData.$message = $rt_s(32);
        $rt_throw($fontData);
    }
    $last = $last.$items.data[var$4 - 1 | 0];
    if (!$last.$fixedWidth) {
        $run = $run.$xAdvances;
        $run.$items1.data[$run.$size1 - 1 | 0] = ($last.$width1 + $last.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
    }
}
function cbggg_GlyphLayout_getGlyphWidth($this, $glyph, $fontData) {
    return ($glyph.$width1 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
}
function cbggg_GlyphLayout_getLineOffset($this, $glyphs, $fontData) {
    if ($glyphs.$size)
        return ( -$glyphs.$items.data[0].$xoffset | 0) * $fontData.$scaleX - $fontData.$padLeft;
    $fontData = new jl_IllegalStateException;
    $fontData.$suppressionEnabled = 1;
    $fontData.$writableStackTrace = 1;
    $fontData.$message = $rt_s(32);
    $rt_throw($fontData);
}
function cbggg_GlyphLayout_parseColorMarkup($this, $str, $start, $end) {
    var var$4, var$5, $color, $i, $ch, $ch_0, $i_0, var$11, var$12, $color_0;
    if ($start == $end)
        return (-1);
    if ($start >= 0) {
        var$4 = $str.$characters.data;
        var$5 = var$4.length;
        if ($start < var$5) {
            switch (var$4[$start]) {
                case 35:
                    $color = 0;
                    $i = $start + 1 | 0;
                    a: {
                        while (true) {
                            if ($i >= $end)
                                break a;
                            if ($i < 0)
                                break;
                            if ($i >= var$5)
                                break;
                            $ch = var$4[$i];
                            if ($ch == 93) {
                                if ($i < ($start + 2 | 0))
                                    break a;
                                if ($i <= ($start + 9 | 0)) {
                                    $start = $i - $start | 0;
                                    if ($start < 8)
                                        $color = $color << ((9 - $start | 0) << 2) | 255;
                                    cbggg_GlyphLayout_$callClinit();
                                    $str = cbggg_GlyphLayout_colorStack;
                                    $end = (($color & (-16711936)) >>> 8 | 0) | ($color & 16711935) << 8;
                                    cbgu_IntArray_add0($str, ($end >>> 16 | 0) + ($end << 16) | 0);
                                    return $start;
                                }
                                break a;
                            }
                            $ch_0 = ($color << 4) + $ch | 0;
                            if ($ch >= 48 && $ch <= 57)
                                $color = $ch_0 + (-48) | 0;
                            else if ($ch >= 65 && $ch <= 70)
                                $color = $ch_0 + (-55) | 0;
                            else {
                                if ($ch < 97)
                                    break a;
                                if ($ch > 102)
                                    break a;
                                $color = $ch_0 + (-87) | 0;
                            }
                            $i = $i + 1 | 0;
                        }
                        $str = new jl_StringIndexOutOfBoundsException;
                        $str.$suppressionEnabled = 1;
                        $str.$writableStackTrace = 1;
                        $rt_throw($str);
                    }
                    return (-1);
                case 91:
                    break;
                case 93:
                    cbggg_GlyphLayout_$callClinit();
                    $str = cbggg_GlyphLayout_colorStack;
                    $start = $str.$size0;
                    if ($start > 1)
                        $str.$size0 = $start - 1 | 0;
                    return 0;
                default:
                    $i_0 = $start + 1 | 0;
                    b: {
                        while ($i_0 < $end) {
                            if ($i_0 < 0)
                                break b;
                            $i = $rt_compare($i_0, var$5);
                            if ($i >= 0)
                                break b;
                            if (var$4[$i_0] == 93) {
                                $end = $rt_compare($start, $i_0);
                                if ($end > 0) {
                                    $str = new jl_IndexOutOfBoundsException;
                                    $str.$suppressionEnabled = 1;
                                    $str.$writableStackTrace = 1;
                                    $rt_throw($str);
                                }
                                if (!$end) {
                                    jl_String_$callClinit();
                                    $str = jl_String_EMPTY;
                                } else if (!(!$start && !$i)) {
                                    $str = new jl_String;
                                    $end = $i_0 - $start | 0;
                                    jl_String_$callClinit();
                                    var$11 = $rt_createCharArray($end);
                                    var$12 = var$11.data;
                                    $str.$characters = var$11;
                                    $ch = 0;
                                    while ($ch < $end) {
                                        var$12[$ch] = var$4[$ch + $start | 0];
                                        $ch = $ch + 1 | 0;
                                    }
                                }
                                cbgg_Colors_$callClinit();
                                $color_0 = cbgg_Colors_map;
                                $end = cbgu_ObjectMap_locateKey($color_0, $str);
                                $color_0 = $end < 0 ? null : $color_0.$valueTable.data[$end];
                                if ($color_0 === null)
                                    return (-1);
                                cbggg_GlyphLayout_$callClinit();
                                cbgu_IntArray_add0(cbggg_GlyphLayout_colorStack, cbgg_Color_toIntBits($color_0));
                                return $i_0 - $start | 0;
                            }
                            $i_0 = $i_0 + 1 | 0;
                        }
                        return (-1);
                    }
                    $str = new jl_StringIndexOutOfBoundsException;
                    $str.$suppressionEnabled = 1;
                    $str.$writableStackTrace = 1;
                    $rt_throw($str);
            }
            return (-2);
        }
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
}
function cbggg_GlyphLayout_reset($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    cbggg_GlyphLayout_$callClinit();
    cbgu_Pool_freeAll(cbggg_GlyphLayout_glyphRunPool, $this.$runs);
    var$1 = $this.$runs;
    var$2 = var$1.$items;
    var$3 = 0;
    var$4 = var$1.$size;
    var$5 = null;
    if (var$3 > var$4) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < var$4) {
        var$6 = var$2.data;
        var$7 = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = var$7;
    }
    var$1.$size = 0;
    $this.$colors.$size0 = 0;
    $this.$glyphCount = 0;
    $this.$width0 = 0.0;
    $this.$height0 = 0.0;
}
function cbggg_GlyphLayout_toString($this) {
    var $buffer, var$2, $n, $i, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if (!$this.$runs.$size)
        return $rt_s(42);
    $buffer = new jl_StringBuilder;
    $buffer.$buffer = $rt_createCharArray(128);
    var$2 = $this.$width0;
    jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$2);
    $n = $buffer.$length;
    jl_AbstractStringBuilder_insertSpace($buffer, $n, $n + 1 | 0);
    $buffer.$buffer.data[$n] = 120;
    var$2 = $this.$height0;
    jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$2);
    $n = $buffer.$length;
    jl_AbstractStringBuilder_insertSpace($buffer, $n, $n + 1 | 0);
    $buffer.$buffer.data[$n] = 10;
    $i = 0;
    $n = $this.$runs.$size;
    while ($i < $n) {
        var$5 = $this.$runs;
        if ($i >= var$5.$size) {
            var$6 = new jl_IndexOutOfBoundsException;
            $buffer = new jl_StringBuilder;
            $buffer.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $i, 10);
            jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(37));
            $i = var$5.$size;
            jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $i, 10);
            var$5 = new jl_String;
            var$7 = $buffer.$buffer;
            $n = $buffer.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray($n);
            var$9 = var$8.data;
            var$5.$characters = var$8;
            var$10 = 0;
            while (var$10 < $n) {
                var$9[var$10] = var$7.data[var$10 + 0 | 0];
                var$10 = var$10 + 1 | 0;
            }
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            var$6.$message = var$5;
            $rt_throw(var$6);
        }
        var$5 = cbggg_GlyphLayout$GlyphRun_toString(var$5.$items.data[$i]);
        jl_AbstractStringBuilder_insert($buffer, $buffer.$length, var$5);
        var$11 = $buffer.$length;
        jl_AbstractStringBuilder_insertSpace($buffer, var$11, var$11 + 1 | 0);
        $buffer.$buffer.data[var$11] = 10;
        $i = $i + 1 | 0;
    }
    $i = $buffer.$length - 1 | 0;
    $buffer.$length = $i;
    var$5 = new jl_String;
    var$7 = $buffer.$buffer;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($i);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < $i) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    return var$5;
}
function cbggg_GlyphLayout__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, $$je;
    cbgu_Pools_$callClinit();
    var$1 = cbgu_Pools_typePools;
    var$2 = cbgu_ObjectMap_locateKey(var$1, $rt_cls(cbggg_GlyphLayout$GlyphRun));
    var$1 = var$2 < 0 ? null : var$1.$valueTable.data[var$2];
    if (var$1 === null) {
        var$1 = new cbgu_ReflectionPool;
        var$3 = new cbgu_Array;
        var$3.$ordered = 0;
        var$3.$items = $rt_createArray(jl_Object, 4);
        var$1.$freeObjects = var$3;
        var$1.$max = 100;
        a: {
            try {
                var$3 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout$GlyphRun), null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
            try {
                var$3 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout$GlyphRun), null);
                cbgur_Constructor_setAccessible(var$3, 1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cbgur_ReflectionException) {
                } else {
                    throw $$e;
                }
            }
            var$3 = null;
        }
        var$1.$constructor = var$3;
        if (var$3 === null) {
            var$1 = new jl_RuntimeException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(26));
            if ($rt_cls(cbggg_GlyphLayout$GlyphRun).$name === null)
                $rt_cls(cbggg_GlyphLayout$GlyphRun).$name = $rt_str($rt_cls(cbggg_GlyphLayout$GlyphRun).$platformClass.$meta.name);
            var$4 = $rt_cls(cbggg_GlyphLayout$GlyphRun).$name;
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$4);
            var$4 = new jl_String;
            var$5 = var$3.$buffer;
            var$2 = var$3.$length;
            jl_String_$callClinit();
            var$6 = $rt_createCharArray(var$2);
            var$7 = var$6.data;
            var$4.$characters = var$6;
            var$8 = 0;
            while (var$8 < var$2) {
                var$7[var$8] = var$5.data[var$8 + 0 | 0];
                var$8 = var$8 + 1 | 0;
            }
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = var$4;
            $rt_throw(var$1);
        }
        cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout$GlyphRun), var$1);
    }
    cbggg_GlyphLayout_glyphRunPool = var$1;
    var$4 = new cbgu_IntArray;
    var$4.$ordered0 = 1;
    var$4.$items0 = $rt_createIntArray(4);
    cbggg_GlyphLayout_colorStack = var$4;
}
function cbggg_TextureRegion() {
    var a = this; jl_Object.call(a);
    a.$texture = null;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v2 = 0.0;
    a.$regionWidth = 0;
    a.$regionHeight = 0;
}
function cbggg_TextureRegion_setRegion($this, $x, $y, $width, $height) {
    var var$5, $invTexWidth, $invTexHeight;
    var$5 = $this.$texture.$data0;
    $invTexWidth = 1.0 / var$5.$width3;
    $invTexHeight = 1.0 / var$5.$height1;
    cbggg_TextureRegion_setRegion0($this, $x * $invTexWidth, $y * $invTexHeight, ($x + $width | 0) * $invTexWidth, ($y + $height | 0) * $invTexHeight);
    if ($width <= 0)
        $width =  -$width | 0;
    $this.$regionWidth = $width;
    if ($height <= 0)
        $height =  -$height | 0;
    $this.$regionHeight = $height;
}
function cbggg_TextureRegion_setRegion0($this, $u, $v, $u2, $v2) {
    var var$5, var$6, var$7, $adjustX, var$9, var$10, $adjustY;
    var$5 = $this.$texture.$data0;
    var$6 = var$5.$width3;
    var$7 = var$5.$height1;
    $adjustX = $u2 - $u;
    if ($adjustX <= 0.0)
        $adjustX =  -$adjustX;
    var$9 = var$6;
    $adjustX = $adjustX * var$9;
    var$10 = $rt_compare($adjustX, 0.0);
    var$6 = $adjustX + (var$10 > 0 ? 1.0 : var$10 >= 0 ? $adjustX : (-1.0)) * 0.5 | 0;
    $this.$regionWidth = var$6;
    $adjustX = $v2 - $v;
    if ($adjustX <= 0.0)
        $adjustX =  -$adjustX;
    $adjustY = var$7;
    $adjustX = $adjustX * $adjustY;
    var$10 = $rt_compare($adjustX, 0.0);
    var$7 = $adjustX + (var$10 > 0 ? 1.0 : var$10 >= 0 ? $adjustX : (-1.0)) * 0.5 | 0;
    $this.$regionHeight = var$7;
    if (var$6 == 1 && var$7 == 1) {
        $adjustX = 0.25 / var$9;
        $u = $u + $adjustX;
        $u2 = $u2 - $adjustX;
        $adjustY = 0.25 / $adjustY;
        $v = $v + $adjustY;
        $v2 = $v2 - $adjustY;
    }
    $this.$u = $u;
    $this.$v = $v;
    $this.$u2 = $u2;
    $this.$v2 = $v2;
}
var cbggg_Sprite = $rt_classWithoutFields(cbggg_TextureRegion);
function cbggg_BitmapFont() {
    var a = this; jl_Object.call(a);
    a.$data = null;
    a.$regions = null;
    a.$cache = null;
    a.$flipped = 0;
    a.$integer = 0;
    a.$ownsTexture = 0;
}
function cbggg_BitmapFont__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_BitmapFont__init_0($this, $data, $pageRegions, $integer) {
    var var$4, $n, $i, var$7, var$8, var$9, $file, var$11, var$12, var$13;
    $this.$flipped = $data.$flipped0;
    $this.$data = $data;
    $this.$integer = $integer;
    if ($pageRegions !== null && $pageRegions.$size) {
        $this.$regions = $pageRegions;
        $this.$ownsTexture = 0;
    } else {
        var$4 = $data.$imagePaths;
        if (var$4 === null) {
            $data = new jl_IllegalArgumentException;
            $data.$suppressionEnabled = 1;
            $data.$writableStackTrace = 1;
            $data.$message = $rt_s(43);
            $rt_throw($data);
        }
        $n = var$4.data.length;
        $pageRegions = new cbgu_Array;
        $pageRegions.$ordered = 1;
        $pageRegions.$items = $rt_createArray(jl_Object, $n);
        $this.$regions = $pageRegions;
        $i = 0;
        while ($i < $n) {
            var$7 = $data.$fontFile;
            if (var$7 !== null) {
                var$8 = cbg_Gdx_files;
                $pageRegions = $data.$imagePaths.data[$i];
                var$9 = var$7.$type;
                $file = cgxgbt_TeaFileHandle__init_(var$8.$preloader, $pageRegions, var$9);
            } else {
                $pageRegions = cbg_Gdx_files;
                var$7 = $data.$imagePaths.data[$i];
                $file = new cgxgbt_TeaFileHandle;
                var$8 = $pageRegions.$preloader;
                cbg_Files$FileType_$callClinit();
                cgxgbt_TeaFileHandle__init_0($file, var$8, var$7, cbg_Files$FileType_Internal);
            }
            $pageRegions = $this.$regions;
            var$7 = new cbggg_TextureRegion;
            var$8 = new cbgg_Texture;
            var$9 = null;
            var$11 = cbggg_FileTextureData__init_($file, cbgg_Pixmap__init_($file), var$9, 0);
            var$12 = cgxgbt_TeaGL20_glGenTexture(cbg_Gdx_gl);
            cbgg_Texture$TextureFilter_$callClinit();
            $file = cbgg_Texture$TextureFilter_Nearest;
            var$8.$minFilter = $file;
            var$8.$magFilter = $file;
            cbgg_Texture$TextureWrap_$callClinit();
            $file = cbgg_Texture$TextureWrap_ClampToEdge;
            var$8.$uWrap = $file;
            var$8.$vWrap = $file;
            var$8.$anisotropicFilterLevel = 1.0;
            var$8.$glTarget = 3553;
            var$8.$glHandle = var$12;
            cbgg_Texture_load(var$8, var$11);
            $file = cbg_Gdx_app;
            var$9 = cbgg_Texture_managedTextures;
            if ($file === null) {
                var$9 = var$9.$elementData.data[0];
                while (var$9 !== null && var$9.$key !== null) {
                    var$9 = var$9.$next;
                }
            } else {
                var$13 = jl_Object_hashCode($file);
                var$4 = var$9.$elementData.data;
                var$9 = var$4[var$13 & (var$4.length - 1 | 0)];
                while (var$9 !== null && !(var$9.$origKeyHash == var$13 && ju_HashMap_areEqualKeys($file, var$9.$key))) {
                    var$9 = var$9.$next;
                }
            }
            var$9 = var$9 === null ? null : var$9.$value4;
            if (var$9 === null) {
                var$9 = new cbgu_Array;
                var$9.$ordered = 1;
                var$9.$items = $rt_createArray(jl_Object, 16);
            }
            cbgu_Array_add(var$9, var$8);
            ju_HashMap_putImpl(cbgg_Texture_managedTextures, $file, var$9);
            var$7.$texture = var$8;
            $file = var$8.$data0;
            cbggg_TextureRegion_setRegion(var$7, 0, 0, $file.$width3, $file.$height1);
            cbgu_Array_add($pageRegions, var$7);
            $i = $i + 1 | 0;
        }
        $this.$ownsTexture = 1;
    }
    $this.$cache = cbggg_BitmapFontCache__init_($this, $this.$integer);
    cbggg_BitmapFont_load($this, $data);
}
function cbggg_BitmapFont_load($this, $data) {
    var var$2, var$3, var$4, $glyph, var$6, $page, var$8, var$9, var$10, var$11;
    var$2 = $data.$glyphs0.data;
    var$3 = var$2.length;
    var$4 = 0;
    a: while (true) {
        if (var$4 >= var$3) {
            $glyph = $data.$missingGlyph;
            if ($glyph !== null) {
                var$6 = $this.$regions;
                var$3 = $glyph.$page;
                if (var$3 >= var$6.$size) {
                    $glyph = new jl_IndexOutOfBoundsException;
                    $data = new jl_StringBuilder;
                    $data.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($data, $data.$length, $rt_s(36));
                    jl_AbstractStringBuilder_insert0($data, $data.$length, var$3, 10);
                    jl_AbstractStringBuilder_insert($data, $data.$length, $rt_s(37));
                    var$3 = var$6.$size;
                    jl_AbstractStringBuilder_insert0($data, $data.$length, var$3, 10);
                    var$6 = new jl_String;
                    var$2 = $data.$buffer;
                    var$4 = $data.$length;
                    jl_String_$callClinit();
                    $page = $rt_createCharArray(var$4);
                    var$8 = $page.data;
                    var$6.$characters = $page;
                    var$9 = 0;
                    while (var$9 < var$4) {
                        var$8[var$9] = var$2.data[var$9 + 0 | 0];
                        var$9 = var$9 + 1 | 0;
                    }
                    $glyph.$suppressionEnabled = 1;
                    $glyph.$writableStackTrace = 1;
                    $glyph.$message = var$6;
                    $rt_throw($glyph);
                }
                cbggg_BitmapFont$BitmapFontData_setGlyphRegion($data, $glyph, var$6.$items.data[var$3]);
            }
            return;
        }
        b: {
            $page = var$2[var$4];
            if ($page !== null) {
                $page = $page.data;
                var$9 = $page.length;
                var$10 = 0;
                while (true) {
                    if (var$10 >= var$9)
                        break b;
                    $glyph = $page[var$10];
                    if ($glyph !== null) {
                        var$6 = $this.$regions;
                        var$11 = $glyph.$page;
                        if (var$11 >= var$6.$size)
                            break a;
                        cbggg_BitmapFont$BitmapFontData_setGlyphRegion($data, $glyph, var$6.$items.data[var$11]);
                    }
                    var$10 = var$10 + 1 | 0;
                }
            }
        }
        var$4 = var$4 + 1 | 0;
    }
    $glyph = new jl_IndexOutOfBoundsException;
    $data = new jl_StringBuilder;
    $data.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($data, $data.$length, $rt_s(36));
    jl_AbstractStringBuilder_insert0($data, $data.$length, var$11, 10);
    jl_AbstractStringBuilder_insert($data, $data.$length, $rt_s(37));
    var$3 = var$6.$size;
    jl_AbstractStringBuilder_insert0($data, $data.$length, var$3, 10);
    var$6 = new jl_String;
    var$2 = $data.$buffer;
    var$4 = $data.$length;
    jl_String_$callClinit();
    $page = $rt_createCharArray(var$4);
    var$8 = $page.data;
    var$6.$characters = $page;
    var$9 = 0;
    while (var$9 < var$4) {
        var$8[var$9] = var$2.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    $glyph.$suppressionEnabled = 1;
    $glyph.$writableStackTrace = 1;
    $glyph.$message = var$6;
    $rt_throw($glyph);
}
function cbggg_BitmapFont_draw($this, $batch, $str, $x, $y, $targetWidth, $halign, $wrap) {
    var var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, $$je;
    cbggg_BitmapFontCache_clear($this.$cache);
    var$8 = $this.$cache;
    var$9 = $str.$characters.data.length;
    var$10 = null;
    cbgu_Pools_$callClinit();
    var$11 = cbgu_Pools_typePools;
    var$12 = cbgu_ObjectMap_locateKey(var$11, $rt_cls(cbggg_GlyphLayout));
    var$13 = var$12 < 0 ? null : var$11.$valueTable.data[var$12];
    if (var$13 === null) {
        var$13 = new cbgu_ReflectionPool;
        var$11 = new cbgu_Array;
        jl_Object__init_0(var$11);
        var$11.$ordered = 0;
        var$11.$items = $rt_createArray(jl_Object, 4);
        var$13.$freeObjects = var$11;
        var$13.$max = 100;
        a: {
            try {
                var$11 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
            try {
                var$11 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                cbgur_Constructor_setAccessible(var$11, 1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cbgur_ReflectionException) {
                } else {
                    throw $$e;
                }
            }
            var$11 = null;
        }
        var$13.$constructor = var$11;
        if (var$11 === null) {
            $batch = new jl_RuntimeException;
            $str = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($str, 16);
            jl_StringBuilder_insert($str, $str.$length, $rt_s(26));
            if ($rt_cls(cbggg_GlyphLayout).$name === null)
                $rt_cls(cbggg_GlyphLayout).$name = $rt_str($rt_cls(cbggg_GlyphLayout).$platformClass.$meta.name);
            var$11 = $rt_cls(cbggg_GlyphLayout).$name;
            jl_StringBuilder_insert($str, $str.$length, var$11);
            var$11 = new jl_String;
            var$14 = $str.$buffer;
            $wrap = $str.$length;
            jl_String_$callClinit();
            var$15 = $rt_createCharArray($wrap);
            var$16 = var$15.data;
            var$11.$characters = var$15;
            var$17 = 0;
            while (var$17 < $wrap) {
                var$16[var$17] = var$14.data[var$17 + 0 | 0];
                var$17 = var$17 + 1 | 0;
            }
            $batch.$suppressionEnabled = 1;
            $batch.$writableStackTrace = 1;
            $batch.$message = var$11;
            $rt_throw($batch);
        }
        cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), var$13);
    }
    b: {
        var$11 = var$13.$freeObjects;
        var$12 = var$11.$size;
        if (var$12) {
            if (!var$12) {
                $batch = new jl_IllegalStateException;
                $batch.$suppressionEnabled = 1;
                $batch.$writableStackTrace = 1;
                $batch.$message = $rt_s(32);
                $rt_throw($batch);
            }
            var$17 = var$12 - 1 | 0;
            var$11.$size = var$17;
            var$14 = var$11.$items.data;
            var$18 = var$14[var$17];
            var$14[var$17] = null;
        } else
            try {
                var$18 = cbgur_Constructor_newInstance(var$13.$constructor, null);
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $str = $$je;
                    var$11 = new cbgu_GdxRuntimeException;
                    $batch = new jl_StringBuilder;
                    jl_Object__init_0($batch);
                    $batch.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($batch, $batch.$length, $rt_s(33));
                    var$8 = var$13.$constructor.$constructor0.$declaringClass;
                    if (var$8.$name === null)
                        var$8.$name = $rt_str(var$8.$platformClass.$meta.name);
                    var$18 = var$8.$name;
                    jl_AbstractStringBuilder_insert($batch, $batch.$length, var$18);
                    var$18 = new jl_String;
                    var$14 = $batch.$buffer;
                    $wrap = $batch.$length;
                    jl_String_$callClinit();
                    var$15 = $rt_createCharArray($wrap);
                    var$16 = var$15.data;
                    var$18.$characters = var$15;
                    var$17 = 0;
                    while (var$17 < $wrap) {
                        var$16[var$17] = var$14.data[var$17 + 0 | 0];
                        var$17 = var$17 + 1 | 0;
                    }
                    jl_Throwable__init_(var$11, var$18, $str);
                    $rt_throw(var$11);
                } else {
                    throw $$e;
                }
            }
    }
    var$11 = var$18;
    cbgu_Array_add(var$8.$pooledLayouts, var$11);
    cbggg_GlyphLayout_setText(var$11, var$8.$font, $str, 0, var$9, var$8.$color, $targetWidth, $halign, $wrap, var$10);
    cbggg_BitmapFontCache_addToCache(var$8, var$11, $x, $y + var$8.$font.$data.$ascent);
    cbggg_BitmapFontCache_draw($this.$cache, $batch);
    return var$11;
}
var cbggg_NinePatch = $rt_classWithoutFields();
var cbggg_NinePatch_tmpDrawColor = null;
function cbggg_NinePatch_$callClinit() {
    cbggg_NinePatch_$callClinit = $rt_eraseClinit(cbggg_NinePatch);
    cbggg_NinePatch__clinit_();
}
function cbggg_NinePatch__clinit_() {
    var var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_$callClinit();
    cbggg_NinePatch_tmpDrawColor = var$1;
}
function cbgg_Color() {
    var a = this; jl_Object.call(a);
    a.$r = 0.0;
    a.$g = 0.0;
    a.$b = 0.0;
    a.$a = 0.0;
}
var cbgg_Color_WHITE = null;
var cbgg_Color_LIGHT_GRAY = null;
var cbgg_Color_GRAY = null;
var cbgg_Color_DARK_GRAY = null;
var cbgg_Color_BLACK = null;
var cbgg_Color_WHITE_FLOAT_BITS = 0.0;
var cbgg_Color_CLEAR = null;
var cbgg_Color_BLUE = null;
var cbgg_Color_NAVY = null;
var cbgg_Color_ROYAL = null;
var cbgg_Color_SLATE = null;
var cbgg_Color_SKY = null;
var cbgg_Color_CYAN = null;
var cbgg_Color_TEAL = null;
var cbgg_Color_GREEN = null;
var cbgg_Color_CHARTREUSE = null;
var cbgg_Color_LIME = null;
var cbgg_Color_FOREST = null;
var cbgg_Color_OLIVE = null;
var cbgg_Color_YELLOW = null;
var cbgg_Color_GOLD = null;
var cbgg_Color_GOLDENROD = null;
var cbgg_Color_ORANGE = null;
var cbgg_Color_BROWN = null;
var cbgg_Color_TAN = null;
var cbgg_Color_FIREBRICK = null;
var cbgg_Color_RED = null;
var cbgg_Color_SCARLET = null;
var cbgg_Color_CORAL = null;
var cbgg_Color_SALMON = null;
var cbgg_Color_PINK = null;
var cbgg_Color_MAGENTA = null;
var cbgg_Color_PURPLE = null;
var cbgg_Color_VIOLET = null;
var cbgg_Color_MAROON = null;
function cbgg_Color_$callClinit() {
    cbgg_Color_$callClinit = $rt_eraseClinit(cbgg_Color);
    cbgg_Color__clinit_();
}
function cbgg_Color_clamp($this) {
    var var$1, var$2;
    var$1 = $this.$r;
    if (var$1 < 0.0)
        $this.$r = 0.0;
    else if (var$1 > 1.0)
        $this.$r = 1.0;
    var$2 = $this.$g;
    if (var$2 < 0.0)
        $this.$g = 0.0;
    else if (var$2 > 1.0)
        $this.$g = 1.0;
    var$2 = $this.$b;
    if (var$2 < 0.0)
        $this.$b = 0.0;
    else if (var$2 > 1.0)
        $this.$b = 1.0;
    var$2 = $this.$a;
    if (var$2 < 0.0)
        $this.$a = 0.0;
    else if (var$2 > 1.0)
        $this.$a = 1.0;
    return $this;
}
function cbgg_Color_equals($this, $o) {
    var $color, var$3, var$4, var$5;
    if ($this === $o)
        return 1;
    if ($o !== null) {
        $color = $this.constructor;
        if ($color === null)
            var$3 = null;
        else {
            var$3 = $color.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                var$3.$platformClass = $color;
                var$4 = var$3;
                $color.classObject = var$4;
            }
        }
        var$4 = $o.constructor;
        if (var$4 === null)
            $color = null;
        else {
            $color = var$4.classObject;
            if ($color === null) {
                $color = new jl_Class;
                $color.$platformClass = var$4;
                var$5 = $color;
                var$4.classObject = var$5;
            }
        }
        if (var$3 === $color) {
            $color = $o;
            return cbgg_Color_toIntBits($this) != cbgg_Color_toIntBits($color) ? 0 : 1;
        }
    }
    return 0;
}
function cbgg_Color_hashCode($this) {
    var var$1, $result, var$3;
    var$1 = $this.$r;
    $result = 31 * (var$1 === 0.0 ? 0 : $rt_floatToIntBits(var$1)) | 0;
    var$1 = $this.$g;
    $result = 31 * ($result + (var$1 === 0.0 ? 0 : $rt_floatToIntBits(var$1)) | 0) | 0;
    var$3 = $this.$b;
    $result = 31 * ($result + (var$3 === 0.0 ? 0 : $rt_floatToIntBits(var$3)) | 0) | 0;
    var$3 = $this.$a;
    return $result + (var$3 === 0.0 ? 0 : $rt_floatToIntBits(var$3)) | 0;
}
function cbgg_Color_toFloatBits($this) {
    return $rt_intBitsToFloat(((255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0) & (-16777217));
}
function cbgg_Color_toIntBits($this) {
    return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
}
function cbgg_Color_toString($this) {
    var $value, var$2, var$3, var$4, var$5, var$6, var$7;
    $value = otci_IntegerUtil_toUnsignedLogRadixString((255.0 * $this.$r | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0, 4);
    while ($value.$characters.data.length < 8) {
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(44));
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $value);
        $value = new jl_String;
        var$3 = var$2.$buffer;
        var$4 = var$2.$length;
        jl_String_$callClinit();
        var$5 = $rt_createCharArray(var$4);
        var$6 = var$5.data;
        $value.$characters = var$5;
        var$7 = 0;
        while (var$7 < var$4) {
            var$6[var$7] = var$3.data[var$7 + 0 | 0];
            var$7 = var$7 + 1 | 0;
        }
    }
    return $value;
}
function cbgg_Color_rgba8888ToColor($color, $value) {
    cbgg_Color_$callClinit();
    $color.$r = (($value & (-16777216)) >>> 24 | 0) / 255.0;
    $color.$g = (($value & 16711680) >>> 16 | 0) / 255.0;
    $color.$b = (($value & 65280) >>> 8 | 0) / 255.0;
    $color.$a = ($value & 255) / 255.0;
}
function cbgg_Color__clinit_() {
    var var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_$callClinit();
    var$1.$r = 1.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_WHITE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1077952513));
    cbgg_Color_LIGHT_GRAY = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 2139062271);
    cbgg_Color_GRAY = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1061109759);
    cbgg_Color_DARK_GRAY = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 0.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_BLACK = var$1;
    cbgg_Color_WHITE_FLOAT_BITS = cbgg_Color_toFloatBits(cbgg_Color_WHITE);
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 0.0;
    var$1.$a = 0.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_CLEAR = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_BLUE = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 0.5;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_NAVY = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1097458175);
    cbgg_Color_ROYAL = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1887473919);
    cbgg_Color_SLATE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-2016482305));
    cbgg_Color_SKY = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_CYAN = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.5;
    var$1.$b = 0.5;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_TEAL = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 16711935);
    cbgg_Color_GREEN = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 2147418367);
    cbgg_Color_CHARTREUSE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 852308735);
    cbgg_Color_LIME = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 579543807);
    cbgg_Color_FOREST = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1804477439);
    cbgg_Color_OLIVE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-65281));
    cbgg_Color_YELLOW = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-2686721));
    cbgg_Color_GOLD = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-626712321));
    cbgg_Color_GOLDENROD = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-5963521));
    cbgg_Color_ORANGE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1958407169));
    cbgg_Color_BROWN = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-759919361));
    cbgg_Color_TAN = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1306385665));
    cbgg_Color_FIREBRICK = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-16776961));
    cbgg_Color_RED = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-13361921));
    cbgg_Color_SCARLET = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-8433409));
    cbgg_Color_CORAL = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-92245249));
    cbgg_Color_SALMON = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-9849601));
    cbgg_Color_PINK = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 0.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_MAGENTA = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1608453889));
    cbgg_Color_PURPLE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-293409025));
    cbgg_Color_VIOLET = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1339006721));
    cbgg_Color_MAROON = var$1;
}
function cbgg_GLTexture() {
    var a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter = null;
    a.$uWrap = null;
    a.$vWrap = null;
    a.$anisotropicFilterLevel = 0.0;
}
var cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
function cbgg_GLTexture_unsafeSetWrap($this, $u, $v, $force) {
    if ($u !== null && !(!$force && $this.$uWrap === $u)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, $u.$glEnum);
        $this.$uWrap = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap === $v)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, $v.$glEnum);
        $this.$vWrap = $v;
    }
}
function cbgg_GLTexture_unsafeSetFilter($this, $minFilter, $magFilter, $force) {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, $minFilter.$glEnum0);
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, $magFilter.$glEnum0);
        $this.$magFilter = $magFilter;
    }
}
function cbgg_GLTexture_getMaxAnisotropicFilterLevel() {
    var var$1, var$2, var$3, $buffer;
    var$1 = cbgg_GLTexture_maxAnisotropicFilterLevel;
    if (var$1 > 0.0)
        return var$1;
    if (!(cbg_Gdx_graphics.$context.getExtension("GL_EXT_texture_filter_anisotropic") === null ? 0 : 1)) {
        cbgg_GLTexture_maxAnisotropicFilterLevel = 1.0;
        return 1.0;
    }
    var$2 = new jn_ByteBufferImpl;
    var$3 = $rt_createByteArray(64);
    var$2.$mark = (-1);
    var$2.$capacity = 64;
    var$2.$limit = 64;
    jn_ByteOrder_$callClinit();
    $buffer = jn_ByteOrder_BIG_ENDIAN;
    var$2.$order = $buffer;
    var$2.$start = 0;
    var$2.$array = var$3;
    var$2.$position = 0;
    var$2.$limit = 64;
    var$2.$direct = 1;
    var$2.$readOnly = 0;
    var$2.$order = $buffer;
    $buffer = jn_ByteBufferImpl_asFloatBuffer(var$2);
    jn_Buffer_position($buffer, 0);
    jn_Buffer_limit($buffer, $buffer.$capacity);
    cbg_Gdx_gl20.$glGetFloatv(34047, $buffer);
    var$1 = jn_FloatBufferImpl_get($buffer, 0);
    cbgg_GLTexture_maxAnisotropicFilterLevel = var$1;
    return var$1;
}
function cbgg_GLTexture_uploadImageData($target, $data, $miplevel) {
    var $tmp_0, $pixmap, $disposePixmap, $type, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
    if ($data === null)
        return;
    if (!$data.$isPrepared)
        cbggg_FileTextureData_prepare($data);
    cbgg_TextureData$TextureDataType_$callClinit();
    if (cbgg_TextureData$TextureDataType_Pixmap === cbgg_TextureData$TextureDataType_Custom) {
        $data = new cbgu_GdxRuntimeException;
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = $rt_s(45);
        $rt_throw($data);
    }
    if (!$data.$isPrepared) {
        $tmp_0 = new cbgu_GdxRuntimeException;
        $tmp_0.$suppressionEnabled = 1;
        $tmp_0.$writableStackTrace = 1;
        $tmp_0.$message = $rt_s(46);
        $rt_throw($tmp_0);
    }
    $data.$isPrepared = 0;
    $pixmap = $data.$pixmap;
    $data.$pixmap = null;
    $disposePixmap = 1;
    $type = $data.$format;
    $tmp_0 = $pixmap.$nativePixmap;
    if ($tmp_0 === null) {
        cbgg_Pixmap$Format_$callClinit();
        $tmp_0 = cbgg_Pixmap$Format_RGBA8888;
    } else
        $tmp_0 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat($tmp_0.$format0);
    if ($type === $tmp_0)
        $tmp_0 = $pixmap;
    else {
        $tmp_0 = new cbgg_Pixmap;
        $type = $pixmap.$nativePixmap;
        cbgg_Pixmap__init_0($tmp_0, $type === null ? $pixmap.$width4 : $type.$width5, $type === null ? $pixmap.$height2 : $type.$height3, $data.$format);
        cbgg_Pixmap$Blending_$callClinit();
        $type = cbgg_Pixmap$Blending_None;
        $tmp_0.$blending = $type;
        var$8 = $tmp_0.$nativePixmap;
        if (var$8 === null) {
            cbgg_Pixmap_ensureCanvasExists($tmp_0);
            $type = $tmp_0.$context0;
            cbgg_Composite_$callClinit();
            var$9 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$name0);
            $type.globalCompositeOperation = var$9;
        } else {
            var$10 = $type !== $type ? 1 : 0;
            cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47(var$8.$basePtr, var$10);
        }
        var$8 = $pixmap.$nativePixmap;
        $disposePixmap = var$8 === null ? $pixmap.$width4 : var$8.$width5;
        var$11 = var$8 === null ? $pixmap.$height2 : var$8.$height3;
        $type = $tmp_0.$nativePixmap;
        if ($type === null) {
            cbgg_Pixmap_ensureCanvasExists($pixmap);
            cbgg_Pixmap_image($tmp_0, $pixmap.$canvas, 0, 0, $disposePixmap, var$11, 0, 0, $disposePixmap, var$11);
        } else {
            var$12 = var$8.$basePtr;
            var$13 = $type.$basePtr;
            cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$12, var$13, 0, 0, $disposePixmap, var$11, 0, 0, $disposePixmap, var$11);
        }
        if ($pixmap.$disposed) {
            $tmp_0 = new cbgu_GdxRuntimeException;
            $tmp_0.$suppressionEnabled = 1;
            $tmp_0.$writableStackTrace = 1;
            $tmp_0.$message = $rt_s(47);
            $rt_throw($tmp_0);
        }
        $type = cbgg_Pixmap_pixmaps;
        var$10 = $pixmap.$id0;
        if (var$10 >= (-128) && var$10 <= 127) {
            jl_Integer_ensureIntegerCache();
            var$8 = jl_Integer_integerCache.data[var$10 + 128 | 0];
        } else {
            var$8 = new jl_Integer;
            var$8.$value5 = var$10;
        }
        ju_HashMap_removeEntry($type, var$8);
        $type = $pixmap.$nativePixmap;
        if ($type !== null)
            cbggg_Gdx2DPixmapEmu_free$js_body$_36($type.$basePtr);
        $pixmap.$disposed = 1;
        $disposePixmap = 1;
    }
    cbg_Gdx_gl.$glPixelStorei(3317, 1);
    if ($data.$useMipMaps)
        cbggg_MipMapGenerator_generateMipMap($target, $tmp_0, cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0));
    else {
        $type = cbg_Gdx_gl;
        $data = $tmp_0.$nativePixmap;
        if ($data === null)
            var$11 = 6408;
        else
            a: {
                var$10 = $data.$format0;
                switch (var$10) {
                    case 1:
                        break;
                    case 2:
                        var$11 = 6410;
                        break a;
                    case 3:
                    case 5:
                        var$11 = 6407;
                        break a;
                    case 4:
                    case 6:
                        var$11 = 6408;
                        break a;
                    default:
                        $data = new cbgu_GdxRuntimeException;
                        $tmp_0 = new jl_StringBuilder;
                        $tmp_0.$buffer = $rt_createCharArray(16);
                        jl_StringBuilder_insert($tmp_0, $tmp_0.$length, jl_String_toString($rt_s(48)));
                        jl_AbstractStringBuilder_insert0($tmp_0, $tmp_0.$length, var$10, 10);
                        $type = new jl_String;
                        var$14 = $tmp_0.$buffer;
                        $miplevel = $tmp_0.$length;
                        var$15 = $rt_createCharArray($miplevel);
                        var$16 = var$15.data;
                        $type.$characters = var$15;
                        var$10 = 0;
                        while (var$10 < $miplevel) {
                            var$16[var$10] = var$14.data[var$10 + 0 | 0];
                            var$10 = var$10 + 1 | 0;
                        }
                        jl_RuntimeException__init_0($data, $type);
                        $rt_throw($data);
                }
                var$11 = 6406;
            }
        $type.$glTexImage2D($target, $miplevel, var$11, cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0), 0, cbgg_Pixmap_getGLFormat($tmp_0), cbgg_Pixmap_getGLType($tmp_0), $tmp_0.$buffer1);
    }
    if ($disposePixmap)
        cbgg_Pixmap_dispose($tmp_0);
}
function cbgg_GLTexture__clinit_() {
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
}
function cbgg_Texture() {
    cbgg_GLTexture.call(this);
    this.$data0 = null;
}
var cbgg_Texture_managedTextures = null;
function cbgg_Texture_load($this, $data) {
    var var$2, var$3;
    $this.$data0 = $data;
    if (!$data.$isPrepared)
        cbggg_FileTextureData_prepare($data);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
    cbgg_GLTexture_uploadImageData(3553, $data, 0);
    cbgg_GLTexture_unsafeSetFilter($this, $this.$minFilter, $this.$magFilter, 1);
    cbgg_GLTexture_unsafeSetWrap($this, $this.$uWrap, $this.$vWrap, 1);
    var$2 = $this.$anisotropicFilterLevel;
    var$3 = cbgg_GLTexture_getMaxAnisotropicFilterLevel();
    if (var$3 !== 1.0) {
        if (var$2 < var$3)
            var$3 = var$2;
        cbg_Gdx_gl20.$glTexParameterf(3553, 34046, var$3);
        $this.$anisotropicFilterLevel = var$3;
    }
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
}
function cbgg_Texture_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$data0;
    if (!(var$1 instanceof cbggg_FileTextureData)) {
        var$1 = $this.constructor;
        if (var$1 === null)
            var$2 = null;
        else {
            var$2 = var$1.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$1;
                var$3 = var$2;
                var$1.classObject = var$3;
            }
        }
        if (var$2.$name === null)
            var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
        var$1 = var$2.$name;
        var$3 = $this;
        if (!var$3.$id$) {
            var$2 = $rt_nextId();
            var$3.$id$ = var$2;
        }
        var$2 = otci_IntegerUtil_toUnsignedLogRadixString($this.$id$, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
        var$5 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
        var$3.$buffer.data[var$5] = 64;
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$6 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$5);
        var$8 = var$7.data;
        var$1.$characters = var$7;
        var$9 = 0;
        while (var$9 < var$5) {
            var$8[var$9] = var$6.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        return var$1;
    }
    var$3 = var$1.constructor;
    if (var$3 === null)
        var$10 = null;
    else {
        var$10 = var$3.classObject;
        if (var$10 === null) {
            var$10 = new jl_Class;
            var$10.$platformClass = var$3;
            var$2 = var$10;
            var$3.classObject = var$2;
        }
    }
    if (var$10.$name === null)
        var$10.$name = $rt_str(var$10.$platformClass.$meta.name);
    var$3 = var$10.$name;
    var$2 = var$1;
    if (!var$2.$id$) {
        var$10 = $rt_nextId();
        var$2.$id$ = var$10;
    }
    var$2 = otci_IntegerUtil_toUnsignedLogRadixString(var$1.$id$, 4);
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    var$4 = var$1.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$1, var$4, var$3);
    var$5 = var$1.$length;
    jl_AbstractStringBuilder_insertSpace(var$1, var$5, var$5 + 1 | 0);
    var$1.$buffer.data[var$5] = 64;
    var$4 = var$1.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$1, var$4, var$2);
    var$3 = new jl_String;
    var$6 = var$1.$buffer;
    var$5 = var$1.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$5);
    var$8 = var$7.data;
    var$3.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$5) {
        var$8[var$9] = var$6.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$3;
}
function cbgg_Texture__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = new ju_HashMap;
    var$2 = ju_HashMap_calculateCapacity(16);
    var$1.$elementCount = 0;
    var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
    var$4 = var$3.data;
    var$1.$elementData = var$3;
    var$1.$loadFactor = 0.75;
    var$1.$threshold = var$4.length * 0.75 | 0;
    cbgg_Texture_managedTextures = var$1;
}
function cbgu_Array() {
    var a = this; jl_Object.call(a);
    a.$items = null;
    a.$size = 0;
    a.$ordered = 0;
    a.$iterable = null;
}
function cbgu_Array__init_() {
    var var_0 = new cbgu_Array();
    cbgu_Array__init_0(var_0);
    return var_0;
}
function cbgu_Array__init_0($this) {
    $this.$ordered = 1;
    $this.$items = $rt_createArray(jl_Object, 16);
}
function cbgu_Array_add($this, $value) {
    var $items, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $items = $this.$items;
    var$3 = $items.data;
    var$4 = $this.$size;
    if (var$4 != var$3.length)
        var$5 = $items;
    else {
        var$6 = var$4 * 1.75 | 0;
        if (8 > var$6)
            var$6 = 8;
        var$7 = $items.constructor;
        if (var$7 === null)
            var$8 = null;
        else {
            var$8 = var$7.classObject;
            if (var$8 === null) {
                var$8 = new jl_Class;
                var$8.$platformClass = var$7;
                var$5 = var$8;
                var$7.classObject = var$5;
            }
        }
        var$5 = jl_Class_getComponentType(var$8);
        if (var$5 === null) {
            $value = new jl_NullPointerException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            $rt_throw($value);
        }
        if (var$5 === $rt_cls($rt_voidcls())) {
            $value = new jl_IllegalArgumentException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            $rt_throw($value);
        }
        if (var$6 < 0) {
            $value = new jl_NegativeArraySizeException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            $rt_throw($value);
        }
        var$5 = jlr_Array_newInstanceImpl(var$5.$platformClass, var$6);
        var$9 = var$5.data;
        var$10 = $this.$size;
        var$11 = var$9.length;
        if (var$10 < var$11)
            var$11 = var$10;
        jl_System_arraycopy($items, 0, var$5, 0, var$11);
        $this.$items = var$5;
    }
    var$5 = var$5.data;
    var$6 = $this.$size;
    $this.$size = var$6 + 1 | 0;
    var$5[var$6] = $value;
}
function cbgu_Array_addAll($this, $array) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $array.$items;
    var$3 = $array.$size;
    var$4 = $this.$items;
    var$5 = var$4.data;
    var$6 = $this.$size;
    var$7 = var$6 + var$3 | 0;
    if (var$7 <= var$5.length)
        var$8 = var$4;
    else {
        var$9 = 8;
        if (var$9 <= var$7)
            var$9 = var$7;
        var$6 = var$6 * 1.75 | 0;
        if (var$9 > var$6)
            var$6 = var$9;
        var$8 = var$4.constructor;
        if (var$8 === null)
            $array = null;
        else {
            $array = var$8.classObject;
            if ($array === null) {
                $array = new jl_Class;
                $array.$platformClass = var$8;
                var$10 = $array;
                var$8.classObject = var$10;
            }
        }
        $array = jl_Class_getComponentType($array);
        if ($array === null) {
            $array = new jl_NullPointerException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        if ($array === $rt_cls($rt_voidcls())) {
            $array = new jl_IllegalArgumentException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        if (var$6 < 0) {
            $array = new jl_NegativeArraySizeException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        var$8 = jlr_Array_newInstanceImpl($array.$platformClass, var$6);
        $array = var$8.data;
        var$9 = $this.$size;
        var$11 = $array.length;
        if (var$9 < var$11)
            var$11 = var$9;
        jl_System_arraycopy(var$4, 0, var$8, 0, var$11);
        $this.$items = var$8;
    }
    jl_System_arraycopy(var$2, 0, var$8, $this.$size, var$3);
    $this.$size = var$7;
}
function cbgu_Array_addAll0($this, $array, $start, $count) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    if (($start + $count | 0) > $array.$size) {
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(49));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(50));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $count, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(51));
        $start = $array.$size;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
        $array = new jl_String;
        var$6 = var$5.$buffer;
        $count = var$5.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($count);
        var$8 = var$7.data;
        $array.$characters = var$7;
        var$9 = 0;
        while (var$9 < $count) {
            var$8[var$9] = var$6.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = $array;
        $rt_throw(var$4);
    }
    var$6 = $array.$items;
    var$7 = $this.$items;
    var$8 = var$7.data;
    var$10 = $this.$size;
    var$11 = var$10 + $count | 0;
    if (var$11 <= var$8.length)
        var$4 = var$7;
    else {
        var$12 = 8;
        if (var$12 <= var$11)
            var$12 = var$11;
        var$10 = var$10 * 1.75 | 0;
        if (var$12 > var$10)
            var$10 = var$12;
        var$4 = var$7.constructor;
        if (var$4 === null)
            $array = null;
        else {
            $array = var$4.classObject;
            if ($array === null) {
                $array = new jl_Class;
                $array.$platformClass = var$4;
                var$5 = $array;
                var$4.classObject = var$5;
            }
        }
        $array = jl_Class_getComponentType($array);
        if ($array === null) {
            $array = new jl_NullPointerException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        if ($array === $rt_cls($rt_voidcls())) {
            $array = new jl_IllegalArgumentException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        if (var$10 < 0) {
            $array = new jl_NegativeArraySizeException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        var$4 = jlr_Array_newInstanceImpl($array.$platformClass, var$10);
        $array = var$4.data;
        var$10 = $this.$size;
        var$12 = $array.length;
        if (var$10 < var$12)
            var$12 = var$10;
        jl_System_arraycopy(var$7, 0, var$4, 0, var$12);
        $this.$items = var$4;
    }
    jl_System_arraycopy(var$6, $start, var$4, $this.$size, $count);
    $this.$size = var$11;
}
function cbgu_Array_get($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($index < $this.$size)
        return $this.$items.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(36));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(37));
    $index = $this.$size;
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
    var$4 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$4.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cbgu_Array_removeValue($this, $value, $identity) {
    var $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!(!$identity && $value !== null)) {
            $i = 0;
            $n = $this.$size;
            while ($i < $n) {
                if ($items.data[$i] === $value) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            $n = $this.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                if (jl_String_equals($value, $items.data[$i])) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
}
function cbgu_Array_removeIndex($this, $index) {
    var var$2, $items, var$4, $value, var$6, var$7, var$8, var$9;
    var$2 = $this.$size;
    if ($index < var$2) {
        $items = $this.$items;
        var$4 = $items.data;
        $value = var$4[$index];
        var$6 = var$2 - 1 | 0;
        $this.$size = var$6;
        if (!$this.$ordered)
            var$4[$index] = var$4[var$6];
        else
            jl_System_arraycopy($items, $index + 1 | 0, $items, $index, var$6 - $index | 0);
        var$4[$this.$size] = null;
        return $value;
    }
    $value = new jl_IndexOutOfBoundsException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(36));
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(37));
    $index = $this.$size;
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $index, 10);
    var$8 = new jl_String;
    $items = var$7.$buffer;
    var$6 = var$7.$length;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray(var$6);
    var$9 = var$4.data;
    var$8.$characters = var$4;
    var$2 = 0;
    while (var$2 < var$6) {
        var$9[var$2] = $items.data[var$2 + 0 | 0];
        var$2 = var$2 + 1 | 0;
    }
    $value.$suppressionEnabled = 1;
    $value.$writableStackTrace = 1;
    $value.$message = var$8;
    $rt_throw($value);
}
function cbgu_Array_removeRange($this, $start, $end) {
    var $n, var$4, var$5, var$6, $items, $count, var$9, var$10, $lastIndex, $i;
    $n = $this.$size;
    if ($end >= $n) {
        var$4 = new jl_IndexOutOfBoundsException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(52));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $end, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(37));
        $start = $this.$size;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
        var$6 = new jl_String;
        $items = var$5.$buffer;
        $count = var$5.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($count);
        var$10 = var$9.data;
        var$6.$characters = var$9;
        $start = 0;
        while ($start < $count) {
            var$10[$start] = $items.data[$start + 0 | 0];
            $start = $start + 1 | 0;
        }
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    if ($start <= $end) {
        $items = $this.$items;
        $count = ($end - $start | 0) + 1 | 0;
        $lastIndex = $n - $count | 0;
        if ($this.$ordered) {
            $end = $start + $count | 0;
            jl_System_arraycopy($items, $end, $items, $start, $n - $end | 0);
        } else {
            $i = $end + 1 | 0;
            if ($lastIndex > $i)
                $i = $lastIndex;
            jl_System_arraycopy($items, $i, $items, $start, $n - $i | 0);
        }
        $i = $lastIndex;
        while ($i < $n) {
            $items.data[$i] = null;
            $i = $i + 1 | 0;
        }
        $this.$size = $lastIndex;
        return;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(53));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(54));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $end, 10);
    var$6 = new jl_String;
    $items = var$5.$buffer;
    $end = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($end);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    $count = 0;
    while ($count < $end) {
        var$10[$count] = $items.data[$count + 0 | 0];
        $count = $count + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$6;
    $rt_throw(var$4);
}
function cbgu_Array_pop($this) {
    var var$1, var$2, var$3, $item;
    var$1 = $this.$size;
    if (var$1) {
        var$2 = var$1 - 1 | 0;
        $this.$size = var$2;
        var$3 = $this.$items.data;
        $item = var$3[var$2];
        var$3[var$2] = null;
        return $item;
    }
    $item = new jl_IllegalStateException;
    $item.$suppressionEnabled = 1;
    $item.$writableStackTrace = 1;
    $item.$message = $rt_s(32);
    $rt_throw($item);
}
function cbgu_Array_peek($this) {
    var var$1, var$2;
    var$1 = $this.$size;
    if (var$1)
        return $this.$items.data[var$1 - 1 | 0];
    var$2 = new jl_IllegalStateException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(32);
    $rt_throw(var$2);
}
function cbgu_Array_clear($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$items;
    var$2 = 0;
    var$3 = $this.$size;
    var$4 = null;
    if (var$2 > var$3) {
        var$4 = new jl_IllegalArgumentException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    while (var$2 < var$3) {
        var$5 = var$1.data;
        var$6 = var$2 + 1 | 0;
        var$5[var$2] = var$4;
        var$2 = var$6;
    }
    $this.$size = 0;
}
function cbgu_Array_ensureCapacity($this, $additionalCapacity) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, $sizeNeeded, var$10;
    if ($additionalCapacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(55));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $additionalCapacity, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$8 = var$7.data;
        var$4.$characters = var$7;
        $sizeNeeded = 0;
        while ($sizeNeeded < var$6) {
            var$8[$sizeNeeded] = var$5.data[$sizeNeeded + 0 | 0];
            $sizeNeeded = $sizeNeeded + 1 | 0;
        }
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    var$6 = $this.$size;
    $sizeNeeded = var$6 + $additionalCapacity | 0;
    var$5 = $this.$items;
    if ($sizeNeeded > var$5.data.length) {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        $additionalCapacity = var$6 * 1.75 | 0;
        if ($sizeNeeded > $additionalCapacity)
            $additionalCapacity = $sizeNeeded;
        var$3 = var$5.constructor;
        if (var$3 === null)
            var$2 = null;
        else {
            var$2 = var$3.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$3;
                var$4 = var$2;
                var$3.classObject = var$4;
            }
        }
        var$2 = jl_Class_getComponentType(var$2);
        if (var$2 === null) {
            var$2 = new jl_NullPointerException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if (var$2 === $rt_cls($rt_voidcls())) {
            var$2 = new jl_IllegalArgumentException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if ($additionalCapacity < 0) {
            var$2 = new jl_NegativeArraySizeException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$3 = jlr_Array_newInstanceImpl(var$2.$platformClass, $additionalCapacity);
        var$2 = var$3.data;
        $sizeNeeded = $this.$size;
        var$10 = var$2.length;
        if ($sizeNeeded < var$10)
            var$10 = $sizeNeeded;
        jl_System_arraycopy(var$5, 0, var$3, 0, var$10);
        $this.$items = var$3;
    }
    return $this.$items;
}
function cbgu_Array_iterator($this) {
    var var$1;
    if (cbgu_Collections_allocateIterators) {
        var$1 = new cbgu_Array$ArrayIterator;
        var$1.$valid = 1;
        var$1.$array0 = $this;
        var$1.$allowRemove = 1;
        return var$1;
    }
    if ($this.$iterable === null) {
        var$1 = new cbgu_Array$ArrayIterable;
        var$1.$array1 = $this;
        var$1.$allowRemove0 = 1;
        $this.$iterable = var$1;
    }
    return cbgu_Array$ArrayIterable_iterator($this.$iterable);
}
function cbgu_Array_truncate($this, $newSize) {
    var var$2, $i, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($newSize >= 0) {
        var$2 = $this.$size;
        if (var$2 <= $newSize)
            return;
        $i = $newSize;
        while ($i < var$2) {
            $this.$items.data[$i] = null;
            $i = $i + 1 | 0;
        }
        $this.$size = $newSize;
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(56));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $newSize, 10);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    var$2 = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$2);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$2) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$6;
    $rt_throw(var$4);
}
function cbgu_Array_hashCode($this) {
    var $items, $h, $i, $n, var$5, $item, var$7;
    if ($this.$ordered) {
        $items = $this.$items;
        $h = 1;
        $i = 0;
        $n = $this.$size;
        while ($i < $n) {
            var$5 = $items.data;
            $h = $h * 31 | 0;
            $item = var$5[$i];
            if ($item !== null)
                $h = $h + $item.$hashCode() | 0;
            $i = $i + 1 | 0;
        }
        return $h;
    }
    $item = $this;
    if (!$item.$id$) {
        var$7 = $rt_nextId();
        $item.$id$ = var$7;
    }
    return $this.$id$;
}
function cbgu_Array_equals($this, $object) {
    var $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered)
        return 0;
    if (!($object instanceof cbgu_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered)
        return 0;
    $n = $this.$size;
    if ($n != $array.$size)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
}
function cbgu_Array_toString($this) {
    var $items, $buffer, var$3, var$4, var$5, var$6, var$7, $i, var$9, var$10;
    if (!$this.$size)
        return $rt_s(57);
    $items = $this.$items;
    $buffer = new cbgu_StringBuilder;
    var$3 = $rt_createCharArray(32);
    var$4 = var$3.data;
    $buffer.$chars = var$3;
    var$5 = $buffer.$length2;
    if (var$5 == var$4.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    $items = $items.data;
    var$4 = $buffer.$chars.data;
    var$6 = $buffer.$length2;
    $buffer.$length2 = var$6 + 1 | 0;
    var$4[var$6] = 91;
    var$7 = $items[0];
    if (var$7 === null)
        cbgu_StringBuilder_appendNull($buffer);
    else {
        var$7 = var$7.$toString();
        if (var$7 === null)
            cbgu_StringBuilder_appendNull($buffer);
        else {
            $i = var$7.$characters.data.length;
            var$9 = $buffer.$length2 + $i | 0;
            if (var$9 > $buffer.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($buffer, var$9);
            jl_String_getChars(var$7, 0, $i, $buffer.$chars, $buffer.$length2);
            $buffer.$length2 = var$9;
        }
    }
    $i = 1;
    while ($i < $this.$size) {
        var$6 = $rt_s(58).$characters.data.length;
        var$10 = $buffer.$length2 + var$6 | 0;
        if (var$10 > $buffer.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$10);
        jl_String_getChars($rt_s(58), 0, var$6, $buffer.$chars, $buffer.$length2);
        $buffer.$length2 = var$10;
        var$7 = $items[$i];
        if (var$7 === null)
            cbgu_StringBuilder_appendNull($buffer);
        else {
            var$7 = var$7.$toString();
            if (var$7 === null)
                cbgu_StringBuilder_appendNull($buffer);
            else {
                var$10 = var$7.$characters.data.length;
                var$9 = $buffer.$length2 + var$10 | 0;
                if (var$9 > $buffer.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($buffer, var$9);
                jl_String_getChars(var$7, 0, var$10, $buffer.$chars, $buffer.$length2);
                $buffer.$length2 = var$9;
            }
        }
        $i = $i + 1 | 0;
    }
    var$5 = $buffer.$length2;
    if (var$5 == $buffer.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    $items = $buffer.$chars.data;
    var$6 = $buffer.$length2;
    var$5 = var$6 + 1 | 0;
    $buffer.$length2 = var$5;
    $items[var$6] = 93;
    if (!var$5)
        $buffer = $rt_s(42);
    else {
        $buffer = new jl_String;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$5);
        var$3 = var$4.data;
        $buffer.$characters = var$4;
        var$6 = 0;
        while (var$6 < var$5) {
            var$3[var$6] = $items[var$6 + 0 | 0];
            var$6 = var$6 + 1 | 0;
        }
    }
    return $buffer;
}
function cbgu_ObjectMap() {
    var a = this; jl_Object.call(a);
    a.$size2 = 0;
    a.$keyTable = null;
    a.$valueTable = null;
    a.$loadFactor0 = 0.0;
    a.$threshold0 = 0;
    a.$shift = 0;
    a.$mask = 0;
}
var cbgu_ObjectMap_dummy = null;
function cbgu_ObjectMap__init_(var_0, var_1) {
    var var_2 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgu_ObjectMap__init_0($this, $initialCapacity, $loadFactor) {
    var $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor0 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold0 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask = $initialCapacity;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(59));
    jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    $tableSize = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($tableSize);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$10 = 0;
    while (var$10 < $tableSize) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$6;
    $rt_throw(var$4);
}
function cbgu_ObjectMap_locateKey($this, $key) {
    var $other, $keyTable, $i;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        $other.$suppressionEnabled = 1;
        $other.$writableStackTrace = 1;
        $other.$message = $rt_s(60);
        $rt_throw($other);
    }
    $keyTable = $this.$keyTable;
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift));
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask;
    }
    return $i;
}
function cbgu_ObjectMap_put($this, $key, $value) {
    var $i, var$4, $oldValue;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i >= 0) {
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable.data;
    var$4[$i] = $key;
    $this.$valueTable.data[$i] = $value;
    $i = $this.$size2 + 1 | 0;
    $this.$size2 = $i;
    if ($i >= $this.$threshold0)
        cbgu_ObjectMap_resize($this, var$4.length << 1);
    return null;
}
function cbgu_ObjectMap_get($this, $key) {
    var $i;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable.data[$i];
}
function cbgu_ObjectMap_remove($this, $key) {
    var $i, $keyTable, var$4, $oldValue, $mask, $next, $valueTable, $placement;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable;
    var$4 = $this.$valueTable.data;
    $oldValue = var$4[$i];
    $mask = $this.$mask;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        $valueTable = $keyTable.data;
        $key = $valueTable[$next];
        if ($key === null)
            break;
        $placement = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift));
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            $valueTable[$i] = $key;
            var$4[$i] = var$4[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    $valueTable[$i] = null;
    var$4[$i] = null;
    $this.$size2 = $this.$size2 - 1 | 0;
    return $oldValue;
}
function cbgu_ObjectMap_resize($this, $newSize) {
    var $oldCapacity, $i, $oldKeyTable, $oldValueTable, $key, var$7, var$8, var$9;
    a: {
        $oldCapacity = $this.$keyTable.data.length;
        $this.$threshold0 = $newSize * $this.$loadFactor0 | 0;
        $i = $newSize - 1 | 0;
        $this.$mask = $i;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($i));
        $oldKeyTable = $this.$keyTable;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize);
        if ($this.$size2 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null) {
                    var$7 = $oldValueTable.data[$i];
                    var$8 = $this.$keyTable;
                    $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift));
                    while (true) {
                        var$9 = var$8.data;
                        if (var$9[$newSize] === null)
                            break;
                        $newSize = ($newSize + 1 | 0) & $this.$mask;
                    }
                    var$9[$newSize] = $key;
                    $this.$valueTable.data[$newSize] = var$7;
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbgu_ObjectMap__clinit_() {
    cbgu_ObjectMap_dummy = new jl_Object;
}
var cbgu_OrderedMap = $rt_classWithoutFields(cbgu_ObjectMap);
var cbgu_Queue = $rt_classWithoutFields();
function cbgg_VertexAttribute() {
    var a = this; jl_Object.call(a);
    a.$usage = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type0 = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
    a.$usageIndex = 0;
}
function cbgg_VertexAttribute_equals($this, $obj) {
    if (!($obj instanceof cbgg_VertexAttribute))
        return 0;
    return cbgg_VertexAttribute_equals0($this, $obj);
}
function cbgg_VertexAttribute_equals0($this, $other) {
    return $other !== null && $this.$usage == $other.$usage && $this.$numComponents == $other.$numComponents && $this.$type0 == $other.$type0 && $this.$normalized == $other.$normalized && jl_String_equals($this.$alias, $other.$alias) && $this.$unit == $other.$unit ? 1 : 0;
}
function cbgg_VertexAttribute_hashCode($this) {
    var var$1, var$2, var$3, $result, var$5, var$6;
    a: {
        var$1 = 541 * ((541 * (($this.$usageIndex << 8) + ($this.$unit & 255) | 0) | 0) + $this.$numComponents | 0) | 0;
        var$2 = $this.$alias;
        if (!var$2.$hashCode0) {
            var$3 = var$2.$characters.data;
            $result = var$3.length;
            var$5 = 0;
            while (true) {
                if (var$5 >= $result)
                    break a;
                var$6 = var$3[var$5];
                var$2.$hashCode0 = (31 * var$2.$hashCode0 | 0) + var$6 | 0;
                var$5 = var$5 + 1 | 0;
            }
        }
    }
    return var$1 + var$2.$hashCode0 | 0;
}
var cbgggm_Node = $rt_classWithoutFields();
var cbgggm_NodePart = $rt_classWithoutFields();
var cbgggm_NodeKeyframe = $rt_classWithoutFields();
var cbgggm_Animation = $rt_classWithoutFields();
var cbgggm_MeshPart = $rt_classWithoutFields();
var cbgggm_MeshPart_bounds = null;
function cbgggm_MeshPart_$callClinit() {
    cbgggm_MeshPart_$callClinit = $rt_eraseClinit(cbgggm_MeshPart);
    cbgggm_MeshPart__clinit_();
}
function cbgggm_MeshPart__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new cbgmc_BoundingBox;
    cbgmc_BoundingBox_$callClinit();
    var$2 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$1.$min0 = var$2;
    var$3 = new cbgm_Vector3;
    var$1.$max0 = var$3;
    var$1.$cnt = new cbgm_Vector3;
    var$1.$dim = new cbgm_Vector3;
    var$2.$x2 = 0.0;
    var$2.$y2 = 0.0;
    var$2.$z1 = 0.0;
    var$3.$x2 = 0.0;
    var$3.$y2 = 0.0;
    var$3.$z1 = 0.0;
    cbgmc_BoundingBox_set(var$1, var$2, var$3);
    cbgggm_MeshPart_bounds = var$1;
}
var cbgggmd_ModelAnimation = $rt_classWithoutFields();
var cbgggmd_ModelMesh = $rt_classWithoutFields();
var cbgggmd_ModelMaterial = $rt_classWithoutFields();
var cbgggmd_ModelNodePart = $rt_classWithoutFields();
var cbgggmd_ModelNode = $rt_classWithoutFields();
var cbgggmd_ModelMeshPart = $rt_classWithoutFields();
var cbgggmd_ModelData = $rt_classWithoutFields();
var cbgggmd_ModelTexture = $rt_classWithoutFields();
var cbgggmd_ModelNodeKeyframe = $rt_classWithoutFields();
var cbgggmd_ModelNodeAnimation = $rt_classWithoutFields();
var cbgggmd_ModelMaterial$MaterialType = $rt_classWithoutFields(jl_Enum);
var cbgggmd_ModelMaterial$MaterialType_Lambert = null;
var cbgggmd_ModelMaterial$MaterialType_Phong = null;
var cbgggmd_ModelMaterial$MaterialType_$VALUES = null;
function cbgggmd_ModelMaterial$MaterialType_$callClinit() {
    cbgggmd_ModelMaterial$MaterialType_$callClinit = $rt_eraseClinit(cbgggmd_ModelMaterial$MaterialType);
    cbgggmd_ModelMaterial$MaterialType__clinit_();
}
function cbgggmd_ModelMaterial$MaterialType__clinit_() {
    var var$1, var$2;
    var$1 = new cbgggmd_ModelMaterial$MaterialType;
    cbgggmd_ModelMaterial$MaterialType_$callClinit();
    var$1.$name0 = $rt_s(61);
    var$1.$ordinal = 0;
    cbgggmd_ModelMaterial$MaterialType_Lambert = var$1;
    var$2 = new cbgggmd_ModelMaterial$MaterialType;
    var$2.$name0 = $rt_s(62);
    var$2.$ordinal = 1;
    cbgggmd_ModelMaterial$MaterialType_Phong = var$2;
    cbgggmd_ModelMaterial$MaterialType_$VALUES = $rt_createArrayFromData(cbgggmd_ModelMaterial$MaterialType, [var$1, var$2]);
}
var cbgggm_NodeAnimation = $rt_classWithoutFields();
var cbg_Net = $rt_classWithoutFields(0);
var cbgm_MapObject = $rt_classWithoutFields();
var cbgmo_RectangleMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgmo_PolygonMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgmo_CircleMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgmo_PolylineMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgmo_EllipseMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgmo_TextureMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgmto_TiledMapTileMapObject = $rt_classWithoutFields(cbgmo_TextureMapObject);
var cbgggp_ResourceData$Configurable = $rt_classWithoutFields(0);
var cbgggp_ParticleEffect = $rt_classWithoutFields();
var cbgu_Json$Serializable = $rt_classWithoutFields(0);
var cbgggp_ParticleController = $rt_classWithoutFields();
var cbgggp_ResourceData = $rt_classWithoutFields();
var cbgggp_ParallelArray = $rt_classWithoutFields();
var cbgggpv_ParticleValue = $rt_classWithoutFields();
var cbgggpv_NumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
var cbgggpv_SpawnShapeValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
var cbgggpv_PrimitiveSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue);
var cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = null;
function cbgggpv_PrimitiveSpawnShapeValue_$callClinit() {
    cbgggpv_PrimitiveSpawnShapeValue_$callClinit = $rt_eraseClinit(cbgggpv_PrimitiveSpawnShapeValue);
    cbgggpv_PrimitiveSpawnShapeValue__clinit_();
}
function cbgggpv_PrimitiveSpawnShapeValue__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = var$1;
}
var cbgggpv_MeshSpawnShapeValue$Triangle = $rt_classWithoutFields();
var cbgggpv_PointSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var cbgggpv_RectangleSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var cbgggpv_GradientColorValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
var cbgggpv_GradientColorValue_temp = null;
function cbgggpv_GradientColorValue__clinit_() {
    cbgggpv_GradientColorValue_temp = $rt_createFloatArray(3);
}
var cbgggpv_RangedNumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
var cbgggpv_ScaledNumericValue = $rt_classWithoutFields(cbgggpv_RangedNumericValue);
var cbgggpv_EllipseSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var cbgggpv_MeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue);
var cbgggpv_WeightMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue);
var cbgggpv_LineSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var cbgggpv_CylinderSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var cbgggpv_UnweightedMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue);
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide = $rt_classWithoutFields(jl_Enum);
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = null;
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = null;
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = null;
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = null;
function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit() {
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit = $rt_eraseClinit(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide);
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__clinit_();
}
function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit();
    var$1.$name0 = $rt_s(63);
    var$1.$ordinal = 0;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = var$1;
    var$2 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$2.$name0 = $rt_s(64);
    var$2.$ordinal = 1;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = var$2;
    var$3 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$3.$name0 = $rt_s(65);
    var$3.$ordinal = 2;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = var$3;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = $rt_createArrayFromData(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, [var$1, var$2, var$3]);
}
var cbgggp_ParticleControllerComponent = $rt_classWithoutFields();
var cbgggpe_Emitter = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
var cbgggpe_RegularEmitter = $rt_classWithoutFields(cbgggpe_Emitter);
var cbgggpe_RegularEmitter$EmissionMode = $rt_classWithoutFields(jl_Enum);
var cbgggpe_RegularEmitter$EmissionMode_Enabled = null;
var cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = null;
var cbgggpe_RegularEmitter$EmissionMode_Disabled = null;
var cbgggpe_RegularEmitter$EmissionMode_$VALUES = null;
function cbgggpe_RegularEmitter$EmissionMode_$callClinit() {
    cbgggpe_RegularEmitter$EmissionMode_$callClinit = $rt_eraseClinit(cbgggpe_RegularEmitter$EmissionMode);
    cbgggpe_RegularEmitter$EmissionMode__clinit_();
}
function cbgggpe_RegularEmitter$EmissionMode__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new cbgggpe_RegularEmitter$EmissionMode;
    cbgggpe_RegularEmitter$EmissionMode_$callClinit();
    var$1.$name0 = $rt_s(66);
    var$1.$ordinal = 0;
    cbgggpe_RegularEmitter$EmissionMode_Enabled = var$1;
    var$2 = new cbgggpe_RegularEmitter$EmissionMode;
    var$2.$name0 = $rt_s(67);
    var$2.$ordinal = 1;
    cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = var$2;
    var$3 = new cbgggpe_RegularEmitter$EmissionMode;
    var$3.$name0 = $rt_s(68);
    var$3.$ordinal = 2;
    cbgggpe_RegularEmitter$EmissionMode_Disabled = var$3;
    cbgggpe_RegularEmitter$EmissionMode_$VALUES = $rt_createArrayFromData(cbgggpe_RegularEmitter$EmissionMode, [var$1, var$2, var$3]);
}
var cbgggpi_Influencer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
var cbgggpi_ParticleControllerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_RegionInfluencer$AspectTextureRegion = $rt_classWithoutFields();
var cbgggpi_DynamicsModifier = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_DynamicsModifier_TMP_V1 = null;
var cbgggpi_DynamicsModifier_TMP_V2 = null;
var cbgggpi_DynamicsModifier_TMP_V3 = null;
var cbgggpi_DynamicsModifier_TMP_Q = null;
function cbgggpi_DynamicsModifier_$callClinit() {
    cbgggpi_DynamicsModifier_$callClinit = $rt_eraseClinit(cbgggpi_DynamicsModifier);
    cbgggpi_DynamicsModifier__clinit_();
}
function cbgggpi_DynamicsModifier__clinit_() {
    var var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgggpi_DynamicsModifier_TMP_V1 = var$1;
    cbgggpi_DynamicsModifier_TMP_V2 = new cbgm_Vector3;
    cbgggpi_DynamicsModifier_TMP_V3 = new cbgm_Vector3;
    var$1 = new cbgm_Quaternion;
    cbgm_Quaternion_$callClinit();
    var$1.$x0 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z = 0.0;
    var$1.$w = 1.0;
    cbgggpi_DynamicsModifier_TMP_Q = var$1;
}
var cbgggpi_DynamicsModifier$Strength = $rt_classWithoutFields(cbgggpi_DynamicsModifier);
var cbgggpi_DynamicsModifier$Angular = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
var cbgggpi_DynamicsModifier$Rotational3D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
var cbgggpi_ColorInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_ColorInfluencer$Random = $rt_classWithoutFields(cbgggpi_ColorInfluencer);
var cbgggpi_DynamicsInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_RegionInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_RegionInfluencer$Single = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
var cbgggpi_ModelInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_DynamicsModifier$Rotational2D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
var cbgggpi_DynamicsModifier$BrownianAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
var cbgggpi_SimpleInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_ScaleInfluencer = $rt_classWithoutFields(cbgggpi_SimpleInfluencer);
var cbgggpi_RegionInfluencer$Random = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
var cbgggpi_DynamicsModifier$TangentialAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
var cbgggpi_ParticleControllerFinalizerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_RegionInfluencer$Animated = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
var cbgggpi_SpawnInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_DynamicsModifier$FaceDirection = $rt_classWithoutFields(cbgggpi_DynamicsModifier);
var cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool = $rt_classWithoutFields(cbgu_Pool);
var cbgggpi_ModelInfluencer$Random$ModelInstancePool = $rt_classWithoutFields(cbgu_Pool);
var cbgggpi_DynamicsModifier$CentripetalAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
var cbgggpi_ModelInfluencer$Single = $rt_classWithoutFields(cbgggpi_ModelInfluencer);
var cbgggpi_ParticleControllerInfluencer$Random = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer);
var cbgggpi_ParticleControllerInfluencer$Single = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer);
var cbgggpi_ModelInfluencer$Random = $rt_classWithoutFields(cbgggpi_ModelInfluencer);
var cbgggpi_DynamicsModifier$PolarAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
var cbgggpi_ColorInfluencer$Single = $rt_classWithoutFields(cbgggpi_ColorInfluencer);
var cbgggpr_ParticleControllerRenderer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
var cbgggpr_PointSpriteRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
var cbgggpr_ParticleControllerRenderData = $rt_classWithoutFields();
var cbgggpr_BillboardControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
var cbgggpr_ModelInstanceRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
var cbgggpr_ParticleControllerControllerRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
var cbgggpr_PointSpriteControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
var cbgggpr_BillboardRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
var cbgggpr_ModelInstanceControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
var jlr_AnnotatedElement = $rt_classWithoutFields(0);
var jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    var a = this; jl_Object.call(a);
    a.$name = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
}
var jl_Class_reflectionInitialized = 0;
function jl_Class__init_(var_0) {
    var var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
}
function jl_Class__init_0($this, $platformClass) {
    var var$2;
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
}
function jl_Class_getClass($cls) {
    var $result, var$3;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null) {
        $result = new jl_Class;
        $result.$platformClass = $cls;
        var$3 = $result;
        $cls.classObject = var$3;
    }
    return $result;
}
function jl_Class_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = (!($this.$platformClass.$meta.flags & 2) ? 0 : 1) ? $rt_s(69) : !($this.$platformClass.$meta.primitive ? 1 : 0) ? $rt_s(70) : $rt_s(42);
    if ($this.$name === null)
        $this.$name = $rt_str($this.$platformClass.$meta.name);
    var$2 = $this.$name;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$1 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jl_Class_getComponentType($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$platformClass.$meta.item;
    if (var$1 === null)
        var$2 = null;
    else {
        var$2 = var$1.classObject;
        if (var$2 === null) {
            var$2 = new jl_Class;
            var$2.$platformClass = var$1;
            var$3 = var$2;
            var$1.classObject = var$3;
        }
    }
    return var$2;
}
function jl_Class_createMetadata() {
    cbgssu_Table$DebugRect.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgssu_Table$DebugRect__init_0(obj );
                return null;
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgssu_Table$DebugRect_$callClinit();
                cbgssu_Table$DebugRect__clinit_();
                return null;
            }
        }];
    cbggg_GlyphLayout$GlyphRun.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun__init_(obj );
                return null;
            }
        }, {
            name : "appendRun",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun_appendRun(obj , args[0]);
                return null;
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout$GlyphRun_toString(obj );
            }
        }];
    cbggg_GlyphLayout.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_0(obj );
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_2(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_4(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_6(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText0(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText1(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "calculateWidths",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_calculateWidths(obj , args[0]);
                return null;
            }
        }, {
            name : "alignRuns",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_floatcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_alignRuns(obj , jl_Float_floatValue(args[0]), jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "truncate",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_floatcls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_truncate(obj , args[0], args[1], jl_Float_floatValue(args[2]), args[3]);
                return null;
            }
        }, {
            name : "wrap",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_intcls()],
            returnType : cbggg_GlyphLayout$GlyphRun,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_wrap(obj , args[0], args[1], jl_Integer_intValue(args[2]));
            }
        }, {
            name : "setLastGlyphXAdvance",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setLastGlyphXAdvance(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "getGlyphWidth",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$Glyph, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls(),
            callable : function(obj, args) {
                return cbggg_GlyphLayout_getGlyphWidth(obj , args[0], args[1]);
            }
        }, {
            name : "getLineOffset",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbgu_Array, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls(),
            callable : function(obj, args) {
                return cbggg_GlyphLayout_getLineOffset(obj , args[0], args[1]);
            }
        }, {
            name : "parseColorMarkup",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_CharSequence, $rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                return cbggg_GlyphLayout_parseColorMarkup(obj , args[0], jl_Integer_intValue(args[1]), jl_Integer_intValue(args[2]));
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_toString(obj );
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_$callClinit();
                cbggg_GlyphLayout__clinit_();
                return null;
            }
        }];
}
function jl_Class_getDeclaredConstructors($this) {
    var $jsMethods, $count, $i, var$4, $jsParameterTypes, $parameterTypes, var$7, $j, var$9, var$10, var$11, var$12, var$13;
    if (!($this.$platformClass.$meta.primitive ? 1 : 0) && !($this.$platformClass.$meta.item === null ? 0 : 1)) {
        if ($this.$declaredConstructors === null) {
            if (!jl_Class_reflectionInitialized) {
                jl_Class_reflectionInitialized = 1;
                jl_Class_createMetadata();
            }
            $jsMethods = $this.$platformClass.$meta.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                var$4 = $jsMethods[$i];
                if (jl_String_equals($rt_str(var$4.name), $rt_s(71))) {
                    $jsParameterTypes = var$4.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    var$7 = $parameterTypes.data;
                    $j = 0;
                    var$9 = var$7.length;
                    while ($j < var$9) {
                        var$10 = $jsParameterTypes[$j];
                        if (var$10 === null)
                            var$11 = null;
                        else {
                            var$11 = var$10.classObject;
                            if (var$11 === null) {
                                var$11 = new jl_Class;
                                var$11.$platformClass = var$10;
                                var$12 = var$11;
                                var$10.classObject = var$12;
                            }
                        }
                        var$7[$j] = var$11;
                        $j = $j + 1 | 0;
                    }
                    var$7 = $this.$declaredConstructors.data;
                    $j = $count + 1 | 0;
                    var$11 = new jlr_Constructor;
                    $jsParameterTypes = $rt_str(var$4.name);
                    var$9 = var$4.modifiers;
                    var$13 = var$4.accessLevel;
                    var$4 = otji_JS_functionAsObject(var$4.callable, "call");
                    var$11.$declaringClass = $this;
                    var$11.$name1 = $jsParameterTypes;
                    var$11.$modifiers = var$9;
                    var$11.$accessLevel = var$13;
                    var$11.$parameterTypes = $parameterTypes;
                    var$11.$callable = var$4;
                    var$7[$count] = var$11;
                    $count = $j;
                }
                $i = $i + 1 | 0;
            }
            $parameterTypes = $this.$declaredConstructors;
            var$4 = $parameterTypes.constructor;
            if (var$4 === null)
                $jsParameterTypes = null;
            else {
                $jsParameterTypes = var$4.classObject;
                if ($jsParameterTypes === null) {
                    $jsParameterTypes = new jl_Class;
                    $jsParameterTypes.$platformClass = var$4;
                    var$11 = $jsParameterTypes;
                    var$4.classObject = var$11;
                }
            }
            var$11 = jl_Class_getComponentType($jsParameterTypes);
            if (var$11 === null) {
                var$11 = new jl_NullPointerException;
                var$11.$suppressionEnabled = 1;
                var$11.$writableStackTrace = 1;
                $rt_throw(var$11);
            }
            if (var$11 === $rt_cls($rt_voidcls())) {
                var$11 = new jl_IllegalArgumentException;
                var$11.$suppressionEnabled = 1;
                var$11.$writableStackTrace = 1;
                $rt_throw(var$11);
            }
            if ($count < 0) {
                var$11 = new jl_NegativeArraySizeException;
                var$11.$suppressionEnabled = 1;
                var$11.$writableStackTrace = 1;
                $rt_throw(var$11);
            }
            $parameterTypes = $parameterTypes.data;
            var$4 = jlr_Array_newInstanceImpl(var$11.$platformClass, $count);
            $i = $parameterTypes.length;
            if ($count < $i)
                $i = $count;
            $count = 0;
            while ($count < $i) {
                var$4.data[$count] = $parameterTypes[$count];
                $count = $count + 1 | 0;
            }
            $this.$declaredConstructors = var$4;
        }
        return $this.$declaredConstructors.$clone();
    }
    return $rt_createArray(jlr_Constructor, 0);
}
function jl_Class_getConstructors($this) {
    var $declaredConstructors, var$2, $constructors, var$4, $sz, var$6, $constructor, var$8, var$9, var$10;
    $declaredConstructors = (jl_Class_getDeclaredConstructors($this)).data;
    var$2 = $declaredConstructors.length;
    $constructors = $rt_createArray(jlr_Constructor, var$2);
    var$4 = $constructors.data;
    $sz = 0;
    var$6 = 0;
    while (var$6 < var$2) {
        $constructor = $declaredConstructors[var$6];
        if (!(otcir_Flags_getModifiers($constructor.$modifiers, $constructor.$accessLevel) & 1) ? 0 : 1) {
            var$8 = $sz + 1 | 0;
            var$4[$sz] = $constructor;
            $sz = var$8;
        }
        var$6 = var$6 + 1 | 0;
    }
    var$2 = var$4.length;
    var$8 = $rt_compare($sz, var$2);
    if (var$8 < 0) {
        var$9 = $constructors.constructor;
        if (var$9 === null)
            $constructor = null;
        else {
            $constructor = var$9.classObject;
            if ($constructor === null) {
                $constructor = new jl_Class;
                $constructor.$platformClass = var$9;
                var$10 = $constructor;
                var$9.classObject = var$10;
            }
        }
        var$9 = jl_Class_getComponentType($constructor);
        if (var$9 === null) {
            $constructor = new jl_NullPointerException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        if (var$9 === $rt_cls($rt_voidcls())) {
            $constructor = new jl_IllegalArgumentException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        if ($sz < 0) {
            $constructor = new jl_NegativeArraySizeException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        var$10 = jlr_Array_newInstanceImpl(var$9.$platformClass, $sz);
        if (var$8 < 0)
            var$2 = $sz;
        $sz = 0;
        while ($sz < var$2) {
            var$10.data[$sz] = var$4[$sz];
            $sz = $sz + 1 | 0;
        }
        $constructors = var$10;
    }
    return $constructors;
}
function jl_Class_getDeclaredConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor;
    var$2 = (jl_Class_getDeclaredConstructors($this)).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            $constructor = new jl_NoSuchMethodException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        $constructor = var$2[var$4];
        if (ju_Arrays_equals($constructor.$parameterTypes.$clone(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
function jl_Class_getConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor, var$6;
    var$2 = (jl_Class_getDeclaredConstructors($this)).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            $constructor = new jl_NoSuchMethodException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        $constructor = var$2[var$4];
        var$6 = !(otcir_Flags_getModifiers($constructor.$modifiers, $constructor.$accessLevel) & 1) ? 0 : 1;
        if (var$6 && ju_Arrays_equals($constructor.$parameterTypes.$clone(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
var otji_JS = $rt_classWithoutFields();
function otji_JS_function(var$1, var$2) {
    var name = 'jso$functor$' + var$2;
    if (!var$1[name]) {
        var fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        var$1[name] = function() {
            return fn;
        };
    }
    return var$1[name]();
}
function otji_JS_functionAsObject(var$1, var$2) {
    if (typeof var$1 !== "function") return var$1;
    var result = {};
    result[var$2] = var$1;
    return result;
}
var otp_Platform = $rt_classWithoutFields();
function otp_Platform_clone(var$1) {
    var copy = new var$1.constructor();
    for (var field in var$1) {
        if (!var$1.hasOwnProperty(field)) {
            continue;
        }
        copy[field] = var$1[field];
    }
    return copy;
}
function otp_Platform_isAssignable($from, $to) {
    var $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function otp_Platform_startThread(var$1) {
    return setTimeout(function() {
        $rt_threadStarter(otp_Platform_launchThread)(var$1);
    }, 0);
}
function otp_Platform_launchThread($runnable) {
    $runnable.$run();
}
function otp_Platform_schedule(var$1, var$2) {
    return setTimeout(function() {
        otp_Platform_launchThread(var$1);
    }, var$2);
}
function otp_Platform_getName($cls) {
    return $rt_str($cls.$meta.name);
}
function otp_Platform_createQueueJs$js_body$_30() {
    return [];
}
var jl_CharSequence = $rt_classWithoutFields(0);
function jl_String() {
    var a = this; jl_Object.call(a);
    a.$characters = null;
    a.$hashCode0 = 0;
}
var jl_String_EMPTY_CHARS = null;
var jl_String_EMPTY = null;
var jl_String_CASE_INSENSITIVE_ORDER = null;
function jl_String_$callClinit() {
    jl_String_$callClinit = $rt_eraseClinit(jl_String);
    jl_String__clinit_();
}
function jl_String__init_(var_0) {
    var var_1 = new jl_String();
    jl_String__init_0(var_1, var_0);
    return var_1;
}
function jl_String__init_1(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_3(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_0($this, $characters) {
    var var$2, var$3, var$4, $i;
    jl_String_$callClinit();
    $characters = $characters.data;
    var$2 = $characters.length;
    var$3 = $rt_createCharArray(var$2);
    var$4 = var$3.data;
    $this.$characters = var$3;
    $i = 0;
    while ($i < var$2) {
        var$4[$i] = $characters[$i];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_2($this, $value, $offset, $count) {
    var var$4, var$5, $i;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray($count);
    var$5 = var$4.data;
    $this.$characters = var$4;
    $i = 0;
    while ($i < $count) {
        var$5[$i] = $value.data[$i + $offset | 0];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_4($this, $codePoints, $offset, $count) {
    var var$4, var$5, $charCount, $i, var$8, $codePoint, var$10, var$11;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray($count * 2 | 0);
    var$5 = var$4.data;
    $this.$characters = var$4;
    $charCount = 0;
    $i = 0;
    while ($i < $count) {
        var$4 = $codePoints.data;
        var$8 = $offset + 1 | 0;
        $codePoint = var$4[$offset];
        if ($codePoint < 65536) {
            var$10 = $charCount + 1 | 0;
            var$5[$charCount] = $codePoint & 65535;
        } else {
            var$11 = $charCount + 1 | 0;
            var$5[$charCount] = (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
            var$10 = var$11 + 1 | 0;
            var$5[var$11] = (56320 | $codePoint & 1023) & 65535;
        }
        $i = $i + 1 | 0;
        $offset = var$8;
        $charCount = var$10;
    }
    $offset = var$5.length;
    $count = $rt_compare($charCount, $offset);
    if ($count < 0) {
        $codePoints = $rt_createCharArray($charCount);
        if ($count < 0)
            $offset = $charCount;
        var$4 = $codePoints.data;
        $count = 0;
        while ($count < $offset) {
            var$4[$count] = var$5[$count];
            $count = $count + 1 | 0;
        }
        $this.$characters = $codePoints;
    }
}
function jl_String_charAt($this, $index) {
    var var$2, var$3;
    if ($index >= 0) {
        var$2 = $this.$characters.data;
        if ($index < var$2.length)
            return var$2[$index];
    }
    var$3 = new jl_StringIndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    $rt_throw(var$3);
}
function jl_String_length($this) {
    return $this.$characters.data.length;
}
function jl_String_getChars($this, $srcBegin, $srcEnd, $dst, $dstBegin) {
    var var$5, var$6, var$7, var$8, var$9;
    if ($srcBegin >= 0 && $srcBegin <= $srcEnd) {
        var$5 = $this.$characters.data;
        var$6 = var$5.length;
        if ($srcEnd <= var$6 && $dstBegin >= 0) {
            $dst = $dst.data;
            if (($dstBegin + ($srcEnd - $srcBegin | 0) | 0) <= $dst.length) {
                a: {
                    while ($srcBegin < $srcEnd) {
                        var$7 = $dstBegin + 1 | 0;
                        var$8 = $srcBegin + 1 | 0;
                        if ($srcBegin < 0)
                            break a;
                        if ($srcBegin >= var$6)
                            break a;
                        $dst[$dstBegin] = var$5[$srcBegin];
                        $dstBegin = var$7;
                        $srcBegin = var$8;
                    }
                    return;
                }
                var$9 = new jl_StringIndexOutOfBoundsException;
                var$9.$suppressionEnabled = 1;
                var$9.$writableStackTrace = 1;
                $rt_throw(var$9);
            }
        }
    }
    var$9 = new jl_IndexOutOfBoundsException;
    var$9.$suppressionEnabled = 1;
    var$9.$writableStackTrace = 1;
    $rt_throw(var$9);
}
function jl_String_startsWith($this, $prefix, $toffset) {
    var var$3, var$4, var$5, var$6, var$7, $i, var$9;
    var$3 = $prefix.$characters.data;
    var$4 = var$3.length;
    var$5 = $toffset + var$4 | 0;
    var$6 = $this.$characters.data;
    var$7 = var$6.length;
    if (var$5 > var$7)
        return 0;
    $i = 0;
    a: {
        b: {
            while (true) {
                var$5 = $rt_compare($i, var$4);
                if (var$5 >= 0)
                    break;
                if ($i < 0)
                    break a;
                if (var$5 >= 0)
                    break a;
                var$9 = var$3[$i];
                var$5 = $toffset + 1 | 0;
                if ($toffset < 0)
                    break b;
                if ($toffset >= var$7)
                    break b;
                if (var$9 != var$6[$toffset])
                    return 0;
                $i = $i + 1 | 0;
                $toffset = var$5;
            }
            return 1;
        }
        $prefix = new jl_StringIndexOutOfBoundsException;
        $prefix.$suppressionEnabled = 1;
        $prefix.$writableStackTrace = 1;
        $rt_throw($prefix);
    }
    $prefix = new jl_StringIndexOutOfBoundsException;
    $prefix.$suppressionEnabled = 1;
    $prefix.$writableStackTrace = 1;
    $rt_throw($prefix);
}
function jl_String_startsWith0($this, $prefix) {
    if ($this === $prefix)
        return 1;
    return jl_String_startsWith($this, $prefix, 0);
}
function jl_String_endsWith($this, $suffix) {
    var var$2, var$3, var$4, var$5, $j, $i, var$8, var$9;
    if ($this === $suffix)
        return 1;
    var$2 = $suffix.$characters.data;
    var$3 = var$2.length;
    var$4 = $this.$characters.data;
    var$5 = var$4.length;
    if (var$3 > var$5)
        return 0;
    $j = 0;
    $i = var$5 - var$3 | 0;
    a: {
        b: {
            while (true) {
                var$8 = $rt_compare($i, var$5);
                if (var$8 >= 0)
                    break;
                if ($i < 0)
                    break a;
                if (var$8 >= 0)
                    break a;
                var$9 = var$4[$i];
                var$8 = $j + 1 | 0;
                if ($j < 0)
                    break b;
                if ($j >= var$3)
                    break b;
                if (var$9 != var$2[$j])
                    return 0;
                $i = $i + 1 | 0;
                $j = var$8;
            }
            return 1;
        }
        $suffix = new jl_StringIndexOutOfBoundsException;
        $suffix.$suppressionEnabled = 1;
        $suffix.$writableStackTrace = 1;
        $rt_throw($suffix);
    }
    $suffix = new jl_StringIndexOutOfBoundsException;
    $suffix.$suppressionEnabled = 1;
    $suffix.$writableStackTrace = 1;
    $rt_throw($suffix);
}
function jl_String_indexOf($this, $ch, $i) {
    var $bmpChar, var$4, $hi, $lo;
    if (0 > $i)
        $i = 0;
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            var$4 = $this.$characters.data;
            if ($i >= var$4.length)
                return (-1);
            if (var$4[$i] == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = (55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535;
    $lo = (56320 | $ch & 1023) & 65535;
    while (true) {
        var$4 = $this.$characters.data;
        if ($i >= (var$4.length - 1 | 0))
            return (-1);
        if (var$4[$i] == $hi && var$4[$i + 1 | 0] == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf0($this, $ch) {
    return jl_String_indexOf($this, $ch, 0);
}
function jl_String_lastIndexOf($this, $ch, $fromIndex) {
    var var$3, $i, $bmpChar, $hi, $lo;
    var$3 = $this.$characters.data;
    $i = var$3.length - 1 | 0;
    if ($fromIndex < $i)
        $i = $fromIndex;
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if (var$3[$i] == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = (55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535;
    $lo = (56320 | $ch & 1023) & 65535;
    while (true) {
        if ($i < 1)
            return (-1);
        if (var$3[$i] == $lo) {
            $ch = $i - 1 | 0;
            if (var$3[$ch] == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return $ch;
}
function jl_String_indexOf1($this, $str, $i) {
    var var$3, var$4, var$5, var$6, $toIndex, $j, var$9, var$10, var$11;
    if (0 > $i)
        $i = 0;
    var$3 = $this.$characters.data;
    var$4 = var$3.length;
    var$5 = $str.$characters.data;
    var$6 = var$5.length;
    $toIndex = var$4 - var$6 | 0;
    a: {
        b: {
            c: while (true) {
                if ($i > $toIndex)
                    return (-1);
                $j = 0;
                while (true) {
                    var$9 = $rt_compare($j, var$6);
                    if (var$9 >= 0)
                        break c;
                    var$10 = $i + $j | 0;
                    if (var$10 < 0)
                        break a;
                    if (var$10 >= var$4)
                        break a;
                    var$11 = var$3[var$10];
                    if ($j < 0)
                        break b;
                    if (var$9 >= 0)
                        break b;
                    if (var$11 != var$5[$j])
                        break;
                    $j = $j + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            return $i;
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
}
function jl_String_indexOf2($this, $str) {
    return jl_String_indexOf1($this, $str, 0);
}
function jl_String_lastIndexOf0($this, $str, $fromIndex) {
    var var$3, var$4, var$5, var$6, $i, $j, var$9, var$10;
    var$3 = $this.$characters.data;
    var$4 = var$3.length;
    var$5 = $str.$characters.data;
    var$6 = var$5.length;
    $i = var$4 - var$6 | 0;
    if ($fromIndex < $i)
        $i = $fromIndex;
    a: {
        b: {
            c: while (true) {
                if ($i < 0)
                    return (-1);
                $j = 0;
                while (true) {
                    var$9 = $rt_compare($j, var$6);
                    if (var$9 >= 0)
                        break c;
                    var$10 = $i + $j | 0;
                    if (var$10 < 0)
                        break a;
                    if (var$10 >= var$4)
                        break a;
                    var$10 = var$3[var$10];
                    if ($j < 0)
                        break b;
                    if (var$9 >= 0)
                        break b;
                    if (var$10 != var$5[$j])
                        break;
                    $j = $j + 1 | 0;
                }
                $i = $i + (-1) | 0;
            }
            return $i;
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
}
function jl_String_substring($this, $beginIndex, $endIndex) {
    var var$3, var$4, var$5, var$6, var$7, var$8;
    var$3 = $rt_compare($beginIndex, $endIndex);
    if (var$3 > 0) {
        var$4 = new jl_IndexOutOfBoundsException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if (!var$3) {
        jl_String_$callClinit();
        return jl_String_EMPTY;
    }
    if (!$beginIndex && $endIndex == $this.$characters.data.length)
        return $this;
    var$4 = new jl_String;
    var$5 = $this.$characters;
    $endIndex = $endIndex - $beginIndex | 0;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray($endIndex);
    var$7 = var$6.data;
    var$4.$characters = var$6;
    var$8 = 0;
    while (var$8 < $endIndex) {
        var$7[var$8] = var$5.data[var$8 + $beginIndex | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$4;
}
function jl_String_substring0($this, $beginIndex) {
    var var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = $this.$characters.data;
    var$3 = var$2.length;
    var$4 = $rt_compare($beginIndex, var$3);
    if (var$4 > 0) {
        var$5 = new jl_IndexOutOfBoundsException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        $rt_throw(var$5);
    }
    if (!var$4) {
        jl_String_$callClinit();
        $this = jl_String_EMPTY;
    } else if (!(!$beginIndex && var$3 == var$3)) {
        $this = new jl_String;
        var$4 = var$3 - $beginIndex | 0;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$4);
        var$7 = var$6.data;
        $this.$characters = var$6;
        var$3 = 0;
        while (var$3 < var$4) {
            var$7[var$3] = var$2[var$3 + $beginIndex | 0];
            var$3 = var$3 + 1 | 0;
        }
    }
    return $this;
}
function jl_String_subSequence($this, $beginIndex, $endIndex) {
    var var$3, var$4, var$5, var$6, var$7, var$8;
    var$3 = $rt_compare($beginIndex, $endIndex);
    if (var$3 > 0) {
        var$4 = new jl_IndexOutOfBoundsException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if (!var$3) {
        jl_String_$callClinit();
        $this = jl_String_EMPTY;
    } else if (!(!$beginIndex && $endIndex == $this.$characters.data.length)) {
        var$4 = new jl_String;
        var$5 = $this.$characters;
        $endIndex = $endIndex - $beginIndex | 0;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray($endIndex);
        var$7 = var$6.data;
        var$4.$characters = var$6;
        var$8 = 0;
        while (var$8 < $endIndex) {
            var$7[var$8] = var$5.data[var$8 + $beginIndex | 0];
            var$8 = var$8 + 1 | 0;
        }
        $this = var$4;
    }
    return $this;
}
function jl_String_contains($this, $s) {
    var var$2, var$3, var$4, var$5, $sz, $i, $j, var$9, var$10;
    var$2 = $this.$characters.data;
    var$3 = var$2.length;
    var$4 = $s.$characters.data;
    var$5 = var$4.length;
    $sz = var$3 - var$5 | 0;
    $i = 0;
    a: {
        b: {
            while ($i <= $sz) {
                $j = 0;
                while (true) {
                    var$9 = $rt_compare($j, var$5);
                    if (var$9 >= 0)
                        return 1;
                    var$10 = $i + $j | 0;
                    if (var$10 < 0)
                        break a;
                    if (var$10 >= var$3)
                        break a;
                    var$10 = var$2[var$10];
                    if ($j < 0)
                        break b;
                    if (var$9 >= 0)
                        break b;
                    if (var$10 != var$4[$j])
                        break;
                    $j = $j + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            return 0;
        }
        $s = new jl_StringIndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    $s = new jl_StringIndexOutOfBoundsException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $rt_throw($s);
}
function jl_String_replace($this, $target, $replacement) {
    var $sb, $sz, $i, var$6, $j, var$8, var$9, var$10, var$11, var$12;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(16);
    $sz = $this.$characters.data.length - $target.$characters.data.length | 0;
    $i = 0;
    a: {
        b: {
            c: while (true) {
                if ($i > $sz) {
                    var$6 = $this.$characters.data;
                    $sz = var$6.length;
                    $j = $rt_compare($i, $sz);
                    if ($j > 0) {
                        $target = new jl_IndexOutOfBoundsException;
                        $target.$suppressionEnabled = 1;
                        $target.$writableStackTrace = 1;
                        $rt_throw($target);
                    }
                    if (!$j) {
                        jl_String_$callClinit();
                        $this = jl_String_EMPTY;
                    } else if (!(!$i && $sz == $sz)) {
                        $this = new jl_String;
                        $j = $sz - $i | 0;
                        jl_String_$callClinit();
                        var$8 = $rt_createCharArray($j);
                        var$9 = var$8.data;
                        $this.$characters = var$8;
                        $sz = 0;
                        while ($sz < $j) {
                            var$9[$sz] = var$6[$sz + $i | 0];
                            $sz = $sz + 1 | 0;
                        }
                    }
                    $j = $sb.$length;
                    if ($this === null)
                        $this = $rt_s(1);
                    jl_AbstractStringBuilder_insert($sb, $j, $this);
                    $target = new jl_String;
                    var$8 = $sb.$buffer;
                    $sz = $sb.$length;
                    jl_String_$callClinit();
                    var$9 = $rt_createCharArray($sz);
                    var$6 = var$9.data;
                    $target.$characters = var$9;
                    var$10 = 0;
                    while (var$10 < $sz) {
                        var$6[var$10] = var$8.data[var$10 + 0 | 0];
                        var$10 = var$10 + 1 | 0;
                    }
                    return $target;
                }
                $j = 0;
                d: {
                    while (true) {
                        var$8 = $target.$characters.data;
                        var$10 = $rt_compare($j, var$8.length);
                        if (var$10 >= 0)
                            break;
                        var$11 = $i + $j | 0;
                        if (var$11 < 0)
                            break b;
                        var$9 = $this.$characters.data;
                        var$12 = var$9.length;
                        if (var$11 >= var$12)
                            break b;
                        var$11 = var$9[var$11];
                        if ($j < 0)
                            break c;
                        if (var$10 >= 0)
                            break c;
                        if (var$11 != var$8[$j]) {
                            if ($i < 0)
                                break a;
                            if ($i >= var$12)
                                break a;
                            var$11 = var$9[$i];
                            var$10 = $sb.$length;
                            jl_AbstractStringBuilder_insertSpace($sb, var$10, var$10 + 1 | 0);
                            $sb.$buffer.data[var$10] = var$11;
                            break d;
                        }
                        $j = $j + 1 | 0;
                    }
                    jl_AbstractStringBuilder_insert($sb, $sb.$length, $replacement === null ? $rt_s(1) : $replacement);
                    $i = $i + ($target.$characters.data.length - 1 | 0) | 0;
                }
                $i = $i + 1 | 0;
            }
            $target = new jl_StringIndexOutOfBoundsException;
            $target.$suppressionEnabled = 1;
            $target.$writableStackTrace = 1;
            $rt_throw($target);
        }
        $target = new jl_StringIndexOutOfBoundsException;
        $target.$suppressionEnabled = 1;
        $target.$writableStackTrace = 1;
        $rt_throw($target);
    }
    $target = new jl_StringIndexOutOfBoundsException;
    $target.$suppressionEnabled = 1;
    $target.$writableStackTrace = 1;
    $rt_throw($target);
}
function jl_String_trim($this) {
    var $lower, var$2, var$3, $upper, var$5, var$6, var$7, var$8;
    $lower = 0;
    var$2 = $this.$characters.data;
    var$3 = var$2.length;
    $upper = var$3 - 1 | 0;
    a: {
        while (true) {
            if ($lower > $upper)
                break a;
            if ($lower < 0)
                break;
            if ($lower >= var$3)
                break;
            if (var$2[$lower] > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
        var$5 = new jl_StringIndexOutOfBoundsException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        $rt_throw(var$5);
    }
    b: {
        while (true) {
            if ($lower > $upper)
                break b;
            if ($upper < 0)
                break;
            if ($upper >= var$3)
                break;
            if (var$2[$upper] > 32)
                break b;
            $upper = $upper + (-1) | 0;
        }
        var$5 = new jl_StringIndexOutOfBoundsException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        $rt_throw(var$5);
    }
    var$6 = $upper + 1 | 0;
    $upper = $rt_compare($lower, var$6);
    if ($upper > 0) {
        var$5 = new jl_IndexOutOfBoundsException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        $rt_throw(var$5);
    }
    if (!$upper) {
        jl_String_$callClinit();
        $this = jl_String_EMPTY;
    } else if (!(!$lower && var$6 == var$3)) {
        $this = new jl_String;
        var$6 = var$6 - $lower | 0;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$8 = var$7.data;
        $this.$characters = var$7;
        $upper = 0;
        while ($upper < var$6) {
            var$8[$upper] = var$2[$upper + $lower | 0];
            $upper = $upper + 1 | 0;
        }
    }
    return $this;
}
function jl_String_toString($this) {
    return $this;
}
function jl_String_valueOf($i) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    jl_String_$callClinit();
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length, $i, 10);
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$3;
}
function jl_String_equals($this, $other) {
    var var$2, var$3, var$4, var$5, $i, var$7, var$8;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    var$2 = $other.$characters.data;
    var$3 = var$2.length;
    var$4 = $this.$characters.data;
    var$5 = var$4.length;
    if (var$3 != var$5)
        return 0;
    $i = 0;
    a: {
        b: {
            while (true) {
                var$7 = $rt_compare($i, var$3);
                if (var$7 >= 0)
                    break;
                if ($i < 0)
                    break a;
                if ($i >= var$5)
                    break a;
                var$8 = var$4[$i];
                if ($i < 0)
                    break b;
                if (var$7 >= 0)
                    break b;
                if (var$8 != var$2[$i])
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
        $other = new jl_StringIndexOutOfBoundsException;
        $other.$suppressionEnabled = 1;
        $other.$writableStackTrace = 1;
        $rt_throw($other);
    }
    $other = new jl_StringIndexOutOfBoundsException;
    $other.$suppressionEnabled = 1;
    $other.$writableStackTrace = 1;
    $rt_throw($other);
}
function jl_String_getBytes($this, $charsetName) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
    if ($charsetName === null) {
        $charsetName = new jl_IllegalArgumentException;
        $charsetName.$suppressionEnabled = 1;
        $charsetName.$writableStackTrace = 1;
        $charsetName.$message = $rt_s(72);
        $rt_throw($charsetName);
    }
    jnc_Charset_checkCanonicalName($charsetName);
    jnc_Charset$Charsets_$callClinit();
    var$2 = jnc_Charset$Charsets_value;
    var$3 = jl_String_toUpperCase($charsetName);
    if (var$3 === null) {
        var$2 = var$2.$elementData.data[0];
        while (var$2 !== null && var$2.$key !== null) {
            var$2 = var$2.$next;
        }
    } else {
        a: {
            if (!var$3.$hashCode0) {
                var$4 = var$3.$characters.data;
                var$5 = var$4.length;
                var$6 = 0;
                while (true) {
                    if (var$6 >= var$5)
                        break a;
                    var$7 = var$4[var$6];
                    var$3.$hashCode0 = (31 * var$3.$hashCode0 | 0) + var$7 | 0;
                    var$6 = var$6 + 1 | 0;
                }
            }
        }
        var$7 = var$3.$hashCode0;
        var$4 = var$2.$elementData.data;
        var$2 = var$4[var$7 & (var$4.length - 1 | 0)];
        while (var$2 !== null) {
            if (var$2.$origKeyHash == var$7) {
                var$8 = var$2.$key;
                if (var$3 !== var$8 && !jl_String_equals(var$3, var$8) ? 0 : 1)
                    break;
            }
            var$2 = var$2.$next;
        }
    }
    var$2 = var$2 === null ? null : var$2.$value4;
    if (var$2 === null) {
        var$2 = new jnc_UnsupportedCharsetException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$charsetName = $charsetName;
        $rt_throw(var$2);
    }
    var$4 = $this.$characters;
    var$6 = var$4.data.length;
    $charsetName = new jn_CharBufferOverArray;
    var$9 = 0 + var$6 | 0;
    $charsetName.$mark = (-1);
    $charsetName.$capacity = var$6;
    $charsetName.$limit = var$6;
    $charsetName.$position = 0;
    $charsetName.$limit = var$9;
    $charsetName.$start0 = 0;
    $charsetName.$readOnly0 = 0;
    $charsetName.$array2 = var$4;
    b: {
        try {
            var$3 = var$2.$newEncoder();
            jnc_CodingErrorAction_$callClinit();
            $charsetName = jnc_CharsetEncoder_encode(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(var$3, jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $charsetName);
            break b;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                var$2 = $$je;
            } else {
                throw $$e;
            }
        }
        var$3 = new jl_AssertionError;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(73);
        var$3.$cause = var$2;
        $rt_throw(var$3);
    }
    var$7 = $charsetName.$position;
    if (!var$7 && $charsetName.$limit == $charsetName.$capacity)
        var$4 = $charsetName.$array;
    else {
        var$4 = $rt_createByteArray($charsetName.$limit - var$7 | 0);
        jn_ByteBuffer_get($charsetName, var$4, 0, var$4.data.length);
    }
    return var$4;
}
function jl_String_hashCode($this) {
    var var$1, var$2, var$3, $c;
    a: {
        if (!$this.$hashCode0) {
            var$1 = $this.$characters.data;
            var$2 = var$1.length;
            var$3 = 0;
            while (true) {
                if (var$3 >= var$2)
                    break a;
                $c = var$1[var$3];
                $this.$hashCode0 = (31 * $this.$hashCode0 | 0) + $c | 0;
                var$3 = var$3 + 1 | 0;
            }
        }
    }
    return $this.$hashCode0;
}
function jl_String_toLowerCase($this) {
    var $codePointCount, $codePoints, var$3, $i, var$5, var$6, var$7, var$8, var$9, var$10;
    $codePointCount = $this.$characters.data.length;
    if ($codePointCount ? 0 : 1)
        return $this;
    $codePoints = $rt_createIntArray($codePointCount);
    var$3 = $codePoints.data;
    $codePointCount = 0;
    $i = 0;
    while (true) {
        var$5 = $this.$characters.data;
        var$6 = var$5.length;
        if ($i >= var$6)
            break;
        a: {
            if ($i != (var$6 - 1 | 0) && ((var$5[$i] & 64512) != 55296 ? 0 : 1)) {
                var$6 = $i + 1 | 0;
                if ((var$5[var$6] & 64512) != 56320 ? 0 : 1) {
                    var$7 = $codePointCount + 1 | 0;
                    var$8 = ((var$5[$i] & 1023) << 10 | var$5[var$6] & 1023) + 65536 | 0;
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
                    }
                    b: {
                        var$5 = jl_Character_lowerCaseMapping;
                        var$9 = jl_Character_binarySearchTable(var$5, var$8);
                        if (var$9 >= 0) {
                            var$5 = var$5.data;
                            if (var$9 < (var$5.length / 2 | 0)) {
                                $i = var$8 + var$5[(var$9 * 2 | 0) + 1 | 0] | 0;
                                break b;
                            }
                        }
                        $i = 0;
                    }
                    var$3[$codePointCount] = $i;
                    $codePointCount = var$7;
                    break a;
                }
            }
            var$6 = $codePointCount + 1 | 0;
            var$7 = var$5[$i];
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
            }
            c: {
                var$5 = jl_Character_lowerCaseMapping;
                var$10 = jl_Character_binarySearchTable(var$5, var$7);
                if (var$10 >= 0) {
                    var$5 = var$5.data;
                    if (var$10 < (var$5.length / 2 | 0)) {
                        var$7 = var$7 + var$5[(var$10 * 2 | 0) + 1 | 0] | 0;
                        break c;
                    }
                }
                var$7 = 0;
            }
            var$3[$codePointCount] = var$7 & 65535;
            $codePointCount = var$6;
            var$6 = $i;
        }
        $i = var$6 + 1 | 0;
    }
    return jl_String__init_3($codePoints, 0, $codePointCount);
}
function jl_String_toUpperCase($this) {
    var $codePointCount, $codePoints, var$3, $i, var$5, var$6, var$7, var$8, var$9, var$10;
    $codePointCount = $this.$characters.data.length;
    if ($codePointCount ? 0 : 1)
        return $this;
    $codePoints = $rt_createIntArray($codePointCount);
    var$3 = $codePoints.data;
    $codePointCount = 0;
    $i = 0;
    while (true) {
        var$5 = $this.$characters.data;
        var$6 = var$5.length;
        if ($i >= var$6)
            break;
        a: {
            if ($i != (var$6 - 1 | 0) && ((var$5[$i] & 64512) != 55296 ? 0 : 1)) {
                var$6 = $i + 1 | 0;
                if ((var$5[var$6] & 64512) != 56320 ? 0 : 1) {
                    var$7 = $codePointCount + 1 | 0;
                    var$8 = ((var$5[$i] & 1023) << 10 | var$5[var$6] & 1023) + 65536 | 0;
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
                    }
                    b: {
                        var$5 = jl_Character_upperCaseMapping;
                        var$9 = jl_Character_binarySearchTable(var$5, var$8);
                        if (var$9 >= 0) {
                            var$5 = var$5.data;
                            if (var$9 < (var$5.length / 2 | 0)) {
                                $i = var$8 + var$5[(var$9 * 2 | 0) + 1 | 0] | 0;
                                break b;
                            }
                        }
                        $i = 0;
                    }
                    var$3[$codePointCount] = $i;
                    $codePointCount = var$7;
                    break a;
                }
            }
            var$6 = $codePointCount + 1 | 0;
            var$7 = var$5[$i];
            if (jl_Character_upperCaseMapping === null) {
                if (jl_Character_$$metadata$$1 === null)
                    jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
            }
            c: {
                var$5 = jl_Character_upperCaseMapping;
                var$10 = jl_Character_binarySearchTable(var$5, var$7);
                if (var$10 >= 0) {
                    var$5 = var$5.data;
                    if (var$10 < (var$5.length / 2 | 0)) {
                        var$7 = var$7 + var$5[(var$10 * 2 | 0) + 1 | 0] | 0;
                        break c;
                    }
                }
                var$7 = 0;
            }
            var$3[$codePointCount] = var$7 & 65535;
            $codePointCount = var$6;
            var$6 = $i;
        }
        $i = var$6 + 1 | 0;
    }
    return jl_String__init_3($codePoints, 0, $codePointCount);
}
function jl_String_split($this, $regex) {
    return jur_Pattern_split(jur_Pattern_compile($regex, 0), $this, 0);
}
function jl_String_split0($this, $regex, $limit) {
    return jur_Pattern_split(jur_Pattern_compile($regex, 0), $this, $limit);
}
function jl_String_replaceAll($this, $regex, $replacement) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    $regex = jur_Matcher__init_(jur_Pattern_compile($regex, 0), $this);
    var$3 = new jl_StringBuffer;
    var$3.$buffer = $rt_createCharArray(16);
    $regex.$leftBound = 0;
    var$4 = $regex.$string;
    var$5 = var$4.$characters.data.length;
    $regex.$rightBound = var$5;
    var$6 = $regex.$matchResult;
    var$6.$valid0 = 0;
    var$6.$mode = 2;
    var$7 = var$6.$groupBounds.data;
    var$8 = 0;
    var$9 = var$7.length;
    if (var$8 > var$9) {
        $regex = new jl_IllegalArgumentException;
        jl_Throwable__init_0($regex);
        $rt_throw($regex);
    }
    while (var$8 < var$9) {
        var$10 = var$8 + 1 | 0;
        var$7[var$8] = (-1);
        var$8 = var$10;
    }
    var$7 = var$6.$consumers.data;
    var$8 = 0;
    var$9 = var$7.length;
    if (var$8 > var$9) {
        $regex = new jl_IllegalArgumentException;
        jl_Throwable__init_0($regex);
        $rt_throw($regex);
    }
    while (var$8 < var$9) {
        var$10 = var$8 + 1 | 0;
        var$7[var$8] = (-1);
        var$8 = var$10;
    }
    var$6.$string0 = var$4;
    var$6.$leftBound0 = 0;
    var$6.$rightBound0 = var$5;
    var$6.$startIndex = 0;
    $regex.$appendPos = 0;
    $regex.$replacement = null;
    var$6.$previousMatch = (-1);
    while (true) {
        if (!jur_Matcher_find($regex)) {
            $replacement = $regex.$string;
            var$11 = $regex.$appendPos;
            var$12 = $replacement.$characters.data;
            var$8 = var$12.length;
            var$13 = $rt_compare(var$11, var$8);
            if (var$13 > 0) {
                $regex = new jl_IndexOutOfBoundsException;
                $regex.$suppressionEnabled = 1;
                $regex.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($regex);
                $rt_throw($regex);
            }
            if (!var$13) {
                jl_String_$callClinit();
                $replacement = jl_String_EMPTY;
            } else if (!(!var$11 && var$8 == var$8)) {
                $replacement = new jl_String;
                var$13 = var$8 - var$11 | 0;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray(var$13);
                var$14 = var$7.data;
                $replacement.$characters = var$7;
                var$8 = 0;
                while (var$8 < var$13) {
                    var$14[var$8] = var$12[var$8 + var$11 | 0];
                    var$8 = var$8 + 1 | 0;
                }
            }
            var$8 = $replacement.$characters.data.length;
            jl_StringBuffer_insert(var$3, var$3.$length, $replacement, 0, var$8);
            $regex = new jl_String;
            var$7 = var$3.$buffer;
            var$13 = var$3.$length;
            jl_String_$callClinit();
            var$14 = $rt_createCharArray(var$13);
            var$12 = var$14.data;
            $regex.$characters = var$14;
            var$8 = 0;
            while (var$8 < var$13) {
                var$12[var$8] = var$7.data[var$8 + 0 | 0];
                var$8 = var$8 + 1 | 0;
            }
            return $regex;
        }
        $regex.$processedRepl = jur_Matcher_processReplacement($regex, $replacement);
        var$4 = $regex.$string;
        var$11 = $regex.$appendPos;
        var$6 = $regex.$matchResult;
        if (!var$6.$valid0)
            break;
        if (0 >= var$6.$groupCount) {
            $regex = new jl_IndexOutOfBoundsException;
            jl_String_$callClinit();
            $replacement = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_0($replacement);
            jl_AbstractStringBuilder_append($replacement, 0);
            var$3 = new jl_String;
            var$7 = $replacement.$buffer;
            var$13 = $replacement.$length;
            var$14 = $rt_createCharArray(var$13);
            var$12 = var$14.data;
            var$3.$characters = var$14;
            var$8 = 0;
            while (var$8 < var$13) {
                var$12[var$8] = var$7.data[var$8 + 0 | 0];
                var$8 = var$8 + 1 | 0;
            }
            $regex.$suppressionEnabled = 1;
            $regex.$writableStackTrace = 1;
            $regex.$message = var$3;
            $rt_throw($regex);
        }
        var$9 = var$6.$groupBounds.data[0];
        var$13 = $rt_compare(var$11, var$9);
        if (var$13 > 0) {
            $regex = new jl_IndexOutOfBoundsException;
            $regex.$suppressionEnabled = 1;
            $regex.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($regex);
            $rt_throw($regex);
        }
        if (!var$13) {
            jl_String_$callClinit();
            var$6 = jl_String_EMPTY;
        } else
            var$6 = !var$11 && var$9 == var$4.$characters.data.length ? var$4 : jl_String__init_1(var$4.$characters, var$11, var$9 - var$11 | 0);
        jl_StringBuffer_append(var$3, var$6, 0, var$6.$characters.data.length);
        jl_StringBuffer_append0(var$3, $regex.$processedRepl);
        $regex.$appendPos = jur_Matcher_end($regex);
    }
    $regex = new jl_IllegalStateException;
    jl_Exception__init_($regex);
    $rt_throw($regex);
}
function jl_String__clinit_() {
    var var$1, var$2;
    var$1 = $rt_createCharArray(0);
    jl_String_EMPTY_CHARS = var$1;
    var$2 = new jl_String;
    jl_String_$callClinit();
    var$2.$characters = var$1;
    jl_String_EMPTY = var$2;
    jl_String_CASE_INSENSITIVE_ORDER = new jl_String$_clinit_$lambda$_89_0;
}
function jl_Throwable() {
    var a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
function jl_Throwable__init_1() {
    var var_0 = new jl_Throwable();
    jl_Throwable__init_0(var_0);
    return var_0;
}
function jl_Throwable__init_2(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_3(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_4(var_0, var_1) {
    var var_2 = new jl_Throwable();
    jl_Throwable__init_(var_2, var_0, var_1);
    return var_2;
}
function jl_Throwable__init_0($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
}
function jl_Throwable__init_3($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
function jl_Throwable__init_($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $cause;
}
function jl_Throwable_fillInStackTrace($this) {
    return $this;
}
function jl_Throwable_getMessage($this) {
    return $this.$message;
}
function jl_Throwable_getLocalizedMessage($this) {
    return $this.$getMessage();
}
function jl_Throwable_getCause($this) {
    var var$1;
    var$1 = $this.$cause;
    if (var$1 === $this)
        var$1 = null;
    return var$1;
}
function jl_Throwable_printStackTrace($this) {
    var var$1, var$2;
    if (jl_System_errCache === null) {
        var$1 = new ji_PrintStream;
        var$1.$out = otcic_StderrOutputStream_INSTANCE;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$1.$sb = var$2;
        var$1.$buffer2 = $rt_createCharArray(32);
        var$1.$autoFlush = 0;
        jnci_UTF8Charset_$callClinit();
        var$1.$charset = jnci_UTF8Charset_INSTANCE;
        jl_System_errCache = var$1;
    }
    jl_Throwable_printStackTrace0($this, jl_System_errCache);
}
function jl_Throwable_printStackTrace0($this, $stream) {
    var var$2, $element, var$4, $message, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$2 = $this.constructor;
    if (var$2 === null)
        $element = null;
    else {
        $element = var$2.classObject;
        if ($element === null) {
            $element = new jl_Class;
            $element.$platformClass = var$2;
            var$4 = $element;
            var$2.classObject = var$4;
        }
    }
    if ($element.$name === null)
        $element.$name = $rt_str($element.$platformClass.$meta.name);
    var$4 = $element.$name;
    var$2 = $stream.$sb;
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, var$4);
    ji_PrintStream_printSB($stream);
    $message = $this.$getMessage();
    if ($message !== null) {
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(74));
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $message);
        var$4 = new jl_String;
        var$6 = var$2.$buffer;
        var$7 = var$2.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$9 = var$8.data;
        var$4.$characters = var$8;
        var$10 = 0;
        while (var$10 < var$7) {
            var$9[var$10] = var$6.data[var$10 + 0 | 0];
            var$10 = var$10 + 1 | 0;
        }
        var$2 = $stream.$sb;
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, var$4);
        ji_PrintStream_printSB($stream);
    }
    a: {
        var$6 = $stream.$buffer2;
        var$6.data[0] = 10;
        ji_PrintStream_print($stream, var$6, 0, 1);
        var$6 = $this.$stackTrace;
        if (var$6 !== null) {
            var$6 = var$6.data;
            var$11 = var$6.length;
            var$12 = 0;
            while (true) {
                if (var$12 >= var$11)
                    break a;
                $element = var$6[var$12];
                var$2 = $stream.$sb;
                jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(75));
                ji_PrintStream_printSB($stream);
                var$4 = $stream.$sb;
                jl_AbstractStringBuilder_insert(var$4, var$4.$length, $element === null ? $rt_s(1) : $element.$toString());
                var$7 = var$4.$length;
                jl_AbstractStringBuilder_insertSpace(var$4, var$7, var$7 + 1 | 0);
                var$4.$buffer.data[var$7] = 10;
                ji_PrintStream_printSB($stream);
                var$12 = var$12 + 1 | 0;
            }
        }
    }
    var$2 = $this.$cause;
    if (var$2 !== null && var$2 !== $this) {
        var$4 = $stream.$sb;
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(76));
        ji_PrintStream_printSB($stream);
        jl_Throwable_printStackTrace0($this.$cause, $stream);
    }
}
var jl_Error = $rt_classWithoutFields(jl_Throwable);
var jl_LinkageError = $rt_classWithoutFields(jl_Error);
var jl_NoClassDefFoundError = $rt_classWithoutFields(jl_LinkageError);
var jl_Number = $rt_classWithoutFields();
function jl_Integer() {
    jl_Number.call(this);
    this.$value5 = 0;
}
var jl_Integer_TYPE = null;
var jl_Integer_integerCache = null;
function jl_Integer__init_(var_0) {
    var var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
}
function jl_Integer__init_0($this, $value) {
    $this.$value5 = $value;
}
function jl_Integer_parseInt($s, $radix) {
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$characters.data.length, $radix);
    $s = new jl_NumberFormatException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $s.$message = $rt_s(77);
    $rt_throw($s);
}
function jl_Integer_parseIntImpl($s, $beginIndex, $endIndex, $radix) {
    var var$5, $negative, var$7, var$8, $value, var$10, $digit, var$12, var$13, var$14, var$15, var$16;
    var$5 = $rt_compare($beginIndex, $endIndex);
    if (!var$5) {
        $s = new jl_NumberFormatException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $s.$message = $rt_s(78);
        $rt_throw($s);
    }
    if ($radix >= 2 && $radix <= 36) {
        $negative = 0;
        if ($beginIndex >= 0) {
            var$7 = $s.$characters.data;
            if ($beginIndex < var$7.length) {
                a: {
                    switch (var$7[$beginIndex]) {
                        case 43:
                            var$8 = $beginIndex + 1 | 0;
                            break a;
                        case 45:
                            $negative = 1;
                            var$8 = $beginIndex + 1 | 0;
                            break a;
                        default:
                    }
                    var$8 = $beginIndex;
                }
                $value = 0;
                if (var$8 == $endIndex) {
                    $s = new jl_NumberFormatException;
                    $s.$suppressionEnabled = 1;
                    $s.$writableStackTrace = 1;
                    $rt_throw($s);
                }
                b: {
                    while (var$8 < $endIndex) {
                        var$10 = var$8 + 1 | 0;
                        if (var$8 < 0)
                            break b;
                        var$7 = $s.$characters.data;
                        if (var$8 >= var$7.length)
                            break b;
                        $digit = jl_Character_getNumericValue(var$7[var$8]);
                        if ($digit < 0) {
                            var$12 = new jl_NumberFormatException;
                            if (var$5 > 0) {
                                $s = new jl_IndexOutOfBoundsException;
                                $s.$suppressionEnabled = 1;
                                $s.$writableStackTrace = 1;
                                $rt_throw($s);
                            }
                            if (!var$5) {
                                jl_String_$callClinit();
                                $s = jl_String_EMPTY;
                            } else if (!(!$beginIndex && $endIndex == $s.$characters.data.length)) {
                                var$13 = new jl_String;
                                var$7 = $s.$characters;
                                $endIndex = $endIndex - $beginIndex | 0;
                                jl_String_$callClinit();
                                var$14 = $rt_createCharArray($endIndex);
                                var$15 = var$14.data;
                                var$13.$characters = var$14;
                                $radix = 0;
                                while ($radix < $endIndex) {
                                    var$15[$radix] = var$7.data[$radix + $beginIndex | 0];
                                    $radix = $radix + 1 | 0;
                                }
                                $s = var$13;
                            }
                            var$13 = new jl_StringBuilder;
                            var$13.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert(var$13, var$13.$length, $rt_s(79));
                            $beginIndex = var$13.$length;
                            if ($s === null)
                                $s = $rt_s(1);
                            jl_AbstractStringBuilder_insert(var$13, $beginIndex, $s);
                            $s = jl_StringBuilder_toString(var$13);
                            var$12.$suppressionEnabled = 1;
                            var$12.$writableStackTrace = 1;
                            var$12.$message = $s;
                            $rt_throw(var$12);
                        }
                        if ($digit >= $radix) {
                            var$12 = new jl_NumberFormatException;
                            var$16 = jl_String_substring($s, $beginIndex, $endIndex);
                            $s = new jl_StringBuilder;
                            $s.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_append0($s, $rt_s(80));
                            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0($s, $radix), $rt_s(74)), var$16);
                            jl_NumberFormatException__init_(var$12, jl_StringBuilder_toString($s));
                            $rt_throw(var$12);
                        }
                        $value = $rt_imul($radix, $value) + $digit | 0;
                        if ($value < 0) {
                            if (var$10 == $endIndex && $value == (-2147483648) && $negative)
                                return (-2147483648);
                            var$12 = new jl_NumberFormatException;
                            $s = jl_String_subSequence($s, $beginIndex, $endIndex);
                            var$13 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$13, $rt_s(81)), $s);
                            jl_NumberFormatException__init_(var$12, jl_StringBuilder_toString(var$13));
                            $rt_throw(var$12);
                        }
                        var$8 = var$10;
                    }
                    if ($negative)
                        $value =  -$value | 0;
                    return $value;
                }
                $s = new jl_StringIndexOutOfBoundsException;
                $s.$suppressionEnabled = 1;
                $s.$writableStackTrace = 1;
                $rt_throw($s);
            }
        }
        $s = new jl_StringIndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    $s = new jl_NumberFormatException;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$12, var$12.$length, $rt_s(82));
    jl_AbstractStringBuilder_insert0(var$12, var$12.$length, $radix, 10);
    var$13 = new jl_String;
    var$7 = var$12.$buffer;
    $endIndex = var$12.$length;
    jl_String_$callClinit();
    var$14 = $rt_createCharArray($endIndex);
    var$15 = var$14.data;
    var$13.$characters = var$14;
    $radix = 0;
    while ($radix < $endIndex) {
        var$15[$radix] = var$7.data[$radix + 0 | 0];
        $radix = $radix + 1 | 0;
    }
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $s.$message = var$13;
    $rt_throw($s);
}
function jl_Integer_parseInt0($s) {
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$characters.data.length, 10);
    $s = new jl_NumberFormatException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $s.$message = $rt_s(77);
    $rt_throw($s);
}
function jl_Integer_valueOf($i) {
    var var$2;
    if ($i >= (-128) && $i <= 127) {
        jl_Integer_ensureIntegerCache();
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    var$2 = new jl_Integer;
    var$2.$value5 = $i;
    return var$2;
}
function jl_Integer_ensureIntegerCache() {
    var var$1, var$2, $j, var$4, var$5;
    a: {
        if (jl_Integer_integerCache === null) {
            var$1 = $rt_createArray(jl_Integer, 256);
            var$2 = var$1.data;
            jl_Integer_integerCache = var$1;
            $j = 0;
            var$4 = var$2.length;
            while (true) {
                if ($j >= var$4)
                    break a;
                var$5 = new jl_Integer;
                var$5.$value5 = $j - 128 | 0;
                var$2[$j] = var$5;
                $j = $j + 1 | 0;
            }
        }
    }
}
function jl_Integer_intValue($this) {
    return $this.$value5;
}
function jl_Integer_longValue($this) {
    return Long_fromInt($this.$value5);
}
function jl_Integer_doubleValue($this) {
    return $this.$value5;
}
function jl_Integer_toString($this) {
    var var$1, var$2;
    var$1 = $this.$value5;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    return (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
}
function jl_Integer_hashCode($this) {
    var var$1;
    var$1 = $this.$value5;
    return (var$1 >>> 4 | 0) ^ var$1 << 28 ^ var$1 << 8 ^ (var$1 >>> 24 | 0);
}
function jl_Integer_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value5 == $this.$value5 ? 1 : 0;
}
function jl_Integer_numberOfLeadingZeros($i) {
    var $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16 | 0;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 >>> 8 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i >>> 4 | 0;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 >>> 2 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i >>> 1 | 0)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_numberOfTrailingZeros($i) {
    var $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 << 8;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i << 4;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 << 2;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer__clinit_() {
    jl_Integer_TYPE = $rt_cls($rt_intcls());
}
function jl_AbstractStringBuilder() {
    var a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length = 0;
}
function jl_AbstractStringBuilder__init_1() {
    var var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_0(var_0);
    return var_0;
}
function jl_AbstractStringBuilder__init_2(var_0) {
    var var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_(var_1, var_0);
    return var_1;
}
function jl_AbstractStringBuilder__init_0($this) {
    $this.$buffer = $rt_createCharArray(16);
}
function jl_AbstractStringBuilder__init_($this, $capacity) {
    $this.$buffer = $rt_createCharArray($capacity);
}
function jl_AbstractStringBuilder_append0($this, $obj) {
    jl_AbstractStringBuilder_insert($this, $this.$length, $obj === null ? $rt_s(1) : $obj.$toString());
    return $this;
}
function jl_AbstractStringBuilder_append1($this, $string) {
    return $this.$insert($this.$length, $string);
}
function jl_AbstractStringBuilder_insert($this, $index, $string) {
    var $i, $i_0, var$5, var$6, var$7, var$8;
    if ($index >= 0) {
        $i = $this.$length;
        if ($index <= $i) {
            if ($string === null)
                $string = $rt_s(1);
            else if ($string.$characters.data.length ? 0 : 1)
                return $this;
            $this.$ensureCapacity($i + $string.$characters.data.length | 0);
            $i = $this.$length;
            $i_0 = $i - 1 | 0;
            while ($i_0 >= $index) {
                var$5 = $this.$buffer.data;
                var$5[$i_0 + $string.$characters.data.length | 0] = var$5[$i_0];
                $i_0 = $i_0 + (-1) | 0;
            }
            var$5 = $string.$characters.data;
            var$6 = var$5.length;
            $this.$length = $i + var$6 | 0;
            $i = 0;
            a: {
                while (true) {
                    $i_0 = $rt_compare($i, var$6);
                    if ($i_0 >= 0)
                        break;
                    var$7 = $this.$buffer;
                    var$8 = $index + 1 | 0;
                    if ($i < 0)
                        break a;
                    if ($i_0 >= 0)
                        break a;
                    var$7.data[$index] = var$5[$i];
                    $i = $i + 1 | 0;
                    $index = var$8;
                }
                return $this;
            }
            $string = new jl_StringIndexOutOfBoundsException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
    }
    $string = new jl_StringIndexOutOfBoundsException;
    $string.$suppressionEnabled = 1;
    $string.$writableStackTrace = 1;
    $rt_throw($string);
}
function jl_AbstractStringBuilder_append($this, $value) {
    return jl_AbstractStringBuilder_insert0($this, $this.$length, $value, 10);
}
function jl_AbstractStringBuilder_insert0($this, $target, $value, $radix) {
    var $positive, var$5, var$6, $pos, $sz, $posLimit, var$10;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($rt_ucmp($value, $radix) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = $rt_udiv((-1), $radix);
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if ($rt_ucmp(var$10, $value) > 0) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if ($rt_ucmp(var$10, $posLimit) > 0)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $positive = $target;
            else {
                var$5 = $this.$buffer.data;
                $positive = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (!var$10)
                    break a;
                var$5 = $this.$buffer.data;
                $target = $positive + 1 | 0;
                var$5[$positive] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                $value = $rt_umod($value, var$10);
                var$10 = $rt_udiv(var$10, $radix);
                $positive = $target;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_insert2($this, $target, $value, $radix) {
    var $positive, var$5, var$6, var$7, $sz, $pos, $posLimit, var$11;
    $positive = 1;
    if (Long_lt($value, Long_ZERO)) {
        $positive = 0;
        $value = Long_neg($value);
    }
    a: {
        var$5 = Long_fromInt($radix);
        if (jl_Long_compareUnsigned($value, var$5) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$6 = $this.$buffer.data;
                var$7 = $target + 1 | 0;
                var$6[$target] = 45;
                $target = var$7;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit(Long_lo($value), $radix);
        } else {
            $sz = 1;
            $pos = Long_fromInt(1);
            $posLimit = jl_Long_divideUnsigned(Long_fromInt(-1), var$5);
            b: {
                while (true) {
                    var$11 = Long_mul($pos, var$5);
                    if (jl_Long_compareUnsigned(var$11, $value) > 0) {
                        var$11 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (jl_Long_compareUnsigned(var$11, $posLimit) > 0)
                        break;
                    $pos = var$11;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $positive = $target;
            else {
                var$6 = $this.$buffer.data;
                $positive = $target + 1 | 0;
                var$6[$target] = 45;
            }
            while (true) {
                if (Long_eq(var$11, Long_ZERO))
                    break a;
                var$6 = $this.$buffer.data;
                $target = $positive + 1 | 0;
                var$6[$positive] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned($value, var$11))), $radix);
                $value = jl_Long_remainderUnsigned($value, var$11);
                var$11 = jl_Long_divideUnsigned(var$11, var$5);
                $positive = $target;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_insert1($this, $target, $value) {
    var $mantissa, var$4, $number, $exp, $negative, $intPart, $sz, $digits, $zeros, $pos, $i, $intDigit;
    $mantissa = $rt_compare($value, 0.0);
    if (!$mantissa) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 48;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 46;
        var$4[$target] = 48;
        return $this;
    }
    if (!$mantissa) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 45;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 48;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 46;
        var$4[$mantissa] = 48;
        return $this;
    }
    if ($rt_globals.isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 78;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 97;
        var$4[$target] = 78;
        return $this;
    }
    if (!$rt_globals.isFinite($value) ? 1 : 0) {
        if ($mantissa > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            $mantissa = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 73;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 110;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 102;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 110;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 116;
        var$4[$target] = 121;
        return $this;
    }
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp >= 7)
        $zeros = $digits;
    else if ($exp < (-3))
        $zeros = $digits;
    else if ($exp < 0) {
        $mantissa = $mantissa / jl_AbstractStringBuilder$Constants_intPowersOfTen.data[ -$exp | 0] | 0;
        $zeros = $digits - $exp | 0;
        $exp = 0;
    } else {
        $intPart = $exp + 1 | 0;
        $zeros = $intPart + 1 | 0;
        if ($digits > $zeros)
            $zeros = $digits;
        $exp = 0;
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $zeros == $intPart)
        $zeros = $zeros + 1 | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + $zeros | 0) | 0);
    if (!$negative)
        $sz = $target;
    else {
        var$4 = $this.$buffer.data;
        $sz = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    $i = 0;
    while ($i < $zeros) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        $target = $sz + 1 | 0;
        var$4[$sz] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            $sz = $target;
        else {
            $sz = $target + 1 | 0;
            var$4[$target] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        $intDigit = $sz + 1 | 0;
        var$4[$sz] = 69;
        if ($exp >= 0)
            $target = $intDigit;
        else {
            $exp =  -$exp | 0;
            $target = $intDigit + 1 | 0;
            var$4[$intDigit] = 45;
        }
        if ($exp < 10)
            $mantissa = $target;
        else {
            $mantissa = $target + 1 | 0;
            var$4[$target] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        var$4[$mantissa] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_insert3($this, $target, $value) {
    var $intDigit, var$4, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $pos, $i;
    $intDigit = $rt_compare($value, 0.0);
    if (!$intDigit) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $intDigit = $target + 1 | 0;
        var$4[$target] = 48;
        $target = $intDigit + 1 | 0;
        var$4[$intDigit] = 46;
        var$4[$target] = 48;
        return $this;
    }
    if (!$intDigit) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        $intDigit = $target + 1 | 0;
        var$4[$target] = 45;
        $target = $intDigit + 1 | 0;
        var$4[$intDigit] = 48;
        $intDigit = $target + 1 | 0;
        var$4[$target] = 46;
        var$4[$intDigit] = 48;
        return $this;
    }
    if ($rt_globals.isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $intDigit = $target + 1 | 0;
        var$4[$target] = 78;
        $target = $intDigit + 1 | 0;
        var$4[$intDigit] = 97;
        var$4[$target] = 78;
        return $this;
    }
    if (!$rt_globals.isFinite($value) ? 1 : 0) {
        if ($intDigit > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            $intDigit = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            $intDigit = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        $target = $intDigit + 1 | 0;
        var$4[$intDigit] = 73;
        $intDigit = $target + 1 | 0;
        var$4[$target] = 110;
        $target = $intDigit + 1 | 0;
        var$4[$intDigit] = 102;
        $intDigit = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $intDigit + 1 | 0;
        var$4[$intDigit] = 110;
        $intDigit = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $intDigit + 1 | 0;
        var$4[$intDigit] = 116;
        var$4[$target] = 121;
        return $this;
    }
    $number = jl_AbstractStringBuilder$Constants_doubleAnalysisResult;
    otcit_DoubleAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa0;
    $exp = $number.$exponent0;
    $negative = $number.$sign0;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 18;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros0($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $mantissa = Long_div($mantissa, jl_AbstractStringBuilder$Constants_longPowersOfTen.data[ -$exp | 0]);
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if (!($exp > (-100) && $exp < 100))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + $digits | 0) | 0);
    if (!$negative)
        $sz = $target;
    else {
        var$4 = $this.$buffer.data;
        $sz = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = Long_create(1569325056, 23283064);
    $i = 0;
    while ($i < $digits) {
        if (Long_le($pos, Long_ZERO))
            $intDigit = 0;
        else {
            $intDigit = Long_lo(Long_div($mantissa, $pos));
            $mantissa = Long_rem($mantissa, $pos);
        }
        var$4 = $this.$buffer.data;
        $target = $sz + 1 | 0;
        var$4[$sz] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            $sz = $target;
        else {
            $sz = $target + 1 | 0;
            var$4[$target] = 46;
        }
        $pos = Long_div($pos, Long_fromInt(10));
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        $intDigit = $sz + 1 | 0;
        var$4[$sz] = 69;
        if ($exp >= 0)
            $intPart = $intDigit;
        else {
            $exp =  -$exp | 0;
            $intPart = $intDigit + 1 | 0;
            var$4[$intDigit] = 45;
        }
        if ($exp >= 100) {
            $target = $intPart + 1 | 0;
            var$4[$intPart] = (48 + ($exp / 100 | 0) | 0) & 65535;
            $exp = $exp % 100 | 0;
            $digits = $target + 1 | 0;
            var$4[$target] = (48 + ($exp / 10 | 0) | 0) & 65535;
        } else if ($exp < 10)
            $digits = $intPart;
        else {
            $digits = $intPart + 1 | 0;
            var$4[$intPart] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        var$4[$digits] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_trailingDecimalZeros($n) {
    var $result, $zeros, var$4;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    $zeros = var$4 * 100 | 0;
    if ($n % $zeros | 0)
        $zeros = var$4;
    else
        $result = $result | 2;
    if (!($n % ($zeros * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
}
function jl_AbstractStringBuilder_trailingDecimalZeros0($n) {
    var $zeros, $result, $bit, var$5, $i;
    $zeros = Long_fromInt(1);
    $result = 0;
    $bit = 16;
    var$5 = jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data;
    $i = var$5.length - 1 | 0;
    while ($i >= 0) {
        if (Long_eq(Long_rem($n, Long_mul($zeros, var$5[$i])), Long_ZERO)) {
            $result = $result | $bit;
            $zeros = Long_mul($zeros, var$5[$i]);
        }
        $bit = $bit >>> 1 | 0;
        $i = $i + (-1) | 0;
    }
    return $result;
}
function jl_AbstractStringBuilder_append2($this, $c) {
    return $this.$insert3($this.$length, $c);
}
function jl_AbstractStringBuilder_insert4($this, $index, $c) {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
}
function jl_AbstractStringBuilder_insert5($this, $index, $obj) {
    jl_AbstractStringBuilder_insert($this, $index, $obj === null ? $rt_s(1) : $obj.$toString());
    return $this;
}
function jl_AbstractStringBuilder_ensureCapacity($this, $capacity) {
    var var$2, var$3, $newLength, var$5, var$6, var$7;
    var$2 = $this.$buffer.data;
    var$3 = var$2.length;
    if (var$3 >= $capacity)
        return;
    if (var$3 >= 1073741823)
        $newLength = 2147483647;
    else {
        var$5 = var$3 * 2 | 0;
        $newLength = 5;
        if (var$5 > $newLength)
            $newLength = var$5;
        if ($capacity > $newLength)
            $newLength = $capacity;
    }
    var$6 = $rt_createCharArray($newLength);
    if ($newLength < var$3)
        var$3 = $newLength;
    var$7 = var$6.data;
    $capacity = 0;
    while ($capacity < var$3) {
        var$7[$capacity] = var$2[$capacity];
        $capacity = $capacity + 1 | 0;
    }
    $this.$buffer = var$6;
}
function jl_AbstractStringBuilder_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = new jl_String;
    var$2 = $this.$buffer;
    var$3 = $this.$length;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray(var$3);
    var$5 = var$4.data;
    var$1.$characters = var$4;
    var$6 = 0;
    while (var$6 < var$3) {
        var$5[var$6] = var$2.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    return var$1;
}
function jl_AbstractStringBuilder_insert6($this, $index, $s, $i, $end) {
    var var$5, var$6, var$7;
    if ($i <= $end && $end <= $s.$characters.data.length && $i >= 0) {
        jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
        a: {
            while ($i < $end) {
                var$5 = $this.$buffer;
                var$6 = $index + 1 | 0;
                if ($i < 0)
                    break a;
                var$7 = $s.$characters.data;
                if ($i >= var$7.length)
                    break a;
                var$5.data[$index] = var$7[$i];
                $i = $i + 1 | 0;
                $index = var$6;
            }
            return $this;
        }
        $s = new jl_StringIndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    $s = new jl_IndexOutOfBoundsException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $rt_throw($s);
}
function jl_AbstractStringBuilder_insert7($this, $index, $chars, $offset, $len) {
    var var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        $len = $index + 1 | 0;
        var$8 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = $len;
        $offset = var$8;
    }
    return $this;
}
function jl_AbstractStringBuilder_deleteCharAt($this, $i) {
    var var$2, var$3, $i_0, var$5;
    if ($i >= 0) {
        var$2 = $this.$length;
        if ($i < var$2) {
            var$2 = var$2 - 1 | 0;
            $this.$length = var$2;
            while ($i < var$2) {
                var$3 = $this.$buffer.data;
                $i_0 = $i + 1 | 0;
                var$3[$i] = var$3[$i_0];
                $i = $i_0;
            }
            return $this;
        }
    }
    var$5 = new jl_StringIndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    $rt_throw(var$5);
}
function jl_AbstractStringBuilder_delete($this, $start, $end) {
    var $sz, var$4, $i, var$6, var$7, var$8;
    $sz = $rt_compare($start, $end);
    if ($sz <= 0) {
        var$4 = $this.$length;
        if ($start <= var$4) {
            if (!$sz)
                return $this;
            $sz = var$4 - $end | 0;
            $this.$length = var$4 - ($end - $start | 0) | 0;
            $i = 0;
            while ($i < $sz) {
                var$6 = $this.$buffer.data;
                var$7 = $start + 1 | 0;
                var$4 = $end + 1 | 0;
                var$6[$start] = var$6[$end];
                $i = $i + 1 | 0;
                $start = var$7;
                $end = var$4;
            }
            return $this;
        }
    }
    var$8 = new jl_StringIndexOutOfBoundsException;
    var$8.$suppressionEnabled = 1;
    var$8.$writableStackTrace = 1;
    $rt_throw(var$8);
}
function jl_AbstractStringBuilder_insertSpace($this, $start, $end) {
    var var$3, $sz, $i, var$6;
    var$3 = $this.$length;
    $sz = var$3 - $start | 0;
    $this.$ensureCapacity((var$3 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        var$6 = $this.$buffer.data;
        var$6[$end + $i | 0] = var$6[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length = $this.$length + ($end - $start | 0) | 0;
}
var jl_Appendable = $rt_classWithoutFields(0);
var jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder);
function jl_StringBuilder__init_() {
    var var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_0(var_0);
    return var_0;
}
function jl_StringBuilder__init_0($this) {
    $this.$buffer = $rt_createCharArray(16);
}
function jl_StringBuilder_append($this, $obj) {
    jl_AbstractStringBuilder_insert($this, $this.$length, $obj === null ? $rt_s(1) : $obj.$toString());
    return $this;
}
function jl_StringBuilder_append1($this, $string) {
    jl_AbstractStringBuilder_insert($this, $this.$length, $string);
    return $this;
}
function jl_StringBuilder_append0($this, $value) {
    jl_AbstractStringBuilder_insert0($this, $this.$length, $value, 10);
    return $this;
}
function jl_StringBuilder_append2($this, $value) {
    jl_AbstractStringBuilder_insert2($this, $this.$length, $value, 10);
    return $this;
}
function jl_StringBuilder_append3($this, $c) {
    var var$2;
    var$2 = $this.$length;
    jl_AbstractStringBuilder_insertSpace($this, var$2, var$2 + 1 | 0);
    $this.$buffer.data[var$2] = $c;
    return $this;
}
function jl_StringBuilder_insert0($this, $index, $obj) {
    jl_AbstractStringBuilder_insert($this, $index, $obj === null ? $rt_s(1) : $obj.$toString());
    return $this;
}
function jl_StringBuilder_insert1($this, $index, $c) {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
}
function jl_StringBuilder_delete($this, $start, $end) {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
}
function jl_StringBuilder_insert2($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuilder_setLength($this, var$1) {
    $this.$length = var$1;
}
function jl_StringBuilder_subSequence($this, var$1, var$2) {
    var var$3, var$4, var$5, var$6, var$7;
    if (var$1 <= var$2 && var$1 >= 0 && var$2 <= $this.$length) {
        var$3 = new jl_String;
        var$4 = $this.$buffer;
        var$2 = var$2 - var$1 | 0;
        jl_String_$callClinit();
        var$5 = $rt_createCharArray(var$2);
        var$6 = var$5.data;
        var$3.$characters = var$5;
        var$7 = 0;
        while (var$7 < var$2) {
            var$6[var$7] = var$4.data[var$7 + var$1 | 0];
            var$7 = var$7 + 1 | 0;
        }
        return var$3;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    $rt_throw(var$3);
}
function jl_StringBuilder_insert3($this, var$1, var$2, var$3, var$4) {
    var var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + var$4 | 0);
    var$5 = var$4 + var$3 | 0;
    while (var$3 < var$5) {
        var$6 = var$2.data;
        var$7 = $this.$buffer.data;
        var$4 = var$1 + 1 | 0;
        var$8 = var$3 + 1 | 0;
        var$7[var$1] = var$6[var$3];
        var$1 = var$4;
        var$3 = var$8;
    }
    return $this;
}
function jl_StringBuilder_append4($this, var$1, var$2, var$3) {
    var var$4, var$5, var$6, var$7, var$8;
    var$4 = $this.$length;
    jl_AbstractStringBuilder_insertSpace($this, var$4, var$4 + var$3 | 0);
    var$5 = var$3 + var$2 | 0;
    while (var$2 < var$5) {
        var$6 = var$1.data;
        var$7 = $this.$buffer.data;
        var$3 = var$4 + 1 | 0;
        var$8 = var$2 + 1 | 0;
        var$7[var$4] = var$6[var$2];
        var$4 = var$3;
        var$2 = var$8;
    }
    return $this;
}
function jl_StringBuilder_length($this) {
    return $this.$length;
}
function jl_StringBuilder_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = new jl_String;
    var$2 = $this.$buffer;
    var$3 = $this.$length;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray(var$3);
    var$5 = var$4.data;
    var$1.$characters = var$4;
    var$6 = 0;
    while (var$6 < var$3) {
        var$5[var$6] = var$2.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    return var$1;
}
function jl_StringBuilder_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuilder_insert4($this, var$1, var$2) {
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + 1 | 0);
    $this.$buffer.data[var$1] = var$2;
    return $this;
}
function jl_StringBuilder_insert($this, var$1, var$2) {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
}
var jl_IncompatibleClassChangeError = $rt_classWithoutFields(jl_LinkageError);
var jl_NoSuchFieldError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
function jl_NoSuchFieldError__init_(var_0) {
    var var_1 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchFieldError__init_0($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
var jl_NoSuchMethodError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
function jl_NoSuchMethodError__init_(var_0) {
    var var_1 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchMethodError__init_0($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
var jl_Exception = $rt_classWithoutFields(jl_Throwable);
function jl_Exception__init_0() {
    var var_0 = new jl_Exception();
    jl_Exception__init_(var_0);
    return var_0;
}
function jl_Exception__init_1(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_2(var_1, var_0);
    return var_1;
}
function jl_Exception__init_($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
}
function jl_Exception__init_2($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
var jl_RuntimeException = $rt_classWithoutFields(jl_Exception);
function jl_RuntimeException__init_(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_0(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_0($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
function cgxgbt_TeaApplicationConfiguration() {
    var a = this; jl_Object.call(a);
    a.$useNativePixmap = 0;
    a.$windowListener = null;
    a.$preloadAssets = 0;
    a.$storagePrefix = null;
    a.$showDownloadLogs = 0;
    a.$canvasID = null;
    a.$width = 0;
    a.$height = 0;
    a.$padHorizontal = 0;
    a.$padVertical = 0;
    a.$stencil = 0;
    a.$antialiasing = 0;
    a.$alpha = 0;
    a.$premultipliedAlpha = 0;
    a.$preserveDrawingBuffer = 0;
    a.$useDebugGL = 0;
    a.$usePhysicalPixels = 0;
}
function cgxgbt_TeaApplicationConfiguration__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplicationConfiguration();
    cgxgbt_TeaApplicationConfiguration__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication($this) {
    return !$this.$width && !$this.$height ? 1 : 0;
}
function cgxgbt_TeaApplicationConfiguration__init_0($this, $canvasID) {
    $this.$useNativePixmap = 0;
    $this.$preloadAssets = 1;
    $this.$storagePrefix = $rt_s(42);
    $this.$showDownloadLogs = 0;
    $this.$width = (-1);
    $this.$height = (-1);
    $this.$padHorizontal = 0;
    $this.$padVertical = 0;
    $this.$stencil = 0;
    $this.$antialiasing = 0;
    $this.$alpha = 0;
    $this.$premultipliedAlpha = 0;
    $this.$preserveDrawingBuffer = 0;
    $this.$useDebugGL = 0;
    $this.$canvasID = $canvasID;
    cgxgbtdt_TypedArrays_instance = new cgxgbtd_TeaTypedArrays;
}
var cbg_Application = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication() {
    var a = this; jl_Object.call(a);
    a.$graphics = null;
    a.$input = null;
    a.$files = null;
    a.$net = null;
    a.$audio = null;
    a.$config = null;
    a.$queueAppListener = null;
    a.$appListener = null;
    a.$lifecycleListeners = null;
    a.$window = null;
    a.$initState = null;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$logger = null;
    a.$logLevel = 0;
    a.$preloader0 = null;
    a.$prefs = null;
    a.$clipboard = null;
    a.$runnables = null;
    a.$runnablesHelper = null;
    a.$hostPageBaseURL = null;
}
var cgxgbt_TeaApplication_agentInfo = null;
function cgxgbt_TeaApplication__init_0(var_0, var_1) {
    var var_2 = new cgxgbt_TeaApplication();
    cgxgbt_TeaApplication__init_(var_2, var_0, var_1);
    return var_2;
}
function cgxgbt_TeaApplication__init_($this, $appListener, $config) {
    var var$3;
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 4);
    $this.$lifecycleListeners = var$3;
    cgxgbt_TeaApplication$AppState_$callClinit();
    $this.$initState = cgxgbt_TeaApplication$AppState_LOAD_ASSETS;
    $this.$lastWidth = (-1);
    $this.$lastHeight = 1;
    $this.$logLevel = 1;
    $this.$prefs = cbgu_ObjectMap__init_(51, 0.800000011920929);
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 16);
    $this.$runnables = var$3;
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 16);
    $this.$runnablesHelper = var$3;
    cgxgbtdi_TeaWindow_$callClinit();
    $this.$window = cgxgbtdi_TeaWindow_TEA_WINDOW;
    $this.$config = $config;
    $this.$queueAppListener = $appListener;
    cgxgbt_TeaApplication_init($this);
}
function cgxgbt_TeaApplication_init($this) {
    var var$1, var$2, var$3, $indexQM, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    cgxgbt_TeaApplication_agentInfo = cgxgbta_TeaWebAgent_createAgent$js_body$_1();
    jl_System_initPropertiesIfNeeded();
    ju_Hashtable_put(jl_System_properties, $rt_s(83), $rt_s(42));
    var$1 = $rt_str(cgxgbt_TeaApplication_agentInfo.userAgent);
    jl_System_initPropertiesIfNeeded();
    ju_Hashtable_put(jl_System_properties, $rt_s(84), var$1);
    if (cgxgbt_TeaApplication_agentInfo.windows ? 1 : 0) {
        jl_System_initPropertiesIfNeeded();
        ju_Hashtable_put(jl_System_properties, $rt_s(85), $rt_s(86));
    } else if (cgxgbt_TeaApplication_agentInfo.macOS ? 1 : 0)
        jl_System_setProperty($rt_s(85), $rt_s(87));
    else if (!(cgxgbt_TeaApplication_agentInfo.linux ? 1 : 0))
        jl_System_setProperty($rt_s(85), $rt_s(88));
    else
        jl_System_setProperty($rt_s(85), $rt_s(6));
    var$2 = new cgxgbtp_AssetDownloadImpl;
    var$3 = $this.$config.$showDownloadLogs;
    var$2.$useBrowserCache = 0;
    var$2.$useInlineBase64 = 0;
    var$2.$showLogs = 1;
    var$2.$showLogs = var$3;
    cgxgbtp_AssetDownloader_instance = var$2;
    cgxgbtdi_TeaWindow_$callClinit();
    var$1 = $rt_str(cgxgbtdi_TeaWindow_TEA_WINDOW.$window0.location.href);
    $this.$hostPageBaseURL = var$1;
    if (jl_String_contains(var$1, $rt_s(89))) {
        var$2 = jl_String_replace($this.$hostPageBaseURL, $rt_s(90), $rt_s(42));
        $this.$hostPageBaseURL = var$2;
        $this.$hostPageBaseURL = jl_String_replace(var$2, $rt_s(91), $rt_s(42));
    }
    $indexQM = jl_String_indexOf($this.$hostPageBaseURL, 63, 0);
    if ($indexQM >= 0)
        $this.$hostPageBaseURL = jl_String_substring($this.$hostPageBaseURL, 0, $indexQM);
    var$2 = cgxgbt_TeaGraphics__init_($this.$config);
    $this.$graphics = var$2;
    var$1 = cgxgbtp_Preloader__init_($this.$hostPageBaseURL, var$2.$canvas0, $this);
    $this.$preloader0 = var$1;
    var$3 = $this.$config.$preloadAssets;
    var$5 = cgxgbtp_AssetDownloader_instance;
    var$6 = var$1.$baseUrl;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$8 = var$7.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$7, var$8, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(92));
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$7.$length;
    var$12 = $rt_createCharArray(var$11);
    var$13 = var$12.data;
    var$9.$characters = var$12;
    var$14 = 0;
    while (var$14 < var$11) {
        var$13[var$14] = var$10.data[var$14 + 0 | 0];
        var$14 = var$14 + 1 | 0;
    }
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$9);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(93));
    var$7 = jl_StringBuilder_toString(var$6);
    var$6 = new cgxgbtp_Preloader$4;
    var$6.$this$0 = var$1;
    var$6.$val$assetFileUrl = $rt_s(93);
    var$6.$val$loadAssets = var$3;
    cgxgbtp_AssetDownloadImpl_loadText(var$5, 1, var$7, var$6);
    $this.$input = cgxgbt_TeaInput__init_($this.$graphics.$canvas0);
    var$2 = new cgxgbt_TeaFiles;
    var$2.$preloader = $this.$preloader0;
    $this.$files = var$2;
    $this.$net = cgxgbt_TeaNet__init_();
    $this.$logger = new cgxgbt_TeaApplicationLogger;
    $this.$clipboard = cgxgbt_TeaClipboard__init_();
    if ($this.$config.$useNativePixmap)
        cgxgbt_TeaApplication_initGdx($this);
    cgxgbt_TeaApplication_initSound($this);
    cgxgbt_TeaApplication_initBulletPhysics($this, $this);
    cgxgbt_TeaApplication_initBox2dPhysics($this, $this);
    cgxgbt_TeaApplication_initImGui($this, $this);
    cbg_Gdx_app = $this;
    var$2 = $this.$graphics;
    cbg_Gdx_graphics = var$2;
    cbg_Gdx_gl = cgxgbt_TeaGraphics_getGL20(var$2);
    cbg_Gdx_gl20 = cgxgbt_TeaGraphics_getGL20($this.$graphics);
    cbg_Gdx_input = $this.$input;
    cbg_Gdx_files = $this.$files;
    cbg_Gdx_net = $this.$net;
    var$2 = cgxgbtdi_TeaWindow_getDocument($this.$window);
    var$6 = cgxgbt_TeaApplication$1__init_($this);
    var$2.addEventListener("visibilitychange", otji_JS_function(var$6, "handleEvent"));
    cgxgbtdi_TeaWindow_requestAnimationFrame($this.$window, $this);
    if (cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication($this.$config))
        cgxgbtdi_TeaWindow_addEventListener($this.$window, $rt_s(94), cgxgbt_TeaApplication$2__init_($this));
}
function cgxgbt_TeaApplication_run($this) {
    var $state, $queue, $element, $total, $percentage, $progressBar, $t, $$je;
    $state = $this.$initState;
    a: {
        try {
            b: {
                cgxgbt_TeaApplication$8_$callClinit();
                switch (cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal($state)]) {
                    case 1:
                        $queue = cgxgbtp_AssetDownloadImpl_getQueue(cgxgbtp_AssetDownloader_getInstance());
                        if (!$queue) {
                            cgxgbt_TeaApplication$AppState_$callClinit();
                            $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
                            $element = $rt_globals.window.document.getElementById("progress");
                            if ($element !== null)
                                $element.style.setProperty("display", "none");
                            break b;
                        }
                        $total = $this.$preloader0.$assetTotal;
                        if ($total > 0) {
                            $percentage = 25 + ((75 * ($total - $queue | 0) | 0) / $total | 0) | 0;
                            $progressBar = $rt_globals.window.document.getElementById("progress-bar");
                            if ($progressBar !== null) {
                                $element = $progressBar.style;
                                $progressBar = jl_StringBuilder__init_();
                                jl_StringBuilder_append3(jl_StringBuilder_append0($progressBar, $percentage), 37);
                                $t = jl_StringBuilder_toString($progressBar);
                                $element.setProperty("width", $rt_ustr($t));
                            }
                        }
                        break b;
                    case 2:
                        break;
                    default:
                        break b;
                }
                if ($this.$queueAppListener !== null) {
                    $state = $this.$appListener;
                    if ($state !== null) {
                        cbg_Game_pause($state);
                        cbg_Game_dispose($this.$appListener);
                    }
                    cgxgbt_TeaInput_setInputProcessor($this.$input, null);
                    cgxgbt_TeaInput_reset($this.$input);
                    cbgu_Array_clear($this.$runnables);
                    $this.$appListener = $this.$queueAppListener;
                    $this.$queueAppListener = null;
                    cgxgbt_TeaApplication$AppState_$callClinit();
                    $this.$initState = cgxgbt_TeaApplication$AppState_APP_CREATE;
                    $this.$graphics.$frameId = Long_ZERO;
                }
                cgxgbt_TeaApplication_step($this, $this.$appListener);
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $t = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        $state = $this.$window;
        $state.$runnable = $this;
        $rt_globals.requestAnimationFrame(otji_JS_function($state, "onAnimationFrame"));
        return;
    }
    if (jl_System_errCache === null) {
        $element = new ji_PrintStream;
        $element.$out = otcic_StderrOutputStream_INSTANCE;
        $state = new jl_StringBuilder;
        $state.$buffer = $rt_createCharArray(16);
        $element.$sb = $state;
        $element.$buffer2 = $rt_createCharArray(32);
        $element.$autoFlush = 0;
        jnci_UTF8Charset_$callClinit();
        $element.$charset = jnci_UTF8Charset_INSTANCE;
        jl_System_errCache = $element;
    }
    jl_Throwable_printStackTrace0($t, jl_System_errCache);
    $rt_throw($t);
}
function cgxgbt_TeaApplication_step($this, $appListener) {
    var var$2, var$3, $resizeBypass, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $i, var$16;
    cgxgbt_TeaGraphics_update($this.$graphics);
    var$2 = cbg_Gdx_graphics.$canvas0.width;
    var$3 = cbg_Gdx_graphics.$canvas0.height;
    $resizeBypass = 0;
    var$5 = $this.$initState;
    cgxgbt_TeaApplication$AppState_$callClinit();
    if (var$5 === cgxgbt_TeaApplication$AppState_APP_CREATE) {
        $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
        cgt_SpeedDemo_create($appListener);
        $resizeBypass = 1;
    }
    if (!(var$2 == $this.$lastWidth && var$3 == $this.$lastHeight && !$resizeBypass)) {
        $this.$lastWidth = var$2;
        $this.$lastHeight = var$3;
        cbg_Gdx_gl.$glViewport(0, 0, var$2, var$3);
        var$6 = $appListener.$screen;
        if (var$6 !== null)
            var$6.$resize0(var$2, var$3);
    }
    var$6 = $this.$runnablesHelper;
    var$5 = $this.$runnables;
    var$7 = var$5.$items;
    var$3 = var$5.$size;
    var$8 = var$6.$items;
    var$9 = var$8.data;
    var$10 = var$6.$size;
    var$2 = var$10 + var$3 | 0;
    if (var$2 <= var$9.length)
        var$11 = var$8;
    else {
        var$12 = 8;
        if (var$12 <= var$2)
            var$12 = var$2;
        var$10 = var$10 * 1.75 | 0;
        if (var$12 > var$10)
            var$10 = var$12;
        var$11 = var$8.constructor;
        if (var$11 === null)
            var$5 = null;
        else {
            var$5 = var$11.classObject;
            if (var$5 === null) {
                var$5 = new jl_Class;
                var$5.$platformClass = var$11;
                var$13 = var$5;
                var$11.classObject = var$13;
            }
        }
        var$11 = var$5.$platformClass.$meta.item;
        if (var$11 === null)
            var$13 = null;
        else {
            var$13 = var$11.classObject;
            if (var$13 === null) {
                var$13 = new jl_Class;
                var$13.$platformClass = var$11;
                var$14 = var$13;
                var$11.classObject = var$14;
            }
        }
        if (var$13 === null) {
            $appListener = new jl_NullPointerException;
            jl_Throwable__init_0($appListener);
            $rt_throw($appListener);
        }
        if (var$13 === $rt_cls($rt_voidcls())) {
            $appListener = new jl_IllegalArgumentException;
            jl_Throwable__init_0($appListener);
            $rt_throw($appListener);
        }
        if (var$10 < 0) {
            $appListener = new jl_NegativeArraySizeException;
            jl_Throwable__init_0($appListener);
            $rt_throw($appListener);
        }
        var$11 = jlr_Array_newInstanceImpl(var$13.$platformClass, var$10);
        var$5 = var$11.data;
        $resizeBypass = var$6.$size;
        var$10 = var$5.length;
        if ($resizeBypass < var$10)
            var$10 = $resizeBypass;
        jl_System_arraycopy(var$8, 0, var$11, 0, var$10);
        var$6.$items = var$11;
    }
    jl_System_arraycopy(var$7, 0, var$11, var$6.$size, var$3);
    var$6.$size = var$2;
    var$6 = $this.$runnables;
    var$7 = var$6.$items;
    $resizeBypass = 0;
    $i = var$6.$size;
    var$5 = null;
    if ($resizeBypass > $i) {
        $appListener = new jl_IllegalArgumentException;
        $appListener.$suppressionEnabled = 1;
        $appListener.$writableStackTrace = 1;
        $rt_throw($appListener);
    }
    while ($resizeBypass < $i) {
        var$8 = var$7.data;
        var$3 = $resizeBypass + 1 | 0;
        var$8[$resizeBypass] = var$5;
        $resizeBypass = var$3;
    }
    var$6.$size = 0;
    $i = 0;
    while (true) {
        var$6 = $this.$runnablesHelper;
        $resizeBypass = var$6.$size;
        var$3 = $rt_compare($i, $resizeBypass);
        if (var$3 >= 0) {
            var$7 = var$6.$items;
            $i = 0;
            var$5 = null;
            if ($i > $resizeBypass) {
                $appListener = new jl_IllegalArgumentException;
                $appListener.$suppressionEnabled = 1;
                $appListener.$writableStackTrace = 1;
                $rt_throw($appListener);
            }
            while ($i < $resizeBypass) {
                var$8 = var$7.data;
                var$3 = $i + 1 | 0;
                var$8[$i] = var$5;
                $i = var$3;
            }
            var$6.$size = 0;
            var$6 = $this.$graphics;
            var$16 = Long_add(var$6.$frameId, Long_fromInt(1));
            var$6.$frameId = var$16;
            if (Long_gt(var$16, Long_fromInt(60)))
                cbg_Game_render($appListener);
            cgxgbt_TeaInput_reset($this.$input);
            return;
        }
        if (var$3 >= 0)
            break;
        var$6.$items.data[$i].$run();
        $i = $i + 1 | 0;
    }
    var$5 = new jl_IndexOutOfBoundsException;
    $appListener = new jl_StringBuilder;
    $appListener.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($appListener, $appListener.$length, $rt_s(36));
    jl_AbstractStringBuilder_insert0($appListener, $appListener.$length, $i, 10);
    jl_AbstractStringBuilder_insert($appListener, $appListener.$length, $rt_s(37));
    jl_AbstractStringBuilder_append($appListener, var$6.$size);
    jl_IndexOutOfBoundsException__init_(var$5, jl_AbstractStringBuilder_toString($appListener));
    $rt_throw(var$5);
}
function cgxgbt_TeaApplication_initGdx($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$preloader0;
    var$2 = new cgxgbt_TeaApplication$3;
    var$2.$this$00 = $this;
    var$3 = cgxgbtp_AssetDownloader_instance;
    var$1 = var$1.$baseUrl;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, var$1);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(95));
    var$6 = new jl_String;
    var$7 = var$4.$buffer;
    var$8 = var$4.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    cgxgbtp_AssetDownloadImpl_loadScript(var$3, 1, var$6, var$2);
}
function cgxgbt_TeaApplication_initSound($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$preloader0;
    var$2 = new cgxgbt_TeaApplication$4;
    var$2.$this$01 = $this;
    var$3 = cgxgbtp_AssetDownloader_instance;
    var$1 = var$1.$baseUrl;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, var$1);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(96));
    var$6 = new jl_String;
    var$7 = var$4.$buffer;
    var$8 = var$4.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    cgxgbtp_AssetDownloadImpl_loadScript(var$3, 1, var$6, var$2);
}
function cgxgbt_TeaApplication_initBulletPhysics($this, $application) {
    var $preloader, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $preloader = $application.$preloader0;
    var$3 = new cgxgbt_TeaApplication$5;
    var$3.$this$02 = $this;
    var$4 = cgxgbtp_AssetDownloader_instance;
    $preloader = $preloader.$baseUrl;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$6 = var$5.$length;
    if ($preloader === null)
        $preloader = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, var$6, $preloader);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(97));
    $application = new jl_String;
    var$7 = var$5.$buffer;
    var$8 = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    $application.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    cgxgbtp_AssetDownloadImpl_loadScript(var$4, 1, $application, var$3);
}
function cgxgbt_TeaApplication_initBox2dPhysics($this, $application) {
    var $preloader, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $preloader = $application.$preloader0;
    var$3 = new cgxgbt_TeaApplication$7;
    var$3.$this$03 = $this;
    var$4 = cgxgbtp_AssetDownloader_instance;
    $preloader = $preloader.$baseUrl;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$6 = var$5.$length;
    if ($preloader === null)
        $preloader = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, var$6, $preloader);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(98));
    $application = new jl_String;
    var$7 = var$5.$buffer;
    var$8 = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    $application.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    cgxgbtp_AssetDownloadImpl_loadScript(var$4, 1, $application, var$3);
}
function cgxgbt_TeaApplication_initImGui($this, $application) {
    var $preloader, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $preloader = $application.$preloader0;
    var$3 = new cgxgbt_TeaApplication$6;
    var$3.$this$04 = $this;
    var$4 = cgxgbtp_AssetDownloader_instance;
    $preloader = $preloader.$baseUrl;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$6 = var$5.$length;
    if ($preloader === null)
        $preloader = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, var$6, $preloader);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(99));
    $application = new jl_String;
    var$7 = var$5.$buffer;
    var$8 = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    $application.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    cgxgbtp_AssetDownloadImpl_loadScript(var$4, 1, $application, var$3);
}
var cbg_ApplicationListener = $rt_classWithoutFields(0);
function cbg_Game() {
    jl_Object.call(this);
    this.$screen = null;
}
function cbg_Game_dispose($this) {}
function cbg_Game_pause($this) {}
function cbg_Game_render($this) {
    var var$1;
    var$1 = $this.$screen;
    if (var$1 !== null)
        var$1.$render0(cbg_Gdx_graphics.$deltaTime);
}
function cgt_SpeedDemo() {
    var a = this; cbg_Game.call(a);
    a.$screens = null;
    a.$screenIndex = 0;
    a.$font0 = null;
    a.$batch = null;
}
function cgt_SpeedDemo_create($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    cbg_Gdx_app.$logLevel = 1;
    var$1 = new cbggg_BitmapFont;
    var$2 = cbg_Gdx_files;
    var$3 = new cgxgbt_TeaFileHandle;
    var$4 = var$2.$preloader;
    cbg_Files$FileType_$callClinit();
    cgxgbt_TeaFileHandle__init_0(var$3, var$4, $rt_s(100), cbg_Files$FileType_Internal);
    cbggg_BitmapFont__init_0(var$1, cbggg_BitmapFont$BitmapFontData__init_(var$3, 0), null, 1);
    $this.$font0 = var$1;
    cbgg_Color_$callClinit();
    var$2 = cbgg_Color_BLACK;
    var$5 = var$1.$cache.$color;
    var$5.$r = var$2.$r;
    var$5.$g = var$2.$g;
    var$5.$b = var$2.$b;
    var$5.$a = var$2.$a;
    var$2 = new cbggg_SpriteBatch;
    cbggg_SpriteBatch_$callClinit();
    cbggg_SpriteBatch__init_(var$2, 1000, null);
    $this.$batch = var$2;
    var$6 = $rt_createArray(cbg_Screen, 2);
    var$7 = var$6.data;
    var$2 = new cgt_ChopScreen;
    var$2.$amounts = $rt_createLongArray(512);
    var$2.$iterations = Long_ZERO;
    var$2.$mainGame = $this;
    var$7[0] = var$2;
    var$2 = new cgt_AceScreen;
    var$2.$amounts0 = $rt_createLongArray(512);
    var$2.$iterations0 = Long_ZERO;
    var$2.$mainGame0 = $this;
    var$7[1] = var$2;
    $this.$screens = var$6;
    $this.$screenIndex = 0;
    var$2 = var$7[0];
    $this.$screen = var$2;
    if (var$2 !== null) {
        var$2.$show();
        $this.$screen.$resize0(cbg_Gdx_graphics.$canvas0.width, cbg_Gdx_graphics.$canvas0.height);
    }
}
var otci_IntegerUtil = $rt_classWithoutFields();
function otci_IntegerUtil_toUnsignedLogRadixString($value, $radixLog2) {
    var $radix, $mask, $sz, $chars, $pos, $target, $target_0, var$10, var$11, var$12;
    if (!$value)
        return $rt_s(44);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz).data;
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        $target_0 = $target + 1 | 0;
        $chars[$target] = jl_Character_forDigit(($value >>> $pos | 0) & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    var$10 = new jl_String;
    jl_String_$callClinit();
    $value = $chars.length;
    var$11 = $rt_createCharArray($value);
    var$12 = var$11.data;
    var$10.$characters = var$11;
    $radixLog2 = 0;
    while ($radixLog2 < $value) {
        var$12[$radixLog2] = $chars[$radixLog2];
        $radixLog2 = $radixLog2 + 1 | 0;
    }
    return var$10;
}
var cgxgbtdt_TypedArrays = $rt_classWithoutFields();
var cgxgbtdt_TypedArrays_instance = null;
function cgxgbtdt_TypedArrays_getInstance() {
    return cgxgbtdt_TypedArrays_instance;
}
var cgxgbtd_TeaTypedArrays = $rt_classWithoutFields(cgxgbtdt_TypedArrays);
function cgxgbtd_TeaTypedArrays_createInt32Array($this, $length) {
    return new $rt_globals.Int32Array($length);
}
function cgxgbtd_TeaTypedArrays_createInt16Array($this, $length) {
    return new $rt_globals.Int16Array($length);
}
function cgxgbtd_TeaTypedArrays_createUint8Array($this, $length) {
    return new $rt_globals.Uint8Array($length);
}
var cgxgbt_TeaApplication$AppState = $rt_classWithoutFields(jl_Enum);
var cgxgbt_TeaApplication$AppState_LOAD_ASSETS = null;
var cgxgbt_TeaApplication$AppState_APP_CREATE = null;
var cgxgbt_TeaApplication$AppState_APP_LOOP = null;
var cgxgbt_TeaApplication$AppState_$VALUES = null;
function cgxgbt_TeaApplication$AppState_$callClinit() {
    cgxgbt_TeaApplication$AppState_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$AppState);
    cgxgbt_TeaApplication$AppState__clinit_();
}
function cgxgbt_TeaApplication$AppState__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new cgxgbt_TeaApplication$AppState;
    cgxgbt_TeaApplication$AppState_$callClinit();
    var$1.$name0 = $rt_s(101);
    var$1.$ordinal = 0;
    cgxgbt_TeaApplication$AppState_LOAD_ASSETS = var$1;
    var$2 = new cgxgbt_TeaApplication$AppState;
    var$2.$name0 = $rt_s(102);
    var$2.$ordinal = 1;
    cgxgbt_TeaApplication$AppState_APP_CREATE = var$2;
    var$3 = new cgxgbt_TeaApplication$AppState;
    var$3.$name0 = $rt_s(103);
    var$3.$ordinal = 2;
    cgxgbt_TeaApplication$AppState_APP_LOOP = var$3;
    cgxgbt_TeaApplication$AppState_$VALUES = $rt_createArrayFromData(cgxgbt_TeaApplication$AppState, [var$1, var$2, var$3]);
}
var cgxgbtd_WindowWrapper = $rt_classWithoutFields(0);
var otj_JSObject = $rt_classWithoutFields(0);
var otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
function cgxgbtdi_TeaWindow() {
    var a = this; jl_Object.call(a);
    a.$window0 = null;
    a.$runnable = null;
}
var cgxgbtdi_TeaWindow_TEA_WINDOW = null;
function cgxgbtdi_TeaWindow_$callClinit() {
    cgxgbtdi_TeaWindow_$callClinit = $rt_eraseClinit(cgxgbtdi_TeaWindow);
    cgxgbtdi_TeaWindow__clinit_();
}
function cgxgbtdi_TeaWindow_getDocument($this) {
    return $this.$window0.document;
}
function cgxgbtdi_TeaWindow_requestAnimationFrame($this, $runnable) {
    $this.$runnable = $runnable;
    $rt_globals.requestAnimationFrame(otji_JS_function($this, "onAnimationFrame"));
}
function cgxgbtdi_TeaWindow_addEventListener($this, $type, $listener) {
    var $eListener;
    $eListener = otji_JS_functionAsObject($listener, "handleEvent");
    $this.$window0.addEventListener($rt_ustr($type), otji_JS_function($eListener, "handleEvent"));
}
function cgxgbtdi_TeaWindow__clinit_() {
    var var$1;
    var$1 = new cgxgbtdi_TeaWindow;
    cgxgbtdi_TeaWindow_$callClinit();
    var$1.$window0 = $rt_globals.window;
    cgxgbtdi_TeaWindow_TEA_WINDOW = var$1;
}
function cgxgbtdi_TeaWindow_onAnimationFrame$exported$0(var$0, var$1) {
    var var$2;
    var$1;
    var$2 = var$0.$runnable;
    var$0.$runnable = null;
    cgxgbt_TeaApplication_run(var$2);
}
var cgxgbtu_TeaNavigator = $rt_classWithoutFields();
var cbgu_Pools = $rt_classWithoutFields();
var cbgu_Pools_typePools = null;
function cbgu_Pools_$callClinit() {
    cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
    cbgu_Pools__clinit_();
}
function cbgu_Pools_freeAll($objects, $samePool) {
    var $pool, $i, $n, var$6, var$7, var$8, var$9, $object, var$11, var$12, var$13, var$14;
    cbgu_Pools_$callClinit();
    if ($objects === null) {
        $pool = new jl_IllegalArgumentException;
        $pool.$suppressionEnabled = 1;
        $pool.$writableStackTrace = 1;
        $pool.$message = $rt_s(35);
        $rt_throw($pool);
    }
    $pool = null;
    $i = 0;
    $n = $objects.$size;
    while ($i < $n) {
        if ($i >= $objects.$size) {
            var$6 = new jl_IndexOutOfBoundsException;
            $pool = new jl_StringBuilder;
            $pool.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($pool, $pool.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0($pool, $pool.$length, $i, 10);
            jl_AbstractStringBuilder_insert($pool, $pool.$length, $rt_s(37));
            $samePool = $objects.$size;
            jl_AbstractStringBuilder_insert0($pool, $pool.$length, $samePool, 10);
            $objects = new jl_String;
            var$7 = $pool.$buffer;
            $i = $pool.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray($i);
            var$9 = var$8.data;
            $objects.$characters = var$8;
            $n = 0;
            while ($n < $i) {
                var$9[$n] = var$7.data[$n + 0 | 0];
                $n = $n + 1 | 0;
            }
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            var$6.$message = $objects;
            $rt_throw(var$6);
        }
        a: {
            $object = $objects.$items.data[$i];
            if ($object !== null) {
                if ($pool === null) {
                    $pool = cbgu_Pools_typePools;
                    var$11 = $object.constructor;
                    if (var$11 === null)
                        var$6 = null;
                    else {
                        var$6 = var$11.classObject;
                        if (var$6 === null) {
                            var$6 = new jl_Class;
                            var$6.$platformClass = var$11;
                            var$12 = var$6;
                            var$11.classObject = var$12;
                        }
                    }
                    var$13 = cbgu_ObjectMap_locateKey($pool, var$6);
                    $pool = var$13 < 0 ? null : $pool.$valueTable.data[var$13];
                    if ($pool === null)
                        break a;
                }
                var$6 = $pool.$freeObjects;
                if (var$6.$size < $pool.$max) {
                    cbgu_Array_add(var$6, $object);
                    var$13 = $pool.$peak;
                    var$14 = $pool.$freeObjects.$size;
                    if (var$13 > var$14)
                        var$14 = var$13;
                    $pool.$peak = var$14;
                    if ($rt_isInstance($object, cbgu_Pool$Poolable))
                        $object.$reset();
                } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
                    $object.$reset();
                if (!$samePool)
                    $pool = null;
            }
        }
        $i = $i + 1 | 0;
    }
}
function cbgu_Pools__clinit_() {
    cbgu_Pools_typePools = cbgu_ObjectMap__init_(51, 0.800000011920929);
}
function jl_Float() {
    jl_Number.call(this);
    this.$value1 = 0.0;
}
var jl_Float_NaN = 0.0;
var jl_Float_TYPE = null;
function jl_Float_floatValue($this) {
    return $this.$value1;
}
function jl_Float_parseFloat($string) {
    var var$2, $c, $start, var$5, $negative, $mantissa, $exp, $hasOneDigit, $negativeExp, var$11, $numExp;
    var$2 = $string.$characters.data;
    $c = var$2.length;
    if ($c ? 0 : 1) {
        $string = new jl_NumberFormatException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    $start = 0;
    a: {
        while (true) {
            if ($start < 0)
                break a;
            if ($start >= $c)
                break a;
            if (var$2[$start] > 32) {
                var$5 = $c;
                while (true) {
                    $negative = var$5 - 1 | 0;
                    if ($negative < 0)
                        break;
                    if ($negative >= $c)
                        break;
                    if (var$2[$negative] > 32) {
                        $negative = 0;
                        if (jl_String_charAt($string, $start) == 45) {
                            $start = $start + 1 | 0;
                            $negative = 1;
                        } else if (jl_String_charAt($string, $start) == 43)
                            $start = $start + 1 | 0;
                        if ($start == var$5) {
                            $string = new jl_NumberFormatException;
                            jl_IllegalArgumentException__init_($string);
                            $rt_throw($string);
                        }
                        b: {
                            $c = jl_String_charAt($string, $start);
                            $mantissa = 0;
                            $exp = 0;
                            $hasOneDigit = 0;
                            if ($c != 46) {
                                $hasOneDigit = 1;
                                if ($c >= 48 && $c <= 57) {
                                    c: {
                                        while ($start < var$5) {
                                            if (jl_String_charAt($string, $start) != 48)
                                                break c;
                                            $start = $start + 1 | 0;
                                        }
                                    }
                                    while ($start < var$5) {
                                        $negativeExp = jl_String_charAt($string, $start);
                                        if ($negativeExp < 48)
                                            break b;
                                        if ($negativeExp > 57)
                                            break b;
                                        if ($mantissa >= 214748355)
                                            $exp = $exp + 1 | 0;
                                        else
                                            $mantissa = ($mantissa * 10 | 0) + ($negativeExp - 48 | 0) | 0;
                                        $start = $start + 1 | 0;
                                    }
                                } else
                                    $rt_throw(jl_NumberFormatException__init_0());
                            }
                        }
                        if ($start < var$5 && jl_String_charAt($string, $start) == 46) {
                            $start = $start + 1 | 0;
                            d: {
                                while (true) {
                                    if ($start >= var$5)
                                        break d;
                                    var$11 = jl_String_charAt($string, $start);
                                    if (var$11 < 48)
                                        break d;
                                    if (var$11 > 57)
                                        break;
                                    if ($mantissa < 214748355) {
                                        $mantissa = ($mantissa * 10 | 0) + (var$11 - 48 | 0) | 0;
                                        $exp = $exp + (-1) | 0;
                                    }
                                    $start = $start + 1 | 0;
                                    $hasOneDigit = 1;
                                }
                            }
                            if (!$hasOneDigit)
                                $rt_throw(jl_NumberFormatException__init_0());
                        }
                        if ($start < var$5) {
                            $c = jl_String_charAt($string, $start);
                            if ($c != 101 && $c != 69)
                                $rt_throw(jl_NumberFormatException__init_0());
                            $c = $start + 1 | 0;
                            $negativeExp = 0;
                            if ($c == var$5)
                                $rt_throw(jl_NumberFormatException__init_0());
                            if (jl_String_charAt($string, $c) == 45) {
                                $c = $c + 1 | 0;
                                $negativeExp = 1;
                            } else if (jl_String_charAt($string, $c) == 43)
                                $c = $c + 1 | 0;
                            $numExp = 0;
                            $start = 0;
                            e: {
                                while (true) {
                                    if ($c >= var$5)
                                        break e;
                                    $hasOneDigit = jl_String_charAt($string, $c);
                                    if ($hasOneDigit < 48)
                                        break e;
                                    if ($hasOneDigit > 57)
                                        break;
                                    $numExp = (10 * $numExp | 0) + ($hasOneDigit - 48 | 0) | 0;
                                    $start = 1;
                                    $c = $c + 1 | 0;
                                }
                            }
                            if (!$start)
                                $rt_throw(jl_NumberFormatException__init_0());
                            if ($negativeExp)
                                $numExp =  -$numExp | 0;
                            $exp = $exp + $numExp | 0;
                        }
                        f: {
                            var$11 = $rt_compare($exp, 38);
                            if (var$11 <= 0) {
                                if (var$11)
                                    break f;
                                if ($mantissa <= 34028234)
                                    break f;
                            }
                            return $negative ? (-Infinity) : Infinity;
                        }
                        if ($negative)
                            $mantissa =  -$mantissa | 0;
                        return $mantissa * jl_Float_decimalExponent($exp);
                    }
                    var$5 = var$5 + (-1) | 0;
                }
                $string = new jl_StringIndexOutOfBoundsException;
                $string.$suppressionEnabled = 1;
                $string.$writableStackTrace = 1;
                $rt_throw($string);
            }
            $start = $start + 1 | 0;
            if ($start == $c)
                break;
        }
        $string = new jl_NumberFormatException;
        jl_Throwable__init_0($string);
        $rt_throw($string);
    }
    $string = new jl_StringIndexOutOfBoundsException;
    $string.$suppressionEnabled = 1;
    $string.$writableStackTrace = 1;
    $rt_throw($string);
}
function jl_Float_decimalExponent($n) {
    var $d, $result;
    if ($n >= 0)
        $d = 10.0;
    else {
        $d = 0.1;
        $n =  -$n | 0;
    }
    $result = 1.0;
    while ($n) {
        if ($n % 2 | 0)
            $result = $result * $d;
        $d = $d * $d;
        $n = $n / 2 | 0;
    }
    return $result;
}
function jl_Float__clinit_() {
    jl_Float_NaN = $rt_globals.NaN;
    jl_Float_TYPE = $rt_cls($rt_floatcls());
}
function cbgu_FloatArray() {
    var a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size1 = 0;
    a.$ordered1 = 0;
}
function cbgu_FloatArray_add($this, $value) {
    var $items, var$3, var$4, var$5, var$6;
    $items = $this.$items1;
    var$3 = $items.data;
    var$4 = $this.$size1;
    if (var$4 != var$3.length)
        var$3 = $items;
    else {
        var$5 = var$4 * 1.75 | 0;
        if (8 > var$5)
            var$5 = 8;
        var$3 = $rt_createFloatArray(var$5);
        var$6 = var$3.data.length;
        if (var$4 < var$6)
            var$6 = var$4;
        jl_System_arraycopy($items, 0, var$3, 0, var$6);
        $this.$items1 = var$3;
    }
    $items = var$3.data;
    var$5 = $this.$size1;
    $this.$size1 = var$5 + 1 | 0;
    $items[var$5] = $value;
}
function cbgu_FloatArray_addAll0($this, $array, $offset, $length) {
    var var$4, var$5, var$6, var$7, var$8, var$9;
    if (($offset + $length | 0) <= $array.$size1) {
        cbgu_FloatArray_addAll($this, $array.$items1, $offset, $length);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(104));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $offset, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(50));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $length, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(51));
    var$6 = $array.$size1;
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$6, 10);
    $array = new jl_String;
    var$7 = var$5.$buffer;
    $length = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($length);
    var$9 = var$8.data;
    $array.$characters = var$8;
    var$6 = 0;
    while (var$6 < $length) {
        var$9[var$6] = var$7.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = $array;
    $rt_throw(var$4);
}
function cbgu_FloatArray_addAll($this, $array, $offset, $length) {
    var $items, var$5, var$6, $sizeNeeded, var$8, var$9;
    $items = $this.$items1;
    var$5 = $items.data;
    var$6 = $this.$size1;
    $sizeNeeded = var$6 + $length | 0;
    if ($sizeNeeded <= var$5.length)
        var$5 = $items;
    else {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        var$8 = var$6 * 1.75 | 0;
        if ($sizeNeeded > var$8)
            var$8 = $sizeNeeded;
        var$5 = $rt_createFloatArray(var$8);
        var$9 = var$5.data.length;
        if (var$6 < var$9)
            var$9 = var$6;
        jl_System_arraycopy($items, 0, var$5, 0, var$9);
        $this.$items1 = var$5;
    }
    jl_System_arraycopy($array, $offset, var$5, $this.$size1, $length);
    $this.$size1 = $this.$size1 + $length | 0;
}
function cbgu_FloatArray_get($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($index < $this.$size1)
        return $this.$items1.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(36));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(37));
    $index = $this.$size1;
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
    var$4 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$4.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cbgu_FloatArray_removeRange($this, $start, $end) {
    var $n, var$4, var$5, var$6, var$7, var$8, var$9, $count, $lastIndex, $i;
    $n = $this.$size1;
    if ($end >= $n) {
        var$4 = new jl_IndexOutOfBoundsException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(52));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $end, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(37));
        $start = $this.$size1;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $end = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($end);
        var$9 = var$8.data;
        var$6.$characters = var$8;
        $count = 0;
        while ($count < $end) {
            var$9[$count] = var$7.data[$count + 0 | 0];
            $count = $count + 1 | 0;
        }
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    if ($start <= $end) {
        $count = ($end - $start | 0) + 1 | 0;
        $lastIndex = $n - $count | 0;
        if ($this.$ordered1) {
            var$7 = $this.$items1;
            $end = $start + $count | 0;
            jl_System_arraycopy(var$7, $end, var$7, $start, $n - $end | 0);
        } else {
            $i = $end + 1 | 0;
            if ($lastIndex > $i)
                $i = $lastIndex;
            var$7 = $this.$items1;
            jl_System_arraycopy(var$7, $i, var$7, $start, $n - $i | 0);
        }
        $this.$size1 = $lastIndex;
        return;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(53));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(54));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $end, 10);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    $end = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($end);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    $count = 0;
    while ($count < $end) {
        var$9[$count] = var$7.data[$count + 0 | 0];
        $count = $count + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$6;
    $rt_throw(var$4);
}
function cbgu_FloatArray_first($this) {
    var var$1;
    if ($this.$size1)
        return $this.$items1.data[0];
    var$1 = new jl_IllegalStateException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    var$1.$message = $rt_s(32);
    $rt_throw(var$1);
}
function cbgu_FloatArray_ensureCapacity($this, $additionalCapacity) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, $sizeNeeded, var$10;
    if ($additionalCapacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(55));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $additionalCapacity, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$8 = var$7.data;
        var$4.$characters = var$7;
        $sizeNeeded = 0;
        while ($sizeNeeded < var$6) {
            var$8[$sizeNeeded] = var$5.data[$sizeNeeded + 0 | 0];
            $sizeNeeded = $sizeNeeded + 1 | 0;
        }
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    var$6 = $this.$size1;
    $sizeNeeded = var$6 + $additionalCapacity | 0;
    var$5 = $this.$items1;
    if ($sizeNeeded > var$5.data.length) {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        $additionalCapacity = var$6 * 1.75 | 0;
        if ($sizeNeeded > $additionalCapacity)
            $additionalCapacity = $sizeNeeded;
        var$7 = $rt_createFloatArray($additionalCapacity);
        var$10 = var$7.data.length;
        if (var$6 < var$10)
            var$10 = var$6;
        jl_System_arraycopy(var$5, 0, var$7, 0, var$10);
        $this.$items1 = var$7;
    }
    return $this.$items1;
}
function cbgu_FloatArray_truncate($this, $newSize) {
    if ($this.$size1 > $newSize)
        $this.$size1 = $newSize;
}
var jl_Math = $rt_classWithoutFields();
function jl_Math_sin(var$1) {
    return Math.sin(var$1);
}
function jl_Math_log(var$1) {
    return Math.log(var$1);
}
function jl_Math_sqrt(var$1) {
    return Math.sqrt(var$1);
}
function jl_Math_ceil(var$1) {
    return Math.ceil(var$1);
}
function jl_Math_powImpl(var$1, var$2) {
    return Math.pow(var$1, var$2);
}
function jl_Math_randomImpl() {
    return Math.random();
}
function jl_Math_max($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max0($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function cbggg_GlyphLayout$GlyphRun() {
    var a = this; jl_Object.call(a);
    a.$glyphs = null;
    a.$xAdvances = null;
    a.$x3 = 0.0;
    a.$y3 = 0.0;
    a.$width2 = 0.0;
}
function cbggg_GlyphLayout$GlyphRun__init_0() {
    var var_0 = new cbggg_GlyphLayout$GlyphRun();
    cbggg_GlyphLayout$GlyphRun__init_(var_0);
    return var_0;
}
function cbggg_GlyphLayout$GlyphRun__init_($this) {
    var var$1;
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 16);
    $this.$glyphs = var$1;
    var$1 = new cbgu_FloatArray;
    var$1.$ordered1 = 1;
    var$1.$items1 = $rt_createFloatArray(16);
    $this.$xAdvances = var$1;
}
function cbggg_GlyphLayout$GlyphRun_appendRun($this, $run) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    var$2 = $this.$glyphs;
    var$3 = $run.$glyphs;
    var$4 = var$3.$items;
    var$5 = var$3.$size;
    var$6 = var$2.$items;
    var$7 = var$6.data;
    var$8 = var$2.$size;
    var$9 = var$8 + var$5 | 0;
    if (var$9 <= var$7.length)
        var$3 = var$6;
    else {
        var$10 = 8;
        if (var$10 <= var$9)
            var$10 = var$9;
        var$8 = var$8 * 1.75 | 0;
        if (var$10 > var$8)
            var$8 = var$10;
        var$11 = var$6.constructor;
        if (var$11 === null)
            var$3 = null;
        else {
            var$3 = var$11.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                var$3.$platformClass = var$11;
                var$12 = var$3;
                var$11.classObject = var$12;
            }
        }
        var$11 = jl_Class_getComponentType(var$3);
        if (var$11 === null) {
            $run = new jl_NullPointerException;
            jl_Throwable__init_0($run);
            $rt_throw($run);
        }
        if (var$11 === $rt_cls($rt_voidcls())) {
            $run = new jl_IllegalArgumentException;
            jl_Throwable__init_0($run);
            $rt_throw($run);
        }
        if (var$8 < 0) {
            $run = new jl_NegativeArraySizeException;
            jl_Throwable__init_0($run);
            $rt_throw($run);
        }
        var$3 = jlr_Array_newInstanceImpl(var$11.$platformClass, var$8);
        var$11 = var$3.data;
        var$10 = var$2.$size;
        var$13 = var$11.length;
        if (var$10 < var$13)
            var$13 = var$10;
        jl_System_arraycopy(var$6, 0, var$3, 0, var$13);
        var$2.$items = var$3;
    }
    jl_System_arraycopy(var$4, 0, var$3, var$2.$size, var$5);
    var$2.$size = var$9;
    var$2 = $this.$xAdvances;
    var$14 = var$2.$size1;
    if (var$14 <= 0 ? 0 : 1)
        var$2.$size1 = var$14 - 1 | 0;
    $run = $run.$xAdvances;
    cbgu_FloatArray_addAll(var$2, $run.$items1, 0, $run.$size1);
}
function cbggg_GlyphLayout$GlyphRun_reset($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$glyphs;
    var$2 = var$1.$items;
    var$3 = 0;
    var$4 = var$1.$size;
    var$5 = null;
    if (var$3 > var$4) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < var$4) {
        var$6 = var$2.data;
        var$7 = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = var$7;
    }
    var$1.$size = 0;
    $this.$xAdvances.$size1 = 0;
}
function cbggg_GlyphLayout$GlyphRun_toString($this) {
    var $buffer, $glyphs, $n, $i, $g, var$6, var$7, var$8, var$9, var$10, var$11;
    $buffer = new jl_StringBuilder;
    $glyphs = $this.$glyphs;
    $n = $glyphs.$size;
    $buffer.$buffer = $rt_createCharArray($n + 32 | 0);
    $i = 0;
    while ($i < $n) {
        if ($i >= $glyphs.$size) {
            $g = new jl_IndexOutOfBoundsException;
            $buffer = new jl_StringBuilder;
            $buffer.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $i, 10);
            jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(37));
            $i = $glyphs.$size;
            jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $i, 10);
            $glyphs = new jl_String;
            var$6 = $buffer.$buffer;
            $n = $buffer.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($n);
            var$8 = var$7.data;
            $glyphs.$characters = var$7;
            var$9 = 0;
            while (var$9 < $n) {
                var$8[var$9] = var$6.data[var$9 + 0 | 0];
                var$9 = var$9 + 1 | 0;
            }
            $g.$suppressionEnabled = 1;
            $g.$writableStackTrace = 1;
            $g.$message = $glyphs;
            $rt_throw($g);
        }
        var$9 = $glyphs.$items.data[$i].$id & 65535;
        var$10 = $buffer.$length;
        jl_AbstractStringBuilder_insertSpace($buffer, var$10, var$10 + 1 | 0);
        $buffer.$buffer.data[var$10] = var$9;
        $i = $i + 1 | 0;
    }
    jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(58));
    var$11 = $this.$x3;
    jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$11);
    jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(58));
    var$11 = $this.$y3;
    jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$11);
    jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(58));
    var$11 = $this.$width2;
    jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$11);
    $glyphs = new jl_String;
    var$6 = $buffer.$buffer;
    $n = $buffer.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray($n);
    var$8 = var$7.data;
    $glyphs.$characters = var$7;
    var$9 = 0;
    while (var$9 < $n) {
        var$8[var$9] = var$6.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return $glyphs;
}
function cbgu_IntArray() {
    var a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$size0 = 0;
    a.$ordered0 = 0;
}
function cbgu_IntArray_add0($this, $value) {
    var $items, var$3, var$4, var$5, var$6;
    $items = $this.$items0;
    var$3 = $items.data;
    var$4 = $this.$size0;
    if (var$4 != var$3.length)
        var$3 = $items;
    else {
        var$5 = var$4 * 1.75 | 0;
        if (8 > var$5)
            var$5 = 8;
        var$3 = $rt_createIntArray(var$5);
        var$6 = var$3.data.length;
        if (var$4 < var$6)
            var$6 = var$4;
        jl_System_arraycopy($items, 0, var$3, 0, var$6);
        $this.$items0 = var$3;
    }
    $items = var$3.data;
    var$5 = $this.$size0;
    $this.$size0 = var$5 + 1 | 0;
    $items[var$5] = $value;
}
function cbgu_IntArray_add($this, $value1, $value2) {
    var $items, var$4, var$5, var$6, var$7, var$8, var$9;
    $items = $this.$items0;
    var$4 = $items.data;
    var$5 = $this.$size0;
    if ((var$5 + 1 | 0) < var$4.length)
        var$6 = $items;
    else {
        var$7 = var$5 * 1.75 | 0;
        if (8 > var$7)
            var$7 = 8;
        var$6 = $rt_createIntArray(var$7);
        var$8 = var$6.data.length;
        if (var$5 < var$8)
            var$8 = var$5;
        jl_System_arraycopy($items, 0, var$6, 0, var$8);
        $this.$items0 = var$6;
    }
    var$4 = var$6.data;
    var$9 = $this.$size0;
    var$4[var$9] = $value1;
    var$4[var$9 + 1 | 0] = $value2;
    $this.$size0 = var$9 + 2 | 0;
}
function cbgu_IntArray_get($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($index < $this.$size0)
        return $this.$items0.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(36));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(37));
    $index = $this.$size0;
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
    var$4 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$4.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cbgu_IntArray_set($this, $index, $value) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($index < $this.$size0) {
        $this.$items0.data[$index] = $value;
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(36));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(37));
    $index = $this.$size0;
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$5;
    $rt_throw(var$3);
}
function cbgu_IntArray_peek($this) {
    return $this.$items0.data[$this.$size0 - 1 | 0];
}
function cbgu_IntArray_ensureCapacity($this, $additionalCapacity) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, $sizeNeeded, var$10;
    if ($additionalCapacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(55));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $additionalCapacity, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$8 = var$7.data;
        var$4.$characters = var$7;
        $sizeNeeded = 0;
        while ($sizeNeeded < var$6) {
            var$8[$sizeNeeded] = var$5.data[$sizeNeeded + 0 | 0];
            $sizeNeeded = $sizeNeeded + 1 | 0;
        }
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    var$6 = $this.$size0;
    $sizeNeeded = var$6 + $additionalCapacity | 0;
    var$5 = $this.$items0;
    if ($sizeNeeded > var$5.data.length) {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        $additionalCapacity = var$6 * 1.75 | 0;
        if ($sizeNeeded > $additionalCapacity)
            $additionalCapacity = $sizeNeeded;
        var$7 = $rt_createIntArray($additionalCapacity);
        var$10 = var$7.data.length;
        if (var$6 < var$10)
            var$10 = var$6;
        jl_System_arraycopy(var$5, 0, var$7, 0, var$10);
        $this.$items0 = var$7;
    }
    return $this.$items0;
}
function cbgu_IntArray_hashCode($this) {
    var $items, $h, $i, $n, var$5, var$6, var$7;
    if ($this.$ordered0) {
        $items = $this.$items0;
        $h = 1;
        $i = 0;
        $n = $this.$size0;
        while ($i < $n) {
            var$5 = $items.data;
            $h = ($h * 31 | 0) + var$5[$i] | 0;
            $i = $i + 1 | 0;
        }
        return $h;
    }
    var$6 = $this;
    if (!var$6.$id$) {
        var$7 = $rt_nextId();
        var$6.$id$ = var$7;
    }
    return $this.$id$;
}
function cbgu_IntArray_equals($this, $object) {
    var $array, $n, $items1, $items2, $i, var$7;
    if ($object === $this)
        return 1;
    if (!$this.$ordered0)
        return 0;
    if (!($object instanceof cbgu_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered0)
        return 0;
    $n = $this.$size0;
    if ($n != $array.$size0)
        return 0;
    $items1 = $this.$items0;
    $items2 = $array.$items0;
    $i = 0;
    while ($i < $n) {
        var$7 = $items2.data;
        if ($items1.data[$i] != var$7[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function cbgu_IntArray_toString($this) {
    var $items, $buffer, var$3, var$4, var$5, $i, var$7, var$8;
    if (!$this.$size0)
        return $rt_s(57);
    $items = $this.$items0;
    $buffer = new cbgu_StringBuilder;
    var$3 = $rt_createCharArray(32);
    var$4 = var$3.data;
    $buffer.$chars = var$3;
    var$5 = $buffer.$length2;
    if (var$5 == var$4.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    $items = $items.data;
    var$4 = $buffer.$chars.data;
    var$5 = $buffer.$length2;
    $buffer.$length2 = var$5 + 1 | 0;
    var$4[var$5] = 91;
    cbgu_StringBuilder_append($buffer, $items[0], 0, 48);
    $i = 1;
    while ($i < $this.$size0) {
        var$7 = $rt_s(58).$characters.data.length;
        var$5 = $buffer.$length2 + var$7 | 0;
        if (var$5 > $buffer.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$5);
        jl_String_getChars($rt_s(58), 0, var$7, $buffer.$chars, $buffer.$length2);
        $buffer.$length2 = var$5;
        cbgu_StringBuilder_append($buffer, $items[$i], 0, 48);
        $i = $i + 1 | 0;
    }
    var$5 = $buffer.$length2;
    if (var$5 == $buffer.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    $items = $buffer.$chars.data;
    var$8 = $buffer.$length2;
    var$5 = var$8 + 1 | 0;
    $buffer.$length2 = var$5;
    $items[var$8] = 93;
    if (!var$5)
        $buffer = $rt_s(42);
    else {
        $buffer = new jl_String;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$5);
        var$3 = var$4.data;
        $buffer.$characters = var$4;
        var$8 = 0;
        while (var$8 < var$5) {
            var$3[var$8] = $items[var$8 + 0 | 0];
            var$8 = var$8 + 1 | 0;
        }
    }
    return $buffer;
}
var ju_Map = $rt_classWithoutFields(0);
var ju_AbstractMap = $rt_classWithoutFields();
var jl_Cloneable = $rt_classWithoutFields(0);
function ju_HashMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount = 0;
    a.$loadFactor = 0.0;
    a.$threshold = 0;
}
function ju_HashMap__init_(var_0, var_1) {
    var var_2 = new ju_HashMap();
    ju_HashMap__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap_calculateCapacity($x) {
    var var$2;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    $x = var$2 | var$2 >> 1;
    $x = $x | $x >> 2;
    $x = $x | $x >> 4;
    $x = $x | $x >> 8;
    return ($x | $x >> 16) + 1 | 0;
}
function ju_HashMap__init_0($this, $capacity, $loadFactor) {
    var var$3, var$4, var$5;
    if ($capacity >= 0 && $loadFactor > 0.0) {
        $capacity = ju_HashMap_calculateCapacity($capacity);
        $this.$elementCount = 0;
        var$3 = $rt_createArray(ju_HashMap$HashEntry, $capacity);
        var$4 = var$3.data;
        $this.$elementData = var$3;
        $this.$loadFactor = $loadFactor;
        $this.$threshold = var$4.length * $loadFactor | 0;
        return;
    }
    var$5 = new jl_IllegalArgumentException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    $rt_throw(var$5);
}
function ju_HashMap_getEntry($this, $key) {
    var $m, $hash, var$4, var$5;
    if ($key === null) {
        $m = $this.$elementData.data[0];
        while ($m !== null && $m.$key !== null) {
            $m = $m.$next;
        }
    } else {
        $hash = $key.$hashCode();
        var$4 = $this.$elementData.data;
        $m = var$4[$hash & (var$4.length - 1 | 0)];
        while ($m !== null) {
            if ($m.$origKeyHash == $hash) {
                var$5 = $m.$key;
                if ($key !== var$5 && !$key.$equals(var$5) ? 0 : 1)
                    break;
            }
            $m = $m.$next;
        }
    }
    return $m;
}
function ju_HashMap_putImpl($this, $key, $value) {
    var var$3, $entry, $result, var$6, $hash, $index;
    if ($key === null) {
        var$3 = $this.$elementData.data;
        $entry = var$3[0];
        while ($entry !== null && $entry.$key !== null) {
            $entry = $entry.$next;
        }
        if ($entry === null) {
            $this.$modCount = $this.$modCount + 1 | 0;
            $result = null;
            $entry = new ju_HashMap$HashEntry;
            $key = null;
            $entry.$key = $result;
            $entry.$value4 = $key;
            $entry.$origKeyHash = 0;
            $entry.$next = var$3[0];
            var$3[0] = $entry;
            var$6 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$6;
            if (var$6 > $this.$threshold)
                ju_HashMap_rehash($this, var$3.length);
        }
    } else {
        $hash = $key.$hashCode();
        var$3 = $this.$elementData.data;
        $index = $hash & (var$3.length - 1 | 0);
        $entry = var$3[$index];
        while ($entry !== null) {
            if ($entry.$origKeyHash == $hash) {
                $result = $entry.$key;
                if ($key !== $result && !$key.$equals($result) ? 0 : 1)
                    break;
            }
            $entry = $entry.$next;
        }
        if ($entry === null) {
            $this.$modCount = $this.$modCount + 1 | 0;
            $entry = new ju_HashMap$HashEntry;
            $result = null;
            $entry.$key = $key;
            $entry.$value4 = $result;
            $entry.$origKeyHash = $hash;
            var$3 = $this.$elementData.data;
            $entry.$next = var$3[$index];
            var$3[$index] = $entry;
            var$6 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$6;
            if (var$6 > $this.$threshold)
                ju_HashMap_rehash($this, var$3.length);
        }
    }
    $result = $entry.$value4;
    $entry.$value4 = $value;
    return $result;
}
function ju_HashMap_rehash($this, $capacity) {
    var $length, $newData, var$4, $i, var$6, $entry, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $rt_createArray(ju_HashMap$HashEntry, $length);
    var$4 = $newData.data;
    $i = 0;
    $length = $length - 1 | 0;
    while (true) {
        var$6 = $this.$elementData.data;
        if ($i >= var$6.length)
            break;
        $entry = var$6[$i];
        var$6[$i] = null;
        while ($entry !== null) {
            $index = $entry.$origKeyHash & $length;
            $next = $entry.$next;
            $entry.$next = var$4[$index];
            var$4[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData = $newData;
    $this.$threshold = var$4.length * $this.$loadFactor | 0;
}
function ju_HashMap_removeEntry($this, $key) {
    var $index, $last, $entry, $entry_0, var$6, var$7, var$8;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData.data[0];
            while ($entry !== null) {
                if ($entry.$key === null)
                    break a;
                $entry_0 = $entry.$next;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            var$6 = $key.$value5;
            var$7 = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
            var$8 = $this.$elementData.data;
            $index = var$7 & (var$8.length - 1 | 0);
            $entry = var$8[$index];
            while ($entry !== null) {
                if ($entry.$origKeyHash == var$7) {
                    $entry_0 = $entry.$key;
                    if ($key !== $entry_0 && !($key === $entry_0 ? 1 : $entry_0 instanceof jl_Integer && $entry_0.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                        break;
                }
                $entry_0 = $entry.$next;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next = $entry.$next;
    else
        $this.$elementData.data[$index] = $entry.$next;
    $this.$modCount = $this.$modCount + 1 | 0;
    $this.$elementCount = $this.$elementCount - 1 | 0;
    return $entry;
}
function ju_HashMap_areEqualKeys($key1, $key2) {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
}
var ju_Comparator = $rt_classWithoutFields(0);
var jl_String$_clinit_$lambda$_89_0 = $rt_classWithoutFields();
var jl_Character = $rt_classWithoutFields();
var jl_Character_TYPE = null;
var jl_Character_digitMapping = null;
var jl_Character_upperCaseMapping = null;
var jl_Character_lowerCaseMapping = null;
var jl_Character_classMapping = null;
var jl_Character_characterCache = null;
var jl_Character_$$metadata$$0 = null;
var jl_Character_$$metadata$$1 = null;
var jl_Character_$$metadata$$3 = null;
var jl_Character_$$metadata$$4 = null;
function jl_Character_toString($c) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1).data;
    var$3[0] = $c;
    jl_String_$callClinit();
    $c = var$3.length;
    var$4 = $rt_createCharArray($c);
    var$5 = var$4.data;
    var$2.$characters = var$4;
    var$6 = 0;
    while (var$6 < $c) {
        var$5[var$6] = var$3[var$6];
        var$6 = var$6 + 1 | 0;
    }
    return var$2;
}
function jl_Character_toCodePoint($high, $low) {
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
}
function jl_Character_codePointAt($a, $index, $limit) {
    var var$4;
    if ($index < ($limit - 1 | 0)) {
        var$4 = $a.data;
        if ((var$4[$index] & 64512) != 55296 ? 0 : 1) {
            $limit = $index + 1 | 0;
            if ((var$4[$limit] & 64512) != 56320 ? 0 : 1)
                return ((var$4[$index] & 1023) << 10 | var$4[$limit] & 1023) + 65536 | 0;
        }
    }
    return $a.data[$index];
}
function jl_Character_highSurrogate($codePoint) {
    return (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
}
function jl_Character_lowSurrogate($codePoint) {
    return (56320 | $codePoint & 1023) & 65535;
}
function jl_Character_toLowerCase($ch) {
    var var$2, var$3;
    if (jl_Character_lowerCaseMapping === null) {
        if (jl_Character_$$metadata$$0 === null)
            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
    }
    a: {
        var$2 = jl_Character_lowerCaseMapping;
        var$3 = jl_Character_binarySearchTable(var$2, $ch);
        if (var$3 >= 0) {
            var$2 = var$2.data;
            if (var$3 < (var$2.length / 2 | 0)) {
                $ch = $ch + var$2[(var$3 * 2 | 0) + 1 | 0] | 0;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch & 65535;
}
function jl_Character_getLowerCaseMapping() {
    if (jl_Character_lowerCaseMapping === null) {
        if (jl_Character_$$metadata$$0 === null)
            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
    }
    return jl_Character_lowerCaseMapping;
}
function jl_Character_toUpperCase($ch) {
    var var$2, var$3;
    if (jl_Character_upperCaseMapping === null) {
        if (jl_Character_$$metadata$$1 === null)
            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
    }
    a: {
        var$2 = jl_Character_upperCaseMapping;
        var$3 = jl_Character_binarySearchTable(var$2, $ch);
        if (var$3 >= 0) {
            var$2 = var$2.data;
            if (var$3 < (var$2.length / 2 | 0)) {
                $ch = $ch + var$2[(var$3 * 2 | 0) + 1 | 0] | 0;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch & 65535;
}
function jl_Character_mapChar($table, $codePoint) {
    var $index;
    $index = jl_Character_binarySearchTable($table, $codePoint);
    if ($index >= 0) {
        $table = $table.data;
        if ($index < ($table.length / 2 | 0))
            return $codePoint + $table[($index * 2 | 0) + 1 | 0] | 0;
    }
    return 0;
}
function jl_Character_binarySearchTable($data, $key) {
    var $l, $u, $i, $e;
    $data = $data.data;
    $l = 0;
    $u = ($data.length / 2 | 0) - 1 | 0;
    while (true) {
        $i = ($l + $u | 0) / 2 | 0;
        $e = $rt_compare($data[$i * 2 | 0], $key);
        if (!$e)
            break;
        if ($e <= 0) {
            $l = $i + 1 | 0;
            if ($l > $u)
                return $i;
        } else {
            $u = $i - 1 | 0;
            if ($u < $l)
                return $u;
        }
    }
    return $i;
}
function jl_Character_getNumericValue($codePoint) {
    var $digitMapping, $l, $u, $idx, var$6, $val;
    if (jl_Character_digitMapping === null) {
        if (jl_Character_$$metadata$$3 === null)
            jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
        jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntPairsDiff((jl_Character_$$metadata$$3.value !== null ? $rt_str(jl_Character_$$metadata$$3.value) : null));
    }
    $digitMapping = jl_Character_digitMapping.data;
    $l = 0;
    $u = ($digitMapping.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$6 = $idx * 2 | 0;
        $val = $rt_compare($codePoint, $digitMapping[var$6]);
        if ($val > 0)
            $l = $idx + 1 | 0;
        else {
            if ($val >= 0)
                return $digitMapping[var$6 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
}
function jl_Character_forDigit($digit, $radix) {
    if ($radix >= 2 && $radix <= 36 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
}
function jl_Character_getType($codePoint) {
    var $l, $u, $classes, $i, $range;
    if ($codePoint > 0 && $codePoint <= 65535 ? 1 : 0) {
        $l = $codePoint & 65535 & 64512;
        $u = $l != 55296 ? 0 : 1;
        if (!$u && !($l != 56320 ? 0 : 1) ? 0 : 1)
            return 19;
    }
    if (jl_Character_classMapping === null) {
        if (jl_Character_$$metadata$$4 === null)
            jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle((jl_Character_$$metadata$$4.value !== null ? $rt_str(jl_Character_$$metadata$$4.value) : null));
    }
    $classes = jl_Character_classMapping.data;
    $l = 0;
    $u = $classes.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = $classes[$i];
        if ($codePoint >= $range.$end0)
            $l = $i + 1 | 0;
        else {
            $u = $range.$start1;
            if ($codePoint >= $u)
                return $range.$data1.data[$codePoint - $u | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
}
function jl_Character_isIdentifierIgnorable($codePoint) {
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
}
function jl_Character__clinit_() {
    jl_Character_TYPE = $rt_cls($rt_charcls());
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
}
function jl_Character_acquireLowerCaseMapping$$create() {
    return {"value" : ">W  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
    + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 o$#mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
    + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%# #%"
    + "# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# -%# +%# #%# Y%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# *J#F#b o@5F#b Jo=N#f "};
}
function jl_Character_acquireUpperCaseMapping$$create() {
    return {"value" : "<Y  ,%H#U :#>b# v
    + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3# #:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# "
    + "#\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d1 (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
    + "\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# +X%# +\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#A1 1A1 1A1 1A1 1A1 3A# #A# #A# #A% /A1 16\'%g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'# #\'# #\'# -"
    + "\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
    + " #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'- #\'% )\'# #\'S )\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#<% Vlm%:# RH#H#b o@5H#b No=P#f "};
}
function jl_Character_obtainDigitMapping$$create() {
    return {"value" : "&C*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%BhG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%!dG%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%*0EG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%28UG%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%"
    + "%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%>&#G%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
}
function jl_Character_obtainClasses$$create() {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A\'G)FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"
    + " F#A#\' I$G#A%G#A#G$A$\'A(F% &A(J+G#F$\'9A+G#) F* F$ F7 F( F# F&A#\'&I$G& G#) I#\'A#&A0F#G#A#J+9;A(&G\' \'I# F)A#F#A#F7 F( F# F&A#\'&)\')G%A#I#A#I#\'A(G#)A%F# F$G#A#J+=&L\'A+\'& F\'A$F$ F%A$F# & F#A$F#A$F$A$F-A%I#\'I#A$I$ I$\'A#&A\')A/J+L$^\';=A&\'I$\'F) F$ F8 F1A#\'&G$I% G$ G%A(G# F$A#&A#F#G#A#J+A(9L(=&\'I#9F) F$ F8 F+ F&A#\'&)\'I& \'I# I#G#A(I#A\'F# F#G#A#J+ F#)A-G#I#F* F$ FJG#&I$G% I$ I$\'&=A%F$)L(F$G#A#J+L*=F\' \'I# F3A$F9 F* &A#F(A$\'A%I$G$ \' I)A\'J+A#I#9A-FQ\'F#G(A%;F\'%G)9J+Y#AFF# & F& F9 & F+\'F#G*&A#F& % G( J+A#F%AA&^$Y0=9^$G#^\'J+"
    + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F)A$J+Y(^+G*^*Y# G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
    + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*A(BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0G."
    + "H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^gA:^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?67676767Y"
    + "&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^-A%-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^EA-F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#A&!# # #!#!#A9E$!#&E##F(\'F"
    + "$\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F\'A#F\'A#"
    + "F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#Aeb&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+b G% L@ FK G#5A#F#AmG$F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+"
    + "A\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&b ,# FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+AWF<A#G$I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W$ F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF("
    + " F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+b 7! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0b K` b&(* b Z\'#b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q+ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AK&A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =*!GOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) "
    + "B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b G, F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^#Apb=5& A"
    + "-^/A#^.A$^*A(^O ^(A)^/A%^*A(^*A(b=4#  ^XAFJ+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&b @Q b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
}
var cgxgbta_TeaWebAgent = $rt_classWithoutFields();
function cgxgbta_TeaWebAgent_createAgent$js_body$_1() {
    var userAgent = $rt_globals.navigator.userAgent.toLowerCase();
    return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1, userAgent : userAgent };
}
var jl_System = $rt_classWithoutFields();
var jl_System_outCache = null;
var jl_System_errCache = null;
var jl_System_properties = null;
function jl_System_arraycopy($src, $srcPos, $dest, $destPos, $length) {
    var var$6, $elem, $targetType, $srcType, $srcArray, $i, var$12, var$13, var$14, var$15;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
            a: {
                b: {
                    if ($src !== $dest) {
                        var$6 = $src.constructor;
                        if (var$6 === null)
                            $elem = null;
                        else {
                            $elem = var$6.classObject;
                            if ($elem === null) {
                                $elem = new jl_Class;
                                $elem.$platformClass = var$6;
                                $targetType = $elem;
                                var$6.classObject = $targetType;
                            }
                        }
                        $srcType = jl_Class_getComponentType($elem);
                        var$6 = $dest.constructor;
                        if (var$6 === null)
                            $elem = null;
                        else {
                            $elem = var$6.classObject;
                            if ($elem === null) {
                                $elem = new jl_Class;
                                $elem.$platformClass = var$6;
                                $targetType = $elem;
                                var$6.classObject = $targetType;
                            }
                        }
                        $targetType = jl_Class_getComponentType($elem);
                        if ($srcType !== null && $targetType !== null) {
                            if ($srcType === $targetType)
                                break b;
                            if (!($srcType.$platformClass.$meta.primitive ? 1 : 0) && !($targetType.$platformClass.$meta.primitive ? 1 : 0)) {
                                $srcArray = $src;
                                $i = 0;
                                var$12 = $srcPos;
                                while ($i < $length) {
                                    var$13 = $srcArray.data;
                                    var$14 = var$12 + 1 | 0;
                                    var$6 = var$13[var$12];
                                    var$15 = $targetType.$platformClass;
                                    if (!(var$6 !== null && !(typeof var$6.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable(var$6.constructor, var$15) ? 1 : 0)) {
                                        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                        $src = new jl_ArrayStoreException;
                                        $src.$suppressionEnabled = 1;
                                        $src.$writableStackTrace = 1;
                                        $rt_throw($src);
                                    }
                                    $i = $i + 1 | 0;
                                    var$12 = var$14;
                                }
                                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                return;
                            }
                            if (!($srcType.$platformClass.$meta.primitive ? 1 : 0))
                                break a;
                            if ($targetType.$platformClass.$meta.primitive ? 1 : 0)
                                break b;
                            else
                                break a;
                        }
                        $src = new jl_ArrayStoreException;
                        $src.$suppressionEnabled = 1;
                        $src.$writableStackTrace = 1;
                        $rt_throw($src);
                    }
                }
                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                return;
            }
            $src = new jl_ArrayStoreException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $rt_throw($src);
        }
        $src = new jl_IndexOutOfBoundsException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    $dest = new jl_NullPointerException;
    $dest.$suppressionEnabled = 1;
    $dest.$writableStackTrace = 1;
    $dest.$message = $rt_s(105);
    $rt_throw($dest);
}
function jl_System_doArrayCopy(var$1, var$2, var$3, var$4, var$5) {
    if (var$1 !== var$3 || var$4 < var$2) {
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[var$4++] = var$1.data[var$2++];
        }
    } else {
        var$2 = (var$2 + var$5) | 0;
        var$4 = (var$4 + var$5) | 0;
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[--var$4] = var$1.data[--var$2];
        }
    }
}
function jl_System_currentTimeMillis() {
    return Long_fromNumber(new Date().getTime());
}
function jl_System_initPropertiesIfNeeded() {
    var $defaults, var$2;
    if (jl_System_properties === null) {
        $defaults = new ju_Properties;
        ju_Hashtable__init_($defaults, 11);
        ju_Hashtable_put($defaults, $rt_s(106), $rt_s(107));
        ju_Hashtable_put($defaults, $rt_s(85), $rt_s(108));
        ju_Hashtable_put($defaults, $rt_s(109), $rt_s(110));
        ju_Hashtable_put($defaults, $rt_s(111), $rt_s(112));
        ju_Hashtable_put($defaults, $rt_s(113), $rt_s(114));
        ju_Hashtable_put($defaults, $rt_s(115), $rt_s(116));
        ju_Hashtable_put($defaults, $rt_s(117), $rt_s(107));
        ju_Hashtable_put($defaults, $rt_s(118), $rt_s(110));
        var$2 = new ju_Properties;
        ju_Hashtable__init_(var$2, 11);
        var$2.$defaults = $defaults;
        jl_System_properties = var$2;
    }
}
function jl_System_setProperty($key, $value) {
    jl_System_initPropertiesIfNeeded();
    return ju_Hashtable_put(jl_System_properties, $key, $value);
}
var cgxgbtp_AssetDownloader$AssetDownload = $rt_classWithoutFields(0);
function cgxgbtp_AssetDownloadImpl() {
    var a = this; jl_Object.call(a);
    a.$queue = 0;
    a.$useBrowserCache = 0;
    a.$useInlineBase64 = 0;
    a.$showLogs = 0;
}
function cgxgbtp_AssetDownloadImpl_getQueue($this) {
    return $this.$queue;
}
function cgxgbtp_AssetDownloadImpl_load($this, $async, $url, $type, $mimeType, $listener) {
    var var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    a: {
        cgxgbtp_AssetDownloadImpl$7_$callClinit();
        switch (cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[$type.$ordinal]) {
            case 1:
                if ($this.$showLogs) {
                    if (jl_System_outCache === null) {
                        $mimeType = new ji_PrintStream;
                        $mimeType.$out = otcic_StdoutOutputStream_INSTANCE;
                        $type = new jl_StringBuilder;
                        $type.$buffer = $rt_createCharArray(16);
                        $mimeType.$sb = $type;
                        $mimeType.$buffer2 = $rt_createCharArray(32);
                        $mimeType.$autoFlush = 0;
                        jnci_UTF8Charset_$callClinit();
                        $mimeType.$charset = jnci_UTF8Charset_INSTANCE;
                        jl_System_outCache = $mimeType;
                    }
                    $mimeType = jl_System_outCache;
                    var$6 = new jl_StringBuilder;
                    var$6.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(119));
                    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $url === null ? $rt_s(1) : $url);
                    $type = new jl_String;
                    var$7 = var$6.$buffer;
                    var$8 = var$6.$length;
                    jl_String_$callClinit();
                    var$9 = $rt_createCharArray(var$8);
                    var$10 = var$9.data;
                    $type.$characters = var$9;
                    var$11 = 0;
                    while (var$11 < var$8) {
                        var$10[var$11] = var$7.data[var$11 + 0 | 0];
                        var$11 = var$11 + 1 | 0;
                    }
                    var$6 = $mimeType.$sb;
                    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $type);
                    var$12 = var$6.$length;
                    jl_AbstractStringBuilder_insertSpace(var$6, var$12, var$12 + 1 | 0);
                    var$6.$buffer.data[var$12] = 10;
                    ji_PrintStream_printSB($mimeType);
                }
                $this.$queue = $this.$queue + 1 | 0;
                $type = new cgxgbtp_AssetDownloadImpl$1;
                $type.$this$05 = $this;
                $type.$val$async = $async;
                $type.$val$url = $url;
                $type.$val$listener = $listener;
                jl_Thread_$callClinit();
                $url = null;
                $mimeType = null;
                $type.$finishedLock = new jl_Object;
                $type.$alive = 1;
                $type.$name2 = $mimeType;
                $type.$target = $url;
                var$11 = jl_Thread_nextId;
                jl_Thread_nextId = var$11 + 1 | 0;
                $type.$id1 = Long_fromInt(var$11);
                $url = new jl_Thread$start$lambda$_4_0;
                $url.$_01 = $type;
                otp_Platform_startThread($url);
                break a;
            case 2:
                $type = null;
                var$6 = new cgxgbtp_AssetDownloadImpl$5;
                var$6.$this$06 = $this;
                var$6.$val$listener0 = $listener;
                var$6.$val$crossOrigin = $type;
                var$6.$val$mimeType = $mimeType;
                if ($this.$showLogs) {
                    if (jl_System_outCache === null) {
                        $mimeType = new ji_PrintStream;
                        $mimeType.$out = otcic_StdoutOutputStream_INSTANCE;
                        $type = new jl_StringBuilder;
                        jl_Object__init_0($type);
                        $type.$buffer = $rt_createCharArray(16);
                        $mimeType.$sb = $type;
                        $mimeType.$buffer2 = $rt_createCharArray(32);
                        $mimeType.$autoFlush = 0;
                        jnci_UTF8Charset_$callClinit();
                        $mimeType.$charset = jnci_UTF8Charset_INSTANCE;
                        jl_System_outCache = $mimeType;
                    }
                    $listener = jl_System_outCache;
                    $type = new jl_StringBuilder;
                    $type.$buffer = $rt_createCharArray(16);
                    jl_StringBuilder_insert($type, $type.$length, jl_String_toString($rt_s(119)));
                    jl_StringBuilder_insert($type, $type.$length, $url === null ? $rt_s(1) : jl_String_toString($url));
                    $mimeType = jl_String__init_1($type.$buffer, 0, $type.$length);
                    $type = $listener.$sb;
                    jl_AbstractStringBuilder_insert($type, $type.$length, $mimeType);
                    jl_AbstractStringBuilder_insert4($type, $type.$length, 10);
                    ji_PrintStream_printSB($listener);
                }
                $this.$queue = $this.$queue + 1 | 0;
                $type = new cgxgbtp_AssetDownloadImpl$4;
                $type.$this$07 = $this;
                $type.$val$async0 = $async;
                $type.$val$url0 = $url;
                $type.$val$listener1 = var$6;
                jl_Thread_$callClinit();
                $url = null;
                $mimeType = null;
                $type.$finishedLock = new jl_Object;
                $type.$alive = 1;
                $type.$name2 = $mimeType;
                $type.$target = $url;
                var$11 = jl_Thread_nextId;
                jl_Thread_nextId = var$11 + 1 | 0;
                $type.$id1 = Long_fromInt(var$11);
                $url = new jl_Thread$start$lambda$_4_0;
                $url.$_01 = $type;
                otp_Platform_startThread($url);
                break a;
            case 3:
                break;
            case 4:
                cgxgbtp_AssetDownloadImpl_loadAudio($this, $async, $url, $listener);
                break a;
            case 5:
                cgxgbtp_Preloader$7_onSuccess($listener, $url, null);
                break a;
            default:
                $url = new cbgu_GdxRuntimeException;
                $mimeType = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_0($mimeType);
                jl_StringBuilder_append(jl_StringBuilder_append($mimeType, $rt_s(120)), $type);
                cbgu_GdxRuntimeException__init_($url, jl_StringBuilder_toString($mimeType));
                $rt_throw($url);
        }
        cgxgbtp_AssetDownloadImpl_loadBinary($this, $async, $url, $listener);
    }
}
function cgxgbtp_AssetDownloadImpl_loadText($this, $async, $url, $listener) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    if ($this.$showLogs) {
        if (jl_System_outCache === null) {
            var$4 = new ji_PrintStream;
            var$4.$out = otcic_StdoutOutputStream_INSTANCE;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            var$4.$sb = var$5;
            var$4.$buffer2 = $rt_createCharArray(32);
            var$4.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$4.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_outCache = var$4;
        }
        var$4 = jl_System_outCache;
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(119));
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $url === null ? $rt_s(1) : $url);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        var$9 = var$6.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray(var$9);
        var$11 = var$10.data;
        var$7.$characters = var$10;
        var$12 = 0;
        while (var$12 < var$9) {
            var$11[var$12] = var$8.data[var$12 + 0 | 0];
            var$12 = var$12 + 1 | 0;
        }
        var$5 = var$4.$sb;
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, var$7);
        var$12 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, var$12, var$12 + 1 | 0);
        var$5.$buffer.data[var$12] = 10;
        ji_PrintStream_printSB(var$4);
    }
    $this.$queue = $this.$queue + 1 | 0;
    var$5 = new cgxgbtp_AssetDownloadImpl$1;
    var$5.$this$05 = $this;
    var$5.$val$async = $async;
    var$5.$val$url = $url;
    var$5.$val$listener = $listener;
    jl_Thread_$callClinit();
    $url = null;
    $listener = null;
    var$5.$finishedLock = new jl_Object;
    var$5.$alive = 1;
    var$5.$name2 = $listener;
    var$5.$target = $url;
    var$13 = jl_Thread_nextId;
    jl_Thread_nextId = var$13 + 1 | 0;
    var$5.$id1 = Long_fromInt(var$13);
    $url = new jl_Thread$start$lambda$_4_0;
    $url.$_01 = var$5;
    otp_Platform_startThread($url);
}
function cgxgbtp_AssetDownloadImpl_loadScript($this, $async, $url, $listener) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    if ($this.$showLogs) {
        if (jl_System_outCache === null) {
            var$4 = new ji_PrintStream;
            var$4.$out = otcic_StdoutOutputStream_INSTANCE;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            var$4.$sb = var$5;
            var$4.$buffer2 = $rt_createCharArray(32);
            var$4.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$4.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_outCache = var$4;
        }
        var$4 = jl_System_outCache;
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(121));
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $url === null ? $rt_s(1) : $url);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        var$9 = var$6.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray(var$9);
        var$11 = var$10.data;
        var$7.$characters = var$10;
        var$12 = 0;
        while (var$12 < var$9) {
            var$11[var$12] = var$8.data[var$12 + 0 | 0];
            var$12 = var$12 + 1 | 0;
        }
        var$5 = var$4.$sb;
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, var$7);
        var$12 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, var$12, var$12 + 1 | 0);
        var$5.$buffer.data[var$12] = 10;
        ji_PrintStream_printSB(var$4);
    }
    $this.$queue = $this.$queue + 1 | 0;
    var$4 = new $rt_globals.XMLHttpRequest();
    var$5 = new cgxgbtp_AssetDownloadImpl$2;
    var$5.$this$08 = $this;
    var$5.$val$request = var$4;
    var$5.$val$async1 = $async;
    var$5.$val$url1 = $url;
    var$5.$val$listener2 = $listener;
    var$5 = otji_JS_function(var$5, "handleEvent");
    var$4.onreadystatechange = var$5;
    var$5 = new cgxgbtp_AssetDownloadImpl$6;
    var$5.$this$09 = $this;
    var$5.$val$listener3 = $listener;
    $listener = otji_JS_function(var$5, "handleEvent");
    var$4.onprogress = $listener;
    var$4.open("GET", $rt_ustr($url), !!$async);
    var$4.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
    var$4.send();
}
function cgxgbtp_AssetDownloadImpl_loadAudio($this, $async, $url, $listener) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    var$4 = new cgxgbtp_AssetDownloadImpl$3;
    var$4.$this$010 = $this;
    var$4.$val$listener4 = $listener;
    if ($this.$showLogs) {
        if (jl_System_outCache === null) {
            var$5 = new ji_PrintStream;
            var$5.$out = otcic_StdoutOutputStream_INSTANCE;
            $listener = new jl_StringBuilder;
            $listener.$buffer = $rt_createCharArray(16);
            var$5.$sb = $listener;
            var$5.$buffer2 = $rt_createCharArray(32);
            var$5.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$5.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_outCache = var$5;
        }
        var$5 = jl_System_outCache;
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(119));
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $url === null ? $rt_s(1) : $url);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        var$9 = var$6.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray(var$9);
        var$11 = var$10.data;
        var$7.$characters = var$10;
        var$12 = 0;
        while (var$12 < var$9) {
            var$11[var$12] = var$8.data[var$12 + 0 | 0];
            var$12 = var$12 + 1 | 0;
        }
        $listener = var$5.$sb;
        jl_AbstractStringBuilder_insert($listener, $listener.$length, var$7);
        var$13 = $listener.$length;
        jl_AbstractStringBuilder_insertSpace($listener, var$13, var$13 + 1 | 0);
        $listener.$buffer.data[var$13] = 10;
        ji_PrintStream_printSB(var$5);
    }
    $this.$queue = $this.$queue + 1 | 0;
    $listener = new cgxgbtp_AssetDownloadImpl$4;
    $listener.$this$07 = $this;
    $listener.$val$async0 = $async;
    $listener.$val$url0 = $url;
    $listener.$val$listener1 = var$4;
    jl_Thread_$callClinit();
    $url = null;
    var$5 = null;
    $listener.$finishedLock = new jl_Object;
    $listener.$alive = 1;
    $listener.$name2 = var$5;
    $listener.$target = $url;
    var$14 = jl_Thread_nextId;
    jl_Thread_nextId = var$14 + 1 | 0;
    $listener.$id1 = Long_fromInt(var$14);
    $url = new jl_Thread$start$lambda$_4_0;
    $url.$_01 = $listener;
    otp_Platform_startThread($url);
}
function cgxgbtp_AssetDownloadImpl_loadBinary($this, $async, $url, $listener) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    if ($this.$showLogs) {
        if (jl_System_outCache === null) {
            var$4 = new ji_PrintStream;
            var$4.$out = otcic_StdoutOutputStream_INSTANCE;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            var$4.$sb = var$5;
            var$4.$buffer2 = $rt_createCharArray(32);
            var$4.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$4.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_outCache = var$4;
        }
        var$4 = jl_System_outCache;
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(119));
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $url === null ? $rt_s(1) : $url);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        var$9 = var$6.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray(var$9);
        var$11 = var$10.data;
        var$7.$characters = var$10;
        var$12 = 0;
        while (var$12 < var$9) {
            var$11[var$12] = var$8.data[var$12 + 0 | 0];
            var$12 = var$12 + 1 | 0;
        }
        var$5 = var$4.$sb;
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, var$7);
        var$12 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, var$12, var$12 + 1 | 0);
        var$5.$buffer.data[var$12] = 10;
        ji_PrintStream_printSB(var$4);
    }
    $this.$queue = $this.$queue + 1 | 0;
    var$5 = new cgxgbtp_AssetDownloadImpl$4;
    var$5.$this$07 = $this;
    var$5.$val$async0 = $async;
    var$5.$val$url0 = $url;
    var$5.$val$listener1 = $listener;
    jl_Thread_$callClinit();
    $url = null;
    $listener = null;
    var$5.$finishedLock = new jl_Object;
    var$5.$alive = 1;
    var$5.$name2 = $listener;
    var$5.$target = $url;
    var$13 = jl_Thread_nextId;
    jl_Thread_nextId = var$13 + 1 | 0;
    var$5.$id1 = Long_fromInt(var$13);
    $url = new jl_Thread$start$lambda$_4_0;
    $url.$_01 = var$5;
    otp_Platform_startThread($url);
}
var cgxgbtp_AssetDownloader = $rt_classWithoutFields();
var cgxgbtp_AssetDownloader_instance = null;
function cgxgbtp_AssetDownloader_getInstance() {
    return cgxgbtp_AssetDownloader_instance;
}
var cbg_Graphics = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics() {
    var a = this; jl_Object.call(a);
    a.$context = null;
    a.$canvas0 = null;
    a.$config0 = null;
    a.$gl = null;
    a.$glVersion = null;
    a.$fps = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$time = 0.0;
    a.$frames = 0;
}
function cgxgbt_TeaGraphics__init_(var_0) {
    var var_1 = new cgxgbt_TeaGraphics();
    cgxgbt_TeaGraphics__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaGraphics__init_0($this, $config) {
    var $rendererString, $versionString, $elementID, $vendorString, $currentWindow, $width, $height, $density;
    $this.$fps = 0.0;
    $this.$lastTimeStamp = jl_System_currentTimeMillis();
    $this.$frameId = Long_fromInt(-1);
    $this.$deltaTime = 0.0;
    $this.$time = 0.0;
    $this.$config0 = $config;
    cgxgbtdi_TeaWindow_$callClinit();
    $rendererString = $rt_globals.window.document;
    $versionString = $config.$canvasID;
    $elementID = $rendererString.getElementById($rt_ustr($versionString));
    $this.$canvas0 = $elementID;
    $versionString = cgxgbt_TeaGraphics_getGLContext($this, $elementID, $config);
    $this.$context = $versionString;
    if (!$config.$useDebugGL)
        $vendorString = cgxgbt_TeaGL20__init_($versionString);
    else {
        $vendorString = new cgxgbt_TeaGL20Debug;
        cgxgbt_TeaGL20__init_0($vendorString, $versionString);
    }
    $this.$gl = $vendorString;
    $versionString = $vendorString.$glGetString(7938);
    $vendorString = $this.$gl.$glGetString(7936);
    $rendererString = $this.$gl.$glGetString(7937);
    $currentWindow = new cbggg_GLVersion;
    cbg_Application$ApplicationType_$callClinit();
    cbggg_GLVersion__init_($currentWindow, cbg_Application$ApplicationType_WebGL, $versionString, $vendorString, $rendererString);
    $this.$glVersion = $currentWindow;
    $width = $config.$width;
    if (!($width < 0 && $config.$height < 0)) {
        if ($width && $config.$height ? 1 : 0)
            cgxgbt_TeaGraphics_setCanvasSize($this, $width, $config.$height);
        else {
            $currentWindow = cgxgbtdi_TeaWindow_TEA_WINDOW;
            $width = $currentWindow.$window0.document.documentElement.clientWidth - $config.$padHorizontal | 0;
            $height = $currentWindow.$window0.document.documentElement.clientHeight - $config.$padVertical | 0;
            $density = !$config.$usePhysicalPixels ? 1.0 : $rt_globals.devicePixelRatio || 1;
            cgxgbt_TeaGraphics_setCanvasSize($this, $density * $width | 0, $density * $height | 0);
        }
    }
    $config = $this.$canvas0;
    $versionString = new cgxgbt_TeaGraphics$1;
    $versionString.$this$011 = $this;
    cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61($config, otji_JS_function($versionString, "fullscreenChanged"));
}
function cgxgbt_TeaGraphics_update($this) {
    var $currTimeStamp, var$2, var$3;
    $currTimeStamp = jl_System_currentTimeMillis();
    var$2 = Long_toNumber(Long_sub($currTimeStamp, $this.$lastTimeStamp)) / 1000.0;
    $this.$deltaTime = var$2;
    $this.$lastTimeStamp = $currTimeStamp;
    var$2 = $this.$time + var$2;
    $this.$time = var$2;
    var$3 = $this.$frames + 1 | 0;
    $this.$frames = var$3;
    if (var$2 > 1.0) {
        $this.$fps = var$3;
        $this.$time = 0.0;
        $this.$frames = 0;
    }
}
function cgxgbt_TeaGraphics_getGL20($this) {
    return $this.$gl;
}
function cgxgbt_TeaGraphics_getWidth($this) {
    return $this.$canvas0.width;
}
function cgxgbt_TeaGraphics_getHeight($this) {
    return $this.$canvas0.height;
}
function cgxgbt_TeaGraphics_getFramesPerSecond($this) {
    return $this.$fps | 0;
}
function cgxgbt_TeaGraphics_setCanvasSize($this, $width, $height) {
    var var$3, $style, $density, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    var$3 = $this.$canvas0;
    $style = $width;
    var$3.width = $style;
    var$3 = $this.$canvas0;
    $style = $height;
    var$3.height = $style;
    if ($this.$config0.$usePhysicalPixels) {
        $density = $rt_globals.devicePixelRatio || 1;
        $style = $this.$canvas0.style;
        var$6 = $width / $density;
        cgxgbtd_StyleWrapper$Unit_$callClinit();
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert3(var$7, var$7.$length, var$6);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(122));
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        var$10 = var$7.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray(var$10);
        var$12 = var$11.data;
        var$8.$characters = var$11;
        var$13 = 0;
        while (var$13 < var$10) {
            var$12[var$13] = var$9.data[var$13 + 0 | 0];
            var$13 = var$13 + 1 | 0;
        }
        $style.setProperty("width", $rt_ustr(var$8));
        $density = $height / $density;
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert3(var$7, var$7.$length, $density);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(122));
        var$3 = new jl_String;
        var$9 = var$7.$buffer;
        var$10 = var$7.$length;
        var$11 = $rt_createCharArray(var$10);
        var$12 = var$11.data;
        var$3.$characters = var$11;
        var$13 = 0;
        while (var$13 < var$10) {
            var$12[var$13] = var$9.data[var$13 + 0 | 0];
            var$13 = var$13 + 1 | 0;
        }
        $style.setProperty("height", $rt_ustr(var$3));
    }
}
function cgxgbt_TeaGraphics_getGLContext($this, $canvas, $config) {
    var $attr, var$4, var$5;
    $attr = otjw_WebGLContextAttributes_create$js_body$_13();
    var$4 = !!$config.$alpha;
    $attr.alpha = var$4;
    var$5 = !!$config.$antialiasing;
    $attr.antialias = var$5;
    var$4 = !!$config.$stencil;
    $attr.stencil = var$4;
    var$4 = !!$config.$premultipliedAlpha;
    $attr.premultipliedAlpha = var$4;
    $config = !!$config.$preserveDrawingBuffer;
    $attr.preserveDrawingBuffer = $config;
    return $canvas.getContext("webgl", $attr);
}
function cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61(var$1, var$2) {
    if (var$1.requestFullscreen) {
        $rt_globals.document.addEventListener("fullscreenchange", var$2, false);
    }
    if (var$1.webkitRequestFullScreen) {
        $rt_globals.document.addEventListener("webkitfullscreenchange", var$2, false);
    }
    if (var$1.mozRequestFullScreen) {
        $rt_globals.document.addEventListener("mozfullscreenchange", var$2, false);
    }
    if (var$1.msRequestFullscreen) {
        $rt_globals.document.addEventListener("msfullscreenchange", var$2, false);
    }
}
function cgxgbtp_Preloader() {
    var a = this; jl_Object.call(a);
    a.$directories = null;
    a.$images = null;
    a.$audio0 = null;
    a.$texts = null;
    a.$binaries = null;
    a.$assets = null;
    a.$assetTotal = 0;
    a.$baseUrl = null;
}
function cgxgbtp_Preloader__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbtp_Preloader();
    cgxgbtp_Preloader__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbtp_Preloader__init_0($this, $newBaseURL, $canvas, $teaApplication) {
    var var$4;
    $this.$directories = cbgu_ObjectMap__init_(51, 0.800000011920929);
    $this.$images = cbgu_ObjectMap__init_(51, 0.800000011920929);
    $this.$audio0 = cbgu_ObjectMap__init_(51, 0.800000011920929);
    $this.$texts = cbgu_ObjectMap__init_(51, 0.800000011920929);
    $this.$binaries = cbgu_ObjectMap__init_(51, 0.800000011920929);
    var$4 = new cbgu_Array;
    var$4.$ordered = 1;
    var$4.$items = $rt_createArray(jl_Object, 16);
    $this.$assets = var$4;
    $this.$assetTotal = (-1);
    $this.$baseUrl = $newBaseURL;
    cgxgbtp_Preloader_setupFileDrop($this, $canvas, $teaApplication);
}
function cgxgbtp_Preloader_setupFileDrop($this, $canvas, $teaApplication) {
    var $config, $document, var$5;
    $config = $teaApplication.$config;
    if ($config.$windowListener !== null) {
        $document = $canvas.ownerDocument;
        var$5 = new cgxgbtp_Preloader$1;
        var$5.$this$012 = $this;
        $document.addEventListener("dragenter", otji_JS_function(var$5, "handleEvent"), !!0);
        var$5 = new cgxgbtp_Preloader$2;
        var$5.$this$013 = $this;
        $document.addEventListener("dragover", otji_JS_function(var$5, "handleEvent"), !!0);
        var$5 = new cgxgbtp_Preloader$3;
        var$5.$this$014 = $this;
        var$5.$val$teaApplication = $teaApplication;
        var$5.$val$config = $config;
        $document.addEventListener("drop", otji_JS_function(var$5, "handleEvent"));
    }
}
function cgxgbtp_Preloader_loadSingleAsset($this, $asset) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
    if (cgxgbtp_Preloader_contains($this, $asset.$url)) {
        $asset.$loaded = $asset.$size3;
        $asset.$succeed = 1;
        $asset.$failed = 0;
        $asset.$isLoading = 0;
        return 0;
    }
    if ($asset.$isLoading)
        return 0;
    $asset.$failed = 0;
    $asset.$succeed = 0;
    $asset.$isLoading = 1;
    var$2 = $asset.$url;
    var$3 = $asset.$type1;
    var$4 = $asset.$mimeType;
    var$5 = new cgxgbtp_Preloader$5;
    var$5.$this$015 = $this;
    var$5.$val$asset = $asset;
    var$6 = cgxgbtp_AssetDownloader_instance;
    $asset = $this.$baseUrl;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$8 = var$7.$length;
    if ($asset === null)
        $asset = $rt_s(1);
    jl_StringBuilder_insert2(var$7, var$8, $asset);
    jl_StringBuilder_insert2(var$7, var$7.$length, $rt_s(92));
    $asset = new jl_String;
    var$9 = var$7.$buffer;
    var$10 = var$7.$length;
    jl_String_$callClinit();
    var$11 = $rt_createCharArray(var$10);
    var$12 = var$11.data;
    $asset.$characters = var$11;
    var$13 = 0;
    while (var$13 < var$10) {
        var$12[var$13] = var$9.data[var$13 + 0 | 0];
        var$13 = var$13 + 1 | 0;
    }
    var$14 = new jl_StringBuilder;
    var$14.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$14, var$14.$length, $asset);
    jl_AbstractStringBuilder_insert(var$14, var$14.$length, var$2 === null ? $rt_s(1) : var$2);
    var$7 = new jl_String;
    var$9 = var$14.$buffer;
    var$15 = var$14.$length;
    var$11 = $rt_createCharArray(var$15);
    var$12 = var$11.data;
    var$7.$characters = var$11;
    var$13 = 0;
    while (var$13 < var$15) {
        var$12[var$13] = var$9.data[var$13 + 0 | 0];
        var$13 = var$13 + 1 | 0;
    }
    $asset = new cgxgbtp_Preloader$7;
    $asset.$this$016 = $this;
    $asset.$val$listener5 = var$5;
    $asset.$val$type = var$3;
    $asset.$val$url2 = var$2;
    cgxgbtp_AssetDownloadImpl_load(var$6, 1, var$7, var$3, var$4, $asset);
    return 1;
}
function cgxgbtp_Preloader_putAssetInMap($this, $type, $url, $result) {
    a: {
        cgxgbtp_Preloader$12_$callClinit();
        switch (cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[$type.$ordinal]) {
            case 1:
                break;
            case 2:
                cbgu_ObjectMap_put($this.$images, $url, $result);
                break a;
            case 3:
                cbgu_ObjectMap_put($this.$binaries, $url, $result);
                break a;
            case 4:
                cbgu_ObjectMap_put($this.$audio0, $url, $result);
                break a;
            case 5:
                cbgu_ObjectMap_put($this.$directories, $url, null);
                break a;
            default:
                break a;
        }
        cbgu_ObjectMap_put($this.$texts, $url, $result);
    }
}
function cgxgbtp_Preloader_read($this, $url) {
    var var$2, var$3, var$4, var$5, $$je;
    if (cbgu_ObjectMap_locateKey($this.$texts, $url) < 0 ? 0 : 1) {
        a: {
            try {
                var$2 = ji_ByteArrayInputStream__init_(jl_String_getBytes(cbgu_ObjectMap_get($this.$texts, $url), $rt_s(123)));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_UnsupportedEncodingException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$2;
        }
        return null;
    }
    if (cbgu_ObjectMap_locateKey($this.$images, $url) < 0 ? 0 : 1) {
        $url = new ji_ByteArrayInputStream;
        var$3 = $rt_createByteArray(1);
        var$4 = var$3.data.length;
        $url.$buf = var$3;
        $url.$pos = 0;
        $url.$mark0 = 0;
        $url.$count0 = 0 + var$4 | 0;
        return $url;
    }
    if (cbgu_ObjectMap_locateKey($this.$binaries, $url) < 0 ? 0 : 1) {
        var$2 = $this.$binaries;
        var$5 = cbgu_ObjectMap_locateKey(var$2, $url);
        $url = var$5 < 0 ? null : var$2.$valueTable.data[var$5];
        var$2 = new cgxgbtp_Blob$1;
        var$2.$this$017 = $url;
        return var$2;
    }
    if (!(cbgu_ObjectMap_locateKey($this.$audio0, $url) < 0 ? 0 : 1))
        return null;
    $url = new ji_ByteArrayInputStream;
    var$3 = $rt_createByteArray(1);
    var$4 = var$3.data.length;
    $url.$buf = var$3;
    $url.$pos = 0;
    $url.$mark0 = 0;
    $url.$count0 = 0 + var$4 | 0;
    return $url;
}
function cgxgbtp_Preloader_contains($this, $file) {
    var var$2;
    var$2 = cbgu_ObjectMap_locateKey($this.$texts, $file) < 0 ? 0 : 1;
    return !var$2 && !(cbgu_ObjectMap_locateKey($this.$images, $file) < 0 ? 0 : 1) && !(cbgu_ObjectMap_locateKey($this.$binaries, $file) < 0 ? 0 : 1) && !(cbgu_ObjectMap_locateKey($this.$audio0, $file) < 0 ? 0 : 1) && !(cbgu_ObjectMap_locateKey($this.$directories, $file) < 0 ? 0 : 1) ? 0 : 1;
}
var cgxgbt_AssetLoaderListener = $rt_classWithoutFields();
function cgxgbt_AssetLoaderListener_onProgress($this, $amount) {}
function cgxgbt_AssetLoaderListener_onFailure($this, $url) {}
var cbg_Input = $rt_classWithoutFields(0);
var cgxgbtd_EventListenerWrapper = $rt_classWithoutFields(0);
function cgxgbt_TeaInput() {
    var a = this; jl_Object.call(a);
    a.$canvas1 = null;
    a.$justTouched = 0;
    a.$touchMap = null;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$pressedButtons = null;
    a.$pressedKeyCount = 0;
    a.$pressedKeys = null;
    a.$keyJustPressed = 0;
    a.$justPressedKeys = null;
    a.$justPressedButtons = null;
    a.$keysToCatch = null;
    a.$processor = null;
    a.$currentEventTimeStamp = Long_ZERO;
    a.$hasFocus = 0;
}
function cgxgbt_TeaInput__init_(var_0) {
    var var_1 = new cgxgbt_TeaInput();
    cgxgbt_TeaInput__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaInput_getMouseWheelVelocity($event) {
    var $agent, $delta, $detail, $wheelDelta;
    $agent = cgxgbt_TeaApplication_agentInfo;
    $delta = 0.0;
    $detail = $event.detail;
    $wheelDelta = $event.wheelDelta;
    if ($agent.firefox ? 1 : 0)
        $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
    else if ($agent.opera ? 1 : 0)
        $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
    else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
        $delta = (-1.0) * $wheelDelta;
        $detail = $delta / 120.0;
        if (($detail <= 0.0 ?  -$detail : $detail) >= 1.0)
            $delta = $detail;
        else if (!($agent.windows ? 1 : 0))
            $delta = !($agent.macOS ? 1 : 0) ? $detail : $delta / 3.0;
    }
    return $delta;
}
function cgxgbt_TeaInput__init_0($this, $canvas) {
    $this.$justTouched = 0;
    $this.$touchMap = cbgu_IntMap__init_(20, 0.800000011920929);
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$pressedButtons = cbgu_IntSet__init_(51, 0.800000011920929);
    $this.$pressedKeyCount = 0;
    $this.$pressedKeys = $rt_createBooleanArray(256);
    $this.$keyJustPressed = 0;
    $this.$justPressedKeys = $rt_createBooleanArray(256);
    $this.$justPressedButtons = $rt_createBooleanArray(5);
    $this.$keysToCatch = cbgu_IntSet__init_(51, 0.800000011920929);
    $this.$hasFocus = 1;
    $this.$canvas1 = $canvas;
    cgxgbt_TeaInput_hookEvents($this);
}
function cgxgbt_TeaInput_hookEvents($this) {
    var $document;
    $document = $this.$canvas1.ownerDocument;
    $document.addEventListener("mousedown", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("mouseup", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("mousemove", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("wheel", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keydown", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keyup", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keypress", otji_JS_function($this, "handleEvent"), !!0);
    $this.$canvas1.addEventListener("touchstart", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas1.addEventListener("touchmove", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas1.addEventListener("touchcancel", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas1.addEventListener("touchend", otji_JS_function($this, "handleEvent"), !!1);
}
function cgxgbt_TeaInput_handleMouseEvents($this, $touchEvent) {
    var $type, $target, $canvas2, var$5, $button, $relativeX, $relativeY, $touch, $mouseX, $mouseY, $wheelDelta, $touches, $i, $j, $real, $equals, $touch_0, $touchId, $j_0, var$21;
    a: {
        $type = $rt_str($touchEvent.type);
        if (jl_String_equals($type, $rt_s(124))) {
            $rt_globals.window.focus();
            $target = $touchEvent.target;
            $canvas2 = $this.$canvas1;
            if ($target !== $canvas2 ? 0 : 1) {
                var$5 = $this.$touched.data;
                if (!var$5[0]) {
                    $this.$hasFocus = 1;
                    $this.$justTouched = 1;
                    var$5[0] = 1;
                    $button = cgxgbtu_KeyCodes_getButton($touchEvent.button);
                    cbgu_IntSet_add($this.$pressedButtons, $button);
                    $this.$justPressedButtons.data[$button] = 1;
                    $this.$deltaX.data[0] = 0;
                    $this.$deltaY.data[0] = 0;
                    if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                        $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1);
                        $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
                        $this.$touchX.data[0] = $relativeX;
                        $this.$touchY.data[0] = $relativeY;
                    } else {
                        var$5 = $this.$touchX.data;
                        var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                        var$5 = $this.$touchY.data;
                        var$5[0] = var$5[0] + $touchEvent.movementY | 0;
                    }
                    $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                    $touch = $this.$processor;
                    if ($touch !== null)
                        $touch.$touchDown($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
                    $touchEvent.preventDefault();
                    $touchEvent.stopPropagation();
                    break a;
                }
            }
            $mouseX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $canvas2);
            $mouseY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
            if (!($mouseX >= 0.0 && $mouseX <= cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) && $mouseY >= 0.0 && $mouseY <= cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics)))
                $this.$hasFocus = 0;
            return;
        }
        if (jl_String_equals($type, $rt_s(125))) {
            if (!$this.$touched.data[0])
                return;
            cbgu_IntSet_remove($this.$pressedButtons, cgxgbtu_KeyCodes_getButton($touchEvent.button));
            var$5 = $this.$touched;
            var$5.data[0] = $this.$pressedButtons.$size4 <= 0 ? 0 : 1;
            if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                cgxgbt_TeaInput_setDelta($this, 0, cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1) - $this.$touchX.data[0] | 0, cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1) - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1);
                $this.$touchY.data[0] = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
            } else {
                cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                var$5 = $this.$touchX.data;
                var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                var$5 = $this.$touchY.data;
                var$5[0] = var$5[0] + $touchEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $this.$touched.data[0] = 0;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
        } else if (!jl_String_equals($type, $rt_s(126))) {
            if (jl_String_equals($type, $rt_s(127))) {
                if ($this.$processor !== null) {
                    $wheelDelta = cgxgbt_TeaInput_getMouseWheelVelocity($touchEvent);
                    $this.$processor.$scrolled(0.0, $wheelDelta | 0);
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            } else if (jl_String_equals($type, $rt_s(128))) {
                $this.$justTouched = 1;
                $touches = $touchEvent.changedTouches;
                $i = 0;
                $j = $touches.length;
                while ($i < $j) {
                    $touch = $touches.item($i);
                    $real = $touch.identifier;
                    $canvas2 = $this.$touchMap;
                    $equals = cgxgbt_TeaInput_getAvailablePointer($this);
                    cbgu_IntMap_put($canvas2, $real, jl_Integer_valueOf($equals));
                    $this.$touched.data[$equals] = 1;
                    $this.$touchX.data[$equals] = cgxgbt_TeaInput_getRelativeX0($this, $touch, $this.$canvas1);
                    $this.$touchY.data[$equals] = cgxgbt_TeaInput_getRelativeY0($this, $touch, $this.$canvas1);
                    $this.$deltaX.data[$equals] = 0;
                    $this.$deltaY.data[$equals] = 0;
                    $touch = $this.$processor;
                    if ($touch !== null)
                        $touch.$touchDown($this.$touchX.data[$equals], $this.$touchY.data[$equals], $equals, 0);
                    $i = $i + 1 | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $touchEvent.preventDefault();
            }
        } else {
            if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1);
                $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
                cgxgbt_TeaInput_setDelta($this, 0, $relativeX - $this.$touchX.data[0] | 0, $relativeY - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $relativeX;
                $this.$touchY.data[0] = $relativeY;
            } else {
                cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                var$5 = $this.$touchX.data;
                var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                var$5 = $this.$touchY.data;
                var$5[0] = var$5[0] + $touchEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $touch = $this.$processor;
            if ($touch !== null) {
                if (!$this.$touched.data[0])
                    $touch.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
                else
                    $touch.$touchDragged($this.$touchX.data[0], $this.$touchY.data[0], 0);
            }
        }
    }
    if (jl_String_equals($type, $rt_s(129))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cgxgbt_TeaInput_setDelta($this, $touchId, cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1) - $this.$touchX.data[$touchId] | 0, cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1) - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1);
            $this.$touchY.data[$touchId] = cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1);
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchDragged($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
    if (jl_String_equals($type, $rt_s(130))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j_0 = $touches.length;
        while ($i < $j_0) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cbgu_IntMap_remove($this.$touchMap, $real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1);
            $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1);
            cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            var$5 = $this.$touchX.data;
            var$5[$touchId] = $relativeX;
            var$21 = $this.$touchY.data;
            var$21[$touchId] = $relativeY;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp(var$5[$touchId], var$21[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
    if (jl_String_equals($type, $rt_s(131))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j_0 = $touches.length;
        while ($i < $j_0) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cbgu_IntMap_remove($this.$touchMap, $real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1);
            $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1);
            cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            var$5 = $this.$touchX.data;
            var$5[$touchId] = $relativeX;
            var$21 = $this.$touchY.data;
            var$21[$touchId] = $relativeY;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp(var$5[$touchId], var$21[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
}
function cgxgbt_TeaInput_handleKeyboardEvents($this, $keyboardEvent) {
    var $type, $c, var$4, $code, var$6, $keyChar;
    $type = $rt_str($keyboardEvent.type);
    if (!(jl_String_equals($type, $rt_s(132)) && $this.$hasFocus)) {
        if (jl_String_equals($type, $rt_s(133)) && $this.$hasFocus) {
            $c = $keyboardEvent.charCode & 65535;
            var$4 = $this.$processor;
            if (var$4 !== null)
                var$4.$keyTyped($c);
            if ($c == 9) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        } else if (jl_String_equals($type, $rt_s(134)) && $this.$hasFocus) {
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            var$6 = $this.$pressedKeys.data;
            if (var$6[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                var$6[$code] = 0;
            }
            var$4 = $this.$processor;
            if (var$4 !== null)
                var$4.$keyUp($code);
            if ($code == 61) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        }
    } else {
        a: {
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            $keyChar = 0;
            switch ($code) {
                case 67:
                    $keyChar = 8;
                    break a;
                case 112:
                    $keyChar = 127;
                    break a;
                default:
            }
        }
        if (!($code != 67 && $code != 112)) {
            $keyboardEvent.preventDefault();
            var$4 = $this.$processor;
            if (var$4 !== null) {
                var$4.$keyDown($code);
                $this.$processor.$keyTyped($keyChar);
            }
        } else {
            var$6 = $this.$pressedKeys.data;
            if (!var$6[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
                var$6[$code] = 1;
                $this.$keyJustPressed = 1;
                $this.$justPressedKeys.data[$code] = 1;
                var$4 = $this.$processor;
                if (var$4 !== null)
                    var$4.$keyDown($code);
            }
        }
        if ($code == 61) {
            $keyboardEvent.preventDefault();
            $keyboardEvent.stopPropagation();
        }
    }
}
function cgxgbt_TeaInput_getAvailablePointer($this) {
    var $i, var$2, var$3;
    $i = 0;
    while (true) {
        if ($i >= 20)
            return (-1);
        var$2 = $this.$touchMap;
        if ($i >= (-128) && $i <= 127) {
            jl_Integer_ensureIntegerCache();
            var$3 = jl_Integer_integerCache.data[$i + 128 | 0];
        } else {
            var$3 = new jl_Integer;
            var$3.$value5 = $i;
        }
        if (!cbgu_IntMap_containsValue(var$2, var$3, 0))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function cgxgbt_TeaInput_reset($this) {
    var $i, var$2, $i_0;
    a: {
        if ($this.$justTouched) {
            $this.$justTouched = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$justPressedButtons.data;
                if ($i >= var$2.length)
                    break a;
                var$2[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if ($this.$keyJustPressed) {
            $this.$keyJustPressed = 0;
            $i_0 = 0;
            while (true) {
                var$2 = $this.$justPressedKeys.data;
                if ($i_0 >= var$2.length)
                    break b;
                var$2[$i_0] = 0;
                $i_0 = $i_0 + 1 | 0;
            }
        }
    }
}
function cgxgbt_TeaInput_setDelta($this, $touchId, $x, $y) {
    $this.$deltaX.data[$touchId] = $x;
    $this.$deltaY.data[$touchId] = $y;
}
function cgxgbt_TeaInput_getRelativeX($this, $e, $target) {
    var $xScaleRatio, var$4;
    $xScaleRatio = $target.width * 1.0 / $target.clientWidth;
    var$4 = ($e.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $target) | 0) | 0) + ($target.scrollLeft | 0) | 0;
    $e = $target.ownerDocument;
    if (jl_String_equals($rt_str($e.compatMode), $rt_s(135)))
        $e = $e.documentElement;
    $xScaleRatio = $xScaleRatio * (var$4 + ($e.scrollLeft | 0) | 0);
    var$4 = $rt_compare($xScaleRatio, 0.0);
    return $xScaleRatio + (var$4 > 0 ? 1.0 : var$4 >= 0 ? $xScaleRatio : (-1.0)) * 0.5 | 0;
}
function cgxgbt_TeaInput_getRelativeY($this, $e, $target) {
    var $yScaleRatio, var$4;
    $yScaleRatio = $target.height * 1.0 / $target.clientHeight;
    var$4 = ($e.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $target) | 0) | 0) + ($target.scrollTop | 0) | 0;
    $e = $target.ownerDocument;
    if (jl_String_equals($rt_str($e.compatMode), $rt_s(135)))
        $e = $e.documentElement;
    $yScaleRatio = $yScaleRatio * (var$4 + ($e.scrollTop | 0) | 0);
    var$4 = $rt_compare($yScaleRatio, 0.0);
    return $yScaleRatio + (var$4 > 0 ? 1.0 : var$4 >= 0 ? $yScaleRatio : (-1.0)) * 0.5 | 0;
}
function cgxgbt_TeaInput_getRelativeX0($this, $touch, $target) {
    var $xScaleRatio, var$4;
    $xScaleRatio = $target.width * 1.0 / $target.clientWidth;
    var$4 = ($touch.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $target) | 0) | 0) + ($target.scrollLeft | 0) | 0;
    $touch = $target.ownerDocument;
    if (jl_String_equals($rt_str($touch.compatMode), $rt_s(135)))
        $touch = $touch.documentElement;
    $xScaleRatio = $xScaleRatio * (var$4 + ($touch.scrollLeft | 0) | 0);
    var$4 = $rt_compare($xScaleRatio, 0.0);
    return $xScaleRatio + (var$4 > 0 ? 1.0 : var$4 >= 0 ? $xScaleRatio : (-1.0)) * 0.5 | 0;
}
function cgxgbt_TeaInput_getRelativeY0($this, $touch, $target) {
    var $yScaleRatio, var$4;
    $yScaleRatio = $target.height * 1.0 / $target.clientHeight;
    var$4 = ($touch.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $target) | 0) | 0) + ($target.scrollTop | 0) | 0;
    $touch = $target.ownerDocument;
    if (jl_String_equals($rt_str($touch.compatMode), $rt_s(135)))
        $touch = $touch.documentElement;
    $yScaleRatio = $yScaleRatio * (var$4 + ($touch.scrollTop | 0) | 0);
    var$4 = $rt_compare($yScaleRatio, 0.0);
    return $yScaleRatio + (var$4 > 0 ? 1.0 : var$4 >= 0 ? $yScaleRatio : (-1.0)) * 0.5 | 0;
}
function cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $elem) {
    var $top, $curr;
    $top = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $top = $top - $curr.scrollTop;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $top = $top + $elem.offsetTop;
        $elem = $curr.offsetParent;
    }
    return $top;
}
function cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $elem) {
    var $left, $curr;
    $left = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $left = $left - $curr.scrollLeft;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $left = $left + $elem.offsetLeft;
        $elem = $curr.offsetParent;
    }
    return $left;
}
function cgxgbt_TeaInput_isKeyPressed($this, $key) {
    if ($key == (-1))
        return $this.$pressedKeyCount <= 0 ? 0 : 1;
    if ($key >= 0 && $key <= 255)
        return $this.$pressedKeys.data[$key];
    return 0;
}
function cgxgbt_TeaInput_setInputProcessor($this, $processor) {
    $this.$processor = $processor;
}
function cgxgbt_TeaInput_isCursorCatched($this) {
    return 0;
}
function cgxgbt_TeaInput_handleEvent$exported$0(var$0, var$1) {
    cgxgbt_TeaInput_handleMouseEvents(var$0, var$1);
    cgxgbt_TeaInput_handleKeyboardEvents(var$0, var$1);
}
var cbg_Files = $rt_classWithoutFields(0);
function cgxgbt_TeaFiles() {
    jl_Object.call(this);
    this.$preloader = null;
}
function cgxgbt_TeaNet() {
    jl_Object.call(this);
    this.$httpResponseListeners = null;
}
function cgxgbt_TeaNet__init_() {
    var var_0 = new cgxgbt_TeaNet();
    cgxgbt_TeaNet__init_0(var_0);
    return var_0;
}
function cgxgbt_TeaNet__init_0($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = new ju_HashMap;
    var$2 = ju_HashMap_calculateCapacity(16);
    var$1.$elementCount = 0;
    var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
    var$4 = var$3.data;
    var$1.$elementData = var$3;
    var$1.$loadFactor = 0.75;
    var$1.$threshold = var$4.length * 0.75 | 0;
    $this.$httpResponseListeners = var$1;
}
var cbg_ApplicationLogger = $rt_classWithoutFields(0);
var cgxgbt_TeaApplicationLogger = $rt_classWithoutFields();
var cbgu_Clipboard = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard() {
    var a = this; jl_Object.call(a);
    a.$requestedWritePermissions = 0;
    a.$hasWritePermissions = 0;
    a.$writeHandler = null;
    a.$content = null;
}
function cgxgbt_TeaClipboard__init_() {
    var var_0 = new cgxgbt_TeaClipboard();
    cgxgbt_TeaClipboard__init_0(var_0);
    return var_0;
}
function cgxgbt_TeaClipboard__init_0($this) {
    var var$1;
    $this.$requestedWritePermissions = 0;
    $this.$hasWritePermissions = 1;
    var$1 = new cgxgbt_TeaClipboard$ClipboardWriteHandler;
    var$1.$this$018 = $this;
    $this.$writeHandler = var$1;
    $this.$content = $rt_s(42);
}
function cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4(var$1) {
    if ("clipboard" in $rt_globals.navigator) {
        $rt_globals.navigator.clipboard.writeText(var$1);
    }
}
var cbg_Gdx = $rt_classWithoutFields();
var cbg_Gdx_app = null;
var cbg_Gdx_graphics = null;
var cbg_Gdx_audio = null;
var cbg_Gdx_input = null;
var cbg_Gdx_files = null;
var cbg_Gdx_net = null;
var cbg_Gdx_gl = null;
var cbg_Gdx_gl20 = null;
var cbg_Gdx_gl30 = null;
function cgxgbt_TeaApplication$1() {
    jl_Object.call(this);
    this.$this$019 = null;
}
function cgxgbt_TeaApplication$1__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$1();
    cgxgbt_TeaApplication$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$1__init_0($this, $this$0) {
    $this.$this$019 = $this$0;
}
function cgxgbt_TeaApplication$1_handleEvent($this, $evt) {
    var $state, $$je;
    if (!jl_String_equals($rt_s(136), $rt_str($this.$this$019.$window.$window0.document.visibilityState))) {
        $evt = $this.$this$019.$lifecycleListeners;
        jl_Object_monitorEnterSync($evt);
        a: {
            try {
                $state = cbgu_Array_iterator($evt);
                while (cbgu_Array$ArrayIterator_hasNext($state)) {
                    (cbgu_Array$ArrayIterator_next($state)).$resume();
                }
                jl_Object_monitorExitSync($evt);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                $state = $$je;

            }
            jl_Object_monitorExitSync($evt);
            $rt_throw($state);
        }
    } else {
        $evt = $this.$this$019.$lifecycleListeners;
        jl_Object_monitorEnterSync($evt);
        b: {
            try {
                $state = cbgu_Array_iterator($evt);
                while (cbgu_Array$ArrayIterator_hasNext($state)) {
                    (cbgu_Array$ArrayIterator_next($state)).$pause();
                }
                jl_Object_monitorExitSync($evt);
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                $state = $$je;

            }
            jl_Object_monitorExitSync($evt);
            $rt_throw($state);
        }
    }
}
function cgxgbt_TeaApplication$1_handleEvent$exported$0(var$0, var$1) {
    cgxgbt_TeaApplication$1_handleEvent(var$0, var$1);
}
function cgxgbt_TeaApplication$2() {
    jl_Object.call(this);
    this.$this$020 = null;
}
function cgxgbt_TeaApplication$2__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$2();
    cgxgbt_TeaApplication$2__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$2__init_0($this, $this$0) {
    $this.$this$020 = $this$0;
}
function cgxgbt_TeaApplication$2_handleEvent($this, $evt) {
    var $height, $width, var$4, var$5, $density;
    $height = $this.$this$020.$window.$window0.document.documentElement.clientWidth;
    $evt = $this.$this$020;
    $width = $height - $evt.$config.$padHorizontal | 0;
    var$4 = $evt.$window.$window0.document.documentElement.clientHeight;
    $evt = $this.$this$020;
    var$5 = $evt.$config;
    $height = var$4 - var$5.$padVertical | 0;
    if ($width > 0 && $height > 0) {
        if ($evt.$graphics !== null) {
            if (var$5.$usePhysicalPixels) {
                $density = $rt_globals.devicePixelRatio || 1;
                $width = $width * $density | 0;
                $height = $height * $density | 0;
            }
            cgxgbt_TeaGraphics_setCanvasSize($this.$this$020.$graphics, $width, $height);
        }
        return;
    }
}
function cgxgbt_TeaApplication$2_handleEvent$exported$0(var$0, var$1) {
    cgxgbt_TeaApplication$2_handleEvent(var$0, var$1);
}
var jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IllegalArgumentException__init_0() {
    var var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_(var_0);
    return var_0;
}
function jl_IllegalArgumentException__init_1(var_0) {
    var var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalArgumentException__init_($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
}
function jl_IllegalArgumentException__init_2($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
var cbgu_ObjectSet = $rt_classWithoutFields();
function cbgu_ObjectSet_tableSize($capacity, $loadFactor) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, $tableSize;
    if ($capacity < 0) {
        var$3 = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(137));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $capacity, 10);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$9 = var$8.data;
        var$5.$characters = var$8;
        var$10 = 0;
        while (var$10 < var$7) {
            var$9[var$10] = var$6.data[var$10 + 0 | 0];
            var$10 = var$10 + 1 | 0;
        }
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$5;
        $rt_throw(var$3);
    }
    var$7 = jl_Math_ceil($capacity / $loadFactor) | 0;
    if (2 > var$7)
        var$7 = 2;
    $tableSize = cbgm_MathUtils_nextPowerOfTwo(var$7);
    if ($tableSize <= 1073741824)
        return $tableSize;
    var$3 = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(138));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $capacity, 10);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    $tableSize = var$4.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($tableSize);
    var$8 = var$9.data;
    var$5.$characters = var$9;
    var$7 = 0;
    while (var$7 < $tableSize) {
        var$8[var$7] = var$6.data[var$7 + 0 | 0];
        var$7 = var$7 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$5;
    $rt_throw(var$3);
}
var jl_Long = $rt_classWithoutFields(jl_Number);
var jl_Long_TYPE = null;
function jl_Long_parseLongImpl($s, $beginIndex, $endIndex, $radix) {
    var var$5, $negative, var$7, var$8, $value, var$10, var$11, $digit, var$13, var$14, var$15, var$16;
    if ($radix >= 2 && $radix <= 36) {
        var$5 = $rt_compare($beginIndex, $endIndex);
        if (!var$5) {
            $s = new jl_NumberFormatException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $s.$message = $rt_s(78);
            $rt_throw($s);
        }
        $negative = 0;
        if ($beginIndex >= 0) {
            var$7 = $s.$characters.data;
            if ($beginIndex < var$7.length) {
                a: {
                    switch (var$7[$beginIndex]) {
                        case 43:
                            var$8 = $beginIndex + 1 | 0;
                            break a;
                        case 45:
                            $negative = 1;
                            var$8 = $beginIndex + 1 | 0;
                            break a;
                        default:
                    }
                    var$8 = $beginIndex;
                }
                $value = Long_ZERO;
                var$10 = Long_fromInt($radix);
                b: {
                    while (var$8 < $endIndex) {
                        var$11 = var$8 + 1 | 0;
                        if (var$8 < 0)
                            break b;
                        var$7 = $s.$characters.data;
                        if (var$8 >= var$7.length)
                            break b;
                        $digit = jl_Character_getNumericValue(var$7[var$8]);
                        if ($digit < 0) {
                            var$13 = new jl_NumberFormatException;
                            if (var$5 > 0) {
                                $s = new jl_IndexOutOfBoundsException;
                                $s.$suppressionEnabled = 1;
                                $s.$writableStackTrace = 1;
                                $rt_throw($s);
                            }
                            if (!var$5) {
                                jl_String_$callClinit();
                                $s = jl_String_EMPTY;
                            } else if (!(!$beginIndex && $endIndex == $s.$characters.data.length)) {
                                var$14 = new jl_String;
                                var$7 = $s.$characters;
                                $endIndex = $endIndex - $beginIndex | 0;
                                jl_String_$callClinit();
                                var$15 = $rt_createCharArray($endIndex);
                                var$16 = var$15.data;
                                var$14.$characters = var$15;
                                $radix = 0;
                                while ($radix < $endIndex) {
                                    var$16[$radix] = var$7.data[$radix + $beginIndex | 0];
                                    $radix = $radix + 1 | 0;
                                }
                                $s = var$14;
                            }
                            var$14 = new jl_StringBuilder;
                            var$14.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert(var$14, var$14.$length, $rt_s(79));
                            $beginIndex = var$14.$length;
                            if ($s === null)
                                $s = $rt_s(1);
                            jl_AbstractStringBuilder_insert(var$14, $beginIndex, $s);
                            jl_RuntimeException__init_0(var$13, jl_String__init_1(var$14.$buffer, 0, var$14.$length));
                            $rt_throw(var$13);
                        }
                        if ($digit >= $radix) {
                            var$13 = new jl_NumberFormatException;
                            $s = jl_String_subSequence($s, $beginIndex, $endIndex);
                            var$14 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$14, $rt_s(80)), $radix), $rt_s(74)), $s);
                            jl_NumberFormatException__init_(var$13, jl_StringBuilder_toString(var$14));
                            $rt_throw(var$13);
                        }
                        $value = Long_add(Long_mul(var$10, $value), Long_fromInt($digit));
                        if (Long_lt($value, Long_ZERO)) {
                            if (var$11 == $endIndex && Long_eq($value, Long_create(0, 2147483648)) && $negative)
                                return Long_create(0, 2147483648);
                            var$13 = new jl_NumberFormatException;
                            $s = jl_String_subSequence($s, $beginIndex, $endIndex);
                            var$14 = jl_StringBuilder__init_();
                            jl_StringBuilder_append(jl_StringBuilder_append(var$14, $rt_s(81)), $s);
                            jl_NumberFormatException__init_(var$13, jl_StringBuilder_toString(var$14));
                            $rt_throw(var$13);
                        }
                        var$8 = var$11;
                    }
                    if ($negative)
                        $value = Long_neg($value);
                    return $value;
                }
                $s = new jl_StringIndexOutOfBoundsException;
                $s.$suppressionEnabled = 1;
                $s.$writableStackTrace = 1;
                $rt_throw($s);
            }
        }
        $s = new jl_StringIndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    $s = new jl_NumberFormatException;
    var$13 = new jl_StringBuilder;
    var$13.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$13, var$13.$length, $rt_s(82));
    jl_AbstractStringBuilder_insert0(var$13, var$13.$length, $radix, 10);
    var$14 = new jl_String;
    var$7 = var$13.$buffer;
    $endIndex = var$13.$length;
    jl_String_$callClinit();
    var$15 = $rt_createCharArray($endIndex);
    var$16 = var$15.data;
    var$14.$characters = var$15;
    $radix = 0;
    while ($radix < $endIndex) {
        var$16[$radix] = var$7.data[$radix + 0 | 0];
        $radix = $radix + 1 | 0;
    }
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $s.$message = var$14;
    $rt_throw($s);
}
function jl_Long_numberOfLeadingZeros($i) {
    var $n, var$3;
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    $i = Long_shru(var$3, 16);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru($i, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 8;
    $i = Long_shru(var$3, 4);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru($i, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
}
function jl_Long_divideUnsigned(var$1, var$2) {
    return Long_udiv(var$1, var$2);
}
function jl_Long_remainderUnsigned(var$1, var$2) {
    return Long_urem(var$1, var$2);
}
function jl_Long_compareUnsigned(var$1, var$2) {
    return Long_ucompare(var$1, var$2);
}
function jl_Long__clinit_() {
    jl_Long_TYPE = $rt_cls($rt_longcls());
}
var cbgg_GL20 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL20() {
    var a = this; jl_Object.call(a);
    a.$gl0 = null;
    a.$programs = null;
    a.$nextProgramId = 0;
    a.$shaders = null;
    a.$nextShaderId = 0;
    a.$buffers = null;
    a.$nextBufferId = 0;
    a.$frameBuffers = null;
    a.$nextFrameBufferId = 0;
    a.$renderBuffers = null;
    a.$nextRenderBufferId = 0;
    a.$textures = null;
    a.$nextTextureId = 0;
    a.$uniforms = null;
    a.$nextUniformId = 0;
    a.$currProgram = 0;
    a.$floatBuffer = null;
    a.$intBuffer = null;
    a.$shortBuffer = null;
    a.$byteBuffer = null;
}
function cgxgbt_TeaGL20__init_(var_0) {
    var var_1 = new cgxgbt_TeaGL20();
    cgxgbt_TeaGL20__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaGL20__init_0($this, $gl) {
    var var$2, var$3, var$4, var$5;
    var$2 = new ju_HashMap;
    var$3 = ju_HashMap_calculateCapacity(16);
    var$2.$elementCount = 0;
    var$4 = $rt_createArray(ju_HashMap$HashEntry, var$3);
    var$5 = var$4.data;
    var$2.$elementData = var$4;
    var$2.$loadFactor = 0.75;
    var$2.$threshold = var$5.length * 0.75 | 0;
    $this.$programs = var$2;
    $this.$nextProgramId = 1;
    var$2 = new ju_HashMap;
    var$3 = ju_HashMap_calculateCapacity(16);
    var$2.$elementCount = 0;
    var$4 = $rt_createArray(ju_HashMap$HashEntry, var$3);
    var$5 = var$4.data;
    var$2.$elementData = var$4;
    var$2.$loadFactor = 0.75;
    var$2.$threshold = var$5.length * 0.75 | 0;
    $this.$shaders = var$2;
    $this.$nextShaderId = 1;
    var$2 = new ju_HashMap;
    var$3 = ju_HashMap_calculateCapacity(16);
    var$2.$elementCount = 0;
    var$4 = $rt_createArray(ju_HashMap$HashEntry, var$3);
    var$5 = var$4.data;
    var$2.$elementData = var$4;
    var$2.$loadFactor = 0.75;
    var$2.$threshold = var$5.length * 0.75 | 0;
    $this.$buffers = var$2;
    $this.$nextBufferId = 1;
    var$2 = new ju_HashMap;
    var$3 = ju_HashMap_calculateCapacity(16);
    var$2.$elementCount = 0;
    var$4 = $rt_createArray(ju_HashMap$HashEntry, var$3);
    var$5 = var$4.data;
    var$2.$elementData = var$4;
    var$2.$loadFactor = 0.75;
    var$2.$threshold = var$5.length * 0.75 | 0;
    $this.$frameBuffers = var$2;
    $this.$nextFrameBufferId = 1;
    var$2 = new ju_HashMap;
    var$3 = ju_HashMap_calculateCapacity(16);
    var$2.$elementCount = 0;
    var$4 = $rt_createArray(ju_HashMap$HashEntry, var$3);
    var$5 = var$4.data;
    var$2.$elementData = var$4;
    var$2.$loadFactor = 0.75;
    var$2.$threshold = var$5.length * 0.75 | 0;
    $this.$renderBuffers = var$2;
    $this.$nextRenderBufferId = 1;
    var$2 = new ju_HashMap;
    var$3 = ju_HashMap_calculateCapacity(16);
    var$2.$elementCount = 0;
    var$4 = $rt_createArray(ju_HashMap$HashEntry, var$3);
    var$5 = var$4.data;
    var$2.$elementData = var$4;
    var$2.$loadFactor = 0.75;
    var$2.$threshold = var$5.length * 0.75 | 0;
    $this.$textures = var$2;
    $this.$nextTextureId = 1;
    $this.$uniforms = ju_HashMap__init_(16, 0.75);
    $this.$nextUniformId = 1;
    $this.$currProgram = 0;
    $this.$gl0 = $gl;
    $this.$floatBuffer = new $rt_globals.Float32Array(40000);
    $this.$shortBuffer = cgxgbtd_TeaTypedArrays_createInt16Array(cgxgbtdt_TypedArrays_instance, 12000);
    $this.$intBuffer = cgxgbtd_TeaTypedArrays_createInt32Array(cgxgbtdt_TypedArrays_instance, 12000);
    $this.$byteBuffer = cgxgbtd_TeaTypedArrays_createUint8Array(cgxgbtdt_TypedArrays_getInstance(), 240000);
    $this.$gl0.pixelStorei(37441, 0);
}
function cgxgbt_TeaGL20_copy($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    if (($buffer.$limit - $buffer.$position | 0) > $this.$floatBuffer.length)
        $this.$floatBuffer = new $rt_globals.Float32Array($buffer.$limit - $buffer.$position | 0);
    $i = $buffer.$position;
    $j = 0;
    while (true) {
        var$4 = $buffer.$limit;
        if ($i >= var$4)
            break;
        var$5 = $this.$floatBuffer;
        var$6 = jn_FloatBufferImpl_get($buffer, $i);
        var$5[$j] = var$6;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$5 = $this.$floatBuffer;
    $i = var$4 - $buffer.$position | 0;
    return var$5.subarray(0, $i);
}
function cgxgbt_TeaGL20_copy0($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    if (($buffer.$limit - $buffer.$position | 0) > $this.$shortBuffer.length)
        $this.$shortBuffer = new $rt_globals.Int16Array($buffer.$limit - $buffer.$position | 0);
    $i = $buffer.$position;
    $j = 0;
    while (true) {
        var$4 = $buffer.$limit;
        if ($i >= var$4)
            break;
        var$5 = $this.$shortBuffer;
        var$6 = jn_ShortBufferImpl_get($buffer, $i);
        var$5[$j] = var$6;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$5 = $this.$shortBuffer;
    $i = var$4 - $buffer.$position | 0;
    return var$5.subarray(0, $i);
}
function cgxgbt_TeaGL20_copy1($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    if (($buffer.$limit - $buffer.$position | 0) > $this.$intBuffer.length)
        $this.$intBuffer = new $rt_globals.Int32Array($buffer.$limit - $buffer.$position | 0);
    $i = $buffer.$position;
    $j = 0;
    while (true) {
        var$4 = $buffer.$limit;
        if ($i >= var$4)
            break;
        var$5 = $this.$intBuffer;
        var$6 = $buffer.$get($i);
        var$5[$j] = var$6;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$5 = $this.$intBuffer;
    $i = var$4 - $buffer.$position | 0;
    return var$5.subarray(0, $i);
}
function cgxgbt_TeaGL20_copy2($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    if (($buffer.$limit - $buffer.$position | 0) > $this.$byteBuffer.length)
        $this.$byteBuffer = new $rt_globals.Uint8Array($buffer.$limit - $buffer.$position | 0);
    $i = $buffer.$position;
    $j = 0;
    while (true) {
        var$4 = $buffer.$limit;
        if ($i >= var$4)
            break;
        var$5 = $this.$byteBuffer;
        var$6 = jn_ByteBufferImpl_get($buffer, $i);
        var$5[$j] = var$6;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$5 = $this.$byteBuffer;
    $i = var$4 - $buffer.$position | 0;
    return var$5.subarray(0, $i);
}
function cgxgbt_TeaGL20_glBindTexture($this, $target, $texture) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$3 = $this.$gl0;
    var$4 = $this.$textures;
    if ($texture >= (-128) && $texture <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$texture + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $texture;
    }
    if (var$5 === null) {
        var$6 = var$4.$elementData.data[0];
        while (var$6 !== null && var$6.$key !== null) {
            var$6 = var$6.$next;
        }
    } else {
        var$7 = var$5.$value5;
        var$8 = (var$7 >>> 4 | 0) ^ var$7 << 28 ^ var$7 << 8 ^ (var$7 >>> 24 | 0);
        var$9 = var$4.$elementData.data;
        var$6 = var$9[var$8 & (var$9.length - 1 | 0)];
        while (var$6 !== null) {
            if (var$6.$origKeyHash == var$8) {
                var$4 = var$6.$key;
                if (var$5 !== var$4 && !(var$5 === var$4 ? 1 : var$4 instanceof jl_Integer && var$4.$value5 == var$7 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$6 = var$6.$next;
        }
    }
    var$4 = var$6 === null ? null : var$6.$value4;
    var$3.bindTexture($target, var$4);
}
function cgxgbt_TeaGL20_glClear($this, $mask) {
    $this.$gl0.clear($mask);
}
function cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha) {
    $this.$gl0.clearColor($red, $green, $blue, $alpha);
}
function cgxgbt_TeaGL20_glDepthMask($this, $flag) {
    $this.$gl0.depthMask(!!$flag);
}
function cgxgbt_TeaGL20_glDisable($this, $cap) {
    $this.$gl0.disable($cap);
}
function cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count) {
    $this.$gl0.drawArrays($mode, $first, $count);
}
function cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices) {
    var var$5, var$6;
    var$5 = $this.$gl0;
    var$6 = $indices.$position;
    var$5.drawElements($mode, $count, $type, var$6);
}
function cgxgbt_TeaGL20_glEnable($this, $cap) {
    $this.$gl0.enable($cap);
}
function cgxgbt_TeaGL20_glGenTexture($this) {
    var $texture, var$2, var$3, var$4;
    $texture = $this.$gl0.createTexture();
    var$2 = $this.$nextTextureId;
    $this.$nextTextureId = var$2 + 1 | 0;
    var$3 = $this.$textures;
    if (var$2 >= (-128) && var$2 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[var$2 + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = var$2;
    }
    ju_HashMap_putImpl(var$3, var$4, $texture);
    return var$2;
}
function cgxgbt_TeaGL20_glGetString($this, $name) {
    return $rt_str($this.$gl0.getParameter($name));
}
function cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param) {
    $this.$gl0.pixelStorei($pname, $param);
}
function cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    var $pixmap, $buffer, $index, var$13, var$14, var$15, var$16;
    if ($pixels === null) {
        $pixels = $this.$gl0;
        $pixmap = null;
        $pixels.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $pixmap);
    } else if ($pixels.$limit > 4) {
        $buffer = !($pixels instanceof jn_FloatBuffer) ? cgxgbt_TeaGL20_copy2($this, $pixels) : cgxgbt_TeaGL20_copy($this, $pixels);
        $this.$gl0.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $buffer);
    } else {
        $index = jn_ByteBufferImpl_getInt($pixels, 0);
        cbgg_Pixmap_$callClinit();
        $pixels = cbgg_Pixmap_pixmaps;
        if ($index >= (-128) && $index <= 127) {
            jl_Integer_ensureIntegerCache();
            $buffer = jl_Integer_integerCache.data[$index + 128 | 0];
        } else {
            $buffer = new jl_Integer;
            $buffer.$value5 = $index;
        }
        if ($buffer === null) {
            $pixels = $pixels.$elementData.data[0];
            while ($pixels !== null && $pixels.$key !== null) {
                $pixels = $pixels.$next;
            }
        } else {
            var$13 = $buffer.$value5;
            var$14 = (var$13 >>> 4 | 0) ^ var$13 << 28 ^ var$13 << 8 ^ (var$13 >>> 24 | 0);
            var$15 = $pixels.$elementData.data;
            $pixels = var$15[var$14 & (var$15.length - 1 | 0)];
            while ($pixels !== null) {
                if ($pixels.$origKeyHash == var$14) {
                    $pixmap = $pixels.$key;
                    if ($buffer !== $pixmap && !($buffer === $pixmap ? 1 : $pixmap instanceof jl_Integer && $pixmap.$value5 == var$13 ? 1 : 0) ? 0 : 1)
                        break;
                }
                $pixels = $pixels.$next;
            }
        }
        $pixmap = $pixels === null ? null : $pixels.$value4;
        $buffer = $pixmap.$canvas;
        if ($buffer === null && $pixmap.$nativePixmap !== null ? 1 : 0) {
            $pixels = $this.$gl0;
            $pixmap = $pixmap.$nativePixmap.$pixelPtr;
            $pixels.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $pixmap);
        } else if ($buffer === null && $pixmap.$imageElement !== null ? 1 : 0) {
            $pixels = $this.$gl0;
            $buffer = $pixmap.$imageElement;
            $pixels.texImage2D($target, $level, $internalformat, $format, $type, $buffer);
        } else if ($buffer === null && $pixmap.$videoElement !== null ? 1 : 0) {
            $pixels = $this.$gl0;
            var$16 = $pixmap.$videoElement;
            $pixels.texImage2D($target, $level, $internalformat, $format, $type, var$16);
        } else {
            $pixels = $this.$gl0;
            cbgg_Pixmap_ensureCanvasExists($pixmap);
            var$16 = $pixmap.$canvas;
            $pixels.texImage2D($target, $level, $internalformat, $format, $type, var$16);
        }
    }
}
function cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param) {
    $this.$gl0.texParameterf($target, $pname, $param);
}
function cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height) {
    $this.$gl0.viewport($x, $y, $width, $height);
}
function cgxgbt_TeaGL20_glAttachShader($this, $program, $shader) {
    var $glProgram, $glShader, var$5, var$6, var$7, var$8, var$9;
    $glProgram = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        $glShader = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        $glShader = new jl_Integer;
        $glShader.$value5 = $program;
    }
    if ($glShader === null) {
        var$5 = $glProgram.$elementData.data[0];
        while (var$5 !== null && var$5.$key !== null) {
            var$5 = var$5.$next;
        }
    } else {
        var$6 = $glShader.$value5;
        $program = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
        var$7 = $glProgram.$elementData.data;
        var$5 = var$7[$program & (var$7.length - 1 | 0)];
        while (var$5 !== null) {
            if (var$5.$origKeyHash == $program) {
                $glProgram = var$5.$key;
                if ($glShader !== $glProgram && !($glShader === $glProgram ? 1 : $glProgram instanceof jl_Integer && $glProgram.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$5 = var$5.$next;
        }
    }
    $glProgram = var$5 === null ? null : var$5.$value4;
    $glShader = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $shader;
    }
    if (var$5 === null) {
        $glShader = $glShader.$elementData.data[0];
        while ($glShader !== null && $glShader.$key !== null) {
            $glShader = $glShader.$next;
        }
    } else {
        var$8 = var$5.$value5;
        var$6 = (var$8 >>> 4 | 0) ^ var$8 << 28 ^ var$8 << 8 ^ (var$8 >>> 24 | 0);
        var$7 = $glShader.$elementData.data;
        $glShader = var$7[var$6 & (var$7.length - 1 | 0)];
        while ($glShader !== null) {
            if ($glShader.$origKeyHash == var$6) {
                var$9 = $glShader.$key;
                if (var$5 !== var$9 && !(var$5 === var$9 ? 1 : var$9 instanceof jl_Integer && var$9.$value5 == var$8 ? 1 : 0) ? 0 : 1)
                    break;
            }
            $glShader = $glShader.$next;
        }
    }
    $glShader = $glShader === null ? null : $glShader.$value4;
    $this.$gl0.attachShader($glProgram, $glShader);
}
function cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$3 = $this.$gl0;
    var$4 = $this.$buffers;
    if ($buffer >= (-128) && $buffer <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$buffer + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $buffer;
    }
    if (var$5 === null) {
        var$6 = var$4.$elementData.data[0];
        while (var$6 !== null && var$6.$key !== null) {
            var$6 = var$6.$next;
        }
    } else {
        var$7 = var$5.$value5;
        var$8 = (var$7 >>> 4 | 0) ^ var$7 << 28 ^ var$7 << 8 ^ (var$7 >>> 24 | 0);
        var$9 = var$4.$elementData.data;
        var$6 = var$9[var$8 & (var$9.length - 1 | 0)];
        while (var$6 !== null) {
            if (var$6.$origKeyHash == var$8) {
                var$4 = var$6.$key;
                if (var$5 !== var$4 && !(var$5 === var$4 ? 1 : var$4 instanceof jl_Integer && var$4.$value5 == var$7 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$6 = var$6.$next;
        }
    }
    var$4 = var$6 === null ? null : var$6.$value4;
    var$3.bindBuffer($target, var$4);
}
function cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
    $this.$gl0.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
}
function cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage) {
    var var$5, var$6;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl0;
        $data = cgxgbt_TeaGL20_copy($this, $data);
        var$5.bufferData($target, $data, $usage);
    } else if ($data instanceof jn_ShortBuffer) {
        var$5 = $this.$gl0;
        $data = cgxgbt_TeaGL20_copy0($this, $data);
        var$5.bufferData($target, $data, $usage);
    } else if ($data instanceof jn_IntBuffer) {
        var$5 = $this.$gl0;
        $data = cgxgbt_TeaGL20_copy1($this, $data);
        var$5.bufferData($target, $data, $usage);
    } else if ($data instanceof jn_ByteBuffer) {
        var$5 = $this.$gl0;
        var$6 = cgxgbt_TeaGL20_copy2($this, $data);
        var$5.bufferData($target, var$6, $usage);
    } else {
        if ($data !== null) {
            var$5 = new cbgu_GdxRuntimeException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$message = $rt_s(139);
            $rt_throw(var$5);
        }
        $this.$gl0.bufferData($target, $size, $usage);
    }
}
function cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data) {
    var var$5, var$6;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl0;
        var$6 = cgxgbt_TeaGL20_copy($this, $data);
        var$5.bufferSubData($target, $offset, var$6);
    }
}
function cgxgbt_TeaGL20_glCompileShader($this, $shader) {
    var $glShader, var$3, var$4, var$5, var$6, var$7;
    $glShader = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$3 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$3 = new jl_Integer;
        var$3.$value5 = $shader;
    }
    if (var$3 === null) {
        var$4 = $glShader.$elementData.data[0];
        while (var$4 !== null && var$4.$key !== null) {
            var$4 = var$4.$next;
        }
    } else {
        var$5 = var$3.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = $glShader.$elementData.data;
        var$4 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$4 !== null) {
            if (var$4.$origKeyHash == var$6) {
                $glShader = var$4.$key;
                if (var$3 !== $glShader && !(var$3 === $glShader ? 1 : $glShader instanceof jl_Integer && $glShader.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$4 = var$4.$next;
        }
    }
    $glShader = var$4 === null ? null : var$4.$value4;
    $this.$gl0.compileShader($glShader);
}
function cgxgbt_TeaGL20_glCreateProgram($this) {
    var $program, var$2, var$3, var$4;
    $program = $this.$gl0.createProgram();
    var$2 = $this.$nextProgramId;
    $this.$nextProgramId = var$2 + 1 | 0;
    var$3 = $this.$programs;
    if (var$2 >= (-128) && var$2 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[var$2 + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = var$2;
    }
    ju_HashMap_putImpl(var$3, var$4, $program);
    return var$2;
}
function cgxgbt_TeaGL20_glCreateShader($this, $type) {
    var $shader, var$3, var$4, var$5;
    $shader = $this.$gl0.createShader($type);
    var$3 = $this.$nextShaderId;
    $this.$nextShaderId = var$3 + 1 | 0;
    var$4 = $this.$shaders;
    if (var$3 >= (-128) && var$3 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[var$3 + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = var$3;
    }
    ju_HashMap_putImpl(var$4, var$5, $shader);
    return var$3;
}
function cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index) {
    $this.$gl0.disableVertexAttribArray($index);
}
function cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices) {
    $this.$gl0.drawElements($mode, $count, $type, $indices);
}
function cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index) {
    $this.$gl0.enableVertexAttribArray($index);
}
function cgxgbt_TeaGL20_glGenBuffer($this) {
    var $buffer, var$2, var$3, var$4;
    $buffer = $this.$gl0.createBuffer();
    var$2 = $this.$nextBufferId;
    $this.$nextBufferId = var$2 + 1 | 0;
    var$3 = $this.$buffers;
    if (var$2 >= (-128) && var$2 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[var$2 + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = var$2;
    }
    ju_HashMap_putImpl(var$3, var$4, $buffer);
    return var$2;
}
function cgxgbt_TeaGL20_glGenerateMipmap($this, $target) {
    $this.$gl0.generateMipmap($target);
}
function cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type) {
    var var$5, $activeAttrib, var$7, var$8, var$9, var$10, var$11;
    var$5 = $this.$gl0;
    $activeAttrib = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$7 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$7 = new jl_Integer;
        var$7.$value5 = $program;
    }
    if (var$7 === null) {
        $activeAttrib = $activeAttrib.$elementData.data[0];
        while ($activeAttrib !== null && $activeAttrib.$key !== null) {
            $activeAttrib = $activeAttrib.$next;
        }
    } else {
        var$8 = var$7.$value5;
        var$9 = (var$8 >>> 4 | 0) ^ var$8 << 28 ^ var$8 << 8 ^ (var$8 >>> 24 | 0);
        var$10 = $activeAttrib.$elementData.data;
        $activeAttrib = var$10[var$9 & (var$10.length - 1 | 0)];
        while ($activeAttrib !== null) {
            if ($activeAttrib.$origKeyHash == var$9) {
                var$11 = $activeAttrib.$key;
                if (var$7 !== var$11 && !(var$7 === var$11 ? 1 : var$11 instanceof jl_Integer && var$11.$value5 == var$8 ? 1 : 0) ? 0 : 1)
                    break;
            }
            $activeAttrib = $activeAttrib.$next;
        }
    }
    $activeAttrib = $activeAttrib === null ? null : $activeAttrib.$value4;
    $activeAttrib = var$5.getActiveAttrib($activeAttrib, $index);
    jn_IntBufferImpl_put($size, $activeAttrib.size);
    jn_IntBufferImpl_put($type, $activeAttrib.type);
    return $rt_str($activeAttrib.name);
}
function cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type) {
    var var$5, $activeUniform, var$7, var$8, var$9, var$10, var$11;
    var$5 = $this.$gl0;
    $activeUniform = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$7 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$7 = new jl_Integer;
        var$7.$value5 = $program;
    }
    if (var$7 === null) {
        $activeUniform = $activeUniform.$elementData.data[0];
        while ($activeUniform !== null && $activeUniform.$key !== null) {
            $activeUniform = $activeUniform.$next;
        }
    } else {
        var$8 = var$7.$value5;
        var$9 = (var$8 >>> 4 | 0) ^ var$8 << 28 ^ var$8 << 8 ^ (var$8 >>> 24 | 0);
        var$10 = $activeUniform.$elementData.data;
        $activeUniform = var$10[var$9 & (var$10.length - 1 | 0)];
        while ($activeUniform !== null) {
            if ($activeUniform.$origKeyHash == var$9) {
                var$11 = $activeUniform.$key;
                if (var$7 !== var$11 && !(var$7 === var$11 ? 1 : var$11 instanceof jl_Integer && var$11.$value5 == var$8 ? 1 : 0) ? 0 : 1)
                    break;
            }
            $activeUniform = $activeUniform.$next;
        }
    }
    $activeUniform = $activeUniform === null ? null : $activeUniform.$value4;
    $activeUniform = var$5.getActiveUniform($activeUniform, $index);
    jn_IntBufferImpl_put($size, $activeUniform.size);
    jn_IntBufferImpl_put($type, $activeUniform.type);
    return $rt_str($activeUniform.name);
}
function cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name) {
    var $prog, var$4, var$5, var$6, var$7;
    $prog = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        $prog = $prog.$elementData.data[0];
        while ($prog !== null && $prog.$key !== null) {
            $prog = $prog.$next;
        }
    } else {
        $program = var$4.$value5;
        var$5 = ($program >>> 4 | 0) ^ $program << 28 ^ $program << 8 ^ ($program >>> 24 | 0);
        var$6 = $prog.$elementData.data;
        $prog = var$6[var$5 & (var$6.length - 1 | 0)];
        while ($prog !== null) {
            if ($prog.$origKeyHash == var$5) {
                var$7 = $prog.$key;
                if (var$4 !== var$7 && !(var$4 === var$7 ? 1 : var$7 instanceof jl_Integer && var$7.$value5 == $program ? 1 : 0) ? 0 : 1)
                    break;
            }
            $prog = $prog.$next;
        }
    }
    $prog = $prog === null ? null : $prog.$value4;
    return $this.$gl0.getAttribLocation($prog, $rt_ustr($name));
}
function cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params) {
    if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938) {
        $params = new cbgu_GdxRuntimeException;
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = $rt_s(140);
        $rt_throw($params);
    }
    jn_FloatBufferImpl_put($params, 0, $this.$gl0.getParameter($pname));
}
function cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params) {
    var var$4, var$5, var$6, var$7, $result, var$9, var$10;
    if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
        var$4 = $this.$gl0;
        var$5 = $this.$programs;
        if ($program >= (-128) && $program <= 127) {
            jl_Integer_ensureIntegerCache();
            var$6 = jl_Integer_integerCache.data[$program + 128 | 0];
        } else {
            var$6 = new jl_Integer;
            var$6.$value5 = $program;
        }
        if (var$6 === null) {
            var$7 = var$5.$elementData.data[0];
            while (var$7 !== null && var$7.$key !== null) {
                var$7 = var$7.$next;
            }
        } else {
            $program = var$6.$value5;
            $result = ($program >>> 4 | 0) ^ $program << 28 ^ $program << 8 ^ ($program >>> 24 | 0);
            var$9 = var$5.$elementData.data;
            var$7 = var$9[$result & (var$9.length - 1 | 0)];
            while (var$7 !== null) {
                if (var$7.$origKeyHash == $result) {
                    var$5 = var$7.$key;
                    if (var$6 !== var$5 && !(var$6 === var$5 ? 1 : var$5 instanceof jl_Integer && var$5.$value5 == $program ? 1 : 0) ? 0 : 1)
                        break;
                }
                var$7 = var$7.$next;
            }
        }
        var$5 = var$7 === null ? null : var$7.$value4;
        jn_IntBufferImpl_put($params, var$4.getProgramParameter(var$5, $pname));
    } else {
        var$4 = $this.$gl0;
        var$5 = $this.$programs;
        if ($program >= (-128) && $program <= 127) {
            jl_Integer_ensureIntegerCache();
            var$6 = jl_Integer_integerCache.data[$program + 128 | 0];
        } else {
            var$6 = new jl_Integer;
            var$6.$value5 = $program;
        }
        if (var$6 === null) {
            var$7 = var$5.$elementData.data[0];
            while (var$7 !== null && var$7.$key !== null) {
                var$7 = var$7.$next;
            }
        } else {
            var$10 = var$6.$value5;
            $program = (var$10 >>> 4 | 0) ^ var$10 << 28 ^ var$10 << 8 ^ (var$10 >>> 24 | 0);
            var$9 = var$5.$elementData.data;
            var$7 = var$9[$program & (var$9.length - 1 | 0)];
            while (var$7 !== null) {
                if (var$7.$origKeyHash == $program) {
                    var$5 = var$7.$key;
                    if (var$6 !== var$5 && !(var$6 === var$5 ? 1 : var$5 instanceof jl_Integer && var$5.$value5 == var$10 ? 1 : 0) ? 0 : 1)
                        break;
                }
                var$7 = var$7.$next;
            }
        }
        var$5 = var$7 === null ? null : var$7.$value4;
        jn_IntBufferImpl_put($params, !(var$4.getProgramParameter(var$5, $pname) ? 1 : 0) ? 0 : 1);
    }
}
function cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = $this.$gl0;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    return $rt_str(var$2.getProgramInfoLog(var$3));
}
function cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params) {
    var var$4, var$5, var$6, var$7, $result, var$9, var$10;
    if ($pname != 35713 && $pname != 35712) {
        var$4 = $this.$gl0;
        var$5 = $this.$shaders;
        if ($shader >= (-128) && $shader <= 127) {
            jl_Integer_ensureIntegerCache();
            var$6 = jl_Integer_integerCache.data[$shader + 128 | 0];
        } else {
            var$6 = new jl_Integer;
            var$6.$value5 = $shader;
        }
        if (var$6 === null) {
            var$7 = var$5.$elementData.data[0];
            while (var$7 !== null && var$7.$key !== null) {
                var$7 = var$7.$next;
            }
        } else {
            $shader = var$6.$value5;
            $result = ($shader >>> 4 | 0) ^ $shader << 28 ^ $shader << 8 ^ ($shader >>> 24 | 0);
            var$9 = var$5.$elementData.data;
            var$7 = var$9[$result & (var$9.length - 1 | 0)];
            while (var$7 !== null) {
                if (var$7.$origKeyHash == $result) {
                    var$5 = var$7.$key;
                    if (var$6 !== var$5 && !(var$6 === var$5 ? 1 : var$5 instanceof jl_Integer && var$5.$value5 == $shader ? 1 : 0) ? 0 : 1)
                        break;
                }
                var$7 = var$7.$next;
            }
        }
        var$5 = var$7 === null ? null : var$7.$value4;
        jn_IntBufferImpl_put($params, var$4.getShaderParameter(var$5, $pname));
    } else {
        var$5 = $this.$gl0;
        var$6 = $this.$shaders;
        if ($shader >= (-128) && $shader <= 127) {
            jl_Integer_ensureIntegerCache();
            var$4 = jl_Integer_integerCache.data[$shader + 128 | 0];
        } else {
            var$4 = new jl_Integer;
            var$4.$value5 = $shader;
        }
        if (var$4 === null) {
            var$6 = var$6.$elementData.data[0];
            while (var$6 !== null && var$6.$key !== null) {
                var$6 = var$6.$next;
            }
        } else {
            $result = var$4.$value5;
            var$10 = ($result >>> 4 | 0) ^ $result << 28 ^ $result << 8 ^ ($result >>> 24 | 0);
            var$9 = var$6.$elementData.data;
            var$6 = var$9[var$10 & (var$9.length - 1 | 0)];
            while (var$6 !== null) {
                if (var$6.$origKeyHash == var$10) {
                    var$7 = var$6.$key;
                    if (var$4 !== var$7 && !(var$4 === var$7 ? 1 : var$7 instanceof jl_Integer && var$7.$value5 == $result ? 1 : 0) ? 0 : 1)
                        break;
                }
                var$6 = var$6.$next;
            }
        }
        var$4 = var$6 === null ? null : var$6.$value4;
        jn_IntBufferImpl_put($params, !(var$5.getShaderParameter(var$4, $pname) ? 1 : 0) ? 0 : 1);
    }
}
function cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = $this.$gl0;
    var$3 = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $shader;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    return $rt_str(var$2.getShaderInfoLog(var$3));
}
function cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name) {
    var var$3, $location, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$3 = $this.$gl0;
    $location = $this.$programs;
    var$5 = $rt_compare($program, (-128));
    if (var$5 >= 0 && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$6 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$6 = new jl_Integer;
        var$6.$value5 = $program;
    }
    if (var$6 === null) {
        var$7 = $location.$elementData.data[0];
        while (var$7 !== null && var$7.$key !== null) {
            var$7 = var$7.$next;
        }
    } else {
        var$8 = var$6.$value5;
        var$9 = (var$8 >>> 4 | 0) ^ var$8 << 28 ^ var$8 << 8 ^ (var$8 >>> 24 | 0);
        var$10 = $location.$elementData.data;
        var$7 = var$10[var$9 & (var$10.length - 1 | 0)];
        while (var$7 !== null) {
            if (var$7.$origKeyHash == var$9) {
                $location = var$7.$key;
                if (var$6 !== $location && !(var$6 === $location ? 1 : $location instanceof jl_Integer && $location.$value5 == var$8 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$7 = var$7.$next;
        }
    }
    $location = var$7 === null ? null : var$7.$value4;
    $location = var$3.getUniformLocation($location, $rt_ustr($name));
    if ($location === null)
        return (-1);
    $name = $this.$uniforms;
    if (var$5 >= 0 && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$3 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$3 = new jl_Integer;
        var$3.$value5 = $program;
    }
    if (var$3 === null) {
        $name = $name.$elementData.data[0];
        while ($name !== null && $name.$key !== null) {
            $name = $name.$next;
        }
    } else {
        var$9 = var$3.$value5;
        var$11 = (var$9 >>> 4 | 0) ^ var$9 << 28 ^ var$9 << 8 ^ (var$9 >>> 24 | 0);
        var$10 = $name.$elementData.data;
        $name = var$10[var$11 & (var$10.length - 1 | 0)];
        while ($name !== null) {
            if ($name.$origKeyHash == var$11) {
                var$6 = $name.$key;
                if (var$3 !== var$6 && !(var$3 === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == var$9 ? 1 : 0) ? 0 : 1)
                    break;
            }
            $name = $name.$next;
        }
    }
    $name = $name === null ? null : $name.$value4;
    if ($name === null) {
        $name = new ju_HashMap;
        var$8 = ju_HashMap_calculateCapacity(16);
        $name.$elementCount = 0;
        var$12 = $rt_createArray(ju_HashMap$HashEntry, var$8);
        var$10 = var$12.data;
        $name.$elementData = var$12;
        $name.$loadFactor = 0.75;
        $name.$threshold = var$10.length * 0.75 | 0;
        var$3 = $this.$uniforms;
        if (var$5 >= 0 && $program <= 127) {
            jl_Integer_ensureIntegerCache();
            var$6 = jl_Integer_integerCache.data[$program + 128 | 0];
        } else {
            var$6 = new jl_Integer;
            var$6.$value5 = $program;
        }
        ju_HashMap_putImpl(var$3, var$6, $name);
    }
    var$8 = $this.$nextUniformId;
    $this.$nextUniformId = var$8 + 1 | 0;
    if (var$8 >= (-128) && var$8 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$3 = jl_Integer_integerCache.data[var$8 + 128 | 0];
    } else {
        var$3 = new jl_Integer;
        var$3.$value5 = var$8;
    }
    ju_HashMap_putImpl($name, var$3, $location);
    return var$8;
}
function cgxgbt_TeaGL20_glLinkProgram($this, $program) {
    var var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = $this.$gl0;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$5 = var$3.$elementData.data[0];
        while (var$5 !== null && var$5.$key !== null) {
            var$5 = var$5.$next;
        }
    } else {
        var$6 = var$4.$value5;
        $program = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$5 = var$7[$program & (var$7.length - 1 | 0)];
        while (var$5 !== null) {
            if (var$5.$origKeyHash == $program) {
                var$3 = var$5.$key;
                if (var$4 !== var$3 && !(var$4 === var$3 ? 1 : var$3 instanceof jl_Integer && var$3.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$5 = var$5.$next;
        }
    }
    var$3 = var$5 === null ? null : var$5.$value4;
    var$2.linkProgram(var$3);
}
function cgxgbt_TeaGL20_glShaderSource($this, $shader, $source) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$3 = $this.$gl0;
    var$4 = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $shader;
    }
    if (var$5 === null) {
        var$6 = var$4.$elementData.data[0];
        while (var$6 !== null && var$6.$key !== null) {
            var$6 = var$6.$next;
        }
    } else {
        var$7 = var$5.$value5;
        var$8 = (var$7 >>> 4 | 0) ^ var$7 << 28 ^ var$7 << 8 ^ (var$7 >>> 24 | 0);
        var$9 = var$4.$elementData.data;
        var$6 = var$9[var$8 & (var$9.length - 1 | 0)];
        while (var$6 !== null) {
            if (var$6.$origKeyHash == var$8) {
                var$4 = var$6.$key;
                if (var$5 !== var$4 && !(var$5 === var$4 ? 1 : var$4 instanceof jl_Integer && var$4.$value5 == var$7 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$6 = var$6.$next;
        }
    }
    var$4 = var$6 === null ? null : var$6.$value4;
    var$3.shaderSource(var$4, $rt_ustr($source));
}
function cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param) {
    var var$4, var$5;
    var$4 = $this.$gl0;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
}
function cgxgbt_TeaGL20_glUniform1i($this, $location, $x) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = $this.$uniforms;
    var$4 = $this.$currProgram;
    if (var$4 >= (-128) && var$4 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[var$4 + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = var$4;
    }
    if (var$5 === null) {
        var$6 = var$3.$elementData.data[0];
        while (var$6 !== null && var$6.$key !== null) {
            var$6 = var$6.$next;
        }
    } else {
        var$4 = var$5.$value5;
        var$7 = (var$4 >>> 4 | 0) ^ var$4 << 28 ^ var$4 << 8 ^ (var$4 >>> 24 | 0);
        var$8 = var$3.$elementData.data;
        var$6 = var$8[var$7 & (var$8.length - 1 | 0)];
        while (var$6 !== null) {
            if (var$6.$origKeyHash == var$7) {
                var$3 = var$6.$key;
                if (var$5 !== var$3 && !(var$5 === var$3 ? 1 : var$3 instanceof jl_Integer && var$3.$value5 == var$4 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$6 = var$6.$next;
        }
    }
    var$3 = var$6 === null ? null : var$6.$value4;
    if ($location >= (-128) && $location <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$location + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $location;
    }
    if (var$5 === null) {
        var$6 = var$3.$elementData.data[0];
        while (var$6 !== null && var$6.$key !== null) {
            var$6 = var$6.$next;
        }
    } else {
        $location = var$5.$value5;
        var$9 = ($location >>> 4 | 0) ^ $location << 28 ^ $location << 8 ^ ($location >>> 24 | 0);
        var$8 = var$3.$elementData.data;
        var$6 = var$8[var$9 & (var$8.length - 1 | 0)];
        while (var$6 !== null) {
            if (var$6.$origKeyHash == var$9) {
                var$3 = var$6.$key;
                if (var$5 !== var$3 && !(var$5 === var$3 ? 1 : var$3 instanceof jl_Integer && var$3.$value5 == $location ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$6 = var$6.$next;
        }
    }
    var$10 = var$6 === null ? null : var$6.$value4;
    $this.$gl0.uniform1i(var$10, $x);
}
function cgxgbt_TeaGL20_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
    var var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    var$6 = $this.$uniforms;
    $offset = $this.$currProgram;
    if ($offset >= (-128) && $offset <= 127) {
        jl_Integer_ensureIntegerCache();
        var$7 = jl_Integer_integerCache.data[$offset + 128 | 0];
    } else {
        var$7 = new jl_Integer;
        var$7.$value5 = $offset;
    }
    if (var$7 === null) {
        var$8 = var$6.$elementData.data[0];
        while (var$8 !== null && var$8.$key !== null) {
            var$8 = var$8.$next;
        }
    } else {
        var$9 = var$7.$value5;
        $count = (var$9 >>> 4 | 0) ^ var$9 << 28 ^ var$9 << 8 ^ (var$9 >>> 24 | 0);
        var$10 = var$6.$elementData.data;
        var$8 = var$10[$count & (var$10.length - 1 | 0)];
        while (var$8 !== null) {
            if (var$8.$origKeyHash == $count) {
                var$6 = var$8.$key;
                if (var$7 !== var$6 && !(var$7 === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == var$9 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$8 = var$8.$next;
        }
    }
    var$6 = var$8 === null ? null : var$8.$value4;
    if ($location >= (-128) && $location <= 127) {
        jl_Integer_ensureIntegerCache();
        var$7 = jl_Integer_integerCache.data[$location + 128 | 0];
    } else {
        var$7 = new jl_Integer;
        var$7.$value5 = $location;
    }
    if (var$7 === null) {
        var$8 = var$6.$elementData.data[0];
        while (var$8 !== null && var$8.$key !== null) {
            var$8 = var$8.$next;
        }
    } else {
        $location = var$7.$value5;
        $count = ($location >>> 4 | 0) ^ $location << 28 ^ $location << 8 ^ ($location >>> 24 | 0);
        var$10 = var$6.$elementData.data;
        var$8 = var$10[$count & (var$10.length - 1 | 0)];
        while (var$8 !== null) {
            if (var$8.$origKeyHash == $count) {
                var$6 = var$8.$key;
                if (var$7 !== var$6 && !(var$7 === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == $location ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$8 = var$8.$next;
        }
    }
    var$11 = var$8 === null ? null : var$8.$value4;
    var$6 = $this.$gl0;
    var$7 = "uniformMatrix4fv";
    var$8 = !!$transpose;
    if ($value === null)
        var$12 = null;
    else {
        $value = $value.data;
        $location = $value.length;
        var$12 = new $rt_globals.Array($location);
        $count = 0;
        while ($count < $location) {
            var$13 = $value[$count];
            var$12[$count] = var$13;
            $count = $count + 1 | 0;
        }
    }
    var$6[var$7](var$11, var$8, var$12);
}
function cgxgbt_TeaGL20_glUseProgram($this, $program) {
    var var$2, var$3, var$4, var$5, var$6, var$7;
    $this.$currProgram = $program;
    var$2 = $this.$gl0;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$5 = var$3.$elementData.data[0];
        while (var$5 !== null && var$5.$key !== null) {
            var$5 = var$5.$next;
        }
    } else {
        var$6 = var$4.$value5;
        $program = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$5 = var$7[$program & (var$7.length - 1 | 0)];
        while (var$5 !== null) {
            if (var$5.$origKeyHash == $program) {
                var$3 = var$5.$key;
                if (var$4 !== var$3 && !(var$4 === var$3 ? 1 : var$3 instanceof jl_Integer && var$3.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$5 = var$5.$next;
        }
    }
    var$3 = var$5 === null ? null : var$5.$value4;
    var$2.useProgram(var$3);
}
function cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    $this.$gl0.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
}
var cgxgbt_TeaGL20Debug = $rt_classWithoutFields(cgxgbt_TeaGL20);
function cgxgbt_TeaGL20Debug_glBindTexture($this, $target, $texture) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = $this.$gl0;
    var$4 = $this.$textures;
    if ($texture >= (-128) && $texture <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$texture + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $texture;
    }
    if (var$5 === null) {
        var$4 = var$4.$elementData.data[0];
        while (var$4 !== null && var$4.$key !== null) {
            var$4 = var$4.$next;
        }
    } else {
        var$6 = var$5.$value5;
        $texture = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
        var$7 = var$4.$elementData.data;
        var$4 = var$7[$texture & (var$7.length - 1 | 0)];
        while (var$4 !== null) {
            if (var$4.$origKeyHash == $texture) {
                var$8 = var$4.$key;
                if (var$5 !== var$8 && !(var$5 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$4 = var$4.$next;
        }
    }
    var$4 = var$4 === null ? null : var$4.$value4;
    var$3.bindTexture($target, var$4);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $target = var$4.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $target, var$8);
    var$5 = new jl_String;
    var$7 = var$4.$buffer;
    $texture = var$4.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($texture);
    var$10 = var$9.data;
    var$5.$characters = var$9;
    var$6 = 0;
    while (var$6 < $texture) {
        var$10[var$6] = var$7.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$5;
    $rt_throw(var$3);
}
function cgxgbt_TeaGL20Debug_glClear($this, $mask) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.clear($mask);
    $mask = $this.$gl0.getError();
    if (!$mask)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($mask, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $mask, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $mask = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $mask, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glClearColor($this, $red, $green, $blue, $alpha) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    $this.$gl0.clearColor($red, $green, $blue, $alpha);
    var$5 = $this.$gl0.getError();
    if (!var$5)
        return;
    var$6 = new cbgu_GdxRuntimeException;
    var$7 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(58));
    var$5 = var$8.$length;
    if (var$7 === null)
        var$7 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    var$9 = new jl_String;
    var$10 = var$8.$buffer;
    var$11 = var$8.$length;
    jl_String_$callClinit();
    var$12 = $rt_createCharArray(var$11);
    var$13 = var$12.data;
    var$9.$characters = var$12;
    var$14 = 0;
    while (var$14 < var$11) {
        var$13[var$14] = var$10.data[var$14 + 0 | 0];
        var$14 = var$14 + 1 | 0;
    }
    var$6.$suppressionEnabled = 1;
    var$6.$writableStackTrace = 1;
    var$6.$message = var$9;
    $rt_throw(var$6);
}
function cgxgbt_TeaGL20Debug_glDepthMask($this, $flag) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.depthMask(!!$flag);
    $flag = $this.$gl0.getError();
    if (!$flag)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($flag, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $flag, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $flag = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $flag, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glDisable($this, $cap) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.disable($cap);
    $cap = $this.$gl0.getError();
    if (!$cap)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $cap, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $cap = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $cap, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glDrawArrays($this, $mode, $first, $count) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl0.drawArrays($mode, $first, $count);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $mode, 10);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(58));
    $mode = var$6.$length;
    if (var$5 === null)
        var$5 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$6, $mode, var$5);
    var$7 = new jl_String;
    var$8 = var$6.$buffer;
    $first = var$6.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($first);
    var$10 = var$9.data;
    var$7.$characters = var$9;
    var$11 = 0;
    while (var$11 < $first) {
        var$10[var$11] = var$8.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$7;
    $rt_throw(var$4);
}
function cgxgbt_TeaGL20Debug_glDrawElements($this, $mode, $count, $type, $indices) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$5 = $this.$gl0;
    var$6 = $indices.$position;
    var$5.drawElements($mode, $count, $type, var$6);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    $indices = new cbgu_GdxRuntimeException;
    var$7 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $mode, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(58));
    $mode = var$5.$length;
    if (var$7 === null)
        var$7 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, $mode, var$7);
    var$8 = new jl_String;
    var$9 = var$5.$buffer;
    $count = var$5.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($count);
    var$11 = var$10.data;
    var$8.$characters = var$10;
    $type = 0;
    while ($type < $count) {
        var$11[$type] = var$9.data[$type + 0 | 0];
        $type = $type + 1 | 0;
    }
    $indices.$suppressionEnabled = 1;
    $indices.$writableStackTrace = 1;
    $indices.$message = var$8;
    $rt_throw($indices);
}
function cgxgbt_TeaGL20Debug_glEnable($this, $cap) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.enable($cap);
    $cap = $this.$gl0.getError();
    if (!$cap)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $cap, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $cap = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $cap, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glGetString($this, $name) {
    return $rt_str($this.$gl0.getParameter($name));
}
function cgxgbt_TeaGL20Debug_glPixelStorei($this, $pname, $param) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.pixelStorei($pname, $param);
    $pname = $this.$gl0.getError();
    if (!$pname)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $pname, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(58));
    $pname = var$5.$length;
    if (var$4 === null)
        var$4 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, $pname, var$4);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    $param = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($param);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$10 = 0;
    while (var$10 < $param) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$6;
    $rt_throw(var$3);
}
function cgxgbt_TeaGL20Debug_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    var var$10, var$11, var$12, var$13, var$14, var$15;
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    $pixels = new cbgu_GdxRuntimeException;
    var$10 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$11 = new jl_StringBuilder;
    var$11.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$11, var$11.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(58));
    $target = var$11.$length;
    if (var$10 === null)
        var$10 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$11, $target, var$10);
    var$12 = new jl_String;
    var$13 = var$11.$buffer;
    $level = var$11.$length;
    jl_String_$callClinit();
    var$14 = $rt_createCharArray($level);
    var$15 = var$14.data;
    var$12.$characters = var$14;
    $width = 0;
    while ($width < $level) {
        var$15[$width] = var$13.data[$width + 0 | 0];
        $width = $width + 1 | 0;
    }
    $pixels.$suppressionEnabled = 1;
    $pixels.$writableStackTrace = 1;
    $pixels.$message = var$12;
    $rt_throw($pixels);
}
function cgxgbt_TeaGL20Debug_glTexParameterf($this, $target, $pname, $param) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl0.texParameterf($target, $pname, $param);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(58));
    $target = var$6.$length;
    if (var$5 === null)
        var$5 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$6, $target, var$5);
    var$7 = new jl_String;
    var$8 = var$6.$buffer;
    $pname = var$6.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($pname);
    var$10 = var$9.data;
    var$7.$characters = var$9;
    var$11 = 0;
    while (var$11 < $pname) {
        var$10[var$11] = var$8.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$7;
    $rt_throw(var$4);
}
function cgxgbt_TeaGL20Debug_glViewport($this, $x, $y, $width, $height) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl0.viewport($x, $y, $width, $height);
    $x = $this.$gl0.getError();
    if (!$x)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($x, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $x, 10);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(58));
    $x = var$7.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$7, $x, var$6);
    var$8 = new jl_String;
    var$9 = var$7.$buffer;
    $y = var$7.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($y);
    var$11 = var$10.data;
    var$8.$characters = var$10;
    $width = 0;
    while ($width < $y) {
        var$11[$width] = var$9.data[$width + 0 | 0];
        $width = $width + 1 | 0;
    }
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    var$5.$message = var$8;
    $rt_throw(var$5);
}
function cgxgbt_TeaGL20Debug_glAttachShader($this, $program, $shader) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    var$4 = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$8 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$8 = new jl_Integer;
        var$8.$value5 = $shader;
    }
    if (var$8 === null) {
        var$4 = var$4.$elementData.data[0];
        while (var$4 !== null && var$4.$key !== null) {
            var$4 = var$4.$next;
        }
    } else {
        $program = var$8.$value5;
        $shader = ($program >>> 4 | 0) ^ $program << 28 ^ $program << 8 ^ ($program >>> 24 | 0);
        var$7 = var$4.$elementData.data;
        var$4 = var$7[$shader & (var$7.length - 1 | 0)];
        while (var$4 !== null) {
            if (var$4.$origKeyHash == $shader) {
                var$9 = var$4.$key;
                if (var$8 !== var$9 && !(var$8 === var$9 ? 1 : var$9 instanceof jl_Integer && var$9.$value5 == $program ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$4 = var$4.$next;
        }
    }
    var$4 = var$4 === null ? null : var$4.$value4;
    $this.$gl0.attachShader(var$3, var$4);
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$9 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $program, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $program = var$4.$length;
    if (var$9 === null)
        var$9 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $program, var$9);
    var$8 = new jl_String;
    var$7 = var$4.$buffer;
    $shader = var$4.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($shader);
    var$11 = var$10.data;
    var$8.$characters = var$10;
    var$12 = 0;
    while (var$12 < $shader) {
        var$11[var$12] = var$7.data[var$12 + 0 | 0];
        var$12 = var$12 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$8;
    $rt_throw(var$3);
}
function cgxgbt_TeaGL20Debug_glBindBuffer($this, $target, $buffer) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = $this.$gl0;
    var$4 = $this.$buffers;
    if ($buffer >= (-128) && $buffer <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$buffer + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $buffer;
    }
    if (var$5 === null) {
        var$4 = var$4.$elementData.data[0];
        while (var$4 !== null && var$4.$key !== null) {
            var$4 = var$4.$next;
        }
    } else {
        var$6 = var$5.$value5;
        $buffer = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
        var$7 = var$4.$elementData.data;
        var$4 = var$7[$buffer & (var$7.length - 1 | 0)];
        while (var$4 !== null) {
            if (var$4.$origKeyHash == $buffer) {
                var$8 = var$4.$key;
                if (var$5 !== var$8 && !(var$5 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$4 = var$4.$next;
        }
    }
    var$4 = var$4 === null ? null : var$4.$value4;
    var$3.bindBuffer($target, var$4);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $target = var$4.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $target, var$8);
    var$5 = new jl_String;
    var$7 = var$4.$buffer;
    $buffer = var$4.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($buffer);
    var$10 = var$9.data;
    var$5.$characters = var$9;
    var$6 = 0;
    while (var$6 < $buffer) {
        var$10[var$6] = var$7.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$5;
    $rt_throw(var$3);
}
function cgxgbt_TeaGL20Debug_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl0.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    $srcRGB = $this.$gl0.getError();
    if (!$srcRGB)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($srcRGB, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $srcRGB, 10);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(58));
    $srcRGB = var$7.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$7, $srcRGB, var$6);
    var$8 = new jl_String;
    var$9 = var$7.$buffer;
    $dstRGB = var$7.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($dstRGB);
    var$11 = var$10.data;
    var$8.$characters = var$10;
    $srcAlpha = 0;
    while ($srcAlpha < $dstRGB) {
        var$11[$srcAlpha] = var$9.data[$srcAlpha + 0 | 0];
        $srcAlpha = $srcAlpha + 1 | 0;
    }
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    var$5.$message = var$8;
    $rt_throw(var$5);
}
function cgxgbt_TeaGL20Debug_glBufferData($this, $target, $size, $data, $usage) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    $data = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(58));
    $target = var$6.$length;
    if (var$5 === null)
        var$5 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$6, $target, var$5);
    var$7 = new jl_String;
    var$8 = var$6.$buffer;
    $usage = var$6.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($usage);
    var$10 = var$9.data;
    var$7.$characters = var$9;
    var$11 = 0;
    while (var$11 < $usage) {
        var$10[var$11] = var$8.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    $data.$suppressionEnabled = 1;
    $data.$writableStackTrace = 1;
    $data.$message = var$7;
    $rt_throw($data);
}
function cgxgbt_TeaGL20Debug_glBufferSubData($this, $target, $offset, $size, $data) {
    var var$5, var$6, var$7, var$8, var$9, var$10;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl0;
        $data = cgxgbt_TeaGL20_copy($this, $data);
        var$5.bufferSubData($target, $offset, $data);
    }
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    $data = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(58));
    $target = var$5.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, $target, var$6);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    $offset = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray($offset);
    var$10 = var$9.data;
    var$7.$characters = var$9;
    $size = 0;
    while ($size < $offset) {
        var$10[$size] = var$8.data[$size + 0 | 0];
        $size = $size + 1 | 0;
    }
    $data.$suppressionEnabled = 1;
    $data.$writableStackTrace = 1;
    $data.$message = var$7;
    $rt_throw($data);
}
function cgxgbt_TeaGL20Debug_glCompileShader($this, $shader) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$3 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$3 = new jl_Integer;
        var$3.$value5 = $shader;
    }
    if (var$3 === null) {
        var$2 = var$2.$elementData.data[0];
        while (var$2 !== null && var$2.$key !== null) {
            var$2 = var$2.$next;
        }
    } else {
        var$4 = var$3.$value5;
        var$5 = (var$4 >>> 4 | 0) ^ var$4 << 28 ^ var$4 << 8 ^ (var$4 >>> 24 | 0);
        var$6 = var$2.$elementData.data;
        var$2 = var$6[var$5 & (var$6.length - 1 | 0)];
        while (var$2 !== null) {
            if (var$2.$origKeyHash == var$5) {
                var$7 = var$2.$key;
                if (var$3 !== var$7 && !(var$3 === var$7 ? 1 : var$7 instanceof jl_Integer && var$7.$value5 == var$4 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$2 = var$2.$next;
        }
    }
    var$2 = var$2 === null ? null : var$2.$value4;
    $this.$gl0.compileShader(var$2);
    $shader = $this.$gl0.getError();
    if (!$shader)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    $shader = var$3.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, $shader, var$8);
    var$7 = new jl_String;
    var$6 = var$3.$buffer;
    var$9 = var$3.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray(var$9);
    var$11 = var$10.data;
    var$7.$characters = var$10;
    var$4 = 0;
    while (var$4 < var$9) {
        var$11[var$4] = var$6.data[var$4 + 0 | 0];
        var$4 = var$4 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$7;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glCreateProgram($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$gl0.createProgram();
    var$2 = $this.$nextProgramId;
    $this.$nextProgramId = var$2 + 1 | 0;
    var$3 = $this.$programs;
    if (var$2 >= (-128) && var$2 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[var$2 + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = var$2;
    }
    ju_HashMap_putImpl(var$3, var$4, var$1);
    var$5 = $this.$gl0.getError();
    if (!var$5)
        return var$2;
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$5, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    var$5 = var$3.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$5, var$6);
    var$4 = new jl_String;
    var$7 = var$3.$buffer;
    var$2 = var$3.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$2);
    var$9 = var$8.data;
    var$4.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$2) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    var$1.$message = var$4;
    $rt_throw(var$1);
}
function cgxgbt_TeaGL20Debug_glCreateShader($this, $type) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = $this.$gl0.createShader($type);
    var$3 = $this.$nextShaderId;
    $this.$nextShaderId = var$3 + 1 | 0;
    var$4 = $this.$shaders;
    if (var$3 >= (-128) && var$3 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[var$3 + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = var$3;
    }
    ju_HashMap_putImpl(var$4, var$5, var$2);
    $type = $this.$gl0.getError();
    if (!$type)
        return var$3;
    var$2 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($type, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $type, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $type = var$4.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $type, var$6);
    var$5 = new jl_String;
    var$7 = var$4.$buffer;
    var$3 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$3);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$3) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glDisableVertexAttribArray($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.disableVertexAttribArray($index);
    $index = $this.$gl0.getError();
    if (!$index)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $index = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $index, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glDrawElements0($this, $mode, $count, $type, $indices) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl0.drawElements($mode, $count, $type, $indices);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $mode, 10);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(58));
    $mode = var$7.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$7, $mode, var$6);
    var$8 = new jl_String;
    var$9 = var$7.$buffer;
    $count = var$7.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($count);
    var$11 = var$10.data;
    var$8.$characters = var$10;
    $type = 0;
    while ($type < $count) {
        var$11[$type] = var$9.data[$type + 0 | 0];
        $type = $type + 1 | 0;
    }
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    var$5.$message = var$8;
    $rt_throw(var$5);
}
function cgxgbt_TeaGL20Debug_glEnableVertexAttribArray($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.enableVertexAttribArray($index);
    $index = $this.$gl0.getError();
    if (!$index)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $index = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $index, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glGenerateMipmap($this, $target) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.generateMipmap($target);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $target = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $target, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glGetActiveAttrib($this, $program, $index, $size, $type) {
    var $attrib, var$6, var$7, var$8, var$9, var$10;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    $program = $this.$gl0.getError();
    if (!$program)
        return $attrib;
    $size = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    $type = new jl_StringBuilder;
    $type.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0($type, $type.$length, $program, 10);
    jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(58));
    $program = $type.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert($type, $program, var$6);
    $attrib = new jl_String;
    var$7 = $type.$buffer;
    $index = $type.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($index);
    var$9 = var$8.data;
    $attrib.$characters = var$8;
    var$10 = 0;
    while (var$10 < $index) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    $size.$suppressionEnabled = 1;
    $size.$writableStackTrace = 1;
    $size.$message = $attrib;
    $rt_throw($size);
}
function cgxgbt_TeaGL20Debug_glGetActiveUniform($this, $program, $index, $size, $type) {
    var $uniform, var$6, var$7, var$8, var$9, var$10;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    $program = $this.$gl0.getError();
    if (!$program)
        return $uniform;
    $size = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    $type = new jl_StringBuilder;
    $type.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0($type, $type.$length, $program, 10);
    jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(58));
    $program = $type.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert($type, $program, var$6);
    $uniform = new jl_String;
    var$7 = $type.$buffer;
    $index = $type.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($index);
    var$9 = var$8.data;
    $uniform.$characters = var$8;
    var$10 = 0;
    while (var$10 < $index) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    $size.$suppressionEnabled = 1;
    $size.$writableStackTrace = 1;
    $size.$message = $uniform;
    $rt_throw($size);
}
function cgxgbt_TeaGL20Debug_glGetAttribLocation($this, $program, $name) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    $program = $this.$gl0.getAttribLocation(var$3, $rt_ustr($name));
    var$9 = $this.$gl0.getError();
    if (!var$9)
        return $program;
    $name = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString(var$9, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$9, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    $program = var$3.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, $program, var$8);
    var$4 = new jl_String;
    var$7 = var$3.$buffer;
    var$9 = var$3.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray(var$9);
    var$11 = var$10.data;
    var$4.$characters = var$10;
    var$5 = 0;
    while (var$5 < var$9) {
        var$11[var$5] = var$7.data[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    $name.$suppressionEnabled = 1;
    $name.$writableStackTrace = 1;
    $name.$message = var$4;
    $rt_throw($name);
}
function cgxgbt_TeaGL20Debug_glGetFloatv($this, $pname, $params) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    $pname = $this.$gl0.getError();
    if (!$pname)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $pname, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(58));
    $pname = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, $pname, var$3);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    $params.$suppressionEnabled = 1;
    $params.$writableStackTrace = 1;
    $params.$message = var$5;
    $rt_throw($params);
}
function cgxgbt_TeaGL20Debug_glGetProgramiv($this, $program, $pname, $params) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $program, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(58));
    $program = var$5.$length;
    if (var$4 === null)
        var$4 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, $program, var$4);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    var$8 = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    $params.$suppressionEnabled = 1;
    $params.$writableStackTrace = 1;
    $params.$message = var$6;
    $rt_throw($params);
}
function cgxgbt_TeaGL20Debug_glGetProgramInfoLog($this, $program) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$gl0;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    var$2 = $rt_str(var$2.getProgramInfoLog(var$3));
    $program = $this.$gl0.getError();
    if (!$program)
        return var$2;
    var$2 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    $program = var$3.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, $program, var$8);
    var$4 = new jl_String;
    var$7 = var$3.$buffer;
    var$9 = var$3.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray(var$9);
    var$11 = var$10.data;
    var$4.$characters = var$10;
    var$5 = 0;
    while (var$5 < var$9) {
        var$11[var$5] = var$7.data[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glGetShaderiv($this, $shader, $pname, $params) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    $shader = $this.$gl0.getError();
    if (!$shader)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $shader, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(58));
    $shader = var$5.$length;
    if (var$4 === null)
        var$4 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, $shader, var$4);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    var$8 = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    $params.$suppressionEnabled = 1;
    $params.$writableStackTrace = 1;
    $params.$message = var$6;
    $rt_throw($params);
}
function cgxgbt_TeaGL20Debug_glGetShaderInfoLog($this, $shader) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$gl0;
    var$3 = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $shader;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    var$2 = $rt_str(var$2.getShaderInfoLog(var$3));
    $shader = $this.$gl0.getError();
    if (!$shader)
        return var$2;
    var$2 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    $shader = var$3.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, $shader, var$8);
    var$4 = new jl_String;
    var$7 = var$3.$buffer;
    var$9 = var$3.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray(var$9);
    var$11 = var$10.data;
    var$4.$characters = var$10;
    var$5 = 0;
    while (var$5 < var$9) {
        var$11[var$5] = var$7.data[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glGetUniformLocation($this, $program, $name) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, $loc, var$12;
    var$3 = $this.$gl0;
    var$4 = $this.$programs;
    var$5 = $rt_compare($program, (-128));
    if (var$5 >= 0 && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$6 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$6 = new jl_Integer;
        var$6.$value5 = $program;
    }
    if (var$6 === null) {
        var$4 = var$4.$elementData.data[0];
        while (var$4 !== null && var$4.$key !== null) {
            var$4 = var$4.$next;
        }
    } else {
        var$7 = var$6.$value5;
        var$8 = (var$7 >>> 4 | 0) ^ var$7 << 28 ^ var$7 << 8 ^ (var$7 >>> 24 | 0);
        var$9 = var$4.$elementData.data;
        var$4 = var$9[var$8 & (var$9.length - 1 | 0)];
        while (var$4 !== null) {
            if (var$4.$origKeyHash == var$8) {
                var$10 = var$4.$key;
                if (var$6 !== var$10 && !(var$6 === var$10 ? 1 : var$10 instanceof jl_Integer && var$10.$value5 == var$7 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$4 = var$4.$next;
        }
    }
    var$4 = var$4 === null ? null : var$4.$value4;
    $name = var$3.getUniformLocation(var$4, $rt_ustr($name));
    if ($name === null)
        $loc = (-1);
    else {
        var$3 = $this.$uniforms;
        if (var$5 >= 0 && $program <= 127) {
            jl_Integer_ensureIntegerCache();
            var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
        } else {
            var$4 = new jl_Integer;
            var$4.$value5 = $program;
        }
        if (var$4 === null) {
            var$3 = var$3.$elementData.data[0];
            while (var$3 !== null && var$3.$key !== null) {
                var$3 = var$3.$next;
            }
        } else {
            var$7 = var$4.$value5;
            var$8 = (var$7 >>> 4 | 0) ^ var$7 << 28 ^ var$7 << 8 ^ (var$7 >>> 24 | 0);
            var$9 = var$3.$elementData.data;
            var$3 = var$9[var$8 & (var$9.length - 1 | 0)];
            while (var$3 !== null) {
                if (var$3.$origKeyHash == var$8) {
                    var$6 = var$3.$key;
                    if (var$4 !== var$6 && !(var$4 === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == var$7 ? 1 : 0) ? 0 : 1)
                        break;
                }
                var$3 = var$3.$next;
            }
        }
        var$3 = var$3 === null ? null : var$3.$value4;
        if (var$3 === null) {
            var$3 = new ju_HashMap;
            $loc = ju_HashMap_calculateCapacity(16);
            var$3.$elementCount = 0;
            var$12 = $rt_createArray(ju_HashMap$HashEntry, $loc);
            var$9 = var$12.data;
            var$3.$elementData = var$12;
            var$3.$loadFactor = 0.75;
            var$3.$threshold = var$9.length * 0.75 | 0;
            var$4 = $this.$uniforms;
            if (var$5 >= 0 && $program <= 127) {
                jl_Integer_ensureIntegerCache();
                var$6 = jl_Integer_integerCache.data[$program + 128 | 0];
            } else {
                var$6 = new jl_Integer;
                var$6.$value5 = $program;
            }
            ju_HashMap_putImpl(var$4, var$6, var$3);
        }
        $loc = $this.$nextUniformId;
        $this.$nextUniformId = $loc + 1 | 0;
        if ($loc >= (-128) && $loc <= 127) {
            jl_Integer_ensureIntegerCache();
            var$4 = jl_Integer_integerCache.data[$loc + 128 | 0];
        } else {
            var$4 = new jl_Integer;
            var$4.$value5 = $loc;
        }
        ju_HashMap_putImpl(var$3, var$4, $name);
    }
    $program = $this.$gl0.getError();
    if (!$program)
        return $loc;
    $name = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    jl_AbstractStringBuilder_insert5(var$3, var$3.$length, var$6);
    cbgu_GdxRuntimeException__init_($name, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw($name);
}
function cgxgbt_TeaGL20Debug_glLinkProgram($this, $program) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$gl0;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    var$2.linkProgram(var$3);
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    $program = var$3.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, $program, var$8);
    var$4 = new jl_String;
    var$7 = var$3.$buffer;
    var$9 = var$3.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray(var$9);
    var$11 = var$10.data;
    var$4.$characters = var$10;
    var$5 = 0;
    while (var$5 < var$9) {
        var$11[var$5] = var$7.data[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glShaderSource($this, $shader, $source) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$3 = $this.$gl0;
    var$4 = $this.$shaders;
    if ($shader >= (-128) && $shader <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$shader + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $shader;
    }
    if (var$5 === null) {
        var$4 = var$4.$elementData.data[0];
        while (var$4 !== null && var$4.$key !== null) {
            var$4 = var$4.$next;
        }
    } else {
        var$6 = var$5.$value5;
        $shader = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
        var$7 = var$4.$elementData.data;
        var$4 = var$7[$shader & (var$7.length - 1 | 0)];
        while (var$4 !== null) {
            if (var$4.$origKeyHash == $shader) {
                var$8 = var$4.$key;
                if (var$5 !== var$8 && !(var$5 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$4 = var$4.$next;
        }
    }
    var$4 = var$4 === null ? null : var$4.$value4;
    var$3.shaderSource(var$4, $rt_ustr($source));
    $shader = $this.$gl0.getError();
    if (!$shader)
        return;
    $source = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    $shader = var$3.$length;
    if (var$5 === null)
        var$5 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, $shader, var$5);
    var$4 = new jl_String;
    var$7 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$6);
    var$10 = var$9.data;
    var$4.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$6) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    $source.$suppressionEnabled = 1;
    $source.$writableStackTrace = 1;
    $source.$message = var$4;
    $rt_throw($source);
}
function cgxgbt_TeaGL20Debug_glTexParameteri($this, $target, $pname, $param) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$4 = $this.$gl0;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(58));
    $target = var$7.$length;
    if (var$6 === null)
        var$6 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$7, $target, var$6);
    var$8 = new jl_String;
    var$9 = var$7.$buffer;
    $pname = var$7.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($pname);
    var$11 = var$10.data;
    var$8.$characters = var$10;
    $param = 0;
    while ($param < $pname) {
        var$11[$param] = var$9.data[$param + 0 | 0];
        $param = $param + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$8;
    $rt_throw(var$4);
}
function cgxgbt_TeaGL20Debug_glUniform1i($this, $location, $x) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$3 = $this.$uniforms;
    var$4 = $this.$currProgram;
    if (var$4 >= (-128) && var$4 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[var$4 + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = var$4;
    }
    if (var$5 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$6 = var$5.$value5;
        var$4 = (var$6 >>> 4 | 0) ^ var$6 << 28 ^ var$6 << 8 ^ (var$6 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$4 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$4) {
                var$8 = var$3.$key;
                if (var$5 !== var$8 && !(var$5 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$6 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    if ($location >= (-128) && $location <= 127) {
        jl_Integer_ensureIntegerCache();
        var$5 = jl_Integer_integerCache.data[$location + 128 | 0];
    } else {
        var$5 = new jl_Integer;
        var$5.$value5 = $location;
    }
    if (var$5 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        $location = var$5.$value5;
        var$4 = ($location >>> 4 | 0) ^ $location << 28 ^ $location << 8 ^ ($location >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$4 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$4) {
                var$8 = var$3.$key;
                if (var$5 !== var$8 && !(var$5 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == $location ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$9 = var$3 === null ? null : var$3.$value4;
    $this.$gl0.uniform1i(var$9, $x);
    $location = $this.$gl0.getError();
    if (!$location)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$9 = otci_IntegerUtil_toUnsignedLogRadixString($location, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $location, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(58));
    $location = var$5.$length;
    if (var$9 === null)
        var$9 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, $location, var$9);
    var$8 = new jl_String;
    var$7 = var$5.$buffer;
    $x = var$5.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($x);
    var$11 = var$10.data;
    var$8.$characters = var$10;
    var$4 = 0;
    while (var$4 < $x) {
        var$11[var$4] = var$7.data[var$4 + 0 | 0];
        var$4 = var$4 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$8;
    $rt_throw(var$3);
}
function cgxgbt_TeaGL20Debug_glUseProgram($this, $program) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$currProgram = $program;
    var$2 = $this.$gl0;
    var$3 = $this.$programs;
    if ($program >= (-128) && $program <= 127) {
        jl_Integer_ensureIntegerCache();
        var$4 = jl_Integer_integerCache.data[$program + 128 | 0];
    } else {
        var$4 = new jl_Integer;
        var$4.$value5 = $program;
    }
    if (var$4 === null) {
        var$3 = var$3.$elementData.data[0];
        while (var$3 !== null && var$3.$key !== null) {
            var$3 = var$3.$next;
        }
    } else {
        var$5 = var$4.$value5;
        var$6 = (var$5 >>> 4 | 0) ^ var$5 << 28 ^ var$5 << 8 ^ (var$5 >>> 24 | 0);
        var$7 = var$3.$elementData.data;
        var$3 = var$7[var$6 & (var$7.length - 1 | 0)];
        while (var$3 !== null) {
            if (var$3.$origKeyHash == var$6) {
                var$8 = var$3.$key;
                if (var$4 !== var$8 && !(var$4 === var$8 ? 1 : var$8 instanceof jl_Integer && var$8.$value5 == var$5 ? 1 : 0) ? 0 : 1)
                    break;
            }
            var$3 = var$3.$next;
        }
    }
    var$3 = var$3 === null ? null : var$3.$value4;
    var$2.useProgram(var$3);
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
    $program = var$3.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, $program, var$8);
    var$4 = new jl_String;
    var$7 = var$3.$buffer;
    var$9 = var$3.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray(var$9);
    var$11 = var$10.data;
    var$4.$characters = var$10;
    var$5 = 0;
    while (var$5 < var$9) {
        var$11[var$5] = var$7.data[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    var var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    $this.$gl0.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
    $indx = $this.$gl0.getError();
    if (!$indx)
        return;
    var$7 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($indx, 4);
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(141));
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $indx, 10);
    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(58));
    $indx = var$9.$length;
    if (var$8 === null)
        var$8 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$9, $indx, var$8);
    var$10 = new jl_String;
    var$11 = var$9.$buffer;
    $size = var$9.$length;
    jl_String_$callClinit();
    var$12 = $rt_createCharArray($size);
    var$13 = var$12.data;
    var$10.$characters = var$12;
    $type = 0;
    while ($type < $size) {
        var$13[$type] = var$11.data[$type + 0 | 0];
        $type = $type + 1 | 0;
    }
    var$7.$suppressionEnabled = 1;
    var$7.$writableStackTrace = 1;
    var$7.$message = var$10;
    $rt_throw(var$7);
}
function cbggg_GLVersion() {
    var a = this; jl_Object.call(a);
    a.$majorVersion = 0;
    a.$minorVersion = 0;
    a.$releaseVersion = 0;
    a.$vendorString = null;
    a.$rendererString = null;
    a.$type2 = null;
    a.$TAG = $rt_s(142);
}
function cbggg_GLVersion__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_GLVersion();
    cbggg_GLVersion__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_GLVersion__init_($this, $appType, $versionString, $vendorString, $rendererString) {
    $this.$TAG = $rt_s(142);
    cbg_Application$ApplicationType_$callClinit();
    if ($appType === cbg_Application$ApplicationType_Android) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_GLES;
    } else if ($appType === cbg_Application$ApplicationType_iOS) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_GLES;
    } else if ($appType === cbg_Application$ApplicationType_Desktop) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_OpenGL;
    } else if ($appType === cbg_Application$ApplicationType_Applet) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_OpenGL;
    } else if ($appType !== cbg_Application$ApplicationType_WebGL) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_NONE;
    } else {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_WebGL;
    }
    $appType = $this.$type2;
    cbggg_GLVersion$Type_$callClinit();
    if ($appType === cbggg_GLVersion$Type_GLES)
        cbggg_GLVersion_extractVersion($this, $rt_s(143), $versionString);
    else if ($appType === cbggg_GLVersion$Type_WebGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(144), $versionString);
    else if ($appType === cbggg_GLVersion$Type_OpenGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(145), $versionString);
    else {
        $this.$majorVersion = (-1);
        $this.$minorVersion = (-1);
        $this.$releaseVersion = (-1);
        $vendorString = $rt_s(42);
        $rendererString = $rt_s(42);
    }
    $this.$vendorString = $vendorString;
    $this.$rendererString = $rendererString;
}
function cbggg_GLVersion_extractVersion($this, $patternString, $versionString) {
    var $matcher, $result, $resultSplit, var$6, var$7, var$8, var$9, $found, $pattern, var$12;
    $matcher = jur_Matcher__init_(jur_Pattern_compile($patternString, 0), $versionString);
    if (jur_Matcher_find($matcher)) {
        $patternString = $matcher.$matchResult;
        if (!$patternString.$valid0) {
            $patternString = new jl_IllegalStateException;
            $patternString.$suppressionEnabled = 1;
            $patternString.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($patternString);
            $rt_throw($patternString);
        }
        if (1 >= $patternString.$groupCount) {
            $patternString = new jl_IndexOutOfBoundsException;
            jl_String_$callClinit();
            $versionString = new jl_StringBuilder;
            jl_Object__init_0($versionString);
            $versionString.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0($versionString, $versionString.$length, 1, 10);
            $result = new jl_String;
            $resultSplit = $versionString.$buffer;
            var$6 = $versionString.$length;
            var$7 = $rt_createCharArray(var$6);
            var$8 = var$7.data;
            $result.$characters = var$7;
            var$9 = 0;
            while (var$9 < var$6) {
                var$8[var$9] = $resultSplit.data[var$9 + 0 | 0];
                var$9 = var$9 + 1 | 0;
            }
            $patternString.$suppressionEnabled = 1;
            $patternString.$writableStackTrace = 1;
            $patternString.$message = $result;
            $rt_throw($patternString);
        }
        if ($patternString.$groupBounds.data[2] < 0)
            $result = null;
        else {
            $versionString = $patternString.$string0;
            jur_MatchResultImpl_checkGroup($patternString, 1);
            var$6 = $patternString.$groupBounds.data[2];
            jur_MatchResultImpl_checkGroup($patternString, 1);
            $result = jl_String_substring($versionString, var$6, $patternString.$groupBounds.data[3]);
        }
        $resultSplit = (jl_String_split($result, $rt_s(146))).data;
        $this.$majorVersion = cbggg_GLVersion_parseInt($this, $resultSplit[0], 2);
        $found = $resultSplit.length;
        $this.$minorVersion = $found < 2 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[1], 0);
        $this.$releaseVersion = $found < 3 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[2], 0);
    } else {
        $result = cbg_Gdx_app;
        $patternString = new jl_StringBuilder;
        $patternString.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $rt_s(147));
        jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $versionString);
        $pattern = new jl_String;
        $resultSplit = $patternString.$buffer;
        var$6 = $patternString.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$8 = var$7.data;
        $pattern.$characters = var$7;
        var$9 = 0;
        while (var$9 < var$6) {
            var$8[var$9] = $resultSplit.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        if ($result.$logLevel >= 2) {
            if (jl_System_outCache === null) {
                $versionString = new ji_PrintStream;
                $versionString.$out = otcic_StdoutOutputStream_INSTANCE;
                $patternString = new jl_StringBuilder;
                $patternString.$buffer = $rt_createCharArray(16);
                $versionString.$sb = $patternString;
                $versionString.$buffer2 = $rt_createCharArray(32);
                $versionString.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                $versionString.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_outCache = $versionString;
            }
            $result = jl_System_outCache;
            $patternString = new jl_StringBuilder;
            $patternString.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $rt_s(142));
            jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $rt_s(74));
            jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $pattern);
            $versionString = new jl_String;
            $resultSplit = $patternString.$buffer;
            var$9 = $patternString.$length;
            var$7 = $rt_createCharArray(var$9);
            var$8 = var$7.data;
            $versionString.$characters = var$7;
            var$12 = 0;
            while (var$12 < var$9) {
                var$8[var$12] = $resultSplit.data[var$12 + 0 | 0];
                var$12 = var$12 + 1 | 0;
            }
            $patternString = $result.$sb;
            jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $versionString);
            var$6 = $patternString.$length;
            jl_AbstractStringBuilder_insertSpace($patternString, var$6, var$6 + 1 | 0);
            $patternString.$buffer.data[var$6] = 10;
            ji_PrintStream_printSB($result);
        }
        $this.$majorVersion = 2;
        $this.$minorVersion = 0;
        $this.$releaseVersion = 0;
    }
}
function cbggg_GLVersion_parseInt($this, $v, $defaultValue) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $$je;
    a: {
        try {
            var$3 = jl_Integer_parseInt0($v);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    var$4 = cbg_Gdx_app;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(148));
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $v);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(149));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $defaultValue, 10);
    $v = new jl_String;
    var$6 = var$5.$buffer;
    var$7 = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    $v.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    if (var$4.$logLevel >= 1) {
        if (jl_System_errCache === null) {
            var$4 = new ji_PrintStream;
            var$4.$out = otcic_StderrOutputStream_INSTANCE;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            var$4.$sb = var$5;
            var$4.$buffer2 = $rt_createCharArray(32);
            var$4.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$4.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_errCache = var$4;
        }
        var$4 = jl_System_errCache;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(150));
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(74));
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $v);
        $v = new jl_String;
        var$6 = var$5.$buffer;
        var$11 = var$5.$length;
        var$9 = $rt_createCharArray(var$11);
        var$8 = var$9.data;
        $v.$characters = var$9;
        var$7 = 0;
        while (var$7 < var$11) {
            var$8[var$7] = var$6.data[var$7 + 0 | 0];
            var$7 = var$7 + 1 | 0;
        }
        var$12 = var$4.$sb;
        jl_AbstractStringBuilder_insert(var$12, var$12.$length, $v);
        var$11 = var$12.$length;
        jl_AbstractStringBuilder_insertSpace(var$12, var$11, var$11 + 1 | 0);
        var$12.$buffer.data[var$11] = 10;
        ji_PrintStream_printSB(var$4);
    }
    return $defaultValue;
}
var cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum);
var cbg_Application$ApplicationType_Android = null;
var cbg_Application$ApplicationType_Desktop = null;
var cbg_Application$ApplicationType_HeadlessDesktop = null;
var cbg_Application$ApplicationType_Applet = null;
var cbg_Application$ApplicationType_WebGL = null;
var cbg_Application$ApplicationType_iOS = null;
var cbg_Application$ApplicationType_$VALUES = null;
function cbg_Application$ApplicationType_$callClinit() {
    cbg_Application$ApplicationType_$callClinit = $rt_eraseClinit(cbg_Application$ApplicationType);
    cbg_Application$ApplicationType__clinit_();
}
function cbg_Application$ApplicationType__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = new cbg_Application$ApplicationType;
    cbg_Application$ApplicationType_$callClinit();
    var$1.$name0 = $rt_s(3);
    var$1.$ordinal = 0;
    cbg_Application$ApplicationType_Android = var$1;
    var$2 = new cbg_Application$ApplicationType;
    var$2.$name0 = $rt_s(151);
    var$2.$ordinal = 1;
    cbg_Application$ApplicationType_Desktop = var$2;
    var$3 = new cbg_Application$ApplicationType;
    var$3.$name0 = $rt_s(152);
    var$3.$ordinal = 2;
    cbg_Application$ApplicationType_HeadlessDesktop = var$3;
    var$4 = new cbg_Application$ApplicationType;
    var$4.$name0 = $rt_s(153);
    var$4.$ordinal = 3;
    cbg_Application$ApplicationType_Applet = var$4;
    var$5 = new cbg_Application$ApplicationType;
    var$5.$name0 = $rt_s(154);
    var$5.$ordinal = 4;
    cbg_Application$ApplicationType_WebGL = var$5;
    var$6 = new cbg_Application$ApplicationType;
    var$6.$name0 = $rt_s(155);
    var$6.$ordinal = 5;
    cbg_Application$ApplicationType_iOS = var$6;
    cbg_Application$ApplicationType_$VALUES = $rt_createArrayFromData(cbg_Application$ApplicationType, [var$1, var$2, var$3, var$4, var$5, var$6]);
}
var cgxgbt_TeaGraphics$FullscreenChanged = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics$1() {
    jl_Object.call(this);
    this.$this$011 = null;
}
function cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0(var$0) {}
function cbgu_IntMap() {
    var a = this; jl_Object.call(a);
    a.$size5 = 0;
    a.$keyTable0 = null;
    a.$valueTable0 = null;
    a.$zeroValue = null;
    a.$hasZeroValue = 0;
    a.$loadFactor1 = 0.0;
    a.$threshold1 = 0;
    a.$shift0 = 0;
    a.$mask0 = 0;
}
function cbgu_IntMap__init_(var_0, var_1) {
    var var_2 = new cbgu_IntMap();
    cbgu_IntMap__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntMap__init_0($this, $initialCapacity, $loadFactor) {
    var $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor1 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold1 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask0 = $initialCapacity;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable0 = $rt_createIntArray($tableSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(59));
    jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    $tableSize = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($tableSize);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$10 = 0;
    while (var$10 < $tableSize) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$6;
    $rt_throw(var$4);
}
function cbgu_IntMap_put($this, $key, $value) {
    var $oldValue, var$4, $i, var$6, var$7;
    if (!$key) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue) {
            $this.$hasZeroValue = 1;
            $this.$size5 = $this.$size5 + 1 | 0;
        }
        return $oldValue;
    }
    var$4 = $this.$keyTable0;
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift0));
    a: {
        while (true) {
            var$6 = var$4.data;
            var$7 = var$6[$i];
            if (!var$7) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if (var$7 == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask0;
        }
    }
    if ($i >= 0) {
        var$4 = $this.$valueTable0.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$6[$i] = $key;
    $this.$valueTable0.data[$i] = $value;
    $key = $this.$size5 + 1 | 0;
    $this.$size5 = $key;
    if ($key >= $this.$threshold1)
        cbgu_IntMap_resize($this, var$6.length << 1);
    return null;
}
function cbgu_IntMap_get($this, $key) {
    var var$2, $i, var$4;
    if (!$key)
        return !$this.$hasZeroValue ? null : $this.$zeroValue;
    var$2 = $this.$keyTable0;
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift0));
    a: {
        while (true) {
            var$4 = var$2.data[$i];
            if (!var$4) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if (var$4 == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask0;
        }
    }
    return $i < 0 ? null : $this.$valueTable0.data[$i];
}
function cbgu_IntMap_remove($this, $key) {
    var $oldValue, $keyTable, var$4, var$5, $i, var$7, $placement, $valueTable, $oldValue_0, $mask, $next, var$13;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return null;
        $this.$hasZeroValue = 0;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$size5 = $this.$size5 - 1 | 0;
        return $oldValue;
    }
    $keyTable = $this.$keyTable0;
    var$4 = Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769));
    var$5 = $this.$shift0;
    $i = Long_lo(Long_shru(var$4, var$5));
    a: {
        while (true) {
            var$7 = $keyTable.data;
            $placement = var$7[$i];
            if (!$placement) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if ($placement == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask0;
        }
    }
    if ($i < 0)
        return null;
    $valueTable = $this.$valueTable0.data;
    $oldValue_0 = $valueTable[$i];
    $mask = $this.$mask0;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$13 = var$7[$next];
        if (!var$13)
            break;
        $placement = Long_lo(Long_shru(Long_mul(Long_fromInt(var$13), Long_create(2135587861, 2654435769)), var$5));
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$7[$i] = var$13;
            $valueTable[$i] = $valueTable[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$7[$i] = 0;
    $valueTable[$i] = null;
    $this.$size5 = $this.$size5 - 1 | 0;
    return $oldValue_0;
}
function cbgu_IntMap_containsValue($this, $value, $identity) {
    var $valueTable, $keyTable, $i, var$6;
    a: {
        $valueTable = $this.$valueTable0;
        if ($value === null) {
            if ($this.$hasZeroValue && $this.$zeroValue === null)
                return 1;
            $valueTable = $valueTable.data;
            $keyTable = $this.$keyTable0;
            $i = $valueTable.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if ($keyTable.data[$i] && $valueTable[$i] === null)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($identity) {
            if ($value === $this.$zeroValue)
                return 1;
            $valueTable = $valueTable.data;
            $i = $valueTable.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if ($valueTable[$i] === $value)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($this.$hasZeroValue) {
            var$6 = $this.$zeroValue;
            if ($value === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == $value.$value5 ? 1 : 0)
                return 1;
        }
        $valueTable = $valueTable.data;
        $i = $valueTable.length - 1 | 0;
        while (true) {
            if ($i < 0)
                break a;
            var$6 = $valueTable[$i];
            if ($value === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == $value.$value5 ? 1 : 0)
                return 1;
            $i = $i + (-1) | 0;
        }
    }
    return 0;
}
function cbgu_IntMap_resize($this, $newSize) {
    var $oldCapacity, var$3, $oldKeyTable, $oldValueTable, var$6, var$7, var$8, $i, $key, var$11;
    a: {
        $oldCapacity = $this.$keyTable0.data.length;
        $this.$threshold1 = $newSize * $this.$loadFactor1 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask0 = var$3;
        var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $this.$shift0 = var$3;
        $oldKeyTable = $this.$keyTable0;
        $oldValueTable = $this.$valueTable0;
        var$6 = $rt_createIntArray($newSize);
        $this.$keyTable0 = var$6;
        var$7 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable0 = var$7;
        if ($this.$size5 > 0) {
            var$8 = var$7.data;
            var$7 = var$6.data;
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key) {
                    var$11 = $oldValueTable.data[$i];
                    $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$3));
                    while (var$7[$newSize]) {
                        $newSize = ($newSize + 1 | 0) & $this.$mask0;
                    }
                    var$7[$newSize] = $key;
                    var$8[$newSize] = var$11;
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbgu_IntSet() {
    var a = this; jl_Object.call(a);
    a.$size4 = 0;
    a.$keyTable1 = null;
    a.$hasZeroValue0 = 0;
    a.$loadFactor2 = 0.0;
    a.$threshold2 = 0;
    a.$shift1 = 0;
    a.$mask1 = 0;
}
function cbgu_IntSet__init_(var_0, var_1) {
    var var_2 = new cbgu_IntSet();
    cbgu_IntSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntSet__init_0($this, $initialCapacity, $loadFactor) {
    var $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor2 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold2 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask1 = $initialCapacity;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable1 = $rt_createIntArray($tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(59));
    jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    $tableSize = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($tableSize);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$10 = 0;
    while (var$10 < $tableSize) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$6;
    $rt_throw(var$4);
}
function cbgu_IntSet_add($this, $key) {
    var var$2, $i, var$4, var$5;
    if (!$key) {
        if ($this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 1;
        $this.$size4 = $this.$size4 + 1 | 0;
        return 1;
    }
    var$2 = $this.$keyTable1;
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift1));
    a: {
        while (true) {
            var$4 = var$2.data;
            var$5 = var$4[$i];
            if (!var$5) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if (var$5 == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask1;
        }
    }
    if ($i >= 0)
        return 0;
    var$4[ -($i + 1 | 0) | 0] = $key;
    $key = $this.$size4 + 1 | 0;
    $this.$size4 = $key;
    if ($key >= $this.$threshold2)
        cbgu_IntSet_resize($this, var$4.length << 1);
    return 1;
}
function cbgu_IntSet_remove($this, $key) {
    var $keyTable, var$3, var$4, $i, var$6, $mask, $next, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 0;
        $this.$size4 = $this.$size4 - 1 | 0;
        return 1;
    }
    $keyTable = $this.$keyTable1;
    var$3 = Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769));
    var$4 = $this.$shift1;
    $i = Long_lo(Long_shru(var$3, var$4));
    a: {
        while (true) {
            var$6 = $keyTable.data;
            $mask = var$6[$i];
            if (!$mask) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if ($mask == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask1;
        }
    }
    if ($i < 0)
        return 0;
    $mask = $this.$mask1;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        $key = var$6[$next];
        if (!$key)
            break;
        $placement = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$4));
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$6[$i] = $key;
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$6[$i] = 0;
    $this.$size4 = $this.$size4 - 1 | 0;
    return 1;
}
function cbgu_IntSet_resize($this, $newSize) {
    var $oldCapacity, var$3, $oldKeyTable, var$5, $i, $key, var$8;
    a: {
        $oldCapacity = $this.$keyTable1.data.length;
        $this.$threshold2 = $newSize * $this.$loadFactor2 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask1 = var$3;
        var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $this.$shift1 = var$3;
        $oldKeyTable = $this.$keyTable1;
        var$5 = $rt_createIntArray($newSize);
        $this.$keyTable1 = var$5;
        if ($this.$size4 > 0) {
            var$5 = var$5.data;
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key) {
                    var$8 = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$3));
                    while (var$5[var$8]) {
                        var$8 = (var$8 + 1 | 0) & $this.$mask1;
                    }
                    var$5[var$8] = $key;
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
var cgxgbt_TeaPermissions$TeaPermissionResult = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard$ClipboardWriteHandler() {
    jl_Object.call(this);
    this.$this$018 = null;
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0(var$0) {
    var var$1;
    var$1 = var$0.$this$018;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1(var$0) {
    var var$1;
    var$1 = var$0.$this$018;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2(var$0) {
    var$0.$this$018.$hasWritePermissions = 0;
}
function cgxgbt_TeaApplication$4() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$01 = null;
}
function cgxgbt_TeaApplication$4_onSuccess($this, $url, $result) {
    var $soundManager, var$4;
    $soundManager = new cgxgbts_TeaSoundManager;
    var$4 = cgxgbts_TeaSoundManager_createSM$js_body$_0();
    $soundManager.$soundManagerJS = var$4;
    $result = $this.$this$01.$hostPageBaseURL;
    $url = new cgxgbt_TeaApplication$4$1;
    $url.$this$1 = $this;
    $url.$val$soundManager = $soundManager;
    cgxgbts_TeaSoundManager_setupJS$js_body$_1(var$4, $rt_ustr($result), $url);
    return 1;
}
function cgxgbt_TeaApplication$3() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$00 = null;
}
function cgxgbt_TeaApplication$3_onSuccess($this, $url, $result) {
    return 1;
}
var jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception);
function cbgu_ReflectionPool() {
    cbgu_Pool.call(this);
    this.$constructor = null;
}
function cbgu_ReflectionPool_newObject($this) {
    var var$1, $ex, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, $$je;
    a: {
        try {
            var$1 = cbgur_Constructor_newInstance($this.$constructor, null);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    var$3 = new cbgu_GdxRuntimeException;
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(33));
    var$4 = $this.$constructor.$constructor0.$declaringClass;
    if (var$4.$name === null)
        var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
    var$5 = var$4.$name;
    jl_AbstractStringBuilder_insert(var$1, var$1.$length, var$5);
    var$5 = new jl_String;
    var$6 = var$1.$buffer;
    var$7 = var$1.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$5;
    var$3.$cause = $ex;
    $rt_throw(var$3);
}
var otjde_EventTarget = $rt_classWithoutFields(0);
var otjde_FocusEventTarget = $rt_classWithoutFields(0);
var otjde_MouseEventTarget = $rt_classWithoutFields(0);
var otjde_KeyboardEventTarget = $rt_classWithoutFields(0);
var otjde_LoadEventTarget = $rt_classWithoutFields(0);
var otjde_GamepadEventTarget = $rt_classWithoutFields(0);
var otjb_WindowEventTarget = $rt_classWithoutFields(0);
var otjb_StorageProvider = $rt_classWithoutFields(0);
var otjc_JSArrayReader = $rt_classWithoutFields(0);
var otjb_Window = $rt_classWithoutFields();
function otjb_Window_addEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_removeEventListener$exported$1(var$0, var$1, var$2) {
    var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_get$exported$2(var$0, var$1) {
    return var$0.$get6(var$1);
}
function otjb_Window_removeEventListener$exported$3(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function otjb_Window_dispatchEvent$exported$4(var$0, var$1) {
    return !!var$0.$dispatchEvent(var$1);
}
function otjb_Window_getLength$exported$5(var$0) {
    return var$0.$getLength0();
}
function otjb_Window_addEventListener$exported$6(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
var ju_Dictionary = $rt_classWithoutFields();
function ju_Hashtable() {
    var a = this; ju_Dictionary.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$loadFactor3 = 0.0;
    a.$threshold3 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount0 = 0;
}
var ju_Hashtable_EMPTY_ENUMERATION = null;
var ju_Hashtable_EMPTY_ITERATOR = null;
function ju_Hashtable__init_0(var_0) {
    var var_1 = new ju_Hashtable();
    ju_Hashtable__init_(var_1, var_0);
    return var_1;
}
function ju_Hashtable__init_($this, $capacity) {
    var var$2, var$3, var$4;
    $this.$lastSlot = (-1);
    if ($capacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    $this.$elementCount0 = 0;
    if (!$capacity)
        $capacity = 1;
    var$3 = $rt_createArray(ju_Hashtable$Entry, $capacity);
    var$4 = var$3.data;
    $this.$elementData0 = var$3;
    $capacity = var$4.length;
    $this.$firstSlot = $capacity;
    $this.$loadFactor3 = 0.75;
    $this.$threshold3 = $capacity * 0.75 | 0;
}
function ju_Hashtable_put($this, $key, $value) {
    var var$3, $hash, var$5, var$6, var$7, $index, $entry, var$10, $result;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            a: {
                if (!$key.$hashCode0) {
                    var$3 = $key.$characters.data;
                    $hash = var$3.length;
                    var$5 = 0;
                    while (true) {
                        if (var$5 >= $hash)
                            break a;
                        var$6 = var$3[var$5];
                        $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$6 | 0;
                        var$5 = var$5 + 1 | 0;
                    }
                }
            }
            var$7 = $key.$hashCode0 & 2147483647;
            var$3 = $this.$elementData0.data;
            $index = var$7 % var$3.length | 0;
            $entry = var$3[$index];
            while ($entry !== null) {
                b: {
                    $hash = $entry.$hashcode;
                    if (!$key.$hashCode0) {
                        var$3 = $key.$characters.data;
                        var$5 = var$3.length;
                        var$6 = 0;
                        while (true) {
                            if (var$6 >= var$5)
                                break b;
                            var$10 = var$3[var$6];
                            $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$10 | 0;
                            var$6 = var$6 + 1 | 0;
                        }
                    }
                }
                if ($hash == $key.$hashCode0 && $entry.$key.$equals($key) ? 1 : 0)
                    break;
                $entry = $entry.$next1;
            }
            if ($entry !== null) {
                $result = $entry.$value4;
                $entry.$value4 = $value;
                return $result;
            }
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $hash = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = $hash;
            if ($hash > $this.$threshold3) {
                ju_Hashtable_rehash($this);
                $index = var$7 % $this.$elementData0.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            c: {
                $result = new ju_Hashtable$Entry;
                $result.$key = $key;
                $result.$value4 = $value;
                if (!$key.$hashCode0) {
                    var$3 = $key.$characters.data;
                    $hash = var$3.length;
                    var$5 = 0;
                    while (true) {
                        if (var$5 >= $hash)
                            break c;
                        var$6 = var$3[var$5];
                        $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$6 | 0;
                        var$5 = var$5 + 1 | 0;
                    }
                }
            }
            $result.$hashcode = $key.$hashCode0;
            var$3 = $this.$elementData0.data;
            $result.$next1 = var$3[$index];
            var$3[$index] = $result;
            return null;
        }
        $key = new jl_NullPointerException;
        $key.$suppressionEnabled = 1;
        $key.$writableStackTrace = 1;
        $rt_throw($key);
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ju_Hashtable_rehash($this) {
    var $length, $newLast, $newData, var$4, $i, var$6, $entry, $index, $entry_0;
    $length = ($this.$elementData0.data.length << 1) + 1 | 0;
    if (!$length)
        $length = 1;
    $newLast = (-1);
    $newData = $rt_createArray(ju_Hashtable$Entry, $length);
    var$4 = $newData.data;
    $i = $this.$lastSlot + 1 | 0;
    var$6 = $length;
    while (true) {
        $i = $i + (-1) | 0;
        if ($i < $this.$firstSlot)
            break;
        $entry = $this.$elementData0.data[$i];
        while ($entry !== null) {
            $index = ($entry.$key.$hashCode() & 2147483647) % $length | 0;
            if ($index < var$6)
                var$6 = $index;
            if ($index > $newLast)
                $newLast = $index;
            $entry_0 = $entry.$next1;
            $entry.$next1 = var$4[$index];
            var$4[$index] = $entry;
            $entry = $entry_0;
        }
    }
    $this.$firstSlot = var$6;
    $this.$lastSlot = $newLast;
    $this.$elementData0 = $newData;
    $this.$threshold3 = var$4.length * $this.$loadFactor3 | 0;
}
function ju_Hashtable__clinit_() {
    ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
    ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
}
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults = null;
}
var cbggg_GLVersion$Type = $rt_classWithoutFields(jl_Enum);
var cbggg_GLVersion$Type_OpenGL = null;
var cbggg_GLVersion$Type_GLES = null;
var cbggg_GLVersion$Type_WebGL = null;
var cbggg_GLVersion$Type_NONE = null;
var cbggg_GLVersion$Type_$VALUES = null;
function cbggg_GLVersion$Type_$callClinit() {
    cbggg_GLVersion$Type_$callClinit = $rt_eraseClinit(cbggg_GLVersion$Type);
    cbggg_GLVersion$Type__clinit_();
}
function cbggg_GLVersion$Type__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = new cbggg_GLVersion$Type;
    cbggg_GLVersion$Type_$callClinit();
    var$1.$name0 = $rt_s(156);
    var$1.$ordinal = 0;
    cbggg_GLVersion$Type_OpenGL = var$1;
    var$2 = new cbggg_GLVersion$Type;
    var$2.$name0 = $rt_s(157);
    var$2.$ordinal = 1;
    cbggg_GLVersion$Type_GLES = var$2;
    var$3 = new cbggg_GLVersion$Type;
    var$3.$name0 = $rt_s(154);
    var$3.$ordinal = 2;
    cbggg_GLVersion$Type_WebGL = var$3;
    var$4 = new cbggg_GLVersion$Type;
    var$4.$name0 = $rt_s(158);
    var$4.$ordinal = 3;
    cbggg_GLVersion$Type_NONE = var$4;
    cbggg_GLVersion$Type_$VALUES = $rt_createArrayFromData(cbggg_GLVersion$Type, [var$1, var$2, var$3, var$4]);
}
function cgxgbtp_Preloader$1() {
    jl_Object.call(this);
    this.$this$012 = null;
}
function cgxgbtp_Preloader$1_handleEvent$exported$0(var$0, var$1) {
    var$1.preventDefault();
}
function cgxgbtp_Preloader$2() {
    jl_Object.call(this);
    this.$this$013 = null;
}
function cgxgbtp_Preloader$2_handleEvent$exported$0(var$0, var$1) {
    var$1.preventDefault();
}
function cgxgbtp_Preloader$3() {
    var a = this; jl_Object.call(a);
    a.$val$teaApplication = null;
    a.$val$config = null;
    a.$this$014 = null;
}
function cgxgbtp_Preloader$3_handleEvent($this, $event) {
    var $files, $length, $droppedFiles, $i, $itemWrapper, $name, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $type, $fileReader;
    a: {
        $event.preventDefault();
        $files = $event.dataTransfer.files;
        $length = $files.length;
        if ($length > 0) {
            $droppedFiles = new cbgu_Array;
            $droppedFiles.$ordered = 1;
            $droppedFiles.$items = $rt_createArray(jl_Object, 16);
            $i = 0;
            while (true) {
                if ($i >= $length)
                    break a;
                $itemWrapper = $files[$i];
                $name = $rt_str($itemWrapper.name);
                var$8 = jl_String_lastIndexOf($name, 46, $name.$characters.data.length - 1 | 0);
                if (var$8 == (-1))
                    $event = $rt_s(42);
                else {
                    var$9 = var$8 + 1 | 0;
                    var$10 = $name.$characters.data;
                    var$8 = var$10.length;
                    var$11 = $rt_compare(var$9, var$8);
                    if (var$11 > 0) {
                        $event = new jl_IndexOutOfBoundsException;
                        $event.$suppressionEnabled = 1;
                        $event.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace($event);
                        $rt_throw($event);
                    }
                    if (!var$11)
                        $event = jl_String_EMPTY;
                    else if (!var$9 && var$8 == var$8)
                        $event = $name;
                    else {
                        $event = new jl_String;
                        var$12 = var$8 - var$9 | 0;
                        var$13 = $rt_createCharArray(var$12);
                        var$14 = var$13.data;
                        $event.$characters = var$13;
                        var$8 = 0;
                        while (var$8 < var$12) {
                            var$14[var$8] = var$10[var$8 + var$9 | 0];
                            var$8 = var$8 + 1 | 0;
                        }
                    }
                }
                $event = jl_String_toLowerCase($event);
                if (cgxgbtp_AssetFilter_isImage($event)) {
                    cgxgbtp_AssetType_$callClinit();
                    $type = cgxgbtp_AssetType_Image;
                } else if (!jl_String_equals($event, $rt_s(159)) && !jl_String_equals($event, $rt_s(160)) && !jl_String_equals($event, $rt_s(161)) ? 0 : 1) {
                    cgxgbtp_AssetType_$callClinit();
                    $type = cgxgbtp_AssetType_Audio;
                } else if (!cgxgbtp_AssetFilter_isText($event)) {
                    cgxgbtp_AssetType_$callClinit();
                    $type = cgxgbtp_AssetType_Binary;
                } else {
                    cgxgbtp_AssetType_$callClinit();
                    $type = cgxgbtp_AssetType_Text;
                }
                $fileReader = new $rt_globals.FileReader();
                $event = new cgxgbtp_Preloader$3$1;
                $event.$this$10 = $this;
                $event.$val$type0 = $type;
                $event.$val$name = $name;
                $event.$val$droppedFiles = $droppedFiles;
                $event.$val$length = $length;
                $fileReader.addEventListener("load", otji_JS_function($event, "handleEvent"));
                cgxgbtp_AssetType_$callClinit();
                if ($type !== cgxgbtp_AssetType_Binary && $type !== cgxgbtp_AssetType_Audio) {
                    if ($type === cgxgbtp_AssetType_Image)
                        $fileReader.readAsDataURL($itemWrapper);
                    else if ($type === cgxgbtp_AssetType_Text)
                        $fileReader.readAsText($itemWrapper);
                } else
                    $fileReader.readAsArrayBuffer($itemWrapper);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cgxgbtp_Preloader$3_handleEvent$exported$0(var$0, var$1) {
    cgxgbtp_Preloader$3_handleEvent(var$0, var$1);
}
function jur_Pattern() {
    var a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start2 = null;
}
function jur_Pattern_matcher($this, $input) {
    return jur_Matcher__init_($this, $input);
}
function jur_Pattern_split($this, $inputSeq, $limit) {
    var $res, $mat, $index, $curPos, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    $res = new ju_ArrayList;
    $res.$array3 = $rt_createArray(jl_Object, 10);
    $mat = jur_Matcher__init_($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    if (!$inputSeq.$characters.data.length) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(42);
        return var$7;
    }
    a: {
        while (true) {
            if (!jur_Matcher_find($mat))
                break a;
            var$8 = $index + 1 | 0;
            if (var$8 >= $limit && $limit > 0)
                break a;
            var$9 = $mat.$matchResult;
            if (!var$9.$valid0) {
                $inputSeq = new jl_IllegalStateException;
                $inputSeq.$suppressionEnabled = 1;
                $inputSeq.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($inputSeq);
                $rt_throw($inputSeq);
            }
            if (0 >= var$9.$groupCount) {
                $inputSeq = new jl_IndexOutOfBoundsException;
                jl_String_$callClinit();
                $res = new jl_StringBuilder;
                jl_Object__init_0($res);
                $res.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0($res, $res.$length, 0, 10);
                $mat = new jl_String;
                var$7 = $res.$buffer;
                var$10 = $res.$length;
                var$11 = $rt_createCharArray(var$10);
                var$12 = var$11.data;
                $mat.$characters = var$11;
                $index = 0;
                while ($index < var$10) {
                    var$12[$index] = var$7.data[$index + 0 | 0];
                    $index = $index + 1 | 0;
                }
                $inputSeq.$suppressionEnabled = 1;
                $inputSeq.$writableStackTrace = 1;
                $inputSeq.$message = $mat;
                $rt_throw($inputSeq);
            }
            var$13 = var$9.$groupBounds.data[0];
            $index = $rt_compare($curPos, var$13);
            if ($index > 0) {
                $inputSeq = new jl_IndexOutOfBoundsException;
                $inputSeq.$suppressionEnabled = 1;
                $inputSeq.$writableStackTrace = 1;
                $rt_throw($inputSeq);
            }
            if (!$index) {
                jl_String_$callClinit();
                var$9 = jl_String_EMPTY;
            } else if (!$curPos && var$13 == $inputSeq.$characters.data.length)
                var$9 = $inputSeq;
            else {
                var$9 = new jl_String;
                var$7 = $inputSeq.$characters;
                $index = var$13 - $curPos | 0;
                jl_String_$callClinit();
                var$11 = $rt_createCharArray($index);
                var$12 = var$11.data;
                var$9.$characters = var$11;
                var$13 = 0;
                while (var$13 < $index) {
                    var$12[var$13] = var$7.data[var$13 + $curPos | 0];
                    var$13 = var$13 + 1 | 0;
                }
            }
            ju_ArrayList_ensureCapacity($res, $res.$size6 + 1 | 0);
            var$7 = $res.$array3.data;
            var$13 = $res.$size6;
            $res.$size6 = var$13 + 1 | 0;
            var$7[var$13] = var$9;
            $res.$modCount1 = $res.$modCount1 + 1 | 0;
            var$9 = $mat.$matchResult;
            if (!var$9.$valid0) {
                $inputSeq = new jl_IllegalStateException;
                jl_Throwable__init_0($inputSeq);
                $rt_throw($inputSeq);
            }
            if (0 >= var$9.$groupCount)
                break;
            $curPos = var$9.$groupBounds.data[1];
            $index = var$8;
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf(0)));
    }
    var$12 = $inputSeq.$characters.data;
    var$13 = var$12.length;
    var$10 = $rt_compare($curPos, var$13);
    if (var$10 > 0) {
        $inputSeq = new jl_IndexOutOfBoundsException;
        $inputSeq.$suppressionEnabled = 1;
        $inputSeq.$writableStackTrace = 1;
        $rt_throw($inputSeq);
    }
    if (!var$10) {
        jl_String_$callClinit();
        $inputSeq = jl_String_EMPTY;
    } else if (!(!$curPos && var$13 == var$13)) {
        $inputSeq = new jl_String;
        var$10 = var$13 - $curPos | 0;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$10);
        var$11 = var$7.data;
        $inputSeq.$characters = var$7;
        var$13 = 0;
        while (var$13 < var$10) {
            var$11[var$13] = var$12[var$13 + $curPos | 0];
            var$13 = var$13 + 1 | 0;
        }
    }
    b: {
        ju_ArrayList_ensureCapacity($res, $res.$size6 + 1 | 0);
        var$7 = $res.$array3.data;
        var$10 = $res.$size6;
        $res.$size6 = var$10 + 1 | 0;
        var$7[var$10] = $inputSeq;
        $res.$modCount1 = $res.$modCount1 + 1 | 0;
        var$10 = $index + 1 | 0;
        if (!$limit)
            while (true) {
                var$10 = var$10 + (-1) | 0;
                if (var$10 < 0)
                    break;
                if (jl_String_length(ju_ArrayList_get($res, var$10)))
                    break b;
                ju_ArrayList_remove($res, var$10);
            }
    }
    if (var$10 < 0)
        var$10 = 0;
    return ju_AbstractCollection_toArray($res, $rt_createArray(jl_String, var$10));
}
function jur_Pattern_pattern($this) {
    return $this.$lexemes.$orig;
}
function jur_Pattern_compile($pattern, $flags) {
    var var$3;
    if ($pattern === null) {
        $pattern = new jl_NullPointerException;
        $pattern.$suppressionEnabled = 1;
        $pattern.$writableStackTrace = 1;
        $pattern.$message = $rt_s(162);
        $rt_throw($pattern);
    }
    if ($flags && ($flags | 255) != 255) {
        $pattern = new jl_IllegalArgumentException;
        $pattern.$suppressionEnabled = 1;
        $pattern.$writableStackTrace = 1;
        $pattern.$message = $rt_s(42);
        $rt_throw($pattern);
    }
    jur_AbstractSet_counter = 1;
    var$3 = new jur_Pattern;
    var$3.$backRefs = $rt_createArray(jur_FSet, 10);
    var$3.$globalGroupIndex = (-1);
    var$3.$compCount = (-1);
    var$3.$consCount = (-1);
    return jur_Pattern_compileImpl(var$3, $pattern, $flags);
}
function jur_Pattern_compileImpl($this, $pattern, $flags) {
    var var$3, var$4, var$5;
    $this.$lexemes = jur_Lexer__init_($pattern, $flags);
    $this.$flags = $flags;
    $pattern = jur_Pattern_processExpression($this, (-1), $flags, null);
    $this.$start2 = $pattern;
    var$3 = $this.$lexemes;
    if (!var$3.$ch && !var$3.$lookAhead && var$3.$index == var$3.$patternFullLength && !(var$3.$curST === null ? 0 : 1) ? 1 : 0) {
        if ($this.$needsBackRefReplacement)
            $pattern.$processSecondPass();
        return $this;
    }
    $pattern = new jur_PatternSyntaxException;
    var$4 = var$3.$orig;
    var$5 = var$3.$curToc;
    $pattern.$suppressionEnabled = 1;
    $pattern.$writableStackTrace = 1;
    $pattern.$index0 = (-1);
    $pattern.$desc = $rt_s(42);
    $pattern.$pattern = var$4;
    $pattern.$index0 = var$5;
    $rt_throw($pattern);
}
function jur_Pattern_processAlternations($this, $last) {
    var $auxRange, var$3, var$4, var$5, $rangeSet, var$7;
    $auxRange = new jur_CharClass;
    var$3 = $this.$flags;
    var$4 = (var$3 & 2) != 2 ? 0 : 1;
    var$5 = (var$3 & 64) != 64 ? 0 : 1;
    jur_AbstractCharClass_$callClinit();
    $rangeSet = new ju_BitSet;
    $rangeSet.$data2 = $rt_createIntArray(64);
    $auxRange.$lowHighSurrogates = $rangeSet;
    $rangeSet = new ju_BitSet;
    $rangeSet.$data2 = $rt_createIntArray(0);
    $auxRange.$bits = $rangeSet;
    $auxRange.$ci = var$4;
    $auxRange.$uci = var$5;
    while (true) {
        var$7 = $this.$lexemes;
        var$3 = var$7.$ch;
        if (!var$3 && !var$7.$lookAhead && var$7.$index == var$7.$patternFullLength && !(var$7.$curST === null ? 0 : 1) ? 1 : 0)
            break;
        var$5 = !var$3 && !var$7.$lookAhead && var$7.$index == var$7.$patternFullLength && !(var$7.$curST === null ? 0 : 1) ? 1 : 0;
        if (!(!var$5 && !(var$7.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0))
            break;
        var$5 = var$7.$lookAhead;
        if (var$5 && var$5 != (-536870788) && var$5 != (-536870871))
            break;
        jur_Lexer_movePointer(var$7);
        jur_CharClass_add($auxRange, var$7.$lookBack);
        $rangeSet = $this.$lexemes;
        if ($rangeSet.$ch != (-536870788))
            continue;
        jur_Lexer_movePointer($rangeSet);
    }
    $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processExpression($this, $ch, $newFlags, $last) {
    var $children, $saveFlags, $saveChangedFlags, $fSet, var$8, var$9, var$10, $child;
    $children = new ju_ArrayList;
    $children.$array3 = $rt_createArray(jl_Object, 10);
    $saveFlags = $this.$flags;
    $saveChangedFlags = 0;
    if ($newFlags != $saveFlags)
        $this.$flags = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet_$callClinit();
                var$8 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$8 + 1 | 0;
                $last = new jl_AbstractStringBuilder;
                $last.$buffer = $rt_createCharArray(20);
                $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, var$8, 10)).$toString();
                $fSet.$groupIndex = $newFlags;
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$9 = $this.$consCount + 1 | 0;
                $this.$consCount = var$9;
                jur_FSet_$callClinit();
                $newFlags = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $newFlags + 1 | 0;
                $last = new jl_AbstractStringBuilder;
                $last.$buffer = $rt_createCharArray(20);
                $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, $newFlags, 10)).$toString();
                $fSet.$groupIndex = var$9;
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$10 = $this.$consCount + 1 | 0;
                $this.$consCount = var$10;
                jur_FSet_$callClinit();
                $newFlags = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $newFlags + 1 | 0;
                $last = new jl_AbstractStringBuilder;
                $last.$buffer = $rt_createCharArray(20);
                $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, $newFlags, 10)).$toString();
                $fSet.$groupIndex = var$10;
                break a;
            default:
                $newFlags = $this.$globalGroupIndex + 1 | 0;
                $this.$globalGroupIndex = $newFlags;
                if ($last !== null) {
                    $fSet = new jur_FSet;
                    jur_FSet_$callClinit();
                    jur_AbstractSet__init_($fSet);
                    $fSet.$groupIndex = $newFlags;
                } else {
                    $fSet = new jur_FinalSet;
                    jur_FSet_$callClinit();
                    jur_AbstractSet__init_($fSet);
                    $fSet.$groupIndex = 0;
                    $saveChangedFlags = 1;
                }
                var$8 = $this.$globalGroupIndex;
                if (var$8 <= (-1))
                    break a;
                if (var$8 >= 10)
                    break a;
                $this.$backRefs.data[var$8] = $fSet;
                break a;
        }
        $fSet = new jur_AheadFSet;
        jur_FSet_$callClinit();
        var$8 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$8 + 1 | 0;
        $last = new jl_AbstractStringBuilder;
        $last.$buffer = $rt_createCharArray(20);
        $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, var$8, 10)).$toString();
        $fSet.$groupIndex = (-1);
    }
    while (true) {
        if (jur_Lexer_isLetter($this.$lexemes) && jur_Lexer_lookAhead($this.$lexemes) == (-536870788))
            $child = jur_Pattern_processAlternations($this, $fSet);
        else if (jur_Lexer_peek($this.$lexemes) == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            jur_Lexer_next($this.$lexemes);
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            if (jur_Lexer_peek($this.$lexemes) == (-536870788))
                jur_Lexer_next($this.$lexemes);
        }
        if ($child !== null)
            ju_ArrayList_add($children, $child);
        if (jur_Lexer_isEmpty($this.$lexemes))
            break;
        if (jur_Lexer_peek($this.$lexemes) == (-536870871))
            break;
    }
    if (jur_Lexer_back($this.$lexemes) == (-536870788))
        ju_ArrayList_add($children, jur_EmptySet__init_($fSet));
    if ($this.$flags != $saveFlags && !$saveChangedFlags) {
        $this.$flags = $saveFlags;
        jur_Lexer_restoreFlags($this.$lexemes, $saveFlags);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            return jur_PositiveLookAhead__init_($children, $fSet);
        case -268435416:
            return jur_NegativeLookAhead__init_($children, $fSet);
        case -134217688:
            return jur_PositiveLookBehind__init_($children, $fSet);
        case -67108824:
            return jur_NegativeLookBehind__init_($children, $fSet);
        case -33554392:
            return jur_AtomicJointSet__init_($children, $fSet);
        default:
            switch (ju_ArrayList_size($children)) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_(ju_ArrayList_get($children, 0), $fSet);
                default:
                    return jur_JointSet__init_($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    return jur_NonCapJointSet__init_($children, $fSet);
}
function jur_Pattern_processSequence($this) {
    var $substring, var$2, var$3, var$4, var$5, $ch, var$7, var$8, var$9, var$10;
    $substring = new jl_StringBuffer;
    $substring.$buffer = $rt_createCharArray(16);
    while (true) {
        var$2 = $this.$lexemes;
        var$3 = var$2.$ch;
        if (!var$3 && !var$2.$lookAhead && var$2.$index == var$2.$patternFullLength && !(var$2.$curST === null ? 0 : 1) ? 1 : 0)
            break;
        var$4 = !var$3 && !var$2.$lookAhead && var$2.$index == var$2.$patternFullLength && !(var$2.$curST === null ? 0 : 1) ? 1 : 0;
        if (!(!var$4 && !(var$2.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0))
            break;
        if (var$3 <= 56319 && var$3 >= 55296 ? 1 : 0)
            break;
        if (var$3 <= 57343 && var$3 >= 56320 ? 1 : 0)
            break;
        var$5 = var$2.$lookAheadST;
        var$4 = var$5 === null ? 0 : 1;
        if (!(!var$4 && !var$2.$lookAhead)) {
            var$4 = var$5 === null ? 0 : 1;
            if (!(!var$4 && (var$2.$lookAhead < 0 ? 0 : 1))) {
                var$3 = var$2.$lookAhead;
                if (var$3 != (-536870871) && (var$3 & (-2147418113)) != (-2147483608) && var$3 != (-536870788) && var$3 != (-536870876))
                    break;
            }
        }
        jur_Lexer_movePointer(var$2);
        $ch = var$2.$lookBack;
        var$4 = $rt_compare($ch, 65536);
        if (!(var$4 >= 0 && $ch <= 1114111 ? 1 : 0)) {
            var$4 = $ch & 65535;
            var$7 = $substring.$length;
            jl_AbstractStringBuilder_insertSpace($substring, var$7, var$7 + 1 | 0);
            $substring.$buffer.data[var$7] = var$4;
        } else {
            if (var$4 < 0) {
                var$8 = $rt_createCharArray(1);
                var$8.data[0] = $ch & 65535;
            } else
                var$8 = $rt_createCharArrayFromData([(55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $ch & 1023) & 65535]);
            var$8 = var$8.data;
            var$4 = 0;
            var$7 = var$8.length;
            var$3 = $substring.$length;
            jl_AbstractStringBuilder_insertSpace($substring, var$3, var$3 + var$7 | 0);
            var$9 = var$7 + var$4 | 0;
            while (var$4 < var$9) {
                var$10 = $substring.$buffer.data;
                $ch = var$3 + 1 | 0;
                var$7 = var$4 + 1 | 0;
                var$10[var$3] = var$8[var$4];
                var$3 = $ch;
                var$4 = var$7;
            }
        }
    }
    var$7 = $this.$flags;
    if (!((var$7 & 2) != 2 ? 0 : 1))
        return jur_SequenceSet__init_($substring);
    if (!((var$7 & 64) != 64 ? 0 : 1))
        return jur_CISequenceSet__init_($substring);
    var$2 = new jur_UCISequenceSet;
    var$5 = new jl_Integer;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5.$value5 = var$4;
    var$2.$index1 = jl_Integer_toString(var$5);
    var$2.$charCount = 1;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5, 16);
    var$4 = 0;
    while (var$4 < jl_StringBuffer_length($substring)) {
        jl_StringBuilder_append3(var$5, jl_Character_toLowerCase(jl_Character_toUpperCase(jl_StringBuffer_charAt($substring, var$4))));
        var$4 = var$4 + 1 | 0;
    }
    var$2.$string1 = jl_StringBuilder_toString(var$5);
    var$2.$charCount = jl_StringBuilder_length(var$5);
    return var$2;
}
function jur_Pattern_processDecomposedChar($this) {
    var $codePoints, $curSymb, $curSymbIndex, var$4, var$5, var$6, $codePointsHangul, $readCodePoints, var$9;
    $codePoints = $rt_createIntArray(4);
    $curSymb = (-1);
    $curSymbIndex = (-1);
    var$4 = $this.$lexemes;
    var$5 = var$4.$ch;
    if (!(!var$5 && !var$4.$lookAhead && var$4.$index == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0)) {
        var$6 = !var$5 && !var$4.$lookAhead && var$4.$index == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0;
        if (!var$6 && !(var$4.$curST === null ? 0 : 1) && (var$5 < 0 ? 0 : 1) ? 1 : 0) {
            $codePointsHangul = $codePoints.data;
            jur_Lexer_movePointer(var$4);
            $curSymb = var$4.$lookBack;
            $codePointsHangul[0] = $curSymb;
            $curSymbIndex = $curSymb - 4352 | 0;
        }
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        $codePoints = $codePointsHangul.data;
        $codePoints[0] = $curSymb & 65535;
        var$4 = $this.$lexemes;
        $readCodePoints = var$4.$ch;
        $curSymb = $readCodePoints - 4449 | 0;
        if ($curSymb >= 0 && $curSymb < 21) {
            $codePoints[1] = $readCodePoints & 65535;
            jur_Lexer_movePointer(var$4);
            var$4 = $this.$lexemes;
            $readCodePoints = var$4.$ch;
            $curSymbIndex = $readCodePoints - 4519 | 0;
            if ($curSymbIndex >= 0 && $curSymbIndex < 28) {
                $codePoints[2] = $readCodePoints & 65535;
                jur_Lexer_movePointer(var$4);
                var$9 = new jur_HangulDecomposedCharSet;
                $curSymbIndex = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $curSymbIndex + 1 | 0;
                var$4 = new jl_AbstractStringBuilder;
                var$4.$buffer = $rt_createCharArray(20);
                var$9.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $curSymbIndex, 10)).$toString();
                var$9.$decomposedChar = $codePointsHangul;
                var$9.$decomposedCharLength = 3;
                return var$9;
            }
            var$9 = new jur_HangulDecomposedCharSet;
            $readCodePoints = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $readCodePoints + 1 | 0;
            var$4 = new jl_AbstractStringBuilder;
            var$4.$buffer = $rt_createCharArray(20);
            var$9.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $readCodePoints, 10)).$toString();
            var$9.$decomposedChar = $codePointsHangul;
            var$9.$decomposedCharLength = 2;
            return var$9;
        }
        $curSymb = $this.$flags;
        if (!(($curSymb & 2) != 2 ? 0 : 1)) {
            var$4 = new jur_CharSet;
            $readCodePoints = $codePoints[0];
            jur_AbstractSet__init_(var$4);
            var$4.$charCount = 1;
            var$4.$ch0 = $readCodePoints;
            return var$4;
        }
        if (!(($curSymb & 64) != 64 ? 0 : 1))
            return jur_CICharSet__init_($codePoints[0]);
        var$4 = new jur_UCICharSet;
        $readCodePoints = $codePoints[0];
        jur_AbstractSet__init_(var$4);
        var$4.$charCount = 1;
        var$4.$ch1 = jl_Character_toLowerCase(jl_Character_toUpperCase($readCodePoints));
        return var$4;
    }
    $codePointsHangul = $codePoints.data;
    $curSymb = 1;
    while ($curSymb < 4 && !jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
        $readCodePoints = $curSymb + 1 | 0;
        $codePointsHangul[$curSymb] = jur_Lexer_next($this.$lexemes);
        $curSymb = $readCodePoints;
    }
    if ($curSymb == 1 && !jur_Lexer_hasSingleCodepointDecomposition($codePointsHangul[0]))
        return jur_Pattern_processCharSet($this, $codePointsHangul[0]);
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_($codePoints, $curSymb);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCIDecomposedCharSet__init_($codePoints, $curSymb);
    return jur_CIDecomposedCharSet__init_($codePoints, $curSymb);
}
function jur_Pattern_processSubExpression($this, $last) {
    var $term, var$3, var$4, $cur, $next, var$7;
    $term = $this.$lexemes;
    var$3 = $term.$ch;
    var$4 = !var$3 && !$term.$lookAhead && $term.$index == $term.$patternFullLength && !($term.$curST === null ? 0 : 1) ? 1 : 0;
    var$4 = !var$4 && !($term.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0;
    if (var$4 && !($term.$lookAheadST === null ? 0 : 1) && ($term.$lookAhead < 0 ? 0 : 1)) {
        if (!(($this.$flags & 128) != 128 ? 0 : 1)) {
            var$4 = var$3 <= 56319 && var$3 >= 55296 ? 1 : 0;
            $cur = !var$4 && !jur_Lexer_isLowSurrogate($term) ? jur_Pattern_processSequence($this) : jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
        } else {
            $cur = jur_Pattern_processDecomposedChar($this);
            $next = $this.$lexemes;
            var$3 = $next.$ch;
            if (!(!var$3 && !$next.$lookAhead && $next.$index == $next.$patternFullLength && !($next.$curST === null ? 0 : 1) ? 1 : 0) && !(var$3 == (-536870871) && !($last instanceof jur_FinalSet)) && var$3 != (-536870788)) {
                var$4 = !var$3 && !$next.$lookAhead && $next.$index == $next.$patternFullLength && !($next.$curST === null ? 0 : 1) ? 1 : 0;
                if (!(!var$4 && !($next.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0))
                    $cur = jur_Pattern_processQuantifier($this, $last, $cur);
            }
        }
    } else if (var$3 != (-536870871))
        $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
    else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($term), jur_Lexer_getIndex($this.$lexemes)));
        $cur = new jur_EmptySet;
        jur_LeafSet__init_($cur, $last);
        $cur.$charCount = 0;
    }
    $term = $this.$lexemes;
    var$4 = $term.$ch;
    var$7 = !var$4 && !$term.$lookAhead && $term.$index == $term.$patternFullLength && !($term.$curST === null ? 0 : 1) ? 1 : 0;
    if (!var$7 && !(var$4 == (-536870871) && !($last instanceof jur_FinalSet)) && var$4 != (-536870788)) {
        $next = jur_Pattern_processSubExpression($this, $last);
        if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
            $term = $cur;
            if (!$next.$first0($term.$innerSet))
                $cur = jur_UnifiedQuantifierSet__init_($term);
        }
        if (($next.$getType0() & 65535) != 43)
            $cur.$setNext($next);
        else
            $cur.$setNext($next.$innerSet);
    } else {
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType0() & 65535) != 43)
        return $cur;
    return $cur.$innerSet;
}
function jur_Pattern_processQuantifier($this, $last, $term) {
    var $q, $quant, var$5, $leaf, $q_0, var$8;
    $q = $this.$lexemes;
    $quant = $q.$ch;
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                jur_Lexer_movePointer($q);
                $q = new jur_PossessiveGroupQuantifierSet;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                $leaf = new jl_AbstractStringBuilder;
                $leaf.$buffer = $rt_createCharArray(20);
                $q.$index1 = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length, var$5, 10)).$toString();
                $q.$next3 = $last;
                $q.$innerSet = $term;
                $q.$type3 = $quant;
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483605:
                jur_Lexer_movePointer($q);
                $q = new jur_PosPlusGroupQuantifierSet;
                $quant = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $quant + 1 | 0;
                $leaf = new jl_AbstractStringBuilder;
                $leaf.$buffer = $rt_createCharArray(20);
                $q.$index1 = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length, $quant, 10)).$toString();
                $q.$next3 = $last;
                $q.$innerSet = $term;
                $q.$type3 = (-2147483606);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483585:
                jur_Lexer_movePointer($q);
                $q = new jur_PosAltGroupQuantifierSet;
                $quant = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $quant + 1 | 0;
                $leaf = new jl_AbstractStringBuilder;
                $leaf.$buffer = $rt_createCharArray(20);
                $q.$index1 = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length, $quant, 10)).$toString();
                $q.$next3 = $last;
                $q.$innerSet = $term;
                $q.$type3 = (-536870849);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483525:
                $leaf = new jur_PosCompositeGroupQuantifierSet;
                $q_0 = $q.$curST;
                jur_Lexer_movePointer($q);
                $q = $q_0;
                var$5 = $this.$compCount + 1 | 0;
                $this.$compCount = var$5;
                $q_0 = new jl_Integer;
                var$8 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$8 + 1 | 0;
                jl_Integer__init_0($q_0, var$8);
                $leaf.$index1 = jl_Integer_toString($q_0);
                $leaf.$next3 = $last;
                $leaf.$innerSet = $term;
                $leaf.$type3 = (-536870849);
                $leaf.$quantifier = $q;
                $leaf.$setCounter = var$5;
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $leaf;
            case -1073741782:
            case -1073741781:
                jur_Lexer_next($q);
                $q = jur_ReluctantGroupQuantifierSet__init_($term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                jur_Lexer_next($q);
                $q = jur_RelAltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q_0 = new jur_RelCompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                $quant = $this.$compCount + 1 | 0;
                $this.$compCount = $quant;
                jur_RelCompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                $term.$setNext($q_0);
                return $q_0;
            case -536870870:
            case -536870869:
                jur_Lexer_next($q);
                $q = $term.$getType0() != (-2147483602) ? jur_GroupQuantifierSet__init_($term, $last, $quant) : jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_($term, $last, $quant) : jur_DotQuantifierSet__init_($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags));
                $term.$setNext($q);
                return $q;
            case -536870849:
                jur_Lexer_next($q);
                $q = jur_AltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q_0 = new jur_CompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                $quant = $this.$compCount + 1 | 0;
                $this.$compCount = $quant;
                jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                $term.$setNext($q_0);
                return $q_0;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            jur_Lexer_next($q);
            $q = jur_PossessiveQuantifierSet__init_($leaf, $last, $quant);
            jur_AbstractSet_setNext($leaf, $q);
            return $q;
        case -2147483585:
            jur_Lexer_next($q);
            return jur_PossessiveAltQuantifierSet__init_($leaf, $last, (-2147483585));
        case -2147483525:
            return jur_PossessiveCompositeQuantifierSet__init_(jur_Lexer_nextSpecial($q), $leaf, $last, (-2147483525));
        case -1073741782:
        case -1073741781:
            jur_Lexer_next($q);
            $q = jur_ReluctantQuantifierSet__init_($leaf, $last, $quant);
            jur_AbstractSet_setNext($leaf, $q);
            return $q;
        case -1073741761:
            jur_Lexer_next($q);
            return jur_ReluctantAltQuantifierSet__init_($leaf, $last, (-1073741761));
        case -1073741701:
            return jur_ReluctantCompositeQuantifierSet__init_(jur_Lexer_nextSpecial($q), $leaf, $last, (-1073741701));
        case -536870870:
        case -536870869:
            jur_Lexer_next($q);
            $q = jur_LeafQuantifierSet__init_($leaf, $last, $quant);
            jur_AbstractSet_setNext($leaf, $q);
            return $q;
        case -536870849:
            jur_Lexer_next($q);
            return jur_AltQuantifierSet__init_($leaf, $last, (-536870849));
        case -536870789:
            return jur_CompositeQuantifierSet__init_(jur_Lexer_nextSpecial($q), $leaf, $last, (-536870789));
        default:
    }
    return $term;
}
function jur_Pattern_processTerminal($this, $last) {
    var $term, var$3, $cc, $ch, $newFlags, var$7, $negative, $number;
    $term = null;
    var$3 = $last instanceof jur_FinalSet;
    while (true) {
        a: {
            $cc = $this.$lexemes;
            $ch = $cc.$ch;
            if (($ch & (-2147418113)) == (-2147483608)) {
                jur_Lexer_movePointer($cc);
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    $cc = $this.$lexemes;
                    if ($cc.$ch != (-536870871)) {
                        $last = new jur_PatternSyntaxException;
                        var$7 = $cc.$orig;
                        $negative = $cc.$curToc;
                        $last.$suppressionEnabled = 1;
                        $last.$writableStackTrace = 1;
                        $last.$index0 = (-1);
                        $last.$desc = $rt_s(42);
                        $last.$pattern = var$7;
                        $last.$index0 = $negative;
                        $rt_throw($last);
                    }
                    jur_Lexer_movePointer($cc);
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                break c;
                            case -2147483583:
                                jur_Lexer_next($cc);
                                $term = new jur_SOLSet;
                                jur_AbstractSet__init_($term);
                                break a;
                            case -2147483582:
                                jur_Lexer_next($cc);
                                $term = jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                break;
                            case -2147483558:
                                jur_Lexer_next($cc);
                                $term = new jur_EOLSet;
                                $number = $this.$consCount + 1 | 0;
                                $this.$consCount = $number;
                                jur_EOLSet__init_($term, $number);
                                break a;
                            case -2147483550:
                                jur_Lexer_next($cc);
                                $term = jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                jur_Lexer_next($cc);
                                $term = jur_EOISet__init_();
                                break a;
                            case -536870876:
                                jur_Lexer_next($cc);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (jur_Pattern_hasFlag($this, 8)) {
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                                        break a;
                                    }
                                    $term = jur_MultiLineEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                if (jur_Pattern_hasFlag($this, 1)) {
                                    $term = jur_UEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                $term = jur_EOLSet__init_0($this.$consCount);
                                break a;
                            case -536870866:
                                jur_Lexer_next($cc);
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_();
                                    break a;
                                }
                                $term = jur_DotSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case -536870821:
                                jur_Lexer_next($cc);
                                $negative = 0;
                                if (jur_Lexer_peek($this.$lexemes) == (-536870818)) {
                                    $negative = 1;
                                    jur_Lexer_next($this.$lexemes);
                                }
                                $term = jur_Pattern_processRange($this, $negative, $last);
                                if (jur_Lexer_peek($this.$lexemes) != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                                jur_Lexer_setMode($this.$lexemes, 1);
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            case -536870818:
                                jur_Lexer_next($cc);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case 0:
                                $cc = jur_Lexer_peekSpecial($cc);
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if (jur_Lexer_isEmpty($this.$lexemes)) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            default:
                                break b;
                        }
                        jur_Lexer_next($cc);
                        $term = jur_PreviousMatch__init_();
                        break a;
                    }
                    $number = ($ch & 2147483647) - 48 | 0;
                    if ($this.$globalGroupIndex < $number)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($cc), jur_Lexer_getIndex($this.$lexemes)));
                    jur_Lexer_next($cc);
                    $this.$consCount = $this.$consCount + 1 | 0;
                    $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_($number, $this.$consCount) : jur_CIBackReferenceSet__init_($number, $this.$consCount);
                    $this.$backRefs.data[$number].$isBackReferenced = 1;
                    $this.$needsBackRefReplacement = 1;
                    break a;
                }
                if ($ch >= 0 && !jur_Lexer_isSpecial($cc)) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    jur_Lexer_next($this.$lexemes);
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_(!jur_Lexer_isSpecial($this.$lexemes) ? jl_Character_toString($ch & 65535) : (jur_Lexer_peekSpecial($this.$lexemes)).$toString(), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                    if (var$3)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
}
function jur_Pattern_processRange($this, $negative, $last) {
    var $rangeSet;
    $rangeSet = jur_Pattern_processRangeSet($this, jur_Pattern_processRangeExpression($this, $negative));
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processRangeExpression($this, $alt) {
    var $res, $cur, $negative, $cs, $buffer, $intersection, $notClosed, $firstInClass, var$10, var$11, $$je;
    $res = new jur_CharClass;
    $cur = $this.$flags;
    $negative = ($cur & 2) != 2 ? 0 : 1;
    $cur = ($cur & 64) != 64 ? 0 : 1;
    jur_AbstractCharClass_$callClinit();
    $cs = new ju_BitSet;
    $cs.$data2 = $rt_createIntArray(64);
    $res.$lowHighSurrogates = $cs;
    $cs = new ju_BitSet;
    $cs.$data2 = $rt_createIntArray(0);
    $res.$bits = $cs;
    $res.$ci = $negative;
    $res.$uci = $cur;
    jur_AbstractCharClass_setNegative($res, $alt);
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                var$10 = $this.$lexemes;
                $alt = var$10.$ch;
                if (!$alt && !var$10.$lookAhead && var$10.$index == var$10.$patternFullLength && !(var$10.$curST === null ? 0 : 1) ? 1 : 0)
                    break a;
                $notClosed = $alt == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($alt) {
                        case -536870874:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $buffer = jur_Lexer_next($this.$lexemes);
                            if (jur_Lexer_peek($this.$lexemes) != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if (jur_Lexer_lookAhead($this.$lexemes) == (-536870821)) {
                                jur_Lexer_next($this.$lexemes);
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            jur_Lexer_next($this.$lexemes);
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if (jur_Lexer_peek($this.$lexemes) == (-536870819))
                                break d;
                            jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && var$10.$lookAhead != (-536870819) && jur_Lexer_lookAhead(var$10) != (-536870821) && $buffer >= 0) {
                                jur_Lexer_next($this.$lexemes);
                                $cur = jur_Lexer_peek($this.$lexemes);
                                if (jur_Lexer_isSpecial($this.$lexemes))
                                    break c;
                                if ($cur < 0 && jur_Lexer_lookAhead($this.$lexemes) != (-536870819) && jur_Lexer_lookAhead($this.$lexemes) != (-536870821) && $buffer >= 0)
                                    break c;
                                e: {
                                    try {
                                        if (jur_Lexer_isLetter0($cur))
                                            break e;
                                        $cur = $cur & 65535;
                                        break e;
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                }
                                try {
                                    jur_CharClass_add0($res, $buffer, $cur);
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_Exception) {
                                        break b;
                                    } else {
                                        throw $$e;
                                    }
                                }
                                jur_Lexer_next($this.$lexemes);
                                $buffer = (-1);
                                break d;
                            }
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $buffer = 45;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                jur_CharClass_add($res, $buffer);
                                $buffer = (-1);
                            }
                            jur_Lexer_movePointer($this.$lexemes);
                            $negative = 0;
                            $cs = $this.$lexemes;
                            if ($cs.$ch == (-536870818)) {
                                jur_Lexer_next($cs);
                                $negative = 1;
                            }
                            if (!$intersection)
                                jur_CharClass_union($res, jur_Pattern_processRangeExpression($this, $negative));
                            else
                                jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870819:
                            break;
                        case -536870818:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $buffer = 94;
                            jur_Lexer_movePointer($this.$lexemes);
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $cs = $this.$lexemes.$curST;
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                jur_CharClass_add1($res, $cs);
                                $buffer = (-1);
                            }
                            jur_Lexer_movePointer($this.$lexemes);
                            break d;
                        default:
                            if ($buffer >= 0)
                                jur_CharClass_add($res, $buffer);
                            $cs = $this.$lexemes;
                            jur_Lexer_movePointer($cs);
                            $buffer = $cs.$lookBack;
                            break d;
                    }
                    if ($buffer >= 0)
                        jur_CharClass_add($res, $buffer);
                    $buffer = 93;
                    jur_Lexer_movePointer($this.$lexemes);
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Pattern_pattern($this), jur_Lexer_getIndex($this.$lexemes)));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Pattern_pattern($this), jur_Lexer_getIndex($this.$lexemes)));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            jur_CharClass_add($res, $buffer);
        return $res;
    }
    $res = new jur_PatternSyntaxException;
    var$11 = var$10.$orig;
    $alt = var$10.$curToc - 1 | 0;
    $res.$suppressionEnabled = 1;
    $res.$writableStackTrace = 1;
    $res.$index0 = (-1);
    $res.$desc = $rt_s(42);
    $res.$pattern = var$11;
    $res.$index0 = $alt;
    $rt_throw($res);
}
function jur_Pattern_processCharSet($this, $ch) {
    var $isSupplCodePoint, var$3, var$4, var$5, var$6, var$7;
    $isSupplCodePoint = $ch >= 65536 && $ch <= 1114111 ? 1 : 0;
    var$3 = $this.$flags;
    if ((var$3 & 2) != 2 ? 0 : 1) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            var$4 = new jur_CICharSet;
            $ch = $ch & 65535;
            var$5 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$5 + 1 | 0;
            var$6 = new jl_AbstractStringBuilder;
            var$6.$buffer = $rt_createCharArray(20);
            var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
            var$4.$charCount = 1;
            var$4.$ch2 = $ch;
            var$4.$supplement = jur_Pattern_getSupplement($ch);
            return var$4;
        }
        if (((var$3 & 64) != 64 ? 0 : 1) && $ch > 128) {
            if (!$isSupplCodePoint) {
                if ($ch <= 57343 && $ch >= 56320 ? 1 : 0) {
                    var$4 = new jur_LowSurrogateCharSet;
                    $ch = $ch & 65535;
                    var$5 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$5 + 1 | 0;
                    var$6 = new jl_AbstractStringBuilder;
                    var$6.$buffer = $rt_createCharArray(20);
                    var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
                    var$4.$low = $ch;
                    return var$4;
                }
                if ($ch <= 56319 && $ch >= 55296 ? 1 : 0)
                    return jur_HighSurrogateCharSet__init_($ch & 65535);
                var$4 = new jur_UCICharSet;
                $ch = $ch & 65535;
                jur_LeafSet__init_0(var$4);
                var$4.$ch1 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
                return var$4;
            }
            var$4 = new jur_UCISupplCharSet;
            var$5 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$5 + 1 | 0;
            var$6 = new jl_AbstractStringBuilder;
            var$6.$buffer = $rt_createCharArray(20);
            var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
            var$4.$charCount = 1;
            var$4.$charCount = 2;
            if (jl_Character_upperCaseMapping === null) {
                if (jl_Character_$$metadata$$1 === null)
                    jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
            }
            b: {
                var$7 = jl_Character_upperCaseMapping;
                $isSupplCodePoint = jl_Character_binarySearchTable(var$7, $ch);
                if ($isSupplCodePoint >= 0) {
                    var$7 = var$7.data;
                    if ($isSupplCodePoint < (var$7.length / 2 | 0)) {
                        var$3 = $ch + var$7[($isSupplCodePoint * 2 | 0) + 1 | 0] | 0;
                        break b;
                    }
                }
                var$3 = 0;
            }
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
            }
            c: {
                var$7 = jl_Character_lowerCaseMapping;
                var$5 = jl_Character_binarySearchTable(var$7, var$3);
                if (var$5 >= 0) {
                    var$7 = var$7.data;
                    if (var$5 < (var$7.length / 2 | 0)) {
                        $ch = var$3 + var$7[(var$5 * 2 | 0) + 1 | 0] | 0;
                        break c;
                    }
                }
                $ch = 0;
            }
            var$4.$ch3 = $ch;
            return var$4;
        }
    }
    if ($isSupplCodePoint)
        return jur_SupplCharSet__init_($ch);
    if (jur_Lexer_isLowSurrogate0($ch))
        return jur_LowSurrogateCharSet__init_($ch & 65535);
    if (!jur_Lexer_isHighSurrogate($ch))
        return jur_CharSet__init_($ch & 65535);
    return jur_HighSurrogateCharSet__init_($ch & 65535);
}
function jur_Pattern_processRangeSet($this, $charClass) {
    var $surrogates, $lowHighSurrRangeSet, var$4, var$5, var$6, var$7;
    if (!jur_AbstractCharClass_hasLowHighSurrogates($charClass)) {
        if (!$charClass.$mayContainSupplCodepoints) {
            if ($charClass.$hasUCI())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if (!$charClass.$hasUCI())
            return jur_SupplRangeSet__init_($charClass);
        $surrogates = new jur_UCISupplRangeSet;
        jur_SupplRangeSet__init_0($surrogates, $charClass);
        return $surrogates;
    }
    $surrogates = jur_AbstractCharClass_getSurrogates($charClass);
    $lowHighSurrRangeSet = new jur_LowHighSurrogateRangeSet;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $lowHighSurrRangeSet.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $lowHighSurrRangeSet.$surrChars = $surrogates;
    $lowHighSurrRangeSet.$alt = $surrogates.$alt0;
    if (!$charClass.$mayContainSupplCodepoints) {
        if (!$charClass.$hasUCI()) {
            $surrogates = new jur_CompositeRangeSet;
            var$5 = new jur_RangeSet;
            $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
            jur_AbstractSet__init_(var$5);
            var$5.$charCount = 1;
            var$5.$chars0 = $charClass;
            var$5.$alt1 = $charClass.$alt0;
            jur_AbstractSet__init_($surrogates);
            $surrogates.$withoutSurrogates = var$5;
            $surrogates.$withSurrogates = $lowHighSurrRangeSet;
            return $surrogates;
        }
        $surrogates = new jur_CompositeRangeSet;
        var$5 = new jur_UCIRangeSet;
        $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        var$5.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$4, 10)).$toString();
        var$5.$charCount = 1;
        var$5.$chars1 = $charClass;
        var$5.$alt2 = $charClass.$alt0;
        $charClass = new jl_Integer;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        $charClass.$value5 = var$4;
        $surrogates.$index1 = jl_Integer_toString($charClass);
        $surrogates.$withoutSurrogates = var$5;
        $surrogates.$withSurrogates = $lowHighSurrRangeSet;
        return $surrogates;
    }
    if (!$charClass.$hasUCI()) {
        $surrogates = new jur_CompositeRangeSet;
        var$5 = new jur_SupplRangeSet;
        $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        var$5.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$4, 10)).$toString();
        var$5.$chars2 = $charClass;
        var$5.$alt3 = $charClass.$alt0;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        $charClass = new jl_AbstractStringBuilder;
        $charClass.$buffer = $rt_createCharArray(20);
        $surrogates.$index1 = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length, var$4, 10)).$toString();
        $surrogates.$withoutSurrogates = var$5;
        $surrogates.$withSurrogates = $lowHighSurrRangeSet;
        return $surrogates;
    }
    $surrogates = new jur_CompositeRangeSet;
    var$5 = new jur_UCISupplRangeSet;
    var$6 = jur_AbstractCharClass_getWithoutSurrogates($charClass);
    var$7 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$7 + 1 | 0;
    $charClass = new jl_AbstractStringBuilder;
    $charClass.$buffer = $rt_createCharArray(20);
    var$5.$index1 = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length, var$7, 10)).$toString();
    var$5.$chars2 = var$6;
    var$5.$alt3 = var$6.$alt0;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    $charClass = new jl_AbstractStringBuilder;
    $charClass.$buffer = $rt_createCharArray(20);
    $surrogates.$index1 = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length, var$4, 10)).$toString();
    $surrogates.$withoutSurrogates = var$5;
    $surrogates.$withSurrogates = $lowHighSurrRangeSet;
    return $surrogates;
}
function jur_Pattern_compile0($pattern) {
    return jur_Pattern_compile($pattern, 0);
}
function jur_Pattern_getSupplement($ch) {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
}
function jur_Pattern_hasFlag($this, $flag) {
    return ($this.$flags & $flag) != $flag ? 0 : 1;
}
var cbgur_ClassReflection = $rt_classWithoutFields();
function cbgur_ClassReflection_getConstructor($c, $parameterTypes) {
    var $e, $constructor, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $$je;
    if ($parameterTypes !== null && $parameterTypes.data.length) {
        a: {
            b: {
                try {
                    $e = cbgur_Constructor__init_(jl_Class_getConstructor($c, $parameterTypes));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_SecurityException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jl_NoSuchMethodException) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return $e;
            }
            $constructor = new cbgur_ReflectionException;
            if ($c.$name === null)
                $c.$name = $rt_str($c.$platformClass.$meta.name);
            var$5 = $c.$name;
            $c = new jl_StringBuilder;
            $c.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(163));
            var$6 = $c.$length;
            if (var$5 === null)
                var$5 = $rt_s(1);
            jl_AbstractStringBuilder_insert($c, var$6, var$5);
            var$7 = new jl_String;
            $parameterTypes = $c.$buffer;
            var$8 = $c.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            var$10 = var$9.data;
            var$7.$characters = var$9;
            var$11 = 0;
            while (var$11 < var$8) {
                var$10[var$11] = $parameterTypes.data[var$11 + 0 | 0];
                var$11 = var$11 + 1 | 0;
            }
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $constructor.$message = var$7;
            $constructor.$cause = $e;
            $rt_throw($constructor);
        }
        $constructor = new cbgur_ReflectionException;
        if ($c.$name === null)
            $c.$name = $rt_str($c.$platformClass.$meta.name);
        var$5 = $c.$name;
        $c = new jl_StringBuilder;
        $c.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(164));
        var$6 = $c.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert($c, var$6, var$5);
        jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(165));
        var$7 = new jl_String;
        var$10 = $c.$buffer;
        var$11 = $c.$length;
        jl_String_$callClinit();
        $parameterTypes = $rt_createCharArray(var$11);
        var$9 = $parameterTypes.data;
        var$7.$characters = $parameterTypes;
        var$12 = 0;
        while (var$12 < var$11) {
            var$9[var$12] = var$10.data[var$12 + 0 | 0];
            var$12 = var$12 + 1 | 0;
        }
        $constructor.$suppressionEnabled = 1;
        $constructor.$writableStackTrace = 1;
        $constructor.$message = var$7;
        $constructor.$cause = $e;
        $rt_throw($constructor);
    }
    $parameterTypes = (jl_Class_getConstructors($c)).data;
    if ($parameterTypes.length <= 0)
        $c = null;
    else {
        $c = new cbgur_Constructor;
        $c.$constructor0 = $parameterTypes[0];
    }
    return $c;
}
function cbgur_ClassReflection_getDeclaredConstructor($c, $parameterTypes) {
    var $e, $declaredConstructor, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $$je;
    a: {
        try {
            $e = cbgur_Constructor__init_(jl_Class_getDeclaredConstructor($c, $parameterTypes));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_SecurityException) {
                $e = $$je;
                break a;
            } else if ($$je instanceof jl_NoSuchMethodException) {
                $e = $$je;
                $declaredConstructor = new cbgur_ReflectionException;
                if ($c.$name === null)
                    $c.$name = $rt_str($c.$platformClass.$meta.name);
                $c = $c.$name;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(163));
                var$6 = var$5.$length;
                if ($c === null)
                    $c = $rt_s(1);
                jl_AbstractStringBuilder_insert(var$5, var$6, $c);
                $c = new jl_String;
                $parameterTypes = var$5.$buffer;
                var$7 = var$5.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$7);
                var$9 = var$8.data;
                $c.$characters = var$8;
                var$10 = 0;
                while (var$10 < var$7) {
                    var$9[var$10] = $parameterTypes.data[var$10 + 0 | 0];
                    var$10 = var$10 + 1 | 0;
                }
                $declaredConstructor.$suppressionEnabled = 1;
                $declaredConstructor.$writableStackTrace = 1;
                $declaredConstructor.$message = $c;
                $declaredConstructor.$cause = $e;
                $rt_throw($declaredConstructor);
            } else {
                throw $$e;
            }
        }
        return $e;
    }
    $declaredConstructor = new cbgur_ReflectionException;
    if ($c.$name === null)
        $c.$name = $rt_str($c.$platformClass.$meta.name);
    var$11 = $c.$name;
    $c = new jl_StringBuilder;
    $c.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(166));
    var$6 = $c.$length;
    if (var$11 === null)
        var$11 = $rt_s(1);
    jl_AbstractStringBuilder_insert($c, var$6, var$11);
    var$5 = new jl_String;
    $parameterTypes = $c.$buffer;
    var$7 = $c.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = $parameterTypes.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    $declaredConstructor.$suppressionEnabled = 1;
    $declaredConstructor.$writableStackTrace = 1;
    $declaredConstructor.$message = var$5;
    $declaredConstructor.$cause = $e;
    $rt_throw($declaredConstructor);
}
var cbgur_ReflectionException = $rt_classWithoutFields(jl_Exception);
function cbgur_ReflectionException__init_(var_0, var_1) {
    var var_2 = new cbgur_ReflectionException();
    cbgur_ReflectionException__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgur_ReflectionException__init_0($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $cause;
}
var ju_Enumeration = $rt_classWithoutFields(0);
var ju_Hashtable$1 = $rt_classWithoutFields();
var ju_Iterator = $rt_classWithoutFields(0);
var ju_Hashtable$2 = $rt_classWithoutFields();
var jur_MatchResult = $rt_classWithoutFields(0);
function jur_Matcher() {
    var a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start3 = null;
    a.$string = null;
    a.$matchResult = null;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$appendPos = 0;
    a.$replacement = null;
    a.$processedRepl = null;
    a.$replacementParts = null;
}
function jur_Matcher__init_(var_0, var_1) {
    var var_2 = new jur_Matcher();
    jur_Matcher__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Matcher_processReplacement($this, $replacement) {
    var $res, $sb, $i, $gr, var$6, $index, $repl, var$9, $replacementPos, var$11, $nextBackSlashed, $group, $$je;
    $res = $this.$replacement;
    if ($res !== null && jl_String_equals($res, $replacement)) {
        if ($this.$replacementParts === null)
            return $this.$processedRepl;
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(16);
        $i = 0;
        while (true) {
            $replacement = $this.$replacementParts;
            $gr = $rt_compare($i, $replacement.$size6);
            if ($gr >= 0) {
                $replacement = new jl_String;
                var$6 = $sb.$buffer;
                $index = $sb.$length;
                $repl = $rt_createCharArray($index);
                var$9 = $repl.data;
                $replacement.$characters = $repl;
                $replacementPos = 0;
                while ($replacementPos < $index) {
                    var$9[$replacementPos] = var$6.data[$replacementPos + 0 | 0];
                    $replacementPos = $replacementPos + 1 | 0;
                }
                return $replacement;
            }
            if ($i < 0)
                break;
            if ($gr >= 0)
                break;
            $replacement = $replacement.$array3.data[$i];
            jl_AbstractStringBuilder_insert($sb, $sb.$length, $replacement === null ? $rt_s(1) : $replacement.$toString());
            $i = $i + 1 | 0;
        }
        $replacement = new jl_IndexOutOfBoundsException;
        $replacement.$suppressionEnabled = 1;
        $replacement.$writableStackTrace = 1;
        $rt_throw($replacement);
    }
    $this.$replacement = $replacement;
    var$6 = $replacement.$characters.data;
    $repl = $rt_createCharArray(var$6.length);
    var$9 = $repl.data;
    $gr = 0;
    var$11 = var$9.length;
    while ($gr < var$11) {
        var$9[$gr] = var$6[$gr];
        $gr = $gr + 1 | 0;
    }
    $res = new jl_StringBuilder;
    $res.$buffer = $rt_createCharArray(16);
    $this.$replacementParts = null;
    $index = 0;
    $replacementPos = 0;
    $nextBackSlashed = 0;
    a: {
        b: while (true) {
            if ($index >= var$11) {
                $replacement = $this.$replacementParts;
                if ($replacement !== null) {
                    $index = $res.$length;
                    $gr = $rt_compare($replacementPos, $index);
                    if ($gr) {
                        if ($gr <= 0 && $replacementPos >= 0 && $index <= $index) {
                            $group = new jl_String;
                            var$6 = $res.$buffer;
                            $gr = $index - $replacementPos | 0;
                            jl_String_$callClinit();
                            $repl = $rt_createCharArray($gr);
                            var$9 = $repl.data;
                            $group.$characters = $repl;
                            $index = 0;
                            while ($index < $gr) {
                                var$9[$index] = var$6.data[$index + $replacementPos | 0];
                                $index = $index + 1 | 0;
                            }
                            ju_ArrayList_add($replacement, $group);
                        } else {
                            $replacement = new jl_IndexOutOfBoundsException;
                            $replacement.$suppressionEnabled = 1;
                            $replacement.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace($replacement);
                            $rt_throw($replacement);
                        }
                    }
                }
                $replacement = new jl_String;
                var$6 = $res.$buffer;
                $index = $res.$length;
                jl_String_$callClinit();
                $repl = $rt_createCharArray($index);
                var$9 = $repl.data;
                $replacement.$characters = $repl;
                $replacementPos = 0;
                while ($replacementPos < $index) {
                    var$9[$replacementPos] = var$6.data[$replacementPos + 0 | 0];
                    $replacementPos = $replacementPos + 1 | 0;
                }
                return $replacement;
            }
            if (var$9[$index] == 92 && !$nextBackSlashed) {
                $nextBackSlashed = 1;
                $index = $index + 1 | 0;
            }
            c: {
                if ($nextBackSlashed) {
                    if ($index >= var$11)
                        break b;
                    $gr = var$9[$index];
                    $nextBackSlashed = $res.$length;
                    jl_AbstractStringBuilder_insertSpace($res, $nextBackSlashed, $nextBackSlashed + 1 | 0);
                    $res.$buffer.data[$nextBackSlashed] = $gr;
                    $nextBackSlashed = 0;
                } else if (var$9[$index] != 36) {
                    $gr = var$9[$index];
                    $i = $res.$length;
                    jl_AbstractStringBuilder_insertSpace($res, $i, $i + 1 | 0);
                    $res.$buffer.data[$i] = $gr;
                } else {
                    if ($this.$replacementParts === null) {
                        $replacement = new ju_ArrayList;
                        $replacement.$array3 = $rt_createArray(jl_Object, 10);
                        $this.$replacementParts = $replacement;
                    }
                    d: {
                        try {
                            $replacement = new jl_String;
                            $index = $index + 1 | 0;
                            jl_String__init_2($replacement, $repl, $index, 1);
                            $gr = jl_Integer_parseInt0($replacement);
                            if ($replacementPos == jl_StringBuilder_length($res))
                                break d;
                            ju_ArrayList_add($this.$replacementParts, jl_StringBuilder_subSequence($res, $replacementPos, jl_StringBuilder_length($res)));
                            $replacementPos = jl_StringBuilder_length($res);
                            break d;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        ju_ArrayList_add($this.$replacementParts, jur_Matcher$1__init_($this, $gr));
                        $group = jur_Matcher_group($this, $gr);
                        $replacementPos = $replacementPos + jl_String_length($group) | 0;
                        jl_StringBuilder_append1($res, $group);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                }
            }
            $index = $index + 1 | 0;
        }
        $replacement = new jl_IndexOutOfBoundsException;
        $replacement.$suppressionEnabled = 1;
        $replacement.$writableStackTrace = 1;
        $rt_throw($replacement);
    }
    $replacement = new jl_IllegalArgumentException;
    $replacement.$suppressionEnabled = 1;
    $replacement.$writableStackTrace = 1;
    $replacement.$message = $rt_s(42);
    $rt_throw($replacement);
}
function jur_Matcher_group($this, $group) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$matchResult;
    var$3 = var$2.$valid0;
    if (!var$3) {
        var$2 = new jl_IllegalStateException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    if ($group >= 0) {
        var$4 = $rt_compare($group, var$2.$groupCount);
        if (var$4 < 0) {
            a: {
                var$5 = var$2.$groupBounds.data;
                var$6 = $group * 2 | 0;
                if (var$5[var$6] < 0)
                    var$2 = null;
                else {
                    var$2 = var$2.$string0;
                    if (!var$3) {
                        var$2 = new jl_IllegalStateException;
                        var$2.$suppressionEnabled = 1;
                        var$2.$writableStackTrace = 1;
                        $rt_throw(var$2);
                    }
                    if ($group >= 0 && var$4 < 0) {
                        var$7 = var$5[var$6];
                        if (!var$3) {
                            var$2 = new jl_IllegalStateException;
                            var$2.$suppressionEnabled = 1;
                            var$2.$writableStackTrace = 1;
                            $rt_throw(var$2);
                        }
                        if ($group >= 0 && var$4 < 0) {
                            var$6 = var$5[var$6 + 1 | 0];
                            $group = $rt_compare(var$7, var$6);
                            if ($group > 0) {
                                var$2 = new jl_IndexOutOfBoundsException;
                                var$2.$suppressionEnabled = 1;
                                var$2.$writableStackTrace = 1;
                                $rt_throw(var$2);
                            }
                            if (!$group) {
                                jl_String_$callClinit();
                                var$2 = jl_String_EMPTY;
                            } else if (!(!var$7 && var$6 == var$2.$characters.data.length)) {
                                var$8 = new jl_String;
                                var$5 = var$2.$characters;
                                $group = var$6 - var$7 | 0;
                                jl_String_$callClinit();
                                var$9 = $rt_createCharArray($group);
                                var$10 = var$9.data;
                                var$8.$characters = var$9;
                                var$6 = 0;
                                while (var$6 < $group) {
                                    var$10[var$6] = var$5.data[var$6 + var$7 | 0];
                                    var$6 = var$6 + 1 | 0;
                                }
                                var$2 = var$8;
                            }
                            break a;
                        }
                        var$2 = new jl_IndexOutOfBoundsException;
                        jl_String_$callClinit();
                        var$8 = new jl_StringBuilder;
                        var$8.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $group, 10);
                        var$11 = new jl_String;
                        var$5 = var$8.$buffer;
                        var$7 = var$8.$length;
                        var$9 = $rt_createCharArray(var$7);
                        var$10 = var$9.data;
                        var$11.$characters = var$9;
                        var$6 = 0;
                        while (var$6 < var$7) {
                            var$10[var$6] = var$5.data[var$6 + 0 | 0];
                            var$6 = var$6 + 1 | 0;
                        }
                        var$2.$suppressionEnabled = 1;
                        var$2.$writableStackTrace = 1;
                        var$2.$message = var$11;
                        $rt_throw(var$2);
                    }
                    var$2 = new jl_IndexOutOfBoundsException;
                    jl_String_$callClinit();
                    var$8 = new jl_StringBuilder;
                    var$8.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $group, 10);
                    var$11 = new jl_String;
                    var$5 = var$8.$buffer;
                    var$7 = var$8.$length;
                    var$9 = $rt_createCharArray(var$7);
                    var$10 = var$9.data;
                    var$11.$characters = var$9;
                    var$3 = 0;
                    while (var$3 < var$7) {
                        var$10[var$3] = var$5.data[var$3 + 0 | 0];
                        var$3 = var$3 + 1 | 0;
                    }
                    var$2.$suppressionEnabled = 1;
                    var$2.$writableStackTrace = 1;
                    var$2.$message = var$11;
                    $rt_throw(var$2);
                }
            }
            return var$2;
        }
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_String_$callClinit();
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $group, 10);
    var$11 = new jl_String;
    var$5 = var$8.$buffer;
    var$7 = var$8.$length;
    var$9 = $rt_createCharArray(var$7);
    var$10 = var$9.data;
    var$11.$characters = var$9;
    var$6 = 0;
    while (var$6 < var$7) {
        var$10[var$6] = var$5.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$11;
    $rt_throw(var$2);
}
function jur_Matcher_find0($this, $start) {
    var var$2, $stringLength, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$string;
    $stringLength = var$2.$characters.data.length;
    if ($start >= 0 && $start <= $stringLength) {
        var$4 = $this.$matchResult;
        var$4.$valid0 = 0;
        var$4.$mode = 2;
        var$5 = var$4.$groupBounds.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$2 = new jl_IllegalArgumentException;
            jl_Throwable__init_0(var$2);
            $rt_throw(var$2);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = (-1);
            var$6 = var$8;
        }
        var$5 = var$4.$consumers.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$2 = new jl_IllegalArgumentException;
            jl_Throwable__init_0(var$2);
            $rt_throw(var$2);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = (-1);
            var$6 = var$8;
        }
        var$4.$startIndex = var$4.$leftBound0;
        var$4.$mode = 1;
        var$4.$startIndex = $start;
        $stringLength = var$4.$previousMatch;
        if ($stringLength < 0)
            $stringLength = $start;
        var$4.$previousMatch = $stringLength;
        $start = $this.$start3.$find0($start, var$2, var$4);
        if ($start == (-1))
            $this.$matchResult.$hitEnd = 1;
        if ($start >= 0) {
            var$2 = $this.$matchResult;
            $start = var$2.$valid0;
            if ($start) {
                var$5 = var$2.$groupBounds.data;
                if (var$5[0] == (-1)) {
                    var$6 = var$2.$startIndex;
                    var$5[0] = var$6;
                    var$5[1] = var$6;
                }
                if (!$start) {
                    var$2 = new jl_IllegalStateException;
                    var$2.$suppressionEnabled = 1;
                    var$2.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace(var$2);
                    $rt_throw(var$2);
                }
                if (0 < var$2.$groupCount) {
                    var$2.$previousMatch = var$5[1];
                    return 1;
                }
                var$2 = new jl_IndexOutOfBoundsException;
                jl_String_$callClinit();
                var$4 = new jl_StringBuilder;
                jl_Object__init_0(var$4);
                var$4.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0(var$4, var$4.$length, 0, 10);
                var$9 = new jl_String;
                var$5 = var$4.$buffer;
                $stringLength = var$4.$length;
                var$10 = $rt_createCharArray($stringLength);
                var$11 = var$10.data;
                var$9.$characters = var$10;
                var$6 = 0;
                while (var$6 < $stringLength) {
                    var$11[var$6] = var$5.data[var$6 + 0 | 0];
                    var$6 = var$6 + 1 | 0;
                }
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$9;
                $rt_throw(var$2);
            }
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_String_$callClinit();
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $start, 10);
    var$9 = new jl_String;
    var$5 = var$4.$buffer;
    $stringLength = var$4.$length;
    var$10 = $rt_createCharArray($stringLength);
    var$11 = var$10.data;
    var$9.$characters = var$10;
    var$6 = 0;
    while (var$6 < $stringLength) {
        var$11[var$6] = var$5.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$9;
    $rt_throw(var$2);
}
function jur_Matcher_find($this) {
    var $length, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $length = $this.$string.$characters.data.length;
    var$2 = $this.$matchResult;
    if (!var$2.$transparentBounds)
        $length = $this.$rightBound;
    if (var$2.$startIndex >= 0 && var$2.$mode == 1) {
        var$3 = var$2.$valid0;
        if (!var$3) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$4 = $rt_compare(0, var$2.$groupCount);
        if (var$4 >= 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            jl_String_$callClinit();
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, 0, 10);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            $length = var$5.$length;
            var$8 = $rt_createCharArray($length);
            var$9 = var$8.data;
            var$6.$characters = var$8;
            var$10 = 0;
            while (var$10 < $length) {
                var$9[var$10] = var$7.data[var$10 + 0 | 0];
                var$10 = var$10 + 1 | 0;
            }
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$6;
            $rt_throw(var$2);
        }
        var$7 = var$2.$groupBounds.data;
        var$11 = var$7[1];
        var$2.$startIndex = var$11;
        if (!var$3) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if (var$4 >= 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            jl_String_$callClinit();
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, 0, 10);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            $length = var$5.$length;
            var$8 = $rt_createCharArray($length);
            var$9 = var$8.data;
            var$6.$characters = var$8;
            var$10 = 0;
            while (var$10 < $length) {
                var$9[var$10] = var$7.data[var$10 + 0 | 0];
                var$10 = var$10 + 1 | 0;
            }
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$6;
            $rt_throw(var$2);
        }
        var$10 = var$7[1];
        if (!var$3) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if (var$4 < 0) {
            if (var$10 == var$7[0])
                var$2.$startIndex = var$11 + 1 | 0;
            var$12 = var$2.$startIndex;
            return var$12 <= $length && jur_Matcher_find0($this, var$12) ? 1 : 0;
        }
        var$2 = new jl_IndexOutOfBoundsException;
        jl_String_$callClinit();
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, 0, 10);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $length = var$5.$length;
        var$8 = $rt_createCharArray($length);
        var$9 = var$8.data;
        var$6.$characters = var$8;
        var$10 = 0;
        while (var$10 < $length) {
            var$9[var$10] = var$7.data[var$10 + 0 | 0];
            var$10 = var$10 + 1 | 0;
        }
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    return jur_Matcher_find0($this, $this.$leftBound);
}
function jur_Matcher_end($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$matchResult;
    if (!var$1.$valid0) {
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    if (0 < var$1.$groupCount)
        return var$1.$groupBounds.data[1];
    var$1 = new jl_IndexOutOfBoundsException;
    jl_String_$callClinit();
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length, 0, 10);
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    var$1.$message = var$3;
    $rt_throw(var$1);
}
function jur_Matcher__init_0($this, $pat, $cs) {
    var var$3, var$4;
    $this.$leftBound = (-1);
    $this.$rightBound = (-1);
    $this.$pat = $pat;
    $this.$start3 = $pat.$start2;
    $this.$string = $cs;
    $this.$leftBound = 0;
    var$3 = $cs.$characters.data.length;
    $this.$rightBound = var$3;
    var$4 = jur_MatchResultImpl__init_($cs, 0, var$3, $pat.$globalGroupIndex, $pat.$compCount + 1 | 0, $pat.$consCount + 1 | 0);
    $this.$matchResult = var$4;
    var$4.$anchoringBounds = 1;
}
var jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException);
function jl_NumberFormatException__init_0() {
    var var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_1(var_0);
    return var_0;
}
function jl_NumberFormatException__init_2(var_0) {
    var var_1 = new jl_NumberFormatException();
    jl_NumberFormatException__init_(var_1, var_0);
    return var_1;
}
function jl_NumberFormatException__init_1($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
}
function jl_NumberFormatException__init_($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
function cbgur_Constructor() {
    jl_Object.call(this);
    this.$constructor0 = null;
}
function cbgur_Constructor__init_(var_0) {
    var var_1 = new cbgur_Constructor();
    cbgur_Constructor__init_0(var_1, var_0);
    return var_1;
}
function cbgur_Constructor__init_0($this, $constructor) {
    $this.$constructor0 = $constructor;
}
function cbgur_Constructor_setAccessible($this, $accessible) {}
function cbgur_Constructor_newInstance($this, $args) {
    var $e, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $$je;
    if ($args === null)
        $args = $rt_createArray(jl_Object, 0);
    a: {
        b: {
            c: {
                try {
                    $e = jlr_Constructor_newInstance($this.$constructor0, $args);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_IllegalArgumentException) {
                        $e = $$je;
                        break b;
                    } else if ($$je instanceof jl_InstantiationException) {
                        $e = $$je;
                        break c;
                    } else if ($$je instanceof jl_IllegalAccessException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jlr_InvocationTargetException) {
                        $e = $$je;
                        var$3 = new cbgur_ReflectionException;
                        var$4 = $this.$constructor0.$declaringClass;
                        if (var$4.$name === null)
                            var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
                        var$4 = var$4.$name;
                        var$5 = new jl_StringBuilder;
                        var$5.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(167));
                        var$6 = var$5.$length;
                        if (var$4 === null)
                            var$4 = $rt_s(1);
                        jl_AbstractStringBuilder_insert(var$5, var$6, var$4);
                        var$7 = new jl_String;
                        $args = var$5.$buffer;
                        var$8 = var$5.$length;
                        jl_String_$callClinit();
                        var$9 = $rt_createCharArray(var$8);
                        var$10 = var$9.data;
                        var$7.$characters = var$9;
                        var$11 = 0;
                        while (var$11 < var$8) {
                            var$10[var$11] = $args.data[var$11 + 0 | 0];
                            var$11 = var$11 + 1 | 0;
                        }
                        var$3.$suppressionEnabled = 1;
                        var$3.$writableStackTrace = 1;
                        var$3.$message = var$7;
                        var$3.$cause = $e;
                        $rt_throw(var$3);
                    } else {
                        throw $$e;
                    }
                }
                return $e;
            }
            var$3 = new cbgur_ReflectionException;
            var$4 = $this.$constructor0.$declaringClass;
            if (var$4.$name === null)
                var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
            var$4 = var$4.$name;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert5(var$5, var$5.$length, $rt_s(168));
            jl_StringBuilder_append(var$5, var$4);
            cbgur_ReflectionException__init_0(var$3, jl_StringBuilder_toString(var$5), $e);
            $rt_throw(var$3);
        }
        var$3 = new cbgur_ReflectionException;
        var$4 = $this.$constructor0.$declaringClass;
        if (var$4.$name === null)
            var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
        var$4 = var$4.$name;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(169));
        var$6 = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, var$6, var$4);
        var$7 = new jl_String;
        var$10 = var$5.$buffer;
        var$11 = var$5.$length;
        jl_String_$callClinit();
        $args = $rt_createCharArray(var$11);
        var$9 = $args.data;
        var$7.$characters = $args;
        var$12 = 0;
        while (var$12 < var$11) {
            var$9[var$12] = var$10.data[var$12 + 0 | 0];
            var$12 = var$12 + 1 | 0;
        }
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        var$3.$cause = $e;
        $rt_throw(var$3);
    }
    var$3 = new cbgur_ReflectionException;
    var$4 = $this.$constructor0.$declaringClass;
    if (var$4.$name === null)
        var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
    var$4 = var$4.$name;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(168));
    var$6 = var$5.$length;
    if (var$4 === null)
        var$4 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$5, var$6, var$4);
    var$7 = new jl_String;
    $args = var$5.$buffer;
    var$8 = var$5.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$7.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = $args.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$7;
    var$3.$cause = $e;
    $rt_throw(var$3);
}
var jl_SecurityException = $rt_classWithoutFields(jl_RuntimeException);
var jl_ReflectiveOperationException = $rt_classWithoutFields(jl_Exception);
var jl_NoSuchMethodException = $rt_classWithoutFields(jl_ReflectiveOperationException);
var jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException);
function jur_AbstractSet() {
    var a = this; jl_Object.call(a);
    a.$next3 = null;
    a.$isSecondPassVisited = 0;
    a.$index1 = null;
    a.$type3 = 0;
}
var jur_AbstractSet_counter = 0;
function jur_AbstractSet__init_($this) {
    var var$1, var$2;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
}
function jur_AbstractSet_find($this, $stringIndex, $testString, $matchResult) {
    var $length;
    $length = $matchResult.$rightBound0;
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_AbstractSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_AbstractSet_setType($this, $type) {
    $this.$type3 = $type;
}
function jur_AbstractSet_getType($this) {
    return $this.$type3;
}
function jur_AbstractSet_getQualifiedName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$index1;
    var$2 = $this.$getName();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
    var$3.$buffer.data[var$4] = 60;
    var$5 = var$3.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$5, var$1);
    var$4 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
    var$3.$buffer.data[var$4] = 58;
    var$5 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$5, var$2);
    var$4 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
    var$6 = var$3.$buffer.data;
    var$6[var$4] = 62;
    var$1 = new jl_String;
    var$4 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$4);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$4) {
        var$8[var$9] = var$6[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jur_AbstractSet_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$index1;
    var$2 = $this.$getName();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
    var$3.$buffer.data[var$4] = 60;
    var$5 = var$3.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$5, var$1);
    var$4 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
    var$3.$buffer.data[var$4] = 58;
    var$5 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$5, var$2);
    var$4 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
    var$6 = var$3.$buffer.data;
    var$6[var$4] = 62;
    var$1 = new jl_String;
    var$4 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$4);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$4) {
        var$8[var$9] = var$6[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jur_AbstractSet_getNext($this) {
    return $this.$next3;
}
function jur_AbstractSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_AbstractSet_first($this, $set) {
    return 1;
}
function jur_AbstractSet_processBackRefReplacement($this) {
    return null;
}
function jur_AbstractSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next3;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next3.$isSecondPassVisited = 1;
                $this.$next3 = $set;
            }
            $this.$next3.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$next3 = $set.$next3;
    }
}
function jur_AbstractSet__clinit_() {
    jur_AbstractSet_counter = 1;
}
var ju_Map$Entry = $rt_classWithoutFields(0);
function ju_MapEntry() {
    var a = this; jl_Object.call(a);
    a.$key = null;
    a.$value4 = null;
}
function ju_Hashtable$Entry() {
    var a = this; ju_MapEntry.call(a);
    a.$next1 = null;
    a.$hashcode = 0;
}
function jur_FSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex = 0;
}
var jur_FSet_posFSet = null;
function jur_FSet_$callClinit() {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
}
function jur_FSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $end, var$5, $shift;
    $end = $this.$groupIndex;
    var$5 = $matchResult.$groupBounds.data;
    $shift = ($end * 2 | 0) + 1 | 0;
    $end = var$5[$shift];
    var$5[$shift] = $stringIndex;
    $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0) {
        $stringIndex = $this.$groupIndex;
        $matchResult.$groupBounds.data[($stringIndex * 2 | 0) + 1 | 0] = $end;
    }
    return $shift;
}
function jur_FSet_getGroupIndex($this) {
    return $this.$groupIndex;
}
function jur_FSet_getName($this) {
    return $rt_s(170);
}
function jur_FSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_FSet__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new jur_FSet$PossessiveFSet;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    var$1.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    jur_FSet_posFSet = var$1;
}
function jur_Lexer() {
    var a = this; jl_Object.call(a);
    a.$pattern1 = null;
    a.$flags0 = 0;
    a.$mode0 = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
var jur_Lexer_decompTable = null;
var jur_Lexer_singleDecompTable = null;
var jur_Lexer_singleDecompTableSize = 0;
function jur_Lexer__init_(var_0, var_1) {
    var var_2 = new jur_Lexer();
    jur_Lexer__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Lexer__init_0($this, $pattern, $flags) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    a: {
        $this.$mode0 = 1;
        $this.$orig = $pattern;
        if (($flags & 16) > 0) {
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(171));
            var$4 = 0;
            while (true) {
                var$5 = jl_String_indexOf1($pattern, $rt_s(172), var$4);
                if (var$5 < 0) {
                    var$6 = $pattern.$characters.data;
                    var$5 = var$6.length;
                    var$7 = $rt_compare(var$4, var$5);
                    if (var$7 > 0) {
                        $pattern = new jl_IndexOutOfBoundsException;
                        $pattern.$suppressionEnabled = 1;
                        $pattern.$writableStackTrace = 1;
                        $rt_throw($pattern);
                    }
                    if (!var$7)
                        $pattern = jl_String_EMPTY;
                    else if (!(!var$4 && var$5 == var$5)) {
                        $pattern = new jl_String;
                        var$7 = var$5 - var$4 | 0;
                        var$8 = $rt_createCharArray(var$7);
                        var$9 = var$8.data;
                        $pattern.$characters = var$8;
                        var$5 = 0;
                        while (var$5 < var$7) {
                            var$9[var$5] = var$6[var$5 + var$4 | 0];
                            var$5 = var$5 + 1 | 0;
                        }
                    }
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $pattern);
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(172));
                    $pattern = new jl_String;
                    var$8 = var$3.$buffer;
                    var$5 = var$3.$length;
                    var$9 = $rt_createCharArray(var$5);
                    var$6 = var$9.data;
                    $pattern.$characters = var$9;
                    var$10 = 0;
                    while (var$10 < var$5) {
                        var$6[var$10] = var$8.data[var$10 + 0 | 0];
                        var$10 = var$10 + 1 | 0;
                    }
                    break a;
                }
                var$11 = var$5 + 2 | 0;
                var$7 = $rt_compare(var$4, var$11);
                if (var$7 > 0)
                    break;
                if (!var$7)
                    var$12 = jl_String_EMPTY;
                else if (!var$4 && var$11 == $pattern.$characters.data.length)
                    var$12 = $pattern;
                else {
                    var$12 = new jl_String;
                    var$6 = $pattern.$characters;
                    var$7 = var$11 - var$4 | 0;
                    var$8 = $rt_createCharArray(var$7);
                    var$9 = var$8.data;
                    var$12.$characters = var$8;
                    var$5 = 0;
                    while (var$5 < var$7) {
                        var$9[var$5] = var$6.data[var$5 + var$4 | 0];
                        var$5 = var$5 + 1 | 0;
                    }
                }
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$12);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(173));
                var$4 = var$11;
            }
            $pattern = new jl_IndexOutOfBoundsException;
            $pattern.$suppressionEnabled = 1;
            $pattern.$writableStackTrace = 1;
            $rt_throw($pattern);
        } else if (($flags & 128) <= 0) {
        }
    }
    var$8 = $pattern.$characters.data;
    var$5 = var$8.length;
    var$9 = $rt_createCharArray(var$5 + 2 | 0);
    $this.$pattern1 = var$9;
    var$6 = $rt_createCharArray(var$5);
    var$13 = var$6.data;
    var$7 = 0;
    var$10 = var$13.length;
    while (var$7 < var$10) {
        var$13[var$7] = var$8[var$7];
        var$7 = var$7 + 1 | 0;
    }
    jl_System_arraycopy(var$6, 0, var$9, 0, var$5);
    var$8 = $this.$pattern1.data;
    var$7 = var$8.length;
    var$8[var$7 - 1 | 0] = 0;
    var$8[var$7 - 2 | 0] = 0;
    $this.$patternFullLength = var$7;
    $this.$flags0 = $flags;
    jur_Lexer_movePointer($this);
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peek($this) {
    return $this.$ch;
}
function jur_Lexer_setMode($this, $mode) {
    if ($mode > 0 && $mode < 3)
        $this.$mode0 = $mode;
    if ($mode == 1) {
        $this.$lookAhead = $this.$ch;
        $this.$lookAheadST = $this.$curST;
        $this.$index = $this.$lookAheadToc;
        $this.$lookAheadToc = $this.$curToc;
        jur_Lexer_movePointer($this);
    }
}
function jur_Lexer_restoreFlags($this, $flags) {
    var var$2;
    $this.$flags0 = $flags;
    $this.$lookAhead = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    var$2 = $this.$curToc;
    $this.$index = var$2 + 1 | 0;
    $this.$lookAheadToc = var$2;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peekSpecial($this) {
    return $this.$curST;
}
function jur_Lexer_isSpecial($this) {
    return $this.$curST === null ? 0 : 1;
}
function jur_Lexer_next($this) {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
}
function jur_Lexer_nextSpecial($this) {
    var $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
}
function jur_Lexer_lookAhead($this) {
    return $this.$lookAhead;
}
function jur_Lexer_back($this) {
    return $this.$lookBack;
}
function jur_Lexer_movePointer($this) {
    var $reread, $nonCap, var$3, $behind, $mod, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index;
    while (true) {
        $reread = 0;
        $nonCap = $this.$index >= $this.$pattern1.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAhead = $nonCap;
        $this.$lookAheadST = null;
        if ($this.$mode0 == 4) {
            if ($nonCap != 92)
                return;
            $nonCap = $this.$index;
            var$3 = $this.$pattern1.data;
            $nonCap = $nonCap >= var$3.length ? 0 : var$3[jur_Lexer_nextIndex($this)];
            $this.$lookAhead = $nonCap;
            switch ($nonCap) {
                case 69:
                    break;
                default:
                    $this.$lookAhead = 92;
                    $this.$index = $this.$prevNW;
                    return;
            }
            $this.$mode0 = $this.$savedMode;
            $this.$lookAhead = $this.$index > ($this.$pattern1.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            $nonCap = $this.$lookAhead;
            if ($nonCap != 92) {
                $behind = $this.$mode0;
                if ($behind == 1)
                    switch ($nonCap) {
                        case 36:
                            $this.$lookAhead = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern1.data[$this.$index] != 63) {
                                $this.$lookAhead = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern1.data[$this.$index];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($this), $this.$index));
                                        }
                                        $this.$lookAhead = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern1.data[$this.$index];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $mod = jur_Lexer_readFlags($this);
                                                $this.$lookAhead = $mod;
                                                if ($mod < 256) {
                                                    $this.$flags0 = $mod;
                                                    $mod = $mod << 16;
                                                    $this.$lookAhead = $mod;
                                                    $this.$lookAhead = (-1073741784) | $mod;
                                                    break b;
                                                }
                                                $mod = $mod & 255;
                                                $this.$lookAhead = $mod;
                                                $this.$flags0 = $mod;
                                                $mod = $mod << 16;
                                                $this.$lookAhead = $mod;
                                                $this.$lookAhead = (-16777176) | $mod;
                                                break b;
                                        }
                                        $this.$lookAhead = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $behind = $this.$index;
                            var$3 = $this.$pattern1.data;
                            switch ($behind >= var$3.length ? 42 : var$3[$behind]) {
                                case 43:
                                    $this.$lookAhead = $nonCap | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead = $nonCap | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead = $nonCap | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            jur_Lexer_setMode($this, 2);
                            break a;
                        case 93:
                            if ($behind != 2)
                                break a;
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $nonCap);
                            break a;
                        case 124:
                            $this.$lookAhead = (-536870788);
                            break a;
                        default:
                    }
                else if ($behind == 2)
                    switch ($nonCap) {
                        case 38:
                            $this.$lookAhead = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        default:
                    }
            } else {
                $nonCap = $this.$index >= ($this.$pattern1.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead = $nonCap;
                    switch ($nonCap) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($this), $this.$index));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode0 != 1)
                                break a;
                            $this.$lookAhead = (-2147483648) | $nonCap;
                            break a;
                        case 65:
                            $this.$lookAhead = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($this), $this.$index));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_1($this.$pattern1, $this.$prevNW, 1), 0);
                            $this.$lookAhead = 0;
                            break a;
                        case 71:
                            $this.$lookAhead = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode0;
                            $this.$mode0 = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead = 7;
                            break a;
                        case 98:
                            $this.$lookAhead = (-2147483550);
                            break a;
                        case 99:
                            $nonCap = $this.$index;
                            var$3 = $this.$pattern1.data;
                            if ($nonCap >= (var$3.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($this), $this.$index));
                            $this.$lookAhead = var$3[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead = 27;
                            break a;
                        case 102:
                            $this.$lookAhead = 12;
                            break a;
                        case 110:
                            $this.$lookAhead = 10;
                            break a;
                        case 114:
                            $this.$lookAhead = 13;
                            break a;
                        case 116:
                            $this.$lookAhead = 9;
                            break a;
                        case 117:
                            $this.$lookAhead = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(42), jur_Lexer_toString($this), $this.$index));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
}
function jur_Lexer_parseCharClassName($this) {
    var $sb, $ch, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(10);
    $ch = $this.$index;
    var$3 = $this.$pattern1.data;
    if ($ch < (var$3.length - 2 | 0)) {
        if (var$3[$ch] != 123) {
            $sb = new jl_String;
            $this.$prevNW = $ch;
            if ($this.$flags0 & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index = $ch + 1 | 0;
            var$4 = $this.$prevNW;
            jl_String_$callClinit();
            var$5 = $rt_createCharArray(1);
            var$6 = var$5.data;
            $sb.$characters = var$5;
            var$7 = 0;
            while (var$7 < 1) {
                var$6[var$7] = var$3[var$7 + var$4 | 0];
                var$7 = var$7 + 1 | 0;
            }
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(174));
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $sb);
            $sb = new jl_String;
            var$3 = var$8.$buffer;
            var$7 = var$8.$length;
            var$5 = $rt_createCharArray(var$7);
            var$6 = var$5.data;
            $sb.$characters = var$5;
            var$9 = 0;
            while (var$9 < var$7) {
                var$6[var$9] = var$3.data[var$9 + 0 | 0];
                var$9 = var$9 + 1 | 0;
            }
            return $sb;
        }
        $this.$prevNW = $ch;
        if ($this.$flags0 & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index = $ch + 1 | 0;
        $ch = 0;
        a: {
            while (true) {
                var$7 = $this.$index;
                var$3 = $this.$pattern1.data;
                if (var$7 >= (var$3.length - 2 | 0))
                    break;
                $this.$prevNW = var$7;
                if ($this.$flags0 & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index = var$7 + 1 | 0;
                $ch = var$3[$this.$prevNW];
                if ($ch == 125)
                    break a;
                var$7 = $sb.$length;
                jl_AbstractStringBuilder_insertSpace($sb, var$7, var$7 + 1 | 0);
                $sb.$buffer.data[var$7] = $ch;
            }
        }
        if ($ch != 125) {
            $sb = new jur_PatternSyntaxException;
            var$10 = $this.$orig;
            $ch = $this.$index;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index0 = (-1);
            $sb.$desc = $rt_s(42);
            $sb.$pattern = var$10;
            $sb.$index0 = $ch;
            $rt_throw($sb);
        }
    }
    $ch = $sb.$length;
    if (!$ch) {
        $sb = new jur_PatternSyntaxException;
        var$10 = $this.$orig;
        $ch = $this.$index;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index0 = (-1);
        $sb.$desc = $rt_s(42);
        $sb.$pattern = var$10;
        $sb.$index0 = $ch;
        $rt_throw($sb);
    }
    var$8 = new jl_String;
    var$3 = $sb.$buffer;
    jl_String_$callClinit();
    var$5 = $rt_createCharArray($ch);
    var$6 = var$5.data;
    var$8.$characters = var$5;
    var$9 = 0;
    while (var$9 < $ch) {
        var$6[var$9] = var$3.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$7 = var$6.length;
    if (var$7 == 1) {
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($sb, $sb.$length, $rt_s(174));
        jl_AbstractStringBuilder_insert($sb, $sb.$length, var$8);
        return jl_StringBuilder_toString($sb);
    }
    b: {
        c: {
            if (var$7 > 3) {
                if (var$8 === $rt_s(174) ? 1 : jl_String_startsWith(var$8, $rt_s(174), 0))
                    break c;
                if (jl_String_startsWith0(var$8, $rt_s(175)))
                    break c;
            }
            break b;
        }
        var$8 = jl_String_substring0(var$8, 2);
    }
    return var$8;
}
function jur_Lexer_processQuantifier($this, $ch) {
    var $sb, $min, $max, var$5, var$6, $mod, var$8, $$je;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            var$5 = $this.$index;
            var$6 = $this.$pattern1.data;
            if (var$5 >= var$6.length)
                break a;
            $this.$prevNW = var$5;
            if ($this.$flags0 & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index = var$5 + 1 | 0;
            $ch = var$6[$this.$prevNW];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                    jl_StringBuilder_delete($sb, 0, jl_StringBuilder_length($sb));
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $mod = $ch & 65535;
            var$5 = $sb.$length;
            jl_AbstractStringBuilder_insertSpace($sb, var$5, var$5 + 1 | 0);
            $sb.$buffer.data[var$5] = $mod;
        }
        $sb = new jur_PatternSyntaxException;
        var$8 = $this.$orig;
        $ch = $this.$index;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index0 = (-1);
        $sb.$desc = $rt_s(42);
        $sb.$pattern = var$8;
        $sb.$index0 = $ch;
        $rt_throw($sb);
    }
    if ($ch != 125) {
        $sb = new jur_PatternSyntaxException;
        var$8 = $this.$orig;
        $ch = $this.$index;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index0 = (-1);
        $sb.$desc = $rt_s(42);
        $sb.$pattern = var$8;
        $sb.$index0 = $ch;
        $rt_throw($sb);
    }
    if ($sb.$length > 0)
        b: {
            try {
                $max = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $sb = new jur_PatternSyntaxException;
            var$8 = $this.$orig;
            $ch = $this.$index;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index0 = (-1);
            $sb.$desc = $rt_s(42);
            $sb.$pattern = var$8;
            $sb.$index0 = $ch;
            $rt_throw($sb);
        }
    else if ($min < 0) {
        $sb = new jur_PatternSyntaxException;
        var$8 = $this.$orig;
        $ch = $this.$index;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index0 = (-1);
        $sb.$desc = $rt_s(42);
        $sb.$pattern = var$8;
        $sb.$index0 = $ch;
        $rt_throw($sb);
    }
    if (($min | $max | ($max - $min | 0)) < 0) {
        $sb = new jur_PatternSyntaxException;
        var$8 = $this.$orig;
        $ch = $this.$index;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index0 = (-1);
        $sb.$desc = $rt_s(42);
        $sb.$pattern = var$8;
        $sb.$index0 = $ch;
        $rt_throw($sb);
    }
    var$5 = $this.$index;
    var$6 = $this.$pattern1.data;
    $mod = var$5 >= var$6.length ? 42 : var$6[var$5];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                $this.$prevNW = var$5;
                if ($this.$flags0 & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index = var$5 + 1 | 0;
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                $this.$prevNW = var$5;
                if ($this.$flags0 & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index = var$5 + 1 | 0;
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    $sb = new jur_Quantifier;
    $sb.$min1 = $min;
    $sb.$max2 = $max;
    return $sb;
}
function jur_Lexer_toString($this) {
    return $this.$orig;
}
function jur_Lexer_isEmpty($this) {
    return !$this.$ch && !$this.$lookAhead && $this.$index == $this.$patternFullLength && !($this.$curST === null ? 0 : 1) ? 1 : 0;
}
function jur_Lexer_isLetter0($ch) {
    return $ch < 0 ? 0 : 1;
}
function jur_Lexer_isLetter($this) {
    var var$1, var$2;
    var$1 = $this.$ch;
    var$2 = !var$1 && !$this.$lookAhead && $this.$index == $this.$patternFullLength && !($this.$curST === null ? 0 : 1) ? 1 : 0;
    return !var$2 && !($this.$curST === null ? 0 : 1) && (var$1 < 0 ? 0 : 1) ? 1 : 0;
}
function jur_Lexer_isLowSurrogate($this) {
    var var$1;
    var$1 = $this.$ch;
    return var$1 <= 57343 && var$1 >= 56320 ? 1 : 0;
}
function jur_Lexer_isHighSurrogate($ch) {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate0($ch) {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
}
function jur_Lexer_readHex($this, $max) {
    var $st, $length, $i, var$5, var$6, var$7, var$8, var$9, $$je;
    $st = new jl_StringBuilder;
    $st.$buffer = $rt_createCharArray($max);
    $length = $this.$pattern1.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        var$6 = $this.$index;
        if (var$6 >= $length)
            break;
        var$7 = $this.$pattern1;
        $this.$prevNW = var$6;
        if ($this.$flags0 & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index = var$6 + 1 | 0;
        var$6 = var$7.data[$this.$prevNW];
        var$8 = $st.$length;
        jl_AbstractStringBuilder_insertSpace($st, var$8, var$8 + 1 | 0);
        $st.$buffer.data[var$8] = var$6;
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                $max = jl_Integer_parseInt(jl_StringBuilder_toString($st), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $max;
        }
    $st = new jur_PatternSyntaxException;
    var$9 = $this.$orig;
    $max = $this.$index;
    $st.$suppressionEnabled = 1;
    $st.$writableStackTrace = 1;
    $st.$index0 = (-1);
    $st.$desc = $rt_s(42);
    $st.$pattern = var$9;
    $st.$index0 = $max;
    $rt_throw($st);
}
function jur_Lexer_readOctals($this) {
    var $max, $i, var$3, $length, $first, var$6, var$7, var$8, var$9, var$10;
    $max = 3;
    $i = 1;
    var$3 = $this.$pattern1.data;
    $length = var$3.length - 2 | 0;
    $first = jl_Character_getNumericValue(var$3[$this.$index]);
    if ($first >= 8)
        $first = (-1);
    switch ($first) {
        case -1:
            break;
        default:
            if ($first > 3)
                $max = 2;
            var$6 = $this.$index;
            $this.$prevNW = var$6;
            if ($this.$flags0 & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index = var$6 + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    var$7 = $this.$index;
                    if (var$7 >= $length)
                        break a;
                    var$8 = jl_Character_getNumericValue($this.$pattern1.data[var$7]);
                    if (var$8 >= 8)
                        var$8 = (-1);
                    if (var$8 < 0)
                        break;
                    $first = ($first * 8 | 0) + var$8 | 0;
                    var$6 = $this.$index;
                    $this.$prevNW = var$6;
                    if ($this.$flags0 & 4)
                        jur_Lexer_skipComments($this);
                    else
                        $this.$index = var$6 + 1 | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $first;
    }
    var$9 = new jur_PatternSyntaxException;
    var$10 = $this.$orig;
    $max = $this.$index;
    var$9.$suppressionEnabled = 1;
    var$9.$writableStackTrace = 1;
    var$9.$index0 = (-1);
    var$9.$desc = $rt_s(42);
    var$9.$pattern = var$10;
    var$9.$index0 = $max;
    $rt_throw(var$9);
}
function jur_Lexer_readFlags($this) {
    var $pos, $res, var$3, var$4, var$5, var$6, var$7;
    $pos = 1;
    $res = $this.$flags0;
    a: while (true) {
        var$3 = $this.$index;
        var$4 = $this.$pattern1.data;
        if (var$3 >= var$4.length) {
            var$5 = new jur_PatternSyntaxException;
            var$6 = $this.$orig;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$index0 = (-1);
            var$5.$desc = $rt_s(42);
            var$5.$pattern = var$6;
            var$5.$index0 = var$3;
            $rt_throw(var$5);
        }
        b: {
            c: {
                switch (var$4[var$3]) {
                    case 41:
                        $this.$prevNW = var$3;
                        if ($this.$flags0 & 4)
                            jur_Lexer_skipComments($this);
                        else
                            $this.$index = var$3 + 1 | 0;
                        return $res | 256;
                    case 45:
                        if (!$pos) {
                            var$7 = new jur_PatternSyntaxException;
                            var$6 = $this.$orig;
                            var$7.$suppressionEnabled = 1;
                            var$7.$writableStackTrace = 1;
                            var$7.$index0 = (-1);
                            var$7.$desc = $rt_s(42);
                            var$7.$pattern = var$6;
                            var$7.$index0 = var$3;
                            $rt_throw(var$7);
                        }
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        $this.$prevNW = var$3;
        if ($this.$flags0 & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index = var$3 + 1 | 0;
    }
    $this.$prevNW = var$3;
    if ($this.$flags0 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index = var$3 + 1 | 0;
    return $res;
}
function jur_Lexer_nextIndex($this) {
    var var$1;
    var$1 = $this.$index;
    $this.$prevNW = var$1;
    if ($this.$flags0 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index = var$1 + 1 | 0;
    return $this.$prevNW;
}
function jur_Lexer_skipComments($this) {
    var $length, var$2, var$3, var$4;
    $length = $this.$pattern1.data.length - 2 | 0;
    $this.$index = $this.$index + 1 | 0;
    a: while (true) {
        var$2 = $this.$index;
        if (var$2 < $length) {
            b: {
                var$2 = $this.$pattern1.data[var$2];
                switch (var$2) {
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                        break;
                    case 160:
                    case 8199:
                    case 8239:
                        var$2 = 0;
                        break b;
                    default:
                        c: {
                            switch (jl_Character_getType(var$2)) {
                                case 12:
                                case 13:
                                case 14:
                                    break;
                                default:
                                    var$2 = 0;
                                    break c;
                            }
                            var$2 = 1;
                        }
                        break b;
                }
                var$2 = 1;
            }
            if (var$2) {
                $this.$index = $this.$index + 1 | 0;
                continue;
            }
        }
        var$2 = $this.$index;
        if (var$2 >= $length)
            break;
        var$3 = $this.$pattern1.data;
        if (var$3[var$2] != 35)
            break;
        $this.$index = var$2 + 1 | 0;
        while (true) {
            var$4 = $this.$index;
            if (var$4 >= $length)
                continue a;
            var$2 = var$3[var$4];
            if (var$2 != 10 && var$2 != 13 && var$2 != 133 && (var$2 | 1) != 8233 ? 0 : 1)
                continue a;
            $this.$index = var$4 + 1 | 0;
        }
    }
    return var$2;
}
function jur_Lexer_getHangulDecomposition($ch) {
    var $sIndex, $l, $v, $t;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        return !$t ? $rt_createIntArrayFromData([$l, $v]) : $rt_createIntArrayFromData([$l, $v, 4519 + $t | 0]);
    }
    return null;
}
function jur_Lexer_hasSingleCodepointDecomposition($ch) {
    return jur_Lexer_singleDecompTable.$get($ch) == jur_Lexer_singleDecompTableSize ? 0 : 1;
}
function jur_Lexer_hasDecompositionNonNullCanClass($ch) {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
}
function jur_Lexer_nextCodePoint($this) {
    var var$1, $lowExpectedIndex, var$3, $high, $low;
    var$1 = $this.$pattern1;
    $lowExpectedIndex = $this.$index;
    $this.$prevNW = $lowExpectedIndex;
    if ($this.$flags0 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index = $lowExpectedIndex + 1 | 0;
    var$1 = var$1.data;
    var$3 = $this.$prevNW;
    $high = var$1[var$3];
    if (($high & 64512) != 55296 ? 0 : 1) {
        $lowExpectedIndex = var$3 + 1 | 0;
        var$1 = $this.$pattern1.data;
        if ($lowExpectedIndex < var$1.length) {
            $low = var$1[$lowExpectedIndex];
            if (($low & 64512) != 56320 ? 0 : 1) {
                var$3 = $this.$index;
                $this.$prevNW = var$3;
                if ($this.$flags0 & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index = var$3 + 1 | 0;
                return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
            }
        }
    }
    return $high;
}
function jur_Lexer_getIndex($this) {
    return $this.$curToc;
}
function jur_PatternSyntaxException() {
    var a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern = null;
    a.$index0 = 0;
}
function jur_PatternSyntaxException__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PatternSyntaxException__init_0($this, $description, $pattern, $index) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$index0 = (-1);
    $this.$desc = $description;
    $this.$pattern = $pattern;
    $this.$index0 = $index;
}
function jur_PatternSyntaxException_getMessage($this) {
    var $filler, var$2, var$3, var$4, var$5, var$6, $temp, var$8, var$9, var$10, var$11, var$12;
    $filler = $rt_s(42);
    var$2 = $this.$index0;
    if (var$2 >= 1) {
        var$3 = $rt_createCharArray(var$2).data;
        var$4 = 0;
        var$5 = var$3.length;
        if (var$4 > var$5) {
            $filler = new jl_IllegalArgumentException;
            $filler.$suppressionEnabled = 1;
            $filler.$writableStackTrace = 1;
            $rt_throw($filler);
        }
        while (var$4 < var$5) {
            var$6 = var$4 + 1 | 0;
            var$3[var$4] = 32;
            var$4 = var$6;
        }
        $filler = new jl_String;
        jl_String_$callClinit();
        $temp = $rt_createCharArray(var$5);
        var$8 = $temp.data;
        $filler.$characters = $temp;
        var$9 = 0;
        while (var$9 < var$5) {
            var$8[var$9] = var$3[var$9];
            var$9 = var$9 + 1 | 0;
        }
    }
    var$10 = $this.$desc;
    var$11 = $this.$pattern;
    if (var$11 !== null && var$11.$characters.data.length) {
        var$12 = new jl_StringBuilder;
        var$12.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$12, var$12.$length, var$2, 10);
        jl_AbstractStringBuilder_insert(var$12, var$12.$length, $rt_s(58));
        jl_AbstractStringBuilder_insert(var$12, var$12.$length, var$11);
        jl_AbstractStringBuilder_insert(var$12, var$12.$length, $rt_s(58));
        jl_AbstractStringBuilder_insert(var$12, var$12.$length, $filler);
        $filler = new jl_String;
        $temp = var$12.$buffer;
        var$2 = var$12.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$2);
        var$3 = var$8.data;
        $filler.$characters = var$8;
        var$4 = 0;
        while (var$4 < var$2) {
            var$3[var$4] = $temp.data[var$4 + 0 | 0];
            var$4 = var$4 + 1 | 0;
        }
    } else
        $filler = $rt_s(42);
    var$11 = new jl_StringBuilder;
    var$11.$buffer = $rt_createCharArray(16);
    var$9 = var$11.$length;
    if (var$10 === null)
        var$10 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$11, var$9, var$10);
    jl_AbstractStringBuilder_insert(var$11, var$11.$length, $filler);
    $filler = new jl_String;
    $temp = var$11.$buffer;
    var$2 = var$11.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$2);
    var$3 = var$8.data;
    $filler.$characters = var$8;
    var$4 = 0;
    while (var$4 < var$2) {
        var$3[var$4] = $temp.data[var$4 + 0 | 0];
        var$4 = var$4 + 1 | 0;
    }
    return $filler;
}
var ju_Collection = $rt_classWithoutFields(0);
var ju_AbstractCollection = $rt_classWithoutFields();
function ju_AbstractCollection_toArray($this, $a) {
    var var$2, $i, $i_0, var$5, $iter$index, var$7, var$8, var$9, $iter$index_0;
    var$2 = $a.data;
    $i = $this.$size6;
    $i_0 = var$2.length;
    if ($i_0 >= $i)
        while ($i < $i_0) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    else {
        var$5 = $a.constructor;
        if (var$5 === null)
            $a = null;
        else {
            $a = var$5.classObject;
            if ($a === null) {
                $a = new jl_Class;
                $a.$platformClass = var$5;
                var$2 = $a;
                var$5.classObject = var$2;
            }
        }
        $a = jl_Class_getComponentType($a);
        if ($a === null) {
            $a = new jl_NullPointerException;
            $a.$suppressionEnabled = 1;
            $a.$writableStackTrace = 1;
            $rt_throw($a);
        }
        if ($a === $rt_cls($rt_voidcls())) {
            $a = new jl_IllegalArgumentException;
            $a.$suppressionEnabled = 1;
            $a.$writableStackTrace = 1;
            $rt_throw($a);
        }
        if ($i < 0) {
            $a = new jl_NegativeArraySizeException;
            $a.$suppressionEnabled = 1;
            $a.$writableStackTrace = 1;
            $rt_throw($a);
        }
        $a = jlr_Array_newInstanceImpl($a.$platformClass, $i);
    }
    $i_0 = 0;
    $iter$index = 0;
    var$7 = $this.$modCount1;
    var$8 = $this.$size6;
    $i = $rt_compare(var$7, var$7);
    a: {
        while (true) {
            var$9 = $rt_compare($iter$index, var$8);
            if (!(var$9 >= 0 ? 0 : 1))
                break;
            var$7 = $i_0 + 1 | 0;
            if ($i < 0) {
                $a = new ju_ConcurrentModificationException;
                $a.$suppressionEnabled = 1;
                $a.$writableStackTrace = 1;
                $rt_throw($a);
            }
            $iter$index_0 = $iter$index + 1 | 0;
            if ($iter$index < 0)
                break a;
            if (var$9 >= 0)
                break a;
            $a.data[$i_0] = $this.$array3.data[$iter$index];
            $i_0 = var$7;
            $iter$index = $iter$index_0;
        }
        return $a;
    }
    $a = new jl_IndexOutOfBoundsException;
    $a.$suppressionEnabled = 1;
    $a.$writableStackTrace = 1;
    $rt_throw($a);
}
var ju_List = $rt_classWithoutFields(0);
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount1 = 0;
}
var ju_RandomAccess = $rt_classWithoutFields(0);
function ju_ArrayList() {
    var a = this; ju_AbstractList.call(a);
    a.$array3 = null;
    a.$size6 = 0;
}
function ju_ArrayList_ensureCapacity($this, $minCapacity) {
    var var$2, var$3, var$4, $newLength, var$6, var$7, var$8, var$9;
    var$2 = $this.$array3;
    var$3 = var$2.data;
    var$4 = var$3.length;
    if (var$4 < $minCapacity) {
        if (var$4 >= 1073741823)
            $newLength = 2147483647;
        else {
            var$6 = var$4 * 2 | 0;
            $newLength = 5;
            if (var$6 > $newLength)
                $newLength = var$6;
            if ($minCapacity > $newLength)
                $newLength = $minCapacity;
        }
        var$7 = var$2.constructor;
        if (var$7 === null)
            var$8 = null;
        else {
            var$8 = var$7.classObject;
            if (var$8 === null) {
                var$8 = new jl_Class;
                var$8.$platformClass = var$7;
                var$9 = var$8;
                var$7.classObject = var$9;
            }
        }
        var$7 = jl_Class_getComponentType(var$8);
        if (var$7 === null) {
            var$8 = new jl_NullPointerException;
            var$8.$suppressionEnabled = 1;
            var$8.$writableStackTrace = 1;
            $rt_throw(var$8);
        }
        if (var$7 === $rt_cls($rt_voidcls())) {
            var$8 = new jl_IllegalArgumentException;
            var$8.$suppressionEnabled = 1;
            var$8.$writableStackTrace = 1;
            $rt_throw(var$8);
        }
        if ($newLength < 0) {
            var$8 = new jl_NegativeArraySizeException;
            var$8.$suppressionEnabled = 1;
            var$8.$writableStackTrace = 1;
            $rt_throw(var$8);
        }
        var$9 = jlr_Array_newInstanceImpl(var$7.$platformClass, $newLength);
        if ($newLength < var$4)
            var$4 = $newLength;
        $minCapacity = 0;
        while ($minCapacity < var$4) {
            var$9.data[$minCapacity] = var$3[$minCapacity];
            $minCapacity = $minCapacity + 1 | 0;
        }
        $this.$array3 = var$9;
    }
}
function ju_ArrayList_get($this, $index) {
    var var$2;
    if ($index >= 0 && $index < $this.$size6)
        return $this.$array3.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
}
function ju_ArrayList_size($this) {
    return $this.$size6;
}
function ju_ArrayList_add($this, $element) {
    var var$2, var$3;
    ju_ArrayList_ensureCapacity($this, $this.$size6 + 1 | 0);
    var$2 = $this.$array3.data;
    var$3 = $this.$size6;
    $this.$size6 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount1 = $this.$modCount1 + 1 | 0;
    return 1;
}
function ju_ArrayList_add0($this, $index, $element) {
    var var$3, $i, var$5;
    if ($index >= 0) {
        var$3 = $this.$size6;
        if ($index <= var$3) {
            ju_ArrayList_ensureCapacity($this, var$3 + 1 | 0);
            var$3 = $this.$size6;
            $i = var$3;
            while ($i > $index) {
                var$5 = $this.$array3.data;
                var$5[$i] = var$5[$i - 1 | 0];
                $i = $i + (-1) | 0;
            }
            $this.$array3.data[$index] = $element;
            $this.$size6 = var$3 + 1 | 0;
            $this.$modCount1 = $this.$modCount1 + 1 | 0;
            return;
        }
    }
    $element = new jl_IndexOutOfBoundsException;
    $element.$suppressionEnabled = 1;
    $element.$writableStackTrace = 1;
    $rt_throw($element);
}
function ju_ArrayList_remove($this, $i) {
    var var$2, var$3, $old, $i_0;
    if ($i >= 0) {
        var$2 = $this.$size6;
        if ($i < var$2) {
            var$3 = $this.$array3.data;
            $old = var$3[$i];
            var$2 = var$2 - 1 | 0;
            $this.$size6 = var$2;
            while ($i < var$2) {
                $i_0 = $i + 1 | 0;
                var$3[$i] = var$3[$i_0];
                $i = $i_0;
            }
            var$3[var$2] = null;
            $this.$modCount1 = $this.$modCount1 + 1 | 0;
            return $old;
        }
    }
    $old = new jl_IndexOutOfBoundsException;
    $old.$suppressionEnabled = 1;
    $old.$writableStackTrace = 1;
    $rt_throw($old);
}
var jur_NonCapFSet = $rt_classWithoutFields(jur_FSet);
function jur_NonCapFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr, var$5;
    $gr = $this.$groupIndex;
    var$5 = $matchResult.$consumers.data;
    var$5[$gr] = $stringIndex - var$5[$gr] | 0;
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_NonCapFSet_getName($this) {
    return $rt_s(176);
}
function jur_NonCapFSet_hasConsumed($this, $mr) {
    return 0;
}
var jur_AheadFSet = $rt_classWithoutFields(jur_FSet);
function jur_AheadFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_AheadFSet_getName($this) {
    return $rt_s(177);
}
var jur_BehindFSet = $rt_classWithoutFields(jur_FSet);
function jur_BehindFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$groupIndex;
    if ($matchResult.$consumers.data[$gr] != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
}
function jur_BehindFSet_getName($this) {
    return $rt_s(178);
}
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index2 = 0;
}
function jur_AtomicFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr, var$5;
    $gr = $this.$groupIndex;
    var$5 = $matchResult.$consumers.data;
    var$5[$gr] = $stringIndex - var$5[$gr] | 0;
    $this.$index2 = $stringIndex;
    return $stringIndex;
}
function jur_AtomicFSet_getName($this) {
    return $rt_s(179);
}
function jur_AtomicFSet_hasConsumed($this, $mr) {
    return 0;
}
var jur_FinalSet = $rt_classWithoutFields(jur_FSet);
function jur_FinalSet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($matchResult.$mode != 1 && $stringIndex != $matchResult.$rightBound0)
        return (-1);
    $matchResult.$valid0 = 1;
    $matchResult.$groupBounds.data[1] = $stringIndex;
    return $stringIndex;
}
function jur_FinalSet_getName($this) {
    return $rt_s(180);
}
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount = 0;
}
function jur_LeafSet__init_($this, $next) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$next3 = $next;
    $this.$charCount = 1;
    $this.$type3 = 1;
}
function jur_LeafSet__init_0($this) {
    var var$1, var$2;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    $this.$charCount = 1;
}
function jur_LeafSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    if (($stringIndex + $this.$charCount0() | 0) > $matchResult.$rightBound0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next3.$matches($stringIndex + $shift | 0, $testString, $matchResult);
}
function jur_LeafSet_charCount($this) {
    return $this.$charCount;
}
function jur_LeafSet_hasConsumed($this, $mr) {
    return 1;
}
var jur_EmptySet = $rt_classWithoutFields(jur_LeafSet);
function jur_EmptySet__init_(var_0) {
    var var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
}
function jur_EmptySet__init_0($this, $next) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$next3 = $next;
    $this.$charCount = 1;
    $this.$type3 = 1;
    $this.$charCount = 0;
}
function jur_EmptySet_accepts($this, $stringIndex, $testString) {
    return 0;
}
function jur_EmptySet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startStr, $low, var$7, $high;
    $strLength = $matchResult.$rightBound0;
    $startStr = $matchResult.$leftBound0;
    a: {
        b: {
            while (true) {
                $low = $rt_compare($stringIndex, $strLength);
                if ($low > 0)
                    return (-1);
                if ($low < 0) {
                    if ($stringIndex < 0)
                        break b;
                    var$7 = $testString.$characters.data;
                    $high = var$7.length;
                    if ($stringIndex >= $high)
                        break b;
                    if (((var$7[$stringIndex] & 64512) != 56320 ? 0 : 1) && $stringIndex > $startStr) {
                        $low = $stringIndex - 1 | 0;
                        if ($low < 0)
                            break a;
                        if ($low >= $high)
                            break a;
                        if ((var$7[$low] & 64512) != 55296 ? 0 : 1) {
                            $stringIndex = $stringIndex + 1 | 0;
                            continue;
                        }
                    }
                }
                if ($this.$next3.$matches($stringIndex, $testString, $matchResult) >= 0)
                    break;
                $stringIndex = $stringIndex + 1 | 0;
            }
            return $stringIndex;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_EmptySet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $strLength, $startStr, var$7, var$8, $low;
    $strLength = $matchResult.$rightBound0;
    $startStr = $matchResult.$leftBound0;
    a: {
        b: {
            while (true) {
                if ($startSearch < $stringIndex)
                    return (-1);
                if ($startSearch < $strLength) {
                    if ($startSearch < 0)
                        break b;
                    var$7 = $testString.$characters.data;
                    var$8 = var$7.length;
                    if ($startSearch >= var$8)
                        break b;
                    if (((var$7[$startSearch] & 64512) != 56320 ? 0 : 1) && $startSearch > $startStr) {
                        $low = $startSearch - 1 | 0;
                        if ($low < 0)
                            break a;
                        if ($low >= var$8)
                            break a;
                        if ((var$7[$low] & 64512) != 55296 ? 0 : 1) {
                            $startSearch = $startSearch + (-1) | 0;
                            continue;
                        }
                    }
                }
                if ($this.$next3.$matches($startSearch, $testString, $matchResult) >= 0)
                    break;
                $startSearch = $startSearch + (-1) | 0;
            }
            return $startSearch;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_EmptySet_getName($this) {
    return $rt_s(181);
}
function jur_EmptySet_hasConsumed($this, $mr) {
    return 0;
}
function jur_JointSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex0 = 0;
}
function jur_JointSet__init_(var_0, var_1) {
    var var_2 = new jur_JointSet();
    jur_JointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_JointSet__init_0($this, $children, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_JointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $e, $size, var$6, $shift, $start, $i;
    $e = $this.$children;
    if ($e === null)
        return (-1);
    $size = $this.$groupIndex0;
    var$6 = $matchResult.$groupBounds.data;
    $shift = $size * 2 | 0;
    $start = var$6[$shift];
    var$6[$shift] = $stringIndex;
    $size = $e.$size6;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size) {
                $stringIndex = $this.$groupIndex0;
                $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $start;
                return (-1);
            }
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size6)
                break a;
            $shift = $e.$array3.data[$i].$matches($stringIndex, $testString, $matchResult);
            if ($shift >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return $shift;
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_JointSet_setNext($this, $next) {
    $this.$fSet.$next3 = $next;
}
function jur_JointSet_getName($this) {
    return $rt_s(182);
}
function jur_JointSet_first($this, $set) {
    var var$2, $i$index, var$4, var$5, $i$index_0;
    a: {
        b: {
            var$2 = $this.$children;
            if (var$2 !== null) {
                $i$index = 0;
                var$4 = var$2.$modCount1;
                var$5 = var$2.$size6;
                while (true) {
                    if (!($i$index >= var$5 ? 0 : 1))
                        break b;
                    if (var$4 < var$2.$modCount1) {
                        $set = new ju_ConcurrentModificationException;
                        $set.$suppressionEnabled = 1;
                        $set.$writableStackTrace = 1;
                        $rt_throw($set);
                    }
                    $i$index_0 = $i$index + 1 | 0;
                    if ($i$index < 0)
                        break a;
                    if ($i$index >= var$2.$size6)
                        break a;
                    if (var$2.$array3.data[$i$index].$first0($set))
                        break;
                    $i$index = $i$index_0;
                }
                return 1;
            }
        }
        return 0;
    }
    $set = new jl_IndexOutOfBoundsException;
    $set.$suppressionEnabled = 1;
    $set.$writableStackTrace = 1;
    $rt_throw($set);
}
function jur_JointSet_hasConsumed($this, $matchResult) {
    var var$2, var$3, var$4;
    var$2 = $this.$groupIndex0;
    var$3 = $matchResult.$groupBounds.data;
    var$2 = var$2 * 2 | 0;
    var$4 = var$2 + 1 | 0;
    return var$3[var$4] >= 0 && var$3[var$2] == var$3[var$4] ? 0 : 1;
}
function jur_JointSet_processSecondPass($this) {
    var $child, $childrenSize, $i, $set;
    $this.$isSecondPassVisited = 1;
    $child = $this.$fSet;
    if ($child !== null && !$child.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($child);
    a: {
        b: {
            $child = $this.$children;
            if ($child !== null) {
                $childrenSize = $child.$size6;
                $i = 0;
                while (true) {
                    if ($i >= $childrenSize)
                        break b;
                    $child = $this.$children;
                    if ($i < 0)
                        break a;
                    if ($i >= $child.$size6)
                        break a;
                    $child = $child.$array3.data[$i];
                    $set = $child.$processBackRefReplacement();
                    if ($set === null)
                        $set = $child;
                    else {
                        $child.$isSecondPassVisited = 1;
                        ju_ArrayList_remove($this.$children, $i);
                        ju_ArrayList_add0($this.$children, $i, $set);
                    }
                    if (!$set.$isSecondPassVisited)
                        $set.$processSecondPass();
                    $i = $i + 1 | 0;
                }
            }
        }
        if ($this.$next3 !== null)
            jur_AbstractSet_processSecondPass($this);
        return;
    }
    $child = new jl_IndexOutOfBoundsException;
    $child.$suppressionEnabled = 1;
    $child.$writableStackTrace = 1;
    $rt_throw($child);
}
var jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet);
function jur_NonCapJointSet__init_(var_0, var_1) {
    var var_2 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NonCapJointSet__init_0($this, $children, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_NonCapJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $i, var$5, $start, $size, $e, $shift;
    $i = $this.$groupIndex0;
    var$5 = $matchResult.$consumers.data;
    $start = var$5[$i];
    var$5[$i] = $stringIndex;
    $size = $this.$children.$size6;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size) {
                $stringIndex = $this.$groupIndex0;
                $matchResult.$consumers.data[$stringIndex] = $start;
                return (-1);
            }
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size6)
                break a;
            $shift = $e.$array3.data[$i].$matches($stringIndex, $testString, $matchResult);
            if ($shift >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return $shift;
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_NonCapJointSet_getName($this) {
    return $rt_s(183);
}
function jur_NonCapJointSet_hasConsumed($this, $matchResult) {
    var $cons;
    $cons = $this.$groupIndex0;
    return !$matchResult.$consumers.data[$cons] ? 0 : 1;
}
var jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet);
function jur_AtomicJointSet__init_(var_0, var_1) {
    var var_2 = new jur_AtomicJointSet();
    jur_AtomicJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AtomicJointSet__init_0($this, $children, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_AtomicJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift, var$5, $start, $size, $i, $e;
    $shift = $this.$groupIndex0;
    var$5 = $matchResult.$consumers.data;
    $start = var$5[$shift];
    var$5[$shift] = $stringIndex;
    $size = $this.$children.$size6;
    $i = 0;
    a: {
        while ($i < $size) {
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size6)
                break a;
            if ($e.$array3.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                return $this.$next3.$matches($this.$fSet.$index2, $testString, $matchResult);
            $i = $i + 1 | 0;
        }
        $stringIndex = $this.$groupIndex0;
        $matchResult.$consumers.data[$stringIndex] = $start;
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_AtomicJointSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_AtomicJointSet_getName($this) {
    return $rt_s(183);
}
var jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_PositiveLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookAhead();
    jur_PositiveLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookAhead__init_0($this, $children, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_PositiveLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e;
    $size = $this.$children.$size6;
    $i = 0;
    a: {
        while ($i < $size) {
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size6)
                break a;
            if ($e.$array3.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                return $this.$next3.$matches($stringIndex, $testString, $matchResult);
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_PositiveLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PositiveLookAhead_getName($this) {
    return $rt_s(184);
}
var jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_NegativeLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookAhead();
    jur_NegativeLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookAhead__init_0($this, $children, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_NegativeLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e;
    $size = $this.$children.$size6;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size)
                return $this.$next3.$matches($stringIndex, $testString, $matchResult);
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size6)
                break a;
            if ($e.$array3.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_NegativeLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookAhead_getName($this) {
    return $rt_s(185);
}
var jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_PositiveLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookBehind();
    jur_PositiveLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookBehind__init_0($this, $children, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_PositiveLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $leftBound, $shift, $i, $e;
    $size = $this.$children.$size6;
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound0;
    a: {
        b: {
            $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
            if ($shift >= 0) {
                $i = $this.$groupIndex0;
                $matchResult.$consumers.data[$i] = $stringIndex;
                $i = 0;
                while (true) {
                    if ($i >= $size)
                        break b;
                    $e = $this.$children;
                    if ($i < 0)
                        break a;
                    if ($i >= $e.$size6)
                        break a;
                    if ($e.$array3.data[$i].$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                        $stringIndex = $this.$groupIndex0;
                        $matchResult.$consumers.data[$stringIndex] = (-1);
                        return $shift;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_PositiveLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PositiveLookBehind_getName($this) {
    return $rt_s(186);
}
var jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_NegativeLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookBehind();
    jur_NegativeLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookBehind__init_0($this, $children, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_NegativeLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e;
    $size = $this.$children.$size6;
    $i = $this.$groupIndex0;
    $matchResult.$consumers.data[$i] = $stringIndex;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size)
                return $this.$next3.$matches($stringIndex, $testString, $matchResult);
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size6)
                break a;
            if ($e.$array3.data[$i].$findBack(0, $stringIndex, $testString, $matchResult) >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_NegativeLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookBehind_getName($this) {
    return $rt_s(187);
}
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
function jur_SingleSet__init_(var_0, var_1) {
    var var_2 = new jur_SingleSet();
    jur_SingleSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_SingleSet__init_0($this, $child, $fSet) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$groupIndex;
}
function jur_SingleSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift, var$5, $start;
    $shift = $this.$groupIndex0;
    var$5 = $matchResult.$groupBounds.data;
    $shift = $shift * 2 | 0;
    $start = var$5[$shift];
    var$5[$shift] = $stringIndex;
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $shift = $this.$groupIndex0;
    $matchResult.$groupBounds.data[$shift * 2 | 0] = $start;
    return (-1);
}
function jur_SingleSet_find($this, $stringIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$find0($stringIndex, $testString, $matchResult);
    if ($res >= 0) {
        $stringIndex = $this.$groupIndex0;
        $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $res;
    }
    return $res;
}
function jur_SingleSet_findBack($this, $stringIndex, $lastIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0) {
        $stringIndex = $this.$groupIndex0;
        $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $res;
    }
    return $res;
}
function jur_SingleSet_first($this, $set) {
    return $this.$kid.$first0($set);
}
function jur_SingleSet_processBackRefReplacement($this) {
    var $set, var$2, var$3, var$4, var$5;
    $set = new jur_BackReferencedSingleSet;
    var$2 = $this.$kid;
    var$3 = $this.$fSet;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    jl_Object__init_0(var$5);
    var$5.$buffer = $rt_createCharArray(20);
    $set.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $set.$kid = var$2;
    $set.$fSet = var$3;
    $set.$groupIndex0 = var$3.$groupIndex;
    $this.$next3 = $set;
    return $set;
}
function jur_SingleSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$fSet;
    if ($set !== null && !$set.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($set);
    $set = $this.$kid;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
}
var jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IndexOutOfBoundsException__init_0(var_0) {
    var var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_(var_1, var_0);
    return var_1;
}
function jl_IndexOutOfBoundsException__init_($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
var jlr_Array = $rt_classWithoutFields();
function jlr_Array_getLength(var$1) {
    if (var$1 === null || var$1.constructor.$meta.item === undefined) {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
}
function jlr_Array_newInstance($componentType, $length) {
    if ($componentType === null) {
        $componentType = new jl_NullPointerException;
        $componentType.$suppressionEnabled = 1;
        $componentType.$writableStackTrace = 1;
        $rt_throw($componentType);
    }
    if ($componentType === $rt_cls($rt_voidcls())) {
        $componentType = new jl_IllegalArgumentException;
        $componentType.$suppressionEnabled = 1;
        $componentType.$writableStackTrace = 1;
        $rt_throw($componentType);
    }
    if ($length >= 0)
        return jlr_Array_newInstanceImpl($componentType.$platformClass, $length);
    $componentType = new jl_NegativeArraySizeException;
    $componentType.$suppressionEnabled = 1;
    $componentType.$writableStackTrace = 1;
    $rt_throw($componentType);
}
function jlr_Array_newInstanceImpl(var$1, var$2) {
    if (var$1.$meta.primitive) {
        if (var$1 == $rt_bytecls()) {
            return $rt_createByteArray(var$2);
        }
        if (var$1 == $rt_shortcls()) {
            return $rt_createShortArray(var$2);
        }
        if (var$1 == $rt_charcls()) {
            return $rt_createCharArray(var$2);
        }
        if (var$1 == $rt_intcls()) {
            return $rt_createIntArray(var$2);
        }
        if (var$1 == $rt_longcls()) {
            return $rt_createLongArray(var$2);
        }
        if (var$1 == $rt_floatcls()) {
            return $rt_createFloatArray(var$2);
        }
        if (var$1 == $rt_doublecls()) {
            return $rt_createDoubleArray(var$2);
        }
        if (var$1 == $rt_booleancls()) {
            return $rt_createBooleanArray(var$2);
        }
    } else {
        return $rt_createArray(var$1, var$2)
    }
}
var jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException);
var jur_SpecialToken = $rt_classWithoutFields();
function jur_AbstractCharClass() {
    var a = this; jur_SpecialToken.call(a);
    a.$alt0 = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
var jur_AbstractCharClass_charClasses = null;
function jur_AbstractCharClass_$callClinit() {
    jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
    jur_AbstractCharClass__clinit_();
}
function jur_AbstractCharClass_getBits($this) {
    return null;
}
function jur_AbstractCharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_AbstractCharClass_hasLowHighSurrogates($this) {
    return !$this.$altSurrogates ? (ju_BitSet_nextSetBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1) : ju_BitSet_nextClearBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1;
}
function jur_AbstractCharClass_mayContainSupplCodepoints($this) {
    return $this.$mayContainSupplCodepoints;
}
function jur_AbstractCharClass_getInstance($this) {
    return $this;
}
function jur_AbstractCharClass_getSurrogates($this) {
    var $lHS, var$2;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$1;
        var$2.$this$021 = $this;
        var$2.$val$lHS = $lHS;
        $lHS = new ju_BitSet;
        $lHS.$data2 = $rt_createIntArray(64);
        var$2.$lowHighSurrogates = $lHS;
        $this.$charClassWithSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
}
function jur_AbstractCharClass_getWithoutSurrogates($this) {
    var $lHS, var$2;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$2;
        var$2.$this$022 = $this;
        var$2.$val$lHS0 = $lHS;
        var$2.$val$thisClass = $this;
        $lHS = new ju_BitSet;
        $lHS.$data2 = $rt_createIntArray(64);
        var$2.$lowHighSurrogates = $lHS;
        $this.$charClassWithoutSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$alt0);
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
}
function jur_AbstractCharClass_hasUCI($this) {
    return 0;
}
function jur_AbstractCharClass_setNegative($this, $value) {
    var var$2;
    var$2 = $this.$alt0;
    if (var$2 ^ $value) {
        $this.$alt0 = var$2 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_AbstractCharClass_isNegative($this) {
    return $this.$alt0;
}
function jur_AbstractCharClass_getPredefinedClass($name, $negative) {
    jur_AbstractCharClass_$callClinit();
    $name = jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name);
    if (!$negative && $name.$posValue === null)
        $name.$posValue = $name.$computeValue();
    else if ($negative && $name.$negValue === null)
        $name.$negValue = jur_AbstractCharClass_setNegative($name.$computeValue(), 1);
    return $negative ? $name.$negValue : $name.$posValue;
}
function jur_AbstractCharClass__clinit_() {
    var var$1;
    var$1 = new jur_AbstractCharClass$PredefinedCharacterClasses;
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
    jur_AbstractCharClass_charClasses = var$1;
}
function jur_CharClass() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
function jur_CharClass_add($this, $ch) {
    var var$2, var$3, var$4, var$5;
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    ju_BitSet_clear($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                ju_BitSet_set($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
                }
                c: {
                    var$2 = jl_Character_upperCaseMapping;
                    var$3 = jl_Character_binarySearchTable(var$2, $ch);
                    if (var$3 >= 0) {
                        var$2 = var$2.data;
                        if (var$3 < (var$2.length / 2 | 0)) {
                            var$4 = $ch + var$2[(var$3 * 2 | 0) + 1 | 0] | 0;
                            break c;
                        }
                    }
                    var$4 = 0;
                }
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
                }
                d: {
                    var$2 = jl_Character_lowerCaseMapping;
                    var$5 = jl_Character_binarySearchTable(var$2, var$4);
                    if (var$5 >= 0) {
                        var$2 = var$2.data;
                        if (var$5 < (var$2.length / 2 | 0)) {
                            $ch = var$4 + var$2[(var$5 * 2 | 0) + 1 | 0] | 0;
                            break d;
                        }
                    }
                    $ch = 0;
                }
            }
        }
    }
    var$5 = $ch <= 56319 && $ch >= 55296 ? 1 : 0;
    if (!(!var$5 && !($ch <= 57343 && $ch >= 56320 ? 1 : 0))) {
        if ($this.$invertedSurrogates)
            ju_BitSet_clear($this.$lowHighSurrogates, $ch - 55296 | 0);
        else
            ju_BitSet_set($this.$lowHighSurrogates, $ch - 55296 | 0);
    }
    if ($this.$inverted)
        ju_BitSet_clear($this.$bits, $ch);
    else
        ju_BitSet_set($this.$bits, $ch);
    if (!$this.$mayContainSupplCodepoints && ($ch >= 65536 && $ch <= 1114111 ? 1 : 0))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_CharClass_add1($this, $cc) {
    var $curAlt, $nb, var$4;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            ju_BitSet_andNot($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        else
            ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        ju_BitSet_or($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$alt0)
                ju_BitSet_andNot($this.$bits, $cc.$getBits());
            else
                ju_BitSet_and($this.$bits, $cc.$getBits());
        } else if (!$cc.$alt0)
            ju_BitSet_or($this.$bits, $cc.$getBits());
        else {
            ju_BitSet_xor($this.$bits, $cc.$getBits());
            ju_BitSet_and($this.$bits, $cc.$getBits());
            $this.$alt0 = $this.$alt0 ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$4 = new jur_CharClass$5;
                var$4.$this$023 = $this;
                var$4.$val$curAlt = $curAlt;
                var$4.$val$nb = $nb;
                var$4.$val$cc = $cc;
                jur_AbstractCharClass_$callClinit();
                $cc = new ju_BitSet;
                $cc.$data2 = $rt_createIntArray(64);
                var$4.$lowHighSurrogates = $cc;
                $this.$nonBitSet = var$4;
            } else {
                var$4 = new jur_CharClass$4;
                var$4.$this$024 = $this;
                var$4.$val$curAlt0 = $curAlt;
                var$4.$val$nb0 = $nb;
                var$4.$val$cc0 = $cc;
                jur_AbstractCharClass_$callClinit();
                $cc = new ju_BitSet;
                $cc.$data2 = $rt_createIntArray(64);
                var$4.$lowHighSurrogates = $cc;
                $this.$nonBitSet = var$4;
            }
        } else {
            if ($curAlt && !$this.$inverted && ($this.$bits.$length3 ? 0 : 1)) {
                $nb = new jur_CharClass$1;
                $nb.$this$025 = $this;
                $nb.$val$cc1 = $cc;
                jur_AbstractCharClass_$callClinit();
                $cc = new ju_BitSet;
                $cc.$data2 = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $cc;
                $this.$nonBitSet = $nb;
            } else if (!$curAlt) {
                $nb = new jur_CharClass$3;
                $nb.$this$026 = $this;
                $nb.$val$curAlt1 = $curAlt;
                $nb.$val$cc2 = $cc;
                jur_AbstractCharClass_$callClinit();
                $cc = new ju_BitSet;
                $cc.$data2 = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $cc;
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$2;
                $nb.$this$027 = $this;
                $nb.$val$curAlt2 = $curAlt;
                $nb.$val$cc3 = $cc;
                jur_AbstractCharClass_$callClinit();
                $cc = new ju_BitSet;
                $cc.$data2 = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $cc;
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
    return $this;
}
function jur_CharClass_add0($this, $i, $end) {
    var var$3;
    if ($i > $end) {
        var$3 = new jl_IllegalArgumentException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            $end = $end + 1 | 0;
            while (true) {
                if ($i >= $end)
                    break a;
                jur_CharClass_add($this, $i);
                $i = $i + 1 | 0;
            }
        }
        if ($this.$inverted)
            ju_BitSet_clear0($this.$bits, $i, $end + 1 | 0);
        else
            ju_BitSet_set0($this.$bits, $i, $end + 1 | 0);
    }
    return $this;
}
function jur_CharClass_union($this, $clazz) {
    var $curAlt, var$3, $nb, var$5;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_or($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        else
            ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    } else if ($curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        $this.$altSurrogates = 1;
    }
    a: {
        if (!$this.$hideBits) {
            var$3 = $clazz.$hideBits;
            if ((!var$3 ? $clazz.$bits : null) !== null) {
                $curAlt = $this.$alt0;
                if (!($curAlt ^ $clazz.$alt0)) {
                    if (!$curAlt) {
                        ju_BitSet_or($this.$bits, !var$3 ? $clazz.$bits : null);
                        break a;
                    }
                    ju_BitSet_and($this.$bits, !var$3 ? $clazz.$bits : null);
                    break a;
                }
                if ($curAlt) {
                    ju_BitSet_andNot($this.$bits, !var$3 ? $clazz.$bits : null);
                    break a;
                }
                ju_BitSet_xor($this.$bits, !var$3 ? $clazz.$bits : null);
                ju_BitSet_and($this.$bits, !$clazz.$hideBits ? $clazz.$bits : null);
                $this.$alt0 = 1;
                break a;
            }
        }
        $curAlt = $this.$alt0;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$5 = new jur_CharClass$11;
                var$5.$this$028 = $this;
                var$5.$val$curAlt3 = $curAlt;
                var$5.$val$nb1 = $nb;
                var$5.$val$clazz = $clazz;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                var$5.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$5;
            } else {
                var$5 = new jur_CharClass$10;
                var$5.$this$029 = $this;
                var$5.$val$curAlt4 = $curAlt;
                var$5.$val$nb2 = $nb;
                var$5.$val$clazz0 = $clazz;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                var$5.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$5;
            }
        } else {
            if (!$this.$inverted && ($this.$bits.$length3 ? 0 : 1)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$7;
                    $nb.$this$030 = $this;
                    $nb.$val$clazz1 = $clazz;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$6;
                    $nb.$this$031 = $this;
                    $nb.$val$clazz2 = $clazz;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$9;
                $nb.$this$032 = $this;
                $nb.$val$clazz3 = $clazz;
                $nb.$val$curAlt5 = $curAlt;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$8;
                $nb.$this$033 = $this;
                $nb.$val$clazz4 = $clazz;
                $nb.$val$curAlt6 = $curAlt;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_intersection($this, $clazz) {
    var $curAlt, var$3, $nb, var$5;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        else
            ju_BitSet_or($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    } else if (!$curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        $this.$altSurrogates = 0;
    }
    a: {
        if (!$this.$hideBits) {
            var$3 = $clazz.$hideBits;
            if ((!var$3 ? $clazz.$bits : null) !== null) {
                $curAlt = $this.$alt0;
                if (!($curAlt ^ $clazz.$alt0)) {
                    if (!$curAlt) {
                        ju_BitSet_and($this.$bits, !var$3 ? $clazz.$bits : null);
                        break a;
                    }
                    ju_BitSet_or($this.$bits, !var$3 ? $clazz.$bits : null);
                    break a;
                }
                if (!$curAlt) {
                    ju_BitSet_andNot($this.$bits, !var$3 ? $clazz.$bits : null);
                    break a;
                }
                ju_BitSet_xor($this.$bits, !var$3 ? $clazz.$bits : null);
                ju_BitSet_and($this.$bits, !$clazz.$hideBits ? $clazz.$bits : null);
                $this.$alt0 = 0;
                break a;
            }
        }
        $curAlt = $this.$alt0;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$5 = new jur_CharClass$17;
                var$5.$this$034 = $this;
                var$5.$val$curAlt7 = $curAlt;
                var$5.$val$nb3 = $nb;
                var$5.$val$clazz5 = $clazz;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                var$5.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$5;
            } else {
                var$5 = new jur_CharClass$16;
                var$5.$this$035 = $this;
                var$5.$val$curAlt8 = $curAlt;
                var$5.$val$nb4 = $nb;
                var$5.$val$clazz6 = $clazz;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                var$5.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$5;
            }
        } else {
            if (!$this.$inverted && ($this.$bits.$length3 ? 0 : 1)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$13;
                    $nb.$this$036 = $this;
                    $nb.$val$clazz7 = $clazz;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$12;
                    $nb.$this$037 = $this;
                    $nb.$val$clazz8 = $clazz;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$15;
                $nb.$this$038 = $this;
                $nb.$val$clazz9 = $clazz;
                $nb.$val$curAlt9 = $curAlt;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$14;
                $nb.$this$039 = $this;
                $nb.$val$clazz10 = $clazz;
                $nb.$val$curAlt10 = $curAlt;
                jur_AbstractCharClass_$callClinit();
                $clazz = new ju_BitSet;
                $clazz.$data2 = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_contains($this, $ch) {
    var var$2, var$3, var$4, var$5;
    var$2 = $this.$nonBitSet;
    if (var$2 !== null)
        return $this.$alt0 ^ var$2.$contains1($ch);
    var$3 = $this.$alt0;
    var$2 = $this.$bits;
    var$4 = $ch / 32 | 0;
    var$5 = var$2.$data2.data;
    return var$3 ^ (var$4 < var$5.length && var$5[var$4] & 1 << ($ch % 32 | 0) ? 1 : 0);
}
function jur_CharClass_getBits($this) {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
}
function jur_CharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_CharClass_getInstance($this) {
    var $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = !$this.$hideBits ? $this.$bits : null;
    $res = new jur_CharClass$18;
    $res.$this$040 = $this;
    $res.$val$bs = $bs;
    jur_AbstractCharClass_$callClinit();
    $bs = new ju_BitSet;
    $bs.$data2 = $rt_createIntArray(64);
    $res.$lowHighSurrogates = $bs;
    return jur_AbstractCharClass_setNegative($res, $this.$alt0);
}
function jur_CharClass_toString($this) {
    var $temp, $i, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $temp = new jl_StringBuilder;
    $temp.$buffer = $rt_createCharArray(16);
    $i = ju_BitSet_nextSetBit($this.$bits, 0);
    while ($i >= 0) {
        if ($i < 65536) {
            var$3 = $rt_createCharArray(1);
            var$3.data[0] = $i & 65535;
        } else
            var$3 = $rt_createCharArrayFromData([(55296 | ($i - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $i & 1023) & 65535]);
        var$4 = var$3.data;
        var$5 = 0;
        var$6 = var$4.length;
        var$7 = $temp.$length;
        jl_AbstractStringBuilder_insertSpace($temp, var$7, var$7 + var$6 | 0);
        var$6 = var$6 + var$5 | 0;
        while (var$5 < var$6) {
            var$3 = $temp.$buffer.data;
            var$8 = var$7 + 1 | 0;
            var$9 = var$5 + 1 | 0;
            var$3[var$7] = var$4[var$5];
            var$7 = var$8;
            var$5 = var$9;
        }
        var$6 = $temp.$length;
        jl_AbstractStringBuilder_insertSpace($temp, var$6, var$6 + 1 | 0);
        $temp.$buffer.data[var$6] = 124;
        $i = ju_BitSet_nextSetBit($this.$bits, $i + 1 | 0);
    }
    var$7 = $temp.$length;
    if (var$7 > 0)
        jl_AbstractStringBuilder_deleteCharAt($temp, var$7 - 1 | 0);
    var$10 = new jl_String;
    var$3 = $temp.$buffer;
    var$7 = $temp.$length;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray(var$7);
    var$11 = var$4.data;
    var$10.$characters = var$4;
    var$9 = 0;
    while (var$9 < var$7) {
        var$11[var$9] = var$3.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$10;
}
function jur_CharClass_hasUCI($this) {
    return $this.$hasUCI0;
}
function ju_MissingResourceException() {
    var a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key0 = null;
}
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
function jur_QuantifierSet_getInnerSet($this) {
    return $this.$innerSet;
}
function jur_QuantifierSet_first($this, $set) {
    return !$this.$innerSet.$first0($set) && !$this.$next3.$first0($set) ? 0 : 1;
}
function jur_QuantifierSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_QuantifierSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next3;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next3.$isSecondPassVisited = 1;
            $this.$next3 = $set;
        }
        $this.$next3.$processSecondPass();
    }
    $set = $this.$innerSet;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$innerSet = $set.$next3;
    }
}
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
function jur_LeafQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
}
function jur_LeafQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
}
function jur_LeafQuantifierSet_getName($this) {
    return $rt_s(188);
}
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier0 = null;
}
function jur_CompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    var var$5, var$6;
    var$5 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$5 + 1 | 0;
    var$6 = new jl_AbstractStringBuilder;
    var$6.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
    $this.$quantifier0 = $quant;
}
function jur_CompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min1;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_CompositeQuantifierSet_getName($this) {
    return jur_Quantifier_toString($this.$quantifier0);
}
var jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
function jur_GroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_GroupQuantifierSet();
    jur_GroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
}
function jur_GroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_GroupQuantifierSet_getName($this) {
    return $rt_s(189);
}
var jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_AltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltQuantifierSet();
    jur_AltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
}
function jur_AltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
    return $shift;
}
function jur_AltQuantifierSet_setNext($this, $next) {
    $this.$next3 = $next;
    $this.$innerSet.$setNext($next);
}
var jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_UnifiedQuantifierSet__init_(var_0) {
    var var_1 = new jur_UnifiedQuantifierSet();
    jur_UnifiedQuantifierSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UnifiedQuantifierSet__init_0($this, $quant) {
    var var$2, var$3, var$4, var$5;
    var$2 = $quant.$innerSet;
    var$3 = $quant.$next3;
    var$4 = $quant.$type3;
    var$5 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$5 + 1 | 0;
    $quant = new jl_AbstractStringBuilder;
    $quant.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0($quant, $quant.$length, var$5, 10)).$toString();
    $this.$next3 = var$3;
    $this.$innerSet = var$2;
    $this.$type3 = var$4;
    $this.$leaf = var$2;
    var$2.$setNext($this);
}
function jur_UnifiedQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0 && $this.$leaf.$accepts($stringIndex, $testString) > 0) {
        $stringIndex = $stringIndex + $this.$leaf.$charCount0() | 0;
    }
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_UnifiedQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next3.$find0($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount0() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount0() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
}
function jur_AbstractCharClass$LazyCharClass() {
    var a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
function jur_AbstractCharClass$LazyCharClass_getValue($this, $negative) {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = jur_AbstractCharClass_setNegative($this.$computeValue(), 1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
}
function jur_Quantifier() {
    var a = this; jur_SpecialToken.call(a);
    a.$min1 = 0;
    a.$max2 = 0;
}
function jur_Quantifier_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$min1;
    var$2 = $this.$max2;
    if (var$2 == 2147483647)
        var$3 = $rt_s(42);
    else {
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        var$3 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    }
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$2 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$2, var$2 + 1 | 0);
    var$4.$buffer.data[var$2] = 123;
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$1, 10);
    var$1 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$1, var$1 + 1 | 0);
    var$4.$buffer.data[var$1] = 44;
    var$5 = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
    var$1 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$1, var$1 + 1 | 0);
    var$6 = var$4.$buffer.data;
    var$6[var$1] = 125;
    var$3 = new jl_String;
    var$1 = var$4.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$1);
    var$8 = var$7.data;
    var$3.$characters = var$7;
    var$2 = 0;
    while (var$2 < var$1) {
        var$8[var$2] = var$6[var$2 + 0 | 0];
        var$2 = var$2 + 1 | 0;
    }
    return var$3;
}
var jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet);
function jur_FSet$PossessiveFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_FSet$PossessiveFSet_getName($this) {
    return $rt_s(190);
}
function jur_FSet$PossessiveFSet_hasConsumed($this, $mr) {
    return 0;
}
function ju_BitSet() {
    var a = this; jl_Object.call(a);
    a.$data2 = null;
    a.$length3 = 0;
}
function ju_BitSet_set($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length3) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length3 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data2.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
}
function ju_BitSet_set0($this, $fromIndex, $toIndex) {
    var $fromDataIndex, var$4, $toDataIndex, var$6, var$7, $i;
    $fromDataIndex = $rt_compare($fromIndex, $toIndex);
    if ($fromDataIndex > 0) {
        var$4 = new jl_IndexOutOfBoundsException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if (!$fromDataIndex)
        return;
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($toIndex > $this.$length3) {
        ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
        $this.$length3 = $toIndex;
    }
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data2.data;
        $toDataIndex = var$6[$fromDataIndex];
        var$7 = (-1) << ($fromIndex % 32 | 0);
        $fromIndex = $toIndex % 32 | 0;
        var$6[$fromDataIndex] = $toDataIndex | var$7 & (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
    } else {
        var$6 = $this.$data2.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] | (-1) << ($fromIndex % 32 | 0);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            var$6[$i] = (-1);
            $i = $i + 1 | 0;
        }
        if ($toIndex & 31) {
            $i = var$6[$toDataIndex];
            $fromIndex = $toIndex % 32 | 0;
            var$6[$toDataIndex] = $i | (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
        }
    }
}
function ju_BitSet_clear($this, $bitIndex) {
    var $index, var$3, var$4, var$5;
    $index = $bitIndex / 32 | 0;
    var$3 = $this.$data2.data;
    if ($index < var$3.length) {
        var$4 = var$3[$index];
        var$5 = ($bitIndex % 32 | 0) & 31;
        var$3[$index] = var$4 & ((-2) << var$5 | ((-2) >>> (32 - var$5 | 0) | 0));
        if ($bitIndex == ($this.$length3 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
}
function ju_BitSet_clear0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i, var$8;
    if ($fromIndex > $toIndex) {
        var$3 = new jl_IndexOutOfBoundsException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    $fromDataIndex = $this.$length3;
    if ($fromIndex >= $fromDataIndex)
        return;
    if ($fromDataIndex < $toIndex)
        $toIndex = $fromDataIndex;
    if ($fromIndex == $toIndex)
        return;
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data2.data;
        $i = var$6[$fromDataIndex];
        $fromIndex = $fromIndex % 32 | 0;
        var$6[$fromDataIndex] = $i & ((!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0) | (-1) << ($toIndex % 32 | 0));
    } else {
        var$6 = $this.$data2.data;
        var$8 = var$6[$fromDataIndex];
        $fromIndex = $fromIndex % 32 | 0;
        var$6[$fromDataIndex] = var$8 & (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            var$6[$i] = 0;
            $i = $i + 1 | 0;
        }
        if ($toIndex & 31)
            var$6[$toDataIndex] = var$6[$toDataIndex] & (-1) << ($toIndex % 32 | 0);
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_nextSetBit($this, $fromIndex) {
    var $top, $index, var$4, $i;
    $top = $this.$length3;
    if ($fromIndex >= $top)
        return (-1);
    $index = $fromIndex / 32 | 0;
    var$4 = $this.$data2.data;
    $i = var$4[$index] >>> ($fromIndex % 32 | 0) | 0;
    if ($i)
        return jl_Integer_numberOfTrailingZeros($i) + $fromIndex | 0;
    $top = ($top + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if (var$4[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$4[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function ju_BitSet_nextClearBit($this, $fromIndex) {
    var var$2, $index, var$4, $top, $i;
    var$2 = $this.$length3;
    if ($fromIndex >= var$2)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    var$4 = $this.$data2.data;
    $top = (var$4[$index] ^ (-1)) >>> ($fromIndex % 32 | 0) | 0;
    if ($top)
        return jl_Integer_numberOfTrailingZeros($top) + $fromIndex | 0;
    $top = (var$2 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if (var$4[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$4[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return var$2;
}
function ju_BitSet_ensureCapacity($this, $capacity) {
    var var$2, var$3, $newArrayLength, $newArrayLength_0, var$6, var$7;
    var$2 = $this.$data2.data;
    var$3 = var$2.length;
    if (var$3 >= $capacity)
        return;
    $newArrayLength = ($capacity * 3 | 0) / 2 | 0;
    $newArrayLength_0 = (var$3 * 2 | 0) + 1 | 0;
    if ($newArrayLength > $newArrayLength_0)
        $newArrayLength_0 = $newArrayLength;
    var$6 = $rt_createIntArray($newArrayLength_0);
    if ($newArrayLength_0 < var$3)
        var$3 = $newArrayLength_0;
    var$7 = var$6.data;
    $capacity = 0;
    while ($capacity < var$3) {
        var$7[$capacity] = var$2[$capacity];
        $capacity = $capacity + 1 | 0;
    }
    $this.$data2 = var$6;
}
function ju_BitSet_recalculateLength($this) {
    var $top, $i, $sz;
    $top = ($this.$length3 + 31 | 0) / 32 | 0;
    $this.$length3 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data2.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length3 = $this.$length3 - 32 | 0;
        }
        $this.$length3 = $this.$length3 - $sz | 0;
    }
}
function ju_BitSet_intersects($this, $set) {
    var var$2, $sz, var$4, $sz_0, $i;
    var$2 = $this.$data2.data;
    $sz = var$2.length;
    var$4 = $set.$data2.data;
    $sz_0 = var$4.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        if (var$2[$i] & var$4[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function ju_BitSet_and($this, $set) {
    var var$2, var$3, var$4, $sz, $i, var$7, var$8;
    var$2 = $this.$data2.data;
    var$3 = var$2.length;
    var$4 = $set.$data2.data;
    $sz = var$4.length;
    if (var$3 < $sz)
        $sz = var$3;
    $i = 0;
    while ($i < $sz) {
        var$2[$i] = var$2[$i] & var$4[$i];
        $i = $i + 1 | 0;
    }
    while ($sz < var$3) {
        var$2[$sz] = 0;
        $sz = $sz + 1 | 0;
    }
    var$7 = $this.$length3;
    var$8 = $set.$length3;
    if (var$7 < var$8)
        var$8 = var$7;
    $this.$length3 = var$8;
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_andNot($this, $set) {
    var var$2, $sz, var$4, $sz_0, $i;
    var$2 = $this.$data2.data;
    $sz = var$2.length;
    var$4 = $set.$data2.data;
    $sz_0 = var$4.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        var$2[$i] = var$2[$i] & (var$4[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_or($this, $set) {
    var $sz, $sz_0, var$4, var$5, $i;
    $sz = $this.$length3;
    $sz_0 = $set.$length3;
    if ($sz > $sz_0)
        $sz_0 = $sz;
    $this.$length3 = $sz_0;
    ju_BitSet_ensureCapacity($this, ($sz_0 + 31 | 0) / 32 | 0);
    var$4 = $this.$data2.data;
    $sz = var$4.length;
    var$5 = $set.$data2.data;
    $sz_0 = var$5.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        var$4[$i] = var$4[$i] | var$5[$i];
        $i = $i + 1 | 0;
    }
}
function ju_BitSet_xor($this, $set) {
    var $sz, $i, var$4, var$5, $sz_0;
    $sz = $this.$length3;
    $i = $set.$length3;
    if ($sz > $i)
        $i = $sz;
    $this.$length3 = $i;
    ju_BitSet_ensureCapacity($this, ($i + 31 | 0) / 32 | 0);
    var$4 = $this.$data2.data;
    $sz = var$4.length;
    var$5 = $set.$data2.data;
    $sz_0 = var$5.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        var$4[$i] = var$4[$i] ^ var$5[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function jur_LowHighSurrogateRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt = 0;
}
function jur_LowHighSurrogateRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$leftBound0;
    $strLength = $matchResult.$rightBound0;
    var$6 = $stringIndex + 1 | 0;
    $strLength = $rt_compare(var$6, $strLength);
    if ($strLength > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    if ($stringIndex >= 0) {
        var$7 = $testString.$characters.data;
        if ($stringIndex < var$7.length) {
            $ch = var$7[$stringIndex];
            if (!$this.$surrChars.$contains1($ch))
                return (-1);
            $low = $ch & 64512;
            $high = $low != 55296 ? 0 : 1;
            a: {
                if ($high) {
                    if ($strLength >= 0)
                        break a;
                    if (var$6 >= 0) {
                        var$7 = $testString.$characters.data;
                        if (var$6 < var$7.length) {
                            if ((var$7[var$6] & 64512) != 56320 ? 0 : 1)
                                return (-1);
                            break a;
                        }
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
                if (($low != 56320 ? 0 : 1) && $stringIndex > $startStr) {
                    $high = $stringIndex - 1 | 0;
                    if ($high >= 0) {
                        var$7 = $testString.$characters.data;
                        if ($high < var$7.length) {
                            if (!((var$7[$high] & 64512) != 55296 ? 0 : 1))
                                break a;
                            return (-1);
                        }
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            return $this.$next3.$matches(var$6, $testString, $matchResult);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_LowHighSurrogateRangeSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = !$this.$alt ? $rt_s(191) : $rt_s(192);
    var$2 = $this.$surrChars.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(193));
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$1 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jur_CompositeRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
function jur_CompositeRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = jur_LowHighSurrogateRangeSet_matches($this.$withSurrogates, $stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
}
function jur_CompositeRangeSet_setNext($this, $next) {
    $this.$next3 = $next;
    $this.$withSurrogates.$next3 = $next;
    $this.$withoutSurrogates.$setNext($next);
}
function jur_CompositeRangeSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$withoutSurrogates;
    var$2 = $this.$withSurrogates;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(194));
    var$4 = var$3.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    else {
        var$5 = var$1.$index1;
        var$1 = var$1.$getName();
        var$6 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_0(var$6);
        jl_AbstractStringBuilder_append2(var$6, 60);
        jl_AbstractStringBuilder_append0(var$6, var$5);
        jl_AbstractStringBuilder_append2(var$6, 58);
        jl_AbstractStringBuilder_append0(var$6, var$1);
        jl_AbstractStringBuilder_append2(var$6, 62);
        var$1 = jl_AbstractStringBuilder_toString(var$6);
    }
    jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(195));
    var$4 = var$3.$length;
    if (var$2 === null)
        var$1 = $rt_s(1);
    else {
        var$1 = var$2.$index1;
        var$5 = !var$2.$alt ? $rt_s(191) : $rt_s(192);
        var$2 = var$2.$surrChars.$toString();
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(193)), var$5), var$2);
        var$5 = jl_StringBuilder_toString(var$6);
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_0(var$2);
        jl_AbstractStringBuilder_append2(var$2, 60);
        jl_AbstractStringBuilder_append0(var$2, var$1);
        jl_AbstractStringBuilder_append2(var$2, 58);
        jl_AbstractStringBuilder_append0(var$2, var$5);
        jl_AbstractStringBuilder_append2(var$2, 62);
        var$1 = jl_AbstractStringBuilder_toString(var$2);
    }
    jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
    var$1 = new jl_String;
    var$7 = var$3.$buffer;
    var$8 = var$3.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$1.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    return var$1;
}
function jur_CompositeRangeSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CompositeRangeSet_first($this, $set) {
    return 1;
}
function jur_SupplRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$chars2 = null;
    a.$alt3 = 0;
}
function jur_SupplRangeSet__init_(var_0) {
    var var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplRangeSet__init_0($this, $cc) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$chars2 = $cc.$getInstance2();
    $this.$alt3 = $cc.$alt0;
}
function jur_SupplRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $low, var$6, $high, $offset;
    a: {
        $strLength = $matchResult.$rightBound0;
        if ($stringIndex < $strLength) {
            $low = $stringIndex + 1 | 0;
            if ($stringIndex >= 0) {
                var$6 = $testString.$characters.data;
                if ($stringIndex < var$6.length) {
                    $high = var$6[$stringIndex];
                    if ($this.$contains1($high)) {
                        $offset = $this.$next3.$matches($low, $testString, $matchResult);
                        if ($offset > 0)
                            return $offset;
                    }
                    if ($low >= $strLength)
                        break a;
                    $strLength = $low + 1 | 0;
                    if ($low >= 0) {
                        var$6 = $testString.$characters.data;
                        if ($low < var$6.length) {
                            $low = var$6[$low];
                            $stringIndex = ($high & 64512) != 55296 ? 0 : 1;
                            if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                                break a;
                            if (!$this.$contains1((($high & 1023) << 10 | $low & 1023) + 65536 | 0))
                                break a;
                            else
                                return $this.$next3.$matches($strLength, $testString, $matchResult);
                        }
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    return (-1);
}
function jur_SupplRangeSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = !$this.$alt3 ? $rt_s(191) : $rt_s(192);
    var$2 = $this.$chars2.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(193));
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$1 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jur_SupplRangeSet_contains($this, $ch) {
    return $this.$chars2.$contains1($ch);
}
function jur_SupplRangeSet_first($this, $set) {
    var var$2, var$3, var$4;
    if ($set instanceof jur_SupplCharSet) {
        var$2 = $this.$chars2;
        var$3 = $set.$ch4;
        jur_AbstractCharClass_$callClinit();
        return var$2.$contains1(var$3);
    }
    if ($set instanceof jur_CharSet) {
        var$2 = $this.$chars2;
        var$3 = $set.$ch0;
        jur_AbstractCharClass_$callClinit();
        return var$2.$contains1(var$3);
    }
    if ($set instanceof jur_SupplRangeSet) {
        var$2 = $this.$chars2;
        $set = $set.$chars2;
        jur_AbstractCharClass_$callClinit();
        return var$2.$getBits() !== null && $set.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), $set.$getBits()) : 1;
    }
    if (!($set instanceof jur_RangeSet))
        return 1;
    var$2 = $this.$chars2;
    var$4 = $set.$chars0;
    jur_AbstractCharClass_$callClinit();
    return var$2.$getBits() !== null && var$4.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), var$4.$getBits()) : 1;
}
function jur_SupplRangeSet_getChars($this) {
    return $this.$chars2;
}
function jur_SupplRangeSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_SupplRangeSet_hasConsumed($this, $mr) {
    return 1;
}
var jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet);
function jur_UCISupplRangeSet_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$chars2;
    if (jl_Character_upperCaseMapping === null) {
        if (jl_Character_$$metadata$$1 === null)
            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
    }
    a: {
        var$3 = jl_Character_upperCaseMapping;
        var$4 = jl_Character_binarySearchTable(var$3, $ch);
        if (var$4 >= 0) {
            var$3 = var$3.data;
            if (var$4 < (var$3.length / 2 | 0)) {
                var$5 = $ch + var$3[(var$4 * 2 | 0) + 1 | 0] | 0;
                break a;
            }
        }
        var$5 = 0;
    }
    if (jl_Character_lowerCaseMapping === null) {
        if (jl_Character_$$metadata$$0 === null)
            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
    }
    b: {
        var$3 = jl_Character_lowerCaseMapping;
        var$6 = jl_Character_binarySearchTable(var$3, var$5);
        if (var$6 >= 0) {
            var$3 = var$3.data;
            if (var$6 < (var$3.length / 2 | 0)) {
                $ch = var$5 + var$3[(var$6 * 2 | 0) + 1 | 0] | 0;
                break b;
            }
        }
        $ch = 0;
    }
    return var$2.$contains1($ch);
}
function jur_UCISupplRangeSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = !$this.$alt3 ? $rt_s(191) : $rt_s(192);
    var$2 = $this.$chars2.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(196));
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$1 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jur_UCIRangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt2 = 0;
}
function jur_UCIRangeSet__init_(var_0) {
    var var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCIRangeSet__init_0($this, $cc) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$charCount = 1;
    $this.$chars1 = $cc.$getInstance2();
    $this.$alt2 = $cc.$alt0;
}
function jur_UCIRangeSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4, var$5, var$6;
    var$3 = $this.$chars1;
    if ($strIndex >= 0) {
        var$4 = $testString.$characters.data;
        if ($strIndex < var$4.length) {
            var$5 = var$4[$strIndex];
            if (jl_Character_upperCaseMapping === null) {
                if (jl_Character_$$metadata$$1 === null)
                    jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
            }
            a: {
                var$4 = jl_Character_upperCaseMapping;
                var$6 = jl_Character_binarySearchTable(var$4, var$5);
                if (var$6 >= 0) {
                    var$4 = var$4.data;
                    if (var$6 < (var$4.length / 2 | 0)) {
                        $strIndex = var$5 + var$4[(var$6 * 2 | 0) + 1 | 0] | 0;
                        break a;
                    }
                }
                $strIndex = 0;
            }
            var$5 = $strIndex & 65535;
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
            }
            b: {
                var$4 = jl_Character_lowerCaseMapping;
                var$6 = jl_Character_binarySearchTable(var$4, var$5);
                if (var$6 >= 0) {
                    var$4 = var$4.data;
                    if (var$6 < (var$4.length / 2 | 0)) {
                        $strIndex = var$5 + var$4[(var$6 * 2 | 0) + 1 | 0] | 0;
                        break b;
                    }
                }
                $strIndex = 0;
            }
            return !var$3.$contains1($strIndex & 65535) ? (-1) : 1;
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_UCIRangeSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = !$this.$alt2 ? $rt_s(191) : $rt_s(192);
    var$2 = $this.$chars1.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(196));
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$1 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jur_RangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars0 = null;
    a.$alt1 = 0;
}
function jur_RangeSet__init_(var_0) {
    var var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_RangeSet__init_0($this, $cc) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$charCount = 1;
    $this.$chars0 = $cc.$getInstance2();
    $this.$alt1 = $cc.$alt0;
}
function jur_RangeSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4;
    var$3 = $this.$chars0;
    if ($strIndex >= 0) {
        var$4 = $testString.$characters.data;
        if ($strIndex < var$4.length)
            return !var$3.$contains1(var$4[$strIndex]) ? (-1) : 1;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_RangeSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = !$this.$alt1 ? $rt_s(191) : $rt_s(192);
    var$2 = $this.$chars0.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(193));
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$1 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$1.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$1;
}
function jur_RangeSet_first($this, $set) {
    var var$2, var$3, var$4;
    if ($set instanceof jur_CharSet) {
        var$2 = $this.$chars0;
        var$3 = $set.$ch0;
        jur_AbstractCharClass_$callClinit();
        return var$2.$contains1(var$3);
    }
    if ($set instanceof jur_RangeSet) {
        var$2 = $this.$chars0;
        $set = $set.$chars0;
        jur_AbstractCharClass_$callClinit();
        return var$2.$getBits() !== null && $set.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), $set.$getBits()) : 1;
    }
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    var$2 = $this.$chars0;
    var$4 = $set.$chars2;
    jur_AbstractCharClass_$callClinit();
    return var$2.$getBits() !== null && var$4.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), var$4.$getBits()) : 1;
}
function jur_HangulDecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$decomposedChar = null;
    a.$decomposedCharUTF16 = null;
    a.$decomposedCharLength = 0;
}
function jur_HangulDecomposedCharSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_HangulDecomposedCharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($this.$decomposedCharUTF16 === null) {
        var$1 = new jl_String;
        var$2 = $this.$decomposedChar.data;
        jl_String_$callClinit();
        var$3 = var$2.length;
        var$4 = $rt_createCharArray(var$3);
        var$5 = var$4.data;
        var$1.$characters = var$4;
        var$6 = 0;
        while (var$6 < var$3) {
            var$5[var$6] = var$2[var$6];
            var$6 = var$6 + 1 | 0;
        }
        $this.$decomposedCharUTF16 = var$1;
    }
    var$7 = $this.$decomposedCharUTF16;
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(197));
    var$3 = var$1.$length;
    if (var$7 === null)
        var$7 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$1, var$3, var$7);
    var$8 = new jl_String;
    var$2 = var$1.$buffer;
    var$6 = var$1.$length;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray(var$6);
    var$5 = var$4.data;
    var$8.$characters = var$4;
    var$9 = 0;
    while (var$9 < var$6) {
        var$5[var$9] = var$2.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$8;
}
function jur_HangulDecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, $decompSyllable, $vIndex, $tIndex, var$8, $decompCurSymb, $curSymb, $i, $lIndex;
    $rightBound = $matchResult.$rightBound0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$8 = $strIndex + 1 | 0;
    if ($strIndex >= 0) {
        $decompCurSymb = $testString.$characters.data;
        if ($strIndex < $decompCurSymb.length) {
            $curSymb = $decompCurSymb[$strIndex];
            $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
            if ($decompCurSymb !== null) {
                $decompCurSymb = $decompCurSymb.data;
                $i = 0;
                $strIndex = $decompCurSymb.length;
                $curSymb = $this.$decomposedCharLength;
                if ($strIndex != $curSymb)
                    return (-1);
                while (true) {
                    if ($i >= $curSymb)
                        return $this.$next3.$matches(var$8, $testString, $matchResult);
                    if ($decompCurSymb[$i] != $this.$decomposedChar.data[$i])
                        break;
                    $i = $i + 1 | 0;
                }
                return (-1);
            }
            $decompSyllable = $decompSyllable.data;
            $decompSyllable[0] = $curSymb;
            $lIndex = $curSymb - 4352 | 0;
            if ($lIndex >= 0 && $lIndex < 19) {
                a: {
                    if (var$8 < $rightBound) {
                        if (var$8 >= 0) {
                            $decompCurSymb = $testString.$characters.data;
                            if (var$8 < $decompCurSymb.length) {
                                $curSymb = $decompCurSymb[var$8];
                                $vIndex = $curSymb - 4449 | 0;
                                break a;
                            }
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                if ($vIndex >= 0 && $vIndex < 21) {
                    b: {
                        $strIndex = var$8 + 1 | 0;
                        $decompSyllable[1] = $curSymb;
                        if ($strIndex < $rightBound) {
                            if ($strIndex >= 0) {
                                $decompCurSymb = $testString.$characters.data;
                                if ($strIndex < $decompCurSymb.length) {
                                    $curSymb = $decompCurSymb[$strIndex];
                                    $tIndex = $curSymb - 4519 | 0;
                                    break b;
                                }
                            }
                            $testString = new jl_StringIndexOutOfBoundsException;
                            $testString.$suppressionEnabled = 1;
                            $testString.$writableStackTrace = 1;
                            $rt_throw($testString);
                        }
                    }
                    if ($tIndex >= 0 && $tIndex < 28) {
                        c: {
                            $strIndex = $strIndex + 1 | 0;
                            $decompSyllable[2] = $curSymb;
                            if ($this.$decomposedCharLength == 3) {
                                $curSymb = $decompSyllable[0];
                                $decompCurSymb = $this.$decomposedChar.data;
                                if ($curSymb == $decompCurSymb[0] && $decompSyllable[1] == $decompCurSymb[1] && $decompSyllable[2] == $decompCurSymb[2]) {
                                    $strIndex = $this.$next3.$matches($strIndex, $testString, $matchResult);
                                    break c;
                                }
                            }
                            $strIndex = (-1);
                        }
                        return $strIndex;
                    }
                    d: {
                        if ($this.$decomposedCharLength == 2) {
                            $curSymb = $decompSyllable[0];
                            $decompCurSymb = $this.$decomposedChar.data;
                            if ($curSymb == $decompCurSymb[0] && $decompSyllable[1] == $decompCurSymb[1]) {
                                $strIndex = $this.$next3.$matches($strIndex, $testString, $matchResult);
                                break d;
                            }
                        }
                        $strIndex = (-1);
                    }
                    return $strIndex;
                }
                return (-1);
            }
            return (-1);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_HangulDecomposedCharSet_first($this, $set) {
    var var$2, var$3, var$4, var$5, var$6, var$7;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            $set = $set;
            if ($set.$decomposedCharUTF16 === null) {
                var$2 = new jl_String;
                var$3 = $set.$decomposedChar.data;
                jl_String_$callClinit();
                var$4 = var$3.length;
                var$5 = $rt_createCharArray(var$4);
                var$6 = var$5.data;
                var$2.$characters = var$5;
                var$7 = 0;
                while (var$7 < var$4) {
                    var$6[var$7] = var$3[var$7];
                    var$7 = var$7 + 1 | 0;
                }
                $set.$decomposedCharUTF16 = var$2;
            }
            var$2 = $set.$decomposedCharUTF16;
            if ($this.$decomposedCharUTF16 === null) {
                $set = new jl_String;
                var$3 = $this.$decomposedChar.data;
                jl_String_$callClinit();
                var$4 = var$3.length;
                var$5 = $rt_createCharArray(var$4);
                var$6 = var$5.data;
                $set.$characters = var$5;
                var$7 = 0;
                while (var$7 < var$4) {
                    var$6[var$7] = var$3[var$7];
                    var$7 = var$7 + 1 | 0;
                }
                $this.$decomposedCharUTF16 = $set;
            }
            if (!jl_String_equals(var$2, $this.$decomposedCharUTF16)) {
                var$4 = 0;
                break a;
            }
        }
        var$4 = 1;
    }
    return var$4;
}
function jur_HangulDecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
function jur_CharSet__init_(var_0) {
    var var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CharSet__init_0($this, $ch) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$charCount = 1;
    $this.$ch0 = $ch;
}
function jur_CharSet_charCount($this) {
    return 1;
}
function jur_CharSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4;
    var$3 = $this.$ch0;
    if ($strIndex >= 0) {
        var$4 = $testString.$characters.data;
        if ($strIndex < var$4.length)
            return var$3 != var$4[$strIndex] ? (-1) : 1;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_CharSet_find($this, $strIndex, $testStr, $matchResult) {
    var $strLength, var$5, var$6, var$7, var$8, var$9;
    if ($testStr instanceof jl_String) {
        $strLength = $matchResult.$rightBound0;
        while (true) {
            if ($strIndex >= $strLength)
                return (-1);
            var$5 = jl_String_indexOf($testStr, $this.$ch0, $strIndex);
            if (var$5 < 0)
                return (-1);
            var$6 = $this.$next3;
            $strIndex = var$5 + 1 | 0;
            if (var$6.$matches($strIndex, $testStr, $matchResult) >= 0)
                break;
        }
        return var$5;
    }
    var$7 = $matchResult.$rightBound0;
    a: {
        b: {
            while (true) {
                if ($strIndex > var$7) {
                    $strIndex = (-1);
                    break b;
                }
                var$5 = $strIndex + 1 | 0;
                if (var$5 > $matchResult.$rightBound0) {
                    $matchResult.$hitEnd = 1;
                    var$8 = (-1);
                } else {
                    var$8 = $this.$ch0;
                    if ($strIndex < 0)
                        break a;
                    var$9 = $testStr.$characters.data;
                    if ($strIndex >= var$9.length)
                        break a;
                    var$8 = var$8 != var$9[$strIndex] ? (-1) : 1;
                    var$8 = var$8 < 0 ? (-1) : $this.$next3.$matches($strIndex + var$8 | 0, $testStr, $matchResult);
                }
                if (var$8 >= 0)
                    break;
                $strIndex = var$5;
            }
        }
        return $strIndex;
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0($testStr);
    $rt_throw($testStr);
}
function jur_CharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
    var var$5, var$6;
    if ($testStr instanceof jl_String) {
        a: {
            while (true) {
                if ($lastIndex < $strIndex)
                    return (-1);
                var$5 = jl_String_lastIndexOf($testStr, $this.$ch0, $lastIndex);
                if (var$5 < 0)
                    break a;
                if (var$5 < $strIndex)
                    break a;
                if ($this.$next3.$matches(var$5 + 1 | 0, $testStr, $matchResult) >= 0)
                    break;
                $lastIndex = var$5 + (-1) | 0;
            }
            return var$5;
        }
        return (-1);
    }
    b: {
        c: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break c;
                }
                if (($lastIndex + 1 | 0) > $matchResult.$rightBound0) {
                    $matchResult.$hitEnd = 1;
                    var$5 = (-1);
                } else {
                    var$5 = $this.$ch0;
                    if ($lastIndex < 0)
                        break b;
                    var$6 = $testStr.$characters.data;
                    if ($lastIndex >= var$6.length)
                        break b;
                    var$5 = var$5 != var$6[$lastIndex] ? (-1) : 1;
                    var$5 = var$5 < 0 ? (-1) : $this.$next3.$matches($lastIndex + var$5 | 0, $testStr, $matchResult);
                }
                if (var$5 >= 0)
                    break;
                $lastIndex = $lastIndex + (-1) | 0;
            }
        }
        return $lastIndex;
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0($testStr);
    $rt_throw($testStr);
}
function jur_CharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$ch0;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length;
    jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
    var$4 = var$2.$buffer.data;
    var$4[var$3] = var$1;
    var$5 = new jl_String;
    var$3 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$3);
    var$7 = var$6.data;
    var$5.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$3) {
        var$7[var$8] = var$4[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$5;
}
function jur_CharSet_first($this, $set) {
    var var$2, var$3, var$4, var$5;
    if ($set instanceof jur_CharSet)
        return $set.$ch0 != $this.$ch0 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains1($this.$ch0);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    $set = $set;
    var$2 = $this.$ch0;
    var$3 = $rt_createCharArray(1).data;
    var$3[0] = var$2;
    jl_String_$callClinit();
    var$2 = var$3.length;
    var$4 = $rt_createCharArray(var$2).data;
    var$5 = 0;
    while (var$5 < var$2) {
        var$4[var$5] = var$3[var$5];
        var$5 = var$5 + 1 | 0;
    }
    $set = $set.$chars0;
    if (0 >= var$4.length) {
        $set = new jl_StringIndexOutOfBoundsException;
        $set.$suppressionEnabled = 1;
        $set.$writableStackTrace = 1;
        $rt_throw($set);
    }
    return (!$set.$contains1(var$4[0]) ? (-1) : 1) <= 0 ? 0 : 1;
}
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch1 = 0;
}
function jur_UCICharSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4, var$5, var$6;
    var$3 = $this.$ch1;
    if ($strIndex >= 0) {
        var$4 = $testString.$characters.data;
        if ($strIndex < var$4.length) {
            var$5 = var$4[$strIndex];
            if (jl_Character_upperCaseMapping === null) {
                if (jl_Character_$$metadata$$1 === null)
                    jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
            }
            a: {
                var$4 = jl_Character_upperCaseMapping;
                var$6 = jl_Character_binarySearchTable(var$4, var$5);
                if (var$6 >= 0) {
                    var$4 = var$4.data;
                    if (var$6 < (var$4.length / 2 | 0)) {
                        $strIndex = var$5 + var$4[(var$6 * 2 | 0) + 1 | 0] | 0;
                        break a;
                    }
                }
                $strIndex = 0;
            }
            var$5 = $strIndex & 65535;
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
            }
            b: {
                var$4 = jl_Character_lowerCaseMapping;
                var$6 = jl_Character_binarySearchTable(var$4, var$5);
                if (var$6 >= 0) {
                    var$4 = var$4.data;
                    if (var$6 < (var$4.length / 2 | 0)) {
                        $strIndex = var$5 + var$4[(var$6 * 2 | 0) + 1 | 0] | 0;
                        break b;
                    }
                }
                $strIndex = 0;
            }
            return var$3 != ($strIndex & 65535) ? (-1) : 1;
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_UCICharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$ch1;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(198));
    var$3 = var$2.$length;
    jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
    var$4 = var$2.$buffer.data;
    var$4[var$3] = var$1;
    var$5 = new jl_String;
    var$3 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$3);
    var$7 = var$6.data;
    var$5.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$3) {
        var$7[var$8] = var$4[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$5;
}
function jur_CICharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$ch2 = 0;
    a.$supplement = 0;
}
function jur_CICharSet__init_(var_0) {
    var var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CICharSet__init_0($this, $ch) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$charCount = 1;
    $this.$ch2 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
}
function jur_CICharSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4, var$5;
    var$3 = $this.$ch2;
    if ($strIndex >= 0) {
        var$4 = $testString.$characters.data;
        var$5 = $rt_compare($strIndex, var$4.length);
        if (var$5 < 0) {
            a: {
                b: {
                    if (var$3 != var$4[$strIndex]) {
                        var$3 = $this.$supplement;
                        if ($strIndex < 0)
                            break a;
                        if (var$5 >= 0)
                            break a;
                        if (var$3 != var$4[$strIndex]) {
                            $strIndex = (-1);
                            break b;
                        }
                    }
                    $strIndex = 1;
                }
                return $strIndex;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_CICharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$ch2;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(199));
    var$3 = var$2.$length;
    jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
    var$4 = var$2.$buffer.data;
    var$4[var$3] = var$1;
    var$5 = new jl_String;
    var$3 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$3);
    var$7 = var$6.data;
    var$5.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$3) {
        var$7[var$8] = var$4[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$5;
}
function jur_DecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF160 = null;
    a.$decomposedChar0 = null;
    a.$decomposedCharLength0 = 0;
}
function jur_DecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_DecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
function jur_DecomposedCharSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_DecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $decCodePoint, $rightBound, $curChar, var$7, $decCurCodePoint, var$9, var$10;
    $decCodePoint = $rt_createIntArray(4);
    $rightBound = $matchResult.$rightBound0;
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound);
    var$7 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_decompTable.$get7($curChar);
    if ($decCurCodePoint === null) {
        var$9 = $decCodePoint.data;
        $strIndex = 1;
        var$9[0] = $curChar;
    } else {
        $strIndex = $decCurCodePoint.data.length;
        jl_System_arraycopy($decCurCodePoint, 0, $decCodePoint, 0, $strIndex);
        $strIndex = 0 + $strIndex | 0;
    }
    a: {
        if (var$7 < $rightBound) {
            $decCurCodePoint = $decCodePoint.data;
            $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
            while ($strIndex < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass($curChar)) {
                    var$10 = $strIndex + 1 | 0;
                    $decCurCodePoint[$strIndex] = $curChar;
                } else {
                    var$9 = (jur_Lexer_decompTable.$get7($curChar)).data;
                    if (var$9.length != 2) {
                        var$10 = $strIndex + 1 | 0;
                        $decCurCodePoint[$strIndex] = var$9[0];
                    } else {
                        $curChar = $strIndex + 1 | 0;
                        $decCurCodePoint[$strIndex] = var$9[0];
                        var$10 = $curChar + 1 | 0;
                        $decCurCodePoint[$curChar] = var$9[1];
                    }
                }
                var$7 = var$7 + $this.$readCharsForCodePoint | 0;
                if (var$7 >= $rightBound) {
                    $strIndex = var$10;
                    break a;
                }
                $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
                $strIndex = var$10;
            }
        }
    }
    if ($strIndex != $this.$decomposedCharLength0)
        return (-1);
    var$9 = $decCodePoint.data;
    $curChar = 0;
    while (true) {
        if ($curChar >= $strIndex)
            return $this.$next3.$matches(var$7, $testString, $matchResult);
        if (var$9[$curChar] != $this.$decomposedChar0.data[$curChar])
            break;
        $curChar = $curChar + 1 | 0;
    }
    return (-1);
}
function jur_DecomposedCharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($this.$decomposedCharUTF160 === null) {
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        var$2 = 0;
        while (var$2 < $this.$decomposedCharLength0) {
            var$3 = $this.$decomposedChar0.data[var$2];
            if (var$3 < 65536) {
                var$4 = $rt_createCharArray(1);
                var$4.data[0] = var$3 & 65535;
            } else
                var$4 = $rt_createCharArrayFromData([(55296 | (var$3 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$3 & 1023) & 65535]);
            var$5 = var$4.data.length;
            jl_AbstractStringBuilder_insert7(var$1, var$1.$length, var$4, 0, var$5);
            var$2 = var$2 + 1 | 0;
        }
        var$6 = new jl_String;
        var$4 = var$1.$buffer;
        var$3 = var$1.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$3);
        var$8 = var$7.data;
        var$6.$characters = var$7;
        var$9 = 0;
        while (var$9 < var$3) {
            var$8[var$9] = var$4.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        $this.$decomposedCharUTF160 = var$6;
    }
    var$10 = $this.$decomposedCharUTF160;
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(200));
    var$2 = var$1.$length;
    if (var$10 === null)
        var$10 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$1, var$2, var$10);
    var$6 = new jl_String;
    var$4 = var$1.$buffer;
    var$3 = var$1.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$3);
    var$8 = var$7.data;
    var$6.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$3) {
        var$8[var$9] = var$4.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$6;
}
function jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound) {
    var $curCodePointUTF16, $curChar, $low, var$7;
    a: {
        $this.$readCharsForCodePoint = 1;
        if ($strIndex >= ($rightBound - 1 | 0)) {
            if ($strIndex >= 0) {
                $curCodePointUTF16 = $testString.$characters.data;
                if ($strIndex < $curCodePointUTF16.length) {
                    $curChar = $curCodePointUTF16[$strIndex];
                    break a;
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $rightBound = $strIndex + 1 | 0;
        if ($strIndex >= 0) {
            $curCodePointUTF16 = $testString.$characters.data;
            $low = $curCodePointUTF16.length;
            if ($strIndex < $low) {
                $curChar = $curCodePointUTF16[$strIndex];
                if ($rightBound >= 0 && $rightBound < $low) {
                    $low = $curCodePointUTF16[$rightBound];
                    $strIndex = ($curChar & 64512) != 55296 ? 0 : 1;
                    if ($strIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0) {
                        $curCodePointUTF16 = $rt_createCharArray(2);
                        var$7 = $curCodePointUTF16.data;
                        var$7[0] = $curChar;
                        var$7[1] = $low;
                        $curChar = jl_Character_codePointAt($curCodePointUTF16, 0, var$7.length);
                        $this.$readCharsForCodePoint = 2;
                    }
                    break a;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return $curChar;
}
function jur_DecomposedCharSet_first($this, $set) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            $set = $set;
            if ($set.$decomposedCharUTF160 === null) {
                var$2 = new jl_StringBuilder;
                var$2.$buffer = $rt_createCharArray(16);
                var$3 = 0;
                while (var$3 < $set.$decomposedCharLength0) {
                    var$4 = $set.$decomposedChar0.data[var$3];
                    if (var$4 < 65536) {
                        var$5 = $rt_createCharArray(1);
                        var$5.data[0] = var$4 & 65535;
                    } else
                        var$5 = $rt_createCharArrayFromData([(55296 | (var$4 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$4 & 1023) & 65535]);
                    var$6 = var$5.data.length;
                    jl_AbstractStringBuilder_insert7(var$2, var$2.$length, var$5, 0, var$6);
                    var$3 = var$3 + 1 | 0;
                }
                var$7 = new jl_String;
                var$5 = var$2.$buffer;
                var$4 = var$2.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$4);
                var$9 = var$8.data;
                var$7.$characters = var$8;
                var$6 = 0;
                while (var$6 < var$4) {
                    var$9[var$6] = var$5.data[var$6 + 0 | 0];
                    var$6 = var$6 + 1 | 0;
                }
                $set.$decomposedCharUTF160 = var$7;
            }
            var$2 = $set.$decomposedCharUTF160;
            if ($this.$decomposedCharUTF160 === null) {
                $set = new jl_StringBuilder;
                $set.$buffer = $rt_createCharArray(16);
                var$3 = 0;
                while (var$3 < $this.$decomposedCharLength0) {
                    var$10 = $this.$decomposedChar0.data[var$3];
                    if (var$10 < 65536) {
                        var$5 = $rt_createCharArray(1);
                        var$5.data[0] = var$10 & 65535;
                    } else
                        var$5 = $rt_createCharArrayFromData([(55296 | (var$10 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$10 & 1023) & 65535]);
                    var$11 = var$5.data.length;
                    jl_AbstractStringBuilder_insert7($set, $set.$length, var$5, 0, var$11);
                    var$3 = var$3 + 1 | 0;
                }
                var$7 = new jl_String;
                var$5 = $set.$buffer;
                var$4 = $set.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$4);
                var$9 = var$8.data;
                var$7.$characters = var$8;
                var$6 = 0;
                while (var$6 < var$4) {
                    var$9[var$6] = var$5.data[var$6 + 0 | 0];
                    var$6 = var$6 + 1 | 0;
                }
                $this.$decomposedCharUTF160 = var$7;
            }
            if (!jl_String_equals(var$2, $this.$decomposedCharUTF160)) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_DecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
function jur_UCIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIDecomposedCharSet();
    jur_UCIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomp;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
var jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
function jur_CIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_CIDecomposedCharSet();
    jur_CIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomp;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
var jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_PossessiveGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
var jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_PosPlusGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            $stringIndex = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if ($stringIndex <= $nextIndex)
                break;
            $nextIndex = $stringIndex;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
var jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_AltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltGroupQuantifierSet();
    jur_AltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
}
function jur_AltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_AltGroupQuantifierSet_setNext($this, $next) {
    $this.$next3 = $next;
    $this.$innerSet.$setNext($next);
}
var jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
function jur_PosAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next3.$matches($nextIndex, $testString, $matchResult);
}
function jur_PosAltGroupQuantifierSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_CompositeGroupQuantifierSet() {
    var a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier = null;
    a.$setCounter = 0;
}
function jur_CompositeGroupQuantifierSet__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_CompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter) {
    var var$6, var$7;
    var$6 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$6 + 1 | 0;
    var$7 = new jl_AbstractStringBuilder;
    var$7.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$6, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$quantifier = $quant;
    $this.$setCounter = $setCounter;
}
function jur_CompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, var$5, $nextIndex, var$7;
    $enterCounter = $this.$setCounter;
    $enterCounter = $matchResult.$compQuantCounters.data[$enterCounter];
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max2)
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    $enterCounter = $enterCounter + 1 | 0;
    $matchResult.$compQuantCounters.data[var$5] = $enterCounter;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $stringIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$stringIndex] = 0;
        return $nextIndex;
    }
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + (-1) | 0;
    var$7 = $matchResult.$compQuantCounters.data;
    var$7[$nextIndex] = $enterCounter;
    if ($enterCounter >= $this.$quantifier.$min1)
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    var$7[$nextIndex] = 0;
    return (-1);
}
function jur_CompositeGroupQuantifierSet_getName($this) {
    return jur_Quantifier_toString($this.$quantifier);
}
var jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
function jur_PosCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier.$max2;
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier.$min1)
        return (-1);
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
var jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_ReluctantGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantGroupQuantifierSet();
    jur_ReluctantGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
}
function jur_ReluctantGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next3.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
var jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
function jur_RelAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_RelAltGroupQuantifierSet();
    jur_RelAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_RelAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
}
function jur_RelAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next3.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
}
var jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
function jur_RelCompositeGroupQuantifierSet__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_RelCompositeGroupQuantifierSet();
    jur_RelCompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_RelCompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter) {
    var var$6, var$7;
    var$6 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$6 + 1 | 0;
    var$7 = new jl_AbstractStringBuilder;
    var$7.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$6, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$quantifier = $quant;
    $this.$setCounter = $setCounter;
}
function jur_RelCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex, $enterCounter, var$6;
    $nextIndex = $this.$setCounter;
    $enterCounter = $matchResult.$compQuantCounters.data[$nextIndex];
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    var$6 = $this.$quantifier;
    if ($enterCounter >= var$6.$max2) {
        $nextIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$nextIndex] = 0;
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < var$6.$min1) {
        $nextIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$nextIndex] = $enterCounter + 1 | 0;
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $stringIndex = $this.$setCounter;
            $matchResult.$compQuantCounters.data[$stringIndex] = 0;
            return $nextIndex;
        }
        $nextIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$nextIndex] = $enterCounter + 1 | 0;
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
}
var jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
function jur_DotAllQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_DotAllQuantifierSet();
    jur_DotAllQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_DotAllQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
}
function jur_DotAllQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$rightBound0;
    if ($strLength > $stringIndex)
        return $this.$next3.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotAllQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$rightBound0;
    if ($this.$next3.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
}
function jur_DotAllQuantifierSet_getName($this) {
    return $rt_s(201);
}
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
function jur_DotQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_DotQuantifierSet();
    jur_DotQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_DotQuantifierSet__init_0($this, $innerSet, $next, $type, $lt) {
    var var$5, var$6;
    var$5 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$5 + 1 | 0;
    var$6 = new jl_AbstractStringBuilder;
    var$6.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$lt = $lt;
}
function jur_DotQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startSearch, var$6, var$7;
    $strLength = $matchResult.$rightBound0;
    $startSearch = $stringIndex;
    a: {
        while (true) {
            if ($startSearch >= $strLength) {
                $startSearch = (-1);
                break a;
            }
            var$6 = $this.$lt;
            if ($startSearch < 0)
                break;
            var$7 = $testString.$characters.data;
            if ($startSearch >= var$7.length)
                break;
            if (var$6.$isLineTerminator(var$7[$startSearch]))
                break a;
            $startSearch = $startSearch + 1 | 0;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next3.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $res, $nextSearch, var$7, var$8, var$9, $leftBound;
    $strLength = $matchResult.$rightBound0;
    $res = $this.$next3.$find0($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = $res;
    a: {
        while (true) {
            if ($nextSearch >= $strLength) {
                $nextSearch = (-1);
                break a;
            }
            var$7 = $this.$lt;
            if ($nextSearch < 0)
                break;
            var$8 = $testString.$characters.data;
            if ($nextSearch >= var$8.length)
                break;
            if (var$7.$isLineTerminator(var$8[$nextSearch]))
                break a;
            $nextSearch = $nextSearch + 1 | 0;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$9 = $this.$next3.$findBack($res, $strLength, $testString, $matchResult);
    if ($res > var$9)
        var$9 = $res;
    if (var$9 <= 0)
        $leftBound = var$9 ? (-1) : 0;
    else {
        $leftBound = var$9 - 1 | 0;
        b: {
            while (true) {
                if ($leftBound < $stringIndex) {
                    $leftBound = (-1);
                    break b;
                }
                $matchResult = $this.$lt;
                if ($leftBound < 0)
                    break;
                var$8 = $testString.$characters.data;
                if ($leftBound >= var$8.length)
                    break;
                if ($matchResult.$isLineTerminator(var$8[$leftBound]))
                    break b;
                $leftBound = $leftBound + (-1) | 0;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= var$9 ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
}
function jur_DotQuantifierSet_getName($this) {
    return $rt_s(202);
}
var jur_AbstractLineTerminator = $rt_classWithoutFields();
var jur_AbstractLineTerminator_unixLT = null;
var jur_AbstractLineTerminator_unicodeLT = null;
function jur_AbstractLineTerminator_getInstance($flag) {
    var var$2;
    if (!($flag & 1)) {
        var$2 = jur_AbstractLineTerminator_unicodeLT;
        if (var$2 !== null)
            return var$2;
        var$2 = new jur_AbstractLineTerminator$2;
        jur_AbstractLineTerminator_unicodeLT = var$2;
        return var$2;
    }
    var$2 = jur_AbstractLineTerminator_unixLT;
    if (var$2 !== null)
        return var$2;
    var$2 = new jur_AbstractLineTerminator$1;
    jur_AbstractLineTerminator_unixLT = var$2;
    return var$2;
}
var jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_PossessiveQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveQuantifierSet();
    jur_PossessiveQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
}
function jur_PossessiveQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
var jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
function jur_PossessiveAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveAltQuantifierSet();
    jur_PossessiveAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
}
function jur_PossessiveAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
var jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
function jur_PossessiveCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_PossessiveCompositeQuantifierSet();
    jur_PossessiveCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_PossessiveCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    var var$5, var$6;
    var$5 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$5 + 1 | 0;
    var$6 = new jl_AbstractStringBuilder;
    var$6.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
    $this.$quantifier0 = $quant;
}
function jur_PossessiveCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min1;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
var jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_ReluctantQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantQuantifierSet();
    jur_ReluctantQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
}
function jur_ReluctantQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (true) {
        var$4 = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
}
var jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
function jur_ReluctantAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantAltQuantifierSet();
    jur_ReluctantAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    var var$4, var$5;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
}
function jur_ReluctantAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
var jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
function jur_ReluctantCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_ReluctantCompositeQuantifierSet();
    jur_ReluctantCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_ReluctantCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    var var$5, var$6;
    var$5 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$5 + 1 | 0;
    var$6 = new jl_AbstractStringBuilder;
    var$6.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
    $this.$next3 = $next;
    $this.$innerSet = $innerSet;
    $this.$type3 = $type;
    $this.$leaf = $innerSet;
    $this.$quantifier0 = $quant;
}
function jur_ReluctantCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $min, $max, $i, var$8, var$9;
    var$4 = $this.$quantifier0;
    $min = var$4.$min1;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$8 = $this.$next3.$matches($stringIndex, $testString, $matchResult);
                    if (var$8 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
                        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$8 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$8 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$8;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$9 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$9 < 1)
            break;
        $stringIndex = $stringIndex + var$9 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
var jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet);
function jur_SOLSet__init_() {
    var var_0 = new jur_SOLSet();
    jur_SOLSet__init_0(var_0);
    return var_0;
}
function jur_SOLSet__init_0($this) {
    var var$1, var$2;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
}
function jur_SOLSet_matches($this, $strIndex, $testString, $matchResult) {
    if ($strIndex && !($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound0))
        return (-1);
    return $this.$next3.$matches($strIndex, $testString, $matchResult);
}
function jur_SOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_SOLSet_getName($this) {
    return $rt_s(203);
}
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
function jur_WordBoundary__init_(var_0) {
    var var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
}
function jur_WordBoundary__init_0($this, $positive) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$positive = $positive;
}
function jur_WordBoundary_matches($this, $stringIndex, $testString, $matchResult) {
    var $ch1, var$5, $ch2, $leftBound;
    a: {
        if ($stringIndex >= $matchResult.$rightBound0)
            $ch1 = 32;
        else {
            if ($stringIndex >= 0) {
                var$5 = $testString.$characters.data;
                if ($stringIndex < var$5.length) {
                    $ch1 = var$5[$stringIndex];
                    break a;
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    b: {
        if (!$stringIndex)
            $ch2 = 32;
        else {
            $ch2 = $stringIndex - 1 | 0;
            if ($ch2 >= 0) {
                var$5 = $testString.$characters.data;
                if ($ch2 < var$5.length) {
                    $ch2 = var$5[$ch2];
                    break b;
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound0;
    return ($ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1) ^ ($ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1) ^ $this.$positive ? (-1) : $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_WordBoundary_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_WordBoundary_getName($this) {
    return $rt_s(204);
}
function jur_WordBoundary_isSpace($this, $ch, $index, $leftBound, $testString) {
    var var$5, var$6;
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 9:
                    break;
                case 6:
                case 7:
                case 8:
                    break b;
                default:
                    break b;
            }
            var$5 = 1;
            break a;
        }
        var$5 = 0;
    }
    if (!var$5 && $ch != 95) {
        c: {
            d: {
                if (jl_Character_getType($ch) == 6)
                    while (true) {
                        $index = $index + (-1) | 0;
                        if ($index < $leftBound)
                            break d;
                        if ($index < 0)
                            break c;
                        var$6 = $testString.$characters.data;
                        if ($index >= var$6.length)
                            break c;
                        e: {
                            f: {
                                $ch = var$6[$index];
                                switch (jl_Character_getType($ch)) {
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 9:
                                        break;
                                    case 6:
                                    case 7:
                                    case 8:
                                        break f;
                                    default:
                                        break f;
                                }
                                var$5 = 1;
                                break e;
                            }
                            var$5 = 0;
                        }
                        if (var$5)
                            return 0;
                        if (jl_Character_getType($ch) != 6)
                            return 1;
                    }
            }
            return 1;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return 0;
}
var jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet);
function jur_PreviousMatch__init_() {
    var var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_0(var_0);
    return var_0;
}
function jur_PreviousMatch__init_0($this) {
    var var$1, var$2;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
}
function jur_PreviousMatch_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex != $matchResult.$previousMatch)
        return (-1);
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_PreviousMatch_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PreviousMatch_getName($this) {
    return $rt_s(205);
}
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
function jur_EOLSet__init_0(var_0) {
    var var_1 = new jur_EOLSet();
    jur_EOLSet__init_(var_1, var_0);
    return var_1;
}
function jur_EOLSet__init_($this, $counter) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$consCounter = $counter;
}
function jur_EOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, $ch, var$6, var$7;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound0 : $testString.$characters.data.length;
    if ($strIndex >= $rightBound) {
        $ch = $this.$consCounter;
        $matchResult.$consumers.data[$ch] = 0;
        return $this.$next3.$matches($strIndex, $testString, $matchResult);
    }
    a: {
        var$6 = $rightBound - $strIndex | 0;
        if (var$6 == 2) {
            if ($strIndex >= 0) {
                var$7 = $testString.$characters.data;
                $ch = var$7.length;
                if ($strIndex < $ch) {
                    if (var$7[$strIndex] != 13)
                        break a;
                    $rightBound = $strIndex + 1 | 0;
                    if ($rightBound >= 0 && $rightBound < $ch) {
                        if (var$7[$rightBound] != 10)
                            break a;
                        $ch = $this.$consCounter;
                        $matchResult.$consumers.data[$ch] = 0;
                        return $this.$next3.$matches($strIndex, $testString, $matchResult);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    b: {
        c: {
            if (var$6 == 1) {
                if ($strIndex >= 0) {
                    var$7 = $testString.$characters.data;
                    if ($strIndex < var$7.length) {
                        $ch = var$7[$strIndex];
                        if ($ch == 10)
                            break b;
                        if ($ch == 13)
                            break b;
                        if ($ch == 133)
                            break b;
                        if (($ch | 1) != 8233)
                            break c;
                        else
                            break b;
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        return (-1);
    }
    $rightBound = $this.$consCounter;
    $matchResult.$consumers.data[$rightBound] = 0;
    return $this.$next3.$matches($strIndex, $testString, $matchResult);
}
function jur_EOLSet_hasConsumed($this, $matchResult) {
    var var$2, var$3, $res;
    var$2 = $this.$consCounter;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
}
function jur_EOLSet_getName($this) {
    return $rt_s(206);
}
var jur_EOISet = $rt_classWithoutFields(jur_AbstractSet);
function jur_EOISet__init_() {
    var var_0 = new jur_EOISet();
    jur_EOISet__init_0(var_0);
    return var_0;
}
function jur_EOISet__init_0($this) {
    var var$1, var$2;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
}
function jur_EOISet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex < (!$matchResult.$transparentBounds ? $matchResult.$rightBound0 : $testString.$characters.data.length))
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
}
function jur_EOISet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_EOISet_getName($this) {
    return $rt_s(207);
}
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt0 = null;
}
function jur_MultiLineSOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineSOLSet__init_0($this, $lt) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$lt0 = $lt;
}
function jur_MultiLineSOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var var$4, var$5, var$6, var$7, var$8;
    a: {
        b: {
            c: {
                if ($strIndex != $matchResult.$rightBound0) {
                    if (!$strIndex)
                        break b;
                    if ($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound0)
                        break b;
                    var$4 = $this.$lt0;
                    var$5 = $strIndex - 1 | 0;
                    if (var$5 >= 0) {
                        var$6 = $testString.$characters.data;
                        var$7 = var$6.length;
                        if (var$5 < var$7) {
                            var$8 = var$6[var$5];
                            if ($strIndex < 0)
                                break a;
                            if ($strIndex >= var$7)
                                break a;
                            if (!var$4.$isAfterLineTerminator(var$8, var$6[$strIndex]))
                                break c;
                            else
                                break b;
                        }
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            return (-1);
        }
        return $this.$next3.$matches($strIndex, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_MultiLineSOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_MultiLineSOLSet_getName($this) {
    return $rt_s(208);
}
var jur_DotAllSet = $rt_classWithoutFields(jur_JointSet);
function jur_DotAllSet__init_() {
    var var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_0(var_0);
    return var_0;
}
function jur_DotAllSet__init_0($this) {
    var var$1, var$2;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
}
function jur_DotAllSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, var$6, var$7, $high, $low, var$10;
    $strLength = $matchResult.$rightBound0;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    if ($stringIndex >= 0) {
        var$6 = $testString.$characters.data;
        var$7 = var$6.length;
        if ($stringIndex < var$7) {
            $high = $rt_compare(var$6[$stringIndex] & 64512, 55296);
            $low = $high ? 0 : 1;
            a: {
                if ($low) {
                    var$10 = $stringIndex + 2 | 0;
                    if (var$10 <= $strLength) {
                        if (var$5 >= 0 && var$5 < var$7) {
                            $low = var$6[var$5];
                            $stringIndex = $high ? 0 : 1;
                            if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                                break a;
                            else
                                return $this.$next3.$matches(var$10, $testString, $matchResult);
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
            }
            return $this.$next3.$matches(var$5, $testString, $matchResult);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_DotAllSet_getName($this) {
    return $rt_s(209);
}
function jur_DotAllSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_DotAllSet_getType($this) {
    return (-2147483602);
}
function jur_DotAllSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt1 = null;
}
function jur_DotSet__init_(var_0) {
    var var_1 = new jur_DotSet();
    jur_DotSet__init_0(var_1, var_0);
    return var_1;
}
function jur_DotSet__init_0($this, $lt) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$lt1 = $lt;
}
function jur_DotSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, var$6, var$7, $high, var$9, $low, var$11;
    $strLength = $matchResult.$rightBound0;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    if ($stringIndex >= 0) {
        var$6 = $testString.$characters.data;
        var$7 = var$6.length;
        if ($stringIndex < var$7) {
            $high = var$6[$stringIndex];
            var$9 = $rt_compare($high & 64512, 55296);
            $low = var$9 ? 0 : 1;
            a: {
                if ($low) {
                    var$11 = $stringIndex + 2 | 0;
                    if (var$11 <= $strLength) {
                        if (var$5 >= 0 && var$5 < var$7) {
                            $low = var$6[var$5];
                            $stringIndex = var$9 ? 0 : 1;
                            if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                                break a;
                            else
                                return $this.$lt1.$isLineTerminator((($high & 1023) << 10 | $low & 1023) + 65536 | 0) ? (-1) : $this.$next3.$matches(var$11, $testString, $matchResult);
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
            }
            return $this.$lt1.$isLineTerminator($high) ? (-1) : $this.$next3.$matches(var$5, $testString, $matchResult);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_DotSet_getName($this) {
    return $rt_s(210);
}
function jur_DotSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_DotSet_getType($this) {
    return (-2147483602);
}
function jur_DotSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
function jur_UEOLSet__init_(var_0) {
    var var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UEOLSet__init_0($this, $counter) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$consCounter0 = $counter;
}
function jur_UEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, var$5, var$6;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound0 : $testString.$characters.data.length;
    if ($strIndex >= $rightBound) {
        $rightBound = $this.$consCounter0;
        $matchResult.$consumers.data[$rightBound] = 0;
        return $this.$next3.$matches($strIndex, $testString, $matchResult);
    }
    a: {
        if (($rightBound - $strIndex | 0) == 1) {
            if ($strIndex >= 0) {
                var$5 = $testString.$characters.data;
                if ($strIndex < var$5.length) {
                    if (var$5[$strIndex] != 10)
                        break a;
                    else {
                        var$6 = $this.$consCounter0;
                        $matchResult.$consumers.data[var$6] = 1;
                        return $this.$next3.$matches($strIndex + 1 | 0, $testString, $matchResult);
                    }
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    return (-1);
}
function jur_UEOLSet_hasConsumed($this, $matchResult) {
    var var$2, var$3, $res;
    var$2 = $this.$consCounter0;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
}
function jur_UEOLSet_getName($this) {
    return $rt_s(206);
}
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter1 = 0;
}
function jur_UMultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UMultiLineEOLSet__init_0($this, $counter) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$consCounter1 = $counter;
}
function jur_UMultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif, var$5, var$6;
    if (($matchResult.$anchoringBounds ? $matchResult.$rightBound0 - $strIndex | 0 : $testString.$characters.data.length - $strIndex | 0) <= 0) {
        $strDif = $this.$consCounter1;
        $matchResult.$consumers.data[$strDif] = 0;
        return $this.$next3.$matches($strIndex, $testString, $matchResult);
    }
    if ($strIndex >= 0) {
        var$5 = $testString.$characters.data;
        if ($strIndex < var$5.length) {
            if (var$5[$strIndex] != 10)
                return (-1);
            var$6 = $this.$consCounter1;
            $matchResult.$consumers.data[var$6] = 1;
            return $this.$next3.$matches($strIndex + 1 | 0, $testString, $matchResult);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_UMultiLineEOLSet_hasConsumed($this, $matchResult) {
    var var$2, var$3, $res;
    var$2 = $this.$consCounter1;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
}
function jur_UMultiLineEOLSet_getName($this) {
    return $rt_s(211);
}
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
function jur_MultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineEOLSet__init_0($this, $counter) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$consCounter2 = $counter;
}
function jur_MultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif, var$5, $ch1, $ch2;
    $strDif = $matchResult.$anchoringBounds ? $matchResult.$rightBound0 - $strIndex | 0 : $testString.$characters.data.length - $strIndex | 0;
    if (!$strDif) {
        $strDif = $this.$consCounter2;
        $matchResult.$consumers.data[$strDif] = 0;
        return $this.$next3.$matches($strIndex, $testString, $matchResult);
    }
    a: {
        if ($strDif < 2) {
            if ($strIndex >= 0) {
                var$5 = $testString.$characters.data;
                if ($strIndex < var$5.length) {
                    $ch1 = var$5[$strIndex];
                    $ch2 = 97;
                    break a;
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        if ($strIndex >= 0) {
            var$5 = $testString.$characters.data;
            $ch2 = var$5.length;
            if ($strIndex < $ch2) {
                $ch1 = var$5[$strIndex];
                $strDif = $strIndex + 1 | 0;
                if ($strDif >= 0 && $strDif < $ch2) {
                    $ch2 = var$5[$strDif];
                    break a;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $strDif = $this.$consCounter2;
            $matchResult.$consumers.data[$strDif] = 0;
            return $this.$next3.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $strDif = $this.$consCounter2;
                $matchResult.$consumers.data[$strDif] = 0;
                return $this.$next3.$matches($strIndex, $testString, $matchResult);
            }
            $strDif = $this.$consCounter2;
            $matchResult.$consumers.data[$strDif] = 0;
            return $this.$next3.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
}
function jur_MultiLineEOLSet_hasConsumed($this, $matchResult) {
    var var$2, var$3, $res;
    var$2 = $this.$consCounter2;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
}
function jur_MultiLineEOLSet_getName($this) {
    return $rt_s(212);
}
function jur_CIBackReferenceSet() {
    var a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter3 = 0;
}
function jur_CIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter3 = $consCounter;
}
function jur_CIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7, var$8, var$9, var$10;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$characters.data.length | 0) <= $matchResult.$rightBound0) {
        $i = 0;
        a: {
            b: {
                c: {
                    d: {
                        while (true) {
                            var$6 = $group.$characters.data;
                            var$7 = var$6.length;
                            var$8 = $rt_compare($i, var$7);
                            if (var$8 >= 0) {
                                $i = $this.$consCounter3;
                                $matchResult.$consumers.data[$i] = var$7;
                                return $this.$next3.$matches($stringIndex + var$7 | 0, $testString, $matchResult);
                            }
                            if ($i < 0)
                                break c;
                            if (var$8 >= 0)
                                break c;
                            var$9 = var$6[$i];
                            var$7 = $stringIndex + $i | 0;
                            if (var$7 < 0)
                                break d;
                            var$10 = $testString.$characters.data;
                            if (var$7 >= var$10.length)
                                break d;
                            if (var$9 != var$10[var$7]) {
                                if ($i < 0)
                                    break a;
                                if (var$8 >= 0)
                                    break a;
                                var$8 = jur_Pattern_getSupplement(var$6[$i]);
                                if (var$7 < 0)
                                    break b;
                                var$10 = $testString.$characters.data;
                                if (var$7 >= var$10.length)
                                    break b;
                                if (var$8 != var$10[var$7])
                                    break;
                            }
                            $i = $i + 1 | 0;
                        }
                        return (-1);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return (-1);
}
function jur_CIBackReferenceSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_CIBackReferenceSet_getString($this, $matchResult) {
    var var$2, var$3, var$4, var$5, var$6, $res, var$8, var$9;
    a: {
        var$2 = $this.$referencedGroup;
        var$3 = $matchResult.$groupBounds.data;
        var$4 = var$2 * 2 | 0;
        var$5 = var$3[var$4];
        var$6 = var$3[var$4 + 1 | 0];
        var$2 = var$6 | var$5;
        var$4 = var$6 - var$5 | 0;
        if ((var$2 | var$4) >= 0) {
            $res = $matchResult.$string0;
            var$8 = $res.$characters.data;
            var$2 = $rt_compare(var$6, var$8.length);
            if (var$2 <= 0) {
                var$6 = $rt_compare(var$5, var$6);
                if (var$6 > 0) {
                    $matchResult = new jl_IndexOutOfBoundsException;
                    $matchResult.$suppressionEnabled = 1;
                    $matchResult.$writableStackTrace = 1;
                    $rt_throw($matchResult);
                }
                if (!var$6) {
                    jl_String_$callClinit();
                    $res = jl_String_EMPTY;
                } else if (!(!var$5 && !var$2)) {
                    $res = new jl_String;
                    jl_String_$callClinit();
                    var$3 = $rt_createCharArray(var$4);
                    var$9 = var$3.data;
                    $res.$characters = var$3;
                    var$2 = 0;
                    while (var$2 < var$4) {
                        var$9[var$2] = var$8[var$2 + var$5 | 0];
                        var$2 = var$2 + 1 | 0;
                    }
                }
                break a;
            }
        }
        $res = null;
    }
    return $res;
}
function jur_CIBackReferenceSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$groupIndex0;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(213));
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$3;
}
function jur_CIBackReferenceSet_hasConsumed($this, $matchResult) {
    var var$2, var$3, $res;
    var$2 = $this.$consCounter3;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
}
var jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet);
function jur_BackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_BackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter3 = $consCounter;
}
function jur_BackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $shift, var$6;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$characters.data.length | 0) <= $matchResult.$rightBound0) {
        $shift = !jl_String_startsWith($testString, $group, $stringIndex) ? (-1) : $group.$characters.data.length;
        if ($shift < 0)
            return (-1);
        var$6 = $this.$consCounter3;
        $matchResult.$consumers.data[var$6] = $shift;
        return $this.$next3.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_BackReferenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $group, $strLength;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    $strLength = $matchResult.$leftBound0;
    if ($group !== null && ($strIndex + $group.$characters.data.length | 0) <= $strLength) {
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            $strIndex = jl_String_indexOf1($testString, $group, $strIndex);
            if ($strIndex < 0)
                return (-1);
            if ($this.$next3.$matches($strIndex + $group.$characters.data.length | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = $strIndex + 1 | 0;
        }
        return $strIndex;
    }
    return (-1);
}
function jur_BackReferenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $group, var$6;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group === null)
        return (-1);
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = jl_String_lastIndexOf0($testString, $group, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next3.$matches(var$6 + $group.$characters.data.length | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
}
function jur_BackReferenceSet_first($this, $set) {
    return 1;
}
function jur_BackReferenceSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$groupIndex0;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(214));
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$3;
}
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
function jur_UCIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    var var$3, var$4;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$4 = new jl_AbstractStringBuilder;
    var$4.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter3 = $consCounter;
}
function jur_UCIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, var$5, var$6, var$7, var$8, $group, var$10, var$11, $i;
    a: {
        var$4 = $this.$referencedGroup;
        var$5 = $matchResult.$groupBounds.data;
        var$6 = var$4 * 2 | 0;
        var$7 = var$5[var$6];
        var$8 = var$5[var$6 + 1 | 0];
        var$6 = var$8 | var$7;
        var$4 = var$8 - var$7 | 0;
        if ((var$6 | var$4) >= 0) {
            $group = $matchResult.$string0;
            var$10 = $group.$characters.data;
            var$6 = $rt_compare(var$8, var$10.length);
            if (var$6 <= 0) {
                var$8 = $rt_compare(var$7, var$8);
                if (var$8 > 0) {
                    $testString = new jl_IndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace($testString);
                    $rt_throw($testString);
                }
                if (!var$8) {
                    jl_String_$callClinit();
                    $group = jl_String_EMPTY;
                } else if (!(!var$7 && !var$6)) {
                    $group = new jl_String;
                    jl_String_$callClinit();
                    var$5 = $rt_createCharArray(var$4);
                    var$11 = var$5.data;
                    $group.$characters = var$5;
                    var$6 = 0;
                    while (var$6 < var$4) {
                        var$11[var$6] = var$10[var$6 + var$7 | 0];
                        var$6 = var$6 + 1 | 0;
                    }
                }
                break a;
            }
        }
        $group = null;
    }
    if ($group !== null && ($stringIndex + $group.$characters.data.length | 0) <= $matchResult.$rightBound0) {
        $i = 0;
        b: {
            c: {
                while (true) {
                    var$5 = $group.$characters.data;
                    var$6 = var$5.length;
                    var$4 = $rt_compare($i, var$6);
                    if (var$4 >= 0) {
                        var$4 = $this.$consCounter3;
                        $matchResult.$consumers.data[var$4] = var$6;
                        return $this.$next3.$matches($stringIndex + var$6 | 0, $testString, $matchResult);
                    }
                    if ($i < 0)
                        break b;
                    if (var$4 >= 0)
                        break b;
                    var$6 = var$5[$i];
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
                    }
                    d: {
                        var$5 = jl_Character_upperCaseMapping;
                        var$8 = jl_Character_binarySearchTable(var$5, var$6);
                        if (var$8 >= 0) {
                            var$5 = var$5.data;
                            if (var$8 < (var$5.length / 2 | 0)) {
                                var$4 = var$6 + var$5[(var$8 * 2 | 0) + 1 | 0] | 0;
                                break d;
                            }
                        }
                        var$4 = 0;
                    }
                    var$7 = var$4 & 65535;
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
                    }
                    e: {
                        var$5 = jl_Character_lowerCaseMapping;
                        var$6 = jl_Character_binarySearchTable(var$5, var$7);
                        if (var$6 >= 0) {
                            var$5 = var$5.data;
                            if (var$6 < (var$5.length / 2 | 0)) {
                                var$4 = var$7 + var$5[(var$6 * 2 | 0) + 1 | 0] | 0;
                                break e;
                            }
                        }
                        var$4 = 0;
                    }
                    var$6 = var$4 & 65535;
                    var$8 = $stringIndex + $i | 0;
                    if (var$8 < 0)
                        break c;
                    var$5 = $testString.$characters.data;
                    if (var$8 >= var$5.length)
                        break c;
                    var$4 = var$5[var$8];
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
                    }
                    f: {
                        var$5 = jl_Character_upperCaseMapping;
                        var$7 = jl_Character_binarySearchTable(var$5, var$4);
                        if (var$7 >= 0) {
                            var$5 = var$5.data;
                            if (var$7 < (var$5.length / 2 | 0)) {
                                var$4 = var$4 + var$5[(var$7 * 2 | 0) + 1 | 0] | 0;
                                break f;
                            }
                        }
                        var$4 = 0;
                    }
                    var$4 = var$4 & 65535;
                    if (var$6 != (jl_Character_mapChar(jl_Character_getLowerCaseMapping(), var$4) & 65535))
                        break;
                    $i = $i + 1 | 0;
                }
                return (-1);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return (-1);
}
function jur_UCIBackReferenceSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$groupIndex1;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(215));
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$3;
}
var jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder);
function jl_StringBuffer_append0($this, $string) {
    jl_AbstractStringBuilder_insert($this, $this.$length, $string);
    return $this;
}
function jl_StringBuffer_append($this, $s, $start, $end) {
    jl_AbstractStringBuilder_insert6($this, $this.$length, $s, $start, $end);
    return $this;
}
function jl_StringBuffer_insert($this, $index, $s, $start, $end) {
    jl_AbstractStringBuilder_insert6($this, $index, $s, $start, $end);
    return $this;
}
function jl_StringBuffer_insert0($this, var$1, var$2, var$3, var$4) {
    var var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + var$4 | 0);
    var$5 = var$4 + var$3 | 0;
    while (var$3 < var$5) {
        var$6 = var$2.data;
        var$7 = $this.$buffer.data;
        var$4 = var$1 + 1 | 0;
        var$8 = var$3 + 1 | 0;
        var$7[var$1] = var$6[var$3];
        var$1 = var$4;
        var$3 = var$8;
    }
    return $this;
}
function jl_StringBuffer_append1($this, var$1, var$2, var$3) {
    var var$4, var$5, var$6, var$7, var$8;
    var$4 = $this.$length;
    jl_AbstractStringBuilder_insertSpace($this, var$4, var$4 + var$3 | 0);
    var$5 = var$3 + var$2 | 0;
    while (var$2 < var$5) {
        var$6 = var$1.data;
        var$7 = $this.$buffer.data;
        var$3 = var$4 + 1 | 0;
        var$8 = var$2 + 1 | 0;
        var$7[var$4] = var$6[var$2];
        var$4 = var$3;
        var$2 = var$8;
    }
    return $this;
}
function jl_StringBuffer_charAt($this, var$1) {
    var var$2;
    if (var$1 >= 0 && var$1 < $this.$length)
        return $this.$buffer.data[var$1];
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
}
function jl_StringBuffer_length($this) {
    return $this.$length;
}
function jl_StringBuffer_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuffer_insert1($this, var$1, var$2) {
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + 1 | 0);
    $this.$buffer.data[var$1] = var$2;
    return $this;
}
function jl_StringBuffer_insert2($this, var$1, var$2) {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
}
function jur_SequenceSet() {
    var a = this; jur_LeafSet.call(a);
    a.$string2 = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
function jur_SequenceSet__init_(var_0) {
    var var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet__init_0($this, $substring) {
    var $j, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    $j = jur_AbstractSet_counter;
    jur_AbstractSet_counter = $j + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $j, 10)).$toString();
    $this.$charCount = 1;
    var$3 = new jl_String;
    var$4 = $substring.$buffer;
    var$5 = $substring.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    $this.$string2 = var$3;
    $this.$charCount = var$5;
    $this.$leftToRight = jur_SequenceSet$IntHash__init_(var$5);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount);
    $j = 0;
    a: {
        b: {
            while (true) {
                var$9 = $this.$charCount;
                if ($j >= (var$9 - 1 | 0))
                    break;
                $substring = $this.$leftToRight;
                var$3 = $this.$string2;
                if ($j < 0)
                    break a;
                var$7 = var$3.$characters.data;
                if ($j >= var$7.length)
                    break a;
                jur_SequenceSet$IntHash_put($substring, var$7[$j], (var$9 - $j | 0) - 1 | 0);
                $substring = $this.$rightToLeft;
                var$3 = $this.$string2;
                var$9 = ($this.$charCount - $j | 0) - 1 | 0;
                if (var$9 < 0)
                    break b;
                var$7 = var$3.$characters.data;
                if (var$9 >= var$7.length)
                    break b;
                jur_SequenceSet$IntHash_put($substring, var$7[var$9], var$9);
                $j = $j + 1 | 0;
            }
            return;
        }
        $substring = new jl_StringIndexOutOfBoundsException;
        $substring.$suppressionEnabled = 1;
        $substring.$writableStackTrace = 1;
        $rt_throw($substring);
    }
    $substring = new jl_StringIndexOutOfBoundsException;
    $substring.$suppressionEnabled = 1;
    $substring.$writableStackTrace = 1;
    $rt_throw($substring);
}
function jur_SequenceSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4, var$5, var$6, var$7, var$8;
    var$3 = 0;
    a: {
        b: {
            c: {
                while (true) {
                    var$4 = $this.$charCount;
                    if (var$3 >= var$4)
                        break;
                    var$5 = var$3 + $strIndex | 0;
                    if (var$5 < 0)
                        break a;
                    var$6 = $testString.$characters.data;
                    if (var$5 >= var$6.length)
                        break a;
                    var$7 = var$6[var$5];
                    var$8 = $this.$string2;
                    if (var$3 < 0)
                        break b;
                    var$6 = var$8.$characters.data;
                    if (var$3 >= var$6.length)
                        break b;
                    if (var$7 != var$6[var$3]) {
                        $strIndex = 0;
                        break c;
                    }
                    var$3 = var$3 + 1 | 0;
                }
                $strIndex = 1;
            }
            if (!$strIndex)
                var$4 = (-1);
            return var$4;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_SequenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $strLength, var$5;
    $strLength = $matchResult.$rightBound0;
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = jur_SequenceSet_indexOf($this, $testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next3.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
}
function jur_SequenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        $lastIndex = jur_SequenceSet_lastIndexOf($this, $testString, $strIndex, $lastIndex);
        if ($lastIndex < 0)
            return (-1);
        if ($this.$next3.$matches($lastIndex + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = $lastIndex + (-1) | 0;
    }
    return $lastIndex;
}
function jur_SequenceSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$string2;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(216));
    var$3 = var$2.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$2, var$3, var$1);
    var$1 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$1.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$1;
}
function jur_SequenceSet_first($this, $set) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($set instanceof jur_CharSet) {
        var$2 = $set.$ch0;
        var$3 = $this.$string2.$characters.data;
        if (0 < var$3.length)
            return var$2 != var$3[0] ? 0 : 1;
        $set = new jl_StringIndexOutOfBoundsException;
        $set.$suppressionEnabled = 1;
        $set.$writableStackTrace = 1;
        $rt_throw($set);
    }
    if ($set instanceof jur_RangeSet) {
        $set = $set;
        var$4 = $this.$string2;
        var$3 = var$4.$characters.data;
        if (1 != var$3.length) {
            var$4 = new jl_String;
            jl_String_$callClinit();
            var$5 = $rt_createCharArray(1);
            var$6 = var$5.data;
            var$4.$characters = var$5;
            var$7 = 0;
            while (var$7 < 1) {
                var$6[var$7] = var$3[var$7 + 0 | 0];
                var$7 = var$7 + 1 | 0;
            }
        }
        $set = $set.$chars0;
        var$3 = var$4.$characters.data;
        if (0 >= var$3.length) {
            $set = new jl_StringIndexOutOfBoundsException;
            $set.$suppressionEnabled = 1;
            $set.$writableStackTrace = 1;
            $rt_throw($set);
        }
        return (!$set.$contains1(var$3[0]) ? (-1) : 1) <= 0 ? 0 : 1;
    }
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            var$4 = $this.$string2;
            var$3 = var$4.$characters.data;
            var$8 = var$3.length;
            if (var$8 > 1) {
                var$9 = $set.$ch4;
                if (0 >= var$8) {
                    $set = new jl_StringIndexOutOfBoundsException;
                    $set.$suppressionEnabled = 1;
                    $set.$writableStackTrace = 1;
                    $rt_throw($set);
                }
                if (var$9 == jl_Character_toCodePoint(var$3[0], jl_String_charAt(var$4, 1))) {
                    var$2 = 1;
                    break a;
                }
            }
            var$2 = 0;
        }
        return var$2;
    }
    $set = $set;
    var$3 = $this.$string2.$characters.data;
    if (0 >= var$3.length) {
        $set = new jl_StringIndexOutOfBoundsException;
        $set.$suppressionEnabled = 1;
        $set.$writableStackTrace = 1;
        $rt_throw($set);
    }
    b: {
        c: {
            if (!$set.$contains1(var$3[0])) {
                var$3 = $this.$string2.$characters.data;
                var$9 = var$3.length;
                if (var$9 <= 1)
                    break c;
                if (0 >= var$9) {
                    $set = new jl_StringIndexOutOfBoundsException;
                    $set.$suppressionEnabled = 1;
                    $set.$writableStackTrace = 1;
                    $rt_throw($set);
                }
                var$7 = var$3[0];
                if (1 >= var$9) {
                    $set = new jl_StringIndexOutOfBoundsException;
                    $set.$suppressionEnabled = 1;
                    $set.$writableStackTrace = 1;
                    $rt_throw($set);
                }
                if (!$set.$contains1(((var$7 & 1023) << 10 | var$3[1] & 1023) + 65536 | 0))
                    break c;
            }
            var$2 = 1;
            break b;
        }
        var$2 = 0;
    }
    return var$2;
}
function jur_SequenceSet_indexOf($this, $str, $i, $to) {
    var var$4, $ch, var$6, $last, var$8, var$9, var$10, var$11, var$12, var$13;
    var$4 = $this.$string2;
    $ch = $this.$charCount - 1 | 0;
    if ($ch >= 0) {
        var$6 = var$4.$characters.data;
        if ($ch < var$6.length) {
            $last = var$6[$ch];
            a: {
                b: {
                    c: {
                        while (true) {
                            var$8 = $this.$charCount;
                            if ($i > ($to - var$8 | 0))
                                return (-1);
                            var$9 = ($i + var$8 | 0) - 1 | 0;
                            if (var$9 < 0)
                                break c;
                            var$6 = $str.$characters.data;
                            var$10 = var$6.length;
                            if (var$9 >= var$10)
                                break c;
                            $ch = var$6[var$9];
                            if ($ch == $last) {
                                var$9 = 0;
                                d: {
                                    while (var$9 < var$8) {
                                        var$11 = var$9 + $i | 0;
                                        if (var$11 < 0)
                                            break a;
                                        if (var$11 >= var$10)
                                            break a;
                                        var$12 = var$6[var$11];
                                        var$4 = $this.$string2;
                                        if (var$9 < 0)
                                            break b;
                                        var$13 = var$4.$characters.data;
                                        if (var$9 >= var$13.length)
                                            break b;
                                        if (var$12 != var$13[var$9]) {
                                            var$10 = 0;
                                            break d;
                                        }
                                        var$9 = var$9 + 1 | 0;
                                    }
                                    var$10 = 1;
                                }
                                if (var$10)
                                    break;
                            }
                            $i = $i + jur_SequenceSet$IntHash_get($this.$leftToRight, $ch) | 0;
                        }
                        return $i;
                    }
                    $str = new jl_StringIndexOutOfBoundsException;
                    $str.$suppressionEnabled = 1;
                    $str.$writableStackTrace = 1;
                    $rt_throw($str);
                }
                $str = new jl_StringIndexOutOfBoundsException;
                $str.$suppressionEnabled = 1;
                $str.$writableStackTrace = 1;
                $rt_throw($str);
            }
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
}
function jur_SequenceSet_lastIndexOf($this, $str, $to, $i) {
    var var$4, $first, $delta, $ch, var$8, $size, var$10, var$11;
    var$4 = $this.$string2.$characters.data;
    if (0 >= var$4.length) {
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $first = var$4[0];
    $delta = ($str.$characters.data.length - $i | 0) - $this.$charCount | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    a: {
        b: {
            c: {
                while (true) {
                    if ($i < $to)
                        return (-1);
                    if ($i < 0)
                        break c;
                    var$4 = $str.$characters.data;
                    $delta = var$4.length;
                    if ($i >= $delta)
                        break c;
                    $ch = var$4[$i];
                    if ($ch == $first) {
                        var$8 = 0;
                        d: {
                            while (var$8 < $this.$charCount) {
                                $size = var$8 + $i | 0;
                                if ($size < 0)
                                    break a;
                                if ($size >= $delta)
                                    break a;
                                $size = var$4[$size];
                                var$10 = $this.$string2;
                                if (var$8 < 0)
                                    break b;
                                var$11 = var$10.$characters.data;
                                if (var$8 >= var$11.length)
                                    break b;
                                if ($size != var$11[var$8]) {
                                    $size = 0;
                                    break d;
                                }
                                var$8 = var$8 + 1 | 0;
                            }
                            $size = 1;
                        }
                        if ($size)
                            break;
                    }
                    $i = $i - jur_SequenceSet$IntHash_get($this.$rightToLeft, $ch) | 0;
                }
                return $i;
            }
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
}
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string1 = null;
}
function jur_UCISequenceSet_accepts($this, $strIndex, $testString) {
    var $i, var$4, var$5, var$6, var$7, var$8, var$9;
    $i = 0;
    a: {
        b: {
            while (true) {
                var$4 = $this.$string1.$characters.data;
                var$5 = var$4.length;
                var$6 = $rt_compare($i, var$5);
                if (var$6 >= 0)
                    break;
                if ($i < 0)
                    break a;
                if (var$6 >= 0)
                    break a;
                var$7 = var$4[$i];
                var$6 = $strIndex + $i | 0;
                if (var$6 < 0)
                    break b;
                var$4 = $testString.$characters.data;
                if (var$6 >= var$4.length)
                    break b;
                var$8 = var$4[var$6];
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
                }
                c: {
                    var$4 = jl_Character_upperCaseMapping;
                    var$5 = jl_Character_binarySearchTable(var$4, var$8);
                    if (var$5 >= 0) {
                        var$4 = var$4.data;
                        if (var$5 < (var$4.length / 2 | 0)) {
                            var$6 = var$8 + var$4[(var$5 * 2 | 0) + 1 | 0] | 0;
                            break c;
                        }
                    }
                    var$6 = 0;
                }
                var$5 = var$6 & 65535;
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
                }
                d: {
                    var$4 = jl_Character_lowerCaseMapping;
                    var$9 = jl_Character_binarySearchTable(var$4, var$5);
                    if (var$9 >= 0) {
                        var$4 = var$4.data;
                        if (var$9 < (var$4.length / 2 | 0)) {
                            var$6 = var$5 + var$4[(var$9 * 2 | 0) + 1 | 0] | 0;
                            break d;
                        }
                    }
                    var$6 = 0;
                }
                if (var$7 != (var$6 & 65535))
                    return (-1);
                $i = $i + 1 | 0;
            }
            return var$5;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_UCISequenceSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$string1;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(217));
    var$3 = var$2.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$2, var$3, var$1);
    var$1 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$1.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$1;
}
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string3 = null;
}
function jur_CISequenceSet__init_(var_0) {
    var var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CISequenceSet__init_0($this, $substring) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$charCount = 1;
    var$3 = new jl_String;
    var$4 = $substring.$buffer;
    var$5 = $substring.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    $this.$string3 = var$3;
    $this.$charCount = var$5;
}
function jur_CISequenceSet_accepts($this, $strIndex, $testString) {
    var $i, var$4, var$5, var$6, var$7, var$8, var$9;
    $i = 0;
    a: {
        b: {
            c: {
                d: {
                    while (true) {
                        var$4 = $this.$string3.$characters.data;
                        var$5 = var$4.length;
                        var$6 = $rt_compare($i, var$5);
                        if (var$6 >= 0)
                            break;
                        if ($i < 0)
                            break c;
                        if (var$6 >= 0)
                            break c;
                        var$7 = var$4[$i];
                        var$8 = $strIndex + $i | 0;
                        if (var$8 < 0)
                            break d;
                        var$9 = $testString.$characters.data;
                        if (var$8 >= var$9.length)
                            break d;
                        if (var$7 != var$9[var$8]) {
                            if ($i < 0)
                                break a;
                            if (var$6 >= 0)
                                break a;
                            var$5 = jur_Pattern_getSupplement(var$4[$i]);
                            if (var$8 < 0)
                                break b;
                            var$4 = $testString.$characters.data;
                            if (var$8 >= var$4.length)
                                break b;
                            if (var$5 != var$4[var$8])
                                return (-1);
                        }
                        $i = $i + 1 | 0;
                    }
                    return var$5;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_CISequenceSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$string3;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(218));
    var$3 = var$2.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$2, var$3, var$1);
    var$1 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$1.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$1;
}
var jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields();
var jur_AbstractCharClass$PredefinedCharacterClasses_space = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_digit = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_contents = null;
function jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit() {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
}
function jur_AbstractCharClass$PredefinedCharacterClasses_getObject($this, $name) {
    var $i, $row, var$4;
    $i = 0;
    while (true) {
        jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data;
        if ($i >= $row.length) {
            var$4 = new ju_MissingResourceException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = $rt_s(42);
            var$4.$className = $rt_s(42);
            var$4.$key0 = $name;
            $rt_throw(var$4);
        }
        $row = $row[$i].data;
        if (jl_String_equals($name, $row[0]))
            break;
        $i = $i + 1 | 0;
    }
    return $row[1];
}
function jur_AbstractCharClass$PredefinedCharacterClasses__clinit_() {
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = $rt_createArrayFromData($rt_arraycls(jl_Object), [$rt_createArrayFromData(jl_Object, [$rt_s(219), jur_AbstractCharClass$LazyLower__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(220), jur_AbstractCharClass$LazyUpper__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(221), jur_AbstractCharClass$LazyASCII__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(222), jur_AbstractCharClass$LazyAlpha__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(223), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(224), jur_AbstractCharClass$LazyAlnum__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(225), jur_AbstractCharClass$LazyPunct__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(226), jur_AbstractCharClass$LazyGraph__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(227), jur_AbstractCharClass$LazyPrint__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(228), jur_AbstractCharClass$LazyBlank__init_()]),
    $rt_createArrayFromData(jl_Object, [$rt_s(229), jur_AbstractCharClass$LazyCntrl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(230), jur_AbstractCharClass$LazyXDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(231), jur_AbstractCharClass$LazyJavaLowerCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(232), jur_AbstractCharClass$LazyJavaUpperCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(233), jur_AbstractCharClass$LazyJavaWhitespace__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(234), jur_AbstractCharClass$LazyJavaMirrored__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(235), jur_AbstractCharClass$LazyJavaDefined__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(236), jur_AbstractCharClass$LazyJavaDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(237), jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(238), jur_AbstractCharClass$LazyJavaISOControl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(239),
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(240), jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(241), jur_AbstractCharClass$LazyJavaLetter__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(242), jur_AbstractCharClass$LazyJavaLetterOrDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(243), jur_AbstractCharClass$LazyJavaSpaceChar__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(244),
    jur_AbstractCharClass$LazyJavaTitleCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(245), jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(246), jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(247), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(248), jur_AbstractCharClass$LazyWord__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(249), jur_AbstractCharClass$LazyNonWord__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(250), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(251), jur_AbstractCharClass$LazyNonSpace__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(252), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(253), jur_AbstractCharClass$LazyNonDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(254),
    jur_AbstractCharClass$LazyRange__init_(0, 127)]), $rt_createArrayFromData(jl_Object, [$rt_s(255), jur_AbstractCharClass$LazyRange__init_(128, 255)]), $rt_createArrayFromData(jl_Object, [$rt_s(256), jur_AbstractCharClass$LazyRange__init_(256, 383)]), $rt_createArrayFromData(jl_Object, [$rt_s(257), jur_AbstractCharClass$LazyRange__init_(384, 591)]), $rt_createArrayFromData(jl_Object, [$rt_s(258), jur_AbstractCharClass$LazyRange__init_(592, 687)]), $rt_createArrayFromData(jl_Object, [$rt_s(259), jur_AbstractCharClass$LazyRange__init_(688,
    767)]), $rt_createArrayFromData(jl_Object, [$rt_s(260), jur_AbstractCharClass$LazyRange__init_(768, 879)]), $rt_createArrayFromData(jl_Object, [$rt_s(261), jur_AbstractCharClass$LazyRange__init_(880, 1023)]), $rt_createArrayFromData(jl_Object, [$rt_s(262), jur_AbstractCharClass$LazyRange__init_(1024, 1279)]), $rt_createArrayFromData(jl_Object, [$rt_s(263), jur_AbstractCharClass$LazyRange__init_(1280, 1327)]), $rt_createArrayFromData(jl_Object, [$rt_s(264), jur_AbstractCharClass$LazyRange__init_(1328, 1423)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(265), jur_AbstractCharClass$LazyRange__init_(1424, 1535)]), $rt_createArrayFromData(jl_Object, [$rt_s(266), jur_AbstractCharClass$LazyRange__init_(1536, 1791)]), $rt_createArrayFromData(jl_Object, [$rt_s(267), jur_AbstractCharClass$LazyRange__init_(1792, 1871)]), $rt_createArrayFromData(jl_Object, [$rt_s(268), jur_AbstractCharClass$LazyRange__init_(1872, 1919)]), $rt_createArrayFromData(jl_Object, [$rt_s(269), jur_AbstractCharClass$LazyRange__init_(1920, 1983)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(270), jur_AbstractCharClass$LazyRange__init_(2304, 2431)]), $rt_createArrayFromData(jl_Object, [$rt_s(271), jur_AbstractCharClass$LazyRange__init_(2432, 2559)]), $rt_createArrayFromData(jl_Object, [$rt_s(272), jur_AbstractCharClass$LazyRange__init_(2560, 2687)]), $rt_createArrayFromData(jl_Object, [$rt_s(273), jur_AbstractCharClass$LazyRange__init_(2688, 2815)]), $rt_createArrayFromData(jl_Object, [$rt_s(274), jur_AbstractCharClass$LazyRange__init_(2816, 2943)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(275), jur_AbstractCharClass$LazyRange__init_(2944, 3071)]), $rt_createArrayFromData(jl_Object, [$rt_s(276), jur_AbstractCharClass$LazyRange__init_(3072, 3199)]), $rt_createArrayFromData(jl_Object, [$rt_s(277), jur_AbstractCharClass$LazyRange__init_(3200, 3327)]), $rt_createArrayFromData(jl_Object, [$rt_s(278), jur_AbstractCharClass$LazyRange__init_(3328, 3455)]), $rt_createArrayFromData(jl_Object, [$rt_s(279), jur_AbstractCharClass$LazyRange__init_(3456, 3583)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(280), jur_AbstractCharClass$LazyRange__init_(3584, 3711)]), $rt_createArrayFromData(jl_Object, [$rt_s(281), jur_AbstractCharClass$LazyRange__init_(3712, 3839)]), $rt_createArrayFromData(jl_Object, [$rt_s(282), jur_AbstractCharClass$LazyRange__init_(3840, 4095)]), $rt_createArrayFromData(jl_Object, [$rt_s(283), jur_AbstractCharClass$LazyRange__init_(4096, 4255)]), $rt_createArrayFromData(jl_Object, [$rt_s(284), jur_AbstractCharClass$LazyRange__init_(4256, 4351)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(285), jur_AbstractCharClass$LazyRange__init_(4352, 4607)]), $rt_createArrayFromData(jl_Object, [$rt_s(286), jur_AbstractCharClass$LazyRange__init_(4608, 4991)]), $rt_createArrayFromData(jl_Object, [$rt_s(287), jur_AbstractCharClass$LazyRange__init_(4992, 5023)]), $rt_createArrayFromData(jl_Object, [$rt_s(288), jur_AbstractCharClass$LazyRange__init_(5024, 5119)]), $rt_createArrayFromData(jl_Object, [$rt_s(289), jur_AbstractCharClass$LazyRange__init_(5120, 5759)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(290), jur_AbstractCharClass$LazyRange__init_(5760, 5791)]), $rt_createArrayFromData(jl_Object, [$rt_s(291), jur_AbstractCharClass$LazyRange__init_(5792, 5887)]), $rt_createArrayFromData(jl_Object, [$rt_s(292), jur_AbstractCharClass$LazyRange__init_(5888, 5919)]), $rt_createArrayFromData(jl_Object, [$rt_s(293), jur_AbstractCharClass$LazyRange__init_(5920, 5951)]), $rt_createArrayFromData(jl_Object, [$rt_s(294), jur_AbstractCharClass$LazyRange__init_(5952, 5983)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(295), jur_AbstractCharClass$LazyRange__init_(5984, 6015)]), $rt_createArrayFromData(jl_Object, [$rt_s(296), jur_AbstractCharClass$LazyRange__init_(6016, 6143)]), $rt_createArrayFromData(jl_Object, [$rt_s(297), jur_AbstractCharClass$LazyRange__init_(6144, 6319)]), $rt_createArrayFromData(jl_Object, [$rt_s(298), jur_AbstractCharClass$LazyRange__init_(6400, 6479)]), $rt_createArrayFromData(jl_Object, [$rt_s(299), jur_AbstractCharClass$LazyRange__init_(6480, 6527)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(300), jur_AbstractCharClass$LazyRange__init_(6528, 6623)]), $rt_createArrayFromData(jl_Object, [$rt_s(301), jur_AbstractCharClass$LazyRange__init_(6624, 6655)]), $rt_createArrayFromData(jl_Object, [$rt_s(302), jur_AbstractCharClass$LazyRange__init_(6656, 6687)]), $rt_createArrayFromData(jl_Object, [$rt_s(303), jur_AbstractCharClass$LazyRange__init_(7424, 7551)]), $rt_createArrayFromData(jl_Object, [$rt_s(304), jur_AbstractCharClass$LazyRange__init_(7552, 7615)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(305), jur_AbstractCharClass$LazyRange__init_(7616, 7679)]), $rt_createArrayFromData(jl_Object, [$rt_s(306), jur_AbstractCharClass$LazyRange__init_(7680, 7935)]), $rt_createArrayFromData(jl_Object, [$rt_s(307), jur_AbstractCharClass$LazyRange__init_(7936, 8191)]), $rt_createArrayFromData(jl_Object, [$rt_s(308), jur_AbstractCharClass$LazyRange__init_(8192, 8303)]), $rt_createArrayFromData(jl_Object, [$rt_s(309), jur_AbstractCharClass$LazyRange__init_(8304, 8351)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(310), jur_AbstractCharClass$LazyRange__init_(8352, 8399)]), $rt_createArrayFromData(jl_Object, [$rt_s(311), jur_AbstractCharClass$LazyRange__init_(8400, 8447)]), $rt_createArrayFromData(jl_Object, [$rt_s(312), jur_AbstractCharClass$LazyRange__init_(8448, 8527)]), $rt_createArrayFromData(jl_Object, [$rt_s(313), jur_AbstractCharClass$LazyRange__init_(8528, 8591)]), $rt_createArrayFromData(jl_Object, [$rt_s(314), jur_AbstractCharClass$LazyRange__init_(8592, 8703)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(315), jur_AbstractCharClass$LazyRange__init_(8704, 8959)]), $rt_createArrayFromData(jl_Object, [$rt_s(316), jur_AbstractCharClass$LazyRange__init_(8960, 9215)]), $rt_createArrayFromData(jl_Object, [$rt_s(317), jur_AbstractCharClass$LazyRange__init_(9216, 9279)]), $rt_createArrayFromData(jl_Object, [$rt_s(318), jur_AbstractCharClass$LazyRange__init_(9280, 9311)]), $rt_createArrayFromData(jl_Object, [$rt_s(319), jur_AbstractCharClass$LazyRange__init_(9312, 9471)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(320), jur_AbstractCharClass$LazyRange__init_(9472, 9599)]), $rt_createArrayFromData(jl_Object, [$rt_s(321), jur_AbstractCharClass$LazyRange__init_(9600, 9631)]), $rt_createArrayFromData(jl_Object, [$rt_s(322), jur_AbstractCharClass$LazyRange__init_(9632, 9727)]), $rt_createArrayFromData(jl_Object, [$rt_s(323), jur_AbstractCharClass$LazyRange__init_(9728, 9983)]), $rt_createArrayFromData(jl_Object, [$rt_s(324), jur_AbstractCharClass$LazyRange__init_(9984, 10175)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(325), jur_AbstractCharClass$LazyRange__init_(10176, 10223)]), $rt_createArrayFromData(jl_Object, [$rt_s(326), jur_AbstractCharClass$LazyRange__init_(10224, 10239)]), $rt_createArrayFromData(jl_Object, [$rt_s(327), jur_AbstractCharClass$LazyRange__init_(10240, 10495)]), $rt_createArrayFromData(jl_Object, [$rt_s(328), jur_AbstractCharClass$LazyRange__init_(10496, 10623)]), $rt_createArrayFromData(jl_Object, [$rt_s(329), jur_AbstractCharClass$LazyRange__init_(10624,
    10751)]), $rt_createArrayFromData(jl_Object, [$rt_s(330), jur_AbstractCharClass$LazyRange__init_(10752, 11007)]), $rt_createArrayFromData(jl_Object, [$rt_s(331), jur_AbstractCharClass$LazyRange__init_(11008, 11263)]), $rt_createArrayFromData(jl_Object, [$rt_s(332), jur_AbstractCharClass$LazyRange__init_(11264, 11359)]), $rt_createArrayFromData(jl_Object, [$rt_s(333), jur_AbstractCharClass$LazyRange__init_(11392, 11519)]), $rt_createArrayFromData(jl_Object, [$rt_s(334), jur_AbstractCharClass$LazyRange__init_(11520,
    11567)]), $rt_createArrayFromData(jl_Object, [$rt_s(335), jur_AbstractCharClass$LazyRange__init_(11568, 11647)]), $rt_createArrayFromData(jl_Object, [$rt_s(336), jur_AbstractCharClass$LazyRange__init_(11648, 11743)]), $rt_createArrayFromData(jl_Object, [$rt_s(337), jur_AbstractCharClass$LazyRange__init_(11776, 11903)]), $rt_createArrayFromData(jl_Object, [$rt_s(338), jur_AbstractCharClass$LazyRange__init_(11904, 12031)]), $rt_createArrayFromData(jl_Object, [$rt_s(339), jur_AbstractCharClass$LazyRange__init_(12032,
    12255)]), $rt_createArrayFromData(jl_Object, [$rt_s(340), jur_AbstractCharClass$LazyRange__init_(12272, 12287)]), $rt_createArrayFromData(jl_Object, [$rt_s(341), jur_AbstractCharClass$LazyRange__init_(12288, 12351)]), $rt_createArrayFromData(jl_Object, [$rt_s(342), jur_AbstractCharClass$LazyRange__init_(12352, 12447)]), $rt_createArrayFromData(jl_Object, [$rt_s(343), jur_AbstractCharClass$LazyRange__init_(12448, 12543)]), $rt_createArrayFromData(jl_Object, [$rt_s(344), jur_AbstractCharClass$LazyRange__init_(12544,
    12591)]), $rt_createArrayFromData(jl_Object, [$rt_s(345), jur_AbstractCharClass$LazyRange__init_(12592, 12687)]), $rt_createArrayFromData(jl_Object, [$rt_s(346), jur_AbstractCharClass$LazyRange__init_(12688, 12703)]), $rt_createArrayFromData(jl_Object, [$rt_s(347), jur_AbstractCharClass$LazyRange__init_(12704, 12735)]), $rt_createArrayFromData(jl_Object, [$rt_s(348), jur_AbstractCharClass$LazyRange__init_(12736, 12783)]), $rt_createArrayFromData(jl_Object, [$rt_s(349), jur_AbstractCharClass$LazyRange__init_(12784,
    12799)]), $rt_createArrayFromData(jl_Object, [$rt_s(350), jur_AbstractCharClass$LazyRange__init_(12800, 13055)]), $rt_createArrayFromData(jl_Object, [$rt_s(351), jur_AbstractCharClass$LazyRange__init_(13056, 13311)]), $rt_createArrayFromData(jl_Object, [$rt_s(352), jur_AbstractCharClass$LazyRange__init_(13312, 19893)]), $rt_createArrayFromData(jl_Object, [$rt_s(353), jur_AbstractCharClass$LazyRange__init_(19904, 19967)]), $rt_createArrayFromData(jl_Object, [$rt_s(354), jur_AbstractCharClass$LazyRange__init_(19968,
    40959)]), $rt_createArrayFromData(jl_Object, [$rt_s(355), jur_AbstractCharClass$LazyRange__init_(40960, 42127)]), $rt_createArrayFromData(jl_Object, [$rt_s(356), jur_AbstractCharClass$LazyRange__init_(42128, 42191)]), $rt_createArrayFromData(jl_Object, [$rt_s(357), jur_AbstractCharClass$LazyRange__init_(42752, 42783)]), $rt_createArrayFromData(jl_Object, [$rt_s(358), jur_AbstractCharClass$LazyRange__init_(43008, 43055)]), $rt_createArrayFromData(jl_Object, [$rt_s(359), jur_AbstractCharClass$LazyRange__init_(44032,
    55203)]), $rt_createArrayFromData(jl_Object, [$rt_s(360), jur_AbstractCharClass$LazyRange__init_(55296, 56191)]), $rt_createArrayFromData(jl_Object, [$rt_s(361), jur_AbstractCharClass$LazyRange__init_(56192, 56319)]), $rt_createArrayFromData(jl_Object, [$rt_s(362), jur_AbstractCharClass$LazyRange__init_(56320, 57343)]), $rt_createArrayFromData(jl_Object, [$rt_s(363), jur_AbstractCharClass$LazyRange__init_(57344, 63743)]), $rt_createArrayFromData(jl_Object, [$rt_s(364), jur_AbstractCharClass$LazyRange__init_(63744,
    64255)]), $rt_createArrayFromData(jl_Object, [$rt_s(365), jur_AbstractCharClass$LazyRange__init_(64256, 64335)]), $rt_createArrayFromData(jl_Object, [$rt_s(366), jur_AbstractCharClass$LazyRange__init_(64336, 65023)]), $rt_createArrayFromData(jl_Object, [$rt_s(367), jur_AbstractCharClass$LazyRange__init_(65024, 65039)]), $rt_createArrayFromData(jl_Object, [$rt_s(368), jur_AbstractCharClass$LazyRange__init_(65040, 65055)]), $rt_createArrayFromData(jl_Object, [$rt_s(369), jur_AbstractCharClass$LazyRange__init_(65056,
    65071)]), $rt_createArrayFromData(jl_Object, [$rt_s(370), jur_AbstractCharClass$LazyRange__init_(65072, 65103)]), $rt_createArrayFromData(jl_Object, [$rt_s(371), jur_AbstractCharClass$LazyRange__init_(65104, 65135)]), $rt_createArrayFromData(jl_Object, [$rt_s(372), jur_AbstractCharClass$LazyRange__init_(65136, 65279)]), $rt_createArrayFromData(jl_Object, [$rt_s(373), jur_AbstractCharClass$LazyRange__init_(65280, 65519)]), $rt_createArrayFromData(jl_Object, [$rt_s(28), jur_AbstractCharClass$LazyRange__init_(0,
    1114111)]), $rt_createArrayFromData(jl_Object, [$rt_s(374), jur_AbstractCharClass$LazySpecialsBlock__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(375), jur_AbstractCharClass$LazyCategory__init_(0, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(376), jur_AbstractCharClass$LazyCategoryScope__init_(62, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(377), jur_AbstractCharClass$LazyCategory__init_(1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(378), jur_AbstractCharClass$LazyCategory__init_(2, 1)]),
    $rt_createArrayFromData(jl_Object, [$rt_s(379), jur_AbstractCharClass$LazyCategory__init_(3, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(380), jur_AbstractCharClass$LazyCategory__init_(4, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(381), jur_AbstractCharClass$LazyCategory__init_(5, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(382), jur_AbstractCharClass$LazyCategoryScope__init_(448, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(383), jur_AbstractCharClass$LazyCategory__init_(6, 1)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(384), jur_AbstractCharClass$LazyCategory__init_(7, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(385), jur_AbstractCharClass$LazyCategory__init_(8, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(386), jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(387), jur_AbstractCharClass$LazyCategory__init_(9, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(388), jur_AbstractCharClass$LazyCategory__init_(10, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(389),
    jur_AbstractCharClass$LazyCategory__init_(11, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(390), jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(391), jur_AbstractCharClass$LazyCategory__init_(12, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(392), jur_AbstractCharClass$LazyCategory__init_(13, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(393), jur_AbstractCharClass$LazyCategory__init_(14, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(394), jur_AbstractCharClass$LazyCategoryScope__init_0(983040,
    1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(395), jur_AbstractCharClass$LazyCategory__init_(15, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(396), jur_AbstractCharClass$LazyCategory__init_(16, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(397), jur_AbstractCharClass$LazyCategory__init_(18, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(398), jur_AbstractCharClass$LazyCategory__init_0(19, 0, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(399), jur_AbstractCharClass$LazyCategoryScope__init_(1643118592,
    1)]), $rt_createArrayFromData(jl_Object, [$rt_s(400), jur_AbstractCharClass$LazyCategory__init_(20, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(401), jur_AbstractCharClass$LazyCategory__init_(21, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(402), jur_AbstractCharClass$LazyCategory__init_(22, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(403), jur_AbstractCharClass$LazyCategory__init_(23, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(404), jur_AbstractCharClass$LazyCategory__init_(24, 1)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(405), jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(406), jur_AbstractCharClass$LazyCategory__init_(25, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(407), jur_AbstractCharClass$LazyCategory__init_(26, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(408), jur_AbstractCharClass$LazyCategory__init_(27, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(409), jur_AbstractCharClass$LazyCategory__init_(28, 1)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(410), jur_AbstractCharClass$LazyCategory__init_(29, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(411), jur_AbstractCharClass$LazyCategory__init_(30, 0)])]);
}
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch3 = 0;
}
function jur_UCISupplCharSet_accepts($this, $strIndex, $testString) {
    var $low, var$4, var$5, $high, var$7;
    $low = $strIndex + 1 | 0;
    if ($strIndex >= 0) {
        var$4 = $testString.$characters.data;
        var$5 = var$4.length;
        if ($strIndex < var$5) {
            $high = var$4[$strIndex];
            if ($low >= 0 && $low < var$5) {
                $low = var$4[$low];
                $strIndex = $this.$ch3;
                var$7 = (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null));
                }
                a: {
                    var$4 = jl_Character_upperCaseMapping;
                    var$5 = jl_Character_binarySearchTable(var$4, var$7);
                    if (var$5 >= 0) {
                        var$4 = var$4.data;
                        if (var$5 < (var$4.length / 2 | 0)) {
                            var$7 = var$7 + var$4[(var$5 * 2 | 0) + 1 | 0] | 0;
                            break a;
                        }
                    }
                    var$7 = 0;
                }
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
                }
                b: {
                    var$4 = jl_Character_lowerCaseMapping;
                    var$5 = jl_Character_binarySearchTable(var$4, var$7);
                    if (var$5 >= 0) {
                        var$4 = var$4.data;
                        if (var$5 < (var$4.length / 2 | 0)) {
                            $low = var$7 + var$4[(var$5 * 2 | 0) + 1 | 0] | 0;
                            break b;
                        }
                    }
                    $low = 0;
                }
                return $strIndex != $low ? (-1) : 2;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_UCISupplCharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = new jl_String;
    var$2 = $this.$ch3;
    if (var$2 < 65536) {
        var$3 = $rt_createCharArray(1);
        var$3.data[0] = var$2 & 65535;
    } else
        var$3 = $rt_createCharArrayFromData([(55296 | (var$2 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$2 & 1023) & 65535]);
    var$3 = var$3.data;
    jl_String_$callClinit();
    var$2 = var$3.length;
    var$4 = $rt_createCharArray(var$2);
    var$5 = var$4.data;
    var$1.$characters = var$4;
    var$6 = 0;
    while (var$6 < var$2) {
        var$5[var$6] = var$3[var$6];
        var$6 = var$6 + 1 | 0;
    }
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(198));
    jl_AbstractStringBuilder_insert(var$7, var$7.$length, var$1);
    var$1 = new jl_String;
    var$3 = var$7.$buffer;
    var$6 = var$7.$length;
    var$4 = $rt_createCharArray(var$6);
    var$5 = var$4.data;
    var$1.$characters = var$4;
    var$8 = 0;
    while (var$8 < var$6) {
        var$5[var$8] = var$3.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$1;
}
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
function jur_LowSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowSurrogateCharSet__init_0($this, $low) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$low = $low;
}
function jur_LowSurrogateCharSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_LowSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, var$5, var$6, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$rightBound0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    if ($stringIndex >= 0) {
        var$5 = $testString.$characters.data;
        var$6 = var$5.length;
        if ($stringIndex < var$6) {
            a: {
                $low = var$5[$stringIndex];
                if ($stringIndex > $matchResult.$leftBound0) {
                    $high = $stringIndex - 1 | 0;
                    if ($high >= 0 && $high < var$6) {
                        if (!((var$5[$high] & 64512) != 55296 ? 0 : 1))
                            break a;
                        return (-1);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            if ($this.$low != $low)
                return (-1);
            return $this.$next3.$matches(var$4, $testString, $matchResult);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_LowSurrogateCharSet_find($this, $strIndex, $testStr, $matchResult) {
    var var$4, $startStr, $strLength, var$7, var$8, var$9;
    if (!($testStr instanceof jl_String)) {
        var$4 = $matchResult.$rightBound0;
        a: {
            while (true) {
                if ($strIndex > var$4) {
                    $strIndex = (-1);
                    break a;
                }
                if (jur_LowSurrogateCharSet_matches($this, $strIndex, $testStr, $matchResult) >= 0)
                    break;
                $strIndex = $strIndex + 1 | 0;
            }
        }
        return $strIndex;
    }
    $startStr = $matchResult.$leftBound0;
    $strLength = $matchResult.$rightBound0;
    b: {
        while (true) {
            if ($strIndex >= $strLength)
                return (-1);
            var$7 = jl_String_indexOf($testStr, $this.$low, $strIndex);
            if (var$7 < 0)
                return (-1);
            if (var$7 > $startStr) {
                $strIndex = var$7 - 1 | 0;
                if ($strIndex < 0)
                    break b;
                var$8 = $testStr.$characters.data;
                if ($strIndex >= var$8.length)
                    break b;
                if ((var$8[$strIndex] & 64512) != 55296 ? 0 : 1) {
                    $strIndex = var$7 + 1 | 0;
                    continue;
                }
            }
            var$9 = $this.$next3;
            $strIndex = var$7 + 1 | 0;
            if (var$9.$matches($strIndex, $testStr, $matchResult) >= 0)
                break;
        }
        return var$7;
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    $testStr.$suppressionEnabled = 1;
    $testStr.$writableStackTrace = 1;
    $rt_throw($testStr);
}
function jur_LowSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
    var $startStr, var$6, var$7;
    if (!($testStr instanceof jl_String)) {
        a: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break a;
                }
                if (jur_LowSurrogateCharSet_matches($this, $lastIndex, $testStr, $matchResult) >= 0)
                    break;
                $lastIndex = $lastIndex + (-1) | 0;
            }
        }
        return $lastIndex;
    }
    $startStr = $matchResult.$leftBound0;
    b: {
        c: {
            while (true) {
                if ($lastIndex < $strIndex)
                    return (-1);
                var$6 = jl_String_lastIndexOf($testStr, $this.$low, $lastIndex);
                if (var$6 < 0)
                    break c;
                if (var$6 < $strIndex)
                    break c;
                if (var$6 > $startStr) {
                    $lastIndex = var$6 - 1 | 0;
                    if ($lastIndex < 0)
                        break b;
                    var$7 = $testStr.$characters.data;
                    if ($lastIndex >= var$7.length)
                        break b;
                    if ((var$7[$lastIndex] & 64512) != 55296 ? 0 : 1) {
                        $lastIndex = var$6 + (-2) | 0;
                        continue;
                    }
                }
                if ($this.$next3.$matches(var$6 + 1 | 0, $testStr, $matchResult) >= 0)
                    break;
                $lastIndex = var$6 + (-1) | 0;
            }
            return var$6;
        }
        return (-1);
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    $testStr.$suppressionEnabled = 1;
    $testStr.$writableStackTrace = 1;
    $rt_throw($testStr);
}
function jur_LowSurrogateCharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$low;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length;
    jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
    var$4 = var$2.$buffer.data;
    var$4[var$3] = var$1;
    var$5 = new jl_String;
    var$3 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$3);
    var$7 = var$6.data;
    var$5.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$3) {
        var$7[var$8] = var$4[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$5;
}
function jur_LowSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
}
function jur_LowSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high = 0;
}
function jur_HighSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_HighSurrogateCharSet__init_0($this, $high) {
    var var$2, var$3;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$high = $high;
}
function jur_HighSurrogateCharSet_setNext($this, $next) {
    $this.$next3 = $next;
}
function jur_HighSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, var$6, $low, $high;
    $strLength = $matchResult.$rightBound0;
    var$5 = $stringIndex + 1 | 0;
    $strLength = $rt_compare(var$5, $strLength);
    if ($strLength > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    if ($stringIndex >= 0) {
        var$6 = $testString.$characters.data;
        $low = var$6.length;
        if ($stringIndex < $low) {
            a: {
                $high = var$6[$stringIndex];
                if ($strLength < 0) {
                    if (var$5 >= 0 && var$5 < $low) {
                        if (!((var$6[var$5] & 64512) != 56320 ? 0 : 1))
                            break a;
                        return (-1);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            if ($this.$high != $high)
                return (-1);
            return $this.$next3.$matches(var$5, $testString, $matchResult);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_HighSurrogateCharSet_find($this, $strIndex, $testStr, $matchResult) {
    var $strLength, var$5, var$6;
    if (!($testStr instanceof jl_String)) {
        $strLength = $matchResult.$rightBound0;
        a: {
            while (true) {
                if ($strIndex > $strLength) {
                    $strIndex = (-1);
                    break a;
                }
                if (jur_HighSurrogateCharSet_matches($this, $strIndex, $testStr, $matchResult) >= 0)
                    break;
                $strIndex = $strIndex + 1 | 0;
            }
        }
        return $strIndex;
    }
    $strLength = $matchResult.$rightBound0;
    b: {
        while (true) {
            if ($strIndex >= $strLength)
                return (-1);
            var$5 = jl_String_indexOf($testStr, $this.$high, $strIndex);
            if (var$5 < 0)
                return (-1);
            $strIndex = var$5 + 1 | 0;
            if ($strIndex < $strLength) {
                if ($strIndex < 0)
                    break b;
                var$6 = $testStr.$characters.data;
                if ($strIndex >= var$6.length)
                    break b;
                if ((var$6[$strIndex] & 64512) != 56320 ? 0 : 1) {
                    $strIndex = var$5 + 2 | 0;
                    continue;
                }
            }
            if ($this.$next3.$matches($strIndex, $testStr, $matchResult) >= 0)
                break;
        }
        return var$5;
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    $testStr.$suppressionEnabled = 1;
    $testStr.$writableStackTrace = 1;
    $rt_throw($testStr);
}
function jur_HighSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
    var $strLength, var$6, var$7;
    if (!($testStr instanceof jl_String)) {
        a: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break a;
                }
                if (jur_HighSurrogateCharSet_matches($this, $lastIndex, $testStr, $matchResult) >= 0)
                    break;
                $lastIndex = $lastIndex + (-1) | 0;
            }
        }
        return $lastIndex;
    }
    $strLength = $matchResult.$rightBound0;
    b: {
        c: {
            while (true) {
                if ($lastIndex < $strIndex)
                    return (-1);
                var$6 = jl_String_lastIndexOf($testStr, $this.$high, $lastIndex);
                if (var$6 < 0)
                    break c;
                if (var$6 < $strIndex)
                    break c;
                $lastIndex = var$6 + 1 | 0;
                if ($lastIndex < $strLength) {
                    if ($lastIndex < 0)
                        break b;
                    var$7 = $testStr.$characters.data;
                    if ($lastIndex >= var$7.length)
                        break b;
                    if ((var$7[$lastIndex] & 64512) != 56320 ? 0 : 1) {
                        $lastIndex = var$6 + (-1) | 0;
                        continue;
                    }
                }
                if ($this.$next3.$matches($lastIndex, $testStr, $matchResult) >= 0)
                    break;
                $lastIndex = var$6 + (-1) | 0;
            }
            return var$6;
        }
        return (-1);
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    $testStr.$suppressionEnabled = 1;
    $testStr.$writableStackTrace = 1;
    $rt_throw($testStr);
}
function jur_HighSurrogateCharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$high;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length;
    jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
    var$4 = var$2.$buffer.data;
    var$4[var$3] = var$1;
    var$5 = new jl_String;
    var$3 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$3);
    var$7 = var$6.data;
    var$5.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$3) {
        var$7[var$8] = var$4[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$5;
}
function jur_HighSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high != $this.$high ? 0 : 1;
}
function jur_HighSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_SupplCharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$high0 = 0;
    a.$low0 = 0;
    a.$ch4 = 0;
}
function jur_SupplCharSet__init_(var_0) {
    var var_1 = new jur_SupplCharSet();
    jur_SupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplCharSet__init_0($this, $ch) {
    var var$2, var$3, $chUTF16;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
    $this.$charCount = 1;
    $this.$charCount = 2;
    $this.$ch4 = $ch;
    if ($ch < 65536) {
        $chUTF16 = $rt_createCharArray(1);
        $chUTF16.data[0] = $ch & 65535;
    } else
        $chUTF16 = $rt_createCharArrayFromData([(55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $ch & 1023) & 65535]);
    $chUTF16 = $chUTF16.data;
    $this.$high0 = $chUTF16[0];
    $this.$low0 = $chUTF16[1];
}
function jur_SupplCharSet_accepts($this, $strIndex, $testString) {
    var $low, var$4, var$5, $high;
    $low = $strIndex + 1 | 0;
    if ($strIndex >= 0) {
        var$4 = $testString.$characters.data;
        var$5 = var$4.length;
        if ($strIndex < var$5) {
            $high = var$4[$strIndex];
            if ($low >= 0 && $low < var$5) {
                $low = var$4[$low];
                return $this.$high0 == $high && $this.$low0 == $low ? 2 : (-1);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
}
function jur_SupplCharSet_find($this, $strIndex, $testStr, $matchResult) {
    var $strLength, var$5, $ch, var$7, var$8;
    if ($testStr instanceof jl_String) {
        $strLength = $matchResult.$rightBound0;
        a: {
            while ($strIndex < $strLength) {
                $strIndex = jl_String_indexOf($testStr, $this.$high0, $strIndex);
                if ($strIndex < 0)
                    return (-1);
                $strIndex = $strIndex + 1 | 0;
                if ($strIndex >= $strLength)
                    continue;
                if ($strIndex < 0)
                    break a;
                var$5 = $testStr.$characters.data;
                if ($strIndex >= var$5.length)
                    break a;
                $ch = var$5[$strIndex];
                if ($this.$low0 == $ch && $this.$next3.$matches($strIndex + 1 | 0, $testStr, $matchResult) >= 0)
                    return $strIndex + (-1) | 0;
                $strIndex = $strIndex + 1 | 0;
            }
            return (-1);
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        $testStr.$suppressionEnabled = 1;
        $testStr.$writableStackTrace = 1;
        $rt_throw($testStr);
    }
    var$7 = $matchResult.$rightBound0;
    b: {
        c: {
            d: {
                while (true) {
                    if ($strIndex > var$7) {
                        $strIndex = (-1);
                        break d;
                    }
                    if (($strIndex + $this.$charCount | 0) > $matchResult.$rightBound0) {
                        $matchResult.$hitEnd = 1;
                        $ch = (-1);
                    } else {
                        $ch = $strIndex + 1 | 0;
                        if ($strIndex < 0)
                            break b;
                        var$5 = $testStr.$characters.data;
                        $strLength = var$5.length;
                        if ($strIndex >= $strLength)
                            break b;
                        var$8 = var$5[$strIndex];
                        if ($ch < 0)
                            break c;
                        if ($ch >= $strLength)
                            break c;
                        $strLength = var$5[$ch];
                        $ch = $this.$high0 == var$8 && $this.$low0 == $strLength ? 2 : (-1);
                        $ch = $ch < 0 ? (-1) : $this.$next3.$matches($strIndex + $ch | 0, $testStr, $matchResult);
                    }
                    if ($ch >= 0)
                        break;
                    $strIndex = $strIndex + 1 | 0;
                }
            }
            return $strIndex;
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_0($testStr);
        $rt_throw($testStr);
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0($testStr);
    $rt_throw($testStr);
}
function jur_SupplCharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
    var var$5, var$6, var$7, var$8, var$9;
    if ($testStr instanceof jl_String) {
        a: {
            b: {
                while (true) {
                    if ($lastIndex < $strIndex)
                        return (-1);
                    $lastIndex = jl_String_lastIndexOf($testStr, $this.$low0, $lastIndex) + (-1) | 0;
                    if ($lastIndex < 0)
                        break b;
                    if ($lastIndex < $strIndex)
                        break b;
                    var$5 = $this.$high0;
                    if ($lastIndex < 0)
                        break a;
                    var$6 = $testStr.$characters.data;
                    if ($lastIndex >= var$6.length)
                        break a;
                    if (var$5 == var$6[$lastIndex] && $this.$next3.$matches($lastIndex + 2 | 0, $testStr, $matchResult) >= 0)
                        break;
                    $lastIndex = $lastIndex + (-1) | 0;
                }
                return $lastIndex;
            }
            return (-1);
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        $testStr.$suppressionEnabled = 1;
        $testStr.$writableStackTrace = 1;
        $rt_throw($testStr);
    }
    c: {
        d: {
            e: {
                while (true) {
                    if ($lastIndex < $strIndex) {
                        $lastIndex = (-1);
                        break e;
                    }
                    if (($lastIndex + $this.$charCount | 0) > $matchResult.$rightBound0) {
                        $matchResult.$hitEnd = 1;
                        var$5 = (-1);
                    } else {
                        var$7 = $lastIndex + 1 | 0;
                        if ($lastIndex < 0)
                            break c;
                        var$6 = $testStr.$characters.data;
                        var$5 = var$6.length;
                        if ($lastIndex >= var$5)
                            break c;
                        var$8 = var$6[$lastIndex];
                        if (var$7 < 0)
                            break d;
                        if (var$7 >= var$5)
                            break d;
                        var$9 = var$6[var$7];
                        var$5 = $this.$high0 == var$8 && $this.$low0 == var$9 ? 2 : (-1);
                        var$5 = var$5 < 0 ? (-1) : $this.$next3.$matches($lastIndex + var$5 | 0, $testStr, $matchResult);
                    }
                    if (var$5 >= 0)
                        break;
                    $lastIndex = $lastIndex + (-1) | 0;
                }
            }
            return $lastIndex;
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_0($testStr);
        $rt_throw($testStr);
    }
    $testStr = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_0($testStr);
    $rt_throw($testStr);
}
function jur_SupplCharSet_getName($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$high0;
    var$2 = $this.$low0;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
    var$3.$buffer.data[var$4] = var$1;
    var$1 = var$3.$length;
    jl_AbstractStringBuilder_insertSpace(var$3, var$1, var$1 + 1 | 0);
    var$5 = var$3.$buffer.data;
    var$5[var$1] = var$2;
    var$6 = new jl_String;
    var$2 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$2);
    var$8 = var$7.data;
    var$6.$characters = var$7;
    var$4 = 0;
    while (var$4 < var$2) {
        var$8[var$4] = var$5[var$4 + 0 | 0];
        var$4 = var$4 + 1 | 0;
    }
    return var$6;
}
function jur_SupplCharSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return $set.$ch4 != $this.$ch4 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains1($this.$ch4);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
}
var jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator);
function jur_AbstractLineTerminator$1_isLineTerminator($this, $ch) {
    return $ch != 10 ? 0 : 1;
}
function jur_AbstractLineTerminator$1_isAfterLineTerminator($this, $ch, $ch2) {
    return $ch != 10 ? 0 : 1;
}
var jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator);
function jur_AbstractLineTerminator$2_isLineTerminator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_AbstractLineTerminator$2_isAfterLineTerminator($this, $ch, $ch2) {
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
}
function jur_SequenceSet$IntHash() {
    var a = this; jl_Object.call(a);
    a.$table = null;
    a.$values = null;
    a.$mask2 = 0;
    a.$size8 = 0;
}
function jur_SequenceSet$IntHash__init_(var_0) {
    var var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet$IntHash__init_0($this, $size) {
    var var$2, var$3;
    while (true) {
        var$2 = $this.$mask2;
        if ($size < var$2)
            break;
        $this.$mask2 = var$2 << 1 | 1;
    }
    var$3 = var$2 << 1 | 1;
    $this.$mask2 = var$3;
    var$3 = var$3 + 1 | 0;
    $this.$table = $rt_createIntArray(var$3);
    $this.$values = $rt_createIntArray(var$3);
    $this.$size8 = $size;
}
function jur_SequenceSet$IntHash_put($this, $key, $value) {
    var $i, var$4, $hashCode, var$6;
    $i = 0;
    var$4 = $this.$mask2;
    $hashCode = $key & var$4;
    while (true) {
        var$6 = $this.$table.data;
        if (!var$6[$hashCode])
            break;
        if (var$6[$hashCode] == $key)
            break;
        $i = ($i + 1 | 0) & var$4;
        $hashCode = ($hashCode + $i | 0) & var$4;
    }
    var$6[$hashCode] = $key;
    $this.$values.data[$hashCode] = $value;
}
function jur_SequenceSet$IntHash_get($this, $key) {
    var var$2, $hashCode, $i, $storedKey;
    var$2 = $this.$mask2;
    $hashCode = $key & var$2;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values.data[$hashCode];
        $i = ($i + 1 | 0) & var$2;
        $hashCode = ($hashCode + $i | 0) & var$2;
    }
    return $this.$size8;
}
var otpp_ResourceAccessor = $rt_classWithoutFields();
var otciu_UnicodeHelper = $rt_classWithoutFields();
function otciu_UnicodeHelper_decodeIntPairsDiff($text) {
    var $flow, $data, var$4, var$5, $sz, $j, $lastKey, $lastValue, $i, var$11, var$12;
    $flow = new otci_CharFlow;
    $data = $text.$characters.data;
    var$4 = $rt_createCharArray($data.length);
    var$5 = var$4.data;
    $sz = 0;
    $j = var$5.length;
    while ($sz < $j) {
        var$5[$sz] = $data[$sz];
        $sz = $sz + 1 | 0;
    }
    $flow.$characters0 = var$4;
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    var$4 = $data.data;
    $j = 0;
    $lastKey = 0;
    $lastValue = 0;
    $i = 0;
    while ($i < $sz) {
        var$11 = otci_Base46_decodeUnsigned($flow);
        var$12 = var$11 / 2 | 0;
        if (var$11 % 2 | 0)
            var$12 =  -var$12 | 0;
        $lastKey = $lastKey + var$12 | 0;
        var$11 = otci_Base46_decodeUnsigned($flow);
        var$12 = var$11 / 2 | 0;
        if (var$11 % 2 | 0)
            var$12 =  -var$12 | 0;
        $lastValue = $lastValue + var$12 | 0;
        var$12 = $j + 1 | 0;
        var$4[$j] = $lastKey;
        $j = var$12 + 1 | 0;
        var$4[var$12] = $lastValue;
        $i = $i + 1 | 0;
    }
    return $data;
}
function otciu_UnicodeHelper_decodeCaseMapping($text) {
    var $flow, $data, var$4, var$5, $sz, $last, $i, var$9, var$10, var$11;
    $flow = new otci_CharFlow;
    $data = $text.$characters.data;
    var$4 = $rt_createCharArray($data.length);
    var$5 = var$4.data;
    $sz = 0;
    $last = var$5.length;
    while ($sz < $last) {
        var$5[$sz] = $data[$sz];
        $sz = $sz + 1 | 0;
    }
    $flow.$characters0 = var$4;
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    var$4 = $data.data;
    $last = 0;
    $i = 0;
    while ($i < $sz) {
        $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
        var$9 = $i * 2 | 0;
        var$4[var$9] = $last;
        var$10 = var$9 + 1 | 0;
        var$11 = otci_Base46_decodeUnsigned($flow);
        var$9 = var$11 / 2 | 0;
        if (var$11 % 2 | 0)
            var$9 =  -var$9 | 0;
        var$4[var$10] = var$9;
        $i = $i + 1 | 0;
    }
    return $data;
}
function otciu_UnicodeHelper_decodeByte($c) {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
}
function otciu_UnicodeHelper_extractRle($encoded) {
    var $ranges, var$3, var$4, $index, $rangeIndex, $codePoint, $i, $buffer, $digit, var$11, var$12, $b, $count, $pos, $j, var$17, var$18;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    var$3 = $ranges.data;
    var$4 = $rt_createByteArray(16384).data;
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    a: {
        b: {
            while (true) {
                $buffer = $encoded.$characters.data;
                $digit = $rt_compare($i, $buffer.length);
                if ($digit >= 0) {
                    var$11 = $ranges.constructor;
                    if (var$11 === null)
                        $encoded = null;
                    else {
                        $encoded = var$11.classObject;
                        if ($encoded === null) {
                            $encoded = new jl_Class;
                            $encoded.$platformClass = var$11;
                            var$12 = $encoded;
                            var$11.classObject = var$12;
                        }
                    }
                    $encoded = jl_Class_getComponentType($encoded);
                    if ($encoded === null) {
                        $encoded = new jl_NullPointerException;
                        $encoded.$suppressionEnabled = 1;
                        $encoded.$writableStackTrace = 1;
                        $rt_throw($encoded);
                    }
                    if ($encoded === $rt_cls($rt_voidcls())) {
                        $encoded = new jl_IllegalArgumentException;
                        $encoded.$suppressionEnabled = 1;
                        $encoded.$writableStackTrace = 1;
                        $rt_throw($encoded);
                    }
                    if ($rangeIndex < 0) {
                        $encoded = new jl_NegativeArraySizeException;
                        $encoded.$suppressionEnabled = 1;
                        $encoded.$writableStackTrace = 1;
                        $rt_throw($encoded);
                    }
                    var$12 = jlr_Array_newInstanceImpl($encoded.$platformClass, $rangeIndex);
                    $index = var$3.length;
                    if ($rangeIndex < $index)
                        $index = $rangeIndex;
                    $rangeIndex = 0;
                    while ($rangeIndex < $index) {
                        var$12.data[$rangeIndex] = var$3[$rangeIndex];
                        $rangeIndex = $rangeIndex + 1 | 0;
                    }
                    return var$12;
                }
                if ($i < 0)
                    break;
                if ($digit >= 0)
                    break;
                $b = otciu_UnicodeHelper_decodeByte($buffer[$i]);
                if ($b == 64) {
                    $i = $i + 1 | 0;
                    if ($i < 0)
                        break b;
                    $buffer = $encoded.$characters.data;
                    if ($i >= $buffer.length)
                        break b;
                    $b = otciu_UnicodeHelper_decodeByte($buffer[$i]);
                    $count = 0;
                    $pos = 1;
                    $j = 0;
                    while ($j < 3) {
                        $i = $i + 1 | 0;
                        if ($i < 0)
                            break a;
                        $buffer = $encoded.$characters.data;
                        if ($i >= $buffer.length)
                            break a;
                        $count = $count | $rt_imul($pos, otciu_UnicodeHelper_decodeByte($buffer[$i]));
                        $pos = $pos * 64 | 0;
                        $j = $j + 1 | 0;
                    }
                } else if ($b < 32)
                    $count = 1;
                else {
                    $b = ($b - 32 | 0) << 24 >> 24;
                    $i = $i + 1 | 0;
                    $count = otciu_UnicodeHelper_decodeByte(jl_String_charAt($encoded, $i));
                }
                if (!$b && $count >= 128) {
                    if ($index > 0) {
                        $digit = $rangeIndex + 1 | 0;
                        var$11 = new otciu_UnicodeHelper$Range;
                        $pos = $codePoint + $index | 0;
                        $buffer = $rt_createByteArray($index);
                        $j = var$4.length;
                        if ($index < $j)
                            $j = $index;
                        var$17 = $buffer.data;
                        var$18 = 0;
                        while (var$18 < $j) {
                            var$17[var$18] = var$4[var$18];
                            var$18 = var$18 + 1 | 0;
                        }
                        var$11.$start1 = $codePoint;
                        var$11.$end0 = $pos;
                        var$11.$data1 = $buffer;
                        var$3[$rangeIndex] = var$11;
                        $rangeIndex = $digit;
                    }
                    $codePoint = $codePoint + ($index + $count | 0) | 0;
                    $index = 0;
                } else {
                    $digit = $index + $count | 0;
                    $pos = var$4.length;
                    if ($digit < $pos)
                        $j = $rangeIndex;
                    else {
                        $j = $rangeIndex + 1 | 0;
                        var$11 = new otciu_UnicodeHelper$Range;
                        var$18 = $codePoint + $index | 0;
                        $buffer = $rt_createByteArray($index);
                        if ($index < $pos)
                            $pos = $index;
                        var$17 = $buffer.data;
                        $index = 0;
                        while ($index < $pos) {
                            var$17[$index] = var$4[$index];
                            $index = $index + 1 | 0;
                        }
                        var$11.$start1 = $codePoint;
                        var$11.$end0 = var$18;
                        var$11.$data1 = $buffer;
                        var$3[$rangeIndex] = var$11;
                        $codePoint = $codePoint + $digit | 0;
                        $index = 0;
                    }
                    while (true) {
                        $rangeIndex = $count + (-1) | 0;
                        if ($count <= 0)
                            break;
                        $digit = $index + 1 | 0;
                        var$4[$index] = $b;
                        $index = $digit;
                        $count = $rangeIndex;
                    }
                    $rangeIndex = $j;
                }
                $i = $i + 1 | 0;
            }
            $encoded = new jl_StringIndexOutOfBoundsException;
            $encoded.$suppressionEnabled = 1;
            $encoded.$writableStackTrace = 1;
            $rt_throw($encoded);
        }
        $encoded = new jl_StringIndexOutOfBoundsException;
        $encoded.$suppressionEnabled = 1;
        $encoded.$writableStackTrace = 1;
        $rt_throw($encoded);
    }
    $encoded = new jl_StringIndexOutOfBoundsException;
    $encoded.$suppressionEnabled = 1;
    $encoded.$writableStackTrace = 1;
    $rt_throw($encoded);
}
var jur_IntHash = $rt_classWithoutFields();
function otci_CharFlow() {
    var a = this; jl_Object.call(a);
    a.$characters0 = null;
    a.$pointer = 0;
}
var otci_Base46 = $rt_classWithoutFields();
function otci_Base46_decodeUnsigned($seq) {
    var $number, $pos, var$4, $hasMore, $digit;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters0.data;
        $hasMore = $seq.$pointer;
        $seq.$pointer = $hasMore + 1 | 0;
        $digit = var$4[$hasMore];
        $digit = $digit < 34 ? $digit - 32 | 0 : $digit >= 92 ? ($digit - 32 | 0) - 2 | 0 : ($digit - 32 | 0) - 1 | 0;
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
}
var jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazySpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpace__init_0($this) {}
function jur_AbstractCharClass$LazySpace_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add0(var$1, 9, 13), 32);
}
var jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyDigit__init_0($this) {}
function jur_AbstractCharClass$LazyDigit_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(var$1, 48, 57);
}
var jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyLower__init_() {
    var var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyLower__init_0($this) {}
function jur_AbstractCharClass$LazyLower_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(var$1, 97, 122);
}
var jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyUpper__init_() {
    var var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyUpper__init_0($this) {}
function jur_AbstractCharClass$LazyUpper_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(var$1, 65, 90);
}
var jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyASCII__init_() {
    var var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyASCII__init_0($this) {}
function jur_AbstractCharClass$LazyASCII_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(var$1, 0, 127);
}
var jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyAlpha__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlpha__init_0($this) {}
function jur_AbstractCharClass$LazyAlpha_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90);
}
var jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha);
function jur_AbstractCharClass$LazyAlnum__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlnum__init_0($this) {}
function jur_AbstractCharClass$LazyAlnum_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57);
}
var jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyPunct__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPunct__init_0($this) {}
function jur_AbstractCharClass$LazyPunct_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 33, 64), 91, 96), 123, 126);
}
var jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum);
function jur_AbstractCharClass$LazyGraph__init_() {
    var var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyGraph__init_0($this) {}
function jur_AbstractCharClass$LazyGraph_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57), 33, 64), 91, 96), 123, 126);
}
var jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph);
function jur_AbstractCharClass$LazyPrint__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPrint__init_0($this) {}
function jur_AbstractCharClass$LazyPrint_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57), 33, 64), 91, 96), 123, 126), 32);
}
var jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyBlank__init_() {
    var var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyBlank__init_0($this) {}
function jur_AbstractCharClass$LazyBlank_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add(var$1, 32), 9);
}
var jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyCntrl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCntrl__init_0($this) {}
function jur_AbstractCharClass$LazyCntrl_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add0(var$1, 0, 31), 127);
}
var jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyXDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyXDigit__init_0($this) {}
function jur_AbstractCharClass$LazyXDigit_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 48, 57), 97, 102), 65, 70);
}
var jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLowerCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_0($this) {}
function jur_AbstractCharClass$LazyJavaLowerCase_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaLowerCase$1;
    $chCl.$this$041 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUpperCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_0($this) {}
function jur_AbstractCharClass$LazyJavaUpperCase_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaUpperCase$1;
    $chCl.$this$042 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaWhitespace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_0($this) {}
function jur_AbstractCharClass$LazyJavaWhitespace_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaWhitespace$1;
    var$1.$this$043 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
}
var jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaMirrored__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaMirrored__init_0($this) {}
function jur_AbstractCharClass$LazyJavaMirrored_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaMirrored$1;
    var$1.$this$044 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
}
var jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaDefined__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDefined__init_0($this) {}
function jur_AbstractCharClass$LazyJavaDefined_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaDefined$1;
    $chCl.$this$045 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    ju_BitSet_set0(var$2, 0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDigit__init_0($this) {}
function jur_AbstractCharClass$LazyJavaDigit_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaDigit$1;
    $chCl.$this$046 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0($this) {}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1;
    $chCl.$this$047 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaISOControl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaISOControl__init_0($this) {}
function jur_AbstractCharClass$LazyJavaISOControl_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaISOControl$1;
    var$1.$this$048 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
}
var jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0($this) {}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1;
    $chCl.$this$049 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0($this) {}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1;
    $chCl.$this$050 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLetter__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetter__init_0($this) {}
function jur_AbstractCharClass$LazyJavaLetter_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaLetter$1;
    $chCl.$this$051 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0($this) {}
function jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1;
    $chCl.$this$052 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaSpaceChar__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_0($this) {}
function jur_AbstractCharClass$LazyJavaSpaceChar_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1;
    var$1.$this$053 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
}
var jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaTitleCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_0($this) {}
function jur_AbstractCharClass$LazyJavaTitleCase_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaTitleCase$1;
    var$1.$this$054 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
}
var jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0($this) {}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1;
    $chCl.$this$055 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0($this) {}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1;
    $chCl.$this$056 = $this;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyWord__init_0($this) {}
function jur_AbstractCharClass$LazyWord_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57), 95);
}
var jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord);
function jur_AbstractCharClass$LazyNonWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonWord__init_0($this) {}
function jur_AbstractCharClass$LazyNonWord_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    $chCl.$bits = var$2;
    $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0($chCl, 97, 122), 65, 90), 48, 57), 95), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace);
function jur_AbstractCharClass$LazyNonSpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonSpace__init_0($this) {}
function jur_AbstractCharClass$LazyNonSpace_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    $chCl.$bits = var$2;
    $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add(jur_CharClass_add0($chCl, 9, 13), 32), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit);
function jur_AbstractCharClass$LazyNonDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonDigit__init_0($this) {}
function jur_AbstractCharClass$LazyNonDigit_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    $chCl.$bits = var$2;
    $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add0($chCl, 48, 57), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_AbstractCharClass$LazyRange() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start4 = 0;
    a.$end1 = 0;
}
function jur_AbstractCharClass$LazyRange__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyRange__init_0($this, $start, $end) {
    $this.$start4 = $start;
    $this.$end1 = $end;
}
function jur_AbstractCharClass$LazyRange_computeValue($this) {
    var $chCl, var$2;
    $chCl = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    $chCl.$bits = var$2;
    return jur_CharClass_add0($chCl, $this.$start4, $this.$end1);
}
var jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazySpecialsBlock__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpecialsBlock__init_0($this) {}
function jur_AbstractCharClass$LazySpecialsBlock_computeValue($this) {
    var var$1, var$2;
    var$1 = new jur_CharClass;
    jur_AbstractCharClass_$callClinit();
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data2 = $rt_createIntArray(0);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add0(var$1, 65279, 65279), 65520, 65533);
}
function jur_AbstractCharClass$LazyCategory() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates = 0;
}
function jur_AbstractCharClass$LazyCategory__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategory__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategory__init_1($this, $cat, $mayContainSupplCodepoints) {
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory_computeValue($this) {
    var $chCl, var$2, var$3;
    $chCl = new jur_UnicodeCategory;
    var$2 = $this.$category;
    jur_AbstractCharClass_$callClinit();
    var$3 = new ju_BitSet;
    var$3.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$3;
    $chCl.$category0 = var$2;
    if ($this.$containsAllSurrogates)
        ju_BitSet_set0(var$3, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
}
function jur_AbstractCharClass$LazyCategoryScope() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category1 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates0 = 0;
}
function jur_AbstractCharClass$LazyCategoryScope__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategoryScope__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategoryScope__init_1($this, $cat, $mayContainSupplCodepoints) {
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope_computeValue($this) {
    var $chCl, var$2, var$3;
    $chCl = new jur_UnicodeCategoryScope;
    var$2 = $this.$category1;
    jur_AbstractCharClass_$callClinit();
    var$3 = new ju_BitSet;
    var$3.$data2 = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$3;
    $chCl.$category0 = var$2;
    if ($this.$containsAllSurrogates0)
        ju_BitSet_set0(var$3, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
}
function otciu_UnicodeHelper$Range() {
    var a = this; jl_Object.call(a);
    a.$start1 = 0;
    a.$end0 = 0;
    a.$data1 = null;
}
var ju_Arrays = $rt_classWithoutFields();
function ju_Arrays_fill($a, $val) {
    var var$3, var$4, var$5, var$6;
    $a = $a.data;
    var$3 = 0;
    var$4 = $a.length;
    if (var$3 <= var$4) {
        while (var$3 < var$4) {
            var$5 = var$3 + 1 | 0;
            $a[var$3] = $val;
            var$3 = var$5;
        }
        return;
    }
    var$6 = new jl_IllegalArgumentException;
    var$6.$suppressionEnabled = 1;
    var$6.$writableStackTrace = 1;
    $rt_throw(var$6);
}
function ju_Arrays_binarySearch($a, $fromIndex, $toIndex, $key) {
    var $u, var$6, var$7, $i, $e;
    $u = $rt_compare($fromIndex, $toIndex);
    if ($u > 0) {
        var$6 = new jl_IllegalArgumentException;
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        $rt_throw(var$6);
    }
    if (!$u)
        return (-1);
    $u = $toIndex - 1 | 0;
    while (true) {
        var$7 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$7[$i];
        if ($e == $key)
            break;
        if ($key >= $e) {
            $fromIndex = $i + 1 | 0;
            if ($fromIndex > $u)
                return ( -$i | 0) - 2 | 0;
        } else {
            $u = $i - 1 | 0;
            if ($u < $fromIndex)
                return ( -$i | 0) - 1 | 0;
        }
    }
    return $i;
}
function ju_Arrays_equals($a, $a2) {
    var var$3, $i, var$5, var$6;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        $a = $a.data;
        $a2 = $a2.data;
        var$3 = $a.length;
        if (var$3 == $a2.length) {
            $i = 0;
            while ($i < var$3) {
                var$5 = $a[$i];
                var$6 = $a2[$i];
                if (!(var$5 === var$6 ? 1 : var$5 === null ? (var$6 !== null ? 0 : 1) : var$5 !== var$6 ? 0 : 1))
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
    }
    return 0;
}
var jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException);
var otjt_ArrayBufferView = $rt_classWithoutFields();
var otjt_Float32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var otjt_Int16Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var otjt_Int32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var otjt_Uint8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException);
var cbgu_NumberUtils = $rt_classWithoutFields();
function cgxgbtp_Preloader$4() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$assetFileUrl = null;
    a.$val$loadAssets = 0;
    a.$this$0 = null;
}
function cgxgbtp_Preloader$4_onProgress($this, $amount) {}
function cgxgbtp_Preloader$4_onFailure($this, $url) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if (jl_System_outCache === null) {
        var$2 = new ji_PrintStream;
        var$2.$out = otcic_StdoutOutputStream_INSTANCE;
        $url = new jl_StringBuilder;
        $url.$buffer = $rt_createCharArray(16);
        var$2.$sb = $url;
        var$2.$buffer2 = $rt_createCharArray(32);
        var$2.$autoFlush = 0;
        jnci_UTF8Charset_$callClinit();
        var$2.$charset = jnci_UTF8Charset_INSTANCE;
        jl_System_outCache = var$2;
    }
    $url = jl_System_outCache;
    var$2 = $this.$val$assetFileUrl;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(412));
    var$4 = var$3.$length;
    if (var$2 === null)
        var$2 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
    var$5 = new jl_String;
    var$6 = var$3.$buffer;
    var$7 = var$3.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2 = $url.$sb;
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, var$5);
    var$10 = var$2.$length;
    jl_AbstractStringBuilder_insertSpace(var$2, var$10, var$10 + 1 | 0);
    var$2.$buffer.data[var$10] = 10;
    ji_PrintStream_printSB($url);
}
function cgxgbtp_Preloader$4_onSuccess($this, $url, $result) {
    var var$3, var$4, var$5, $i, $type, var$8, var$9, $line, var$11, $asset;
    var$3 = (jur_Pattern_split(jur_Pattern_compile($rt_s(114), 0), $result, 0)).data;
    var$4 = var$3.length;
    var$5 = 0;
    while (true) {
        if (var$5 >= var$4) {
            a: {
                $url = $this.$this$0;
                $url.$assetTotal = $url.$assets.$size;
                if ($this.$val$loadAssets) {
                    $i = 0;
                    while (true) {
                        $url = $this.$this$0;
                        $result = $url.$assets;
                        var$4 = $rt_compare($i, $result.$size);
                        if (var$4 >= 0)
                            break a;
                        if (var$4 >= 0) {
                            $type = new jl_IndexOutOfBoundsException;
                            $url = new jl_StringBuilder;
                            $url.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert($url, $url.$length, $rt_s(36));
                            jl_AbstractStringBuilder_insert0($url, $url.$length, $i, 10);
                            jl_AbstractStringBuilder_insert($url, $url.$length, $rt_s(37));
                            $i = $result.$size;
                            jl_AbstractStringBuilder_insert0($url, $url.$length, $i, 10);
                            $result = new jl_String;
                            var$3 = $url.$buffer;
                            var$4 = $url.$length;
                            jl_String_$callClinit();
                            var$8 = $rt_createCharArray(var$4);
                            var$9 = var$8.data;
                            $result.$characters = var$8;
                            var$5 = 0;
                            while (var$5 < var$4) {
                                var$9[var$5] = var$3.data[var$5 + 0 | 0];
                                var$5 = var$5 + 1 | 0;
                            }
                            $type.$suppressionEnabled = 1;
                            $type.$writableStackTrace = 1;
                            $type.$message = $result;
                            $rt_throw($type);
                        }
                        cgxgbtp_Preloader_loadSingleAsset($url, $result.$items.data[$i]);
                        $i = $i + 1 | 0;
                    }
                }
            }
            return 0;
        }
        $line = var$3[var$5];
        var$9 = (jur_Pattern_split(jur_Pattern_compile($rt_s(112), 0), $line, 0)).data;
        if (var$9.length != 4)
            break;
        cgxgbtp_AssetType_$callClinit();
        $type = cgxgbtp_AssetType_Text;
        if (jl_String_equals(var$9[0], $rt_s(413)))
            $type = cgxgbtp_AssetType_Image;
        if (jl_String_equals(var$9[0], $rt_s(414)))
            $type = cgxgbtp_AssetType_Binary;
        if (jl_String_equals(var$9[0], $rt_s(415)))
            $type = cgxgbtp_AssetType_Audio;
        if (jl_String_equals(var$9[0], $rt_s(252)))
            $type = cgxgbtp_AssetType_Directory;
        $url = var$9[2];
        if ($url === null) {
            $url = new jl_NumberFormatException;
            $url.$suppressionEnabled = 1;
            $url.$writableStackTrace = 1;
            $url.$message = $rt_s(77);
            $rt_throw($url);
        }
        var$11 = jl_Long_parseLongImpl($url, 0, $url.$characters.data.length, 10);
        if ($type === cgxgbtp_AssetType_Audio && !cgxgbtp_AssetDownloader_instance.$useBrowserCache)
            var$11 = Long_ZERO;
        $url = $this.$this$0.$assets;
        $result = new cgxgbtp_Preloader$Asset;
        $line = jl_String_trim(var$9[1]);
        $asset = var$9[3];
        $result.$url = $line;
        $result.$type1 = $type;
        $result.$size3 = var$11;
        $result.$mimeType = $asset;
        cbgu_Array_add($url, $result);
        var$5 = var$5 + 1 | 0;
    }
    $url = new cbgu_GdxRuntimeException;
    $url.$suppressionEnabled = 1;
    $url.$writableStackTrace = 1;
    $url.$message = $rt_s(416);
    $rt_throw($url);
}
function cgxgbtp_Preloader$4_onSuccess0($this, var$1, var$2) {
    return cgxgbtp_Preloader$4_onSuccess($this, var$1, var$2);
}
var otjw_WebGLContextAttributes = $rt_classWithoutFields();
function otjw_WebGLContextAttributes_create$js_body$_13() {
    return {  };
}
var cgxgbtd_StyleWrapper$Unit = $rt_classWithoutFields(jl_Enum);
var cgxgbtd_StyleWrapper$Unit_PX = null;
var cgxgbtd_StyleWrapper$Unit_PCT = null;
var cgxgbtd_StyleWrapper$Unit_EM = null;
var cgxgbtd_StyleWrapper$Unit_EX = null;
var cgxgbtd_StyleWrapper$Unit_PT = null;
var cgxgbtd_StyleWrapper$Unit_PC = null;
var cgxgbtd_StyleWrapper$Unit_IN = null;
var cgxgbtd_StyleWrapper$Unit_CM = null;
var cgxgbtd_StyleWrapper$Unit_MM = null;
var cgxgbtd_StyleWrapper$Unit_$VALUES = null;
function cgxgbtd_StyleWrapper$Unit_$callClinit() {
    cgxgbtd_StyleWrapper$Unit_$callClinit = $rt_eraseClinit(cgxgbtd_StyleWrapper$Unit);
    cgxgbtd_StyleWrapper$Unit__clinit_();
}
function cgxgbtd_StyleWrapper$Unit__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = new cgxgbtd_StyleWrapper$Unit$1;
    cgxgbtd_StyleWrapper$Unit_$callClinit();
    var$1.$name0 = $rt_s(417);
    var$1.$ordinal = 0;
    cgxgbtd_StyleWrapper$Unit_PX = var$1;
    var$2 = new cgxgbtd_StyleWrapper$Unit$2;
    var$2.$name0 = $rt_s(418);
    var$2.$ordinal = 1;
    cgxgbtd_StyleWrapper$Unit_PCT = var$2;
    var$3 = new cgxgbtd_StyleWrapper$Unit$3;
    var$3.$name0 = $rt_s(419);
    var$3.$ordinal = 2;
    cgxgbtd_StyleWrapper$Unit_EM = var$3;
    var$4 = new cgxgbtd_StyleWrapper$Unit$4;
    var$4.$name0 = $rt_s(420);
    var$4.$ordinal = 3;
    cgxgbtd_StyleWrapper$Unit_EX = var$4;
    var$5 = new cgxgbtd_StyleWrapper$Unit$5;
    var$5.$name0 = $rt_s(421);
    var$5.$ordinal = 4;
    cgxgbtd_StyleWrapper$Unit_PT = var$5;
    var$6 = new cgxgbtd_StyleWrapper$Unit$6;
    var$6.$name0 = $rt_s(422);
    var$6.$ordinal = 5;
    cgxgbtd_StyleWrapper$Unit_PC = var$6;
    var$7 = new cgxgbtd_StyleWrapper$Unit$7;
    var$7.$name0 = $rt_s(423);
    var$7.$ordinal = 6;
    cgxgbtd_StyleWrapper$Unit_IN = var$7;
    var$8 = new cgxgbtd_StyleWrapper$Unit$8;
    var$8.$name0 = $rt_s(424);
    var$8.$ordinal = 7;
    cgxgbtd_StyleWrapper$Unit_CM = var$8;
    var$9 = new cgxgbtd_StyleWrapper$Unit$9;
    var$9.$name0 = $rt_s(425);
    var$9.$ordinal = 8;
    cgxgbtd_StyleWrapper$Unit_MM = var$9;
    cgxgbtd_StyleWrapper$Unit_$VALUES = $rt_createArrayFromData(cgxgbtd_StyleWrapper$Unit, [var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9]);
}
var cbg_LifecycleListener = $rt_classWithoutFields(0);
function ju_HashMap$HashEntry() {
    var a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next = null;
}
var cgxgbtp_AssetFilter = $rt_classWithoutFields(0);
function cgxgbtp_AssetFilter_isImage($extension) {
    return !jl_String_equals($extension, $rt_s(426)) && !jl_String_equals($extension, $rt_s(427)) && !jl_String_equals($extension, $rt_s(428)) && !jl_String_equals($extension, $rt_s(429)) && !jl_String_equals($extension, $rt_s(430)) ? 0 : 1;
}
function cgxgbtp_AssetFilter_isText($extension) {
    var var$2;
    a: {
        b: {
            if (jl_String_equals($extension, $rt_s(431)))
                break b;
            if (jl_String_equals($extension, $rt_s(432)))
                break b;
            if (jl_String_equals($extension, $rt_s(433)))
                break b;
            if (jl_String_equals($extension, $rt_s(434)))
                break b;
            if (jl_String_equals($extension, $rt_s(435)))
                break b;
            if (jl_String_equals($extension, $rt_s(436)))
                break b;
            if (jl_String_equals($extension, $rt_s(437)))
                break b;
            if (jl_String_equals($extension, $rt_s(438)))
                break b;
            if (!jl_String_equals($extension, $rt_s(439))) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
}
var cgxgbtd_EventTargetWrapper = $rt_classWithoutFields(0);
var cgxgbtd_FileReaderWrapper = $rt_classWithoutFields();
function cgxgbtd_FileReaderWrapper_removeEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$removeEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function cgxgbtd_FileReaderWrapper_dispatchEvent$exported$1(var$0, var$1) {
    return !!var$0.$dispatchEvent0(var$1);
}
function cgxgbtd_FileReaderWrapper_addEventListener$exported$2(var$0, var$1, var$2) {
    var$0.$addEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function cgxgbtd_FileReaderWrapper_addEventListener$exported$3(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function cgxgbtd_FileReaderWrapper_removeEventListener$exported$4(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function cgxgbtp_Preloader$3$1() {
    var a = this; jl_Object.call(a);
    a.$val$type0 = null;
    a.$val$name = null;
    a.$val$droppedFiles = null;
    a.$val$length = 0;
    a.$this$10 = null;
}
function cgxgbtp_Preloader$3$1_handleEvent($this, $evt) {
    var var$2, $blob, $arrayBuffer;
    var$2 = $evt.target;
    $blob = null;
    $arrayBuffer = $this.$val$type0;
    cgxgbtp_AssetType_$callClinit();
    if ($arrayBuffer !== cgxgbtp_AssetType_Binary && $arrayBuffer !== cgxgbtp_AssetType_Audio) {
        if ($arrayBuffer === cgxgbtp_AssetType_Image) {
            $evt = $rt_globals.window.document.createElement("img");
            $blob = $rt_ustr($rt_str(var$2.result));
            $evt.src = $blob;
            $arrayBuffer = var$2.result;
            var$2 = new $rt_globals.Int8Array($arrayBuffer);
            $blob = new cgxgbtp_Blob;
            $blob.$data3 = var$2;
            $blob.$response = $arrayBuffer;
            $blob.$image0 = $evt;
        } else if ($arrayBuffer === cgxgbtp_AssetType_Text)
            $blob = $rt_str(var$2.result);
    } else {
        $arrayBuffer = var$2.result;
        $evt = new $rt_globals.Int8Array($arrayBuffer);
        $blob = new cgxgbtp_Blob;
        $blob.$data3 = $evt;
        $blob.$response = $arrayBuffer;
    }
    if ($blob !== null) {
        cgxgbtp_Preloader_putAssetInMap($this.$this$10.$this$014, $this.$val$type0, $this.$val$name, $blob);
        cbgu_Array_add($this.$val$droppedFiles, $this.$val$name);
        if ($this.$val$droppedFiles.$size == $this.$val$length) {
            $evt = $this.$this$10.$val$teaApplication;
            $blob = new cgxgbtp_Preloader$3$1$1;
            $blob.$this$2 = $this;
            cbgu_Array_add($evt.$runnables, $blob);
        }
    }
}
function cgxgbtp_Preloader$3$1_handleEvent$exported$0(var$0, var$1) {
    cgxgbtp_Preloader$3$1_handleEvent(var$0, var$1);
}
function cgxgbtp_AssetType() {
    jl_Enum.call(this);
    this.$code = null;
}
var cgxgbtp_AssetType_Image = null;
var cgxgbtp_AssetType_Audio = null;
var cgxgbtp_AssetType_Text = null;
var cgxgbtp_AssetType_Binary = null;
var cgxgbtp_AssetType_Directory = null;
var cgxgbtp_AssetType_$VALUES = null;
function cgxgbtp_AssetType_$callClinit() {
    cgxgbtp_AssetType_$callClinit = $rt_eraseClinit(cgxgbtp_AssetType);
    cgxgbtp_AssetType__clinit_();
}
function cgxgbtp_AssetType__clinit_() {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new cgxgbtp_AssetType;
    cgxgbtp_AssetType_$callClinit();
    var$1.$name0 = $rt_s(440);
    var$1.$ordinal = 0;
    var$1.$code = $rt_s(413);
    cgxgbtp_AssetType_Image = var$1;
    var$2 = new cgxgbtp_AssetType;
    var$2.$name0 = $rt_s(441);
    var$2.$ordinal = 1;
    var$2.$code = $rt_s(415);
    cgxgbtp_AssetType_Audio = var$2;
    var$3 = new cgxgbtp_AssetType;
    var$3.$name0 = $rt_s(442);
    var$3.$ordinal = 2;
    var$3.$code = $rt_s(443);
    cgxgbtp_AssetType_Text = var$3;
    var$4 = new cgxgbtp_AssetType;
    var$4.$name0 = $rt_s(444);
    var$4.$ordinal = 3;
    var$4.$code = $rt_s(414);
    cgxgbtp_AssetType_Binary = var$4;
    var$5 = new cgxgbtp_AssetType;
    var$5.$name0 = $rt_s(445);
    var$5.$ordinal = 4;
    var$5.$code = $rt_s(252);
    cgxgbtp_AssetType_Directory = var$5;
    cgxgbtp_AssetType_$VALUES = $rt_createArrayFromData(cgxgbtp_AssetType, [var$1, var$2, var$3, var$4, var$5]);
}
var jlr_Modifier = $rt_classWithoutFields();
var jlr_Modifier_modifierNames = null;
var jlr_Modifier_canonicalOrder = null;
function jlr_Modifier_toString($mod) {
    var $sb, $modifierNames, $index, var$5, var$6, var$7, $modifier, var$9, var$10;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(16);
    $modifierNames = jlr_Modifier_getModifierNames();
    $index = 0;
    var$5 = jlr_Modifier_canonicalOrder.data;
    var$6 = var$5.length;
    var$7 = 0;
    while (var$7 < var$6) {
        if ($mod & var$5[var$7]) {
            $modifier = $sb.$length;
            if ($modifier > 0) {
                jl_AbstractStringBuilder_insertSpace($sb, $modifier, $modifier + 1 | 0);
                $sb.$buffer.data[$modifier] = 32;
            }
            var$9 = $modifierNames.data[$index];
            jl_AbstractStringBuilder_insert($sb, $sb.$length, var$9);
        }
        $index = $index + 1 | 0;
        var$7 = var$7 + 1 | 0;
    }
    var$9 = new jl_String;
    $modifierNames = $sb.$buffer;
    $index = $sb.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($index);
    var$5 = var$10.data;
    var$9.$characters = var$10;
    $modifier = 0;
    while ($modifier < $index) {
        var$5[$modifier] = $modifierNames.data[$modifier + 0 | 0];
        $modifier = $modifier + 1 | 0;
    }
    return var$9;
}
function jlr_Modifier_getModifierNames() {
    if (jlr_Modifier_modifierNames === null)
        jlr_Modifier_modifierNames = $rt_createArrayFromData(jl_String, [$rt_s(446), $rt_s(447), $rt_s(448), $rt_s(449), $rt_s(450), $rt_s(451), $rt_s(452), $rt_s(453), $rt_s(454), $rt_s(455), $rt_s(456), $rt_s(457)]);
    return jlr_Modifier_modifierNames;
}
function jlr_Modifier__clinit_() {
    jlr_Modifier_canonicalOrder = $rt_createIntArrayFromData([1, 4, 2, 1024, 8, 16, 128, 64, 32, 256, 2048, 512]);
}
var jlr_AccessibleObject = $rt_classWithoutFields();
var jlr_Member = $rt_classWithoutFields(0);
function jlr_Constructor() {
    var a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name1 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$callable = null;
}
function jlr_Constructor_toString($this) {
    var $sb, var$2, var$3, var$4, $i, var$6, var$7, var$8;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(16);
    var$2 = jlr_Modifier_toString(otcir_Flags_getModifiers($this.$modifiers, $this.$accessLevel));
    jl_AbstractStringBuilder_insert($sb, $sb.$length, var$2);
    var$3 = $sb.$length;
    if (var$3 > 0) {
        jl_AbstractStringBuilder_insertSpace($sb, var$3, var$3 + 1 | 0);
        $sb.$buffer.data[var$3] = 32;
    }
    var$2 = $this.$declaringClass;
    if (var$2.$name === null)
        var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
    var$2 = var$2.$name;
    jl_AbstractStringBuilder_insert($sb, $sb.$length, var$2);
    var$3 = $sb.$length;
    jl_AbstractStringBuilder_insertSpace($sb, var$3, var$3 + 1 | 0);
    $sb.$buffer.data[var$3] = 40;
    var$4 = $this.$parameterTypes.$clone();
    $i = 0;
    while (true) {
        var$6 = var$4.data;
        if ($i >= var$6.length)
            break;
        if ($i > 0) {
            var$7 = $sb.$length;
            jl_AbstractStringBuilder_insertSpace($sb, var$7, var$7 + 1 | 0);
            $sb.$buffer.data[var$7] = 44;
        }
        var$2 = var$6[$i];
        if (var$2.$name === null)
            var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
        var$2 = var$2.$name;
        jl_AbstractStringBuilder_insert($sb, $sb.$length, var$2);
        $i = $i + 1 | 0;
    }
    var$3 = $sb.$length;
    jl_AbstractStringBuilder_insertSpace($sb, var$3, var$3 + 1 | 0);
    var$8 = $sb.$buffer.data;
    var$8[var$3] = 41;
    var$2 = new jl_String;
    var$3 = $sb.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$3);
    var$4 = var$6.data;
    var$2.$characters = var$6;
    var$7 = 0;
    while (var$7 < var$3) {
        var$4[var$7] = var$8[var$7 + 0 | 0];
        var$7 = var$7 + 1 | 0;
    }
    return var$2;
}
function jlr_Constructor_newInstance($this, $initargs) {
    var $jsArgs, var$3, var$4, $i, $instance;
    if ($this.$modifiers & 1) {
        $jsArgs = new jl_InstantiationException;
        $jsArgs.$suppressionEnabled = 1;
        $jsArgs.$writableStackTrace = 1;
        $rt_throw($jsArgs);
    }
    if ($this.$callable === null) {
        $jsArgs = new jl_IllegalAccessException;
        $jsArgs.$suppressionEnabled = 1;
        $jsArgs.$writableStackTrace = 1;
        $rt_throw($jsArgs);
    }
    var$3 = $initargs.data;
    var$4 = var$3.length;
    if (var$4 != $this.$parameterTypes.data.length) {
        $jsArgs = new jl_IllegalArgumentException;
        $jsArgs.$suppressionEnabled = 1;
        $jsArgs.$writableStackTrace = 1;
        $rt_throw($jsArgs);
    }
    $i = 0;
    while ($i < var$4) {
        if (!($this.$parameterTypes.data[$i].$platformClass.$meta.primitive ? 1 : 0) && var$3[$i] !== null) {
            $jsArgs = $this.$parameterTypes.data[$i];
            $instance = var$3[$i];
            $jsArgs = $jsArgs.$platformClass;
            if (!($instance !== null && !(typeof $instance.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($instance.constructor, $jsArgs) ? 1 : 0)) {
                $jsArgs = new jl_IllegalArgumentException;
                $jsArgs.$suppressionEnabled = 1;
                $jsArgs.$writableStackTrace = 1;
                $rt_throw($jsArgs);
            }
        }
        if (($this.$parameterTypes.data[$i].$platformClass.$meta.primitive ? 1 : 0) && var$3[$i] === null) {
            $jsArgs = new jl_IllegalArgumentException;
            $jsArgs.$suppressionEnabled = 1;
            $jsArgs.$writableStackTrace = 1;
            $rt_throw($jsArgs);
        }
        $i = $i + 1 | 0;
    }
    $jsArgs = $initargs.data;
    $instance = new ($this.$declaringClass.$platformClass);
    $this.$callable.call($instance, $jsArgs);
    return $instance;
}
function jur_AbstractCharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$021 = null;
}
function jur_AbstractCharClass$1_contains($this, $ch) {
    var $index, var$3, var$4, var$5;
    $index = $ch - 55296 | 0;
    if ($index >= 0 && $index < 2048) {
        $ch = $this.$altSurrogates;
        var$3 = $this.$val$lHS;
        var$4 = $index / 32 | 0;
        var$5 = var$3.$data2.data;
        $ch = $ch ^ (var$4 < var$5.length && var$5[var$4] & 1 << ($index % 32 | 0) ? 1 : 0);
    } else
        $ch = 0;
    return $ch;
}
function jur_AbstractCharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$022 = null;
}
function jur_AbstractCharClass$2_contains($this, $ch) {
    var $index, var$3, var$4, $containslHS, var$6;
    $index = $ch - 55296 | 0;
    if ($index >= 0 && $index < 2048) {
        var$3 = $this.$altSurrogates;
        var$4 = $this.$val$lHS0;
        $containslHS = $index / 32 | 0;
        var$6 = var$4.$data2.data;
        $containslHS = var$3 ^ ($containslHS < var$6.length && var$6[$containslHS] & 1 << ($index % 32 | 0) ? 1 : 0);
    } else
        $containslHS = 0;
    return $this.$val$thisClass.$contains1($ch) && !$containslHS ? 1 : 0;
}
function jur_CharClass$18() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$040 = null;
}
function jur_CharClass$18_contains($this, $ch) {
    var var$2, var$3, var$4, var$5;
    var$2 = $this.$alt0;
    var$3 = $this.$val$bs;
    var$4 = $ch / 32 | 0;
    var$5 = var$3.$data2.data;
    return var$2 ^ (var$4 < var$5.length && var$5[var$4] & 1 << ($ch % 32 | 0) ? 1 : 0);
}
function jur_CharClass$18_toString($this) {
    var $temp, $i, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $temp = new jl_StringBuilder;
    $temp.$buffer = $rt_createCharArray(16);
    $i = ju_BitSet_nextSetBit($this.$val$bs, 0);
    while ($i >= 0) {
        if ($i < 65536) {
            var$3 = $rt_createCharArray(1);
            var$3.data[0] = $i & 65535;
        } else
            var$3 = $rt_createCharArrayFromData([(55296 | ($i - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $i & 1023) & 65535]);
        var$4 = var$3.data;
        var$5 = 0;
        var$6 = var$4.length;
        var$7 = $temp.$length;
        jl_AbstractStringBuilder_insertSpace($temp, var$7, var$7 + var$6 | 0);
        var$6 = var$6 + var$5 | 0;
        while (var$5 < var$6) {
            var$3 = $temp.$buffer.data;
            var$8 = var$7 + 1 | 0;
            var$9 = var$5 + 1 | 0;
            var$3[var$7] = var$4[var$5];
            var$7 = var$8;
            var$5 = var$9;
        }
        var$6 = $temp.$length;
        jl_AbstractStringBuilder_insertSpace($temp, var$6, var$6 + 1 | 0);
        $temp.$buffer.data[var$6] = 124;
        $i = ju_BitSet_nextSetBit($this.$val$bs, $i + 1 | 0);
    }
    var$7 = $temp.$length;
    if (var$7 > 0)
        jl_AbstractStringBuilder_deleteCharAt($temp, var$7 - 1 | 0);
    var$10 = new jl_String;
    var$3 = $temp.$buffer;
    var$7 = $temp.$length;
    jl_String_$callClinit();
    var$4 = $rt_createCharArray(var$7);
    var$11 = var$4.data;
    var$10.$characters = var$4;
    var$9 = 0;
    while (var$9 < var$7) {
        var$11[var$9] = var$3.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    return var$10;
}
function jur_CharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$025 = null;
}
function jur_CharClass$1_contains($this, $ch) {
    return $this.$val$cc1.$contains1($ch);
}
function jur_CharClass$3() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$cc2 = null;
    a.$this$026 = null;
}
function jur_CharClass$3_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$curAlt1;
    var$3 = $this.$this$026;
    var$4 = var$3.$bits;
    var$5 = $ch / 32 | 0;
    var$6 = var$4.$data2.data;
    var$5 = var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0;
    return !(var$2 ^ var$5) && !(var$2 ^ var$3.$inverted ^ $this.$val$cc2.$contains1($ch)) ? 0 : 1;
}
function jur_CharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt2 = 0;
    a.$val$cc3 = null;
    a.$this$027 = null;
}
function jur_CharClass$2_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$curAlt2;
    var$3 = $this.$this$027;
    var$4 = var$3.$bits;
    var$5 = $ch / 32 | 0;
    var$6 = var$4.$data2.data;
    var$5 = var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0;
    return !(var$2 ^ var$5) && !(var$2 ^ var$3.$inverted ^ $this.$val$cc3.$contains1($ch)) ? 1 : 0;
}
function jur_CharClass$5() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$nb = null;
    a.$val$cc = null;
    a.$this$023 = null;
}
function jur_CharClass$5_contains($this, $ch) {
    return $this.$val$curAlt ^ (!$this.$val$nb.$contains1($ch) && !$this.$val$cc.$contains1($ch) ? 0 : 1);
}
function jur_CharClass$4() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$nb0 = null;
    a.$val$cc0 = null;
    a.$this$024 = null;
}
function jur_CharClass$4_contains($this, $ch) {
    return $this.$val$curAlt0 ^ (!$this.$val$nb0.$contains1($ch) && !$this.$val$cc0.$contains1($ch) ? 0 : 1) ? 0 : 1;
}
function jur_CharClass$7() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$030 = null;
}
function jur_CharClass$7_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz1;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        $ch = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    return $ch;
}
function jur_CharClass$6() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz2 = null;
    a.$this$031 = null;
}
function jur_CharClass$6_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz2;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        $ch = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    return $ch ? 0 : 1;
}
function jur_CharClass$9() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$val$curAlt5 = 0;
    a.$this$032 = null;
}
function jur_CharClass$9_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz3;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        var$4 = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        var$4 = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    a: {
        if (!var$4) {
            var$4 = $this.$val$curAlt5;
            var$2 = $this.$this$032.$bits;
            var$5 = $ch / 32 | 0;
            var$6 = var$2.$data2.data;
            if (!(var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0))) {
                $ch = 0;
                break a;
            }
        }
        $ch = 1;
    }
    return $ch;
}
function jur_CharClass$8() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$val$curAlt6 = 0;
    a.$this$033 = null;
}
function jur_CharClass$8_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz4;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        var$4 = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        var$4 = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    a: {
        if (!var$4) {
            var$4 = $this.$val$curAlt6;
            var$2 = $this.$this$033.$bits;
            var$5 = $ch / 32 | 0;
            var$6 = var$2.$data2.data;
            if (!(var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0))) {
                $ch = 1;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch;
}
function jur_CharClass$11() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb1 = null;
    a.$val$clazz = null;
    a.$this$028 = null;
}
function jur_CharClass$11_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    a: {
        if (!($this.$val$curAlt3 ^ $this.$val$nb1.$contains1($ch))) {
            var$2 = $this.$val$clazz;
            var$3 = var$2.$nonBitSet;
            if (var$3 !== null)
                $ch = var$2.$alt0 ^ var$3.$contains1($ch);
            else {
                var$4 = var$2.$alt0;
                var$2 = var$2.$bits;
                var$5 = $ch / 32 | 0;
                var$6 = var$2.$data2.data;
                $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
            }
            if (!$ch) {
                $ch = 0;
                break a;
            }
        }
        $ch = 1;
    }
    return $ch;
}
function jur_CharClass$10() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt4 = 0;
    a.$val$nb2 = null;
    a.$val$clazz0 = null;
    a.$this$029 = null;
}
function jur_CharClass$10_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    a: {
        if (!($this.$val$curAlt4 ^ $this.$val$nb2.$contains1($ch))) {
            var$2 = $this.$val$clazz0;
            var$3 = var$2.$nonBitSet;
            if (var$3 !== null)
                $ch = var$2.$alt0 ^ var$3.$contains1($ch);
            else {
                var$4 = var$2.$alt0;
                var$2 = var$2.$bits;
                var$5 = $ch / 32 | 0;
                var$6 = var$2.$data2.data;
                $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
            }
            if (!$ch) {
                $ch = 1;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch;
}
function jur_CharClass$13() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz7 = null;
    a.$this$036 = null;
}
function jur_CharClass$13_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz7;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        $ch = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    return $ch;
}
function jur_CharClass$12() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz8 = null;
    a.$this$037 = null;
}
function jur_CharClass$12_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz8;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        $ch = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    return $ch ? 0 : 1;
}
function jur_CharClass$15() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$val$curAlt9 = 0;
    a.$this$038 = null;
}
function jur_CharClass$15_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz9;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        var$4 = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        var$4 = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    a: {
        if (var$4) {
            var$4 = $this.$val$curAlt9;
            var$2 = $this.$this$038.$bits;
            var$5 = $ch / 32 | 0;
            var$6 = var$2.$data2.data;
            if (var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0)) {
                $ch = 1;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch;
}
function jur_CharClass$14() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt10 = 0;
    a.$this$039 = null;
}
function jur_CharClass$14_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$val$clazz10;
    var$3 = var$2.$nonBitSet;
    if (var$3 !== null)
        var$4 = var$2.$alt0 ^ var$3.$contains1($ch);
    else {
        var$4 = var$2.$alt0;
        var$2 = var$2.$bits;
        var$5 = $ch / 32 | 0;
        var$6 = var$2.$data2.data;
        var$4 = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
    }
    a: {
        if (var$4) {
            var$4 = $this.$val$curAlt10;
            var$2 = $this.$this$039.$bits;
            var$5 = $ch / 32 | 0;
            var$6 = var$2.$data2.data;
            if (var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0)) {
                $ch = 0;
                break a;
            }
        }
        $ch = 1;
    }
    return $ch;
}
function jur_CharClass$17() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb3 = null;
    a.$val$clazz5 = null;
    a.$this$034 = null;
}
function jur_CharClass$17_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    a: {
        if ($this.$val$curAlt7 ^ $this.$val$nb3.$contains1($ch)) {
            var$2 = $this.$val$clazz5;
            var$3 = var$2.$nonBitSet;
            if (var$3 !== null)
                $ch = var$2.$alt0 ^ var$3.$contains1($ch);
            else {
                var$4 = var$2.$alt0;
                var$2 = var$2.$bits;
                var$5 = $ch / 32 | 0;
                var$6 = var$2.$data2.data;
                $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
            }
            if ($ch) {
                $ch = 1;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch;
}
function jur_CharClass$16() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb4 = null;
    a.$val$clazz6 = null;
    a.$this$035 = null;
}
function jur_CharClass$16_contains($this, $ch) {
    var var$2, var$3, var$4, var$5, var$6;
    a: {
        if ($this.$val$curAlt8 ^ $this.$val$nb4.$contains1($ch)) {
            var$2 = $this.$val$clazz6;
            var$3 = var$2.$nonBitSet;
            if (var$3 !== null)
                $ch = var$2.$alt0 ^ var$3.$contains1($ch);
            else {
                var$4 = var$2.$alt0;
                var$2 = var$2.$bits;
                var$5 = $ch / 32 | 0;
                var$6 = var$2.$data2.data;
                $ch = var$4 ^ (var$5 < var$6.length && var$6[var$5] & 1 << ($ch % 32 | 0) ? 1 : 0);
            }
            if ($ch) {
                $ch = 0;
                break a;
            }
        }
        $ch = 1;
    }
    return $ch;
}
function jl_Object$Monitor() {
    var a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
function jl_Thread() {
    var a = this; jl_Object.call(a);
    a.$uncaughtExceptionHandler = null;
    a.$id1 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$interruptHandler = null;
    a.$name2 = null;
    a.$alive = 0;
    a.$target = null;
}
var jl_Thread_mainThread = null;
var jl_Thread_currentThread0 = null;
var jl_Thread_nextId = 0;
var jl_Thread_activeCount = 0;
var jl_Thread_defaultUncaughtExceptionHandler = null;
function jl_Thread_$callClinit() {
    jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
    jl_Thread__clinit_();
}
function jl_Thread_runThread($this) {
    var $t, var$2, $$je;
    a: {
        b: {
            c: {
                d: {
                    try {
                        jl_Thread_$callClinit();
                        jl_Thread_activeCount = jl_Thread_activeCount + 1 | 0;
                        jl_Thread_setCurrentThread($this);
                        $this.$run();
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $t = $$je;
                            break d;
                        } else{
                            $t = $$je;
                            break c;
                        }
                    }
                    $t = $this.$finishedLock;
                    jl_Object_monitorEnterSync($t);
                    e: {
                        try {
                            jl_Object_notifyAll($t);
                            jl_Object_monitorExitSync($t);
                            break e;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$2 = $$je;

                        }
                        jl_Object_monitorExitSync($t);
                        $rt_throw(var$2);
                    }
                    $this.$alive = 0;
                    jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
                    $t = jl_Thread_mainThread;
                    if (jl_Thread_currentThread0 !== $t)
                        jl_Thread_currentThread0 = $t;
                    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
                    break a;
                }
                try {
                    jl_DefaultUncaughtExceptionHandler_uncaughtException(jl_Thread_getUncaughtExceptionHandler($this), $this, $t);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    $t = $$je;

                }
            }
            var$2 = $this.$finishedLock;
            jl_Object_monitorEnterSync(var$2);
            f: {
                try {
                    jl_Object_notifyAll(var$2);
                    jl_Object_monitorExitSync(var$2);
                    break f;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    $t = $$je;

                }
                jl_Object_monitorExitSync(var$2);
                $rt_throw($t);
            }
            $this.$alive = 0;
            jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
            var$2 = jl_Thread_mainThread;
            if (jl_Thread_currentThread0 !== var$2)
                jl_Thread_currentThread0 = var$2;
            jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
            $rt_throw($t);
        }
        $t = $this.$finishedLock;
        jl_Object_monitorEnterSync($t);
        g: {
            try {
                jl_Object_notifyAll($t);
                jl_Object_monitorExitSync($t);
                break g;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;

            }
            jl_Object_monitorExitSync($t);
            $rt_throw(var$2);
        }
        $this.$alive = 0;
        jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
        $t = jl_Thread_mainThread;
        if (jl_Thread_currentThread0 !== $t)
            jl_Thread_currentThread0 = $t;
        jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
    }
}
function jl_Thread_setCurrentThread($thread_0) {
    jl_Thread_$callClinit();
    if (jl_Thread_currentThread0 !== $thread_0)
        jl_Thread_currentThread0 = $thread_0;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
}
function jl_Thread_currentThread() {
    jl_Thread_$callClinit();
    return jl_Thread_currentThread0;
}
function jl_Thread_sleep(var$1) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Thread_sleep0(var$1, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Thread_sleep0($millis, $callback) {
    var $current, $handler;
    jl_Thread_$callClinit();
    $current = jl_Thread_currentThread0;
    $handler = new jl_Thread$SleepHandler;
    $handler.$thread = $current;
    $handler.$callback = $callback;
    $handler.$scheduleId = otp_Platform_schedule($handler, Long_ge($millis, Long_fromInt(2147483647)) ? 2147483647 : Long_lo($millis));
    $current.$interruptHandler = $handler;
}
function jl_Thread_getUncaughtExceptionHandler($this) {
    var var$1;
    var$1 = $this.$uncaughtExceptionHandler;
    if (var$1 !== null)
        return var$1;
    jl_Thread_$callClinit();
    return jl_Thread_defaultUncaughtExceptionHandler;
}
function jl_Thread__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new jl_Thread;
    jl_Thread_$callClinit();
    var$2 = null;
    var$1.$finishedLock = new jl_Object;
    var$1.$alive = 1;
    var$1.$name2 = $rt_s(458);
    var$1.$target = var$2;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    var$1.$id1 = Long_fromInt(var$3);
    jl_Thread_mainThread = var$1;
    jl_Thread_currentThread0 = var$1;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = new jl_DefaultUncaughtExceptionHandler;
}
var jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IllegalStateException__init_(var_0) {
    var var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_0(var_1, var_0);
    return var_1;
}
function jl_IllegalStateException__init_0($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
var jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException);
function jur_MatchResultImpl() {
    var a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string0 = null;
    a.$groupCount = 0;
    a.$valid0 = 0;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode = 0;
}
function jur_MatchResultImpl__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jur_MatchResultImpl__init_0($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) {
    var var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount = var$7;
    var$8 = $rt_createIntArray(var$7 * 2 | 0);
    $this.$groupBounds = var$8;
    var$9 = $rt_createIntArray($consumersCount);
    var$10 = var$9.data;
    $this.$consumers = var$9;
    $groupCount = 0;
    $consumersCount = var$10.length;
    var$11 = $rt_compare($groupCount, $consumersCount);
    if (var$11 > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while ($groupCount < $consumersCount) {
        var$7 = $groupCount + 1 | 0;
        var$10[$groupCount] = (-1);
        $groupCount = var$7;
    }
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    var$8 = var$8.data;
    var$7 = 0;
    var$12 = var$8.length;
    $groupCount = $rt_compare(var$7, var$12);
    if ($groupCount > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while (var$7 < var$12) {
        $compQuantCount = var$7 + 1 | 0;
        var$8[var$7] = (-1);
        var$7 = $compQuantCount;
    }
    $this.$valid0 = 0;
    $this.$mode = 2;
    $compQuantCount = 0;
    if ($groupCount > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while ($compQuantCount < var$12) {
        $groupCount = $compQuantCount + 1 | 0;
        var$8[$compQuantCount] = (-1);
        $compQuantCount = $groupCount;
    }
    $groupCount = 0;
    if (var$11 > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while ($groupCount < $consumersCount) {
        var$7 = $groupCount + 1 | 0;
        var$10[$groupCount] = (-1);
        $groupCount = var$7;
    }
    if ($string !== null)
        $this.$string0 = $string;
    if ($leftBound >= 0) {
        $this.$leftBound0 = $leftBound;
        $this.$rightBound0 = $rightBound;
    }
    $this.$startIndex = $this.$leftBound0;
}
function jur_MatchResultImpl_checkGroup($this, $group) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if (!$this.$valid0) {
        var$2 = new jl_IllegalStateException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    var$2 = new jl_IndexOutOfBoundsException;
    jl_String_$callClinit();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $group, 10);
    var$4 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$4.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cgxgbt_TeaApplication$5() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$02 = null;
}
function cgxgbt_TeaApplication$5_onSuccess($this, $url, $result) {
    return 1;
}
function cgxgbt_TeaApplication$5_onFailure($this, $url) {}
function cgxgbt_TeaApplication$7() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$03 = null;
}
function cgxgbt_TeaApplication$7_onSuccess($this, $url, $result) {
    return 1;
}
function cgxgbt_TeaApplication$7_onFailure($this, $url) {}
function cgxgbt_TeaApplication$6() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$04 = null;
}
function cgxgbt_TeaApplication$6_onSuccess($this, $url, $result) {
    return 1;
}
function cgxgbt_TeaApplication$6_onFailure($this, $url) {}
var cgxgbtu_KeyCodes = $rt_classWithoutFields();
function cgxgbtu_KeyCodes_keyForCode($keyCode) {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                return 61;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                return 66;
            case 16:
                return 59;
            case 17:
                return 129;
            case 18:
                return 57;
            case 19:
                return 0;
            case 20:
                return 0;
            case 27:
                return 111;
            case 32:
                return 62;
            case 33:
                return 92;
            case 34:
                return 93;
            case 35:
                return 123;
            case 36:
                return 3;
            case 37:
                return 21;
            case 38:
                return 19;
            case 39:
                return 22;
            case 40:
                return 20;
            case 45:
                return 124;
            case 46:
                return 112;
            case 48:
                return 7;
            case 49:
                return 8;
            case 50:
                return 9;
            case 51:
                return 10;
            case 52:
                return 11;
            case 53:
                return 12;
            case 54:
                return 13;
            case 55:
                return 14;
            case 56:
                return 15;
            case 57:
                return 16;
            case 65:
                return 29;
            case 66:
                return 30;
            case 67:
                return 31;
            case 68:
                return 32;
            case 69:
                return 33;
            case 70:
                return 34;
            case 71:
                return 35;
            case 72:
                return 36;
            case 73:
                return 37;
            case 74:
                return 38;
            case 75:
                return 39;
            case 76:
                return 40;
            case 77:
                return 41;
            case 78:
                return 42;
            case 79:
                return 43;
            case 80:
                return 44;
            case 81:
                return 45;
            case 82:
                return 46;
            case 83:
                return 47;
            case 84:
                return 48;
            case 85:
                return 49;
            case 86:
                return 50;
            case 87:
                return 51;
            case 88:
                return 52;
            case 89:
                return 53;
            case 90:
                return 54;
            case 91:
                return 0;
            case 92:
                return 0;
            case 96:
                return 144;
            case 97:
                return 145;
            case 98:
                return 146;
            case 99:
                return 147;
            case 100:
                return 148;
            case 101:
                return 149;
            case 102:
                return 150;
            case 103:
                return 151;
            case 104:
                return 152;
            case 105:
                return 153;
            case 106:
                return 0;
            case 107:
                return 81;
            case 109:
                return 69;
            case 110:
                return 56;
            case 111:
                return 0;
            case 112:
                return 131;
            case 113:
                return 132;
            case 114:
                return 133;
            case 115:
                return 134;
            case 116:
                return 135;
            case 117:
                return 136;
            case 118:
                return 137;
            case 119:
                return 138;
            case 120:
                return 139;
            case 121:
                return 140;
            case 122:
                return 141;
            case 123:
                return 142;
            case 144:
                return 78;
            case 145:
                return 0;
            case 186:
                return 74;
            case 187:
                return 70;
            case 188:
                return 55;
            case 189:
                return 69;
            case 190:
                return 56;
            case 191:
                return 76;
            case 192:
                return 0;
            case 219:
                return 71;
            case 220:
                return 73;
            case 221:
                return 72;
            case 222:
                return 75;
            default:
                break a;
        }
        return 67;
    }
    return 0;
}
function cgxgbtu_KeyCodes_getButton($button) {
    if ($button == 1)
        return 0;
    if ($button == 2)
        return 1;
    if ($button != 4)
        return 0;
    return 2;
}
var cbgu_TimeUtils = $rt_classWithoutFields();
function cbgu_TimeUtils_nanoTime() {
    return Long_fromNumber($rt_globals.performance.now() * 1000000.0);
}
var ju_Objects = $rt_classWithoutFields();
var otp_PlatformQueue = $rt_classWithoutFields();
var otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_00 = null;
}
function jl_Object$monitorExit$lambda$_8_0_run(var$0) {
    var var$1, var$2, var$3, var$4;
    var$1 = var$0.$_00;
    if (!jl_Object_isEmptyMonitor(var$1)) {
        var$2 = var$1.$monitor;
        if (var$2.$owner === null) {
            var$1 = var$2.$enteringThreads;
            if (var$1 !== null && !(var$1.length ? 0 : 1)) {
                var$3 = var$2.$enteringThreads.shift();
                var$2.$enteringThreads = null;
                var$1 = var$3.$_0;
                var$2 = var$3.$_1;
                var$4 = var$3.$_2;
                var$3 = var$3.$_3;
                jl_Thread_$callClinit();
                if (jl_Thread_currentThread0 !== var$1)
                    jl_Thread_currentThread0 = var$1;
                jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
                var$2 = var$2.$monitor;
                var$2.$owner = var$1;
                var$2.$count = var$2.$count + var$4 | 0;
                var$1 = null;
                var$3.$realAsyncCallback.$complete(var$1);
            }
        }
    }
}
var cgxgbtd_StyleWrapper$Unit$1 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$2 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$3 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$4 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$5 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$6 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$7 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$8 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var cgxgbtd_StyleWrapper$Unit$9 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
var oti_AsyncCallback = $rt_classWithoutFields(0);
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
function otpp_AsyncCallbackWrapper_create($realAsyncCallback) {
    var var$2;
    var$2 = new otpp_AsyncCallbackWrapper;
    var$2.$realAsyncCallback = $realAsyncCallback;
    return var$2;
}
function otpp_AsyncCallbackWrapper_complete($this, $result) {
    $this.$realAsyncCallback.$complete($result);
}
function otpp_AsyncCallbackWrapper_error($this, $e) {
    $this.$realAsyncCallback.$error($e);
}
function jl_Object$monitorEnterWait$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_0 = null;
    a.$_1 = null;
    a.$_2 = 0;
    a.$_3 = null;
}
var jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0);
var jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields();
function jl_DefaultUncaughtExceptionHandler_uncaughtException($this, $t, $e) {
    var var$3;
    if (jl_System_errCache === null) {
        var$3 = new ji_PrintStream;
        var$3.$out = otcic_StderrOutputStream_INSTANCE;
        $t = new jl_StringBuilder;
        $t.$buffer = $rt_createCharArray(16);
        var$3.$sb = $t;
        var$3.$buffer2 = $rt_createCharArray(32);
        var$3.$autoFlush = 0;
        jnci_UTF8Charset_$callClinit();
        var$3.$charset = jnci_UTF8Charset_INSTANCE;
        jl_System_errCache = var$3;
    }
    jl_Throwable_printStackTrace0($e, jl_System_errCache);
}
var otjb_Performance = $rt_classWithoutFields();
var jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet);
function jur_BackReferencedSingleSet_find($this, $startSearch, $testString, $matchResult) {
    var $res, $lastIndex, var$6, var$7, var$8, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$rightBound0;
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            var$6 = $this.$groupIndex0;
            var$7 = $matchResult.$groupBounds.data;
            var$8 = var$6 * 2 | 0;
            $saveStart = var$7[var$8];
            var$7[var$8] = $startSearch;
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            var$8 = $this.$groupIndex0;
            $matchResult.$groupBounds.data[var$8 * 2 | 0] = $saveStart;
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $res, var$6, var$7, var$8, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            var$6 = $this.$groupIndex0;
            var$7 = $matchResult.$groupBounds.data;
            var$8 = var$6 * 2 | 0;
            $saveStart = var$7[var$8];
            var$7[var$8] = $startSearch;
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            var$8 = $this.$groupIndex0;
            $matchResult.$groupBounds.data[var$8 * 2 | 0] = $saveStart;
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_processBackRefReplacement($this) {
    return null;
}
function ju_AbstractList$1() {
    var a = this; jl_Object.call(a);
    a.$index3 = 0;
    a.$modCount2 = 0;
    a.$size9 = 0;
    a.$removeIndex0 = 0;
    a.$this$057 = null;
}
function cgxgbtp_AssetDownloadImpl$1() {
    var a = this; jl_Thread.call(a);
    a.$val$async = 0;
    a.$val$url = null;
    a.$val$listener = null;
    a.$this$05 = null;
}
function cgxgbtp_AssetDownloadImpl$1_run($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new $rt_globals.XMLHttpRequest();
    var$2 = new cgxgbtp_AssetDownloadImpl$1$1;
    var$2.$this$11 = $this;
    var$2.$val$request0 = var$1;
    var$2 = otji_JS_function(var$2, "handleEvent");
    var$1.onreadystatechange = var$2;
    var$2 = $this.$this$05;
    var$3 = $this.$val$listener;
    var$4 = new cgxgbtp_AssetDownloadImpl$6;
    var$4.$this$09 = var$2;
    var$4.$val$listener3 = var$3;
    var$2 = otji_JS_function(var$4, "handleEvent");
    var$1.onprogress = var$2;
    var$3 = $this.$val$url;
    var$5 = $this.$val$async;
    var$1.open("GET", $rt_ustr(var$3), !!var$5);
    var$1.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
    var$1.send();
}
var cgxgbt_TeaApplication$8 = $rt_classWithoutFields();
var cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = null;
function cgxgbt_TeaApplication$8_$callClinit() {
    cgxgbt_TeaApplication$8_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$8);
    cgxgbt_TeaApplication$8__clinit_();
}
function cgxgbt_TeaApplication$8__clinit_() {
    var var$1, var$2;
    cgxgbt_TeaApplication$AppState_$callClinit();
    var$1 = $rt_createIntArray((cgxgbt_TeaApplication$AppState_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = var$1;
    var$2[cgxgbt_TeaApplication$AppState_LOAD_ASSETS.$ordinal] = 1;
    var$2[cgxgbt_TeaApplication$AppState_APP_LOOP.$ordinal] = 2;
}
var otja_XMLHttpRequest = $rt_classWithoutFields();
function otja_XMLHttpRequest_addEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otja_XMLHttpRequest_removeEventListener$exported$1(var$0, var$1, var$2) {
    var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otja_XMLHttpRequest_removeEventListener$exported$2(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function otja_XMLHttpRequest_dispatchEvent$exported$3(var$0, var$1) {
    return !!var$0.$dispatchEvent(var$1);
}
function otja_XMLHttpRequest_addEventListener$exported$4(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
var cgxgbtd_EventHandlerWrapper = $rt_classWithoutFields(0);
function cgxgbtp_AssetDownloadImpl$2() {
    var a = this; jl_Object.call(a);
    a.$val$request = null;
    a.$val$async1 = 0;
    a.$val$url1 = null;
    a.$val$listener2 = null;
    a.$this$08 = null;
}
function cgxgbtp_AssetDownloadImpl$2_handleEvent($this, $evt) {
    var var$2, $response, $currentWindow, var$5, $scriptElement, var$7, var$8, var$9, var$10, var$11, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();$scriptElement = $thread.pop();var$5 = $thread.pop();$currentWindow = $thread.pop();$response = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$val$request.readyState == 4) {
            if ($this.$val$request.status != 200) {
                if ($this.$val$request.status != 404 && $this.$val$request.status != 403) {
                    try {
                        var$2 = Long_fromInt(100);
                        $ptr = 1;
                        continue main;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                        } else {
                            throw $$e;
                        }
                    }
                    cgxgbtp_AssetDownloadImpl_loadScript($this.$this$08, $this.$val$async1, $this.$val$url1, $this.$val$listener2);
                } else
                    $this.$val$listener2.$onFailure($this.$val$url1);
            } else {
                if ($this.$this$08.$showLogs) {
                    if (jl_System_outCache === null) {
                        $response = new ji_PrintStream;
                        $response.$out = otcic_StdoutOutputStream_INSTANCE;
                        $evt = new jl_StringBuilder;
                        $evt.$buffer = $rt_createCharArray(16);
                        $response.$sb = $evt;
                        $response.$buffer2 = $rt_createCharArray(32);
                        $response.$autoFlush = 0;
                        jnci_UTF8Charset_$callClinit();
                        $response.$charset = jnci_UTF8Charset_INSTANCE;
                        jl_System_outCache = $response;
                    }
                    $currentWindow = jl_System_outCache;
                    $evt = $this.$val$url1;
                    $response = new jl_StringBuilder;
                    $response.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($response, $response.$length, $rt_s(459));
                    var$5 = $response.$length;
                    if ($evt === null)
                        $evt = $rt_s(1);
                    jl_AbstractStringBuilder_insert($response, var$5, $evt);
                    $scriptElement = new jl_String;
                    var$7 = $response.$buffer;
                    var$8 = $response.$length;
                    jl_String_$callClinit();
                    var$9 = $rt_createCharArray(var$8);
                    var$10 = var$9.data;
                    $scriptElement.$characters = var$9;
                    var$11 = 0;
                    while (var$11 < var$8) {
                        var$10[var$11] = var$7.data[var$11 + 0 | 0];
                        var$11 = var$11 + 1 | 0;
                    }
                    $evt = $currentWindow.$sb;
                    jl_AbstractStringBuilder_insert($evt, $evt.$length, $scriptElement);
                    var$8 = $evt.$length;
                    jl_AbstractStringBuilder_insertSpace($evt, var$8, var$8 + 1 | 0);
                    $evt.$buffer.data[var$8] = 10;
                    ji_PrintStream_printSB($currentWindow);
                }
                $response = $this.$val$request.response;
                cgxgbtdi_TeaWindow_$callClinit();
                $currentWindow = cgxgbtdi_TeaWindow_TEA_WINDOW.$window0.document;
                $scriptElement = $currentWindow.createElement("script");
                $evt = $currentWindow.createTextNode($response);
                $scriptElement.appendChild($evt);
                $currentWindow.body.appendChild($scriptElement);
                $this.$val$listener2.$onSuccess($this.$val$url1, $rt_str($this.$val$request.responseText));
            }
            $evt = $this.$this$08;
            $evt.$queue = $evt.$queue - 1 | 0;
        }
        return;
    case 1:
        a: {
            try {
                jl_Thread_sleep(var$2);
                if ($rt_suspending()) {
                    break main;
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
        }
        cgxgbtp_AssetDownloadImpl_loadScript($this.$this$08, $this.$val$async1, $this.$val$url1, $this.$val$listener2);
        $evt = $this.$this$08;
        $evt.$queue = $evt.$queue - 1 | 0;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $evt, var$2, $response, $currentWindow, var$5, $scriptElement, var$7, var$8, var$9, var$10, var$11, $ptr);
}
function cgxgbtp_AssetDownloadImpl$2_handleEvent$exported$0(var$0, var$1) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        cgxgbtp_AssetDownloadImpl$2_handleEvent(var$0, var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$0, var$1, $ptr);
}
var cbgu_Collections = $rt_classWithoutFields();
var cbgu_Collections_allocateIterators = 0;
function cbgu_Array$ArrayIterator() {
    var a = this; jl_Object.call(a);
    a.$array0 = null;
    a.$allowRemove = 0;
    a.$index4 = 0;
    a.$valid = 0;
}
function cbgu_Array$ArrayIterator_hasNext($this) {
    var var$1;
    if ($this.$valid)
        return $this.$index4 >= $this.$array0.$size ? 0 : 1;
    var$1 = new cbgu_GdxRuntimeException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    var$1.$message = $rt_s(460);
    $rt_throw(var$1);
}
function cbgu_Array$ArrayIterator_next($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$index4;
    var$2 = $this.$array0;
    if (var$1 < var$2.$size) {
        if ($this.$valid) {
            var$3 = var$2.$items.data;
            $this.$index4 = var$1 + 1 | 0;
            return var$3[var$1];
        }
        var$2 = new cbgu_GdxRuntimeException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(460);
        $rt_throw(var$2);
    }
    var$2 = new ju_NoSuchElementException;
    jl_String_$callClinit();
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$1, 10);
    var$5 = new jl_String;
    var$3 = var$4.$buffer;
    var$1 = var$4.$length;
    var$6 = $rt_createCharArray(var$1);
    var$7 = var$6.data;
    var$5.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$1) {
        var$7[var$8] = var$3.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$5;
    $rt_throw(var$2);
}
function cbgu_Array$ArrayIterable() {
    var a = this; jl_Object.call(a);
    a.$array1 = null;
    a.$allowRemove0 = 0;
    a.$iterator1 = null;
    a.$iterator2 = null;
}
function cbgu_Array$ArrayIterable_iterator($this) {
    var var$1, var$2, var$3;
    if (cbgu_Collections_allocateIterators) {
        var$1 = new cbgu_Array$ArrayIterator;
        var$2 = $this.$array1;
        var$3 = $this.$allowRemove0;
        var$1.$valid = 1;
        var$1.$array0 = var$2;
        var$1.$allowRemove = var$3;
        return var$1;
    }
    if ($this.$iterator1 === null) {
        var$1 = new cbgu_Array$ArrayIterator;
        var$2 = $this.$array1;
        var$3 = $this.$allowRemove0;
        var$1.$valid = 1;
        var$1.$array0 = var$2;
        var$1.$allowRemove = var$3;
        $this.$iterator1 = var$1;
        var$1 = new cbgu_Array$ArrayIterator;
        var$1.$valid = 1;
        var$1.$array0 = var$2;
        var$1.$allowRemove = var$3;
        $this.$iterator2 = var$1;
    }
    var$1 = $this.$iterator1;
    if (var$1.$valid) {
        var$2 = $this.$iterator2;
        var$2.$index4 = 0;
        var$2.$valid = 1;
        var$1.$valid = 0;
        return var$2;
    }
    var$1.$index4 = 0;
    var$1.$valid = 1;
    $this.$iterator2.$valid = 0;
    return var$1;
}
function cgxgbtp_Blob() {
    var a = this; jl_Object.call(a);
    a.$response = null;
    a.$data3 = null;
    a.$image0 = null;
}
function cgxgbtp_Blob_toBase64($this) {
    var $length, $encoded, $i, $base64code, var$5, $j, var$7, var$8, var$9, $j_0;
    $length = $this.$data3.length;
    $encoded = new jl_StringBuilder;
    $encoded.$buffer = $rt_createCharArray((($length * 4 | 0) / 3 | 0) + 2 | 0);
    $i = 0;
    a: {
        b: {
            c: {
                d: {
                    while (true) {
                        if ($i >= $length) {
                            $base64code = new jl_String;
                            var$5 = $encoded.$buffer;
                            $j = $encoded.$length;
                            jl_String_$callClinit();
                            var$7 = $rt_createCharArray($j);
                            var$8 = var$7.data;
                            $base64code.$characters = var$7;
                            var$9 = 0;
                            while (var$9 < $j) {
                                var$8[var$9] = var$5.data[var$9 + 0 | 0];
                                var$9 = var$9 + 1 | 0;
                            }
                            return $base64code;
                        }
                        $j_0 = $length - $i | 0;
                        if ($j_0 < 3) {
                            if ($j_0 >= 2) {
                                $j_0 = (($this.$data3[$i] & 255) << 16) + (($this.$data3[$i + 1 | 0] & 255) << 8) | 0;
                                jl_StringBuilder_append3($encoded, jl_String_charAt($rt_s(461), $j_0 >> 18 & 63));
                                jl_StringBuilder_append3($encoded, jl_String_charAt($rt_s(461), $j_0 >> 12 & 63));
                                jl_StringBuilder_append3($encoded, jl_String_charAt($rt_s(461), $j_0 >> 6 & 63));
                                jl_StringBuilder_append1($encoded, $rt_s(462));
                            } else {
                                $j = ($this.$data3[$i] & 255) << 16;
                                var$9 = $j >> 18 & 63;
                                if (var$9 < 0)
                                    break a;
                                var$5 = $rt_s(461).$characters.data;
                                if (var$9 >= var$5.length)
                                    break a;
                                jl_StringBuilder_append3($encoded, var$5[var$9]);
                                jl_StringBuilder_append3($encoded, jl_String_charAt($rt_s(461), $j >> 12 & 63));
                                jl_StringBuilder_append1($encoded, $rt_s(463));
                            }
                        } else {
                            $j_0 = ((($this.$data3[$i] & 255) << 16) + (($this.$data3[$i + 1 | 0] & 255) << 8) | 0) + ($this.$data3[$i + 2 | 0] & 255) | 0;
                            $j = $j_0 >> 18 & 63;
                            if ($j < 0)
                                break b;
                            var$5 = $rt_s(461).$characters.data;
                            if ($j >= var$5.length)
                                break b;
                            var$9 = var$5[$j];
                            $j = $encoded.$length;
                            jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                            $encoded.$buffer.data[$j] = var$9;
                            $j = $j_0 >> 12 & 63;
                            if ($j < 0)
                                break c;
                            var$5 = $rt_s(461).$characters.data;
                            if ($j >= var$5.length)
                                break c;
                            var$9 = var$5[$j];
                            $j = $encoded.$length;
                            jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                            $encoded.$buffer.data[$j] = var$9;
                            $j = $j_0 >> 6 & 63;
                            if ($j < 0)
                                break d;
                            var$5 = $rt_s(461).$characters.data;
                            if ($j >= var$5.length)
                                break d;
                            var$9 = var$5[$j];
                            $j = $encoded.$length;
                            jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                            $encoded.$buffer.data[$j] = var$9;
                            $j_0 = $j_0 & 63;
                            if ($j_0 < 0)
                                break;
                            var$5 = $rt_s(461).$characters.data;
                            if ($j_0 >= var$5.length)
                                break;
                            $j = var$5[$j_0];
                            $j_0 = $encoded.$length;
                            jl_AbstractStringBuilder_insertSpace($encoded, $j_0, $j_0 + 1 | 0);
                            $encoded.$buffer.data[$j_0] = $j;
                        }
                        $i = $i + 3 | 0;
                    }
                    $base64code = new jl_StringIndexOutOfBoundsException;
                    $base64code.$suppressionEnabled = 1;
                    $base64code.$writableStackTrace = 1;
                    $rt_throw($base64code);
                }
                $base64code = new jl_StringIndexOutOfBoundsException;
                $base64code.$suppressionEnabled = 1;
                $base64code.$writableStackTrace = 1;
                $rt_throw($base64code);
            }
            $base64code = new jl_StringIndexOutOfBoundsException;
            $base64code.$suppressionEnabled = 1;
            $base64code.$writableStackTrace = 1;
            $rt_throw($base64code);
        }
        $base64code = new jl_StringIndexOutOfBoundsException;
        $base64code.$suppressionEnabled = 1;
        $base64code.$writableStackTrace = 1;
        $rt_throw($base64code);
    }
    $base64code = new jl_StringIndexOutOfBoundsException;
    $base64code.$suppressionEnabled = 1;
    $base64code.$writableStackTrace = 1;
    $rt_throw($base64code);
}
function cgxgbtp_Preloader$3$1$1() {
    jl_Object.call(this);
    this.$this$2 = null;
}
function cgxgbtp_Preloader$3$1$1_run($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, $array;
    var$1 = $this.$this$2.$val$droppedFiles;
    var$2 = var$1.$items.constructor;
    if (var$2 === null)
        var$3 = null;
    else {
        var$3 = var$2.classObject;
        if (var$3 === null) {
            var$3 = new jl_Class;
            var$3.$platformClass = var$2;
            var$4 = var$3;
            var$2.classObject = var$4;
        }
    }
    var$5 = var$3.$platformClass.$meta.item;
    if (var$5 === null)
        var$2 = null;
    else {
        var$2 = var$5.classObject;
        if (var$2 === null) {
            var$2 = new jl_Class;
            var$2.$platformClass = var$5;
            var$3 = var$2;
            var$5.classObject = var$3;
        }
    }
    var$6 = var$1.$size;
    if (var$2 === null) {
        var$1 = new jl_NullPointerException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace(var$1);
        $rt_throw(var$1);
    }
    if (var$2 === $rt_cls($rt_voidcls())) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace(var$1);
        $rt_throw(var$1);
    }
    if (var$6 < 0) {
        var$1 = new jl_NegativeArraySizeException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace(var$1);
        $rt_throw(var$1);
    }
    var$3 = jlr_Array_newInstanceImpl(var$2.$platformClass, var$6);
    jl_System_arraycopy(var$1.$items, 0, var$3, 0, var$1.$size);
    $array = var$3;
    $this.$this$2.$this$10.$val$config.$windowListener.$filesDropped($array);
}
var jl_AutoCloseable = $rt_classWithoutFields(0);
var ji_Closeable = $rt_classWithoutFields(0);
var ji_Flushable = $rt_classWithoutFields(0);
var ji_OutputStream = $rt_classWithoutFields();
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out = null;
}
function ji_PrintStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$errorState = 0;
    a.$sb = null;
    a.$buffer2 = null;
    a.$charset = null;
}
function ji_PrintStream_print($this, $s, $begin, $end) {
    var $destBytes, $src, $overflow, var$7, var$8, var$9, var$10, var$11, $$je;
    $destBytes = $s.data;
    $end = $end - $begin | 0;
    $src = new jn_CharBufferOverArray;
    $overflow = $destBytes.length;
    $end = $begin + $end | 0;
    $src.$mark = (-1);
    $src.$capacity = $overflow;
    $src.$limit = $overflow;
    $src.$position = $begin;
    $src.$limit = $end;
    $src.$start0 = 0;
    $src.$readOnly0 = 0;
    $src.$array2 = $s;
    $end = 1024;
    if ($overflow < $end)
        $end = $overflow;
    if (16 > $end)
        $end = 16;
    $destBytes = $rt_createByteArray($end);
    var$7 = $destBytes.data.length;
    var$8 = new jn_ByteBufferImpl;
    var$9 = 0 + var$7 | 0;
    var$8.$mark = (-1);
    var$8.$capacity = var$7;
    var$8.$limit = var$7;
    jn_ByteOrder_$callClinit();
    var$8.$order = jn_ByteOrder_BIG_ENDIAN;
    var$8.$start = 0;
    var$8.$array = $destBytes;
    var$8.$position = 0;
    var$8.$limit = var$9;
    var$8.$direct = 0;
    var$8.$readOnly = 0;
    var$10 = jnci_UTF8Charset_newEncoder($this.$charset);
    jnc_CodingErrorAction_$callClinit();
    var$11 = jnc_CodingErrorAction_REPLACE;
    if (var$11 === null) {
        var$8 = new jl_IllegalArgumentException;
        var$8.$suppressionEnabled = 1;
        var$8.$writableStackTrace = 1;
        var$8.$message = $rt_s(464);
        $rt_throw(var$8);
    }
    var$10.$malformedAction = var$11;
    var$10.$unmappableAction = var$11;
    while (true) {
        $overflow = (jnc_CharsetEncoder_encode0(var$10, $src, var$8, 1)).$kind != 1 ? 0 : 1;
        var$7 = var$8.$position;
        var$11 = $this.$out;
        if (var$11 === null)
            $this.$errorState = 1;
        if ($this.$errorState ? 0 : 1)
            a: {
                try {
                    var$11.$write($destBytes, 0, var$7);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ji_IOException) {
                    } else {
                        throw $$e;
                    }
                }
                $this.$errorState = 1;
            }
        var$8.$position = 0;
        var$8.$limit = var$8.$capacity;
        var$8.$mark = (-1);
        if (!$overflow)
            break;
    }
    while (true) {
        $overflow = (jnc_CharsetEncoder_flush(var$10, var$8)).$kind != 1 ? 0 : 1;
        var$7 = var$8.$position;
        $src = $this.$out;
        if ($src === null)
            $this.$errorState = 1;
        if ($this.$errorState ? 0 : 1)
            b: {
                try {
                    $src.$write($destBytes, 0, var$7);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ji_IOException) {
                    } else {
                        throw $$e;
                    }
                }
                $this.$errorState = 1;
            }
        var$8.$position = 0;
        var$8.$limit = var$8.$capacity;
        var$8.$mark = (-1);
        if (!$overflow)
            break;
    }
}
function ji_PrintStream_println($this, $s) {
    var var$2, var$3;
    var$2 = $this.$sb;
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $s);
    var$3 = var$2.$length;
    jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
    var$2.$buffer.data[var$3] = 10;
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_printSB($this) {
    var var$1, var$2, $buffer, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$sb;
    var$2 = var$1.$length;
    $buffer = $this.$buffer2;
    if (var$2 > $buffer.data.length)
        $buffer = $rt_createCharArray(var$2);
    var$4 = 0;
    var$5 = 0;
    if (var$4 > var$2) {
        var$1 = new jl_IndexOutOfBoundsException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(465);
        $rt_throw(var$1);
    }
    while (var$4 < var$2) {
        var$6 = $buffer.data;
        var$7 = var$5 + 1 | 0;
        var$8 = var$1.$buffer.data;
        var$9 = var$4 + 1 | 0;
        var$6[var$5] = var$8[var$4];
        var$5 = var$7;
        var$4 = var$9;
    }
    ji_PrintStream_print($this, $buffer, 0, var$2);
    $this.$sb.$length = 0;
}
function otcic_ConsoleOutputStream() {
    ji_OutputStream.call(this);
    this.$buffer0 = null;
}
var otcic_StdoutOutputStream = $rt_classWithoutFields(otcic_ConsoleOutputStream);
var otcic_StdoutOutputStream_INSTANCE = null;
function otcic_StdoutOutputStream_write($this, $b, $off, $len) {
    var var$4;
    var$4 = 0;
    while (var$4 < $len) {
        $rt_putStdout($b.data[var$4 + $off | 0] & 255);
        var$4 = var$4 + 1 | 0;
    }
}
function otcic_StdoutOutputStream__clinit_() {
    var var$1;
    var$1 = new otcic_StdoutOutputStream;
    var$1.$buffer0 = $rt_createByteArray(1);
    otcic_StdoutOutputStream_INSTANCE = var$1;
}
function cgxgbtp_AssetDownloadImpl$6() {
    var a = this; jl_Object.call(a);
    a.$val$listener3 = null;
    a.$this$09 = null;
}
function cgxgbtp_AssetDownloadImpl$6_handleEvent$exported$0(var$0, var$1) {
    var$0.$val$listener3.$onProgress(var$1.loaded);
}
function jnc_Charset() {
    var a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
function jnc_Charset_checkCanonicalName($name) {
    var var$2, $c, var$4, $i;
    var$2 = $name.$characters.data;
    $c = var$2.length;
    if ($c ? 0 : 1) {
        var$4 = new jnc_IllegalCharsetNameException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$charsetName0 = $name;
        $rt_throw(var$4);
    }
    if (0 >= $c) {
        $name = new jl_StringIndexOutOfBoundsException;
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $rt_throw($name);
    }
    if (!jnc_Charset_isValidCharsetStart(var$2[0])) {
        var$4 = new jnc_IllegalCharsetNameException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$charsetName0 = $name;
        $rt_throw(var$4);
    }
    $i = 1;
    a: {
        while (true) {
            var$2 = $name.$characters.data;
            $c = $rt_compare($i, var$2.length);
            if ($c >= 0)
                break;
            if ($i < 0)
                break a;
            if ($c >= 0)
                break a;
            b: {
                $c = var$2[$i];
                switch ($c) {
                    case 43:
                    case 45:
                    case 46:
                    case 58:
                    case 95:
                        break;
                    default:
                        if (jnc_Charset_isValidCharsetStart($c))
                            break b;
                        else {
                            var$4 = new jnc_IllegalCharsetNameException;
                            var$4.$suppressionEnabled = 1;
                            var$4.$writableStackTrace = 1;
                            var$4.$charsetName0 = $name;
                            $rt_throw(var$4);
                        }
                }
            }
            $i = $i + 1 | 0;
        }
        return;
    }
    $name = new jl_StringIndexOutOfBoundsException;
    $name.$suppressionEnabled = 1;
    $name.$writableStackTrace = 1;
    $rt_throw($name);
}
function jnc_Charset_isValidCharsetStart($c) {
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            $c = 1;
            break a;
        }
        $c = 0;
    }
    return $c;
}
function jnc_Charset_name($this) {
    return $this.$canonicalName;
}
function jnc_Charset_encode($this, $cb) {
    var var$2, $e, $$je;
    a: {
        try {
            var$2 = $this.$newEncoder();
            jnc_CodingErrorAction_$callClinit();
            $cb = jnc_CharsetEncoder_encode(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(var$2, jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $cb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $cb;
    }
    var$2 = new jl_AssertionError;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(73);
    var$2.$cause = $e;
    $rt_throw(var$2);
}
var jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset);
var jnci_UTF8Charset_INSTANCE = null;
function jnci_UTF8Charset_$callClinit() {
    jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
    jnci_UTF8Charset__clinit_();
}
function jnci_UTF8Charset_newEncoder($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Encoder;
    var$2 = $rt_createByteArray(1);
    var$3 = var$2.data;
    var$3[0] = 63;
    jnc_CodingErrorAction_$callClinit();
    var$4 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction = var$4;
    var$1.$unmappableAction = var$4;
    var$5 = var$3.length;
    if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
        var$1.$charset0 = $this;
        var$1.$replacement0 = var$2.$clone();
        var$1.$averageBytesPerChar = 2.0;
        var$1.$maxBytesPerChar = 4.0;
        var$1.$inArray = $rt_createCharArray(512);
        var$1.$outArray = $rt_createByteArray(512);
        return var$1;
    }
    var$4 = new jl_IllegalArgumentException;
    jl_Throwable__init_3(var$4, $rt_s(466));
    $rt_throw(var$4);
}
function jnci_UTF8Charset__clinit_() {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Charset;
    jnci_UTF8Charset_$callClinit();
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(123));
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        jnc_Charset_checkCanonicalName(var$3[var$5]);
        var$5 = var$5 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(123);
    var$1.$aliases = var$2.$clone();
    jnci_UTF8Charset_INSTANCE = var$1;
}
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
var cbggg_Batch = $rt_classWithoutFields(0);
function cbggg_SpriteBatch() {
    var a = this; jl_Object.call(a);
    a.$mesh = null;
    a.$vertices = null;
    a.$idx = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$drawing = 0;
    a.$transformMatrix = null;
    a.$projectionMatrix = null;
    a.$combinedMatrix = null;
    a.$blendingDisabled = 0;
    a.$blendSrcFunc = 0;
    a.$blendDstFunc = 0;
    a.$blendSrcFuncAlpha = 0;
    a.$blendDstFuncAlpha = 0;
    a.$shader = null;
    a.$customShader = null;
    a.$ownsShader = 0;
    a.$color0 = null;
    a.$colorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
var cbggg_SpriteBatch_defaultVertexDataType = null;
function cbggg_SpriteBatch_$callClinit() {
    cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
    cbggg_SpriteBatch__clinit_();
}
function cbggg_SpriteBatch__init_0(var_0, var_1) {
    var var_2 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_(var_2, var_0, var_1);
    return var_2;
}
function cbggg_SpriteBatch__init_($this, $size, $defaultShader) {
    var var$3, var$4, $indices, var$6, var$7, var$8, $j, $vertexDataType, var$11, var$12, var$13, var$14, var$15, $i;
    cbggg_SpriteBatch_$callClinit();
    $this.$idx = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$drawing = 0;
    $this.$transformMatrix = cbgm_Matrix4__init_();
    $this.$projectionMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix = cbgm_Matrix4__init_();
    $this.$blendingDisabled = 0;
    $this.$blendSrcFunc = 770;
    $this.$blendDstFunc = 771;
    $this.$blendSrcFuncAlpha = 770;
    $this.$blendDstFuncAlpha = 771;
    $this.$customShader = null;
    var$3 = new cbgg_Color;
    cbgg_Color_$callClinit();
    var$3.$r = 1.0;
    var$3.$g = 1.0;
    var$3.$b = 1.0;
    var$3.$a = 1.0;
    cbgg_Color_clamp(var$3);
    $this.$color0 = var$3;
    $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191) {
        $defaultShader = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(467));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $size, 10);
        var$4 = new jl_String;
        $indices = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$8 = var$7.data;
        var$4.$characters = var$7;
        $j = 0;
        while ($j < var$6) {
            var$8[$j] = $indices.data[$j + 0 | 0];
            $j = $j + 1 | 0;
        }
        $defaultShader.$suppressionEnabled = 1;
        $defaultShader.$writableStackTrace = 1;
        $defaultShader.$message = var$4;
        $rt_throw($defaultShader);
    }
    if (cbg_Gdx_gl30 === null)
        $vertexDataType = cbggg_SpriteBatch_defaultVertexDataType;
    else {
        cbgg_Mesh$VertexDataType_$callClinit();
        $vertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    }
    var$11 = new cbgg_Mesh;
    var$12 = $size * 4 | 0;
    var$13 = $size * 6 | 0;
    $indices = $rt_createArray(cbgg_VertexAttribute, 3);
    var$7 = $indices.data;
    var$3 = new cbgg_VertexAttribute;
    var$3.$usage = 1;
    var$3.$numComponents = 2;
    var$3.$type0 = 5126;
    var$3.$normalized = 0;
    var$3.$alias = $rt_s(468);
    var$3.$unit = 0;
    var$3.$usageIndex = jl_Integer_numberOfTrailingZeros(1);
    var$7[0] = var$3;
    var$3 = new cbgg_VertexAttribute;
    var$3.$usage = 4;
    var$3.$numComponents = 4;
    var$3.$type0 = 5121;
    var$3.$normalized = 1;
    var$3.$alias = $rt_s(469);
    var$3.$unit = 0;
    var$3.$usageIndex = jl_Integer_numberOfTrailingZeros(4);
    var$7[1] = var$3;
    var$3 = new cbgg_VertexAttribute;
    var$3.$usage = 16;
    var$3.$numComponents = 2;
    var$3.$type0 = 5126;
    var$3.$normalized = 0;
    var$3.$alias = $rt_s(470);
    var$3.$unit = 0;
    var$3.$usageIndex = jl_Integer_numberOfTrailingZeros(16);
    var$7[2] = var$3;
    cbgg_Mesh__init_(var$11, $vertexDataType, 0, var$12, var$13, cbgg_VertexAttributes__init_($indices));
    $this.$mesh = var$11;
    $vertexDataType = $this.$projectionMatrix;
    var$14 = cbg_Gdx_graphics.$canvas0.width;
    var$15 = cbg_Gdx_graphics.$canvas0.height;
    cbgm_Matrix4_setToOrtho($vertexDataType, 0.0, 0.0 + var$14, 0.0, 0.0 + var$15, 0.0, 1.0);
    $this.$vertices = $rt_createFloatArray($size * 20 | 0);
    $indices = $rt_createShortArray(var$13);
    var$7 = $indices.data;
    $j = 0;
    $i = 0;
    while ($i < var$13) {
        var$7[$i] = $j;
        var$7[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
        var$6 = $i + 2 | 0;
        $size = ($j + 2 | 0) << 16 >> 16;
        var$7[var$6] = $size;
        var$7[$i + 3 | 0] = $size;
        var$7[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
        var$7[$i + 5 | 0] = $j;
        $i = $i + 6 | 0;
        $j = ($j + 4 | 0) << 16 >> 16;
    }
    cbgg_Mesh_setIndices($this.$mesh, $indices);
    if ($defaultShader !== null)
        $this.$shader = $defaultShader;
    else {
        $this.$shader = cbggg_SpriteBatch_createDefaultShader();
        $this.$ownsShader = 1;
    }
}
function cbggg_SpriteBatch_createDefaultShader() {
    var $shader, $vertexShader, $fragmentShader, var$4, var$5, var$6, var$7, var$8, var$9;
    cbggg_SpriteBatch_$callClinit();
    $shader = cbggg_ShaderProgram__init_($rt_s(471), $rt_s(472));
    if ($shader.$isCompiled)
        return $shader;
    $vertexShader = new jl_IllegalArgumentException;
    $fragmentShader = new jl_StringBuilder;
    $fragmentShader.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($fragmentShader, $fragmentShader.$length, $rt_s(473));
    if (!$shader.$isCompiled)
        var$4 = $shader.$log;
    else {
        var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog($shader.$program);
        $shader.$log = var$4;
    }
    jl_AbstractStringBuilder_insert($fragmentShader, $fragmentShader.$length, var$4);
    $shader = new jl_String;
    var$5 = $fragmentShader.$buffer;
    var$6 = $fragmentShader.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    $shader.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    $vertexShader.$suppressionEnabled = 1;
    $vertexShader.$writableStackTrace = 1;
    $vertexShader.$message = $shader;
    $rt_throw($vertexShader);
}
function cbggg_SpriteBatch_begin($this) {
    var var$1, var$2;
    if ($this.$drawing) {
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(474);
        $rt_throw(var$1);
    }
    $this.$renderCalls = 0;
    cbg_Gdx_gl.$glDepthMask(0);
    var$2 = $this.$customShader;
    if (var$2 !== null)
        var$2.$bind();
    else {
        var$2 = $this.$shader;
        var$1 = cbg_Gdx_gl20;
        if (var$2.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$2, var$2.$vertexShaderSource, var$2.$fragmentShaderSource);
            var$2.$invalidated = 0;
        }
        var$1.$glUseProgram(var$2.$program);
    }
    cbggg_SpriteBatch_setupMatrices($this);
    $this.$drawing = 1;
}
function cbggg_SpriteBatch_end($this) {
    var var$1, $gl;
    if (!$this.$drawing) {
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(475);
        $rt_throw(var$1);
    }
    if ($this.$idx > 0)
        cbggg_SpriteBatch_flush($this);
    $this.$lastTexture = null;
    $this.$drawing = 0;
    $gl = cbg_Gdx_gl;
    $gl.$glDepthMask(1);
    if ($this.$blendingDisabled ? 0 : 1)
        $gl.$glDisable(3042);
}
function cbggg_SpriteBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
    var $verticesLength, $copyCount;
    if (!$this.$drawing) {
        $texture = new jl_IllegalStateException;
        $texture.$suppressionEnabled = 1;
        $texture.$writableStackTrace = 1;
        $texture.$message = $rt_s(476);
        $rt_throw($texture);
    }
    $verticesLength = $this.$vertices.data.length;
    if ($texture !== $this.$lastTexture) {
        cbggg_SpriteBatch_flush($this);
        $this.$lastTexture = $texture;
        $texture = $texture.$data0;
        $this.$invTexWidth = 1.0 / $texture.$width3;
        $this.$invTexHeight = 1.0 / $texture.$height1;
        $copyCount = $verticesLength;
    } else {
        $copyCount = $verticesLength - $this.$idx | 0;
        if (!$copyCount) {
            cbggg_SpriteBatch_flush($this);
            $copyCount = $verticesLength;
        }
    }
    if ($copyCount >= $count)
        $copyCount = $count;
    jl_System_arraycopy($spriteVertices, $offset, $this.$vertices, $this.$idx, $copyCount);
    $this.$idx = $this.$idx + $copyCount | 0;
    $count = $count - $copyCount | 0;
    while ($count > 0) {
        $offset = $offset + $copyCount | 0;
        cbggg_SpriteBatch_flush($this);
        $copyCount = $verticesLength >= $count ? $count : $verticesLength;
        jl_System_arraycopy($spriteVertices, $offset, $this.$vertices, 0, $copyCount);
        $this.$idx = $this.$idx + $copyCount | 0;
        $count = $count - $copyCount | 0;
    }
}
function cbggg_SpriteBatch_flush($this) {
    var $count, $spritesInBatch, $mesh, var$4, var$5, $indicesBuffer;
    $count = $this.$idx;
    if (!$count)
        return;
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $count / 20 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    $mesh = $this.$lastTexture;
    cbg_Gdx_gl.$glBindTexture($mesh.$glTarget, $mesh.$glHandle);
    $mesh = $this.$mesh;
    var$4 = $this.$vertices;
    var$5 = $this.$idx;
    $mesh.$vertices0.$setVertices(var$4, 0, var$5);
    $indicesBuffer = $mesh.$indices.$getBuffer(1);
    jn_Buffer_position($indicesBuffer, 0);
    jn_Buffer_limit($indicesBuffer, $count);
    if ($this.$blendingDisabled)
        cbg_Gdx_gl.$glDisable(3042);
    else {
        cbg_Gdx_gl.$glEnable(3042);
        $spritesInBatch = $this.$blendSrcFunc;
        if ($spritesInBatch != (-1))
            cbg_Gdx_gl.$glBlendFuncSeparate($spritesInBatch, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
    }
    $indicesBuffer = $this.$customShader;
    if ($indicesBuffer === null)
        $indicesBuffer = $this.$shader;
    cbgg_Mesh_render($mesh, $indicesBuffer, 4, 0, $count, $mesh.$autoBind);
    $this.$idx = 0;
}
function cbggg_SpriteBatch_setProjectionMatrix($this, $projection) {
    if ($this.$drawing)
        cbggg_SpriteBatch_flush($this);
    cbgm_Matrix4_set($this.$projectionMatrix, $projection.$val);
    if ($this.$drawing)
        cbggg_SpriteBatch_setupMatrices($this);
}
function cbggg_SpriteBatch_setupMatrices($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    cbgm_Matrix4_mul(cbgm_Matrix4_set($this.$combinedMatrix, $this.$projectionMatrix.$val), $this.$transformMatrix);
    var$1 = $this.$customShader;
    if (var$1 !== null) {
        var$1.$setUniformMatrix($rt_s(477), $this.$combinedMatrix);
        $this.$customShader.$setUniformi($rt_s(478), 0);
    } else {
        var$1 = $this.$shader;
        var$2 = $this.$combinedMatrix;
        cbggg_ShaderProgram_$callClinit();
        var$3 = cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(477), cbggg_ShaderProgram_pedantic);
        var$4 = cbg_Gdx_gl20;
        if (var$1.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
            var$1.$invalidated = 0;
        }
        var$5 = var$2.$val;
        var$1 = var$4.$uniforms;
        var$6 = var$4.$currProgram;
        if (var$6 >= (-128) && var$6 <= 127) {
            jl_Integer_ensureIntegerCache();
            var$7 = jl_Integer_integerCache.data[var$6 + 128 | 0];
        } else {
            var$7 = new jl_Integer;
            jl_Object__init_0(var$7);
            var$7.$value5 = var$6;
        }
        if (var$7 === null) {
            var$1 = var$1.$elementData.data[0];
            while (var$1 !== null && var$1.$key !== null) {
                var$1 = var$1.$next;
            }
        } else {
            var$6 = jl_Integer_hashCode(var$7);
            var$8 = var$1.$elementData.data;
            var$1 = var$8[var$6 & (var$8.length - 1 | 0)];
            while (var$1 !== null && !(var$1.$origKeyHash == var$6 && ju_HashMap_areEqualKeys(var$7, var$1.$key))) {
                var$1 = var$1.$next;
            }
        }
        var$1 = var$1 === null ? null : var$1.$value4;
        if (var$3 >= (-128) && var$3 <= 127) {
            jl_Integer_ensureIntegerCache();
            var$2 = jl_Integer_integerCache.data[var$3 + 128 | 0];
        } else {
            var$2 = new jl_Integer;
            jl_Object__init_0(var$2);
            var$2.$value5 = var$3;
        }
        if (var$2 === null) {
            var$1 = var$1.$elementData.data[0];
            while (var$1 !== null && var$1.$key !== null) {
                var$1 = var$1.$next;
            }
        } else {
            var$3 = jl_Integer_hashCode(var$2);
            var$8 = var$1.$elementData.data;
            var$1 = var$8[var$3 & (var$8.length - 1 | 0)];
            while (var$1 !== null && !(var$1.$origKeyHash == var$3 && ju_HashMap_areEqualKeys(var$2, var$1.$key))) {
                var$1 = var$1.$next;
            }
        }
        var$7 = var$1 === null ? null : var$1.$value4;
        var$1 = var$4.$gl0;
        var$4 = "uniformMatrix4fv";
        var$2 = !!0;
        if (var$5 === null)
            var$9 = null;
        else {
            var$8 = var$5.data;
            var$10 = var$8.length;
            var$9 = new $rt_globals.Array(var$10);
            var$11 = 0;
            while (var$11 < var$10) {
                var$12 = var$8[var$11];
                var$9[var$11] = var$12;
                var$11 = var$11 + 1 | 0;
            }
        }
        var$1[var$4](var$7, var$2, var$9);
        var$1 = $this.$shader;
        var$2 = cbg_Gdx_gl20;
        if (var$1.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
            var$1.$invalidated = 0;
        }
        var$2.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(478), cbggg_ShaderProgram_pedantic), 0);
    }
}
function cbggg_SpriteBatch__clinit_() {
    cbgg_Mesh$VertexDataType_$callClinit();
    cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexArray;
}
var cbg_Screen = $rt_classWithoutFields(0);
var cbg_ScreenAdapter = $rt_classWithoutFields();
function cbg_ScreenAdapter_hide($this) {}
function cbg_ScreenAdapter_pause($this) {}
function cbg_ScreenAdapter_resume($this) {}
function cgt_ChopScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$random = null;
    a.$batch0 = null;
    a.$renderer = null;
    a.$amounts = null;
    a.$iterations = Long_ZERO;
    a.$font1 = null;
    a.$viewport = null;
    a.$mainGame = null;
}
function cgt_ChopScreen_show($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font1 = $this.$mainGame.$font0;
    var$1 = new cgtr_ChopRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA = var$2;
    var$1.$stateB = var$3;
    var$1.$stateC = var$4;
    var$1.$stateD = var$5;
    $this.$random = var$1;
    $this.$batch0 = $this.$mainGame.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp = var$7;
    var$6.$near = 0.0;
    var$1.$tmp0 = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader0 = 1;
        $this.$renderer = var$1;
        var$9 = $this.$amounts.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(473));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log = var$7;
    }
    jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$3 = var$6.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray(var$3);
    var$11 = var$10.data;
    var$7.$characters = var$10;
    var$4 = 0;
    while (var$4 < var$3) {
        var$11[var$4] = var$9.data[var$4 + 0 | 0];
        var$4 = var$4 + 1 | 0;
    }
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    var$1.$message = var$7;
    $rt_throw(var$1);
}
function cgt_ChopScreen_render($this, $delta) {
    var var$2, $camera, $i, $x, var$6, $m, $color, $j;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        $camera = $this.$mainGame;
        $i = $camera.$screenIndex;
        var$2 = $camera.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        $camera.$screenIndex = $i;
        var$6 = var$2[$i];
        $camera.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            $camera.$screen.$resize0(cbg_Gdx_graphics.$canvas0.width, cbg_Gdx_graphics.$canvas0.height);
        }
        return;
    }
    if (var$2[72]) {
        $camera = $this.$mainGame;
        $i = $camera.$screenIndex + 1 | 0;
        var$2 = $camera.$screens.data;
        $i = $i % var$2.length | 0;
        $camera.$screenIndex = $i;
        var$6 = var$2[$i];
        $camera.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            $camera.$screen.$resize0(cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics));
        }
        return;
    }
    if (var$2[111])
        return;
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = cbguv_Viewport_getCamera($this.$viewport);
    cbgg_OrthographicCamera_update($camera);
    if (cgxgbt_TeaInput_isKeyPressed(cbg_Gdx_input, 29)) {
        ju_Arrays_fill($this.$amounts, Long_ZERO);
        $this.$iterations = Long_ZERO;
    }
    if (cgxgbt_TeaInput_isKeyPressed(cbg_Gdx_input, 30)) {
        ju_Arrays_fill($this.$amounts, Long_ZERO);
        $this.$iterations = Long_ZERO;
    }
    if (cgxgbt_TeaInput_isKeyPressed(cbg_Gdx_input, 31)) {
        ju_Arrays_fill($this.$amounts, Long_ZERO);
        $this.$iterations = Long_ZERO;
    }
    $this.$iterations = Long_add($this.$iterations, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgtr_EnhancedRandom_nextExclusiveFloat($this.$random) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    cbggg_ImmediateModeRenderer20_begin($this.$renderer, $camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        cbggg_ImmediateModeRenderer20_color($this.$renderer, $color);
        var$6 = $this.$renderer;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$6, $delta, 0.0, 0.0);
        cbggg_ImmediateModeRenderer20_color($this.$renderer, $color);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $delta, 0.0625 * Long_toNumber($this.$amounts.data[$x]) / Long_toNumber($this.$iterations), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        cbggg_ImmediateModeRenderer20_color($this.$renderer, (-6.221923240859403E37));
        var$6 = $this.$renderer;
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$6, 0.0, $color, 0.0);
        cbggg_ImmediateModeRenderer20_color($this.$renderer, (-6.221923240859403E37));
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_end($this.$renderer);
    cbggg_SpriteBatch_setProjectionMatrix($this.$batch0, $camera.$combined);
    cbggg_SpriteBatch_begin($this.$batch0);
    cbggg_BitmapFont_draw($this.$font1, $this.$batch0, cgt_Stringf_format($rt_s(479), $rt_createArrayFromData(jl_Object, [cgtr_ChopRandom_getTag($this.$random), jl_Integer_valueOf(cgxgbt_TeaGraphics_getFramesPerSecond(cbg_Gdx_graphics))])), 64.0, 522.0, 384.0, 1, 1);
    cbggg_SpriteBatch_end($this.$batch0);
}
function cgt_ChopScreen_resize($this, $width, $height) {
    var var$3, var$4, var$5;
    var$3 = $this.$viewport;
    var$3.$screenX = 0;
    var$3.$screenY = 0;
    var$3.$screenWidth = $width;
    var$3.$screenHeight = $height;
    var$4 = $width;
    var$5 = var$3.$unitsPerPixel;
    var$4 = var$4 * var$5;
    var$5 = $height * var$5;
    var$3.$worldWidth = var$4;
    var$3.$worldHeight = var$5;
    cbguv_Viewport_apply(var$3, 1);
    cbguv_Viewport_apply($this.$viewport, 1);
}
function cgt_AceScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$random0 = null;
    a.$batch1 = null;
    a.$renderer0 = null;
    a.$amounts0 = null;
    a.$iterations0 = Long_ZERO;
    a.$font2 = null;
    a.$viewport0 = null;
    a.$mainGame0 = null;
}
function cgt_AceScreen_show($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$font2 = $this.$mainGame0.$font0;
    var$1 = new cgtr_AceRandom;
    var$1.$stateA0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateB0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateC0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateD0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateE = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    $this.$random0 = var$1;
    $this.$batch1 = $this.$mainGame0.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$2 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$2);
    var$2.$zoom = 1.0;
    var$3 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$2.$tmp = var$3;
    var$2.$near = 0.0;
    var$1.$tmp0 = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$2;
    $this.$viewport0 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$4.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$4);
        var$1.$ownsShader0 = 1;
        $this.$renderer0 = var$1;
        var$5 = $this.$amounts0.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = Long_ZERO;
            var$6 = var$8;
        }
        $this.$iterations0 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(473));
    if (!var$4.$isCompiled)
        var$3 = var$4.$log;
    else {
        var$3 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
        var$4.$log = var$3;
    }
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, var$3);
    var$3 = new jl_String;
    var$5 = var$2.$buffer;
    var$7 = var$2.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$7);
    var$10 = var$9.data;
    var$3.$characters = var$9;
    var$8 = 0;
    while (var$8 < var$7) {
        var$10[var$8] = var$5.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    var$1.$message = var$3;
    $rt_throw(var$1);
}
function cgt_AceScreen_render($this, $delta) {
    var var$2, $camera, $i, $x, var$6, $m, $color, $j;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        $camera = $this.$mainGame0;
        $i = $camera.$screenIndex;
        var$2 = $camera.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        $camera.$screenIndex = $i;
        var$6 = var$2[$i];
        $camera.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            $camera.$screen.$resize0(cbg_Gdx_graphics.$canvas0.width, cbg_Gdx_graphics.$canvas0.height);
        }
        return;
    }
    if (var$2[72]) {
        $camera = $this.$mainGame0;
        $i = $camera.$screenIndex + 1 | 0;
        var$2 = $camera.$screens.data;
        $i = $i % var$2.length | 0;
        $camera.$screenIndex = $i;
        var$6 = var$2[$i];
        $camera.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            $camera.$screen.$resize0(cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics));
        }
        return;
    }
    if (var$2[111])
        return;
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = cbguv_Viewport_getCamera($this.$viewport0);
    cbgg_OrthographicCamera_update($camera);
    if (cgxgbt_TeaInput_isKeyPressed(cbg_Gdx_input, 29)) {
        ju_Arrays_fill($this.$amounts0, Long_ZERO);
        $this.$iterations0 = Long_ZERO;
    }
    if (cgxgbt_TeaInput_isKeyPressed(cbg_Gdx_input, 30)) {
        ju_Arrays_fill($this.$amounts0, Long_ZERO);
        $this.$iterations0 = Long_ZERO;
    }
    if (cgxgbt_TeaInput_isKeyPressed(cbg_Gdx_input, 31)) {
        ju_Arrays_fill($this.$amounts0, Long_ZERO);
        $this.$iterations0 = Long_ZERO;
    }
    $this.$iterations0 = Long_add($this.$iterations0, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgtr_EnhancedRandom_nextExclusiveFloat($this.$random0) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts0.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    cbggg_ImmediateModeRenderer20_begin($this.$renderer0, $camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        cbggg_ImmediateModeRenderer20_color($this.$renderer0, $color);
        var$6 = $this.$renderer0;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$6, $delta, 0.0, 0.0);
        cbggg_ImmediateModeRenderer20_color($this.$renderer0, $color);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer0, $delta, 0.0625 * Long_toNumber($this.$amounts0.data[$x]) / Long_toNumber($this.$iterations0), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        cbggg_ImmediateModeRenderer20_color($this.$renderer0, (-6.221923240859403E37));
        var$6 = $this.$renderer0;
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$6, 0.0, $color, 0.0);
        cbggg_ImmediateModeRenderer20_color($this.$renderer0, (-6.221923240859403E37));
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer0, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_end($this.$renderer0);
    cbggg_SpriteBatch_setProjectionMatrix($this.$batch1, $camera.$combined);
    cbggg_SpriteBatch_begin($this.$batch1);
    cbggg_BitmapFont_draw($this.$font2, $this.$batch1, cgt_Stringf_format($rt_s(479), $rt_createArrayFromData(jl_Object, [cgtr_AceRandom_getTag($this.$random0), jl_Integer_valueOf(cgxgbt_TeaGraphics_getFramesPerSecond(cbg_Gdx_graphics))])), 64.0, 522.0, 384.0, 1, 1);
    cbggg_SpriteBatch_end($this.$batch1);
}
function cgt_AceScreen_resize($this, $width, $height) {
    var var$3, var$4, var$5;
    var$3 = $this.$viewport0;
    var$3.$screenX = 0;
    var$3.$screenY = 0;
    var$3.$screenWidth = $width;
    var$3.$screenHeight = $height;
    var$4 = $width;
    var$5 = var$3.$unitsPerPixel;
    var$4 = var$4 * var$5;
    var$5 = $height * var$5;
    var$3.$worldWidth = var$4;
    var$3.$worldHeight = var$5;
    cbguv_Viewport_apply(var$3, 1);
    cbguv_Viewport_apply($this.$viewport0, 1);
}
var ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException);
var cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException);
function cbgu_GdxRuntimeException__init_0(var_0, var_1) {
    var var_2 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_1(var_2, var_0, var_1);
    return var_2;
}
function cbgu_GdxRuntimeException__init_2(var_0) {
    var var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_(var_1, var_0);
    return var_1;
}
function cbgu_GdxRuntimeException__init_1($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $cause;
}
function cbgu_GdxRuntimeException__init_($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
}
var otcir_Flags = $rt_classWithoutFields();
function otcir_Flags_getModifiers($flags, $access) {
    var $modifiers;
    a: {
        $modifiers = 0;
        switch ($access) {
            case 1:
                $modifiers = 2;
                break a;
            case 2:
                $modifiers = 4;
                break a;
            case 3:
                $modifiers = 1;
                break a;
            default:
        }
    }
    $access = $flags >>> 6 | 0;
    return $modifiers | $access & 8 | $flags << 2 & 16 | $access & 32 | ($flags >>> 8 | 0) & 64 | ($flags >>> 5 | 0) & 128 | $flags & 256 | $flags << 8 & 512 | $flags << 10 & 1024 | $flags << 1 & 2048;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$041 = null;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 2 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$042 = null;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 1 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$043 = null;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1_contains($this, $ch) {
    a: {
        switch ($ch) {
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 28:
            case 29:
            case 30:
            case 31:
                break;
            case 160:
            case 8199:
            case 8239:
                $ch = 0;
                break a;
            default:
                b: {
                    switch (jl_Character_getType($ch)) {
                        case 12:
                        case 13:
                        case 14:
                            break;
                        default:
                            $ch = 0;
                            break b;
                    }
                    $ch = 1;
                }
                break a;
        }
        $ch = 1;
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$044 = null;
}
function jur_AbstractCharClass$LazyJavaMirrored$1_contains($this, $ch) {
    return 0;
}
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$045 = null;
}
function jur_AbstractCharClass$LazyJavaDefined$1_contains($this, $ch) {
    return !jl_Character_getType($ch) ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$046 = null;
}
function jur_AbstractCharClass$LazyJavaDigit$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 9 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$047 = null;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains($this, $ch) {
    return jl_Character_isIdentifierIgnorable($ch);
}
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$048 = null;
}
function jur_AbstractCharClass$LazyJavaISOControl$1_contains($this, $ch) {
    a: {
        b: {
            if (!($ch >= 0 && $ch <= 31)) {
                if ($ch < 127)
                    break b;
                if ($ch > 159)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$049 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                case 26:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$050 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                case 23:
                case 26:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$051 = null;
}
function jur_AbstractCharClass$LazyJavaLetter$1_contains($this, $ch) {
    a: {
        switch (jl_Character_getType($ch)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                $ch = 0;
                break a;
        }
        $ch = 1;
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$052 = null;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 9:
                    break;
                case 6:
                case 7:
                case 8:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$053 = null;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1_contains($this, $ch) {
    a: {
        switch (jl_Character_getType($ch)) {
            case 12:
            case 13:
            case 14:
                break;
            default:
                $ch = 0;
                break a;
        }
        $ch = 1;
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$054 = null;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1_contains($this, $ch) {
    return jl_Character_getType($ch) != 3 ? 0 : 1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$055 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$056 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains($this, $ch) {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
}
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category0 = 0;
}
function jur_UnicodeCategory_contains($this, $ch) {
    return $this.$alt0 ^ ($this.$category0 != jl_Character_getType($ch & 65535) ? 0 : 1);
}
var jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory);
function jur_UnicodeCategoryScope_contains($this, $ch) {
    return $this.$alt0 ^ (!($this.$category0 >> jl_Character_getType($ch & 65535) & 1) ? 0 : 1);
}
function jl_Thread$start$lambda$_4_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
function jl_Thread$start$lambda$_4_0_run(var$0) {
    jl_Thread_runThread(var$0.$_01);
}
var otjt_Int8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var cgxgbtp_Preloader$12 = $rt_classWithoutFields();
var cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = null;
function cgxgbtp_Preloader$12_$callClinit() {
    cgxgbtp_Preloader$12_$callClinit = $rt_eraseClinit(cgxgbtp_Preloader$12);
    cgxgbtp_Preloader$12__clinit_();
}
function cgxgbtp_Preloader$12__clinit_() {
    var var$1, var$2;
    cgxgbtp_AssetType_$callClinit();
    var$1 = $rt_createIntArray((cgxgbtp_AssetType_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = var$1;
    var$2[cgxgbtp_AssetType_Text.$ordinal] = 1;
    var$2[cgxgbtp_AssetType_Image.$ordinal] = 2;
    var$2[cgxgbtp_AssetType_Binary.$ordinal] = 3;
    var$2[cgxgbtp_AssetType_Audio.$ordinal] = 4;
    var$2[cgxgbtp_AssetType_Directory.$ordinal] = 5;
}
var ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException);
var otcic_StderrOutputStream = $rt_classWithoutFields(otcic_ConsoleOutputStream);
var otcic_StderrOutputStream_INSTANCE = null;
function otcic_StderrOutputStream_write($this, $b, $off, $len) {
    var var$4;
    var$4 = 0;
    while (var$4 < $len) {
        $rt_putStderr($b.data[var$4 + $off | 0] & 255);
        var$4 = var$4 + 1 | 0;
    }
}
function otcic_StderrOutputStream__clinit_() {
    var var$1;
    var$1 = new otcic_StderrOutputStream;
    var$1.$buffer0 = $rt_createByteArray(1);
    otcic_StderrOutputStream_INSTANCE = var$1;
}
var jl_Double = $rt_classWithoutFields(jl_Number);
var jl_Double_NaN = 0.0;
var jl_Double_TYPE = null;
function jl_Double__clinit_() {
    jl_Double_NaN = $rt_globals.NaN;
    jl_Double_TYPE = $rt_cls($rt_doublecls());
}
var jl_AbstractStringBuilder$Constants = $rt_classWithoutFields();
var jl_AbstractStringBuilder$Constants_intPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null;
var jl_AbstractStringBuilder$Constants_floatAnalysisResult = null;
function jl_AbstractStringBuilder$Constants__clinit_() {
    jl_AbstractStringBuilder$Constants_intPowersOfTen = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
    jl_AbstractStringBuilder$Constants_longPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(1000), Long_fromInt(10000), Long_fromInt(100000), Long_fromInt(1000000), Long_fromInt(10000000), Long_fromInt(100000000), Long_fromInt(1000000000), Long_create(1410065408, 2), Long_create(1215752192, 23), Long_create(3567587328, 232), Long_create(1316134912, 2328), Long_create(276447232, 23283), Long_create(2764472320, 232830), Long_create(1874919424, 2328306),
    Long_create(1569325056, 23283064), Long_create(2808348672, 232830643)]);
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = new otcit_DoubleAnalyzer$Result;
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = new otcit_FloatAnalyzer$Result;
}
var otcit_DoubleAnalyzer = $rt_classWithoutFields();
var otcit_DoubleAnalyzer_mantissa10Table = null;
var otcit_DoubleAnalyzer_exp10Table = null;
function otcit_DoubleAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $mantissaShift, $decMantissa, $error, $upError, $downError, $lowerPos, $upperPos;
    $bits = $rt_doubleToLongBits($d);
    $result.$sign0 = Long_eq(Long_and($bits, Long_create(0, 2147483648)), Long_ZERO) ? 0 : 1;
    $mantissa = Long_and($bits, Long_create(4294967295, 1048575));
    $exponent = Long_lo(Long_shr($bits, 52)) & 2047;
    if (Long_eq($mantissa, Long_ZERO) && !$exponent) {
        $result.$mantissa0 = Long_ZERO;
        $result.$exponent0 = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        $mantissa = Long_or($mantissa, Long_create(0, 1048576));
    else {
        $mantissa = Long_shl($mantissa, 1);
        while (Long_eq(Long_and($mantissa, Long_create(0, 1048576)), Long_ZERO)) {
            $mantissa = Long_shl($mantissa, 1);
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    var$7 = otcit_DoubleAnalyzer_exp10Table;
    $decExponent = ju_Arrays_binarySearch(var$7, 0, var$7.data.length, $exponent);
    if ($decExponent < 0)
        $decExponent = ( -$decExponent | 0) - 2 | 0;
    $mantissaShift = 12 + ($exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0) | 0;
    $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight($mantissa, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    if (Long_ge($decMantissa, Long_create(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        $mantissaShift = 12 + ($exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0) | 0;
        $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight($mantissa, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    }
    $error = Long_shru(otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], (63 - $mantissaShift | 0) - $errorShift | 0);
    $upError = Long_shr(Long_add($error, Long_fromInt(1)), 1);
    $downError = Long_shr($error, 1);
    if (Long_eq($mantissa, Long_create(0, 1048576)))
        $downError = Long_shr($downError, 2);
    $lowerPos = Long_fromInt(10);
    while (Long_le($lowerPos, $downError)) {
        $lowerPos = Long_mul($lowerPos, Long_fromInt(10));
    }
    if (Long_ge(Long_rem($decMantissa, $lowerPos), Long_div($downError, Long_fromInt(2))))
        $lowerPos = Long_div($lowerPos, Long_fromInt(10));
    $upperPos = Long_fromInt(1);
    while (Long_le($upperPos, $upError)) {
        $upperPos = Long_mul($upperPos, Long_fromInt(10));
    }
    if (Long_gt(Long_sub($upperPos, Long_rem($decMantissa, $upperPos)), Long_div($upError, Long_fromInt(2))))
        $upperPos = Long_div($upperPos, Long_fromInt(10));
    $exponent = Long_compare($lowerPos, $upperPos);
    $mantissa = $exponent > 0 ? Long_mul(Long_div($decMantissa, $lowerPos), $lowerPos) : $exponent < 0 ? Long_add(Long_mul(Long_div($decMantissa, $upperPos), $upperPos), $upperPos) : Long_mul(Long_div(Long_add($decMantissa, Long_div($upperPos, Long_fromInt(2))), $upperPos), $upperPos);
    if (Long_ge($mantissa, Long_create(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        $mantissa = Long_div($mantissa, Long_fromInt(10));
    } else if (Long_lt($mantissa, Long_create(1569325056, 23283064))) {
        $decExponent = $decExponent + (-1) | 0;
        $mantissa = Long_mul($mantissa, Long_fromInt(10));
    }
    $result.$mantissa0 = $mantissa;
    $result.$exponent0 = $decExponent - 330 | 0;
}
function otcit_DoubleAnalyzer_mulAndShiftRight($a, $b, $shift) {
    var $a1, $a2, $a3, $a4, $b1, $b2, $b3, $b4, $cm, $c0, $c;
    $a1 = Long_and($a, Long_fromInt(65535));
    $a2 = Long_and(Long_shru($a, 16), Long_fromInt(65535));
    $a3 = Long_and(Long_shru($a, 32), Long_fromInt(65535));
    $a4 = Long_and(Long_shru($a, 48), Long_fromInt(65535));
    $b1 = Long_and($b, Long_fromInt(65535));
    $b2 = Long_and(Long_shru($b, 16), Long_fromInt(65535));
    $b3 = Long_and(Long_shru($b, 32), Long_fromInt(65535));
    $b4 = Long_and(Long_shru($b, 48), Long_fromInt(65535));
    $cm = Long_add(Long_add(Long_mul($b3, $a1), Long_mul($b2, $a2)), Long_mul($b1, $a3));
    $c0 = Long_add(Long_add(Long_add(Long_mul($b4, $a1), Long_mul($b3, $a2)), Long_mul($b2, $a3)), Long_mul($b1, $a4));
    $c = Long_add(Long_add(Long_shl(Long_mul($b4, $a4), 32 + $shift | 0), Long_shl(Long_add(Long_mul($b4, $a3), Long_mul($b3, $a4)), 16 + $shift | 0)), Long_shl(Long_add(Long_add(Long_mul($b4, $a2), Long_mul($b3, $a3)), Long_mul($b2, $a4)), $shift));
    return Long_add($shift > 16 ? Long_add($c, Long_shl($c0, $shift - 16 | 0)) : Long_add($c, Long_shru($c0, 16 - $shift | 0)), Long_shru($cm, 32 - $shift | 0));
}
function otcit_DoubleAnalyzer__clinit_() {
    var $decimalMantissaOne, $exponent, $i, $shiftedOffPart, var$5, var$6, $maxMantissa, $i_0, $shift, var$10;
    otcit_DoubleAnalyzer_mantissa10Table = $rt_createLongArray(660);
    otcit_DoubleAnalyzer_exp10Table = $rt_createIntArray(660);
    $decimalMantissaOne = Long_create(991952896, 1862645149);
    $exponent = 1023;
    $i = 0;
    $shiftedOffPart = $decimalMantissaOne;
    while ($i < 330) {
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = $i + 330 | 0;
        var$5[var$6] = jl_Long_divideUnsigned($shiftedOffPart, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = $exponent;
        $shiftedOffPart = jl_Long_divideUnsigned($shiftedOffPart, Long_fromInt(10));
        $maxMantissa = jl_Long_remainderUnsigned($shiftedOffPart, Long_fromInt(10));
        while (Long_le($shiftedOffPart, $decimalMantissaOne) && Long_eq(Long_and($shiftedOffPart, Long_create(0, 2147483648)), Long_ZERO)) {
            $shiftedOffPart = Long_shl($shiftedOffPart, 1);
            $exponent = $exponent + 1 | 0;
            $maxMantissa = Long_shl($maxMantissa, 1);
        }
        $shiftedOffPart = Long_add($shiftedOffPart, Long_div($maxMantissa, Long_fromInt(10)));
        $i = $i + 1 | 0;
    }
    $i = 1023;
    $i_0 = 0;
    while ($i_0 < 330) {
        $shift = 0;
        $shiftedOffPart = $decimalMantissaOne;
        while (Long_gt($shiftedOffPart, Long_create(3435973836, 214748364))) {
            $shiftedOffPart = Long_shr($shiftedOffPart, 1);
            $shift = $shift + 1 | 0;
            $i = $i + (-1) | 0;
        }
        var$10 = Long_mul($shiftedOffPart, Long_fromInt(10));
        $decimalMantissaOne = $shift <= 0 ? var$10 : Long_add(var$10, Long_shr(Long_mul(Long_and($decimalMantissaOne, Long_fromInt((1 << $shift) - 1 | 0)), Long_fromInt(10)), $shift));
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = (330 - $i_0 | 0) - 1 | 0;
        var$5[var$6] = jl_Long_divideUnsigned($decimalMantissaOne, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = $i;
        $i_0 = $i_0 + 1 | 0;
    }
}
function otcit_DoubleAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa0 = Long_ZERO;
    a.$exponent0 = 0;
    a.$sign0 = 0;
}
var otr_EventQueue$Event = $rt_classWithoutFields(0);
var jl_ThreadInterruptHandler = $rt_classWithoutFields(0);
function jl_Thread$SleepHandler() {
    var a = this; jl_Object.call(a);
    a.$thread = null;
    a.$callback = null;
    a.$isInterrupted = 0;
    a.$scheduleId = 0;
}
function jl_Thread$SleepHandler_run($this) {
    var var$1, var$2;
    if (!$this.$isInterrupted) {
        var$1 = $this.$thread;
        var$1.$interruptHandler = null;
        jl_Thread_$callClinit();
        if (jl_Thread_currentThread0 !== var$1)
            jl_Thread_currentThread0 = var$1;
        jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
        var$2 = $this.$callback;
        var$1 = null;
        var$2.$realAsyncCallback.$complete(var$1);
    }
}
function cbggg_BitmapFont$BitmapFontData() {
    var a = this; jl_Object.call(a);
    a.$name3 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped0 = 0;
    a.$padTop = 0.0;
    a.$padRight = 0.0;
    a.$padBottom = 0.0;
    a.$padLeft = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY = 0.0;
    a.$markupEnabled = 0;
    a.$glyphs0 = null;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
function cbggg_BitmapFont$BitmapFontData__init_(var_0, var_1) {
    var var_2 = new cbggg_BitmapFont$BitmapFontData();
    cbggg_BitmapFont$BitmapFontData__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_BitmapFont$BitmapFontData__init_0($this, $fontFile, $flip) {
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX = 1.0;
    $this.$scaleY = 1.0;
    $this.$glyphs0 = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
    $this.$xHeight = 1.0;
    $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
    $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
    $this.$fontFile = $fontFile;
    $this.$flipped0 = $flip;
    cbggg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip);
}
function cbggg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip) {
    var $reader, $line, $padding, $padY, $p, $baseLine, $pageCount, $ch, $matcher, $id, $ex, $fileName, $glyph, $tokens, $first, $second, $amount, $hasMetricsOverride, $overrideAscent, $overrideDescent, $overrideDown, $overrideCapHeight, $overrideLineHeight, $overrideSpaceXAdvance, $overrideXHeight, $spaceGlyph, $xadvanceGlyph, var$30, $xGlyph, $capGlyph, $common, $page, $$je;
    if ($this.$imagePaths !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(480)));
    $this.$name3 = cgxgbt_TeaFileHandle_nameWithoutExtension($fontFile);
    $reader = ji_BufferedReader__init_(ji_InputStreamReader__init_(cgxgbt_TeaFileHandle_read($fontFile)), 512);
    a: {
        b: {
            try {
                $line = ji_BufferedReader_readLine($reader);
                if ($line === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(481)));
                $line = jl_String_substring0($line, jl_String_indexOf2($line, $rt_s(482)) + 8 | 0);
                $padding = (jl_String_split0(jl_String_substring($line, 0, jl_String_indexOf0($line, 32)), $rt_s(483), 4)).data;
                if ($padding.length != 4)
                    $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(484)));
                $this.$padTop = jl_Integer_parseInt0($padding[0]);
                $this.$padRight = jl_Integer_parseInt0($padding[1]);
                $this.$padBottom = jl_Integer_parseInt0($padding[2]);
                $this.$padLeft = jl_Integer_parseInt0($padding[3]);
                $padY = $this.$padTop + $this.$padBottom;
                $line = ji_BufferedReader_readLine($reader);
                if ($line === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(485)));
                $padding = (jl_String_split0($line, $rt_s(191), 9)).data;
                $p = $padding.length;
                if ($p < 3)
                    $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(486)));
                if (!jl_String_startsWith0($padding[1], $rt_s(487)))
                    $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(488)));
                $this.$lineHeight = jl_Integer_parseInt0(jl_String_substring0($padding[1], 11));
                if (!jl_String_startsWith0($padding[2], $rt_s(489)))
                    $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(490)));
                c: {
                    $baseLine = jl_Integer_parseInt0(jl_String_substring0($padding[2], 5));
                    $pageCount = 1;
                    if ($p < 6)
                        $ch = $pageCount;
                    else if ($padding[5] === null)
                        $ch = $pageCount;
                    else if (!jl_String_startsWith0($padding[5], $rt_s(491)))
                        $ch = $pageCount;
                    else {
                        try {
                            $ch = jl_Math_max(1, jl_Integer_parseInt0(jl_String_substring0($padding[5], 6)));
                            $pageCount = $ch;
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                            } else {
                                throw $$e;
                            }
                        }
                        $ch = $pageCount;
                    }
                }
                $this.$imagePaths = $rt_createArray(jl_String, $ch);
                $p = 0;
                d: {
                    e: {
                        f: {
                            while (true) {
                                if ($p >= $ch)
                                    break d;
                                $line = ji_BufferedReader_readLine($reader);
                                if ($line === null)
                                    $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(492)));
                                g: {
                                    $matcher = jur_Pattern_matcher(jur_Pattern_compile0($rt_s(493)), $line);
                                    if (jur_Matcher_find($matcher)) {
                                        $id = jur_Matcher_group($matcher, 1);
                                        try {
                                            if (jl_Integer_parseInt0($id) != $p)
                                                break f;
                                            break g;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_NumberFormatException) {
                                                $ex = $$je;
                                                break e;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                }
                                $line = jur_Pattern_matcher(jur_Pattern_compile0($rt_s(494)), $line);
                                if (!jur_Matcher_find($line))
                                    break;
                                $fileName = jur_Matcher_group($line, 1);
                                $this.$imagePaths.data[$p] = jl_String_replaceAll(cgxgbt_TeaFileHandle_path(cgxgbt_TeaFileHandle_child(cgxgbt_TeaFileHandle_parent($fontFile), $fileName)), $rt_s(495), $rt_s(110));
                                $p = $p + 1 | 0;
                            }
                            $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(496)));
                        }
                        try {
                            $rt_throw(cbgu_GdxRuntimeException__init_2(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(497)), $id))));
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                                $ex = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(498)), $id)), $ex));
                }
                $this.$descent = 0.0;
                h: {
                    while (true) {
                        $line = ji_BufferedReader_readLine($reader);
                        if ($line === null)
                            break;
                        if (jl_String_startsWith0($line, $rt_s(499)))
                            break h;
                        if (jl_String_startsWith0($line, $rt_s(500)))
                            break h;
                        if (!jl_String_startsWith0($line, $rt_s(501)))
                            continue;
                        $glyph = cbggg_BitmapFont$Glyph__init_();
                        $tokens = ju_StringTokenizer__init_($line, $rt_s(502));
                        ju_StringTokenizer_nextToken($tokens);
                        ju_StringTokenizer_nextToken($tokens);
                        $ch = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        if ($ch <= 0)
                            $this.$missingGlyph = $glyph;
                        else {
                            if ($ch > 65535)
                                continue;
                            cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph);
                        }
                        $glyph.$id = $ch;
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$srcX = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$srcY = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$width1 = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$height4 = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$xoffset = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        if ($flip)
                            $glyph.$yoffset = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        else
                            $glyph.$yoffset =  -($glyph.$height4 + jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens)) | 0) | 0;
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$xadvance = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        if (ju_StringTokenizer_hasMoreTokens($tokens))
                            ju_StringTokenizer_nextToken($tokens);
                        i: {
                            if (ju_StringTokenizer_hasMoreTokens($tokens))
                                try {
                                    $glyph.$page = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                                    break i;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_NumberFormatException) {
                                    } else {
                                        throw $$e;
                                    }
                                }
                        }
                        if ($glyph.$width1 > 0 && $glyph.$height4 > 0)
                            $this.$descent = jl_Math_min($baseLine + $glyph.$yoffset, $this.$descent);
                    }
                }
                $this.$descent = $this.$descent + $this.$padBottom;
                j: {
                    while (true) {
                        $line = ji_BufferedReader_readLine($reader);
                        if ($line === null)
                            break;
                        if (!jl_String_startsWith0($line, $rt_s(503)))
                            break j;
                        $tokens = ju_StringTokenizer__init_($line, $rt_s(502));
                        ju_StringTokenizer_nextToken($tokens);
                        ju_StringTokenizer_nextToken($tokens);
                        $first = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $second = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        if ($first < 0)
                            continue;
                        if ($first > 65535)
                            continue;
                        if ($second < 0)
                            continue;
                        if ($second > 65535)
                            continue;
                        $glyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $first & 65535);
                        ju_StringTokenizer_nextToken($tokens);
                        $amount = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                        if ($glyph !== null)
                            cbggg_BitmapFont$Glyph_setKerning($glyph, $second, $amount);
                    }
                }
                $hasMetricsOverride = 0;
                $overrideAscent = 0.0;
                $overrideDescent = 0.0;
                $overrideDown = 0.0;
                $overrideCapHeight = 0.0;
                $overrideLineHeight = 0.0;
                $overrideSpaceXAdvance = 0.0;
                $overrideXHeight = 0.0;
                if ($line !== null && jl_String_startsWith0($line, $rt_s(500))) {
                    $hasMetricsOverride = 1;
                    $tokens = ju_StringTokenizer__init_($line, $rt_s(502));
                    ju_StringTokenizer_nextToken($tokens);
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideAscent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideDescent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideDown = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideCapHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideLineHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideSpaceXAdvance = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideXHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                }
                $spaceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 32);
                if ($spaceGlyph === null) {
                    $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
                    $spaceGlyph.$id = 32;
                    $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 108);
                    if ($xadvanceGlyph === null)
                        $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                    $spaceGlyph.$xadvance = $xadvanceGlyph.$xadvance;
                    cbggg_BitmapFont$BitmapFontData_setGlyph($this, 32, $spaceGlyph);
                }
                if (!$spaceGlyph.$width1) {
                    var$30 = $this.$padLeft;
                    $spaceGlyph.$width1 = var$30 + $spaceGlyph.$xadvance + $this.$padRight | 0;
                    $spaceGlyph.$xoffset =  -var$30 | 0;
                }
                $this.$spaceXadvance = $spaceGlyph.$xadvance;
                $xGlyph = null;
                $padding = $this.$xChars.data;
                $ch = $padding.length;
                $p = 0;
                k: {
                    while ($p < $ch) {
                        $xGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                        if ($xGlyph !== null)
                            break k;
                        $p = $p + 1 | 0;
                    }
                }
                if ($xGlyph === null)
                    $xGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                $this.$xHeight = $xGlyph.$height4 - $padY;
                $capGlyph = null;
                $padding = $this.$capChars.data;
                $ch = $padding.length;
                $p = 0;
                l: {
                    while ($p < $ch) {
                        $capGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                        if ($capGlyph !== null)
                            break l;
                        $p = $p + 1 | 0;
                    }
                }
                if ($capGlyph !== null)
                    $this.$capHeight = $capGlyph.$height4;
                else {
                    $common = $this.$glyphs0.data;
                    $pageCount = $common.length;
                    $ch = 0;
                    while ($ch < $pageCount) {
                        m: {
                            $page = $common[$ch];
                            if ($page !== null) {
                                $padding = $page.data;
                                $p = $padding.length;
                                $first = 0;
                                while (true) {
                                    if ($first >= $p)
                                        break m;
                                    $glyph = $padding[$first];
                                    if ($glyph !== null) {
                                        $second = $glyph.$height4;
                                        if ($second && $glyph.$width1)
                                            $this.$capHeight = jl_Math_max0($this.$capHeight, $second);
                                    }
                                    $first = $first + 1 | 0;
                                }
                            }
                        }
                        $ch = $ch + 1 | 0;
                    }
                }
                $padY = $this.$capHeight - $padY;
                $this.$capHeight = $padY;
                $baseLine = $baseLine - $padY;
                $this.$ascent = $baseLine;
                $padY =  -$this.$lineHeight;
                $this.$down = $padY;
                if ($flip) {
                    $this.$ascent =  -$baseLine;
                    $this.$down =  -$padY;
                }
                if ($hasMetricsOverride) {
                    $this.$ascent = $overrideAscent;
                    $this.$descent = $overrideDescent;
                    $this.$down = $overrideDown;
                    $this.$capHeight = $overrideCapHeight;
                    $this.$lineHeight = $overrideLineHeight;
                    $this.$spaceXadvance = $overrideSpaceXAdvance;
                    $this.$xHeight = $overrideXHeight;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break b;
                } else{
                    $fontFile = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly($reader);
            return;
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(504)), $fontFile)), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $fontFile = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($reader);
    $rt_throw($fontFile);
}
function cbggg_BitmapFont$BitmapFontData_setGlyphRegion($this, $glyph, $region) {
    var $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, var$13, $x, var$15, $x2, $y, var$18, $y2, $amount;
    $texture = $region.$texture.$data0;
    $invTexWidth = 1.0 / $texture.$width3;
    $invTexHeight = 1.0 / $texture.$height1;
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u;
    $v = $region.$v;
    $regionWidth = $region.$regionWidth;
    $regionHeight = $region.$regionHeight;
    if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX;
        $offsetY = ($atlasRegion.$originalHeight - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY;
    }
    var$13 = $glyph.$srcX;
    $x = var$13;
    var$15 = $glyph.$width1;
    $x2 = var$13 + var$15 | 0;
    var$13 = $glyph.$srcY;
    $y = var$13;
    var$18 = $glyph.$height4;
    $y2 = var$13 + var$18 | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width1 = var$15 + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        $offsetX = $x2 - $offsetX;
        if ($offsetX <= $regionWidth)
            $regionWidth = $offsetX;
        else
            $glyph.$width1 = $glyph.$width1 - ($offsetX - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            var$13 = var$18 + $y | 0;
            $glyph.$height4 = var$13;
            if (var$13 < 0)
                $glyph.$height4 = 0;
            $y = 0.0;
        }
        $offsetX = $y2 - $offsetY;
        if ($offsetX <= $regionHeight)
            $regionHeight = $offsetX;
        else {
            $amount = $offsetX - $regionHeight;
            $glyph.$height4 = $glyph.$height4 - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u0 = $u + $x * $invTexWidth;
    $glyph.$u20 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped0) {
        $glyph.$v20 = $v + $y * $invTexHeight;
        $glyph.$v0 = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v0 = $v + $y * $invTexHeight;
        $glyph.$v20 = $v + $regionHeight * $invTexHeight;
    }
}
function cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph) {
    var var$3, var$4, $page;
    var$3 = $this.$glyphs0.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
}
function cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this) {
    var var$1, var$2, var$3, var$4, $page, var$6, var$7, $glyph;
    var$1 = $this.$glyphs0.data;
    var$2 = var$1.length;
    var$3 = 0;
    a: while (true) {
        if (var$3 >= var$2) {
            var$4 = new cbgu_GdxRuntimeException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = $rt_s(505);
            $rt_throw(var$4);
        }
        b: {
            $page = var$1[var$3];
            if ($page !== null) {
                $page = $page.data;
                var$6 = $page.length;
                var$7 = 0;
                while (true) {
                    if (var$7 >= var$6)
                        break b;
                    $glyph = $page[var$7];
                    if ($glyph !== null && $glyph.$height4 && $glyph.$width1)
                        break a;
                    var$7 = var$7 + 1 | 0;
                }
            }
        }
        var$3 = var$3 + 1 | 0;
    }
    return $glyph;
}
function cbggg_BitmapFont$BitmapFontData_getGlyph($this, $ch) {
    var $page;
    $page = $this.$glyphs0.data[$ch / 512 | 0];
    if ($page === null)
        return null;
    return $page.data[$ch & 511];
}
function cbggg_BitmapFont$BitmapFontData_getGlyphs($this, $run, $str, $start, $end, $lastGlyph) {
    var $max, $markupEnabled, $scaleX, $glyphs, $xAdvances, var$11, var$12, $ch, $glyph, $lastGlyphWidth;
    $max = $end - $start | 0;
    if (!$max)
        return;
    $markupEnabled = $this.$markupEnabled;
    $scaleX = $this.$scaleX;
    $glyphs = $run.$glyphs;
    $xAdvances = $run.$xAdvances;
    cbgu_Array_ensureCapacity($glyphs, $max);
    cbgu_FloatArray_ensureCapacity($run.$xAdvances, $max + 1 | 0);
    a: {
        while (true) {
            var$11 = $start + 1 | 0;
            if ($start < 0)
                break;
            var$12 = $str.$characters.data;
            if ($start >= var$12.length)
                break;
            b: {
                $ch = var$12[$start];
                if ($ch != 13) {
                    var$12 = $this.$glyphs0.data[$ch / 512 | 0];
                    $glyph = var$12 === null ? null : var$12.data[$ch & 511];
                    if ($glyph === null) {
                        $glyph = $this.$missingGlyph;
                        if ($glyph === null)
                            break b;
                    }
                    cbgu_Array_add($glyphs, $glyph);
                    if ($lastGlyph === null)
                        $lastGlyphWidth = $glyph.$fixedWidth ? 0.0 : ( -$glyph.$xoffset | 0) * $scaleX - $this.$padLeft;
                    else {
                        c: {
                            $start = $lastGlyph.$xadvance;
                            var$12 = $lastGlyph.$kerning;
                            if (var$12 !== null) {
                                var$12 = var$12.data[$ch >>> 9 | 0];
                                if (var$12 !== null) {
                                    $max = var$12.data[$ch & 511];
                                    break c;
                                }
                            }
                            $max = 0;
                        }
                        $lastGlyphWidth = ($start + $max | 0) * $scaleX;
                    }
                    cbgu_FloatArray_add($xAdvances, $lastGlyphWidth);
                    if (!$markupEnabled)
                        $lastGlyph = $glyph;
                    else if ($ch != 91)
                        $lastGlyph = $glyph;
                    else if (var$11 >= $end)
                        $lastGlyph = $glyph;
                    else {
                        if (var$11 < 0)
                            break a;
                        var$12 = $str.$characters.data;
                        if (var$11 >= var$12.length)
                            break a;
                        if (var$12[var$11] != 91)
                            $lastGlyph = $glyph;
                        else {
                            var$11 = var$11 + 1 | 0;
                            $lastGlyph = $glyph;
                        }
                    }
                }
            }
            if (var$11 >= $end) {
                if ($lastGlyph !== null)
                    cbgu_FloatArray_add($xAdvances, $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width1 + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight);
                return;
            }
            $start = var$11;
        }
        $run = new jl_StringIndexOutOfBoundsException;
        $run.$suppressionEnabled = 1;
        $run.$writableStackTrace = 1;
        $rt_throw($run);
    }
    $run = new jl_StringIndexOutOfBoundsException;
    $run.$suppressionEnabled = 1;
    $run.$writableStackTrace = 1;
    $rt_throw($run);
}
function cbggg_BitmapFont$BitmapFontData_getWrapIndex($this, $glyphs, $start) {
    var $i, $glyphsItems, $ch, var$6, var$7, var$8;
    a: {
        $i = $start - 1 | 0;
        $glyphsItems = $glyphs.$items.data;
        $ch = $glyphsItems[$i].$id & 65535;
        switch ($ch) {
            case 9:
            case 10:
            case 13:
            case 32:
                break;
            default:
                $start = 0;
                break a;
        }
        $start = 1;
    }
    if ($start)
        return $i;
    b: {
        var$6 = $this.$breakChars;
        if (var$6 === null)
            $start = 0;
        else {
            var$7 = var$6.data;
            $start = var$7.length;
            var$8 = 0;
            while (var$8 < $start) {
                if ($ch == var$7[var$8]) {
                    $start = 1;
                    break b;
                }
                var$8 = var$8 + 1 | 0;
            }
            $start = 0;
        }
    }
    if ($start)
        $i = $i + (-1) | 0;
    c: {
        while ($i > 0) {
            d: {
                $start = $glyphsItems[$i].$id & 65535;
                switch ($start) {
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        break;
                    default:
                        $ch = 0;
                        break d;
                }
                $ch = 1;
            }
            if ($ch)
                break c;
            e: {
                if (var$6 === null)
                    $start = 0;
                else {
                    var$7 = var$6.data;
                    $ch = var$7.length;
                    var$8 = 0;
                    while (var$8 < $ch) {
                        if ($start == var$7[var$8]) {
                            $start = 1;
                            break e;
                        }
                        var$8 = var$8 + 1 | 0;
                    }
                    $start = 0;
                }
            }
            if ($start)
                break c;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
}
var cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum);
var cbgg_Mesh$VertexDataType_VertexArray = null;
var cbgg_Mesh$VertexDataType_VertexBufferObject = null;
var cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null;
var cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null;
var cbgg_Mesh$VertexDataType_$VALUES = null;
function cbgg_Mesh$VertexDataType_$callClinit() {
    cbgg_Mesh$VertexDataType_$callClinit = $rt_eraseClinit(cbgg_Mesh$VertexDataType);
    cbgg_Mesh$VertexDataType__clinit_();
}
function cbgg_Mesh$VertexDataType__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = new cbgg_Mesh$VertexDataType;
    cbgg_Mesh$VertexDataType_$callClinit();
    var$1.$name0 = $rt_s(506);
    var$1.$ordinal = 0;
    cbgg_Mesh$VertexDataType_VertexArray = var$1;
    var$2 = new cbgg_Mesh$VertexDataType;
    var$2.$name0 = $rt_s(507);
    var$2.$ordinal = 1;
    cbgg_Mesh$VertexDataType_VertexBufferObject = var$2;
    var$3 = new cbgg_Mesh$VertexDataType;
    var$3.$name0 = $rt_s(508);
    var$3.$ordinal = 2;
    cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = var$3;
    var$4 = new cbgg_Mesh$VertexDataType;
    var$4.$name0 = $rt_s(509);
    var$4.$ordinal = 3;
    cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = var$4;
    cbgg_Mesh$VertexDataType_$VALUES = $rt_createArrayFromData(cbgg_Mesh$VertexDataType, [var$1, var$2, var$3, var$4]);
}
function cbgg_Mesh() {
    var a = this; jl_Object.call(a);
    a.$vertices0 = null;
    a.$indices = null;
    a.$autoBind = 0;
    a.$isVertexArray = 0;
    a.$instances = null;
    a.$isInstanced = 0;
    a.$tmpV = null;
}
var cbgg_Mesh_meshes = null;
function cbgg_Mesh__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbgg_Mesh__init_($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
    var var$6, var$7, var$8, var$9;
    a: {
        b: {
            $this.$autoBind = 1;
            $this.$isInstanced = 0;
            var$6 = new cbgm_Vector3;
            cbgm_Vector3_$callClinit();
            $this.$tmpV = var$6;
            cbgg_Mesh$1_$callClinit();
            switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[$type.$ordinal]) {
                case 1:
                    $this.$vertices0 = cbggg_VertexBufferObject__init_($isStatic, $maxVertices, $attributes);
                    $type = new cbggg_IndexBufferObject;
                    $type.$isDirty = 1;
                    $type.$isBound = 0;
                    $type.$isDirect = 1;
                    $maxVertices = $maxIndices * 2 | 0;
                    if ($maxVertices < 0) {
                        $type = new jl_IllegalArgumentException;
                        $attributes = new jl_StringBuilder;
                        $attributes.$buffer = $rt_createCharArray(16);
                        jl_StringBuilder_insert($attributes, $attributes.$length, jl_String_toString($rt_s(510)));
                        jl_AbstractStringBuilder_insert0($attributes, $attributes.$length, $maxVertices, 10);
                        var$6 = new jl_String;
                        var$7 = $attributes.$buffer;
                        $maxVertices = $attributes.$length;
                        var$8 = $rt_createCharArray($maxVertices);
                        var$9 = var$8.data;
                        var$6.$characters = var$8;
                        $maxIndices = 0;
                        while ($maxIndices < $maxVertices) {
                            var$9[$maxIndices] = var$7.data[$maxIndices + 0 | 0];
                            $maxIndices = $maxIndices + 1 | 0;
                        }
                        $type.$suppressionEnabled = 1;
                        $type.$writableStackTrace = 1;
                        $type.$message = var$6;
                        $rt_throw($type);
                    }
                    $attributes = new jn_ByteBufferImpl;
                    var$7 = $rt_createByteArray($maxVertices);
                    $attributes.$mark = (-1);
                    $attributes.$capacity = $maxVertices;
                    $attributes.$limit = $maxVertices;
                    jn_ByteOrder_$callClinit();
                    var$6 = jn_ByteOrder_BIG_ENDIAN;
                    $attributes.$order = var$6;
                    $attributes.$start = 0;
                    $attributes.$array = var$7;
                    $attributes.$position = 0;
                    $attributes.$limit = $maxVertices;
                    $attributes.$direct = 1;
                    $attributes.$readOnly = 0;
                    $attributes.$order = var$6;
                    $attributes = jn_ByteBufferImpl_asShortBuffer($attributes);
                    $type.$buffer3 = $attributes;
                    $attributes.$limit = $attributes.$position;
                    $attributes.$position = 0;
                    $attributes.$mark = (-1);
                    $type.$bufferHandle = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
                    $type.$usage0 = !$isStatic ? 35048 : 35044;
                    $this.$indices = $type;
                    $this.$isVertexArray = 0;
                    break a;
                case 2:
                    break;
                case 3:
                    $this.$vertices0 = cbggg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 4:
                    break b;
                default:
                    break b;
            }
            $this.$vertices0 = cbggg_VertexBufferObjectSubData__init_($isStatic, $maxVertices, $attributes);
            $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
            $this.$isVertexArray = 0;
            break a;
        }
        $type = new cbggg_VertexArray;
        cbggg_VertexBufferObject__init_0($type, 0, $maxVertices, $attributes);
        $this.$vertices0 = $type;
        $type = new cbggg_IndexArray;
        $type.$isDirty = 1;
        $type.$isBound = 0;
        $type.$isDirect = 1;
        $isStatic = $maxIndices * 2 | 0;
        if ($isStatic < 0) {
            $type = new jl_IllegalArgumentException;
            $attributes = new jl_StringBuilder;
            $attributes.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert5($attributes, $attributes.$length, $rt_s(510));
            jl_StringBuilder_append0($attributes, $isStatic);
            jl_IllegalArgumentException__init_2($type, jl_StringBuilder_toString($attributes));
            $rt_throw($type);
        }
        var$6 = new jn_ByteBufferImpl;
        var$7 = $rt_createByteArray($isStatic);
        jl_Object__init_0(var$6);
        var$6.$mark = (-1);
        var$6.$capacity = $isStatic;
        var$6.$limit = $isStatic;
        jn_ByteOrder_$callClinit();
        var$6.$order = jn_ByteOrder_BIG_ENDIAN;
        var$6.$start = 0;
        var$6.$array = var$7;
        var$6.$position = 0;
        var$6.$limit = $isStatic;
        var$6.$direct = 1;
        var$6.$readOnly = 0;
        jn_ByteBuffer_order(var$6, jn_ByteOrder_nativeOrder());
        $attributes = jn_ByteBufferImpl_asShortBuffer(var$6);
        $type.$buffer3 = $attributes;
        jn_ShortBuffer_flip($attributes);
        $type.$bufferHandle = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
        $type.$usage0 = 35044;
        $this.$indices = $type;
        $this.$isVertexArray = 1;
    }
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
}
function cbgg_Mesh_setIndices($this, $indices) {
    var var$2;
    var$2 = $indices.data;
    $this.$indices.$setIndices0($indices, 0, var$2.length);
    return $this;
}
function cbgg_Mesh_render($this, $shader, $primitiveType, $offset, $count, $autoBind) {
    var $buffer, var$7, $oldPosition, $numInstances, var$10, var$11, var$12;
    if (!$count)
        return;
    if ($autoBind) {
        $buffer = null;
        var$7 = null;
        $this.$vertices0.$bind0($shader, $buffer);
        $buffer = $this.$instances;
        if ($buffer !== null && $buffer.$getNumInstances() > 0)
            $this.$instances.$bind0($shader, var$7);
        if ($this.$indices.$getNumIndices() > 0)
            $this.$indices.$bind();
    }
    if ($this.$isVertexArray) {
        if ($this.$indices.$getNumIndices() <= 0)
            cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        else {
            $buffer = $this.$indices.$getBuffer(0);
            $oldPosition = $buffer.$position;
            jn_Buffer_position($buffer, $offset);
            cbg_Gdx_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
            jn_Buffer_position($buffer, $oldPosition);
        }
    } else {
        $numInstances = 0;
        if ($this.$isInstanced)
            $numInstances = $this.$instances.$getNumInstances();
        if ($this.$indices.$getNumIndices() <= 0) {
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawArraysInstanced($primitiveType, $offset, $count, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        } else {
            if (($count + $offset | 0) > $this.$indices.$getNumMaxIndices()) {
                $buffer = new cbgu_GdxRuntimeException;
                var$7 = new jl_StringBuilder;
                var$7.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(511));
                jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $count, 10);
                jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(512));
                jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $offset, 10);
                jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(513));
                $primitiveType = $this.$indices.$getNumMaxIndices();
                jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $primitiveType, 10);
                jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(514));
                $shader = new jl_String;
                var$10 = var$7.$buffer;
                $offset = var$7.$length;
                jl_String_$callClinit();
                var$11 = $rt_createCharArray($offset);
                var$12 = var$11.data;
                $shader.$characters = var$11;
                $count = 0;
                while ($count < $offset) {
                    var$12[$count] = var$10.data[$count + 0 | 0];
                    $count = $count + 1 | 0;
                }
                $buffer.$suppressionEnabled = 1;
                $buffer.$writableStackTrace = 1;
                $buffer.$message = $shader;
                $rt_throw($buffer);
            }
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawElementsInstanced($primitiveType, $count, 5123, $offset * 2 | 0, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
        }
    }
    if ($autoBind) {
        $buffer = null;
        var$7 = null;
        $this.$vertices0.$unbind($shader, $buffer);
        $buffer = $this.$instances;
        if ($buffer !== null && $buffer.$getNumInstances() > 0)
            $this.$instances.$unbind($shader, var$7);
        if ($this.$indices.$getNumIndices() > 0)
            $this.$indices.$unbind0();
    }
}
function cbgg_Mesh_getVertexAttribute($this, $usage) {
    var var$2, $len, $i;
    var$2 = ($this.$vertices0.$getAttributes()).$attributes.data;
    $len = var$2.length;
    $i = 0;
    while ($i < $len) {
        if (var$2[$i].$usage == $usage)
            return var$2[$i];
        $i = $i + 1 | 0;
    }
    return null;
}
function cbgg_Mesh_getVertexAttributes($this) {
    return $this.$vertices0.$getAttributes();
}
function cbgg_Mesh_addManagedMesh($app, $mesh) {
    var $managedResources, var$4, var$5, var$6, var$7;
    $managedResources = cbgg_Mesh_meshes;
    if ($app === null) {
        $managedResources = $managedResources.$elementData.data[0];
        while ($managedResources !== null && $managedResources.$key !== null) {
            $managedResources = $managedResources.$next;
        }
    } else {
        var$4 = $app;
        if (!var$4.$id$) {
            var$5 = $rt_nextId();
            var$4.$id$ = var$5;
        }
        var$6 = $app.$id$;
        var$7 = $managedResources.$elementData.data;
        $managedResources = var$7[var$6 & (var$7.length - 1 | 0)];
        while ($managedResources !== null) {
            if ($managedResources.$origKeyHash == var$6) {
                var$5 = $managedResources.$key;
                if ($app !== var$5 && !($app !== var$5 ? 0 : 1) ? 0 : 1)
                    break;
            }
            $managedResources = $managedResources.$next;
        }
    }
    $managedResources = $managedResources === null ? null : $managedResources.$value4;
    if ($managedResources === null) {
        $managedResources = new cbgu_Array;
        $managedResources.$ordered = 1;
        $managedResources.$items = $rt_createArray(jl_Object, 16);
    }
    cbgu_Array_add($managedResources, $mesh);
    ju_HashMap_putImpl(cbgg_Mesh_meshes, $app, $managedResources);
}
function cbgg_Mesh__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = new ju_HashMap;
    var$2 = ju_HashMap_calculateCapacity(16);
    var$1.$elementCount = 0;
    var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
    var$4 = var$3.data;
    var$1.$elementData = var$3;
    var$1.$loadFactor = 0.75;
    var$1.$threshold = var$4.length * 0.75 | 0;
    cbgg_Mesh_meshes = var$1;
}
function jn_Buffer() {
    var a = this; jl_Object.call(a);
    a.$capacity = 0;
    a.$position = 0;
    a.$limit = 0;
    a.$mark = 0;
}
function jn_Buffer__init_($this, $capacity) {
    $this.$mark = (-1);
    $this.$capacity = $capacity;
    $this.$limit = $capacity;
}
function jn_Buffer_capacity($this) {
    return $this.$capacity;
}
function jn_Buffer_position0($this) {
    return $this.$position;
}
function jn_Buffer_position($this, $newPosition) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($newPosition >= 0 && $newPosition <= $this.$limit) {
        $this.$position = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$limit;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(515));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $newPosition, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
    var$3 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$5 = var$4.$buffer.data;
    var$5[var$3] = 93;
    var$6 = new jl_String;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$5[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$6;
    $rt_throw(var$2);
}
function jn_Buffer_limit0($this) {
    return $this.$limit;
}
function jn_Buffer_limit($this, $newLimit) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($newLimit >= 0 && $newLimit <= $this.$capacity) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit = $newLimit;
        if ($this.$position > $newLimit)
            $this.$position = $newLimit;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$capacity;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(517));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $newLimit, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
    var$3 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$5 = var$4.$buffer.data;
    var$5[var$3] = 93;
    var$6 = new jl_String;
    var$3 = var$4.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$3);
    var$8 = var$7.data;
    var$6.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$3) {
        var$8[var$9] = var$5[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$6;
    $rt_throw(var$2);
}
function jn_Buffer_remaining($this) {
    return $this.$limit - $this.$position | 0;
}
var jl_Readable = $rt_classWithoutFields(0);
var jn_CharBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_CharBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, $i, var$7, var$8, var$9, var$10, $pos, var$12, var$13;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(518));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $i, 10);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(519));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
                var$9 = new jl_String;
                $dst = var$8.$buffer;
                $length = var$8.$length;
                jl_String_$callClinit();
                var$4 = $rt_createCharArray($length);
                var$10 = var$4.data;
                var$9.$characters = var$4;
                var$5 = 0;
                while (var$5 < $length) {
                    var$10[var$5] = $dst.data[var$5 + 0 | 0];
                    var$5 = var$5 + 1 | 0;
                }
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                var$7.$message = var$9;
                $rt_throw(var$7);
            }
            var$5 = $this.$limit;
            $pos = $this.$position;
            if ((var$5 - $pos | 0) < $length) {
                var$7 = new jn_BufferUnderflowException;
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                $rt_throw(var$7);
            }
            if ($length >= 0) {
                $i = 0;
                var$12 = $pos;
                while ($i < $length) {
                    var$13 = $offset + 1 | 0;
                    var$5 = var$12 + 1 | 0;
                    var$4[$offset] = $this.$array2.data[var$12 + $this.$start0 | 0];
                    $i = $i + 1 | 0;
                    $offset = var$13;
                    var$12 = var$5;
                }
                $this.$position = $pos + $length | 0;
                return $this;
            }
            var$7 = new jl_IndexOutOfBoundsException;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(520));
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(521));
            var$9 = new jl_String;
            $dst = var$8.$buffer;
            $length = var$8.$length;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray($length);
            var$10 = var$4.data;
            var$9.$characters = var$4;
            var$5 = 0;
            while (var$5 < $length) {
                var$10[var$5] = $dst.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            var$7.$suppressionEnabled = 1;
            var$7.$writableStackTrace = 1;
            var$7.$message = var$9;
            $rt_throw(var$7);
        }
    }
    $dst = $dst.data;
    var$7 = new jl_IndexOutOfBoundsException;
    $length = $dst.length;
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(522));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $offset, 10);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
    $length = var$8.$length;
    jl_AbstractStringBuilder_insertSpace(var$8, $length, $length + 1 | 0);
    var$10 = var$8.$buffer.data;
    var$10[$length] = 41;
    var$9 = new jl_String;
    $length = var$8.$length;
    jl_String_$callClinit();
    $dst = $rt_createCharArray($length);
    var$4 = $dst.data;
    var$9.$characters = $dst;
    var$5 = 0;
    while (var$5 < $length) {
        var$4[var$5] = var$10[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$7.$suppressionEnabled = 1;
    var$7.$writableStackTrace = 1;
    var$7.$message = var$9;
    $rt_throw(var$7);
}
function jn_CharBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11, var$12, var$13;
    if ($this.$readOnly0) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    var$5 = $this.$limit;
    $pos = $this.$position;
    if ((var$5 - $pos | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        var$5 = var$7.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i > var$5) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(523));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $i, 10);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(519));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length, var$5, 10);
                var$10 = new jl_String;
                $src = var$9.$buffer;
                $length = var$9.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray($length);
                var$11 = var$7.data;
                var$10.$characters = var$7;
                var$5 = 0;
                while (var$5 < $length) {
                    var$11[var$5] = $src.data[var$5 + 0 | 0];
                    var$5 = var$5 + 1 | 0;
                }
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$10;
                $rt_throw(var$4);
            }
            if ($length >= 0) {
                $i = 0;
                var$12 = $pos;
                while ($i < $length) {
                    var$13 = var$12 + 1 | 0;
                    var$5 = $offset + 1 | 0;
                    $this.$array2.data[var$12 + $this.$start0 | 0] = var$7[$offset];
                    $i = $i + 1 | 0;
                    var$12 = var$13;
                    $offset = var$5;
                }
                $this.$position = $pos + $length | 0;
                return $this;
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$9 = new jl_StringBuilder;
            var$9.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(520));
            jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
            jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(521));
            var$10 = new jl_String;
            $src = var$9.$buffer;
            $length = var$9.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($length);
            var$11 = var$7.data;
            var$10.$characters = var$7;
            var$5 = 0;
            while (var$5 < $length) {
                var$11[var$5] = $src.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$10;
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(522));
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $offset, 10);
    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
    $length = var$9.$length;
    jl_AbstractStringBuilder_insertSpace(var$9, $length, $length + 1 | 0);
    var$11 = var$9.$buffer.data;
    var$11[$length] = 41;
    var$10 = new jl_String;
    $length = var$9.$length;
    jl_String_$callClinit();
    $src = $rt_createCharArray($length);
    var$7 = $src.data;
    var$10.$characters = $src;
    var$5 = 0;
    while (var$5 < $length) {
        var$7[var$5] = var$11[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$10;
    $rt_throw(var$4);
}
function jn_CharBuffer_put0($this, $src, $start, $end) {
    var $sz, var$5, $pos, $pos_0, var$8, var$9, var$10, var$11, var$12;
    if ($this.$readOnly0) {
        $src = new jn_ReadOnlyBufferException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    $sz = $end - $start | 0;
    var$5 = $this.$limit;
    $pos = $this.$position;
    if ((var$5 - $pos | 0) < $sz) {
        $src = new jn_BufferOverflowException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    if ($start >= 0) {
        $pos_0 = $src.$characters.data.length;
        if ($start <= $pos_0) {
            if ($end > $pos_0) {
                $src = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(523));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $end, 10);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(524));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $pos_0, 10);
                var$9 = new jl_String;
                var$10 = var$8.$buffer;
                $end = var$8.$length;
                jl_String_$callClinit();
                var$11 = $rt_createCharArray($end);
                var$12 = var$11.data;
                var$9.$characters = var$11;
                var$5 = 0;
                while (var$5 < $end) {
                    var$12[var$5] = var$10.data[var$5 + 0 | 0];
                    var$5 = var$5 + 1 | 0;
                }
                $src.$suppressionEnabled = 1;
                $src.$writableStackTrace = 1;
                $src.$message = var$9;
                $rt_throw($src);
            }
            if ($start <= $end) {
                while ($start < $end) {
                    $pos_0 = $pos + 1 | 0;
                    var$5 = $start + 1 | 0;
                    jn_CharBufferOverArray_putChar($this, $pos, jl_String_charAt($src, $start));
                    $pos = $pos_0;
                    $start = var$5;
                }
                $this.$position = $this.$position + $sz | 0;
                return $this;
            }
            $src = new jl_IndexOutOfBoundsException;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(525));
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $start, 10);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(526));
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $end, 10);
            var$9 = new jl_String;
            var$10 = var$8.$buffer;
            $end = var$8.$length;
            jl_String_$callClinit();
            var$11 = $rt_createCharArray($end);
            var$12 = var$11.data;
            var$9.$characters = var$11;
            var$5 = 0;
            while (var$5 < $end) {
                var$12[var$5] = var$10.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            jl_IndexOutOfBoundsException__init_($src, var$9);
            $rt_throw($src);
        }
    }
    var$8 = new jl_IndexOutOfBoundsException;
    $sz = $src.$characters.data.length;
    $src = new jl_StringBuilder;
    $src.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($src, $src.$length, $rt_s(525));
    jl_AbstractStringBuilder_insert0($src, $src.$length, $start, 10);
    jl_AbstractStringBuilder_insert($src, $src.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0($src, $src.$length, $sz, 10);
    $end = $src.$length;
    jl_AbstractStringBuilder_insertSpace($src, $end, $end + 1 | 0);
    var$12 = $src.$buffer.data;
    var$12[$end] = 41;
    var$9 = new jl_String;
    $end = $src.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($end);
    var$11 = var$10.data;
    var$9.$characters = var$10;
    var$5 = 0;
    while (var$5 < $end) {
        var$11[var$5] = var$12[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$8.$suppressionEnabled = 1;
    var$8.$writableStackTrace = 1;
    var$8.$message = var$9;
    $rt_throw(var$8);
}
function jn_ByteBuffer() {
    var a = this; jn_Buffer.call(a);
    a.$start = 0;
    a.$array = null;
    a.$order = null;
}
function jn_ByteBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, $pos, var$7, var$8, var$9, var$10, var$11, $i, var$13;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            $pos = $offset + $length | 0;
            if ($pos > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(527));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $pos, 10);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(519));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
                var$9 = new jl_String;
                $dst = var$8.$buffer;
                $length = var$8.$length;
                jl_String_$callClinit();
                var$4 = $rt_createCharArray($length);
                var$10 = var$4.data;
                var$9.$characters = var$4;
                var$5 = 0;
                while (var$5 < $length) {
                    var$10[var$5] = $dst.data[var$5 + 0 | 0];
                    var$5 = var$5 + 1 | 0;
                }
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                var$7.$message = var$9;
                $rt_throw(var$7);
            }
            var$5 = $this.$limit;
            var$11 = $this.$position;
            if ((var$5 - var$11 | 0) < $length) {
                var$7 = new jn_BufferUnderflowException;
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                $rt_throw(var$7);
            }
            if ($length >= 0) {
                $pos = var$11 + $this.$start | 0;
                $i = 0;
                while ($i < $length) {
                    var$13 = $offset + 1 | 0;
                    $dst = $this.$array.data;
                    var$5 = $pos + 1 | 0;
                    var$4[$offset] = $dst[$pos];
                    $i = $i + 1 | 0;
                    $offset = var$13;
                    $pos = var$5;
                }
                $this.$position = var$11 + $length | 0;
                return $this;
            }
            var$7 = new jl_IndexOutOfBoundsException;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(520));
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(521));
            var$9 = new jl_String;
            $dst = var$8.$buffer;
            $length = var$8.$length;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray($length);
            var$10 = var$4.data;
            var$9.$characters = var$4;
            var$5 = 0;
            while (var$5 < $length) {
                var$10[var$5] = $dst.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            var$7.$suppressionEnabled = 1;
            var$7.$writableStackTrace = 1;
            var$7.$message = var$9;
            $rt_throw(var$7);
        }
    }
    $dst = $dst.data;
    var$7 = new jl_IndexOutOfBoundsException;
    $length = $dst.length;
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(522));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $offset, 10);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
    $length = var$8.$length;
    jl_AbstractStringBuilder_insertSpace(var$8, $length, $length + 1 | 0);
    var$10 = var$8.$buffer.data;
    var$10[$length] = 41;
    var$9 = new jl_String;
    $length = var$8.$length;
    jl_String_$callClinit();
    $dst = $rt_createCharArray($length);
    var$4 = $dst.data;
    var$9.$characters = $dst;
    var$5 = 0;
    while (var$5 < $length) {
        var$4[var$5] = var$10[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$7.$suppressionEnabled = 1;
    var$7.$writableStackTrace = 1;
    var$7.$message = var$9;
    $rt_throw(var$7);
}
function jn_ByteBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, var$7, $pos, $i, var$10, var$11, var$12, var$13;
    if (!$length)
        return $this;
    if ($this.$readOnly) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    var$5 = $this.$limit;
    var$6 = $this.$position;
    if ((var$5 - var$6 | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        var$5 = var$7.length;
        if ($offset <= var$5) {
            $pos = $offset + $length | 0;
            if ($pos <= var$5) {
                if ($length >= 0) {
                    $pos = var$6 + $this.$start | 0;
                    $i = 0;
                    while ($i < $length) {
                        $src = $this.$array.data;
                        var$10 = $pos + 1 | 0;
                        var$5 = $offset + 1 | 0;
                        $src[$pos] = var$7[$offset];
                        $i = $i + 1 | 0;
                        $pos = var$10;
                        $offset = var$5;
                    }
                    $this.$position = var$6 + $length | 0;
                    return $this;
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$11 = new jl_StringBuilder;
                var$11.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(520));
                jl_AbstractStringBuilder_insert0(var$11, var$11.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(521));
                jl_Exception__init_2(var$4, jl_String__init_1(var$11.$buffer, 0, var$11.$length));
                $rt_throw(var$4);
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$11 = new jl_StringBuilder;
            var$11.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(528));
            jl_AbstractStringBuilder_insert0(var$11, var$11.$length, $pos, 10);
            jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(519));
            jl_AbstractStringBuilder_insert0(var$11, var$11.$length, var$5, 10);
            var$12 = new jl_String;
            $src = var$11.$buffer;
            $length = var$11.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($length);
            var$13 = var$7.data;
            var$12.$characters = var$7;
            var$5 = 0;
            while (var$5 < $length) {
                var$13[var$5] = $src.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$12;
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$11 = new jl_StringBuilder;
    var$11.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(522));
    jl_AbstractStringBuilder_insert0(var$11, var$11.$length, $offset, 10);
    jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$11, var$11.$length, $length, 10);
    $length = var$11.$length;
    jl_AbstractStringBuilder_insertSpace(var$11, $length, $length + 1 | 0);
    var$13 = var$11.$buffer.data;
    var$13[$length] = 41;
    var$12 = new jl_String;
    $length = var$11.$length;
    jl_String_$callClinit();
    $src = $rt_createCharArray($length);
    var$7 = $src.data;
    var$12.$characters = $src;
    var$5 = 0;
    while (var$5 < $length) {
        var$7[var$5] = var$13[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$12;
    $rt_throw(var$4);
}
function jn_ByteBuffer_order($this, $bo) {
    $this.$order = $bo;
    return $this;
}
function jn_ByteBuffer_flip($this) {
    $this.$limit = $this.$position;
    $this.$position = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_ByteBuffer_limit($this, var$1) {
    jn_Buffer_limit($this, var$1);
    return $this;
}
function jn_ByteBuffer_position($this, var$1) {
    jn_Buffer_position($this, var$1);
    return $this;
}
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name4 = null;
}
var jnc_CodingErrorAction_IGNORE = null;
var jnc_CodingErrorAction_REPLACE = null;
var jnc_CodingErrorAction_REPORT = null;
function jnc_CodingErrorAction_$callClinit() {
    jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
    jnc_CodingErrorAction__clinit_();
}
function jnc_CodingErrorAction__clinit_() {
    var var$1;
    var$1 = new jnc_CodingErrorAction;
    jnc_CodingErrorAction_$callClinit();
    var$1.$name4 = $rt_s(529);
    jnc_CodingErrorAction_IGNORE = var$1;
    var$1 = new jnc_CodingErrorAction;
    var$1.$name4 = $rt_s(530);
    jnc_CodingErrorAction_REPLACE = var$1;
    var$1 = new jnc_CodingErrorAction;
    var$1.$name4 = $rt_s(531);
    jnc_CodingErrorAction_REPORT = var$1;
}
function cbggg_BitmapFont$Glyph() {
    var a = this; jl_Object.call(a);
    a.$id = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width1 = 0;
    a.$height4 = 0;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v20 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning = null;
    a.$fixedWidth = 0;
    a.$page = 0;
}
function cbggg_BitmapFont$Glyph__init_() {
    var var_0 = new cbggg_BitmapFont$Glyph();
    cbggg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
}
function cbggg_BitmapFont$Glyph__init_0($this) {
    $this.$page = 0;
}
function cbggg_BitmapFont$Glyph_setKerning($this, $ch, $value) {
    var var$3, var$4, $page;
    if ($this.$kerning === null)
        $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls()), 128);
    var$3 = $this.$kerning.data;
    var$4 = $ch >>> 9 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
}
function cbggg_BitmapFont$Glyph_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$id & 65535;
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1).data;
    var$3[0] = var$1;
    jl_String_$callClinit();
    var$1 = var$3.length;
    var$4 = $rt_createCharArray(var$1);
    var$5 = var$4.data;
    var$2.$characters = var$4;
    var$6 = 0;
    while (var$6 < var$1) {
        var$5[var$6] = var$3[var$6];
        var$6 = var$6 + 1 | 0;
    }
    return var$2;
}
function cbgg_VertexAttributes() {
    var a = this; jl_Object.call(a);
    a.$attributes = null;
    a.$vertexSize = 0;
    a.$mask3 = Long_ZERO;
    a.$boneWeightUnits = 0;
    a.$textureCoordinates = 0;
}
function cbgg_VertexAttributes__init_(var_0) {
    var var_1 = new cbgg_VertexAttributes();
    cbgg_VertexAttributes__init_0(var_1, var_0);
    return var_1;
}
function cbgg_VertexAttributes__init_0($this, $attributes) {
    var var$2, var$3, $list, var$5, $i, var$7;
    $attributes = $attributes.data;
    $this.$mask3 = Long_fromInt(-1);
    $this.$boneWeightUnits = (-1);
    $this.$textureCoordinates = (-1);
    var$2 = $attributes.length;
    if (!var$2) {
        var$3 = new jl_IllegalArgumentException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(532);
        $rt_throw(var$3);
    }
    $list = $rt_createArray(cbgg_VertexAttribute, var$2);
    var$5 = $list.data;
    $i = 0;
    while ($i < var$2) {
        var$5[$i] = $attributes[$i];
        $i = $i + 1 | 0;
    }
    $this.$attributes = $list;
    var$2 = 0;
    var$7 = 0;
    while (var$7 < var$5.length) {
        a: {
            b: {
                var$3 = var$5[var$7];
                var$3.$offset = var$2;
                switch (var$3.$type0) {
                    case 5120:
                    case 5121:
                        break;
                    case 5122:
                    case 5123:
                        $i = 2 * var$3.$numComponents | 0;
                        break a;
                    case 5124:
                    case 5125:
                    case 5127:
                    case 5128:
                    case 5129:
                    case 5130:
                    case 5131:
                        break b;
                    case 5126:
                    case 5132:
                        $i = 4 * var$3.$numComponents | 0;
                        break a;
                    default:
                        break b;
                }
                $i = var$3.$numComponents;
                break a;
            }
            $i = 0;
        }
        var$2 = var$2 + $i | 0;
        var$7 = var$7 + 1 | 0;
    }
    $this.$vertexSize = var$2;
}
function cbggg_ShaderProgram() {
    var a = this; jl_Object.call(a);
    a.$log = null;
    a.$isCompiled = 0;
    a.$uniforms0 = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$uniformNames = null;
    a.$attributes0 = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$attributeNames = null;
    a.$program = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$matrix = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$invalidated = 0;
    a.$refCount = 0;
    a.$params = null;
    a.$type4 = null;
}
var cbggg_ShaderProgram_pedantic = 0;
var cbggg_ShaderProgram_prependVertexCode = null;
var cbggg_ShaderProgram_prependFragmentCode = null;
var cbggg_ShaderProgram_shaders = null;
var cbggg_ShaderProgram_intbuf = null;
function cbggg_ShaderProgram_$callClinit() {
    cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
    cbggg_ShaderProgram__clinit_();
}
function cbggg_ShaderProgram__init_(var_0, var_1) {
    var var_2 = new cbggg_ShaderProgram();
    cbggg_ShaderProgram__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_ShaderProgram__init_0($this, $vertexShader, $fragmentShader) {
    var var$3, var$4, var$5;
    cbggg_ShaderProgram_$callClinit();
    $this.$log = $rt_s(42);
    $this.$uniforms0 = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$uniformTypes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$uniformSizes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$attributes0 = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$attributeTypes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$attributeSizes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$refCount = 0;
    var$3 = new jn_ByteBufferImpl;
    var$4 = $rt_createByteArray(4);
    var$3.$mark = (-1);
    var$3.$capacity = 4;
    var$3.$limit = 4;
    jn_ByteOrder_$callClinit();
    var$5 = jn_ByteOrder_BIG_ENDIAN;
    var$3.$order = var$5;
    var$3.$start = 0;
    var$3.$array = var$4;
    var$3.$position = 0;
    var$3.$limit = 4;
    var$3.$direct = 1;
    var$3.$readOnly = 0;
    var$3.$order = var$5;
    $this.$params = jn_ByteBufferImpl_asIntBuffer(var$3);
    var$5 = new jn_ByteBufferImpl;
    var$4 = $rt_createByteArray(4);
    var$5.$mark = (-1);
    var$5.$capacity = 4;
    var$5.$limit = 4;
    var$5.$order = jn_ByteOrder_BIG_ENDIAN;
    var$5.$start = 0;
    var$5.$array = var$4;
    var$5.$position = 0;
    var$5.$limit = 4;
    var$5.$direct = 1;
    var$5.$readOnly = 0;
    jn_ByteBuffer_order(var$5, jn_ByteOrder_nativeOrder());
    $this.$type4 = jn_ByteBufferImpl_asIntBuffer(var$5);
    if ($vertexShader === null)
        $rt_throw(jl_IllegalArgumentException__init_1($rt_s(533)));
    if ($fragmentShader === null)
        $rt_throw(jl_IllegalArgumentException__init_1($rt_s(534)));
    var$3 = cbggg_ShaderProgram_prependVertexCode;
    if (var$3 !== null && jl_String_length(var$3) > 0)
        $vertexShader = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), cbggg_ShaderProgram_prependVertexCode), $vertexShader));
    var$3 = cbggg_ShaderProgram_prependFragmentCode;
    if (var$3 !== null && jl_String_length(var$3) > 0)
        $fragmentShader = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), cbggg_ShaderProgram_prependFragmentCode), $fragmentShader));
    $this.$vertexShaderSource = $vertexShader;
    $this.$fragmentShaderSource = $fragmentShader;
    $this.$matrix = cbgu_BufferUtils_newFloatBuffer(16);
    cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader);
    if (cbggg_ShaderProgram_isCompiled($this)) {
        cbggg_ShaderProgram_fetchAttributes($this);
        cbggg_ShaderProgram_fetchUniforms($this);
        cbggg_ShaderProgram_addManagedShader($this, cbg_Gdx_app, $this);
    }
}
function cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader) {
    var var$3;
    $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
    var$3 = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
    $this.$fragmentShaderHandle = var$3;
    if ($this.$vertexShaderHandle != (-1) && var$3 != (-1)) {
        var$3 = cbg_Gdx_gl20.$glCreateProgram();
        if (!var$3)
            var$3 = (-1);
        var$3 = cbggg_ShaderProgram_linkProgram($this, var$3);
        $this.$program = var$3;
        if (var$3 != (-1)) {
            $this.$isCompiled = 1;
            return;
        }
        $this.$isCompiled = 0;
        return;
    }
    $this.$isCompiled = 0;
}
function cbggg_ShaderProgram_loadShader($this, $type, $source) {
    var $gl, $infoLog, var$5, $intbuf, $shader, var$8, $compiled, var$10, var$11;
    $gl = cbg_Gdx_gl20;
    $infoLog = new jn_ByteBufferImpl;
    var$5 = $rt_createByteArray(4);
    $infoLog.$mark = (-1);
    $infoLog.$capacity = 4;
    $infoLog.$limit = 4;
    jn_ByteOrder_$callClinit();
    $intbuf = jn_ByteOrder_BIG_ENDIAN;
    $infoLog.$order = $intbuf;
    $infoLog.$start = 0;
    $infoLog.$array = var$5;
    $infoLog.$position = 0;
    $infoLog.$limit = 4;
    $infoLog.$direct = 1;
    $infoLog.$readOnly = 0;
    $infoLog.$order = $intbuf;
    $intbuf = jn_ByteBufferImpl_asIntBuffer($infoLog);
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    if (jn_IntBufferImpl_get($intbuf, 0))
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $gl = new jl_StringBuilder;
    $gl.$buffer = $rt_createCharArray(16);
    $source = $this.$log;
    jl_AbstractStringBuilder_insert($gl, $gl.$length, $source);
    $source = $type != 35633 ? $rt_s(535) : $rt_s(536);
    jl_AbstractStringBuilder_insert($gl, $gl.$length, $source);
    $source = new jl_String;
    var$8 = $gl.$buffer;
    $compiled = $gl.$length;
    jl_String_$callClinit();
    var$5 = $rt_createCharArray($compiled);
    var$10 = var$5.data;
    $source.$characters = var$5;
    var$11 = 0;
    while (var$11 < $compiled) {
        var$10[var$11] = var$8.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    $this.$log = $source;
    $gl = new jl_StringBuilder;
    $gl.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($gl, $gl.$length, $source);
    jl_AbstractStringBuilder_insert($gl, $gl.$length, $infoLog);
    $source = new jl_String;
    var$5 = $gl.$buffer;
    $shader = $gl.$length;
    var$10 = $rt_createCharArray($shader);
    var$8 = var$10.data;
    $source.$characters = var$10;
    $compiled = 0;
    while ($compiled < $shader) {
        var$8[$compiled] = var$5.data[$compiled + 0 | 0];
        $compiled = $compiled + 1 | 0;
    }
    $this.$log = $source;
    return (-1);
}
function cbggg_ShaderProgram_linkProgram($this, $program) {
    var $gl, $tmp_0, var$4, $intbuf;
    $gl = cbg_Gdx_gl20;
    if ($program == (-1))
        return (-1);
    $gl.$glAttachShader($program, $this.$vertexShaderHandle);
    $gl.$glAttachShader($program, $this.$fragmentShaderHandle);
    $gl.$glLinkProgram($program);
    $tmp_0 = new jn_ByteBufferImpl;
    var$4 = $rt_createByteArray(4);
    $tmp_0.$mark = (-1);
    $tmp_0.$capacity = 4;
    $tmp_0.$limit = 4;
    jn_ByteOrder_$callClinit();
    $intbuf = jn_ByteOrder_BIG_ENDIAN;
    $tmp_0.$order = $intbuf;
    $tmp_0.$start = 0;
    $tmp_0.$array = var$4;
    $tmp_0.$position = 0;
    $tmp_0.$limit = 4;
    $tmp_0.$direct = 1;
    $tmp_0.$readOnly = 0;
    $tmp_0.$order = $intbuf;
    $intbuf = jn_ByteBufferImpl_asIntBuffer($tmp_0);
    $gl.$glGetProgramiv($program, 35714, $intbuf);
    if (jn_IntBufferImpl_get($intbuf, 0))
        return $program;
    $this.$log = cbg_Gdx_gl20.$glGetProgramInfoLog($program);
    return (-1);
}
function cbggg_ShaderProgram_isCompiled($this) {
    return $this.$isCompiled;
}
function cbggg_ShaderProgram_fetchUniformLocation($this, $name, $pedantic) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$3 = $this.$uniforms0;
    var$4 = (-2);
    var$5 = cbgu_ObjectIntMap_locateKey(var$3, $name);
    if (var$5 >= 0)
        var$4 = var$3.$valueTable1.data[var$5];
    if (var$4 == (-2)) {
        var$4 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        if (var$4 == (-1) && $pedantic) {
            if ($this.$isCompiled) {
                var$3 = new jl_IllegalArgumentException;
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(537));
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $name);
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(538));
                $name = new jl_String;
                var$7 = var$6.$buffer;
                var$4 = var$6.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$4);
                var$9 = var$8.data;
                $name.$characters = var$8;
                var$5 = 0;
                while (var$5 < var$4) {
                    var$9[var$5] = var$7.data[var$5 + 0 | 0];
                    var$5 = var$5 + 1 | 0;
                }
                var$3.$suppressionEnabled = 1;
                var$3.$writableStackTrace = 1;
                var$3.$message = $name;
                $rt_throw(var$3);
            }
            $name = new jl_IllegalStateException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(539));
            if (!$this.$isCompiled)
                var$6 = $this.$log;
            else {
                var$6 = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program);
                $this.$log = var$6;
            }
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$6);
            var$6 = new jl_String;
            var$7 = var$3.$buffer;
            var$4 = var$3.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray(var$4);
            var$9 = var$8.data;
            var$6.$characters = var$8;
            var$5 = 0;
            while (var$5 < var$4) {
                var$9[var$5] = var$7.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            $name.$suppressionEnabled = 1;
            $name.$writableStackTrace = 1;
            $name.$message = var$6;
            $rt_throw($name);
        }
        cbgu_ObjectIntMap_put($this.$uniforms0, $name, var$4);
    }
    return var$4;
}
function cbggg_ShaderProgram_setVertexAttribute($this, $location, $size, $type, $normalize, $stride, $offset) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    if ($this.$invalidated) {
        cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
    $gl.$glVertexAttribPointer($location, $size, $type, $normalize, $stride, $offset);
}
function cbggg_ShaderProgram_checkManaged($this) {
    if ($this.$invalidated) {
        cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
}
function cbggg_ShaderProgram_addManagedShader($this, $app, $shaderProgram) {
    var $managedResources, var$4;
    cbggg_ShaderProgram_$callClinit();
    $managedResources = cbggg_ShaderProgram_shaders;
    var$4 = cbgu_ObjectMap_locateKey($managedResources, $app);
    $managedResources = var$4 < 0 ? null : $managedResources.$valueTable.data[var$4];
    if ($managedResources === null) {
        $managedResources = new cbgu_Array;
        $managedResources.$ordered = 1;
        $managedResources.$items = $rt_createArray(jl_Object, 16);
    }
    cbgu_Array_add($managedResources, $shaderProgram);
    cbgu_ObjectMap_put(cbggg_ShaderProgram_shaders, $app, $managedResources);
}
function cbggg_ShaderProgram_fetchUniforms($this) {
    var var$1, $numUniforms, $i, $name, $location;
    var$1 = $this.$params;
    var$1.$position = 0;
    var$1.$limit = var$1.$capacity;
    var$1.$mark = (-1);
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35718, var$1);
    $numUniforms = jn_IntBufferImpl_get($this.$params, 0);
    $this.$uniformNames = $rt_createArray(jl_String, $numUniforms);
    $i = 0;
    while ($i < $numUniforms) {
        var$1 = $this.$params;
        var$1.$position = 0;
        var$1.$limit = var$1.$capacity;
        var$1.$mark = (-1);
        jn_IntBufferImpl_put0(var$1, 0, 1);
        var$1 = $this.$type4;
        var$1.$position = 0;
        var$1.$limit = var$1.$capacity;
        var$1.$mark = (-1);
        $name = cbg_Gdx_gl20.$glGetActiveUniform($this.$program, $i, $this.$params, var$1);
        $location = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        cbgu_ObjectIntMap_put($this.$uniforms0, $name, $location);
        cbgu_ObjectIntMap_put($this.$uniformTypes, $name, jn_IntBufferImpl_get($this.$type4, 0));
        cbgu_ObjectIntMap_put($this.$uniformSizes, $name, jn_IntBufferImpl_get($this.$params, 0));
        $this.$uniformNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function cbggg_ShaderProgram_fetchAttributes($this) {
    var var$1, $numAttributes, $i, $name, $location;
    var$1 = $this.$params;
    var$1.$position = 0;
    var$1.$limit = var$1.$capacity;
    var$1.$mark = (-1);
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35721, var$1);
    $numAttributes = jn_IntBufferImpl_get($this.$params, 0);
    $this.$attributeNames = $rt_createArray(jl_String, $numAttributes);
    $i = 0;
    while ($i < $numAttributes) {
        var$1 = $this.$params;
        var$1.$position = 0;
        var$1.$limit = var$1.$capacity;
        var$1.$mark = (-1);
        jn_IntBufferImpl_put0(var$1, 0, 1);
        var$1 = $this.$type4;
        var$1.$position = 0;
        var$1.$limit = var$1.$capacity;
        var$1.$mark = (-1);
        $name = cbg_Gdx_gl20.$glGetActiveAttrib($this.$program, $i, $this.$params, var$1);
        $location = cbg_Gdx_gl20.$glGetAttribLocation($this.$program, $name);
        cbgu_ObjectIntMap_put($this.$attributes0, $name, $location);
        cbgu_ObjectIntMap_put($this.$attributeTypes, $name, jn_IntBufferImpl_get($this.$type4, 0));
        cbgu_ObjectIntMap_put($this.$attributeSizes, $name, jn_IntBufferImpl_get($this.$params, 0));
        $this.$attributeNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function cbggg_ShaderProgram__clinit_() {
    var var$1, var$2, var$3;
    cbggg_ShaderProgram_pedantic = 1;
    cbggg_ShaderProgram_prependVertexCode = $rt_s(42);
    cbggg_ShaderProgram_prependFragmentCode = $rt_s(42);
    cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_(51, 0.800000011920929);
    var$1 = new jn_ByteBufferImpl;
    var$2 = $rt_createByteArray(4);
    var$1.$mark = (-1);
    var$1.$capacity = 4;
    var$1.$limit = 4;
    jn_ByteOrder_$callClinit();
    var$3 = jn_ByteOrder_BIG_ENDIAN;
    var$1.$order = var$3;
    var$1.$start = 0;
    var$1.$array = var$2;
    var$1.$position = 0;
    var$1.$limit = 4;
    var$1.$direct = 1;
    var$1.$readOnly = 0;
    var$1.$order = var$3;
    cbggg_ShaderProgram_intbuf = jn_ByteBufferImpl_asIntBuffer(var$1);
}
var jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer);
function jn_CharBufferImpl_compact($this) {
    var var$1, var$2, $src, $sz, $i, var$6, var$7, var$8;
    if ($this.$readOnly0) {
        var$1 = new jn_ReadOnlyBufferException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    a: {
        var$2 = $this.$limit;
        $src = $this.$position;
        $sz = var$2 - $src | 0;
        if ($src > 0) {
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$2 = $src + 1 | 0;
                var$6 = $this.$array2.data;
                var$7 = $this.$start0;
                var$8 = var$6[$src + var$7 | 0];
                var$6[$i + var$7 | 0] = var$8;
                $i = $i + 1 | 0;
                $src = var$2;
            }
        }
    }
    $this.$position = $sz;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_CharBufferOverArray() {
    var a = this; jn_CharBufferImpl.call(a);
    a.$readOnly0 = 0;
    a.$start0 = 0;
    a.$array2 = null;
}
function jn_CharBufferOverArray_putChar($this, $index, $value) {
    $this.$array2.data[$index + $this.$start0 | 0] = $value;
}
function jnc_CharsetEncoder() {
    var a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$replacement0 = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$status = 0;
}
function jnc_CharsetEncoder_onMalformedInput($this, $newAction) {
    var var$2;
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(464);
    $rt_throw(var$2);
}
function jnc_CharsetEncoder_implOnMalformedInput($this, $newAction) {}
function jnc_CharsetEncoder_onUnmappableCharacter($this, $newAction) {
    var var$2;
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(464);
    $rt_throw(var$2);
}
function jnc_CharsetEncoder_implOnUnmappableCharacter($this, $newAction) {}
function jnc_CharsetEncoder_encode0($this, $in, $out, $endOfInput) {
    var $remaining, $result, $e, $action, var$8, var$9, var$10, $$je;
    a: {
        $remaining = $this.$status;
        if ($remaining != 3) {
            if ($endOfInput)
                break a;
            if ($remaining != 2)
                break a;
        }
        $in = new jl_IllegalStateException;
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $rt_throw($in);
    }
    $this.$status = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = jnci_BufferedEncoder_encodeLoop($this, $in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $in = new jnc_CoderMalfunctionError;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $in.$cause = $e;
                $rt_throw($in);
            } else {
                throw $$e;
            }
        }
        $remaining = $result.$kind;
        if ($remaining ? 0 : 1) {
            if (!$endOfInput)
                return $result;
            $remaining = $in.$limit - $in.$position | 0;
            if ($remaining <= 0)
                return $result;
            $result = new jnc_CoderResult;
            $result.$kind = 2;
            $result.$length0 = $remaining;
        } else if ($remaining != 1 ? 0 : 1)
            break;
        $action = !($result.$kind != 3 ? 0 : 1) ? $this.$malformedAction : $this.$unmappableAction;
        b: {
            jnc_CodingErrorAction_$callClinit();
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            var$8 = $out.$limit - $out.$position | 0;
            var$9 = $this.$replacement0;
            $remaining = var$9.data.length;
            if (var$8 < $remaining)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, var$9, 0, $remaining);
        }
        var$10 = $in.$position;
        $remaining = $result.$kind;
        var$8 = $remaining != 2 ? 0 : 1;
        if (!(!var$8 && !($remaining != 3 ? 0 : 1) ? 0 : 1)) {
            $in = new jl_UnsupportedOperationException;
            $in.$suppressionEnabled = 1;
            $in.$writableStackTrace = 1;
            $rt_throw($in);
        }
        jn_Buffer_position($in, var$10 + $result.$length0 | 0);
    }
    return $result;
}
function jnc_CharsetEncoder_encode($this, $in) {
    var var$2, var$3, var$4, $output, $result, var$7, var$8, var$9;
    var$2 = $in.$limit - $in.$position | 0;
    if (!var$2) {
        $in = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray(0);
        $in.$mark = (-1);
        $in.$capacity = 0;
        $in.$limit = 0;
        jn_ByteOrder_$callClinit();
        $in.$order = jn_ByteOrder_BIG_ENDIAN;
        $in.$start = 0;
        $in.$array = var$3;
        $in.$position = 0;
        $in.$limit = 0;
        $in.$direct = 0;
        $in.$readOnly = 0;
        return $in;
    }
    $this.$status = 0;
    var$4 = var$2 * $this.$averageBytesPerChar | 0;
    if (var$4 < 0) {
        $in = new jl_IllegalArgumentException;
        $output = new jl_StringBuilder;
        $output.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($output, $output.$length, $rt_s(510));
        jl_AbstractStringBuilder_insert0($output, $output.$length, var$4, 10);
        $result = new jl_String;
        var$3 = $output.$buffer;
        var$2 = $output.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$2);
        var$8 = var$7.data;
        $result.$characters = var$7;
        var$9 = 0;
        while (var$9 < var$2) {
            var$8[var$9] = var$3.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $in.$message = $result;
        $rt_throw($in);
    }
    $output = new jn_ByteBufferImpl;
    var$3 = $rt_createByteArray(var$4);
    $output.$mark = (-1);
    $output.$capacity = var$4;
    $output.$limit = var$4;
    jn_ByteOrder_$callClinit();
    $output.$order = jn_ByteOrder_BIG_ENDIAN;
    $output.$start = 0;
    $output.$array = var$3;
    $output.$position = 0;
    $output.$limit = var$4;
    $output.$direct = 0;
    $output.$readOnly = 0;
    while (true) {
        $result = jnc_CharsetEncoder_encode0($this, $in, $output, 0);
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!jnc_CoderResult_isError($result))
            continue;
        jnc_CoderResult_throwException($result);
    }
    $in = jnc_CharsetEncoder_encode0($this, $in, $output, 1);
    var$2 = $in.$kind;
    var$4 = var$2 != 2 ? 0 : 1;
    var$4 = !var$4 && !(var$2 != 3 ? 0 : 1) ? 0 : 1;
    a: {
        if (var$4) {
            switch (var$2) {
                case 0:
                    $in = new jnc_BufferUnderflowException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                case 1:
                    $in = new jnc_BufferOverflowException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                case 2:
                    $output = new jnc_MalformedInputException;
                    var$4 = $in.$length0;
                    $output.$suppressionEnabled = 1;
                    $output.$writableStackTrace = 1;
                    $output.$length4 = var$4;
                    $rt_throw($output);
                case 3:
                    break;
                default:
                    break a;
            }
            $output = new jnc_UnmappableCharacterException;
            var$4 = $in.$length0;
            jnc_CharacterCodingException__init_($output);
            $output.$length5 = var$4;
            $rt_throw($output);
        }
    }
    while (true) {
        $in = jnc_CharsetEncoder_flush($this, $output);
        if ($in.$kind ? 0 : 1)
            break;
        if (!jnc_CoderResult_isOverflow($in))
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_ByteBuffer_flip($output);
    return $output;
}
function jnc_CharsetEncoder_allocateMore($this, $buffer) {
    var var$2, var$3, var$4, $array, var$6, var$7, var$8;
    var$2 = $buffer.$array.data;
    var$3 = var$2.length;
    var$4 = var$3 * 2 | 0;
    $array = $rt_createByteArray(var$4);
    if (var$4 < var$3)
        var$3 = var$4;
    var$6 = $array.data;
    var$4 = 0;
    while (var$4 < var$3) {
        var$6[var$4] = var$2[var$4];
        var$4 = var$4 + 1 | 0;
    }
    var$3 = var$6.length;
    var$7 = new jn_ByteBufferImpl;
    var$8 = 0 + var$3 | 0;
    var$7.$mark = (-1);
    var$7.$capacity = var$3;
    var$7.$limit = var$3;
    jn_ByteOrder_$callClinit();
    var$7.$order = jn_ByteOrder_BIG_ENDIAN;
    var$7.$start = 0;
    var$7.$array = $array;
    var$7.$position = 0;
    var$7.$limit = var$8;
    var$7.$direct = 0;
    var$7.$readOnly = 0;
    jn_Buffer_position(var$7, $buffer.$position);
    return var$7;
}
function jnc_CharsetEncoder_flush($this, $out) {
    var var$2, $result;
    var$2 = $this.$status;
    if (var$2 != 2 && var$2 != 4) {
        $out = new jl_IllegalStateException;
        $out.$suppressionEnabled = 1;
        $out.$writableStackTrace = 1;
        $rt_throw($out);
    }
    $result = jnc_CoderResult_UNDERFLOW;
    if ($result === $result)
        $this.$status = 3;
    return $result;
}
function jnc_CharsetEncoder_implFlush($this, $out) {
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetEncoder_reset($this) {
    $this.$status = 0;
    return $this;
}
function jnc_CharsetEncoder_implReset($this) {}
function jnc_CoderResult() {
    var a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length0 = 0;
}
var jnc_CoderResult_UNDERFLOW = null;
var jnc_CoderResult_OVERFLOW = null;
function jnc_CoderResult__init_(var_0, var_1) {
    var var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_CoderResult__init_0($this, $kind, $length) {
    $this.$kind = $kind;
    $this.$length0 = $length;
}
function jnc_CoderResult_isOverflow($this) {
    return $this.$kind != 1 ? 0 : 1;
}
function jnc_CoderResult_isError($this) {
    var var$1, var$2;
    var$1 = $this.$kind;
    var$2 = var$1 != 2 ? 0 : 1;
    return !var$2 && !(var$1 != 3 ? 0 : 1) ? 0 : 1;
}
function jnc_CoderResult_malformedForLength($length) {
    var var$2;
    var$2 = new jnc_CoderResult;
    var$2.$kind = 2;
    var$2.$length0 = $length;
    return var$2;
}
function jnc_CoderResult_throwException($this) {
    var var$1, var$2;
    switch ($this.$kind) {
        case 0:
            var$1 = new jnc_BufferUnderflowException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        case 1:
            var$1 = new jnc_BufferOverflowException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        case 2:
            var$1 = new jnc_MalformedInputException;
            var$2 = $this.$length0;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$length4 = var$2;
            $rt_throw(var$1);
        case 3:
            var$1 = new jnc_UnmappableCharacterException;
            var$2 = $this.$length0;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$length5 = var$2;
            $rt_throw(var$1);
        default:
    }
}
function jnc_CoderResult__clinit_() {
    var var$1;
    var$1 = new jnc_CoderResult;
    var$1.$kind = 0;
    var$1.$length0 = 0;
    jnc_CoderResult_UNDERFLOW = var$1;
    var$1 = new jnc_CoderResult;
    var$1.$kind = 1;
    var$1.$length0 = 0;
    jnc_CoderResult_OVERFLOW = var$1;
}
function otcit_FloatAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign = 0;
}
var cbgg_Mesh$1 = $rt_classWithoutFields();
var cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null;
function cbgg_Mesh$1_$callClinit() {
    cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
    cbgg_Mesh$1__clinit_();
}
function cbgg_Mesh$1__clinit_() {
    var var$1, var$2;
    cbgg_Mesh$VertexDataType_$callClinit();
    var$1 = $rt_createIntArray((cbgg_Mesh$VertexDataType_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = var$1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObject.$ordinal] = 1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectSubData.$ordinal] = 2;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO.$ordinal] = 3;
    var$2[cbgg_Mesh$VertexDataType_VertexArray.$ordinal] = 4;
}
var cbggg_VertexData = $rt_classWithoutFields(0);
function cbggg_VertexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$attributes1 = null;
    a.$buffer4 = null;
    a.$bufferHandle0 = 0;
    a.$isStatic = 0;
    a.$usage1 = 0;
    a.$isDirty0 = 0;
    a.$isBound0 = 0;
}
function cbggg_VertexBufferObject__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObject();
    cbggg_VertexBufferObject__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObject__init_0($this, $isStatic, $numVertices, $attributes) {
    var var$4, var$5, var$6, var$7, var$8, var$9;
    $this.$isDirty0 = 0;
    $this.$isBound0 = 0;
    $this.$isStatic = $isStatic;
    $this.$attributes1 = $attributes;
    $numVertices = $rt_imul($attributes.$vertexSize / 4 | 0, $numVertices) * 4 | 0;
    if ($numVertices >= 0) {
        $attributes = new jn_ByteBufferImpl;
        var$4 = $rt_createByteArray($numVertices);
        $attributes.$mark = (-1);
        $attributes.$capacity = $numVertices;
        $attributes.$limit = $numVertices;
        jn_ByteOrder_$callClinit();
        var$5 = jn_ByteOrder_BIG_ENDIAN;
        $attributes.$order = var$5;
        $attributes.$start = 0;
        $attributes.$array = var$4;
        $attributes.$position = 0;
        $attributes.$limit = $numVertices;
        $attributes.$direct = 1;
        $attributes.$readOnly = 0;
        $attributes.$order = var$5;
        $attributes = jn_ByteBufferImpl_asFloatBuffer($attributes);
        $this.$buffer4 = $attributes;
        $attributes.$limit = $attributes.$position;
        $attributes.$position = 0;
        $attributes.$mark = (-1);
        $this.$bufferHandle0 = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
        $this.$usage1 = !$isStatic ? 35048 : 35044;
        return;
    }
    $attributes = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_StringBuilder_insert2(var$5, var$5.$length, $rt_s(510));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $numVertices, 10);
    var$6 = new jl_String;
    var$4 = var$5.$buffer;
    $numVertices = var$5.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray($numVertices);
    var$8 = var$7.data;
    var$6.$characters = var$7;
    var$9 = 0;
    while (var$9 < $numVertices) {
        var$8[var$9] = var$4.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    $attributes.$suppressionEnabled = 1;
    $attributes.$writableStackTrace = 1;
    $attributes.$message = var$6;
    $rt_throw($attributes);
}
function cbggg_VertexBufferObject_getAttributes($this) {
    return $this.$attributes1;
}
function cbggg_VertexBufferObject_getNumVertices($this) {
    return $this.$buffer4.$limit / ($this.$attributes1.$vertexSize / 4 | 0) | 0;
}
function cbggg_VertexBufferObject_setVertices($this, $vertices, $offset, $count) {
    var var$4, var$5, var$6;
    $this.$isDirty0 = 1;
    var$4 = $this.$buffer4;
    var$5 = null;
    var$6 = var$4 instanceof jn_ByteBuffer;
    if (var$6)
        var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
    else if (var$4 instanceof jn_FloatBuffer)
        var$5 = var$4;
    if (var$5 === null) {
        var$5 = new cbgu_GdxRuntimeException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = $rt_s(540);
        $rt_throw(var$5);
    }
    var$5.$position = 0;
    var$5.$limit = var$5.$capacity;
    var$5.$mark = (-1);
    jn_Buffer_position(var$4, 0);
    jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
    jn_Buffer_position(var$4, 0);
    if (!var$6)
        jn_Buffer_limit(var$4, $count);
    else
        jn_Buffer_limit(var$4, $count << 2);
    jn_Buffer_position($this.$buffer4, 0);
    jn_Buffer_limit($this.$buffer4, $count);
    if ($this.$isBound0) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer4;
        var$4.$glBufferData(34962, var$5.$limit, var$5, $this.$usage1);
        $this.$isDirty0 = 0;
    }
}
function cbggg_VertexBufferObject_bind($this, $shader, $locations) {
    var $gl, var$4, $numAttributes, $i, var$7, $attribute, $location, var$10, var$11, var$12, var$13, var$14, var$15;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle0);
    if ($this.$isDirty0) {
        var$4 = $this.$buffer4;
        $gl.$glBufferData(34962, var$4.$limit, var$4, $this.$usage1);
        $this.$isDirty0 = 0;
    }
    a: {
        $numAttributes = $this.$attributes1.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$7 = $locations.data;
                $attribute = $this.$attributes1.$attributes.data[$i];
                $location = var$7[$i];
                if ($location >= 0) {
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glEnableVertexAttribArray($location);
                    var$10 = $attribute.$numComponents;
                    var$11 = $attribute.$type0;
                    var$12 = $attribute.$normalized;
                    var$13 = $this.$attributes1.$vertexSize;
                    var$14 = $attribute.$offset;
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glVertexAttribPointer($location, var$10, var$11, var$12, var$13, var$14);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = $this.$attributes1.$attributes.data[$i];
            $gl = $attribute.$alias;
            var$4 = $shader.$attributes0;
            var$15 = (-1);
            $location = cbgu_ObjectIntMap_locateKey(var$4, $gl);
            if ($location >= 0)
                var$15 = var$4.$valueTable1.data[$location];
            if (var$15 >= 0) {
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glEnableVertexAttribArray(var$15);
                $location = $attribute.$numComponents;
                var$10 = $attribute.$type0;
                var$11 = $attribute.$normalized;
                var$12 = $this.$attributes1.$vertexSize;
                var$13 = $attribute.$offset;
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glVertexAttribPointer(var$15, $location, var$10, var$11, var$12, var$13);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound0 = 1;
}
function cbggg_VertexBufferObject_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location, var$7, $i_0, var$9, var$10, var$11;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = $this.$attributes1.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0) {
                    var$7 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$7.$glDisableVertexAttribArray($location);
                }
                $i = $i + 1 | 0;
            }
        }
        $i_0 = 0;
        while ($i_0 < $numAttributes) {
            var$9 = $this.$attributes1.$attributes.data[$i_0].$alias;
            var$10 = cbg_Gdx_gl20;
            if ($shader.$invalidated) {
                cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                $shader.$invalidated = 0;
            }
            var$11 = cbg_Gdx_gl20;
            var$7 = $shader.$attributes0;
            $location = (-2);
            $i = cbgu_ObjectIntMap_locateKey(var$7, var$9);
            if ($i >= 0)
                $location = var$7.$valueTable1.data[$i];
            if ($location == (-2)) {
                $location = var$11.$glGetAttribLocation($shader.$program, var$9);
                cbgu_ObjectIntMap_put($shader.$attributes0, var$9, $location);
            }
            if ($location != (-1))
                var$10.$glDisableVertexAttribArray($location);
            $i_0 = $i_0 + 1 | 0;
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound0 = 0;
}
var cbggg_IndexData = $rt_classWithoutFields(0);
function cbggg_IndexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$buffer3 = null;
    a.$bufferHandle = 0;
    a.$isDirect = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
    a.$usage0 = 0;
}
function cbggg_IndexBufferObject_getNumIndices($this) {
    return $this.$buffer3.$limit;
}
function cbggg_IndexBufferObject_getNumMaxIndices($this) {
    return $this.$buffer3.$capacity;
}
function cbggg_IndexBufferObject_setIndices($this, $indices, $offset, $count) {
    var var$4;
    $this.$isDirty = 1;
    var$4 = $this.$buffer3;
    var$4.$position = 0;
    var$4.$limit = var$4.$capacity;
    var$4.$mark = (-1);
    jn_ShortBuffer_put(var$4, $indices, $offset, $count);
    var$4 = $this.$buffer3;
    $offset = var$4.$position;
    var$4.$limit = $offset;
    var$4.$position = 0;
    var$4.$mark = (-1);
    if ($this.$isBound) {
        cbg_Gdx_gl20.$glBufferData(34963, $offset, var$4, $this.$usage0);
        $this.$isDirty = 0;
    }
}
function cbggg_IndexBufferObject_getBuffer($this, $forWriting) {
    $this.$isDirty = $this.$isDirty | $forWriting;
    return $this.$buffer3;
}
function cbggg_IndexBufferObject_bind($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$bufferHandle;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(541);
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty) {
        var$2 = cbg_Gdx_gl20;
        var$3 = $this.$buffer3;
        var$2.$glBufferData(34963, var$3.$limit, var$3, $this.$usage0);
        $this.$isDirty = 0;
    }
    $this.$isBound = 1;
}
function cbggg_IndexBufferObject_unbind($this) {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound = 0;
}
function cbggg_VertexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$attributes2 = null;
    a.$buffer5 = null;
    a.$byteBuffer0 = null;
    a.$bufferHandle1 = 0;
    a.$isDirect0 = 0;
    a.$isStatic0 = 0;
    a.$usage2 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
}
function cbggg_VertexBufferObjectSubData__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObjectSubData();
    cbggg_VertexBufferObjectSubData__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObjectSubData__init_0($this, $isStatic, $numVertices, $attributes) {
    var var$4, var$5, var$6, var$7, var$8, var$9;
    $this.$isDirty1 = 0;
    $this.$isBound1 = 0;
    $this.$isStatic0 = $isStatic;
    $this.$attributes2 = $attributes;
    $numVertices = $rt_imul($attributes.$vertexSize, $numVertices);
    if ($numVertices < 0) {
        $attributes = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_StringBuilder_insert2(var$4, var$4.$length, $rt_s(510));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $numVertices, 10);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $numVertices = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($numVertices);
        var$8 = var$7.data;
        var$5.$characters = var$7;
        var$9 = 0;
        while (var$9 < $numVertices) {
            var$8[var$9] = var$6.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        $attributes.$suppressionEnabled = 1;
        $attributes.$writableStackTrace = 1;
        $attributes.$message = var$5;
        $rt_throw($attributes);
    }
    $attributes = new jn_ByteBufferImpl;
    var$6 = $rt_createByteArray($numVertices);
    $attributes.$mark = (-1);
    $attributes.$capacity = $numVertices;
    $attributes.$limit = $numVertices;
    jn_ByteOrder_$callClinit();
    var$4 = jn_ByteOrder_BIG_ENDIAN;
    $attributes.$order = var$4;
    $attributes.$start = 0;
    $attributes.$array = var$6;
    $attributes.$position = 0;
    $attributes.$limit = $numVertices;
    $attributes.$direct = 1;
    $attributes.$readOnly = 0;
    $attributes.$order = var$4;
    $this.$byteBuffer0 = $attributes;
    $this.$isDirect0 = 1;
    $this.$usage2 = !$isStatic ? 35048 : 35044;
    $this.$buffer5 = jn_ByteBufferImpl_asFloatBuffer($attributes);
    $numVertices = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    cbg_Gdx_gl20.$glBindBuffer(34962, $numVertices);
    cbg_Gdx_gl20.$glBufferData(34962, $this.$byteBuffer0.$capacity, null, $this.$usage2);
    cbg_Gdx_gl20.$glBindBuffer(34962, 0);
    $this.$bufferHandle1 = $numVertices;
    $attributes = $this.$buffer5;
    $attributes.$limit = $attributes.$position;
    $attributes.$position = 0;
    $attributes.$mark = (-1);
    $attributes = $this.$byteBuffer0;
    $attributes.$limit = $attributes.$position;
    $attributes.$position = 0;
    $attributes.$mark = (-1);
}
function cbggg_VertexBufferObjectSubData_getAttributes($this) {
    return $this.$attributes2;
}
function cbggg_VertexBufferObjectSubData_getNumVertices($this) {
    return ($this.$buffer5.$limit * 4 | 0) / $this.$attributes2.$vertexSize | 0;
}
function cbggg_VertexBufferObjectSubData_setVertices($this, $vertices, $offset, $count) {
    var var$4, var$5, var$6;
    $this.$isDirty1 = 1;
    if (!$this.$isDirect0) {
        var$4 = $this.$buffer5;
        var$4.$position = 0;
        var$4.$limit = var$4.$capacity;
        var$4.$mark = (-1);
        jn_FloatBuffer_put(var$4, $vertices, $offset, $count);
        var$4 = $this.$buffer5;
        var$4.$limit = var$4.$position;
        var$4.$position = 0;
        var$4.$mark = (-1);
        jn_Buffer_position($this.$byteBuffer0, 0);
        jn_Buffer_limit($this.$byteBuffer0, $this.$buffer5.$limit << 2);
    } else {
        var$4 = $this.$byteBuffer0;
        var$5 = null;
        var$6 = var$4 instanceof jn_ByteBuffer;
        if (var$6)
            var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
        else if (var$4 instanceof jn_FloatBuffer)
            var$5 = var$4;
        if (var$5 === null) {
            var$5 = new cbgu_GdxRuntimeException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$message = $rt_s(540);
            $rt_throw(var$5);
        }
        var$5.$position = 0;
        var$5.$limit = var$5.$capacity;
        var$5.$mark = (-1);
        jn_Buffer_position(var$4, 0);
        jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
        jn_Buffer_position(var$4, 0);
        if (!var$6)
            jn_Buffer_limit(var$4, $count);
        else
            jn_Buffer_limit(var$4, $count << 2);
        jn_Buffer_position($this.$buffer5, 0);
        jn_Buffer_limit($this.$buffer5, $count);
    }
    if ($this.$isBound1) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer0;
        var$4.$glBufferSubData(34962, 0, var$5.$limit, var$5);
        $this.$isDirty1 = 0;
    }
}
function cbggg_VertexBufferObjectSubData_bind($this, $shader, $locations) {
    var $gl, var$4, $numAttributes, $i, var$7, $attribute, $location, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle1);
    if ($this.$isDirty1) {
        jn_Buffer_limit($this.$byteBuffer0, $this.$buffer5.$limit * 4 | 0);
        var$4 = $this.$byteBuffer0;
        $gl.$glBufferData(34962, var$4.$limit, var$4, $this.$usage2);
        $this.$isDirty1 = 0;
    }
    a: {
        $numAttributes = $this.$attributes2.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$7 = $locations.data;
                $attribute = $this.$attributes2.$attributes.data[$i];
                $location = var$7[$i];
                if ($location >= 0) {
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glEnableVertexAttribArray($location);
                    var$10 = $attribute.$numComponents;
                    var$11 = $attribute.$type0;
                    var$12 = $attribute.$normalized;
                    var$13 = $this.$attributes2.$vertexSize;
                    var$14 = $attribute.$offset;
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glVertexAttribPointer($location, var$10, var$11, var$12, var$13, var$14);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = $this.$attributes2.$attributes.data[$i];
            var$15 = $attribute.$alias;
            var$4 = $shader.$attributes0;
            var$16 = (-1);
            $location = cbgu_ObjectIntMap_locateKey(var$4, var$15);
            if ($location >= 0)
                var$16 = var$4.$valueTable1.data[$location];
            if (var$16 >= 0) {
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glEnableVertexAttribArray(var$16);
                $location = $attribute.$numComponents;
                var$10 = $attribute.$type0;
                var$11 = $attribute.$normalized;
                var$12 = $this.$attributes2.$vertexSize;
                var$13 = $attribute.$offset;
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glVertexAttribPointer(var$16, $location, var$10, var$11, var$12, var$13);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound1 = 1;
}
function cbggg_VertexBufferObjectSubData_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location, var$7, $i_0, var$9, var$10, var$11;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = $this.$attributes2.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0) {
                    var$7 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$7.$glDisableVertexAttribArray($location);
                }
                $i = $i + 1 | 0;
            }
        }
        $i_0 = 0;
        while ($i_0 < $numAttributes) {
            var$9 = $this.$attributes2.$attributes.data[$i_0].$alias;
            var$10 = cbg_Gdx_gl20;
            if ($shader.$invalidated) {
                cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                $shader.$invalidated = 0;
            }
            var$11 = cbg_Gdx_gl20;
            var$7 = $shader.$attributes0;
            $location = (-2);
            $i = cbgu_ObjectIntMap_locateKey(var$7, var$9);
            if ($i >= 0)
                $location = var$7.$valueTable1.data[$i];
            if ($location == (-2)) {
                $location = var$11.$glGetAttribLocation($shader.$program, var$9);
                cbgu_ObjectIntMap_put($shader.$attributes0, var$9, $location);
            }
            if ($location != (-1))
                var$10.$glDisableVertexAttribArray($location);
            $i_0 = $i_0 + 1 | 0;
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound1 = 0;
}
function cbggg_IndexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$buffer6 = null;
    a.$byteBuffer1 = null;
    a.$bufferHandle2 = 0;
    a.$isDirect1 = 0;
    a.$isDirty2 = 0;
    a.$isBound2 = 0;
    a.$usage3 = 0;
}
function cbggg_IndexBufferObjectSubData__init_(var_0, var_1) {
    var var_2 = new cbggg_IndexBufferObjectSubData();
    cbggg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_IndexBufferObjectSubData__init_0($this, $isStatic, $maxIndices) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    $this.$isDirty2 = 1;
    $this.$isBound2 = 0;
    $maxIndices = $maxIndices * 2 | 0;
    if ($maxIndices < 0) {
        var$3 = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_StringBuilder_insert2(var$4, var$4.$length, $rt_s(510));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $maxIndices, 10);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $maxIndices = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($maxIndices);
        var$8 = var$7.data;
        var$5.$characters = var$7;
        var$9 = 0;
        while (var$9 < $maxIndices) {
            var$8[var$9] = var$6.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$5;
        $rt_throw(var$3);
    }
    var$3 = new jn_ByteBufferImpl;
    var$6 = $rt_createByteArray($maxIndices);
    var$3.$mark = (-1);
    var$3.$capacity = $maxIndices;
    var$3.$limit = $maxIndices;
    jn_ByteOrder_$callClinit();
    var$4 = jn_ByteOrder_BIG_ENDIAN;
    var$3.$order = var$4;
    var$3.$start = 0;
    var$3.$array = var$6;
    var$3.$position = 0;
    var$3.$limit = $maxIndices;
    var$3.$direct = 1;
    var$3.$readOnly = 0;
    var$3.$order = var$4;
    $this.$byteBuffer1 = var$3;
    $this.$isDirect1 = 1;
    $this.$usage3 = !$isStatic ? 35048 : 35044;
    var$3 = jn_ByteBufferImpl_asShortBuffer(var$3);
    $this.$buffer6 = var$3;
    var$3.$limit = var$3.$position;
    var$3.$position = 0;
    var$3.$mark = (-1);
    var$3 = $this.$byteBuffer1;
    var$3.$limit = var$3.$position;
    var$3.$position = 0;
    var$3.$mark = (-1);
    $maxIndices = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    cbg_Gdx_gl20.$glBindBuffer(34963, $maxIndices);
    cbg_Gdx_gl20.$glBufferData(34963, $this.$byteBuffer1.$capacity, null, $this.$usage3);
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$bufferHandle2 = $maxIndices;
}
function cbggg_IndexBufferObjectSubData_getNumIndices($this) {
    return $this.$buffer6.$limit;
}
function cbggg_IndexBufferObjectSubData_getNumMaxIndices($this) {
    return $this.$buffer6.$capacity;
}
function cbggg_IndexBufferObjectSubData_setIndices($this, $indices, $offset, $count) {
    var var$4, var$5;
    $this.$isDirty2 = 1;
    var$4 = $this.$buffer6;
    var$4.$position = 0;
    var$4.$limit = var$4.$capacity;
    var$4.$mark = (-1);
    jn_ShortBuffer_put(var$4, $indices, $offset, $count);
    var$4 = $this.$buffer6;
    var$4.$limit = var$4.$position;
    var$4.$position = 0;
    var$4.$mark = (-1);
    jn_Buffer_position($this.$byteBuffer1, 0);
    jn_Buffer_limit($this.$byteBuffer1, $count << 1);
    if ($this.$isBound2) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer1;
        var$4.$glBufferSubData(34963, 0, var$5.$limit, var$5);
        $this.$isDirty2 = 0;
    }
}
function cbggg_IndexBufferObjectSubData_getBuffer($this, $forWriting) {
    $this.$isDirty2 = $this.$isDirty2 | $forWriting;
    return $this.$buffer6;
}
function cbggg_IndexBufferObjectSubData_bind($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$bufferHandle2;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(542);
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty2) {
        jn_Buffer_limit($this.$byteBuffer1, $this.$buffer6.$limit * 2 | 0);
        var$2 = cbg_Gdx_gl20;
        var$3 = $this.$byteBuffer1;
        var$2.$glBufferSubData(34963, 0, var$3.$limit, var$3);
        $this.$isDirty2 = 0;
    }
    $this.$isBound2 = 1;
}
function cbggg_IndexBufferObjectSubData_unbind($this) {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound2 = 0;
}
function cbggg_VertexBufferObjectWithVAO() {
    var a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$buffer7 = null;
    a.$bufferHandle3 = 0;
    a.$isStatic1 = 0;
    a.$usage4 = 0;
    a.$isDirty3 = 0;
    a.$isBound3 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
var cbggg_VertexBufferObjectWithVAO_tmpHandle = null;
function cbggg_VertexBufferObjectWithVAO_$callClinit() {
    cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
    cbggg_VertexBufferObjectWithVAO__clinit_();
}
function cbggg_VertexBufferObjectWithVAO__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObjectWithVAO();
    cbggg_VertexBufferObjectWithVAO__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObjectWithVAO__init_0($this, $isStatic, $numVertices, $attributes) {
    var var$4, var$5, var$6, var$7, var$8, var$9;
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    $this.$isDirty3 = 0;
    $this.$isBound3 = 0;
    $this.$vaoHandle = (-1);
    var$4 = new cbgu_IntArray;
    var$4.$ordered0 = 1;
    var$4.$items0 = $rt_createIntArray(16);
    $this.$cachedLocations = var$4;
    $this.$isStatic1 = $isStatic;
    $this.$attributes3 = $attributes;
    $numVertices = $rt_imul($attributes.$vertexSize / 4 | 0, $numVertices) * 4 | 0;
    if ($numVertices < 0) {
        $attributes = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_StringBuilder_insert2(var$4, var$4.$length, $rt_s(510));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $numVertices, 10);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $numVertices = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($numVertices);
        var$8 = var$7.data;
        var$5.$characters = var$7;
        var$9 = 0;
        while (var$9 < $numVertices) {
            var$8[var$9] = var$6.data[var$9 + 0 | 0];
            var$9 = var$9 + 1 | 0;
        }
        $attributes.$suppressionEnabled = 1;
        $attributes.$writableStackTrace = 1;
        $attributes.$message = var$5;
        $rt_throw($attributes);
    }
    $attributes = new jn_ByteBufferImpl;
    var$6 = $rt_createByteArray($numVertices);
    $attributes.$mark = (-1);
    $attributes.$capacity = $numVertices;
    $attributes.$limit = $numVertices;
    jn_ByteOrder_$callClinit();
    var$4 = jn_ByteOrder_BIG_ENDIAN;
    $attributes.$order = var$4;
    $attributes.$start = 0;
    $attributes.$array = var$6;
    $attributes.$position = 0;
    $attributes.$limit = $numVertices;
    $attributes.$direct = 1;
    $attributes.$readOnly = 0;
    $attributes.$order = var$4;
    $attributes = jn_ByteBufferImpl_asFloatBuffer($attributes);
    $this.$buffer7 = $attributes;
    $attributes.$limit = $attributes.$position;
    $attributes.$position = 0;
    $attributes.$mark = (-1);
    $this.$bufferHandle3 = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage4 = !$isStatic ? 35048 : 35044;
    $attributes = cbggg_VertexBufferObjectWithVAO_tmpHandle;
    $attributes.$position = 0;
    $attributes.$limit = $attributes.$capacity;
    $attributes.$mark = (-1);
    cbg_Gdx_gl30.$glGenVertexArrays(1, $attributes);
    $attributes = cbggg_VertexBufferObjectWithVAO_tmpHandle;
    $numVertices = $attributes.$position;
    if ($numVertices < $attributes.$limit) {
        $attributes.$position = $numVertices + 1 | 0;
        $this.$vaoHandle = $attributes.$getElement($numVertices);
        return;
    }
    $attributes = new jn_BufferUnderflowException;
    $attributes.$suppressionEnabled = 1;
    $attributes.$writableStackTrace = 1;
    $rt_throw($attributes);
}
function cbggg_VertexBufferObjectWithVAO_getAttributes($this) {
    return $this.$attributes3;
}
function cbggg_VertexBufferObjectWithVAO_getNumVertices($this) {
    return ($this.$buffer7.$limit * 4 | 0) / $this.$attributes3.$vertexSize | 0;
}
function cbggg_VertexBufferObjectWithVAO_setVertices($this, $vertices, $offset, $count) {
    var var$4, var$5, var$6;
    $this.$isDirty3 = 1;
    var$4 = $this.$buffer7;
    var$5 = null;
    var$6 = var$4 instanceof jn_ByteBuffer;
    if (var$6)
        var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
    else if (var$4 instanceof jn_FloatBuffer)
        var$5 = var$4;
    if (var$5 === null) {
        var$5 = new cbgu_GdxRuntimeException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = $rt_s(540);
        $rt_throw(var$5);
    }
    var$5.$position = 0;
    var$5.$limit = var$5.$capacity;
    var$5.$mark = (-1);
    jn_Buffer_position(var$4, 0);
    jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
    jn_Buffer_position(var$4, 0);
    if (!var$6)
        jn_Buffer_limit(var$4, $count);
    else
        jn_Buffer_limit(var$4, $count << 2);
    jn_Buffer_position($this.$buffer7, 0);
    jn_Buffer_limit($this.$buffer7, $count);
    if ($this.$isBound3) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer7;
        var$4.$glBufferData(34962, var$5.$limit, var$5, $this.$usage4);
        $this.$isDirty3 = 0;
    }
}
function cbggg_VertexBufferObjectWithVAO_bind($this, $shader, $locations) {
    var $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations);
    if ($this.$isDirty3) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle3);
        $shader = $this.$buffer7;
        jn_Buffer_limit($shader, $shader.$limit);
        $shader = $this.$buffer7;
        $gl.$glBufferData(34962, $shader.$limit, $shader, $this.$usage4);
        $this.$isDirty3 = 0;
    }
    $this.$isBound3 = 1;
}
function cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations) {
    var $i, $stillValid, $numAttributes, $attribute, $attribute_0, $location, var$9, var$10, var$11, var$12, var$13;
    $i = $this.$cachedLocations.$size0;
    $stillValid = !$i ? 0 : 1;
    a: {
        $numAttributes = $this.$attributes3.$attributes.data.length;
        if ($stillValid) {
            if ($locations === null) {
                $i = 0;
                b: {
                    while (true) {
                        if (!$stillValid)
                            break b;
                        if ($i >= $numAttributes)
                            break b;
                        $attribute = $this.$attributes3.$attributes.data[$i].$alias;
                        $attribute_0 = $shader.$attributes0;
                        $location = (-1);
                        $stillValid = cbgu_ObjectIntMap_locateKey($attribute_0, $attribute);
                        if ($stillValid >= 0)
                            $location = $attribute_0.$valueTable1.data[$stillValid];
                        $attribute = $this.$cachedLocations;
                        if ($i >= $attribute.$size0)
                            break;
                        $stillValid = $location != $attribute.$items0.data[$i] ? 0 : 1;
                        $i = $i + 1 | 0;
                    }
                    $attribute_0 = new jl_IndexOutOfBoundsException;
                    $shader = new jl_StringBuilder;
                    $shader.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(36));
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length, $i, 10);
                    jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(37));
                    $i = $attribute.$size0;
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length, $i, 10);
                    $attribute = new jl_String;
                    $locations = $shader.$buffer;
                    $stillValid = $shader.$length;
                    jl_String_$callClinit();
                    var$9 = $rt_createCharArray($stillValid);
                    var$10 = var$9.data;
                    $attribute.$characters = var$9;
                    $numAttributes = 0;
                    while ($numAttributes < $stillValid) {
                        var$10[$numAttributes] = $locations.data[$numAttributes + 0 | 0];
                        $numAttributes = $numAttributes + 1 | 0;
                    }
                    $attribute_0.$suppressionEnabled = 1;
                    $attribute_0.$writableStackTrace = 1;
                    $attribute_0.$message = $attribute;
                    $rt_throw($attribute_0);
                }
            } else {
                var$9 = $locations.data;
                $stillValid = var$9.length != $i ? 0 : 1;
                $i = 0;
                while ($stillValid) {
                    if ($i >= $numAttributes)
                        break a;
                    $stillValid = var$9[$i] != cbgu_IntArray_get($this.$cachedLocations, $i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    c: {
        if (!$stillValid) {
            d: {
                cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle3);
                if ($this.$cachedLocations.$size0) {
                    var$11 = $this.$attributes3.$attributes.data.length;
                    $i = 0;
                    while (true) {
                        if ($i >= var$11)
                            break d;
                        $attribute = $this.$cachedLocations;
                        if ($i >= $attribute.$size0)
                            break;
                        $location = $attribute.$items0.data[$i];
                        if ($location >= 0) {
                            $attribute = cbg_Gdx_gl20;
                            if ($shader.$invalidated) {
                                cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                                $shader.$invalidated = 0;
                            }
                            $attribute.$glDisableVertexAttribArray($location);
                        }
                        $i = $i + 1 | 0;
                    }
                    $attribute_0 = new jl_IndexOutOfBoundsException;
                    $shader = new jl_StringBuilder;
                    $shader.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(36));
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length, $i, 10);
                    jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(37));
                    $i = $attribute.$size0;
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length, $i, 10);
                    $attribute = new jl_String;
                    $locations = $shader.$buffer;
                    $stillValid = $shader.$length;
                    jl_String_$callClinit();
                    var$9 = $rt_createCharArray($stillValid);
                    var$10 = var$9.data;
                    $attribute.$characters = var$9;
                    $numAttributes = 0;
                    while ($numAttributes < $stillValid) {
                        var$10[$numAttributes] = $locations.data[$numAttributes + 0 | 0];
                        $numAttributes = $numAttributes + 1 | 0;
                    }
                    $attribute_0.$suppressionEnabled = 1;
                    $attribute_0.$writableStackTrace = 1;
                    $attribute_0.$message = $attribute;
                    $rt_throw($attribute_0);
                }
            }
            $this.$cachedLocations.$size0 = 0;
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break c;
                $attribute_0 = $this.$attributes3.$attributes.data[$i];
                if ($locations !== null) {
                    var$9 = $locations.data;
                    cbgu_IntArray_add0($this.$cachedLocations, var$9[$i]);
                } else {
                    var$12 = $this.$cachedLocations;
                    var$13 = $attribute_0.$alias;
                    cbgu_IntArray_add0(var$12, cbgu_ObjectIntMap_get($shader.$attributes0, var$13, (-1)));
                }
                $location = cbgu_IntArray_get($this.$cachedLocations, $i);
                if ($location >= 0) {
                    $attribute = cbg_Gdx_gl20;
                    cbggg_ShaderProgram_checkManaged($shader);
                    $attribute.$glEnableVertexAttribArray($location);
                    cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute_0.$numComponents, $attribute_0.$type0, $attribute_0.$normalized, $this.$attributes3.$vertexSize, $attribute_0.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_VertexBufferObjectWithVAO_unbind($this, $shader, $locations) {
    cbg_Gdx_gl30.$glBindVertexArray(0);
    $this.$isBound3 = 0;
}
function cbggg_VertexBufferObjectWithVAO__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new jn_ByteBufferImpl;
    var$2 = $rt_createByteArray(4);
    var$1.$mark = (-1);
    var$1.$capacity = 4;
    var$1.$limit = 4;
    jn_ByteOrder_$callClinit();
    var$3 = jn_ByteOrder_BIG_ENDIAN;
    var$1.$order = var$3;
    var$1.$start = 0;
    var$1.$array = var$2;
    var$1.$position = 0;
    var$1.$limit = 4;
    var$1.$direct = 1;
    var$1.$readOnly = 0;
    var$1.$order = var$3;
    cbggg_VertexBufferObjectWithVAO_tmpHandle = jn_ByteBufferImpl_asIntBuffer(var$1);
}
var cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject);
var cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject);
function cbgu_ObjectIntMap() {
    var a = this; jl_Object.call(a);
    a.$size10 = 0;
    a.$keyTable2 = null;
    a.$valueTable1 = null;
    a.$loadFactor4 = 0.0;
    a.$threshold4 = 0;
    a.$shift2 = 0;
    a.$mask4 = 0;
}
function cbgu_ObjectIntMap__init_(var_0, var_1) {
    var var_2 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgu_ObjectIntMap__init_0($this, $initialCapacity, $loadFactor) {
    var $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor4 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold4 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask4 = $initialCapacity;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable2 = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable1 = $rt_createIntArray($tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(59));
    jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    $tableSize = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($tableSize);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$10 = 0;
    while (var$10 < $tableSize) {
        var$9[var$10] = var$7.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$6;
    $rt_throw(var$4);
}
function cbgu_ObjectIntMap_locateKey($this, $key) {
    var $other, $keyTable, var$4, var$5, var$6, $i;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        $other.$suppressionEnabled = 1;
        $other.$writableStackTrace = 1;
        $other.$message = $rt_s(60);
        $rt_throw($other);
    }
    a: {
        $keyTable = $this.$keyTable2;
        if (!$key.$hashCode0) {
            var$4 = $key.$characters.data;
            var$5 = var$4.length;
            var$6 = 0;
            while (true) {
                if (var$6 >= var$5)
                    break a;
                $i = var$4[var$6];
                $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + $i | 0;
                var$6 = var$6 + 1 | 0;
            }
        }
    }
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode0), Long_create(2135587861, 2654435769)), $this.$shift2));
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if (jl_String_equals($other, $key))
            break;
        $i = ($i + 1 | 0) & $this.$mask4;
    }
    return $i;
}
function cbgu_ObjectIntMap_put($this, $key, $value) {
    var $i, var$4;
    $i = cbgu_ObjectIntMap_locateKey($this, $key);
    if ($i >= 0) {
        $this.$valueTable1.data[$i] = $value;
        return;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable2.data;
    var$4[$i] = $key;
    $this.$valueTable1.data[$i] = $value;
    $value = $this.$size10 + 1 | 0;
    $this.$size10 = $value;
    if ($value >= $this.$threshold4)
        cbgu_ObjectIntMap_resize($this, var$4.length << 1);
}
function cbgu_ObjectIntMap_get($this, $key, $defaultValue) {
    var $i;
    $i = cbgu_ObjectIntMap_locateKey($this, $key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable1.data[$i];
    return $defaultValue;
}
function cbgu_ObjectIntMap_resize($this, $newSize) {
    var $oldCapacity, var$3, $oldKeyTable, $oldValueTable, var$6, var$7, var$8, $i, $key, var$11, var$12, var$13, var$14;
    a: {
        $oldCapacity = $this.$keyTable2.data.length;
        $this.$threshold4 = $newSize * $this.$loadFactor4 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask4 = var$3;
        var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $this.$shift2 = var$3;
        $oldKeyTable = $this.$keyTable2;
        $oldValueTable = $this.$valueTable1;
        var$6 = $rt_createArray(jl_Object, $newSize);
        $this.$keyTable2 = var$6;
        var$7 = $rt_createIntArray($newSize);
        $this.$valueTable1 = var$7;
        if ($this.$size10 > 0) {
            var$8 = var$7.data;
            var$7 = var$6.data;
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null) {
                    b: {
                        var$11 = $oldValueTable.data[$i];
                        if (!$key.$hashCode0) {
                            var$6 = $key.$characters.data;
                            var$12 = var$6.length;
                            var$13 = 0;
                            while (true) {
                                if (var$13 >= var$12)
                                    break b;
                                var$14 = var$6[var$13];
                                $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$14 | 0;
                                var$13 = var$13 + 1 | 0;
                            }
                        }
                    }
                    $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode0), Long_create(2135587861, 2654435769)), var$3));
                    while (var$7[$newSize] !== null) {
                        $newSize = ($newSize + 1 | 0) & $this.$mask4;
                    }
                    var$7[$newSize] = $key;
                    var$8[$newSize] = var$11;
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
var cbgu_BufferUtils = $rt_classWithoutFields();
function cbgu_BufferUtils_newFloatBuffer($numFloats) {
    var $buffer, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    $numFloats = $numFloats * 4 | 0;
    if ($numFloats >= 0) {
        $buffer = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray($numFloats);
        $buffer.$mark = (-1);
        $buffer.$capacity = $numFloats;
        $buffer.$limit = $numFloats;
        jn_ByteOrder_$callClinit();
        var$4 = jn_ByteOrder_BIG_ENDIAN;
        $buffer.$order = var$4;
        $buffer.$start = 0;
        $buffer.$array = var$3;
        $buffer.$position = 0;
        $buffer.$limit = $numFloats;
        $buffer.$direct = 1;
        $buffer.$readOnly = 0;
        $buffer.$order = var$4;
        return jn_ByteBufferImpl_asFloatBuffer($buffer);
    }
    $buffer = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(510));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $numFloats, 10);
    var$5 = new jl_String;
    var$3 = var$4.$buffer;
    var$6 = var$4.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$5.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$3.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    $buffer.$suppressionEnabled = 1;
    $buffer.$writableStackTrace = 1;
    $buffer.$message = var$5;
    $rt_throw($buffer);
}
function jn_ByteBufferImpl() {
    var a = this; jn_ByteBuffer.call(a);
    a.$direct = 0;
    a.$readOnly = 0;
}
function jn_ByteBufferImpl_get($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$array.data[$this.$start + $index | 0];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
    var$3 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$5 = var$4.$buffer.data;
    var$5[var$3] = 41;
    var$6 = new jl_String;
    var$3 = var$4.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$3);
    var$8 = var$7.data;
    var$6.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$3) {
        var$8[var$9] = var$5[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$6;
    $rt_throw(var$2);
}
function jn_ByteBufferImpl_compact($this) {
    var var$1, $dst, var$3, $sz, $src, $i, var$7, var$8, var$9;
    if ($this.$readOnly) {
        var$1 = new jn_ReadOnlyBufferException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    a: {
        $dst = $this.$limit;
        var$3 = $this.$position;
        $sz = $dst - var$3 | 0;
        if (var$3 > 0) {
            $dst = $this.$start;
            $src = $dst + var$3 | 0;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$7 = $this.$array.data;
                var$8 = $dst + 1 | 0;
                var$9 = $src + 1 | 0;
                var$7[$dst] = var$7[$src];
                $i = $i + 1 | 0;
                $dst = var$8;
                $src = var$9;
            }
        }
    }
    $this.$position = $sz;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_ByteBufferImpl_asShortBuffer($this) {
    var var$1, var$2, $sz, var$4, var$5, var$6;
    var$1 = $this.$limit;
    var$2 = $this.$position;
    $sz = (var$1 - var$2 | 0) / 2 | 0;
    var$4 = $this.$order;
    jn_ByteOrder_$callClinit();
    if (var$4 !== jn_ByteOrder_BIG_ENDIAN) {
        var$4 = new jn_ShortBufferOverByteBufferLittleEndian;
        var$5 = $this.$start + var$2 | 0;
        var$2 = $this.$readOnly;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit = $sz;
        var$4.$position = 0;
        var$4.$limit = $sz;
        var$4.$start5 = var$5;
        var$4.$byteByffer = $this;
        var$4.$readOnly1 = var$2;
        return var$4;
    }
    var$4 = new jn_ShortBufferOverByteBufferBigEndian;
    var$1 = $this.$start + var$2 | 0;
    var$6 = $this.$readOnly;
    var$4.$mark = (-1);
    var$4.$capacity = $sz;
    var$4.$limit = $sz;
    var$4.$position = 0;
    var$4.$limit = $sz;
    var$4.$start5 = var$1;
    var$4.$byteByffer = $this;
    var$4.$readOnly1 = var$6;
    return var$4;
}
function jn_ByteBufferImpl_getInt($this, $index) {
    var var$2, $a, $b, $c, $d, var$7, var$8, var$9, var$10, var$11;
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        var$2 = $this.$array.data;
        $index = $this.$start + $index | 0;
        $a = var$2[$index] & 255;
        $b = var$2[$index + 1 | 0] & 255;
        $c = var$2[$index + 2 | 0] & 255;
        $d = var$2[$index + 3 | 0] & 255;
        var$7 = $this.$order;
        jn_ByteOrder_$callClinit();
        if (var$7 !== jn_ByteOrder_BIG_ENDIAN)
            return $d << 24 | $c << 16 | $b << 8 | $a;
        return $a << 24 | $b << 16 | $c << 8 | $d;
    }
    var$7 = new jl_IndexOutOfBoundsException;
    $a = $this.$limit - 3 | 0;
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $a, 10);
    $a = var$8.$length;
    jl_AbstractStringBuilder_insertSpace(var$8, $a, $a + 1 | 0);
    var$2 = var$8.$buffer.data;
    var$2[$a] = 41;
    var$9 = new jl_String;
    $a = var$8.$length;
    jl_String_$callClinit();
    var$10 = $rt_createCharArray($a);
    var$11 = var$10.data;
    var$9.$characters = var$10;
    $b = 0;
    while ($b < $a) {
        var$11[$b] = var$2[$b + 0 | 0];
        $b = $b + 1 | 0;
    }
    var$7.$suppressionEnabled = 1;
    var$7.$writableStackTrace = 1;
    var$7.$message = var$9;
    $rt_throw(var$7);
}
function jn_ByteBufferImpl_putInt($this, $index, $value) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($this.$readOnly) {
        var$3 = new jn_ReadOnlyBufferException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        var$3 = $this.$order;
        jn_ByteOrder_$callClinit();
        if (var$3 !== jn_ByteOrder_BIG_ENDIAN) {
            var$4 = $this.$array.data;
            $index = $this.$start + $index | 0;
            var$4[$index] = $value << 24 >> 24;
            var$4[$index + 1 | 0] = $value >> 8 << 24 >> 24;
            var$4[$index + 2 | 0] = $value >> 16 << 24 >> 24;
            var$4[$index + 3 | 0] = $value >> 24 << 24 >> 24;
        } else {
            var$4 = $this.$array.data;
            $index = $this.$start + $index | 0;
            var$4[$index] = $value >> 24 << 24 >> 24;
            var$4[$index + 1 | 0] = $value >> 16 << 24 >> 24;
            var$4[$index + 2 | 0] = $value >> 8 << 24 >> 24;
            var$4[$index + 3 | 0] = $value << 24 >> 24;
        }
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    $value = $this.$limit - 3 | 0;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $value, 10);
    $value = var$5.$length;
    jl_AbstractStringBuilder_insertSpace(var$5, $value, $value + 1 | 0);
    var$4 = var$5.$buffer.data;
    var$4[$value] = 41;
    var$6 = new jl_String;
    $value = var$5.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray($value);
    var$8 = var$7.data;
    var$6.$characters = var$7;
    var$9 = 0;
    while (var$9 < $value) {
        var$8[var$9] = var$4[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$6;
    $rt_throw(var$3);
}
function jn_ByteBufferImpl_asIntBuffer($this) {
    var var$1, var$2, $sz, var$4, var$5, var$6;
    var$1 = $this.$limit;
    var$2 = $this.$position;
    $sz = (var$1 - var$2 | 0) / 4 | 0;
    var$4 = $this.$order;
    jn_ByteOrder_$callClinit();
    if (var$4 !== jn_ByteOrder_BIG_ENDIAN) {
        var$4 = new jn_IntBufferOverByteBufferLittleEndian;
        var$5 = $this.$start + var$2 | 0;
        var$2 = $this.$readOnly;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit = $sz;
        var$4.$position = 0;
        var$4.$limit = $sz;
        var$4.$start6 = var$5;
        var$4.$byteByffer0 = $this;
        var$4.$readOnly2 = var$2;
        return var$4;
    }
    var$4 = new jn_IntBufferOverByteBufferBigEndian;
    var$1 = $this.$start + var$2 | 0;
    var$6 = $this.$readOnly;
    var$4.$mark = (-1);
    var$4.$capacity = $sz;
    var$4.$limit = $sz;
    var$4.$position = 0;
    var$4.$limit = $sz;
    var$4.$start6 = var$1;
    var$4.$byteByffer0 = $this;
    var$4.$readOnly2 = var$6;
    return var$4;
}
function jn_ByteBufferImpl_asFloatBuffer($this) {
    var var$1, var$2, $sz, var$4, var$5, var$6;
    var$1 = $this.$limit;
    var$2 = $this.$position;
    $sz = (var$1 - var$2 | 0) / 4 | 0;
    var$4 = $this.$order;
    jn_ByteOrder_$callClinit();
    if (var$4 !== jn_ByteOrder_LITTLE_ENDIAN) {
        var$4 = new jn_FloatBufferOverByteBufferLittleEndian;
        var$5 = $this.$start + var$2 | 0;
        var$2 = $this.$readOnly;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit = $sz;
        var$4.$position = 0;
        var$4.$limit = $sz;
        var$4.$start7 = var$5;
        var$4.$byteByffer1 = $this;
        var$4.$readOnly3 = var$2;
        return var$4;
    }
    var$4 = new jn_FloatBufferOverByteBufferBigEndian;
    var$1 = $this.$start + var$2 | 0;
    var$6 = $this.$readOnly;
    var$4.$mark = (-1);
    var$4.$capacity = $sz;
    var$4.$limit = $sz;
    var$4.$position = 0;
    var$4.$limit = $sz;
    var$4.$start7 = var$1;
    var$4.$byteByffer1 = $this;
    var$4.$readOnly3 = var$6;
    return var$4;
}
var cbgf_FileHandle = $rt_classWithoutFields();
var cgxgbt_TeaTool = $rt_classWithoutFields();
var jn_IntBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_IntBuffer_clear($this) {
    $this.$position = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_IntBuffer_clear0($this) {
    $this.$position = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name5 = null;
}
var jn_ByteOrder_BIG_ENDIAN = null;
var jn_ByteOrder_LITTLE_ENDIAN = null;
function jn_ByteOrder_$callClinit() {
    jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
    jn_ByteOrder__clinit_();
}
function jn_ByteOrder_nativeOrder() {
    jn_ByteOrder_$callClinit();
    return jn_ByteOrder_BIG_ENDIAN;
}
function jn_ByteOrder__clinit_() {
    var var$1;
    var$1 = new jn_ByteOrder;
    jn_ByteOrder_$callClinit();
    var$1.$name5 = $rt_s(544);
    jn_ByteOrder_BIG_ENDIAN = var$1;
    var$1 = new jn_ByteOrder;
    var$1.$name5 = $rt_s(545);
    jn_ByteOrder_LITTLE_ENDIAN = var$1;
}
var jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_FloatBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11, var$12;
    if ($this.$readOnly4()) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    var$5 = $this.$limit;
    $pos = $this.$position;
    if ((var$5 - $pos | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        var$5 = var$7.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i <= var$5) {
                if ($length >= 0) {
                    $i = 0;
                    while ($i < $length) {
                        var$9 = $pos + 1 | 0;
                        var$5 = $offset + 1 | 0;
                        $this.$putElement($pos, var$7[$offset]);
                        $i = $i + 1 | 0;
                        $pos = var$9;
                        $offset = var$5;
                    }
                    $this.$position = $this.$position + $length | 0;
                    return $this;
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$10 = new jl_StringBuilder;
                var$10.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(520));
                jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(521));
                var$11 = jl_String__init_1(var$10.$buffer, 0, var$10.$length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace(var$4);
                var$4.$message = var$11;
                $rt_throw(var$4);
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$10 = new jl_StringBuilder;
            var$10.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(546));
            jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $i, 10);
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(519));
            jl_AbstractStringBuilder_insert0(var$10, var$10.$length, var$5, 10);
            var$11 = new jl_String;
            $src = var$10.$buffer;
            $length = var$10.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($length);
            var$12 = var$7.data;
            var$11.$characters = var$7;
            var$5 = 0;
            while (var$5 < $length) {
                var$12[var$5] = $src.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$11;
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$10 = new jl_StringBuilder;
    var$10.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(522));
    jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $offset, 10);
    jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $length, 10);
    $length = var$10.$length;
    jl_AbstractStringBuilder_insertSpace(var$10, $length, $length + 1 | 0);
    var$12 = var$10.$buffer.data;
    var$12[$length] = 41;
    var$11 = new jl_String;
    $length = var$10.$length;
    jl_String_$callClinit();
    $src = $rt_createCharArray($length);
    var$7 = $src.data;
    var$11.$characters = $src;
    var$5 = 0;
    while (var$5 < $length) {
        var$7[var$5] = var$12[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$11;
    $rt_throw(var$4);
}
function jn_FloatBuffer_clear($this) {
    $this.$position = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_FloatBuffer_flip($this) {
    $this.$limit = $this.$position;
    $this.$position = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_FloatBuffer_limit($this, $newLimit) {
    jn_Buffer_limit($this, $newLimit);
    return $this;
}
function jn_FloatBuffer_position($this, $newPosition) {
    jn_Buffer_position($this, $newPosition);
    return $this;
}
function jn_FloatBuffer_flip0($this) {
    $this.$limit = $this.$position;
    $this.$position = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_FloatBuffer_clear0($this) {
    $this.$position = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_FloatBuffer_limit0($this, var$1) {
    jn_Buffer_limit($this, var$1);
    return $this;
}
function jn_FloatBuffer_position0($this, var$1) {
    jn_Buffer_position($this, var$1);
    return $this;
}
var cbgg_TextureData$Factory = $rt_classWithoutFields();
var jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_ShortBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11, var$12;
    if ($this.$readOnly4()) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    var$5 = $this.$limit;
    $pos = $this.$position;
    if ((var$5 - $pos | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        var$5 = var$7.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i <= var$5) {
                if ($length >= 0) {
                    $i = 0;
                    while ($i < $length) {
                        var$9 = $pos + 1 | 0;
                        var$5 = $offset + 1 | 0;
                        $this.$putElement0($pos, var$7[$offset]);
                        $i = $i + 1 | 0;
                        $pos = var$9;
                        $offset = var$5;
                    }
                    $this.$position = $this.$position + $length | 0;
                    return $this;
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$10 = new jl_StringBuilder;
                var$10.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(520));
                jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(521));
                jl_Throwable__init_3(var$4, jl_String__init_1(var$10.$buffer, 0, var$10.$length));
                $rt_throw(var$4);
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$10 = new jl_StringBuilder;
            var$10.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(547));
            jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $i, 10);
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(519));
            jl_AbstractStringBuilder_insert0(var$10, var$10.$length, var$5, 10);
            var$11 = new jl_String;
            $src = var$10.$buffer;
            $length = var$10.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($length);
            var$12 = var$7.data;
            var$11.$characters = var$7;
            var$5 = 0;
            while (var$5 < $length) {
                var$12[var$5] = $src.data[var$5 + 0 | 0];
                var$5 = var$5 + 1 | 0;
            }
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$11;
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$10 = new jl_StringBuilder;
    var$10.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(522));
    jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $offset, 10);
    jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$10, var$10.$length, $length, 10);
    $length = var$10.$length;
    jl_AbstractStringBuilder_insertSpace(var$10, $length, $length + 1 | 0);
    var$12 = var$10.$buffer.data;
    var$12[$length] = 41;
    var$11 = new jl_String;
    $length = var$10.$length;
    jl_String_$callClinit();
    $src = $rt_createCharArray($length);
    var$7 = $src.data;
    var$11.$characters = $src;
    var$5 = 0;
    while (var$5 < $length) {
        var$7[var$5] = var$12[var$5 + 0 | 0];
        var$5 = var$5 + 1 | 0;
    }
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    var$4.$message = var$11;
    $rt_throw(var$4);
}
function jn_ShortBuffer_clear($this) {
    $this.$position = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_ShortBuffer_flip($this) {
    $this.$limit = $this.$position;
    $this.$position = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_ShortBuffer_limit($this, $newLimit) {
    jn_Buffer_limit($this, $newLimit);
    return $this;
}
function jn_ShortBuffer_position($this, $newPosition) {
    jn_Buffer_position($this, $newPosition);
    return $this;
}
function jn_ShortBuffer_flip0($this) {
    $this.$limit = $this.$position;
    $this.$position = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_ShortBuffer_clear0($this) {
    $this.$position = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_ShortBuffer_limit0($this, var$1) {
    jn_Buffer_limit($this, var$1);
    return $this;
}
function jn_ShortBuffer_position0($this, var$1) {
    jn_Buffer_position($this, var$1);
    return $this;
}
var cbgur_ArrayReflection = $rt_classWithoutFields();
var cbgg_TextureData = $rt_classWithoutFields(0);
function cbggg_FileTextureData() {
    var a = this; jl_Object.call(a);
    a.$file = null;
    a.$width3 = 0;
    a.$height1 = 0;
    a.$format = null;
    a.$pixmap = null;
    a.$useMipMaps = 0;
    a.$isPrepared = 0;
}
var cbggg_FileTextureData_copyToPOT = 0;
function cbggg_FileTextureData__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_FileTextureData();
    cbggg_FileTextureData__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_FileTextureData__init_0($this, $file, $preloadedPixmap, $format, $useMipMaps) {
    $this.$width3 = 0;
    $this.$height1 = 0;
    $this.$isPrepared = 0;
    $this.$file = $file;
    $this.$pixmap = $preloadedPixmap;
    $this.$format = $format;
    $this.$useMipMaps = $useMipMaps;
    if ($preloadedPixmap !== null) {
        $file = cbggg_FileTextureData_ensurePot($this, $preloadedPixmap);
        $this.$pixmap = $file;
        $preloadedPixmap = $file.$nativePixmap;
        $this.$width3 = $preloadedPixmap === null ? $file.$width4 : $preloadedPixmap.$width5;
        $this.$height1 = $preloadedPixmap === null ? $file.$height2 : $preloadedPixmap.$height3;
        if ($format === null) {
            if ($preloadedPixmap === null) {
                cbgg_Pixmap$Format_$callClinit();
                $file = cbgg_Pixmap$Format_RGBA8888;
            } else
                $file = cbgg_Pixmap$Format_fromGdx2DPixmapFormat($preloadedPixmap.$format0);
            $this.$format = $file;
        }
    }
}
function cbggg_FileTextureData_prepare($this) {
    var var$1, var$2;
    if ($this.$isPrepared) {
        var$1 = new cbgu_GdxRuntimeException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(548);
        $rt_throw(var$1);
    }
    if ($this.$pixmap === null) {
        var$1 = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_($this.$file));
        $this.$pixmap = var$1;
        var$2 = var$1.$nativePixmap;
        $this.$width3 = var$2 === null ? var$1.$width4 : var$2.$width5;
        $this.$height1 = var$2 === null ? var$1.$height2 : var$2.$height3;
        if ($this.$format === null) {
            if (var$2 === null) {
                cbgg_Pixmap$Format_$callClinit();
                var$1 = cbgg_Pixmap$Format_RGBA8888;
            } else
                var$1 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat(var$2.$format0);
            $this.$format = var$1;
        }
    }
    $this.$isPrepared = 1;
}
function cbggg_FileTextureData_ensurePot($this, $pixmap) {
    var $tmp_0, $pixmapWidth, $pixmapHeight, $potWidth, $potHeight, var$7, var$8, var$9, var$10;
    a: {
        if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
            $tmp_0 = $pixmap.$nativePixmap;
            $pixmapWidth = $tmp_0 === null ? $pixmap.$width4 : $tmp_0.$width5;
            $pixmapHeight = $tmp_0 === null ? $pixmap.$height2 : $tmp_0.$height3;
            $potWidth = cbgm_MathUtils_nextPowerOfTwo($pixmapWidth);
            $potHeight = cbgm_MathUtils_nextPowerOfTwo($pixmapHeight);
            if ($pixmapWidth != $potWidth)
                break a;
            if ($pixmapHeight != $potHeight)
                break a;
        }
        return $pixmap;
    }
    $tmp_0 = new cbgg_Pixmap;
    var$7 = $pixmap.$nativePixmap;
    if (var$7 === null) {
        cbgg_Pixmap$Format_$callClinit();
        var$7 = cbgg_Pixmap$Format_RGBA8888;
    } else
        var$7 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat(var$7.$format0);
    cbgg_Pixmap__init_0($tmp_0, $potWidth, $potHeight, var$7);
    var$7 = $tmp_0.$nativePixmap;
    if (var$7 === null) {
        cbgg_Pixmap_ensureCanvasExists($pixmap);
        cbgg_Pixmap_image($tmp_0, $pixmap.$canvas, 0, 0, $pixmapWidth, $pixmapHeight, 0, 0, $pixmapWidth, $pixmapHeight);
    } else {
        var$8 = $pixmap.$nativePixmap.$basePtr;
        var$9 = var$7.$basePtr;
        cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$8, var$9, 0, 0, $pixmapWidth, $pixmapHeight, 0, 0, $pixmapWidth, $pixmapHeight);
    }
    if ($pixmap.$disposed) {
        $tmp_0 = new cbgu_GdxRuntimeException;
        $tmp_0.$suppressionEnabled = 1;
        $tmp_0.$writableStackTrace = 1;
        $tmp_0.$message = $rt_s(47);
        $rt_throw($tmp_0);
    }
    var$7 = cbgg_Pixmap_pixmaps;
    $potWidth = $pixmap.$id0;
    if ($potWidth >= (-128) && $potWidth <= 127) {
        jl_Integer_ensureIntegerCache();
        var$10 = jl_Integer_integerCache.data[$potWidth + 128 | 0];
    } else {
        var$10 = new jl_Integer;
        var$10.$value5 = $potWidth;
    }
    ju_HashMap_removeEntry(var$7, var$10);
    var$7 = $pixmap.$nativePixmap;
    if (var$7 !== null)
        cbggg_Gdx2DPixmapEmu_free$js_body$_36(var$7.$basePtr);
    $pixmap.$disposed = 1;
    return $tmp_0;
}
function cbgg_Pixmap() {
    var a = this; jl_Object.call(a);
    a.$width4 = 0;
    a.$height2 = 0;
    a.$canvas = null;
    a.$context0 = null;
    a.$id0 = 0;
    a.$buffer1 = null;
    a.$r0 = 0;
    a.$g0 = 0;
    a.$b0 = 0;
    a.$a0 = 0.0;
    a.$colorStr = null;
    a.$blending = null;
    a.$filter = null;
    a.$pixels = null;
    a.$imageElement = null;
    a.$videoElement = null;
    a.$color2 = 0;
    a.$nativePixmap = null;
    a.$disposed = 0;
}
var cbgg_Pixmap_pixmaps = null;
var cbgg_Pixmap_nextId = 0;
var cbgg_Pixmap_clearColor = null;
function cbgg_Pixmap_$callClinit() {
    cbgg_Pixmap_$callClinit = $rt_eraseClinit(cbgg_Pixmap);
    cbgg_Pixmap__clinit_();
}
function cbgg_Pixmap__init_(var_0) {
    var var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_1(var_1, var_0);
    return var_1;
}
function cbgg_Pixmap__init_2(var_0, var_1, var_2) {
    var var_3 = new cbgg_Pixmap();
    cbgg_Pixmap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Pixmap__init_1($this, $webFileHandler) {
    var $path, $object, var$4, $bytes, var$6, var$7, $response, $app, var$10, var$11;
    cbgg_Pixmap_$callClinit();
    $this.$r0 = 255;
    $this.$g0 = 255;
    $this.$b0 = 255;
    $this.$colorStr = cbgg_Pixmap_make(255, 255, 255, $this.$a0);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color2 = 0;
    $path = $webFileHandler.$file0;
    $object = $webFileHandler.$preloader1.$images;
    var$4 = cbgu_ObjectMap_locateKey($object, $path);
    $object = var$4 < 0 ? null : $object.$valueTable.data[var$4];
    if (cbg_Gdx_app.$config.$useNativePixmap) {
        $webFileHandler = $object.$data3;
        if ($webFileHandler === null)
            $bytes = null;
        else {
            $bytes = $rt_createByteArray($webFileHandler.length);
            var$6 = $bytes.data;
            var$4 = 0;
            var$7 = var$6.length;
            while (var$4 < var$7) {
                var$6[var$4] = $webFileHandler[var$4];
                var$4 = var$4 + 1 | 0;
            }
        }
        $this.$nativePixmap = cbggg_Gdx2DPixmapEmu__init_($bytes, 0, $bytes.data.length, 0);
        cbgg_Pixmap_initPixmapEmu($this, (-1), (-1), null, null);
    } else {
        cbgg_Pixmap_initPixmapEmu($this, (-1), (-1), $object.$image0, null);
        if ($this.$imageElement === null) {
            $object = new cbgu_GdxRuntimeException;
            $response = $webFileHandler.$file0;
            $webFileHandler = new jl_StringBuilder;
            $webFileHandler.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($webFileHandler, $webFileHandler.$length, $rt_s(549));
            var$4 = $webFileHandler.$length;
            if ($response === null)
                $response = $rt_s(1);
            jl_AbstractStringBuilder_insert($webFileHandler, var$4, $response);
            jl_AbstractStringBuilder_insert($webFileHandler, $webFileHandler.$length, $rt_s(550));
            $app = new jl_String;
            var$6 = $webFileHandler.$buffer;
            var$7 = $webFileHandler.$length;
            jl_String_$callClinit();
            $bytes = $rt_createCharArray(var$7);
            var$10 = $bytes.data;
            $app.$characters = $bytes;
            var$11 = 0;
            while (var$11 < var$7) {
                var$10[var$11] = var$6.data[var$11 + 0 | 0];
                var$11 = var$11 + 1 | 0;
            }
            $object.$suppressionEnabled = 1;
            $object.$writableStackTrace = 1;
            $object.$message = $app;
            $rt_throw($object);
        }
    }
}
function cbgg_Pixmap__init_0($this, $width, $height, $format) {
    cbgg_Pixmap_$callClinit();
    $this.$r0 = 255;
    $this.$g0 = 255;
    $this.$b0 = 255;
    $this.$colorStr = cbgg_Pixmap_make(255, 255, 255, $this.$a0);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color2 = 0;
    cbgg_Pixmap_initPixmapEmu($this, $width, $height, null, null);
}
function cbgg_Pixmap_initPixmapEmu($this, $width, $height, $imageElement, $videoElement) {
    var var$5;
    if ($videoElement !== null) {
        $this.$videoElement = $videoElement;
        $this.$width4 = $videoElement.getWidth();
        $this.$height2 = $videoElement.getHeight();
    } else if ($imageElement === null) {
        $this.$width4 = $width;
        $this.$height2 = $height;
    } else {
        $this.$imageElement = $imageElement;
        $this.$width4 = $imageElement.width;
        $this.$height2 = $imageElement.height;
    }
    $imageElement = new jn_ByteBufferImpl;
    var$5 = $rt_createByteArray(4);
    $imageElement.$mark = (-1);
    $imageElement.$capacity = 4;
    $imageElement.$limit = 4;
    jn_ByteOrder_$callClinit();
    $videoElement = jn_ByteOrder_BIG_ENDIAN;
    $imageElement.$order = $videoElement;
    $imageElement.$start = 0;
    $imageElement.$array = var$5;
    $imageElement.$position = 0;
    $imageElement.$limit = 4;
    $imageElement.$direct = 1;
    $imageElement.$readOnly = 0;
    $imageElement.$order = $videoElement;
    $this.$buffer1 = $imageElement;
    cbgg_Pixmap_$callClinit();
    $height = cbgg_Pixmap_nextId;
    cbgg_Pixmap_nextId = $height + 1 | 0;
    $this.$id0 = $height;
    jn_ByteBufferImpl_putInt($imageElement, 0, $height);
    $imageElement = cbgg_Pixmap_pixmaps;
    $width = $this.$id0;
    if ($width >= (-128) && $width <= 127) {
        jl_Integer_ensureIntegerCache();
        $videoElement = jl_Integer_integerCache.data[$width + 128 | 0];
    } else {
        $videoElement = new jl_Integer;
        $videoElement.$value5 = $width;
    }
    ju_HashMap_putImpl($imageElement, $videoElement, $this);
}
function cbgg_Pixmap_create($this) {
    var $createElement, $window;
    cgxgbtdi_TeaWindow_$callClinit();
    $createElement = cgxgbtdi_TeaWindow_TEA_WINDOW.$window0.document.createElement("canvas");
    $this.$canvas = $createElement;
    $window = $this.$width4;
    $createElement.width = $window;
    $createElement = $this.$canvas;
    $window = $this.$height2;
    $createElement.height = $window;
    $createElement = $this.$canvas.getContext("2d");
    $this.$context0 = $createElement;
    cbgg_Pixmap_$callClinit();
    cbgg_Composite_$callClinit();
    $window = $rt_ustr(cbgg_Composite_SOURCE_OVER.$name0);
    $createElement.globalCompositeOperation = $window;
}
function cbgg_Pixmap_make($r2, $g2, $b2, $a2) {
    var var$5, var$6, var$7, var$8, var$9;
    cbgg_Pixmap_$callClinit();
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(551));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $r2, 10);
    $r2 = var$5.$length;
    jl_AbstractStringBuilder_insertSpace(var$5, $r2, $r2 + 1 | 0);
    var$5.$buffer.data[$r2] = 44;
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $g2, 10);
    $r2 = var$5.$length;
    jl_AbstractStringBuilder_insertSpace(var$5, $r2, $r2 + 1 | 0);
    var$5.$buffer.data[$r2] = 44;
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $b2, 10);
    $g2 = var$5.$length;
    jl_AbstractStringBuilder_insertSpace(var$5, $g2, $g2 + 1 | 0);
    var$5.$buffer.data[$g2] = 44;
    jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $a2);
    $b2 = var$5.$length;
    jl_AbstractStringBuilder_insertSpace(var$5, $b2, $b2 + 1 | 0);
    var$6 = var$5.$buffer.data;
    var$6[$b2] = 41;
    var$7 = new jl_String;
    $g2 = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($g2);
    var$9 = var$8.data;
    var$7.$characters = var$8;
    $b2 = 0;
    while ($b2 < $g2) {
        var$9[$b2] = var$6[$b2 + 0 | 0];
        $b2 = $b2 + 1 | 0;
    }
    return var$7;
}
function cbgg_Pixmap_ensureCanvasExists($this) {
    var var$1, var$2;
    if ($this.$canvas === null) {
        cbgg_Pixmap_create($this);
        if ($this.$imageElement !== null) {
            var$1 = $this.$context0;
            cbgg_Composite_$callClinit();
            var$2 = $rt_ustr(cbgg_Composite_COPY.$value6);
            var$1.globalCompositeOperation = var$2;
            var$1 = $this.$context0;
            var$2 = $this.$imageElement;
            var$1.drawImage(var$2, 0.0, 0.0);
            var$1 = $this.$context0;
            var$2 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$value6);
            var$1.globalCompositeOperation = var$2;
        }
        if ($this.$videoElement !== null) {
            var$2 = $this.$context0;
            cbgg_Composite_$callClinit();
            var$1 = $rt_ustr(cbgg_Composite_COPY.$value6);
            var$2.globalCompositeOperation = var$1;
            var$1 = $this.$context0;
            var$2 = $this.$videoElement;
            var$1.drawImage(var$2, 0.0, 0.0);
            var$1 = $this.$context0;
            var$2 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$value6);
            var$1.globalCompositeOperation = var$2;
        }
    }
}
function cbgg_Pixmap_drawPixmap($this, $pixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight) {
    var var$10, var$11, var$12;
    var$10 = $this.$nativePixmap;
    if (var$10 === null) {
        cbgg_Pixmap_ensureCanvasExists($pixmap);
        cbgg_Pixmap_image($this, $pixmap.$canvas, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
    } else {
        var$11 = $pixmap.$nativePixmap.$basePtr;
        var$12 = var$10.$basePtr;
        cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$11, var$12, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
    }
}
function cbgg_Pixmap_getWidth($this) {
    var var$1;
    var$1 = $this.$nativePixmap;
    if (var$1 === null)
        return $this.$width4;
    return var$1.$width5;
}
function cbgg_Pixmap_getHeight($this) {
    var var$1;
    var$1 = $this.$nativePixmap;
    if (var$1 === null)
        return $this.$height2;
    return var$1.$height3;
}
function cbgg_Pixmap_dispose($this) {
    var var$1, var$2, var$3;
    if ($this.$disposed) {
        var$1 = new cbgu_GdxRuntimeException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(47);
        $rt_throw(var$1);
    }
    cbgg_Pixmap_$callClinit();
    var$2 = cbgg_Pixmap_pixmaps;
    var$3 = $this.$id0;
    if (var$3 >= (-128) && var$3 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$1 = jl_Integer_integerCache.data[var$3 + 128 | 0];
    } else {
        var$1 = new jl_Integer;
        var$1.$value5 = var$3;
    }
    ju_HashMap_removeEntry(var$2, var$1);
    var$2 = $this.$nativePixmap;
    if (var$2 !== null)
        cbggg_Gdx2DPixmapEmu_free$js_body$_36(var$2.$basePtr);
    $this.$disposed = 1;
}
function cbgg_Pixmap_getGLFormat($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$nativePixmap;
    if (var$1 === null)
        return 6408;
    a: {
        var$2 = var$1.$format0;
        switch (var$2) {
            case 1:
                break;
            case 2:
                var$2 = 6410;
                break a;
            case 3:
            case 5:
                var$2 = 6407;
                break a;
            case 4:
            case 6:
                var$2 = 6408;
                break a;
            default:
                var$1 = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert(var$3, var$3.$length, jl_String_toString($rt_s(48)));
                jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10);
                var$4 = new jl_String;
                var$5 = var$3.$buffer;
                var$6 = var$3.$length;
                var$7 = $rt_createCharArray(var$6);
                var$8 = var$7.data;
                var$4.$characters = var$7;
                var$9 = 0;
                while (var$9 < var$6) {
                    var$8[var$9] = var$5.data[var$9 + 0 | 0];
                    var$9 = var$9 + 1 | 0;
                }
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$message = var$4;
                $rt_throw(var$1);
        }
        var$2 = 6406;
    }
    return var$2;
}
function cbgg_Pixmap_getGLInternalFormat($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$nativePixmap;
    if (var$1 === null)
        return 6408;
    a: {
        var$2 = var$1.$format0;
        switch (var$2) {
            case 1:
                break;
            case 2:
                var$2 = 6410;
                break a;
            case 3:
            case 5:
                var$2 = 6407;
                break a;
            case 4:
            case 6:
                var$2 = 6408;
                break a;
            default:
                var$1 = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(48));
                jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10);
                var$4 = new jl_String;
                var$5 = var$3.$buffer;
                var$6 = var$3.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray(var$6);
                var$8 = var$7.data;
                var$4.$characters = var$7;
                var$9 = 0;
                while (var$9 < var$6) {
                    var$8[var$9] = var$5.data[var$9 + 0 | 0];
                    var$9 = var$9 + 1 | 0;
                }
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$message = var$4;
                $rt_throw(var$1);
        }
        var$2 = 6406;
    }
    return var$2;
}
function cbgg_Pixmap_getGLType($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$nativePixmap;
    if (var$1 === null)
        return 5121;
    a: {
        var$2 = var$1.$format0;
        switch (var$2) {
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            case 5:
                var$2 = 33635;
                break a;
            case 6:
                var$2 = 32819;
                break a;
            default:
                var$1 = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(48));
                jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10);
                var$4 = new jl_String;
                var$5 = var$3.$buffer;
                var$6 = var$3.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray(var$6);
                var$8 = var$7.data;
                var$4.$characters = var$7;
                var$9 = 0;
                while (var$9 < var$6) {
                    var$8[var$9] = var$5.data[var$9 + 0 | 0];
                    var$9 = var$9 + 1 | 0;
                }
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$message = var$4;
                $rt_throw(var$1);
        }
        var$2 = 5121;
    }
    return var$2;
}
function cbgg_Pixmap_getPixels($this) {
    return $this.$buffer1;
}
function cbgg_Pixmap_getFormat($this) {
    var var$1;
    var$1 = $this.$nativePixmap;
    if (var$1 === null) {
        cbgg_Pixmap$Format_$callClinit();
        return cbgg_Pixmap$Format_RGBA8888;
    }
    return cbgg_Pixmap$Format_fromGdx2DPixmapFormat(var$1.$format0);
}
function cbgg_Pixmap_setBlending($this, $blending) {
    var var$2, var$3;
    $this.$blending = $blending;
    var$2 = $this.$nativePixmap;
    if (var$2 === null) {
        cbgg_Pixmap_ensureCanvasExists($this);
        $blending = $this.$context0;
        cbgg_Composite_$callClinit();
        var$2 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$name0);
        $blending.globalCompositeOperation = var$2;
    } else {
        cbgg_Pixmap$Blending_$callClinit();
        var$3 = $blending !== cbgg_Pixmap$Blending_None ? 1 : 0;
        cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47(var$2.$basePtr, var$3);
    }
}
function cbgg_Pixmap_image($this, $image, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) {
    var var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21;
    cbgg_Pixmap_ensureCanvasExists($this);
    var$10 = $this.$blending;
    cbgg_Pixmap$Blending_$callClinit();
    if (var$10 === cbgg_Pixmap$Blending_None) {
        a: {
            var$11 = $this.$context0;
            var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
            var$11.fillStyle = var$10;
            var$11 = $this.$context0;
            var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
            var$11.strokeStyle = var$10;
            var$11 = $this.$context0;
            var$10 = "destination-out";
            var$11.globalCompositeOperation = var$10;
            $this.$context0.beginPath();
            var$12 = $this.$context0;
            var$13 = $dstX;
            var$14 = $dstY;
            var$15 = $dstWidth;
            var$16 = $dstHeight;
            var$12.rect(var$13, var$14, var$15, var$16);
            cbgg_PixmapEmu$DrawType_$callClinit();
            var$11 = cbgg_PixmapEmu$DrawType_FILL;
            cbgg_Pixmap_ensureCanvasExists($this);
            cbgg_PixmapEmu$2_$callClinit();
            switch (cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType.data[var$11.$ordinal]) {
                case 1:
                    break;
                case 2:
                    $this.$context0.stroke();
                    break a;
                default:
                    break a;
            }
            $this.$context0.fill();
        }
        $this.$context0.closePath();
        var$17 = $this.$context0;
        var$11 = $rt_ustr($this.$colorStr);
        var$17.fillStyle = var$11;
        var$17 = $this.$context0;
        var$10 = $rt_ustr($this.$colorStr);
        var$17.strokeStyle = var$10;
        var$17 = $this.$context0;
        cbgg_Composite_$callClinit();
        var$11 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$value6);
        var$17.globalCompositeOperation = var$11;
    }
    if ($srcWidth && $srcHeight && $dstWidth && $dstHeight) {
        var$11 = $this.$context0;
        var$13 = $srcX;
        var$14 = $srcY;
        var$15 = $srcWidth;
        var$16 = $srcHeight;
        var$18 = $dstX;
        var$19 = $dstY;
        var$20 = $dstWidth;
        var$21 = $dstHeight;
        var$11.drawImage($image, var$13, var$14, var$15, var$16, var$18, var$19, var$20, var$21);
    }
    $this.$pixels = null;
}
function cbgg_Pixmap__clinit_() {
    var var$1, var$2, var$3, var$4;
    var$1 = new ju_HashMap;
    var$2 = ju_HashMap_calculateCapacity(16);
    var$1.$elementCount = 0;
    var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
    var$4 = var$3.data;
    var$1.$elementData = var$3;
    var$1.$loadFactor = 0.75;
    var$1.$threshold = var$4.length * 0.75 | 0;
    cbgg_Pixmap_pixmaps = var$1;
    cbgg_Pixmap_nextId = 0;
    cbgg_Pixmap_clearColor = cbgg_Pixmap_make(255, 255, 255, 1.0);
}
var jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer);
function jn_IntBufferImpl_get0($this) {
    var var$1, var$2;
    var$1 = $this.$position;
    if (var$1 < $this.$limit) {
        $this.$position = var$1 + 1 | 0;
        return $this.$getElement(var$1);
    }
    var$2 = new jn_BufferUnderflowException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
}
function jn_IntBufferImpl_put($this, $b) {
    var var$2, var$3;
    if ($this.$readOnly4()) {
        var$2 = new jn_ReadOnlyBufferException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    var$3 = $this.$position;
    if (var$3 < $this.$limit) {
        $this.$position = var$3 + 1 | 0;
        $this.$putElement1(var$3, $b);
        return $this;
    }
    var$2 = new jn_BufferOverflowException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
}
function jn_IntBufferImpl_get($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
    var$3 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$5 = var$4.$buffer.data;
    var$5[var$3] = 41;
    var$6 = new jl_String;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$3 = 0;
    while (var$3 < var$7) {
        var$9[var$3] = var$5[var$3 + 0 | 0];
        var$3 = var$3 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$6;
    $rt_throw(var$2);
}
function jn_IntBufferImpl_put0($this, $index, $b) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($this.$readOnly4()) {
        var$3 = new jn_ReadOnlyBufferException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit) {
        $this.$putElement1($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    $b = $this.$limit;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $b, 10);
    $b = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, $b, $b + 1 | 0);
    var$5 = var$4.$buffer.data;
    var$5[$b] = 41;
    var$6 = new jl_String;
    $b = var$4.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray($b);
    var$8 = var$7.data;
    var$6.$characters = var$7;
    var$9 = 0;
    while (var$9 < $b) {
        var$8[var$9] = var$5[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$6;
    $rt_throw(var$3);
}
function jn_IntBufferImpl_isReadOnly($this) {
    return $this.$readOnly4();
}
function jn_IntBufferOverArray() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$readOnly5 = 0;
    a.$start8 = 0;
    a.$array4 = null;
}
function jn_IntBufferOverArray_getElement($this, $index) {
    return $this.$array4.data[$index + $this.$start8 | 0];
}
function jn_IntBufferOverArray_putElement($this, $index, $value) {
    $this.$array4.data[$index + $this.$start8 | 0] = $value;
}
function jn_IntBufferOverArray_readOnly($this) {
    return $this.$readOnly5;
}
var jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer);
function jn_FloatBufferImpl_get($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement0($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
    var$3 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$5 = var$4.$buffer.data;
    var$5[var$3] = 41;
    var$6 = new jl_String;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$3 = 0;
    while (var$3 < var$7) {
        var$9[var$3] = var$5[var$3 + 0 | 0];
        var$3 = var$3 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$6;
    $rt_throw(var$2);
}
function jn_FloatBufferImpl_put($this, $index, $b) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($this.$readOnly4()) {
        var$3 = new jn_ReadOnlyBufferException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit) {
        $this.$putElement($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10);
    var$4 = var$5.$length;
    jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
    var$6 = var$5.$buffer.data;
    var$6[var$4] = 41;
    var$7 = new jl_String;
    var$4 = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$4);
    var$9 = var$8.data;
    var$7.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$4) {
        var$9[var$10] = var$6[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$7;
    $rt_throw(var$3);
}
function jn_FloatBufferImpl_isReadOnly($this) {
    return $this.$readOnly4();
}
function jn_FloatBufferOverArray() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly6 = 0;
    a.$start9 = 0;
    a.$array5 = null;
}
function jn_FloatBufferOverArray_getElement($this, $index) {
    return $this.$array5.data[$index + $this.$start9 | 0];
}
function jn_FloatBufferOverArray_putElement($this, $index, $value) {
    $this.$array5.data[$index + $this.$start9 | 0] = $value;
}
function jn_FloatBufferOverArray_readOnly($this) {
    return $this.$readOnly6;
}
var cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Blending_None = null;
var cbgg_Pixmap$Blending_SourceOver = null;
var cbgg_Pixmap$Blending_$VALUES = null;
function cbgg_Pixmap$Blending_$callClinit() {
    cbgg_Pixmap$Blending_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Blending);
    cbgg_Pixmap$Blending__clinit_();
}
function cbgg_Pixmap$Blending__clinit_() {
    var var$1, var$2;
    var$1 = new cbgg_Pixmap$Blending;
    cbgg_Pixmap$Blending_$callClinit();
    var$1.$name0 = $rt_s(552);
    var$1.$ordinal = 0;
    cbgg_Pixmap$Blending_None = var$1;
    var$2 = new cbgg_Pixmap$Blending;
    var$2.$name0 = $rt_s(553);
    var$2.$ordinal = 1;
    cbgg_Pixmap$Blending_SourceOver = var$2;
    cbgg_Pixmap$Blending_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Blending, [var$1, var$2]);
}
var cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Filter_NearestNeighbour = null;
var cbgg_Pixmap$Filter_BiLinear = null;
var cbgg_Pixmap$Filter_$VALUES = null;
function cbgg_Pixmap$Filter_$callClinit() {
    cbgg_Pixmap$Filter_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Filter);
    cbgg_Pixmap$Filter__clinit_();
}
function cbgg_Pixmap$Filter__clinit_() {
    var var$1, var$2;
    var$1 = new cbgg_Pixmap$Filter;
    cbgg_Pixmap$Filter_$callClinit();
    var$1.$name0 = $rt_s(554);
    var$1.$ordinal = 0;
    cbgg_Pixmap$Filter_NearestNeighbour = var$1;
    var$2 = new cbgg_Pixmap$Filter;
    var$2.$name0 = $rt_s(555);
    var$2.$ordinal = 1;
    cbgg_Pixmap$Filter_BiLinear = var$2;
    cbgg_Pixmap$Filter_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Filter, [var$1, var$2]);
}
function cgxgbt_TeaFileHandle() {
    var a = this; cbgf_FileHandle.call(a);
    a.$preloader1 = null;
    a.$file0 = null;
    a.$type = null;
}
function cgxgbt_TeaFileHandle__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbt_TeaFileHandle();
    cgxgbt_TeaFileHandle__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbt_TeaFileHandle__init_0($this, $preloader, $fileName, $type) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cbg_Files$FileType_$callClinit();
    if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath && $type !== cbg_Files$FileType_Local) {
        $preloader = new cbgu_GdxRuntimeException;
        $fileName = new jl_StringBuilder;
        $fileName.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($fileName, $fileName.$length, $rt_s(556));
        jl_AbstractStringBuilder_insert($fileName, $fileName.$length, $type === null ? $rt_s(1) : $type.$name0);
        jl_AbstractStringBuilder_insert($fileName, $fileName.$length, $rt_s(557));
        $type = new jl_String;
        var$4 = $fileName.$buffer;
        var$5 = $fileName.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$7 = var$6.data;
        $type.$characters = var$6;
        var$8 = 0;
        while (var$8 < var$5) {
            var$7[var$8] = var$4.data[var$8 + 0 | 0];
            var$8 = var$8 + 1 | 0;
        }
        $preloader.$suppressionEnabled = 1;
        $preloader.$writableStackTrace = 1;
        $preloader.$message = $type;
        $rt_throw($preloader);
    }
    $this.$preloader1 = $preloader;
    $preloader = jl_String_replace($fileName, $rt_s(558), $rt_s(110));
    if (jl_String_endsWith($preloader, $rt_s(110))) {
        var$6 = $preloader.$characters.data;
        var$9 = var$6.length;
        var$10 = var$9 - 1 | 0;
        var$8 = $rt_compare(0, var$10);
        if (var$8 > 0) {
            $preloader = new jl_IndexOutOfBoundsException;
            $preloader.$suppressionEnabled = 1;
            $preloader.$writableStackTrace = 1;
            $rt_throw($preloader);
        }
        if (!var$8)
            $preloader = jl_String_EMPTY;
        else if (var$10 != var$9) {
            $preloader = new jl_String;
            var$10 = var$10 - 0 | 0;
            var$4 = $rt_createCharArray(var$10);
            var$7 = var$4.data;
            $preloader.$characters = var$4;
            var$8 = 0;
            while (var$8 < var$10) {
                var$7[var$8] = var$6[var$8 + 0 | 0];
                var$8 = var$8 + 1 | 0;
            }
        }
    }
    $this.$file0 = $preloader;
    $this.$type = $type;
}
function cgxgbt_TeaFileHandle_path($this) {
    return $this.$file0;
}
function cgxgbt_TeaFileHandle_nameWithoutExtension($this) {
    var $name, var$2, var$3, $dotIndex, var$5, var$6, var$7;
    $name = $this.$file0;
    var$2 = jl_String_lastIndexOf($name, 47, $name.$characters.data.length - 1 | 0);
    if (var$2 < 0)
        $name = $this.$file0;
    else {
        $name = $this.$file0;
        var$2 = var$2 + 1 | 0;
        var$3 = $name.$characters.data;
        $dotIndex = var$3.length;
        var$5 = $rt_compare(var$2, $dotIndex);
        if (var$5 > 0) {
            $name = new jl_IndexOutOfBoundsException;
            $name.$suppressionEnabled = 1;
            $name.$writableStackTrace = 1;
            $rt_throw($name);
        }
        if (!var$5)
            $name = jl_String_EMPTY;
        else if (!(!var$2 && $dotIndex == $dotIndex)) {
            $name = new jl_String;
            var$5 = $dotIndex - var$2 | 0;
            var$6 = $rt_createCharArray(var$5);
            var$7 = var$6.data;
            $name.$characters = var$6;
            $dotIndex = 0;
            while ($dotIndex < var$5) {
                var$7[$dotIndex] = var$3[$dotIndex + var$2 | 0];
                $dotIndex = $dotIndex + 1 | 0;
            }
        }
    }
    $dotIndex = jl_String_lastIndexOf($name, 46, $name.$characters.data.length - 1 | 0);
    if ($dotIndex == (-1))
        return $name;
    var$5 = $rt_compare(0, $dotIndex);
    if (var$5 > 0) {
        $name = new jl_IndexOutOfBoundsException;
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $rt_throw($name);
    }
    if (!var$5)
        $name = jl_String_EMPTY;
    else {
        var$6 = $name.$characters.data;
        if ($dotIndex != var$6.length) {
            $name = new jl_String;
            var$5 = $dotIndex - 0 | 0;
            var$7 = $rt_createCharArray(var$5);
            var$3 = var$7.data;
            $name.$characters = var$7;
            $dotIndex = 0;
            while ($dotIndex < var$5) {
                var$3[$dotIndex] = var$6[$dotIndex + 0 | 0];
                $dotIndex = $dotIndex + 1 | 0;
            }
        }
    }
    return $name;
}
function cgxgbt_TeaFileHandle_read($this) {
    var var$1, $in, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$type;
    cbg_Files$FileType_$callClinit();
    if (var$1 === cbg_Files$FileType_Local) {
        if (cgxgbtf_FileDB_INSTANCE === null) {
            $in = new cgxgbtf_FileDBManager;
            var$1 = new cgxgbtf_FileDBStorage;
            var$3 = new cgxgbtf_StoreLocal;
            var$4 = cbg_Gdx_app.$config.$storagePrefix;
            var$3.$storage = $rt_globals.window.localStorage;
            var$3.$prefix = var$4;
            cgxgbtf_FileDBStorage_$callClinit();
            var$1.$store = var$3;
            $in.$localStorage = var$1;
            var$1 = new cgxgbtf_FileDBStorage;
            var$3 = new cgxgbtf_StoreMemory;
            var$4 = new cbgu_Array;
            var$4.$ordered = 1;
            var$4.$items = $rt_createArray(jl_Object, 16);
            var$3.$keys = var$4;
            var$3.$map = cbgu_ObjectMap__init_(16, 0.800000011920929);
            var$1.$store = var$3;
            $in.$memory = var$1;
            cgxgbtf_FileDB_INSTANCE = $in;
        }
        var$1 = cgxgbtf_FileDB_INSTANCE;
        return !cgxgbtf_FileDBStorage_exists(var$1.$memory, $this) ? cgxgbtf_FileDBStorage_read(var$1.$localStorage, $this) : cgxgbtf_FileDBStorage_read(var$1.$memory, $this);
    }
    $in = cgxgbtp_Preloader_read($this.$preloader1, $this.$file0);
    if ($in !== null)
        return $in;
    $in = new cbgu_GdxRuntimeException;
    var$1 = $this.$file0;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$5 = var$3.$length;
    if (var$1 === null)
        var$1 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$3, var$5, var$1);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(559));
    var$1 = new jl_String;
    var$6 = var$3.$buffer;
    var$7 = var$3.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$1.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    $in.$suppressionEnabled = 1;
    $in.$writableStackTrace = 1;
    $in.$message = var$1;
    $rt_throw($in);
}
function cgxgbt_TeaFileHandle_child($this, $name) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    var$2 = new cgxgbt_TeaFileHandle;
    var$3 = $this.$preloader1;
    var$4 = $this.$file0;
    if (var$4.$characters.data.length ? 0 : 1)
        var$5 = $rt_s(42);
    else {
        var$5 = !jl_String_endsWith(var$4, $rt_s(110)) ? $rt_s(110) : $rt_s(42);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$4);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$5);
        var$5 = new jl_String;
        var$7 = var$6.$buffer;
        var$8 = var$6.$length;
        var$9 = $rt_createCharArray(var$8);
        var$10 = var$9.data;
        var$5.$characters = var$9;
        var$11 = 0;
        while (var$11 < var$8) {
            var$10[var$11] = var$7.data[var$11 + 0 | 0];
            var$11 = var$11 + 1 | 0;
        }
    }
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
    var$12 = var$4.$length;
    if ($name === null)
        $name = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$12, $name);
    $name = new jl_String;
    var$7 = var$4.$buffer;
    var$13 = var$4.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$13);
    var$10 = var$9.data;
    $name.$characters = var$9;
    var$8 = 0;
    while (var$8 < var$13) {
        var$10[var$8] = var$7.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    cgxgbt_TeaFileHandle__init_0(var$2, var$3, $name, $this.$type);
    return var$2;
}
function cgxgbt_TeaFileHandle_parent($this) {
    var var$1, $index, $dir, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$file0;
    $index = jl_String_lastIndexOf0(var$1, $rt_s(110), var$1.$characters.data.length);
    $dir = $rt_s(42);
    if ($index > 0) {
        $dir = $this.$file0;
        var$4 = $rt_compare(0, $index);
        if (var$4 > 0) {
            $dir = new jl_IndexOutOfBoundsException;
            $dir.$suppressionEnabled = 1;
            $dir.$writableStackTrace = 1;
            $rt_throw($dir);
        }
        if (!var$4)
            $dir = jl_String_EMPTY;
        else {
            var$5 = $dir.$characters.data;
            if ($index != var$5.length) {
                $dir = new jl_String;
                var$4 = $index - 0 | 0;
                var$6 = $rt_createCharArray(var$4);
                var$7 = var$6.data;
                $dir.$characters = var$6;
                var$8 = 0;
                while (var$8 < var$4) {
                    var$7[var$8] = var$5[var$8 + 0 | 0];
                    var$8 = var$8 + 1 | 0;
                }
            }
        }
    }
    return cgxgbt_TeaFileHandle__init_($this.$preloader1, $dir, $this.$type);
}
function cgxgbt_TeaFileHandle_toString($this) {
    return $this.$file0;
}
function cbggg_Gdx2DPixmapEmu() {
    var a = this; jl_Object.call(a);
    a.$basePtr = 0;
    a.$width5 = 0;
    a.$height3 = 0;
    a.$format0 = 0;
    a.$nativeData = null;
    a.$pixelPtr = null;
}
function cbggg_Gdx2DPixmapEmu__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_Gdx2DPixmapEmu();
    cbggg_Gdx2DPixmapEmu__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_Gdx2DPixmapEmu__init_1(var_0, var_1, var_2) {
    var var_3 = new cbggg_Gdx2DPixmapEmu();
    cbggg_Gdx2DPixmapEmu__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_Gdx2DPixmapEmu__init_0($this, $encodedData, $offset, $len, $requestedFormat) {
    var var$5, var$6, var$7, var$8, var$9, var$10;
    var$5 = $rt_createIntArray(4);
    $this.$nativeData = var$5;
    var$6 = var$5.data;
    if ($encodedData === null)
        var$7 = null;
    else {
        $encodedData = $encodedData.data;
        var$8 = $encodedData.length;
        var$7 = new $rt_globals.Array(var$8);
        var$9 = 0;
        while (var$9 < var$8) {
            var$10 = $encodedData[var$9];
            var$7[var$9] = var$10;
            var$9 = var$9 + 1 | 0;
        }
    }
    $this.$pixelPtr = cbggg_Gdx2DPixmapEmu_load$js_body$_33(var$6, var$7, $offset, $len);
    $encodedData = $this.$nativeData.data;
    $this.$basePtr = $encodedData[0];
    $this.$width5 = $encodedData[1];
    $this.$height3 = $encodedData[2];
    $offset = $encodedData[3];
    $this.$format0 = $offset;
    if ($requestedFormat && $requestedFormat != $offset)
        cbggg_Gdx2DPixmapEmu_convert($this, $requestedFormat);
}
function cbggg_Gdx2DPixmapEmu__init_2($this, $width, $height, $format) {
    var var$4;
    var$4 = $rt_createIntArray(4);
    $this.$nativeData = var$4;
    $this.$pixelPtr = cbggg_Gdx2DPixmapEmu_newPixmap$js_body$_35(var$4.data, $width, $height, $format);
    var$4 = $this.$nativeData.data;
    $this.$basePtr = var$4[0];
    $this.$width5 = var$4[1];
    $this.$height3 = var$4[2];
    $this.$format0 = var$4[3];
}
function cbggg_Gdx2DPixmapEmu_convert($this, $requestedFormat) {
    var $pixmap, var$3, var$4, var$5, var$6;
    $pixmap = cbggg_Gdx2DPixmapEmu__init_1($this.$width5, $this.$height3, $requestedFormat);
    cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47($pixmap.$basePtr, 0);
    var$3 = $this.$width5;
    var$4 = $this.$height3;
    var$5 = $this.$basePtr;
    var$6 = $pixmap.$basePtr;
    cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$5, var$6, 0, 0, var$3, var$4, 0, 0, var$3, var$4);
    cbggg_Gdx2DPixmapEmu_free$js_body$_36($this.$basePtr);
    $this.$basePtr = $pixmap.$basePtr;
    $this.$format0 = $pixmap.$format0;
    $this.$height3 = $pixmap.$height3;
    $this.$nativeData = $pixmap.$nativeData;
    $this.$pixelPtr = $pixmap.$pixelPtr;
    $this.$width5 = $pixmap.$width5;
}
function cbggg_Gdx2DPixmapEmu_load$js_body$_33(var$1, var$2, var$3, var$4) {
    var cBufferSize = var$2.length * $rt_globals.Uint8Array.BYTES_PER_ELEMENT;
    var cBuffer = $rt_globals.Gdx._malloc(cBufferSize);
    $rt_globals.Gdx.writeArrayToMemory(var$2, cBuffer);
    var pixmap = $rt_globals.Gdx.Gdx.prototype.g2d_load(cBuffer, var$3, var$4);
    $rt_globals.Gdx._free(cBuffer);
    var pixels = $rt_globals.Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = $rt_globals.Gdx.getPointer(pixmap);
    var format = pixmap.get_format();
    var width = pixmap.get_width();
    var height = pixmap.get_height();
    var$1[0] = pixmapAddr;
    var$1[1] = width;
    var$1[2] = height;
    var$1[3] = format;
    var bytesPerPixel = $rt_globals.Gdx.Gdx.prototype.g2d_bytes_per_pixel(format);
    var bytesSize = width * height * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var newArray = $rt_globals.Gdx.HEAPU8.slice(startIndex, endIndex);
    return newArray;
}
function cbggg_Gdx2DPixmapEmu_newPixmap$js_body$_35(var$1, var$2, var$3, var$4) {
    var pixmap = $rt_globals.Gdx.Gdx.prototype.g2d_new(var$2, var$3, var$4);
    var pixels = $rt_globals.Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = $rt_globals.Gdx.getPointer(pixmap);
    var var$4 = pixmap.get_format();
    var var$2 = pixmap.get_width();
    var var$3 = pixmap.get_height();
    var$1[0] = pixmapAddr;
    var$1[1] = var$2;
    var$1[2] = var$3;
    var$1[3] = var$4;
    var bytesPerPixel = $rt_globals.Gdx.Gdx.prototype.g2d_bytes_per_pixel(var$4);
    var bytesSize = var$2 * var$3 * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var newArray = $rt_globals.Gdx.HEAPU8.slice(startIndex, endIndex);
    return newArray;
}
function cbggg_Gdx2DPixmapEmu_free$js_body$_36(var$1) {
    var nativeObject = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
    $rt_globals.Gdx.Gdx.prototype.g2d_free(nativeObject);
}
function cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
    var nativeObjectSrc = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
    var nativeObjectDst = $rt_globals.Gdx.wrapPointer(var$2, $rt_globals.Gdx.gdx2d_pixmap);
    $rt_globals.Gdx.Gdx.prototype.g2d_draw_pixmap(nativeObjectSrc, nativeObjectDst, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10);
}
function cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47(var$1, var$2) {
    var nativeObject = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
    $rt_globals.Gdx.Gdx.prototype.g2d_set_blend(nativeObject, var$2);
}
var jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer);
function jn_ShortBufferImpl_get($this, $index) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement1($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(543));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(516));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
    var$3 = var$4.$length;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$5 = var$4.$buffer.data;
    var$5[var$3] = 41;
    var$6 = new jl_String;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$6.$characters = var$8;
    var$3 = 0;
    while (var$3 < var$7) {
        var$9[var$3] = var$5[var$3 + 0 | 0];
        var$3 = var$3 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$6;
    $rt_throw(var$2);
}
function jn_ShortBufferImpl_isReadOnly($this) {
    return $this.$readOnly4();
}
function jn_ShortBufferOverArray() {
    var a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly7 = 0;
    a.$start10 = 0;
    a.$array6 = null;
}
function jn_ShortBufferOverArray_getElement($this, $index) {
    return $this.$array6.data[$index + $this.$start10 | 0];
}
function jn_ShortBufferOverArray_putElement($this, $index, $value) {
    $this.$array6.data[$index + $this.$start10 | 0] = $value;
}
function jn_ShortBufferOverArray_readOnly($this) {
    return $this.$readOnly7;
}
var otjc_JSNumber = $rt_classWithoutFields();
function cbgg_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
var cbgg_Texture$TextureFilter_Nearest = null;
var cbgg_Texture$TextureFilter_Linear = null;
var cbgg_Texture$TextureFilter_MipMap = null;
var cbgg_Texture$TextureFilter_MipMapNearestNearest = null;
var cbgg_Texture$TextureFilter_MipMapLinearNearest = null;
var cbgg_Texture$TextureFilter_MipMapNearestLinear = null;
var cbgg_Texture$TextureFilter_MipMapLinearLinear = null;
var cbgg_Texture$TextureFilter_$VALUES = null;
function cbgg_Texture$TextureFilter_$callClinit() {
    cbgg_Texture$TextureFilter_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureFilter);
    cbgg_Texture$TextureFilter__clinit_();
}
function cbgg_Texture$TextureFilter__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = new cbgg_Texture$TextureFilter;
    cbgg_Texture$TextureFilter_$callClinit();
    var$1.$name0 = $rt_s(560);
    var$1.$ordinal = 0;
    var$1.$glEnum0 = 9728;
    cbgg_Texture$TextureFilter_Nearest = var$1;
    var$2 = new cbgg_Texture$TextureFilter;
    var$2.$name0 = $rt_s(561);
    var$2.$ordinal = 1;
    var$2.$glEnum0 = 9729;
    cbgg_Texture$TextureFilter_Linear = var$2;
    var$3 = new cbgg_Texture$TextureFilter;
    var$3.$name0 = $rt_s(562);
    var$3.$ordinal = 2;
    var$3.$glEnum0 = 9987;
    cbgg_Texture$TextureFilter_MipMap = var$3;
    var$4 = new cbgg_Texture$TextureFilter;
    var$4.$name0 = $rt_s(563);
    var$4.$ordinal = 3;
    var$4.$glEnum0 = 9984;
    cbgg_Texture$TextureFilter_MipMapNearestNearest = var$4;
    var$5 = new cbgg_Texture$TextureFilter;
    var$5.$name0 = $rt_s(564);
    var$5.$ordinal = 4;
    var$5.$glEnum0 = 9985;
    cbgg_Texture$TextureFilter_MipMapLinearNearest = var$5;
    var$6 = new cbgg_Texture$TextureFilter;
    var$6.$name0 = $rt_s(565);
    var$6.$ordinal = 5;
    var$6.$glEnum0 = 9986;
    cbgg_Texture$TextureFilter_MipMapNearestLinear = var$6;
    var$7 = new cbgg_Texture$TextureFilter;
    var$7.$name0 = $rt_s(566);
    var$7.$ordinal = 6;
    var$7.$glEnum0 = 9987;
    cbgg_Texture$TextureFilter_MipMapLinearLinear = var$7;
    cbgg_Texture$TextureFilter_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureFilter, [var$1, var$2, var$3, var$4, var$5, var$6, var$7]);
}
function cbgg_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
var cbgg_Texture$TextureWrap_MirroredRepeat = null;
var cbgg_Texture$TextureWrap_ClampToEdge = null;
var cbgg_Texture$TextureWrap_Repeat = null;
var cbgg_Texture$TextureWrap_$VALUES = null;
function cbgg_Texture$TextureWrap_$callClinit() {
    cbgg_Texture$TextureWrap_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureWrap);
    cbgg_Texture$TextureWrap__clinit_();
}
function cbgg_Texture$TextureWrap__clinit_() {
    var var$1, var$2, var$3;
    var$1 = new cbgg_Texture$TextureWrap;
    cbgg_Texture$TextureWrap_$callClinit();
    var$1.$name0 = $rt_s(567);
    var$1.$ordinal = 0;
    var$1.$glEnum = 33648;
    cbgg_Texture$TextureWrap_MirroredRepeat = var$1;
    var$2 = new cbgg_Texture$TextureWrap;
    var$2.$name0 = $rt_s(568);
    var$2.$ordinal = 1;
    var$2.$glEnum = 33071;
    cbgg_Texture$TextureWrap_ClampToEdge = var$2;
    var$3 = new cbgg_Texture$TextureWrap;
    var$3.$name0 = $rt_s(569);
    var$3.$ordinal = 2;
    var$3.$glEnum = 10497;
    cbgg_Texture$TextureWrap_Repeat = var$3;
    cbgg_Texture$TextureWrap_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureWrap, [var$1, var$2, var$3]);
}
var otjc_JSArray = $rt_classWithoutFields();
function otjc_JSArray_get$exported$0(var$0, var$1) {
    return var$0.$get6(var$1);
}
function otjc_JSArray_getLength$exported$1(var$0) {
    return var$0.$getLength0();
}
function jn_FloatBufferOverByteBuffer() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$byteByffer1 = null;
    a.$readOnly3 = 0;
    a.$start7 = 0;
}
function jn_FloatBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly3;
}
var jn_FloatBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
function jn_FloatBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2;
    var$2 = $this.$byteByffer1.$array.data;
    $index = $this.$start7 + ($index * 4 | 0) | 0;
    return $rt_intBitsToFloat((var$2[$index] & 255) << 24 | (var$2[$index + 1 | 0] & 255) << 16 | (var$2[$index + 2 | 0] & 255) << 8 | var$2[$index + 3 | 0] & 255);
}
function jn_FloatBufferOverByteBufferLittleEndian_putElement($this, $index, $f) {
    var $value, var$4;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer1.$array.data;
    $index = $this.$start7 + ($index * 4 | 0) | 0;
    var$4[$index] = $value >> 24 << 24 >> 24;
    var$4[$index + 1 | 0] = $value >> 16 << 24 >> 24;
    var$4[$index + 2 | 0] = $value >> 8 << 24 >> 24;
    var$4[$index + 3 | 0] = $value << 24 >> 24;
}
var jn_FloatBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
function jn_FloatBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2;
    var$2 = $this.$byteByffer1.$array.data;
    $index = $this.$start7 + ($index * 4 | 0) | 0;
    return $rt_intBitsToFloat(var$2[$index] & 255 | (var$2[$index + 1 | 0] & 255) << 8 | (var$2[$index + 2 | 0] & 255) << 16 | (var$2[$index + 3 | 0] & 255) << 24);
}
function jn_FloatBufferOverByteBufferBigEndian_putElement($this, $index, $f) {
    var $value, var$4;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer1.$array.data;
    $index = $this.$start7 + ($index * 4 | 0) | 0;
    var$4[$index] = $value << 24 >> 24;
    var$4[$index + 1 | 0] = $value >> 8 << 24 >> 24;
    var$4[$index + 2 | 0] = $value >> 16 << 24 >> 24;
    var$4[$index + 3 | 0] = $value >> 24 << 24 >> 24;
}
function jn_ShortBufferOverByteBuffer() {
    var a = this; jn_ShortBufferImpl.call(a);
    a.$byteByffer = null;
    a.$readOnly1 = 0;
    a.$start5 = 0;
}
function jn_ShortBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly1;
}
var jn_ShortBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
function jn_ShortBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2;
    var$2 = $this.$byteByffer.$array.data;
    $index = $this.$start5 + ($index * 2 | 0) | 0;
    return (var$2[$index] & 255 | (var$2[$index + 1 | 0] & 255) << 8) << 16 >> 16;
}
function jn_ShortBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3;
    var$3 = $this.$byteByffer.$array.data;
    $index = $this.$start5 + ($index * 2 | 0) | 0;
    var$3[$index] = $value << 24 >> 24;
    var$3[$index + 1 | 0] = $value >> 8 << 24 >> 24;
}
var jn_ShortBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
function jn_ShortBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2;
    var$2 = $this.$byteByffer.$array.data;
    $index = $this.$start5 + ($index * 2 | 0) | 0;
    return ((var$2[$index] & 255) << 8 | var$2[$index + 1 | 0] & 255) << 16 >> 16;
}
function jn_ShortBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3;
    var$3 = $this.$byteByffer.$array.data;
    $index = $this.$start5 + ($index * 2 | 0) | 0;
    var$3[$index] = $value >> 8 << 24 >> 24;
    var$3[$index + 1 | 0] = $value << 24 >> 24;
}
var jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException);
var jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException);
function jn_IntBufferOverByteBuffer() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$byteByffer0 = null;
    a.$readOnly2 = 0;
    a.$start6 = 0;
}
function jn_IntBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly2;
}
var jn_IntBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
function jn_IntBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2;
    var$2 = $this.$byteByffer0.$array.data;
    $index = $this.$start6 + ($index * 4 | 0) | 0;
    return var$2[$index] & 255 | (var$2[$index + 1 | 0] & 255) << 8 | (var$2[$index + 2 | 0] & 255) << 16 | (var$2[$index + 3 | 0] & 255) << 24;
}
function jn_IntBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3;
    var$3 = $this.$byteByffer0.$array.data;
    $index = $this.$start6 + ($index * 4 | 0) | 0;
    var$3[$index] = $value << 24 >> 24;
    var$3[$index + 1 | 0] = $value >> 8 << 24 >> 24;
    var$3[$index + 2 | 0] = $value >> 16 << 24 >> 24;
    var$3[$index + 3 | 0] = $value >> 24 << 24 >> 24;
}
var jn_IntBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
function jn_IntBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2;
    var$2 = $this.$byteByffer0.$array.data;
    $index = $this.$start6 + ($index * 4 | 0) | 0;
    return (var$2[$index] & 255) << 24 | (var$2[$index + 1 | 0] & 255) << 16 | (var$2[$index + 2 | 0] & 255) << 8 | var$2[$index + 3 | 0] & 255;
}
function jn_IntBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3;
    var$3 = $this.$byteByffer0.$array.data;
    $index = $this.$start6 + ($index * 4 | 0) | 0;
    var$3[$index] = $value >> 24 << 24 >> 24;
    var$3[$index + 1 | 0] = $value >> 16 << 24 >> 24;
    var$3[$index + 2 | 0] = $value >> 8 << 24 >> 24;
    var$3[$index + 3 | 0] = $value << 24 >> 24;
}
var jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
var cbg_Files$FileType = $rt_classWithoutFields(jl_Enum);
var cbg_Files$FileType_Classpath = null;
var cbg_Files$FileType_Internal = null;
var cbg_Files$FileType_External = null;
var cbg_Files$FileType_Absolute = null;
var cbg_Files$FileType_Local = null;
var cbg_Files$FileType_$VALUES = null;
function cbg_Files$FileType_$callClinit() {
    cbg_Files$FileType_$callClinit = $rt_eraseClinit(cbg_Files$FileType);
    cbg_Files$FileType__clinit_();
}
function cbg_Files$FileType__clinit_() {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new cbg_Files$FileType;
    cbg_Files$FileType_$callClinit();
    var$1.$name0 = $rt_s(570);
    var$1.$ordinal = 0;
    cbg_Files$FileType_Classpath = var$1;
    var$2 = new cbg_Files$FileType;
    var$2.$name0 = $rt_s(571);
    var$2.$ordinal = 1;
    cbg_Files$FileType_Internal = var$2;
    var$3 = new cbg_Files$FileType;
    var$3.$name0 = $rt_s(572);
    var$3.$ordinal = 2;
    cbg_Files$FileType_External = var$3;
    var$4 = new cbg_Files$FileType;
    var$4.$name0 = $rt_s(573);
    var$4.$ordinal = 3;
    cbg_Files$FileType_Absolute = var$4;
    var$5 = new cbg_Files$FileType;
    var$5.$name0 = $rt_s(574);
    var$5.$ordinal = 4;
    cbg_Files$FileType_Local = var$5;
    cbg_Files$FileType_$VALUES = $rt_createArrayFromData(cbg_Files$FileType, [var$1, var$2, var$3, var$4, var$5]);
}
function cgxgbts_TeaSoundManager() {
    jl_Object.call(this);
    this.$soundManagerJS = null;
}
function cgxgbts_TeaSoundManager_createSM$js_body$_0() {
    var soundManager = new $rt_globals.SoundManager();
    soundManager.debugMode = false;
    return soundManager;
}
function cgxgbts_TeaSoundManager_setupJS$js_body$_1(var$1, var$2, var$3) {
    var$1.setup({ url : var$2, onready : function() {
        var$3.onready();
    }, ontimeout : function(status) {
        var$3.ontimeout();
    } });
}
var cgxgbts_SoundManagerCallback = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication$4$1() {
    var a = this; jl_Object.call(a);
    a.$val$soundManager = null;
    a.$this$1 = null;
}
function cgxgbt_TeaApplication$4$1_onready$exported$0(var$0) {
    var var$1, var$2;
    var$1 = var$0.$this$1.$this$01;
    var$2 = new cgxgbt_TeaAudio;
    var$2.$soundManager = var$0.$val$soundManager;
    var$1.$audio = var$2;
    cbg_Gdx_audio = var$2;
}
function cgxgbt_TeaApplication$4$1_ontimeout$exported$1(var$0) {}
function jnci_BufferedEncoder() {
    var a = this; jnc_CharsetEncoder.call(a);
    a.$inArray = null;
    a.$outArray = null;
}
function jnci_BufferedEncoder_encodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $outSize, var$8, $i, var$10, $outPos, $outSize_0, $result, $controller;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize) {
                $outSize = $in.$position;
                var$8 = $in.$limit;
                if ($outSize >= var$8 ? 0 : 1) {
                    $i = $inPos;
                    while ($i < $inSize) {
                        var$10 = $inArray.data;
                        var$10[$i - $inPos | 0] = var$10[$i];
                        $i = $i + 1 | 0;
                    }
                    var$10 = $inArray.data;
                    $i = $inSize - $inPos | 0;
                    $outPos = (var$8 - $outSize | 0) + $i | 0;
                    $inSize = var$10.length;
                    if ($outPos < $inSize)
                        $inSize = $outPos;
                    jn_CharBuffer_get($in, $inArray, $i, $inSize - $i | 0);
                    $inPos = 0;
                }
            }
            $i = $out.$position;
            $outSize_0 = $out.$limit;
            if (!($i >= $outSize_0 ? 0 : 1)) {
                $i = $in.$position >= $in.$limit ? 0 : 1;
                $result = !$i && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$10 = $outArray.data;
            $outSize = $outSize_0 - $i | 0;
            $outSize_0 = var$10.length;
            if ($outSize < $outSize_0)
                $outSize_0 = $outSize;
            $controller = new jnci_BufferedEncoder$Controller;
            $controller.$in = $in;
            $controller.$out0 = $out;
            $result = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, 0, $outSize_0, $controller);
            $inPos = $controller.$inPosition;
            $outPos = $controller.$outPosition;
            if ($result === null) {
                $i = $in.$position >= $in.$limit ? 0 : 1;
                if (!$i && $inPos >= $inSize)
                    $result = jnc_CoderResult_UNDERFLOW;
                else if (!($out.$position >= $out.$limit ? 0 : 1) && $inPos >= $inSize)
                    $result = jnc_CoderResult_OVERFLOW;
            }
            jn_ByteBuffer_put($out, $outArray, 0, $outPos);
            if ($result !== null)
                break;
        }
    }
    jn_Buffer_position($in, $in.$position - ($inSize - $inPos | 0) | 0);
    return $result;
}
var jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $ch, $low, var$13, $codePoint, var$15;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                $low = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    var$13 = $controller.$out0;
                    if ((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $inPos = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                $low = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else {
                $codePoint = $ch & 64512;
                $low = $rt_compare($codePoint, 55296);
                $inPos = $low ? 0 : 1;
                if (!(!$inPos && !($codePoint != 56320 ? 0 : 1) ? 0 : 1)) {
                    if (($outPos + 3 | 0) > $outSize) {
                        var$9 = var$9 + (-1) | 0;
                        var$13 = $controller.$out0;
                        if ((var$13.$limit - var$13.$position | 0) < 3 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$10 = $outArray.data;
                    $inPos = $outPos + 1 | 0;
                    var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                    $outPos = $inPos + 1 | 0;
                    var$10[$inPos] = (128 | $ch >> 6 & 63) << 24 >> 24;
                    $low = $outPos + 1 | 0;
                    var$10[$outPos] = (128 | $ch & 63) << 24 >> 24;
                } else {
                    if (!($low ? 0 : 1)) {
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    if (var$9 >= $inSize) {
                        var$13 = $controller.$in;
                        if (var$13.$position >= var$13.$limit ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_UNDERFLOW;
                        break a;
                    }
                    var$15 = var$9 + 1 | 0;
                    $low = var$10[var$9];
                    if (!(($low & 64512) != 56320 ? 0 : 1)) {
                        var$9 = var$15 + (-2) | 0;
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    if (($outPos + 4 | 0) > $outSize) {
                        var$9 = var$15 + (-2) | 0;
                        var$13 = $controller.$out0;
                        if ((var$13.$limit - var$13.$position | 0) < 4 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$10 = $outArray.data;
                    $codePoint = (($ch & 1023) << 10 | $low & 1023) + 65536 | 0;
                    $low = $outPos + 1 | 0;
                    var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                    $inPos = $low + 1 | 0;
                    var$10[$low] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                    $outPos = $inPos + 1 | 0;
                    var$10[$inPos] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                    $low = $outPos + 1 | 0;
                    var$10[$outPos] = (128 | $codePoint & 63) << 24 >> 24;
                    var$9 = var$15;
                }
            }
            $inPos = var$9;
            $outPos = $low;
        }
        var$9 = $inPos;
    }
    $controller.$inPosition = var$9;
    $controller.$outPosition = $outPos;
    return $result;
}
var ji_IOException = $rt_classWithoutFields(jl_Exception);
function ji_Reader() {
    jl_Object.call(this);
    this.$lock = null;
}
function ji_BufferedReader() {
    var a = this; ji_Reader.call(a);
    a.$innerReader = null;
    a.$buffer8 = null;
    a.$index5 = 0;
    a.$count1 = 0;
    a.$eof = 0;
    a.$mark1 = 0;
}
function ji_BufferedReader__init_(var_0, var_1) {
    var var_2 = new ji_BufferedReader();
    ji_BufferedReader__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_BufferedReader__init_0($this, $innerReader, $size) {
    $this.$lock = new jl_Object;
    $this.$mark1 = (-1);
    if ($size < 0) {
        $innerReader = new jl_IllegalArgumentException;
        $innerReader.$suppressionEnabled = 1;
        $innerReader.$writableStackTrace = 1;
        $rt_throw($innerReader);
    }
    $this.$innerReader = $innerReader;
    if (64 > $size)
        $size = 64;
    $this.$buffer8 = $rt_createCharArray($size);
}
function ji_BufferedReader_close($this) {
    var var$1;
    var$1 = $this.$innerReader;
    if (var$1 !== null) {
        var$1.$stream.$close();
        $this.$innerReader = null;
        return;
    }
    var$1 = new ji_IOException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
}
function ji_BufferedReader_readLine($this) {
    var $line, var$2, $ch, var$4, var$5, var$6, var$7, var$8;
    if ($this.$innerReader === null) {
        $line = new ji_IOException;
        $line.$suppressionEnabled = 1;
        $line.$writableStackTrace = 1;
        $rt_throw($line);
    }
    if ($this.$eof && $this.$index5 >= $this.$count1)
        return null;
    $line = new jl_StringBuilder;
    $line.$buffer = $rt_createCharArray(16);
    a: {
        while (true) {
            if ($this.$index5 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0))
                break a;
            var$2 = $this.$buffer8.data;
            $ch = $this.$index5;
            var$4 = $ch + 1 | 0;
            $this.$index5 = var$4;
            $ch = var$2[$ch];
            if ($ch == 10)
                break;
            if ($ch == 13) {
                if (var$4 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0))
                    break a;
                var$2 = $this.$buffer8.data;
                var$4 = $this.$index5;
                if (var$2[var$4] != 10)
                    break a;
                $this.$index5 = var$4 + 1 | 0;
                break a;
            }
            var$4 = $line.$length;
            jl_AbstractStringBuilder_insertSpace($line, var$4, var$4 + 1 | 0);
            $line.$buffer.data[var$4] = $ch;
        }
    }
    var$5 = new jl_String;
    var$2 = $line.$buffer;
    $ch = $line.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray($ch);
    var$7 = var$6.data;
    var$5.$characters = var$6;
    var$8 = 0;
    while (var$8 < $ch) {
        var$7[var$8] = var$2.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$5;
}
function ji_BufferedReader_fillBuffer($this, $offset) {
    var var$2, $charsRead;
    if ($this.$eof)
        return 0;
    a: {
        while (true) {
            var$2 = $this.$buffer8;
            $charsRead = var$2.data.length;
            if ($offset >= $charsRead)
                break a;
            $charsRead = ji_InputStreamReader_read($this.$innerReader, var$2, $offset, $charsRead - $offset | 0);
            if ($charsRead == (-1)) {
                $this.$eof = 1;
                break a;
            }
            if (!$charsRead)
                break;
            $offset = $offset + $charsRead | 0;
        }
    }
    $this.$count1 = $offset;
    $this.$index5 = 0;
    $this.$mark1 = (-1);
    return 1;
}
function ji_InputStreamReader() {
    var a = this; ji_Reader.call(a);
    a.$stream = null;
    a.$decoder = null;
    a.$inData = null;
    a.$inBuffer = null;
    a.$outData = null;
    a.$outBuffer = null;
    a.$streamEof = 0;
    a.$eof0 = 0;
}
function ji_InputStreamReader__init_(var_0) {
    var var_1 = new ji_InputStreamReader();
    ji_InputStreamReader__init_0(var_1, var_0);
    return var_1;
}
function ji_InputStreamReader__init_1(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_2(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_0($this, $in) {
    var var$2, var$3;
    jnci_UTF8Charset_$callClinit();
    var$2 = jnci_UTF8Charset_INSTANCE;
    var$3 = new jnci_UTF8Decoder;
    jnc_CharsetDecoder__init_(var$3, var$2, 0.3333333432674408, 0.5);
    var$3.$inArray0 = $rt_createByteArray(512);
    var$3.$outArray0 = $rt_createCharArray(512);
    jnc_CodingErrorAction_$callClinit();
    var$2 = jnc_CodingErrorAction_REPLACE;
    if (var$2 !== null) {
        var$3.$malformedAction0 = var$2;
        var$3.$unmappableAction0 = var$2;
        ji_InputStreamReader__init_2($this, $in, var$3);
        return;
    }
    var$2 = new jl_IllegalArgumentException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(575);
    $rt_throw(var$2);
}
function ji_InputStreamReader__init_2($this, $in, $decoder) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    $this.$lock = new jl_Object;
    var$3 = $rt_createByteArray(8192);
    var$4 = var$3.data;
    $this.$inData = var$3;
    var$5 = var$4.length;
    var$6 = new jn_ByteBufferImpl;
    var$7 = 0 + var$5 | 0;
    var$6.$mark = (-1);
    var$6.$capacity = var$5;
    var$6.$limit = var$5;
    jn_ByteOrder_$callClinit();
    var$6.$order = jn_ByteOrder_BIG_ENDIAN;
    var$6.$start = 0;
    var$6.$array = var$3;
    var$6.$position = 0;
    var$6.$limit = var$7;
    var$6.$direct = 0;
    var$6.$readOnly = 0;
    $this.$inBuffer = var$6;
    var$3 = $rt_createCharArray(1024);
    var$4 = var$3.data;
    $this.$outData = var$3;
    var$8 = var$4.length;
    var$6 = new jn_CharBufferOverArray;
    var$9 = 0 + var$8 | 0;
    var$6.$mark = (-1);
    var$6.$capacity = var$8;
    var$6.$limit = var$8;
    var$6.$position = 0;
    var$6.$limit = var$9;
    var$6.$start0 = 0;
    var$6.$readOnly0 = 0;
    var$6.$array2 = var$3;
    $this.$outBuffer = var$6;
    $this.$stream = $in;
    $this.$decoder = $decoder;
    jn_Buffer_position(var$6, var$9);
    $in = $this.$inBuffer;
    jn_Buffer_position($in, $in.$limit);
}
function ji_InputStreamReader_read($this, $cbuf, $off, $len) {
    var var$4, $bytesRead, $sz, var$7;
    if ($this.$eof0) {
        var$4 = $this.$outBuffer;
        if (!(var$4.$position >= var$4.$limit ? 0 : 1))
            return (-1);
    }
    $bytesRead = 0;
    a: {
        while ($len > 0) {
            var$4 = $this.$outBuffer;
            $sz = var$4.$limit - var$4.$position | 0;
            if ($len < $sz)
                $sz = $len;
            jn_CharBuffer_get(var$4, $cbuf, $off + $bytesRead | 0, $sz);
            $len = $len - $sz | 0;
            $bytesRead = $bytesRead + $sz | 0;
            var$4 = $this.$outBuffer;
            var$7 = var$4.$position >= var$4.$limit ? 0 : 1;
            if (!var$7 && !ji_InputStreamReader_fillBuffer($this))
                break a;
        }
    }
    return $bytesRead;
}
function ji_InputStreamReader_fillBuffer($this) {
    var var$1, var$2, var$3;
    if ($this.$eof0)
        return 0;
    jn_CharBufferImpl_compact($this.$outBuffer);
    a: {
        while (true) {
            var$1 = $this.$inBuffer;
            var$2 = var$1.$position >= var$1.$limit ? 0 : 1;
            if (!var$2 && !ji_InputStreamReader_fillReadBuffer($this))
                break a;
            if (!((jnc_CharsetDecoder_decode($this.$decoder, $this.$inBuffer, $this.$outBuffer, $this.$streamEof)).$kind != 1 ? 0 : 1))
                continue;
            else
                break;
        }
    }
    var$1 = $this.$inBuffer;
    var$2 = var$1.$position >= var$1.$limit ? 0 : 1;
    if (!var$2 && $this.$streamEof) {
        var$1 = $this.$decoder;
        var$3 = var$1.$state;
        if (var$3 != 3 && var$3 != 2) {
            var$1 = new jl_IllegalStateException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        var$1.$state = 3;
        if (jnc_CoderResult_UNDERFLOW.$kind ? 0 : 1)
            $this.$eof0 = 1;
    }
    var$1 = $this.$outBuffer;
    var$1.$limit = var$1.$position;
    var$1.$position = 0;
    var$1.$mark = (-1);
    return 1;
}
function ji_InputStreamReader_fillReadBuffer($this) {
    var var$1, $bytesRead, var$3;
    if ($this.$streamEof)
        return 0;
    jn_ByteBufferImpl_compact($this.$inBuffer);
    a: {
        while (true) {
            var$1 = $this.$inBuffer;
            $bytesRead = var$1.$position;
            var$3 = var$1.$limit;
            if (!($bytesRead >= var$3 ? 0 : 1))
                break a;
            $bytesRead = $this.$stream.$read3(var$1.$array, $bytesRead, var$3 - $bytesRead | 0);
            if ($bytesRead == (-1)) {
                $this.$streamEof = 1;
                break a;
            }
            var$1 = $this.$inBuffer;
            jn_Buffer_position(var$1, var$1.$position + $bytesRead | 0);
            if (!$bytesRead)
                break;
        }
    }
    var$1 = $this.$inBuffer;
    var$1.$limit = var$1.$position;
    var$1.$position = 0;
    var$1.$mark = (-1);
    return 1;
}
function ju_StringTokenizer() {
    var a = this; jl_Object.call(a);
    a.$string4 = null;
    a.$delimiters = null;
    a.$returnDelimiters = 0;
    a.$position1 = 0;
}
function ju_StringTokenizer__init_(var_0, var_1) {
    var var_2 = new ju_StringTokenizer();
    ju_StringTokenizer__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_StringTokenizer__init_0($this, $string, $delimiters) {
    if ($string !== null) {
        $this.$string4 = $string;
        $this.$delimiters = $delimiters;
        $this.$returnDelimiters = 0;
        $this.$position1 = 0;
        return;
    }
    $string = new jl_NullPointerException;
    $string.$suppressionEnabled = 1;
    $string.$writableStackTrace = 1;
    $rt_throw($string);
}
function ju_StringTokenizer_hasMoreTokens($this) {
    var var$1, $length, $i, var$4, var$5;
    if ($this.$delimiters === null) {
        var$1 = new jl_NullPointerException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    a: {
        b: {
            $length = $this.$string4.$characters.data.length;
            $i = $this.$position1;
            if ($i < $length) {
                if ($this.$returnDelimiters)
                    return 1;
                while (true) {
                    if ($i >= $length)
                        break b;
                    var$1 = $this.$delimiters;
                    var$4 = $this.$string4;
                    if ($i < 0)
                        break a;
                    var$5 = var$4.$characters.data;
                    if ($i >= var$5.length)
                        break a;
                    if (jl_String_indexOf(var$1, var$5[$i], 0) == (-1))
                        return 1;
                    $i = $i + 1 | 0;
                }
            }
        }
        return 0;
    }
    var$1 = new jl_StringIndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
}
function ju_StringTokenizer_nextToken($this) {
    var var$1, $i, var$3, $length, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$delimiters;
    if (var$1 === null) {
        var$1 = new jl_NullPointerException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    $i = $this.$position1;
    var$3 = $this.$string4.$characters.data;
    $length = var$3.length;
    var$5 = $rt_compare($i, $length);
    if (var$5 < 0) {
        if ($this.$returnDelimiters) {
            if ($i >= 0 && var$5 < 0) {
                if (jl_String_indexOf(var$1, var$3[$i], 0) >= 0) {
                    var$1 = $this.$string4;
                    $i = $this.$position1;
                    $this.$position1 = $i + 1 | 0;
                    if ($i >= 0) {
                        var$3 = var$1.$characters.data;
                        if ($i < var$3.length) {
                            $i = var$3[$i];
                            var$1 = new jl_String;
                            var$3 = $rt_createCharArray(1).data;
                            var$3[0] = $i;
                            var$5 = var$3.length;
                            var$6 = $rt_createCharArray(var$5);
                            var$7 = var$6.data;
                            var$1.$characters = var$6;
                            $i = 0;
                            while ($i < var$5) {
                                var$7[$i] = var$3[$i];
                                $i = $i + 1 | 0;
                            }
                            return var$1;
                        }
                    }
                    var$1 = new jl_StringIndexOutOfBoundsException;
                    var$1.$suppressionEnabled = 1;
                    var$1.$writableStackTrace = 1;
                    $rt_throw(var$1);
                }
                $this.$position1 = $this.$position1 + 1 | 0;
                while (true) {
                    var$5 = $this.$position1;
                    if (var$5 >= $length) {
                        var$1 = $this.$string4;
                        var$7 = var$1.$characters.data;
                        var$8 = var$7.length;
                        var$5 = $rt_compare($i, var$8);
                        if (var$5 > 0) {
                            var$1 = new jl_IndexOutOfBoundsException;
                            var$1.$suppressionEnabled = 1;
                            var$1.$writableStackTrace = 1;
                            $rt_throw(var$1);
                        }
                        if (!var$5)
                            var$1 = jl_String_EMPTY;
                        else if (!(!$i && var$8 == var$8)) {
                            var$1 = new jl_String;
                            var$5 = var$8 - $i | 0;
                            var$3 = $rt_createCharArray(var$5);
                            var$6 = var$3.data;
                            var$1.$characters = var$3;
                            var$8 = 0;
                            while (var$8 < var$5) {
                                var$6[var$8] = var$7[var$8 + $i | 0];
                                var$8 = var$8 + 1 | 0;
                            }
                        }
                        return var$1;
                    }
                    var$1 = $this.$delimiters;
                    var$9 = $this.$string4;
                    if (var$5 < 0)
                        break;
                    var$3 = var$9.$characters.data;
                    if (var$5 >= var$3.length)
                        break;
                    if (jl_String_indexOf(var$1, var$3[var$5], 0) >= 0) {
                        var$1 = $this.$string4;
                        var$5 = $this.$position1;
                        var$8 = $rt_compare($i, var$5);
                        if (var$8 > 0) {
                            var$1 = new jl_IndexOutOfBoundsException;
                            var$1.$suppressionEnabled = 1;
                            var$1.$writableStackTrace = 1;
                            $rt_throw(var$1);
                        }
                        return !var$8 ? jl_String_EMPTY : !$i && var$5 == var$1.$characters.data.length ? var$1 : jl_String__init_1(var$1.$characters, $i, var$5 - $i | 0);
                    }
                    $this.$position1 = $this.$position1 + 1 | 0;
                }
                var$1 = new jl_StringIndexOutOfBoundsException;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                $rt_throw(var$1);
            }
            var$1 = new jl_StringIndexOutOfBoundsException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (true) {
            var$5 = $rt_compare($i, $length);
            if (var$5 >= 0)
                break;
            if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string4, $i), 0) < 0)
                break;
            $i = $i + 1 | 0;
        }
        $this.$position1 = $i;
        if (var$5 < 0) {
            $this.$position1 = $i + 1 | 0;
            while (true) {
                var$5 = $this.$position1;
                if (var$5 >= $length) {
                    var$1 = $this.$string4;
                    return jl_String_substring(var$1, $i, var$1.$characters.data.length);
                }
                if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string4, var$5), 0) >= 0)
                    break;
                $this.$position1 = $this.$position1 + 1 | 0;
            }
            return jl_String_substring($this.$string4, $i, $this.$position1);
        }
    }
    var$1 = new ju_NoSuchElementException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
}
var cbgu_StreamUtils = $rt_classWithoutFields();
var cbgu_StreamUtils_EMPTY_BYTES = null;
function cbgu_StreamUtils_closeQuietly($c) {
    var $$je;
    a: {
        if ($c !== null)
            try {
                ji_BufferedReader_close($c);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
    }
}
function cbgu_StreamUtils__clinit_() {
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
}
function cbggg_BitmapFontCache() {
    var a = this; jl_Object.call(a);
    a.$font = null;
    a.$integer0 = 0;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$glyphCount0 = 0;
    a.$x4 = 0.0;
    a.$y4 = 0.0;
    a.$color = null;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
var cbggg_BitmapFontCache_tempColor = null;
function cbggg_BitmapFontCache_$callClinit() {
    cbggg_BitmapFontCache_$callClinit = $rt_eraseClinit(cbggg_BitmapFontCache);
    cbggg_BitmapFontCache__clinit_();
}
function cbggg_BitmapFontCache__init_(var_0, var_1) {
    var var_2 = new cbggg_BitmapFontCache();
    cbggg_BitmapFontCache__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_BitmapFontCache__init_0($this, $font, $integer) {
    var var$3, $pageCount, var$5, var$6, $i, $n;
    cbggg_BitmapFontCache_$callClinit();
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 16);
    $this.$layouts = var$3;
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 16);
    $this.$pooledLayouts = var$3;
    var$3 = new cbgg_Color;
    cbgg_Color_$callClinit();
    var$3.$r = 1.0;
    var$3.$g = 1.0;
    var$3.$b = 1.0;
    var$3.$a = 1.0;
    cbgg_Color_clamp(var$3);
    $this.$color = var$3;
    $this.$font = $font;
    $this.$integer0 = $integer;
    $pageCount = $font.$regions.$size;
    if (!$pageCount) {
        $font = new jl_IllegalArgumentException;
        $font.$suppressionEnabled = 1;
        $font.$writableStackTrace = 1;
        $font.$message = $rt_s(576);
        $rt_throw($font);
    }
    a: {
        $this.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
        $this.$idx0 = $rt_createIntArray($pageCount);
        if ($pageCount > 1) {
            var$5 = $rt_createArray(cbgu_IntArray, $pageCount);
            var$6 = var$5.data;
            $this.$pageGlyphIndices = var$5;
            $i = 0;
            $n = var$6.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $font = new cbgu_IntArray;
                $font.$ordered0 = 1;
                $font.$items0 = $rt_createIntArray(16);
                var$6[$i] = $font;
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
}
function cbggg_BitmapFontCache_draw($this, $spriteBatch) {
    var $regions, $j, $n, var$5, $vertices, var$7, var$8, var$9;
    $regions = $this.$font.$regions;
    $j = 0;
    $n = $this.$pageVertices.data.length;
    while ($j < $n) {
        var$5 = $this.$idx0.data;
        if (var$5[$j] > 0) {
            $vertices = $this.$pageVertices.data[$j];
            if ($j >= $regions.$size) {
                var$7 = new jl_IndexOutOfBoundsException;
                $spriteBatch = new jl_StringBuilder;
                $spriteBatch.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($spriteBatch, $spriteBatch.$length, $rt_s(36));
                jl_AbstractStringBuilder_insert0($spriteBatch, $spriteBatch.$length, $j, 10);
                jl_AbstractStringBuilder_insert($spriteBatch, $spriteBatch.$length, $rt_s(37));
                var$8 = $regions.$size;
                jl_AbstractStringBuilder_insert0($spriteBatch, $spriteBatch.$length, var$8, 10);
                $regions = new jl_String;
                var$5 = $spriteBatch.$buffer;
                $j = $spriteBatch.$length;
                jl_String_$callClinit();
                $vertices = $rt_createCharArray($j);
                var$9 = $vertices.data;
                $regions.$characters = $vertices;
                $n = 0;
                while ($n < $j) {
                    var$9[$n] = var$5.data[$n + 0 | 0];
                    $n = $n + 1 | 0;
                }
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                var$7.$message = $regions;
                $rt_throw(var$7);
            }
            cbggg_SpriteBatch_draw($spriteBatch, $regions.$items.data[$j].$texture, $vertices, 0, var$5[$j]);
        }
        $j = $j + 1 | 0;
    }
}
function cbggg_BitmapFontCache_clear($this) {
    var var$1, var$2, var$3, $i, var$5, var$6, $n;
    $this.$x4 = 0.0;
    $this.$y4 = 0.0;
    cbgu_Pools_freeAll($this.$pooledLayouts, 1);
    var$1 = $this.$pooledLayouts;
    var$2 = var$1.$items;
    var$3 = 0;
    $i = var$1.$size;
    var$5 = null;
    if (var$3 > $i) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < $i) {
        var$6 = var$2.data;
        $n = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = $n;
    }
    var$1.$size = 0;
    var$1 = $this.$layouts;
    var$2 = var$1.$items;
    var$3 = 0;
    $i = var$1.$size;
    var$5 = null;
    if (var$3 > $i) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < $i) {
        var$6 = var$2.data;
        $n = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = $n;
    }
    var$1.$size = 0;
    $i = 0;
    var$2 = $this.$idx0.data;
    $n = var$2.length;
    while ($i < $n) {
        var$6 = $this.$pageGlyphIndices;
        if (var$6 !== null)
            var$6.data[$i].$size0 = 0;
        var$2[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function cbggg_BitmapFontCache_requireGlyphs($this, $layout) {
    var $tempGlyphCount, $n, $n_0, $ii, $i, var$7, $glyphs, $glyphItems, var$10, $nn, var$12;
    a: {
        if ($this.$pageVertices.data.length == 1)
            cbggg_BitmapFontCache_requirePageGlyphs($this, 0, $layout.$glyphCount);
        else {
            $tempGlyphCount = $this.$tempGlyphCount.data;
            $n = 0;
            $n_0 = $tempGlyphCount.length;
            if ($n > $n_0) {
                $layout = new jl_IllegalArgumentException;
                $layout.$suppressionEnabled = 1;
                $layout.$writableStackTrace = 1;
                $rt_throw($layout);
            }
            while ($n < $n_0) {
                $ii = $n + 1 | 0;
                $tempGlyphCount[$n] = 0;
                $n = $ii;
            }
            $i = 0;
            $layout = $layout.$runs;
            $n = $layout.$size;
            while (true) {
                $ii = $rt_compare($i, $n);
                if ($ii >= 0)
                    break;
                if ($ii >= 0) {
                    var$7 = new jl_IndexOutOfBoundsException;
                    $glyphs = new jl_StringBuilder;
                    $glyphs.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($glyphs, $glyphs.$length, $rt_s(36));
                    jl_AbstractStringBuilder_insert0($glyphs, $glyphs.$length, $i, 10);
                    jl_AbstractStringBuilder_insert($glyphs, $glyphs.$length, $rt_s(37));
                    $i = $layout.$size;
                    jl_AbstractStringBuilder_insert0($glyphs, $glyphs.$length, $i, 10);
                    $layout = new jl_String;
                    $tempGlyphCount = $glyphs.$buffer;
                    $n = $glyphs.$length;
                    jl_String_$callClinit();
                    $glyphItems = $rt_createCharArray($n);
                    var$10 = $glyphItems.data;
                    $layout.$characters = $glyphItems;
                    $ii = 0;
                    while ($ii < $n) {
                        var$10[$ii] = $tempGlyphCount.data[$ii + 0 | 0];
                        $ii = $ii + 1 | 0;
                    }
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    var$7.$message = $layout;
                    $rt_throw(var$7);
                }
                $glyphs = $layout.$items.data[$i].$glyphs;
                $glyphItems = $glyphs.$items;
                $ii = 0;
                $nn = $glyphs.$size;
                while ($ii < $nn) {
                    var$12 = $glyphItems.data[$ii].$page;
                    $tempGlyphCount[var$12] = $tempGlyphCount[var$12] + 1 | 0;
                    $ii = $ii + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            $i = 0;
            while (true) {
                if ($i >= $n_0)
                    break a;
                cbggg_BitmapFontCache_requirePageGlyphs($this, $i, $tempGlyphCount[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_BitmapFontCache_requirePageGlyphs($this, $page, $glyphCount) {
    var var$3, $newVertices, $vertexCount, $vertices;
    var$3 = $this.$pageGlyphIndices;
    if (var$3 !== null) {
        $newVertices = var$3.data;
        if ($glyphCount > $newVertices[$page].$items0.data.length)
            cbgu_IntArray_ensureCapacity($newVertices[$page], $glyphCount - $newVertices[$page].$size0 | 0);
    }
    var$3 = $this.$idx0.data;
    $vertexCount = var$3[$page] + ($glyphCount * 20 | 0) | 0;
    $newVertices = $this.$pageVertices.data;
    $vertices = $newVertices[$page];
    if ($vertices === null)
        $newVertices[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_arraycopy($vertices, 0, $newVertices, 0, var$3[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
}
function cbggg_BitmapFontCache_setPageCount($this, $pageCount) {
    var $newPageVertices, $newPageGlyphIndices, $newIdx, $i, var$6;
    $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
    $newPageGlyphIndices = $this.$pageVertices;
    jl_System_arraycopy($newPageGlyphIndices, 0, $newPageVertices, 0, $newPageGlyphIndices.data.length);
    $this.$pageVertices = $newPageVertices;
    $newIdx = $rt_createIntArray($pageCount);
    $newPageVertices = $this.$idx0;
    jl_System_arraycopy($newPageVertices, 0, $newIdx, 0, $newPageVertices.data.length);
    $this.$idx0 = $newIdx;
    $newPageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
    $i = 0;
    $newIdx = $this.$pageGlyphIndices;
    if ($newIdx !== null) {
        $i = $newIdx.data.length;
        jl_System_arraycopy($newIdx, 0, $newPageGlyphIndices, 0, $i);
    }
    $newIdx = $newPageGlyphIndices.data;
    while ($i < $pageCount) {
        var$6 = new cbgu_IntArray;
        var$6.$ordered0 = 1;
        var$6.$items0 = $rt_createIntArray(16);
        $newIdx[$i] = var$6;
        $i = $i + 1 | 0;
    }
    $this.$pageGlyphIndices = $newPageGlyphIndices;
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
}
function cbggg_BitmapFontCache_addToCache($this, $layout, $x, $y) {
    var $runCount, var$5, $colorsIndex, $colors, $nextColorGlyphIndex, $glyphIndex, $lastColorFloatBits, $i, $run, $glyphs, $xAdvances, var$15, var$16, $gx, $gy, $ii, $nn, var$21, var$22;
    $runCount = $layout.$runs.$size;
    if (!$runCount)
        return;
    var$5 = $this.$pageVertices.data.length;
    $colorsIndex = $this.$font.$regions.$size;
    if (var$5 < $colorsIndex)
        cbggg_BitmapFontCache_setPageCount($this, $colorsIndex);
    cbgu_Array_add($this.$layouts, $layout);
    cbggg_BitmapFontCache_requireGlyphs($this, $layout);
    $colors = $layout.$colors;
    $colorsIndex = 0;
    $nextColorGlyphIndex = 0;
    $glyphIndex = 0;
    $lastColorFloatBits = 0.0;
    $i = 0;
    while ($i < $runCount) {
        $run = $layout.$runs;
        if ($i >= $run.$size) {
            $colors = new jl_IndexOutOfBoundsException;
            $layout = new jl_StringBuilder;
            $layout.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0($layout, $layout.$length, $i, 10);
            jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(37));
            $runCount = $run.$size;
            jl_AbstractStringBuilder_insert0($layout, $layout.$length, $runCount, 10);
            $run = new jl_String;
            $glyphs = $layout.$buffer;
            var$5 = $layout.$length;
            jl_String_$callClinit();
            $xAdvances = $rt_createCharArray(var$5);
            var$15 = $xAdvances.data;
            $run.$characters = $xAdvances;
            $colorsIndex = 0;
            while ($colorsIndex < var$5) {
                var$15[$colorsIndex] = $glyphs.data[$colorsIndex + 0 | 0];
                $colorsIndex = $colorsIndex + 1 | 0;
            }
            $colors.$suppressionEnabled = 1;
            $colors.$writableStackTrace = 1;
            $colors.$message = $run;
            $rt_throw($colors);
        }
        $run = $run.$items.data[$i];
        var$16 = $run.$glyphs;
        $glyphs = var$16.$items;
        $xAdvances = $run.$xAdvances.$items1;
        $gx = $x + $run.$x3;
        $gy = $y + $run.$y3;
        $ii = 0;
        $nn = var$16.$size;
        while ($ii < $nn) {
            var$21 = $glyphIndex + 1 | 0;
            if ($glyphIndex == $nextColorGlyphIndex) {
                $nextColorGlyphIndex = $colorsIndex + 1 | 0;
                if ($nextColorGlyphIndex >= $colors.$size0) {
                    $run = new jl_IndexOutOfBoundsException;
                    $layout = new jl_StringBuilder;
                    $layout.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(36));
                    jl_AbstractStringBuilder_insert0($layout, $layout.$length, $nextColorGlyphIndex, 10);
                    jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(37));
                    $runCount = $colors.$size0;
                    jl_AbstractStringBuilder_insert0($layout, $layout.$length, $runCount, 10);
                    $colors = new jl_String;
                    $glyphs = $layout.$buffer;
                    var$5 = $layout.$length;
                    jl_String_$callClinit();
                    $xAdvances = $rt_createCharArray(var$5);
                    var$15 = $xAdvances.data;
                    $colors.$characters = $xAdvances;
                    $colorsIndex = 0;
                    while ($colorsIndex < var$5) {
                        var$15[$colorsIndex] = $glyphs.data[$colorsIndex + 0 | 0];
                        $colorsIndex = $colorsIndex + 1 | 0;
                    }
                    $run.$suppressionEnabled = 1;
                    $run.$writableStackTrace = 1;
                    $run.$message = $colors;
                    $rt_throw($run);
                }
                $lastColorFloatBits = $rt_intBitsToFloat($colors.$items0.data[$nextColorGlyphIndex] & (-16777217));
                $colorsIndex = $nextColorGlyphIndex + 1 | 0;
                var$5 = $rt_compare($colorsIndex, $colors.$size0);
                if (var$5 >= 0)
                    $nextColorGlyphIndex = (-1);
                else {
                    if (var$5 >= 0) {
                        $run = new jl_IndexOutOfBoundsException;
                        $layout = new jl_StringBuilder;
                        $layout.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(36));
                        jl_AbstractStringBuilder_insert0($layout, $layout.$length, $colorsIndex, 10);
                        jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(37));
                        $runCount = $colors.$size0;
                        jl_AbstractStringBuilder_insert0($layout, $layout.$length, $runCount, 10);
                        $colors = new jl_String;
                        $glyphs = $layout.$buffer;
                        var$5 = $layout.$length;
                        jl_String_$callClinit();
                        $xAdvances = $rt_createCharArray(var$5);
                        var$15 = $xAdvances.data;
                        $colors.$characters = $xAdvances;
                        $colorsIndex = 0;
                        while ($colorsIndex < var$5) {
                            var$15[$colorsIndex] = $glyphs.data[$colorsIndex + 0 | 0];
                            $colorsIndex = $colorsIndex + 1 | 0;
                        }
                        $run.$suppressionEnabled = 1;
                        $run.$writableStackTrace = 1;
                        $run.$message = $colors;
                        $rt_throw($run);
                    }
                    $nextColorGlyphIndex = $colors.$items0.data[$colorsIndex];
                }
            }
            var$15 = $xAdvances.data;
            var$22 = $glyphs.data;
            $gx = $gx + var$15[$ii];
            cbggg_BitmapFontCache_addGlyph($this, var$22[$ii], $gx, $gy, $lastColorFloatBits);
            $ii = $ii + 1 | 0;
            $glyphIndex = var$21;
        }
        $i = $i + 1 | 0;
    }
    cbgg_Color_$callClinit();
    $this.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
}
function cbggg_BitmapFontCache_addGlyph($this, $glyph, $x, $y, $color) {
    var var$5, $scaleX, $scaleY, var$8, var$9, $width, $height, $u, $u2, $v, $v2, var$16, $x2, $y2, $page, $vertices, $idx, var$22;
    var$5 = $this.$font.$data;
    $scaleX = var$5.$scaleX;
    $scaleY = var$5.$scaleY;
    var$8 = $x + $glyph.$xoffset * $scaleX;
    var$9 = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width1 * $scaleX;
    $height = $glyph.$height4 * $scaleY;
    $u = $glyph.$u0;
    $u2 = $glyph.$u20;
    $v = $glyph.$v0;
    $v2 = $glyph.$v20;
    if ($this.$integer0) {
        var$16 = $rt_compare(var$8, 0.0);
        var$8 = var$8 + (var$16 > 0 ? 1.0 : var$16 >= 0 ? var$8 : (-1.0)) * 0.5 | 0;
        var$16 = $rt_compare(var$9, 0.0);
        var$9 = var$9 + (var$16 > 0 ? 1.0 : var$16 >= 0 ? var$9 : (-1.0)) * 0.5 | 0;
        var$16 = $rt_compare($width, 0.0);
        $width = $width + (var$16 > 0 ? 1.0 : var$16 >= 0 ? $width : (-1.0)) * 0.5 | 0;
        var$16 = $rt_compare($height, 0.0);
        $height = $height + (var$16 > 0 ? 1.0 : var$16 >= 0 ? $height : (-1.0)) * 0.5 | 0;
    }
    $x2 = var$8 + $width;
    $y2 = var$9 + $height;
    $page = $glyph.$page;
    $vertices = $this.$idx0.data;
    $idx = $vertices[$page];
    $vertices[$page] = $vertices[$page] + 20 | 0;
    $vertices = $this.$pageGlyphIndices;
    if ($vertices !== null) {
        $glyph = $vertices.data[$page];
        var$16 = $this.$glyphCount0;
        $this.$glyphCount0 = var$16 + 1 | 0;
        cbgu_IntArray_add0($glyph, var$16);
    }
    $vertices = $this.$pageVertices.data[$page].data;
    var$16 = $idx + 1 | 0;
    $vertices[$idx] = var$8;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = var$9;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $color;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = $u;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $v;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = var$8;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $y2;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = $color;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $u;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = $v2;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $x2;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = $y2;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $color;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = $u2;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $v2;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = $x2;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = var$9;
    var$22 = var$16 + 1 | 0;
    $vertices[var$16] = $color;
    var$16 = var$22 + 1 | 0;
    $vertices[var$22] = $u2;
    $vertices[var$16] = $v;
}
function cbggg_BitmapFontCache__clinit_() {
    var var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_$callClinit();
    var$1.$r = 1.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbggg_BitmapFontCache_tempColor = var$1;
}
var cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Format_Alpha = null;
var cbgg_Pixmap$Format_Intensity = null;
var cbgg_Pixmap$Format_LuminanceAlpha = null;
var cbgg_Pixmap$Format_RGB565 = null;
var cbgg_Pixmap$Format_RGBA4444 = null;
var cbgg_Pixmap$Format_RGB888 = null;
var cbgg_Pixmap$Format_RGBA8888 = null;
var cbgg_Pixmap$Format_$VALUES = null;
function cbgg_Pixmap$Format_$callClinit() {
    cbgg_Pixmap$Format_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Format);
    cbgg_Pixmap$Format__clinit_();
}
function cbgg_Pixmap$Format_fromGdx2DPixmapFormat($format) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbgg_Pixmap$Format_$callClinit();
    if ($format == 1)
        return cbgg_Pixmap$Format_Alpha;
    if ($format == 2)
        return cbgg_Pixmap$Format_LuminanceAlpha;
    if ($format == 5)
        return cbgg_Pixmap$Format_RGB565;
    if ($format == 6)
        return cbgg_Pixmap$Format_RGBA4444;
    if ($format == 3)
        return cbgg_Pixmap$Format_RGB888;
    if ($format == 4)
        return cbgg_Pixmap$Format_RGBA8888;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(577));
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $format, 10);
    var$4 = new jl_String;
    var$5 = var$3.$buffer;
    var$6 = var$3.$length;
    jl_String_$callClinit();
    var$7 = $rt_createCharArray(var$6);
    var$8 = var$7.data;
    var$4.$characters = var$7;
    var$9 = 0;
    while (var$9 < var$6) {
        var$8[var$9] = var$5.data[var$9 + 0 | 0];
        var$9 = var$9 + 1 | 0;
    }
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$4;
    $rt_throw(var$2);
}
function cbgg_Pixmap$Format__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = new cbgg_Pixmap$Format;
    cbgg_Pixmap$Format_$callClinit();
    var$1.$name0 = $rt_s(222);
    var$1.$ordinal = 0;
    cbgg_Pixmap$Format_Alpha = var$1;
    var$2 = new cbgg_Pixmap$Format;
    var$2.$name0 = $rt_s(578);
    var$2.$ordinal = 1;
    cbgg_Pixmap$Format_Intensity = var$2;
    var$3 = new cbgg_Pixmap$Format;
    var$3.$name0 = $rt_s(579);
    var$3.$ordinal = 2;
    cbgg_Pixmap$Format_LuminanceAlpha = var$3;
    var$4 = new cbgg_Pixmap$Format;
    var$4.$name0 = $rt_s(580);
    var$4.$ordinal = 3;
    cbgg_Pixmap$Format_RGB565 = var$4;
    var$5 = new cbgg_Pixmap$Format;
    var$5.$name0 = $rt_s(581);
    var$5.$ordinal = 4;
    cbgg_Pixmap$Format_RGBA4444 = var$5;
    var$6 = new cbgg_Pixmap$Format;
    var$6.$name0 = $rt_s(582);
    var$6.$ordinal = 5;
    cbgg_Pixmap$Format_RGB888 = var$6;
    var$7 = new cbgg_Pixmap$Format;
    var$7.$name0 = $rt_s(583);
    var$7.$ordinal = 6;
    cbgg_Pixmap$Format_RGBA8888 = var$7;
    cbgg_Pixmap$Format_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Format, [var$1, var$2, var$3, var$4, var$5, var$6, var$7]);
}
var otcit_FloatAnalyzer = $rt_classWithoutFields();
var otcit_FloatAnalyzer_mantissa10Table = null;
var otcit_FloatAnalyzer_exp10Table = null;
function otcit_FloatAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $mantissaShift, var$10, var$11, $decMantissa, $error, $upError, $downError, $lowerPos, $upperPos;
    $bits = $rt_floatToIntBits($d);
    $result.$sign = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        $mantissa = $mantissa | 8388608;
    else {
        $mantissa = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt($mantissa), Long_fromInt(8388608)), Long_ZERO)) {
            $mantissa = $mantissa << 1;
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    var$7 = otcit_FloatAnalyzer_exp10Table;
    $decExponent = ju_Arrays_binarySearch(var$7, 0, var$7.data.length, $exponent);
    if ($decExponent < 0)
        $decExponent = ( -$decExponent | 0) - 2 | 0;
    var$7 = otcit_FloatAnalyzer_exp10Table.data;
    $mantissaShift = 9 + ($exponent - var$7[$decExponent] | 0) | 0;
    var$10 = Long_fromInt($mantissa);
    var$11 = otcit_FloatAnalyzer_mantissa10Table.data;
    $decMantissa = Long_lo(Long_shru(Long_mul(var$10, Long_fromInt(var$11[$decExponent])), 32 - $mantissaShift | 0));
    if ($decMantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        $mantissaShift = 9 + ($exponent - var$7[$decExponent] | 0) | 0;
        $decMantissa = Long_lo(Long_shru(Long_mul(var$10, Long_fromInt(var$11[$decExponent])), 32 - $mantissaShift | 0));
    }
    $exponent = (31 - $mantissaShift | 0) - $errorShift | 0;
    $error = $exponent >= 0 ? var$11[$decExponent] >>> $exponent | 0 : var$11[$decExponent] << ( -$exponent | 0);
    $upError = ($error + 1 | 0) >> 1;
    $downError = $error >> 1;
    if ($mantissa == 4194304)
        $downError = $downError >> 2;
    $lowerPos = 10;
    while ($lowerPos <= $downError) {
        $lowerPos = $lowerPos * 10 | 0;
    }
    if (($decMantissa % $lowerPos | 0) >= ($downError / 2 | 0))
        $lowerPos = $lowerPos / 10 | 0;
    $upperPos = 10;
    while ($upperPos <= $upError) {
        $upperPos = $upperPos * 10 | 0;
    }
    if (($upperPos - ($decMantissa % $upperPos | 0) | 0) > ($upError / 2 | 0))
        $upperPos = $upperPos / 10 | 0;
    $mantissa = $rt_compare($lowerPos, $upperPos);
    $mantissa = $mantissa > 0 ? $rt_imul($decMantissa / $lowerPos | 0, $lowerPos) : $mantissa < 0 ? $rt_imul($decMantissa / $upperPos | 0, $upperPos) + $upperPos | 0 : $rt_imul(($decMantissa + ($upperPos / 2 | 0) | 0) / $upperPos | 0, $upperPos);
    if ($mantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        $mantissa = $mantissa / 10 | 0;
    } else if ($mantissa < 100000000) {
        $decExponent = $decExponent + (-1) | 0;
        $mantissa = $mantissa * 10 | 0;
    }
    $result.$mantissa = $mantissa;
    $result.$exponent = $decExponent - 50 | 0;
}
function otcit_FloatAnalyzer__clinit_() {
    var $decMantissaOne, $exponent, $i, $maxMantissa, var$5, var$6, $remainder, $shift;
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArray(100);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArray(100);
    $decMantissaOne = 2000000000;
    $exponent = 127;
    $i = 0;
    $maxMantissa = $decMantissaOne;
    while ($i < 50) {
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$6 = $i + 50 | 0;
        var$5[var$6] = $rt_udiv($maxMantissa, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$6] = $exponent;
        var$6 = $rt_udiv($maxMantissa, 10);
        $remainder = $rt_umod(var$6, 10);
        while (var$6 <= $decMantissaOne && !(var$6 & (-2147483648))) {
            var$6 = var$6 << 1;
            $exponent = $exponent + 1 | 0;
            $remainder = $remainder << 1;
        }
        $maxMantissa = var$6 + ($remainder / 10 | 0) | 0;
        $i = $i + 1 | 0;
    }
    $exponent = 127;
    $i = 0;
    while ($i < 50) {
        $shift = 0;
        $remainder = $decMantissaOne;
        while ($remainder > 214748364) {
            $remainder = $remainder >> 1;
            $shift = $shift + 1 | 0;
            $exponent = $exponent + (-1) | 0;
        }
        $remainder = $remainder * 10 | 0;
        $decMantissaOne = $shift <= 0 ? $remainder : Long_lo(Long_add(Long_fromInt($remainder), Long_shr(Long_mul(Long_fromInt($decMantissaOne & ((1 << $shift) - 1 | 0)), Long_fromInt(10)), $shift)));
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        $shift = (50 - $i | 0) - 1 | 0;
        var$5[$shift] = $rt_udiv($decMantissaOne, 20);
        otcit_FloatAnalyzer_exp10Table.data[$shift] = $exponent;
        $i = $i + 1 | 0;
    }
}
var cbgg_PixmapEmu$DrawType = $rt_classWithoutFields(jl_Enum);
var cbgg_PixmapEmu$DrawType_FILL = null;
var cbgg_PixmapEmu$DrawType_STROKE = null;
var cbgg_PixmapEmu$DrawType_$VALUES = null;
function cbgg_PixmapEmu$DrawType_$callClinit() {
    cbgg_PixmapEmu$DrawType_$callClinit = $rt_eraseClinit(cbgg_PixmapEmu$DrawType);
    cbgg_PixmapEmu$DrawType__clinit_();
}
function cbgg_PixmapEmu$DrawType__clinit_() {
    var var$1, var$2;
    var$1 = new cbgg_PixmapEmu$DrawType;
    cbgg_PixmapEmu$DrawType_$callClinit();
    var$1.$name0 = $rt_s(584);
    var$1.$ordinal = 0;
    cbgg_PixmapEmu$DrawType_FILL = var$1;
    var$2 = new cbgg_PixmapEmu$DrawType;
    var$2.$name0 = $rt_s(585);
    var$2.$ordinal = 1;
    cbgg_PixmapEmu$DrawType_STROKE = var$2;
    cbgg_PixmapEmu$DrawType_$VALUES = $rt_createArrayFromData(cbgg_PixmapEmu$DrawType, [var$1, var$2]);
}
function cbgg_Composite() {
    jl_Enum.call(this);
    this.$value6 = null;
}
var cbgg_Composite_COPY = null;
var cbgg_Composite_DESTINATION_ATOP = null;
var cbgg_Composite_DESTINATION_IN = null;
var cbgg_Composite_DESTINATION_OUT = null;
var cbgg_Composite_DESTINATION_OVER = null;
var cbgg_Composite_LIGHTER = null;
var cbgg_Composite_SOURCE_ATOP = null;
var cbgg_Composite_SOURCE_IN = null;
var cbgg_Composite_SOURCE_OUT = null;
var cbgg_Composite_SOURCE_OVER = null;
var cbgg_Composite_XOR = null;
var cbgg_Composite_$VALUES = null;
function cbgg_Composite_$callClinit() {
    cbgg_Composite_$callClinit = $rt_eraseClinit(cbgg_Composite);
    cbgg_Composite__clinit_();
}
function cbgg_Composite__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = new cbgg_Composite;
    cbgg_Composite_$callClinit();
    var$1.$name0 = $rt_s(586);
    var$1.$ordinal = 0;
    var$1.$value6 = $rt_s(587);
    cbgg_Composite_COPY = var$1;
    var$2 = new cbgg_Composite;
    var$2.$name0 = $rt_s(588);
    var$2.$ordinal = 1;
    var$2.$value6 = $rt_s(589);
    cbgg_Composite_DESTINATION_ATOP = var$2;
    var$3 = new cbgg_Composite;
    var$3.$name0 = $rt_s(590);
    var$3.$ordinal = 2;
    var$3.$value6 = $rt_s(591);
    cbgg_Composite_DESTINATION_IN = var$3;
    var$4 = new cbgg_Composite;
    var$4.$name0 = $rt_s(592);
    var$4.$ordinal = 3;
    var$4.$value6 = $rt_s(593);
    cbgg_Composite_DESTINATION_OUT = var$4;
    var$5 = new cbgg_Composite;
    var$5.$name0 = $rt_s(594);
    var$5.$ordinal = 4;
    var$5.$value6 = $rt_s(595);
    cbgg_Composite_DESTINATION_OVER = var$5;
    var$6 = new cbgg_Composite;
    var$6.$name0 = $rt_s(596);
    var$6.$ordinal = 5;
    var$6.$value6 = $rt_s(597);
    cbgg_Composite_LIGHTER = var$6;
    var$7 = new cbgg_Composite;
    var$7.$name0 = $rt_s(598);
    var$7.$ordinal = 6;
    var$7.$value6 = $rt_s(599);
    cbgg_Composite_SOURCE_ATOP = var$7;
    var$8 = new cbgg_Composite;
    var$8.$name0 = $rt_s(600);
    var$8.$ordinal = 7;
    var$8.$value6 = $rt_s(601);
    cbgg_Composite_SOURCE_IN = var$8;
    var$9 = new cbgg_Composite;
    var$9.$name0 = $rt_s(602);
    var$9.$ordinal = 8;
    var$9.$value6 = $rt_s(603);
    cbgg_Composite_SOURCE_OUT = var$9;
    var$10 = new cbgg_Composite;
    var$10.$name0 = $rt_s(604);
    var$10.$ordinal = 9;
    var$10.$value6 = $rt_s(605);
    cbgg_Composite_SOURCE_OVER = var$10;
    var$11 = new cbgg_Composite;
    var$11.$name0 = $rt_s(606);
    var$11.$ordinal = 10;
    var$11.$value6 = $rt_s(607);
    cbgg_Composite_XOR = var$11;
    cbgg_Composite_$VALUES = $rt_createArrayFromData(cbgg_Composite, [var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11]);
}
var cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum);
var cbgg_TextureData$TextureDataType_Pixmap = null;
var cbgg_TextureData$TextureDataType_Custom = null;
var cbgg_TextureData$TextureDataType_$VALUES = null;
function cbgg_TextureData$TextureDataType_$callClinit() {
    cbgg_TextureData$TextureDataType_$callClinit = $rt_eraseClinit(cbgg_TextureData$TextureDataType);
    cbgg_TextureData$TextureDataType__clinit_();
}
function cbgg_TextureData$TextureDataType__clinit_() {
    var var$1, var$2;
    var$1 = new cbgg_TextureData$TextureDataType;
    cbgg_TextureData$TextureDataType_$callClinit();
    var$1.$name0 = $rt_s(608);
    var$1.$ordinal = 0;
    cbgg_TextureData$TextureDataType_Pixmap = var$1;
    var$2 = new cbgg_TextureData$TextureDataType;
    var$2.$name0 = $rt_s(609);
    var$2.$ordinal = 1;
    cbgg_TextureData$TextureDataType_Custom = var$2;
    cbgg_TextureData$TextureDataType_$VALUES = $rt_createArrayFromData(cbgg_TextureData$TextureDataType, [var$1, var$2]);
}
var cbggg_MipMapGenerator = $rt_classWithoutFields();
var cbggg_MipMapGenerator_useHWMipMap = 0;
function cbggg_MipMapGenerator_generateMipMap($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    if (!cbggg_MipMapGenerator_useHWMipMap) {
        cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
        return;
    }
    cbg_Application$ApplicationType_$callClinit();
    var$5 = cbg_Application$ApplicationType_WebGL;
    if (var$5 !== cbg_Application$ApplicationType_Android && var$5 !== var$5 && var$5 !== cbg_Application$ApplicationType_iOS)
        cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight);
    else {
        var$6 = cbg_Gdx_gl;
        var$5 = $pixmap.$nativePixmap;
        if (var$5 === null)
            var$7 = 6408;
        else
            a: {
                $textureHeight = var$5.$format0;
                switch ($textureHeight) {
                    case 1:
                        var$7 = 6406;
                        break a;
                    case 2:
                        var$7 = 6410;
                        break a;
                    case 3:
                    case 5:
                        var$7 = 6407;
                        break a;
                    case 4:
                    case 6:
                        var$7 = 6408;
                        break a;
                    default:
                }
                $pixmap = new cbgu_GdxRuntimeException;
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert5(var$6, var$6.$length, $rt_s(48));
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $textureHeight, 10);
                var$5 = new jl_String;
                var$8 = var$6.$buffer;
                $textureWidth = var$6.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray($textureWidth);
                var$10 = var$9.data;
                var$5.$characters = var$9;
                var$7 = 0;
                while (var$7 < $textureWidth) {
                    var$10[var$7] = var$8.data[var$7 + 0 | 0];
                    var$7 = var$7 + 1 | 0;
                }
                $pixmap.$suppressionEnabled = 1;
                $pixmap.$writableStackTrace = 1;
                $pixmap.$message = var$5;
                $rt_throw($pixmap);
            }
        var$11 = var$5 === null ? $pixmap.$width4 : var$5.$width5;
        var$12 = var$5 === null ? $pixmap.$height2 : var$5.$height3;
        if (var$5 === null)
            var$13 = 6408;
        else
            b: {
                var$13 = var$5.$format0;
                switch (var$13) {
                    case 1:
                        var$13 = 6406;
                        break b;
                    case 2:
                        var$13 = 6410;
                        break b;
                    case 3:
                    case 5:
                        var$13 = 6407;
                        break b;
                    case 4:
                    case 6:
                        var$13 = 6408;
                        break b;
                    default:
                }
                $pixmap = new cbgu_GdxRuntimeException;
                var$6 = new jl_StringBuilder;
                jl_Object__init_0(var$6);
                var$6.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert0(var$6, var$6.$length, $rt_s(48));
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$13, 10);
                var$5 = new jl_String;
                var$8 = var$6.$buffer;
                $textureWidth = var$6.$length;
                jl_String_$callClinit();
                var$10 = $rt_createCharArray($textureWidth);
                var$9 = var$10.data;
                var$5.$characters = var$10;
                $textureHeight = 0;
                while ($textureHeight < $textureWidth) {
                    var$9[$textureHeight] = var$8.data[$textureHeight + 0 | 0];
                    $textureHeight = $textureHeight + 1 | 0;
                }
                $pixmap.$suppressionEnabled = 1;
                $pixmap.$writableStackTrace = 1;
                $pixmap.$message = var$5;
                $rt_throw($pixmap);
            }
        if (var$5 === null)
            var$14 = 5121;
        else
            c: {
                var$14 = var$5.$format0;
                switch (var$14) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    case 5:
                        var$14 = 33635;
                        break c;
                    case 6:
                        var$14 = 32819;
                        break c;
                    default:
                        $pixmap = new cbgu_GdxRuntimeException;
                        var$6 = new jl_StringBuilder;
                        var$6.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert5(var$6, var$6.$length, $rt_s(48));
                        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$14, 10);
                        var$5 = new jl_String;
                        var$8 = var$6.$buffer;
                        $textureWidth = var$6.$length;
                        jl_String_$callClinit();
                        var$10 = $rt_createCharArray($textureWidth);
                        var$9 = var$10.data;
                        var$5.$characters = var$10;
                        $textureHeight = 0;
                        while ($textureHeight < $textureWidth) {
                            var$9[$textureHeight] = var$8.data[$textureHeight + 0 | 0];
                            $textureHeight = $textureHeight + 1 | 0;
                        }
                        $pixmap.$suppressionEnabled = 1;
                        $pixmap.$writableStackTrace = 1;
                        $pixmap.$message = var$5;
                        $rt_throw($pixmap);
                }
                var$14 = 5121;
            }
        var$6.$glTexImage2D($target, 0, var$7, var$11, var$12, 0, var$13, var$14, $pixmap.$buffer1);
        cbg_Gdx_gl20.$glGenerateMipmap($target);
    }
}
function cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
    var$5 = cbg_Gdx_graphics.$context.getExtension("GL_ARB_framebuffer_object") === null ? 0 : 1;
    a: {
        if (!var$5 && !(cbg_Gdx_graphics.$context.getExtension("GL_EXT_framebuffer_object") === null ? 0 : 1)) {
            var$6 = cbg_Gdx_gl20.constructor;
            if (var$6 === null)
                var$7 = null;
            else {
                var$7 = var$6.classObject;
                if (var$7 === null) {
                    var$7 = new jl_Class;
                    var$7.$platformClass = var$6;
                    var$8 = var$7;
                    var$6.classObject = var$8;
                }
            }
            if (var$7.$name === null)
                var$7.$name = otp_Platform_getName(var$7.$platformClass);
            if (!jl_String_equals(var$7.$name, $rt_s(610)) && cbg_Gdx_gl30 === null) {
                cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
                break a;
            }
        }
        var$6 = cbg_Gdx_gl;
        var$7 = $pixmap.$nativePixmap;
        if (var$7 === null)
            var$5 = 6408;
        else
            b: {
                $textureHeight = var$7.$format0;
                switch ($textureHeight) {
                    case 1:
                        var$5 = 6406;
                        break b;
                    case 2:
                        var$5 = 6410;
                        break b;
                    case 3:
                    case 5:
                        var$5 = 6407;
                        break b;
                    case 4:
                    case 6:
                        var$5 = 6408;
                        break b;
                    default:
                }
                $pixmap = new cbgu_GdxRuntimeException;
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert(var$6, var$6.$length, jl_String_toString($rt_s(48)));
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $textureHeight, 10);
                var$7 = new jl_String;
                var$9 = var$6.$buffer;
                $textureWidth = var$6.$length;
                var$10 = $rt_createCharArray($textureWidth);
                var$11 = var$10.data;
                var$7.$characters = var$10;
                $textureHeight = 0;
                while ($textureHeight < $textureWidth) {
                    var$11[$textureHeight] = var$9.data[$textureHeight + 0 | 0];
                    $textureHeight = $textureHeight + 1 | 0;
                }
                $pixmap.$suppressionEnabled = 1;
                $pixmap.$writableStackTrace = 1;
                $pixmap.$message = var$7;
                $rt_throw($pixmap);
            }
        var$12 = var$7 === null ? $pixmap.$width4 : var$7.$width5;
        var$13 = var$7 === null ? $pixmap.$height2 : var$7.$height3;
        if (var$7 === null)
            var$14 = 6408;
        else
            c: {
                var$14 = var$7.$format0;
                switch (var$14) {
                    case 1:
                        var$14 = 6406;
                        break c;
                    case 2:
                        var$14 = 6410;
                        break c;
                    case 3:
                    case 5:
                        var$14 = 6407;
                        break c;
                    case 4:
                    case 6:
                        var$14 = 6408;
                        break c;
                    default:
                }
                $pixmap = new cbgu_GdxRuntimeException;
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert5(var$6, var$6.$length, $rt_s(48));
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$14, 10);
                var$7 = new jl_String;
                var$9 = var$6.$buffer;
                $textureWidth = var$6.$length;
                jl_String_$callClinit();
                var$10 = $rt_createCharArray($textureWidth);
                var$11 = var$10.data;
                var$7.$characters = var$10;
                $textureHeight = 0;
                while ($textureHeight < $textureWidth) {
                    var$11[$textureHeight] = var$9.data[$textureHeight + 0 | 0];
                    $textureHeight = $textureHeight + 1 | 0;
                }
                $pixmap.$suppressionEnabled = 1;
                $pixmap.$writableStackTrace = 1;
                $pixmap.$message = var$7;
                $rt_throw($pixmap);
            }
        if (var$7 === null)
            var$15 = 5121;
        else
            d: {
                var$15 = var$7.$format0;
                switch (var$15) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    case 5:
                        var$15 = 33635;
                        break d;
                    case 6:
                        var$15 = 32819;
                        break d;
                    default:
                        $pixmap = new cbgu_GdxRuntimeException;
                        var$6 = new jl_StringBuilder;
                        var$6.$buffer = $rt_createCharArray(16);
                        jl_StringBuilder_insert(var$6, var$6.$length, jl_String_toString($rt_s(48)));
                        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$15, 10);
                        var$7 = new jl_String;
                        var$9 = var$6.$buffer;
                        $textureWidth = var$6.$length;
                        var$10 = $rt_createCharArray($textureWidth);
                        var$11 = var$10.data;
                        var$7.$characters = var$10;
                        $textureHeight = 0;
                        while ($textureHeight < $textureWidth) {
                            var$11[$textureHeight] = var$9.data[$textureHeight + 0 | 0];
                            $textureHeight = $textureHeight + 1 | 0;
                        }
                        $pixmap.$suppressionEnabled = 1;
                        $pixmap.$writableStackTrace = 1;
                        $pixmap.$message = var$7;
                        $rt_throw($pixmap);
                }
                var$15 = 5121;
            }
        var$6.$glTexImage2D($target, 0, var$5, var$12, var$13, 0, var$14, var$15, $pixmap.$buffer1);
        cbg_Gdx_gl20.$glGenerateMipmap($target);
    }
}
function cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight) {
    var $tmp_0, var$6, $level, $height, var$9, var$10, var$11, var$12, var$13, var$14, var$15, $width;
    $tmp_0 = cbg_Gdx_gl;
    var$6 = $pixmap.$nativePixmap;
    if (var$6 === null)
        $level = 6408;
    else
        a: {
            $height = var$6.$format0;
            switch ($height) {
                case 1:
                    $level = 6406;
                    break a;
                case 2:
                    $level = 6410;
                    break a;
                case 3:
                case 5:
                    $level = 6407;
                    break a;
                case 4:
                case 6:
                    $level = 6408;
                    break a;
                default:
            }
            $pixmap = new cbgu_GdxRuntimeException;
            $tmp_0 = new jl_StringBuilder;
            $tmp_0.$buffer = $rt_createCharArray(16);
            jl_StringBuilder_insert($tmp_0, $tmp_0.$length, jl_String_toString($rt_s(48)));
            jl_AbstractStringBuilder_insert0($tmp_0, $tmp_0.$length, $height, 10);
            var$6 = new jl_String;
            var$9 = $tmp_0.$buffer;
            $textureWidth = $tmp_0.$length;
            var$10 = $rt_createCharArray($textureWidth);
            var$11 = var$10.data;
            var$6.$characters = var$10;
            $textureHeight = 0;
            while ($textureHeight < $textureWidth) {
                var$11[$textureHeight] = var$9.data[$textureHeight + 0 | 0];
                $textureHeight = $textureHeight + 1 | 0;
            }
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = var$6;
            $rt_throw($pixmap);
        }
    var$12 = var$6 === null ? $pixmap.$width4 : var$6.$width5;
    var$13 = var$6 === null ? $pixmap.$height2 : var$6.$height3;
    if (var$6 === null)
        var$14 = 6408;
    else
        b: {
            var$14 = var$6.$format0;
            switch (var$14) {
                case 1:
                    var$14 = 6406;
                    break b;
                case 2:
                    var$14 = 6410;
                    break b;
                case 3:
                case 5:
                    var$14 = 6407;
                    break b;
                case 4:
                case 6:
                    var$14 = 6408;
                    break b;
                default:
            }
            $pixmap = new cbgu_GdxRuntimeException;
            $tmp_0 = new jl_StringBuilder;
            $tmp_0.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert5($tmp_0, $tmp_0.$length, $rt_s(48));
            jl_AbstractStringBuilder_insert0($tmp_0, $tmp_0.$length, var$14, 10);
            var$6 = new jl_String;
            var$9 = $tmp_0.$buffer;
            $textureWidth = $tmp_0.$length;
            jl_String_$callClinit();
            var$10 = $rt_createCharArray($textureWidth);
            var$11 = var$10.data;
            var$6.$characters = var$10;
            $textureHeight = 0;
            while ($textureHeight < $textureWidth) {
                var$11[$textureHeight] = var$9.data[$textureHeight + 0 | 0];
                $textureHeight = $textureHeight + 1 | 0;
            }
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = var$6;
            $rt_throw($pixmap);
        }
    if (var$6 === null)
        var$15 = 5121;
    else
        c: {
            var$15 = var$6.$format0;
            switch (var$15) {
                case 1:
                case 2:
                case 3:
                case 4:
                    var$15 = 5121;
                    break c;
                case 5:
                    var$15 = 33635;
                    break c;
                case 6:
                    var$15 = 32819;
                    break c;
                default:
            }
            $pixmap = new cbgu_GdxRuntimeException;
            $tmp_0 = new jl_StringBuilder;
            $tmp_0.$buffer = $rt_createCharArray(16);
            jl_StringBuilder_insert($tmp_0, $tmp_0.$length, jl_String_toString($rt_s(48)));
            jl_AbstractStringBuilder_insert0($tmp_0, $tmp_0.$length, var$15, 10);
            var$6 = new jl_String;
            var$9 = $tmp_0.$buffer;
            $textureWidth = $tmp_0.$length;
            var$10 = $rt_createCharArray($textureWidth);
            var$11 = var$10.data;
            var$6.$characters = var$10;
            $textureHeight = 0;
            while ($textureHeight < $textureWidth) {
                var$11[$textureHeight] = var$9.data[$textureHeight + 0 | 0];
                $textureHeight = $textureHeight + 1 | 0;
            }
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = var$6;
            $rt_throw($pixmap);
        }
    $tmp_0.$glTexImage2D($target, 0, $level, var$12, var$13, 0, var$14, var$15, $pixmap.$buffer1);
    if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight) {
        $pixmap = new cbgu_GdxRuntimeException;
        jl_RuntimeException__init_0($pixmap, $rt_s(611));
        $rt_throw($pixmap);
    }
    $tmp_0 = $pixmap.$nativePixmap;
    $width = ($tmp_0 === null ? $pixmap.$width4 : $tmp_0.$width5) / 2 | 0;
    $height = ($tmp_0 === null ? $pixmap.$height2 : $tmp_0.$height3) / 2 | 0;
    $level = 1;
    while ($width > 0 && $height > 0) {
        $tmp_0 = cbgg_Pixmap__init_2($width, $height, cbgg_Pixmap_getFormat($pixmap));
        cbgg_Pixmap$Blending_$callClinit();
        cbgg_Pixmap_setBlending($tmp_0, cbgg_Pixmap$Blending_None);
        cbgg_Pixmap_drawPixmap($tmp_0, $pixmap, 0, 0, cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap), 0, 0, $width, $height);
        if ($level > 1)
            cbgg_Pixmap_dispose($pixmap);
        cbg_Gdx_gl.$glTexImage2D($target, $level, cbgg_Pixmap_getGLInternalFormat($tmp_0), cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0), 0, cbgg_Pixmap_getGLFormat($tmp_0), cbgg_Pixmap_getGLType($tmp_0), cbgg_Pixmap_getPixels($tmp_0));
        $width = cbgg_Pixmap_getWidth($tmp_0) / 2 | 0;
        $height = cbgg_Pixmap_getHeight($tmp_0) / 2 | 0;
        $level = $level + 1 | 0;
        $pixmap = $tmp_0;
    }
}
function cbggg_MipMapGenerator__clinit_() {
    cbggg_MipMapGenerator_useHWMipMap = 1;
}
var cbgg_PixmapEmu$2 = $rt_classWithoutFields();
var cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType = null;
function cbgg_PixmapEmu$2_$callClinit() {
    cbgg_PixmapEmu$2_$callClinit = $rt_eraseClinit(cbgg_PixmapEmu$2);
    cbgg_PixmapEmu$2__clinit_();
}
function cbgg_PixmapEmu$2__clinit_() {
    var var$1, var$2;
    cbgg_PixmapEmu$DrawType_$callClinit();
    var$1 = $rt_createIntArray((cbgg_PixmapEmu$DrawType_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType = var$1;
    var$2[cbgg_PixmapEmu$DrawType_FILL.$ordinal] = 1;
    var$2[cbgg_PixmapEmu$DrawType_STROKE.$ordinal] = 2;
}
function jnc_CharsetDecoder() {
    var a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement1 = null;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$state = 0;
}
function jnc_CharsetDecoder__init_($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$replacement1 = $rt_s(612);
    jnc_CodingErrorAction_$callClinit();
    var$4 = jnc_CodingErrorAction_REPORT;
    $this.$malformedAction0 = var$4;
    $this.$unmappableAction0 = var$4;
    if ($averageCharsPerByte <= 0.0) {
        $cs = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(613));
        jl_AbstractStringBuilder_insert1(var$4, var$4.$length, $averageCharsPerByte);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$9 = var$8.data;
        var$5.$characters = var$8;
        var$10 = 0;
        while (var$10 < var$7) {
            var$9[var$10] = var$6.data[var$10 + 0 | 0];
            var$10 = var$10 + 1 | 0;
        }
        $cs.$suppressionEnabled = 1;
        $cs.$writableStackTrace = 1;
        $cs.$message = var$5;
        $rt_throw($cs);
    }
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        return;
    }
    $cs = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(614));
    jl_AbstractStringBuilder_insert1(var$4, var$4.$length, $maxCharsPerByte);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    var$11 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$11);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$7 = 0;
    while (var$7 < var$11) {
        var$9[var$7] = var$6.data[var$7 + 0 | 0];
        var$7 = var$7 + 1 | 0;
    }
    $cs.$suppressionEnabled = 1;
    $cs.$writableStackTrace = 1;
    $cs.$message = var$5;
    $rt_throw($cs);
}
function jnc_CharsetDecoder_decode($this, $in, $out, $endOfInput) {
    var var$4, $result, $e, var$7, var$8, $$je;
    var$4 = $this.$state;
    if (!(var$4 == 2 && !$endOfInput) && var$4 != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        while (true) {
            try {
                $result = jnci_BufferedDecoder_decodeLoop($this, $in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $in = new jnc_CoderMalfunctionError;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $in.$cause = $e;
                    $rt_throw($in);
                } else {
                    throw $$e;
                }
            }
            var$4 = $result.$kind;
            if (var$4 != 1 ? 0 : 1)
                break;
            if (var$4 ? 0 : 1) {
                if ($endOfInput) {
                    var$4 = $in.$position;
                    var$7 = $in.$limit;
                    if (var$4 >= var$7 ? 0 : 1) {
                        $e = $this.$malformedAction0;
                        jnc_CodingErrorAction_$callClinit();
                        if ($e === jnc_CodingErrorAction_REPORT) {
                            var$8 = var$7 - var$4 | 0;
                            $in = new jnc_CoderResult;
                            $in.$kind = 2;
                            $in.$length0 = var$8;
                            return $in;
                        }
                        if (($out.$limit - $out.$position | 0) <= $this.$replacement1.$characters.data.length)
                            return jnc_CoderResult_OVERFLOW;
                        jn_Buffer_position($in, var$4 + (var$7 - var$4 | 0) | 0);
                        if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE) {
                            $in = $this.$replacement1;
                            jn_CharBuffer_put0($out, $in, 0, $in.$characters.data.length);
                        }
                    }
                }
                return $result;
            }
            if (var$4 != 2 ? 0 : 1) {
                $e = $this.$malformedAction0;
                jnc_CodingErrorAction_$callClinit();
                if ($e === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($e === jnc_CodingErrorAction_REPLACE) {
                    var$8 = $out.$limit - $out.$position | 0;
                    $e = $this.$replacement1;
                    var$4 = $e.$characters.data.length;
                    if (var$8 < var$4)
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put0($out, $e, 0, var$4);
                }
                var$7 = $in.$position;
                var$4 = $result.$kind;
                var$8 = var$4 != 2 ? 0 : 1;
                if (!(!var$8 && !(var$4 != 3 ? 0 : 1) ? 0 : 1)) {
                    $in = new jl_UnsupportedOperationException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                }
                jn_Buffer_position($in, var$7 + $result.$length0 | 0);
            } else if (var$4 != 3 ? 0 : 1) {
                $e = $this.$unmappableAction0;
                jnc_CodingErrorAction_$callClinit();
                if ($e === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($e === jnc_CodingErrorAction_REPLACE) {
                    var$8 = $out.$limit - $out.$position | 0;
                    $e = $this.$replacement1;
                    var$4 = $e.$characters.data.length;
                    if (var$8 < var$4)
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put0($out, $e, 0, var$4);
                }
                var$7 = $in.$position;
                var$4 = $result.$kind;
                var$8 = var$4 != 2 ? 0 : 1;
                if (!(!var$8 && !(var$4 != 3 ? 0 : 1) ? 0 : 1)) {
                    $in = new jl_UnsupportedOperationException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                }
                jn_Buffer_position($in, var$7 + $result.$length0 | 0);
            }
        }
        return $result;
    }
    $in = new jl_IllegalStateException;
    $in.$suppressionEnabled = 1;
    $in.$writableStackTrace = 1;
    $rt_throw($in);
}
var jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
var cgxgbtf_FileDB = $rt_classWithoutFields();
var cgxgbtf_FileDB_INSTANCE = null;
function cgxgbtf_FileDB__clinit_() {
    cgxgbtf_FileDB_INSTANCE = null;
}
var cbgu_ScreenUtils = $rt_classWithoutFields();
function cbgu_ScreenUtils_clear($r, $g, $b, $a) {
    cbg_Gdx_gl.$glClearColor($r, $g, $b, $a);
    cbg_Gdx_gl.$glClear(16384);
}
function cbgg_Camera() {
    var a = this; jl_Object.call(a);
    a.$position2 = null;
    a.$direction0 = null;
    a.$up = null;
    a.$projection = null;
    a.$view = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$frustum = null;
    a.$tmpVec = null;
    a.$ray = null;
}
function cbgg_Camera__init_($this) {
    var var$1, var$2, var$3;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    $this.$position2 = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x2 = 0.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = (-1.0);
    $this.$direction0 = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x2 = 0.0;
    var$1.$y2 = 1.0;
    var$1.$z1 = 0.0;
    $this.$up = var$1;
    $this.$projection = cbgm_Matrix4__init_();
    $this.$view = cbgm_Matrix4__init_();
    $this.$combined = cbgm_Matrix4__init_();
    $this.$invProjectionView = cbgm_Matrix4__init_();
    $this.$near = 1.0;
    $this.$far = 100.0;
    $this.$viewportWidth = 0.0;
    $this.$viewportHeight = 0.0;
    $this.$frustum = cbgm_Frustum__init_();
    $this.$tmpVec = new cbgm_Vector3;
    var$1 = new cbgmc_Ray;
    cbgmc_Ray_$callClinit();
    var$2 = new cbgm_Vector3;
    var$1.$origin = var$2;
    var$3 = new cbgm_Vector3;
    var$1.$direction = var$3;
    var$2.$x2 = 0.0;
    var$2.$y2 = 0.0;
    var$2.$z1 = 0.0;
    var$3.$x2 = 0.0;
    var$3.$y2 = 0.0;
    var$3.$z1 = 0.0;
    $this.$ray = var$1;
}
var cgt_Stringf = $rt_classWithoutFields();
function cgt_Stringf_formatBuilder($fmt, $args) {
    var $len, $arg, $sb, $i, var$7, $precision, $curr, $length, $d, $num, $d_0;
    $len = $fmt.$characters.data.length;
    $arg = 0;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray($len);
    $i = 0;
    a: {
        b: {
            while ($i < $len) {
                if ($i < 0)
                    break a;
                var$7 = $fmt.$characters.data;
                $precision = var$7.length;
                if ($i >= $precision)
                    break a;
                c: {
                    $curr = var$7[$i];
                    if ($curr != 37) {
                        $length = $sb.$length;
                        jl_AbstractStringBuilder_insertSpace($sb, $length, $length + 1 | 0);
                        $sb.$buffer.data[$length] = $curr;
                        break c;
                    }
                    $i = $i + 1 | 0;
                    if ($i < 0)
                        break b;
                    if ($i >= $precision)
                        break b;
                    $precision = var$7[$i];
                    if ($precision == 37) {
                        jl_StringBuilder_append3($sb, 37);
                        break c;
                    }
                    if ($precision == 115) {
                        var$7 = $args.data;
                        $length = $arg + 1 | 0;
                        jl_StringBuilder_append1($sb, var$7[$arg].$toString());
                        $arg = $length;
                        break c;
                    }
                    if ($precision == 100) {
                        var$7 = $args.data;
                        $length = $arg + 1 | 0;
                        jl_StringBuilder_append2($sb, jl_Integer_longValue(var$7[$arg]));
                        $arg = $length;
                        break c;
                    }
                    if ($precision == 102) {
                        var$7 = $args.data;
                        $length = $arg + 1 | 0;
                        $d = jl_Integer_doubleValue(var$7[$arg]);
                        cgtd_Base_$callClinit();
                        jl_StringBuilder_append1($sb, cgtd_TextTools_safeSubstring(cgtd_Base_decimal(cgtd_Base_BASE10, $d), 0, $d >= 0.0 ? 5 : 6));
                        $arg = $length;
                        break c;
                    }
                    if ($precision == 48) {
                        $i = $i + 1 | 0;
                        if (jl_String_charAt($fmt, $i) == 88) {
                            var$7 = $args.data;
                            cgtd_Base_$callClinit();
                            $num = cgtd_Base_BASE16;
                            $length = $arg + 1 | 0;
                            cgtd_Base_appendUnsigned($num, $sb, jl_Integer_longValue(var$7[$arg]));
                            $arg = $length;
                            break c;
                        }
                        cgtd_Base_$callClinit();
                        $length = cgtd_Base_readInt(cgtd_Base_BASE10, $fmt, $i, $len);
                        while (true) {
                            $i = $i + 1 | 0;
                            $precision = jl_String_charAt($fmt, $i);
                            if ($precision < 48)
                                break;
                            if ($precision > 57)
                                break;
                        }
                        if ($precision == 88) {
                            var$7 = $args.data;
                            $num = cgtd_Base_BASE16;
                            $precision = $arg + 1 | 0;
                            jl_StringBuilder_append1($sb, cgtd_TextTools_safeSubstring(cgtd_Base_unsigned($num, jl_Integer_longValue(var$7[$arg])), 16 - $length | 0, 16));
                        } else if ($precision != 100)
                            $precision = $arg;
                        else {
                            var$7 = $args.data;
                            $num = cgtd_Base_BASE10;
                            $precision = $arg + 1 | 0;
                            $num = cgtd_Base_unsigned($num, jl_Integer_longValue(var$7[$arg]));
                            jl_StringBuilder_append1($sb, cgtd_TextTools_safeSubstring($num, jl_String_length($num) - $length | 0, jl_String_length($num)));
                        }
                        $arg = $precision;
                        break c;
                    }
                    if ($precision == 46) {
                        $i = $i + 1 | 0;
                        if (jl_String_charAt($fmt, $i) == 102) {
                            var$7 = $args.data;
                            cgtd_Base_$callClinit();
                            $num = cgtd_Base_BASE10;
                            $length = $arg + 1 | 0;
                            cgtd_Base_appendDecimal($num, $sb, jl_Integer_doubleValue(var$7[$arg]));
                            $arg = $length;
                            break c;
                        }
                        cgtd_Base_$callClinit();
                        $precision = cgtd_Base_readInt(cgtd_Base_BASE10, $fmt, $i, $len) + 2 | 0;
                        while (true) {
                            $i = $i + 1 | 0;
                            $length = jl_String_charAt($fmt, $i);
                            if ($length < 48)
                                break;
                            if ($length > 57)
                                break;
                        }
                        if ($length == 102) {
                            var$7 = $args.data;
                            $length = $arg + 1 | 0;
                            $d_0 = jl_Integer_doubleValue(var$7[$arg]);
                            $num = cgtd_Base_decimal(cgtd_Base_BASE10, $d_0);
                            if ($d_0 < 0.0)
                                $precision = $precision + 1 | 0;
                            jl_StringBuilder_append1($sb, cgtd_TextTools_safeSubstring($num, 0, $precision));
                            $arg = $length;
                        }
                        break c;
                    }
                    if ($precision < 49)
                        break c;
                    if ($precision > 57)
                        break c;
                    cgtd_Base_$callClinit();
                    $length = cgtd_Base_readInt(cgtd_Base_BASE10, $fmt, $i, $len);
                    while (true) {
                        $i = $i + 1 | 0;
                        $precision = jl_String_charAt($fmt, $i);
                        if ($precision < 48)
                            break;
                        if ($precision > 57)
                            break;
                    }
                    if ($precision == 88) {
                        var$7 = $args.data;
                        $num = cgtd_Base_BASE16;
                        $precision = $arg + 1 | 0;
                        $num = cgtd_Base_signed($num, jl_Integer_longValue(var$7[$arg]));
                        jl_StringBuilder_append1($sb, cgtd_TextTools_safeSubstring($num, jl_String_length($num) - $length | 0, jl_String_length($num)));
                    } else if ($precision != 100)
                        $precision = $arg;
                    else {
                        var$7 = $args.data;
                        $num = cgtd_Base_BASE10;
                        $precision = $arg + 1 | 0;
                        $num = cgtd_Base_signed($num, jl_Integer_longValue(var$7[$arg]));
                        jl_StringBuilder_append1($sb, cgtd_TextTools_safeSubstring($num, jl_String_length($num) - $length | 0, jl_String_length($num)));
                    }
                    $arg = $precision;
                }
                $i = $i + 1 | 0;
            }
            return $sb;
        }
        $fmt = new jl_StringIndexOutOfBoundsException;
        jl_Exception__init_($fmt);
        $rt_throw($fmt);
    }
    $fmt = new jl_StringIndexOutOfBoundsException;
    $fmt.$suppressionEnabled = 1;
    $fmt.$writableStackTrace = 1;
    $rt_throw($fmt);
}
function cgt_Stringf_format($fmt, $args) {
    var var$3, var$4, var$5, var$6, var$7;
    $fmt = cgt_Stringf_formatBuilder($fmt, $args);
    var$3 = new jl_String;
    $args = $fmt.$buffer;
    var$4 = $fmt.$length;
    jl_String_$callClinit();
    var$5 = $rt_createCharArray(var$4);
    var$6 = var$5.data;
    var$3.$characters = var$5;
    var$7 = 0;
    while (var$7 < var$4) {
        var$6[var$7] = $args.data[var$7 + 0 | 0];
        var$7 = var$7 + 1 | 0;
    }
    return var$3;
}
var cgtr_EnhancedRandom = $rt_classWithoutFields(ju_Random);
function cgtr_EnhancedRandom_nextExclusiveFloat($this) {
    var $bits;
    $bits = $this.$nextLong();
    return $rt_intBitsToFloat((126 - jl_Long_numberOfLeadingZeros($bits) | 0) << 23 | Long_lo($bits) & 8388607);
}
function cgtr_ChopRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA = 0;
    a.$stateB = 0;
    a.$stateC = 0;
    a.$stateD = 0;
}
function cgtr_ChopRandom_getTag($this) {
    return $rt_s(615);
}
function cgtr_ChopRandom_nextLong($this) {
    var $fa, $fb, $fc, $fd, $ga, $gb, $gc, $gd, $sa, $sb;
    $fa = $this.$stateA;
    $fb = $this.$stateB;
    $fc = $this.$stateC;
    $fd = $this.$stateD;
    $ga = $fb ^ $fc;
    $ga = $ga << 26 | ($ga >>> 6 | 0);
    $gb = $fc ^ $fd;
    $gb = $gb << 11 | ($gb >>> 21 | 0);
    $gc = $fa ^ ($fb + $fc | 0);
    $gd = $fd + (-1380601499) | 0;
    $sa = $gb ^ $gc;
    $this.$stateA = $sa << 26 | ($sa >>> 6 | 0);
    $sb = $gc ^ $gd;
    $this.$stateB = $sb << 11 | ($sb >>> 21 | 0);
    $this.$stateC = $ga ^ ($gb + $gc | 0);
    $this.$stateD = $gd + (-1380601499) | 0;
    return Long_xor(Long_shl(Long_fromInt($fc), 32), Long_fromInt($gc));
}
function cbguv_Viewport() {
    var a = this; jl_Object.call(a);
    a.$camera = null;
    a.$worldWidth = 0.0;
    a.$worldHeight = 0.0;
    a.$screenX = 0;
    a.$screenY = 0;
    a.$screenWidth = 0;
    a.$screenHeight = 0;
    a.$tmp0 = null;
}
function cbguv_Viewport_apply($this, $centerCamera) {
    var var$2, var$3, var$4, var$5;
    cbggg_HdpiUtils_glViewport($this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight);
    var$2 = $this.$camera;
    var$3 = $this.$worldWidth;
    var$2.$viewportWidth = var$3;
    var$4 = $this.$worldHeight;
    var$2.$viewportHeight = var$4;
    if ($centerCamera) {
        var$5 = var$2.$position2;
        var$3 = var$3 / 2.0;
        var$4 = var$4 / 2.0;
        var$5.$x2 = var$3;
        var$5.$y2 = var$4;
        var$5.$z1 = 0.0;
    }
    cbgg_OrthographicCamera_update0(var$2, 1);
}
function cbguv_Viewport_getCamera($this) {
    return $this.$camera;
}
function cbguv_ScreenViewport() {
    cbguv_Viewport.call(this);
    this.$unitsPerPixel = 0.0;
}
var cbggg_ImmediateModeRenderer = $rt_classWithoutFields(0);
function cbggg_ImmediateModeRenderer20() {
    var a = this; jl_Object.call(a);
    a.$primitiveType = 0;
    a.$vertexIdx = 0;
    a.$numSetTexCoords = 0;
    a.$maxVertices = 0;
    a.$numVertices = 0;
    a.$mesh0 = null;
    a.$shader0 = null;
    a.$ownsShader0 = 0;
    a.$numTexCoords = 0;
    a.$vertexSize0 = 0;
    a.$normalOffset = 0;
    a.$colorOffset = 0;
    a.$texCoordOffset = 0;
    a.$projModelView = null;
    a.$vertices1 = null;
    a.$shaderUniformNames = null;
}
function cbggg_ImmediateModeRenderer20__init_0(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbggg_ImmediateModeRenderer20();
    cbggg_ImmediateModeRenderer20__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbggg_ImmediateModeRenderer20__init_($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, $shader) {
    var $attribs, var$7, var$8, var$9, var$10, $i;
    $this.$projModelView = cbgm_Matrix4__init_();
    $this.$maxVertices = $maxVertices;
    $this.$numTexCoords = $numTexCoords;
    $this.$shader0 = $shader;
    $attribs = cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColors, $numTexCoords);
    var$7 = new cbgg_Mesh;
    var$7.$autoBind = 1;
    var$7.$isInstanced = 0;
    $shader = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmpV = $shader;
    $shader = cbgg_VertexAttributes__init_($attribs);
    var$7.$vertices0 = cbg_Gdx_gl30 === null ? cbggg_VertexBufferObject__init_(0, $maxVertices, $shader) : cbggg_VertexBufferObjectWithVAO__init_(0, $maxVertices, $shader);
    $shader = new cbggg_IndexBufferObject;
    $shader.$isDirty = 1;
    $shader.$isBound = 0;
    $shader.$isDirect = 1;
    var$8 = new jn_ByteBufferImpl;
    $attribs = $rt_createByteArray(0);
    jl_Object__init_0(var$8);
    var$8.$mark = (-1);
    var$8.$capacity = 0;
    var$8.$limit = 0;
    jn_ByteOrder_$callClinit();
    var$9 = jn_ByteOrder_BIG_ENDIAN;
    var$8.$order = var$9;
    var$8.$start = 0;
    var$8.$array = $attribs;
    var$8.$position = 0;
    var$8.$limit = 0;
    var$8.$direct = 1;
    var$8.$readOnly = 0;
    var$8.$order = var$9;
    var$8 = jn_ByteBufferImpl_asShortBuffer(var$8);
    $shader.$buffer3 = var$8;
    var$8.$limit = var$8.$position;
    var$8.$position = 0;
    var$8.$mark = (-1);
    var$8 = cbg_Gdx_gl20;
    var$9 = var$8.$gl0.createBuffer();
    $hasColors = var$8.$nextBufferId;
    var$8.$nextBufferId = $hasColors + 1 | 0;
    var$8 = var$8.$buffers;
    if ($hasColors >= (-128) && $hasColors <= 127) {
        jl_Integer_ensureIntegerCache();
        var$10 = jl_Integer_integerCache.data[$hasColors + 128 | 0];
    } else {
        var$10 = new jl_Integer;
        var$10.$value5 = $hasColors;
    }
    ju_HashMap_putImpl(var$8, var$10, var$9);
    $shader.$bufferHandle = $hasColors;
    $shader.$usage0 = 35048;
    var$7.$indices = $shader;
    var$7.$isVertexArray = 0;
    $shader = cbg_Gdx_app;
    var$8 = ju_HashMap_getEntry(cbgg_Mesh_meshes, $shader);
    var$8 = var$8 === null ? null : var$8.$value4;
    if (var$8 === null)
        var$8 = cbgu_Array__init_();
    cbgu_Array_add(var$8, var$7);
    ju_HashMap_putImpl(cbgg_Mesh_meshes, $shader, var$8);
    $this.$mesh0 = var$7;
    $this.$vertices1 = $rt_createFloatArray($rt_imul($maxVertices, (cbgg_Mesh_getVertexAttributes(var$7)).$vertexSize / 4 | 0));
    $this.$vertexSize0 = (cbgg_Mesh_getVertexAttributes($this.$mesh0)).$vertexSize / 4 | 0;
    $this.$normalOffset = cbgg_Mesh_getVertexAttribute($this.$mesh0, 8) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh0, 8)).$offset / 4 | 0;
    $this.$colorOffset = cbgg_Mesh_getVertexAttribute($this.$mesh0, 4) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh0, 4)).$offset / 4 | 0;
    $this.$texCoordOffset = cbgg_Mesh_getVertexAttribute($this.$mesh0, 16) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh0, 16)).$offset / 4 | 0;
    $this.$shaderUniformNames = $rt_createArray(jl_String, $numTexCoords);
    $i = 0;
    while ($i < $numTexCoords) {
        $this.$shaderUniformNames.data[$i] = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(616)), $i));
        $i = $i + 1 | 0;
    }
}
function cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColor, $numTexCoords) {
    var $attribs, var$5, var$6, $i, var$8, $array, var$10, var$11, var$12, var$13;
    $attribs = new cbgu_Array;
    $attribs.$ordered = 1;
    $attribs.$items = $rt_createArray(jl_Object, 16);
    var$5 = new cbgg_VertexAttribute;
    var$5.$usage = 1;
    var$5.$numComponents = 3;
    var$5.$type0 = 5126;
    var$5.$normalized = 0;
    var$5.$alias = $rt_s(468);
    var$5.$unit = 0;
    var$5.$usageIndex = jl_Integer_numberOfTrailingZeros(1);
    cbgu_Array_add($attribs, var$5);
    if ($hasNormals) {
        var$6 = new cbgg_VertexAttribute;
        var$6.$usage = 8;
        var$6.$numComponents = 3;
        var$6.$type0 = 5126;
        var$6.$normalized = 0;
        var$6.$alias = $rt_s(617);
        var$6.$unit = 0;
        var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(8);
        cbgu_Array_add($attribs, var$6);
    }
    if ($hasColor) {
        var$6 = new cbgg_VertexAttribute;
        var$6.$usage = 4;
        var$6.$numComponents = 4;
        var$6.$type0 = 5121;
        var$6.$normalized = 1;
        var$6.$alias = $rt_s(469);
        var$6.$unit = 0;
        var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(4);
        cbgu_Array_add($attribs, var$6);
    }
    $i = 0;
    while ($i < $numTexCoords) {
        var$6 = new cbgg_VertexAttribute;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(618));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
        var$8 = new jl_String;
        $array = var$5.$buffer;
        var$10 = var$5.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray(var$10);
        var$12 = var$11.data;
        var$8.$characters = var$11;
        var$13 = 0;
        while (var$13 < var$10) {
            var$12[var$13] = $array.data[var$13 + 0 | 0];
            var$13 = var$13 + 1 | 0;
        }
        var$6.$usage = 16;
        var$6.$numComponents = 2;
        var$6.$type0 = 5126;
        var$6.$normalized = 0;
        var$6.$alias = var$8;
        var$6.$unit = 0;
        var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(16);
        cbgu_Array_add($attribs, var$6);
        $i = $i + 1 | 0;
    }
    $hasNormals = $attribs.$size;
    $array = $rt_createArray(cbgg_VertexAttribute, $hasNormals);
    var$11 = $array.data;
    $i = 0;
    while (true) {
        $hasColor = $rt_compare($i, $hasNormals);
        if ($hasColor >= 0)
            break;
        if ($hasColor >= 0) {
            var$5 = new jl_IndexOutOfBoundsException;
            var$6 = new jl_StringBuilder;
            var$6.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $i, 10);
            jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(37));
            $hasNormals = $attribs.$size;
            jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $hasNormals, 10);
            $attribs = new jl_String;
            $array = var$6.$buffer;
            $hasColor = var$6.$length;
            jl_String_$callClinit();
            var$11 = $rt_createCharArray($hasColor);
            var$12 = var$11.data;
            $attribs.$characters = var$11;
            $numTexCoords = 0;
            while ($numTexCoords < $hasColor) {
                var$12[$numTexCoords] = $array.data[$numTexCoords + 0 | 0];
                $numTexCoords = $numTexCoords + 1 | 0;
            }
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$message = $attribs;
            $rt_throw(var$5);
        }
        var$11[$i] = $attribs.$items.data[$i];
        $i = $i + 1 | 0;
    }
    return $array;
}
function cbggg_ImmediateModeRenderer20_begin($this, $projModelView, $primitiveType) {
    cbgm_Matrix4_set($this.$projModelView, $projModelView.$val);
    $this.$primitiveType = $primitiveType;
}
function cbggg_ImmediateModeRenderer20_color($this, $colorBits) {
    $this.$vertices1.data[$this.$vertexIdx + $this.$colorOffset | 0] = $colorBits;
}
function cbggg_ImmediateModeRenderer20_vertex($this, $x, $y, $z) {
    var $idx, var$5;
    $idx = $this.$vertexIdx;
    var$5 = $this.$vertices1.data;
    var$5[$idx] = $x;
    var$5[$idx + 1 | 0] = $y;
    var$5[$idx + 2 | 0] = $z;
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = $idx + $this.$vertexSize0 | 0;
    $this.$numVertices = $this.$numVertices + 1 | 0;
}
function cbggg_ImmediateModeRenderer20_flush($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $i, var$13;
    if (!$this.$numVertices)
        return;
    var$1 = $this.$shader0;
    var$2 = cbg_Gdx_gl20;
    if (var$1.$invalidated) {
        cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
        var$1.$invalidated = 0;
    }
    var$2.$glUseProgram(var$1.$program);
    var$2 = $this.$shader0;
    var$3 = $this.$projModelView;
    cbggg_ShaderProgram_$callClinit();
    var$4 = cbggg_ShaderProgram_fetchUniformLocation(var$2, $rt_s(619), cbggg_ShaderProgram_pedantic);
    var$5 = cbg_Gdx_gl20;
    if (var$2.$invalidated) {
        cbggg_ShaderProgram_compileShaders(var$2, var$2.$vertexShaderSource, var$2.$fragmentShaderSource);
        var$2.$invalidated = 0;
    }
    var$6 = var$3.$val;
    var$1 = var$5.$uniforms;
    var$7 = var$5.$currProgram;
    if (var$7 >= (-128) && var$7 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$2 = jl_Integer_integerCache.data[var$7 + 128 | 0];
    } else {
        var$2 = new jl_Integer;
        jl_Object__init_0(var$2);
        var$2.$value5 = var$7;
    }
    if (var$2 === null) {
        var$1 = var$1.$elementData.data[0];
        while (var$1 !== null && var$1.$key !== null) {
            var$1 = var$1.$next;
        }
    } else {
        var$8 = jl_Integer_hashCode(var$2);
        var$9 = var$1.$elementData.data;
        var$1 = var$9[var$8 & (var$9.length - 1 | 0)];
        while (var$1 !== null && !(var$1.$origKeyHash == var$8 && ju_HashMap_areEqualKeys(var$2, var$1.$key))) {
            var$1 = var$1.$next;
        }
    }
    var$1 = var$1 === null ? null : var$1.$value4;
    if (var$4 >= (-128) && var$4 <= 127) {
        jl_Integer_ensureIntegerCache();
        var$2 = jl_Integer_integerCache.data[var$4 + 128 | 0];
    } else {
        var$2 = new jl_Integer;
        jl_Object__init_0(var$2);
        var$2.$value5 = var$4;
    }
    if (var$2 === null) {
        var$1 = var$1.$elementData.data[0];
        while (var$1 !== null && var$1.$key !== null) {
            var$1 = var$1.$next;
        }
    } else {
        var$10 = jl_Integer_hashCode(var$2);
        var$9 = var$1.$elementData.data;
        var$1 = var$9[var$10 & (var$9.length - 1 | 0)];
        while (var$1 !== null && !(var$1.$origKeyHash == var$10 && ju_HashMap_areEqualKeys(var$2, var$1.$key))) {
            var$1 = var$1.$next;
        }
    }
    var$1 = var$1 === null ? null : var$1.$value4;
    var$2 = var$5.$gl0;
    var$3 = "uniformMatrix4fv";
    var$5 = !!0;
    if (var$6 === null)
        var$11 = null;
    else {
        var$6 = var$6.data;
        $i = var$6.length;
        var$11 = new $rt_globals.Array($i);
        var$7 = 0;
        while (var$7 < $i) {
            var$13 = var$6[var$7];
            var$11[var$7] = var$13;
            var$7 = var$7 + 1 | 0;
        }
    }
    var$2[var$3](var$1, var$5, var$11);
    $i = 0;
    while ($i < $this.$numTexCoords) {
        var$1 = $this.$shader0;
        var$2 = $this.$shaderUniformNames.data[$i];
        var$3 = cbg_Gdx_gl20;
        if (var$1.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
            var$1.$invalidated = 0;
        }
        var$3.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation(var$1, var$2, cbggg_ShaderProgram_pedantic), $i);
        $i = $i + 1 | 0;
    }
    var$1 = $this.$mesh0;
    var$6 = $this.$vertices1;
    var$7 = $this.$vertexIdx;
    var$1.$vertices0.$setVertices(var$6, 0, var$7);
    var$1 = $this.$mesh0;
    cbgg_Mesh_render(var$1, $this.$shader0, $this.$primitiveType, 0, var$1.$indices.$getNumMaxIndices() <= 0 ? var$1.$vertices0.$getNumVertices() : var$1.$indices.$getNumIndices(), var$1.$autoBind);
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = 0;
    $this.$numVertices = 0;
}
function cbggg_ImmediateModeRenderer20_end($this) {
    cbggg_ImmediateModeRenderer20_flush($this);
}
function cbggg_ImmediateModeRenderer20_createVertexShader($hasNormals, $hasColors, $numTexCoords) {
    var var$4, var$5, var$6, $i, var$8, var$9, var$10, var$11;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(620));
    var$5 = !$hasNormals ? $rt_s(42) : $rt_s(621);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
    var$5 = !$hasColors ? $rt_s(42) : $rt_s(622);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    $i = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($i);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < $i) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    $i = 0;
    while ($i < $numTexCoords) {
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(623));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $i, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(624));
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $hasNormals = var$4.$length;
        var$8 = $rt_createCharArray($hasNormals);
        var$9 = var$8.data;
        var$5.$characters = var$8;
        var$10 = 0;
        while (var$10 < $hasNormals) {
            var$9[var$10] = var$6.data[var$10 + 0 | 0];
            var$10 = var$10 + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(625));
    var$5 = !$hasColors ? $rt_s(42) : $rt_s(626);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    $i = var$4.$length;
    var$8 = $rt_createCharArray($i);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < $i) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    $i = 0;
    while ($i < $numTexCoords) {
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(627));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $i, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(624));
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$10 = var$4.$length;
        var$8 = $rt_createCharArray(var$10);
        var$9 = var$8.data;
        var$5.$characters = var$8;
        var$11 = 0;
        while (var$11 < var$10) {
            var$9[var$11] = var$6.data[var$11 + 0 | 0];
            var$11 = var$11 + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(628));
    var$5 = new jl_String;
    var$6 = var$4.$buffer;
    $i = var$4.$length;
    var$8 = $rt_createCharArray($i);
    var$9 = var$8.data;
    var$5.$characters = var$8;
    var$10 = 0;
    while (var$10 < $i) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    if ($hasColors) {
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_append1(var$4, var$5);
        var$5 = jl_StringBuilder_toString(jl_StringBuilder_append1(var$4, $rt_s(629)));
    }
    $i = 0;
    while ($i < $numTexCoords) {
        var$5 = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), var$5), $rt_s(630)), $i), $rt_s(631)), $rt_s(618)), $i), $rt_s(624)));
        $i = $i + 1 | 0;
    }
    return jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), var$5), $rt_s(632)));
}
function cbggg_ImmediateModeRenderer20_createFragmentShader($hasNormals, $hasColors, $numTexCoords) {
    var $shader, var$5, var$6, $i, var$8, var$9, var$10, var$11;
    $shader = $rt_s(633);
    if ($hasColors) {
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(626));
        $shader = new jl_String;
        var$6 = var$5.$buffer;
        $i = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($i);
        var$9 = var$8.data;
        $shader.$characters = var$8;
        var$10 = 0;
        while (var$10 < $i) {
            var$9[var$10] = var$6.data[var$10 + 0 | 0];
            var$10 = var$10 + 1 | 0;
        }
    }
    $i = 0;
    while ($i < $numTexCoords) {
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(627));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(624));
        $shader = new jl_String;
        var$6 = var$5.$buffer;
        var$10 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$10);
        var$9 = var$8.data;
        $shader.$characters = var$8;
        var$11 = 0;
        while (var$11 < var$10) {
            var$9[var$11] = var$6.data[var$11 + 0 | 0];
            var$11 = var$11 + 1 | 0;
        }
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(634));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(624));
        $shader = new jl_String;
        var$6 = var$5.$buffer;
        var$10 = var$5.$length;
        var$8 = $rt_createCharArray(var$10);
        var$9 = var$8.data;
        $shader.$characters = var$8;
        var$11 = 0;
        while (var$11 < var$10) {
            var$9[var$11] = var$6.data[var$11 + 0 | 0];
            var$11 = var$11 + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(635));
    $shader = !$hasColors ? $rt_s(636) : $rt_s(637);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
    $shader = new jl_String;
    var$6 = var$5.$buffer;
    $hasColors = var$5.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray($hasColors);
    var$9 = var$8.data;
    $shader.$characters = var$8;
    $i = 0;
    while ($i < $hasColors) {
        var$9[$i] = var$6.data[$i + 0 | 0];
        $i = $i + 1 | 0;
    }
    if ($numTexCoords > 0) {
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(638));
        $shader = new jl_String;
        var$6 = var$5.$buffer;
        $hasColors = var$5.$length;
        var$8 = $rt_createCharArray($hasColors);
        var$9 = var$8.data;
        $shader.$characters = var$8;
        $i = 0;
        while ($i < $hasColors) {
            var$9[$i] = var$6.data[$i + 0 | 0];
            $i = $i + 1 | 0;
        }
    }
    $i = 0;
    $hasColors = $numTexCoords - 1 | 0;
    while ($i < $numTexCoords) {
        $shader = $i != $hasColors ? jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $shader), $rt_s(639)), $i), $rt_s(640)), $i), $rt_s(641))) : jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $shader),
        $rt_s(639)), $i), $rt_s(640)), $i), $rt_s(514)));
        $i = $i + 1 | 0;
    }
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(642));
    return jl_AbstractStringBuilder_toString(var$5);
}
function cgtr_AceRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA0 = Long_ZERO;
    a.$stateB0 = Long_ZERO;
    a.$stateC0 = Long_ZERO;
    a.$stateD0 = Long_ZERO;
    a.$stateE = Long_ZERO;
}
function cgtr_AceRandom_getTag($this) {
    return $rt_s(643);
}
function cgtr_AceRandom_nextLong($this) {
    var $fa, $fb, $fc, $fd, $fe, var$6;
    $fa = $this.$stateA0;
    $fb = $this.$stateB0;
    $fc = $this.$stateC0;
    $fd = $this.$stateD0;
    $fe = $this.$stateE;
    $this.$stateA0 = Long_add($fa, Long_create(2135587861, 2654435769));
    $this.$stateB0 = Long_xor($fa, $fe);
    $this.$stateC0 = Long_add($fb, $fd);
    $this.$stateD0 = Long_or(Long_shl($fc, 52), Long_shru($fc, 12));
    var$6 = Long_sub($fb, $fc);
    $this.$stateE = var$6;
    return var$6;
}
var otcic_Console = $rt_classWithoutFields();
function cbggg_TextureAtlas$AtlasRegion() {
    var a = this; cbggg_TextureRegion.call(a);
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$packedHeight = 0;
    a.$originalHeight = 0;
}
function cgxgbtp_AssetDownloadImpl$1$1() {
    var a = this; jl_Object.call(a);
    a.$val$request0 = null;
    a.$this$11 = null;
}
function cgxgbtp_AssetDownloadImpl$1$1_handleEvent($this, $evt) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$14 = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$val$request0.readyState == 4) {
            if ($this.$val$request0.status == 200) {
                $evt = $this.$this$11;
                if ($evt.$this$05.$showLogs) {
                    if (jl_System_outCache === null) {
                        var$2 = new ji_PrintStream;
                        var$2.$out = otcic_StdoutOutputStream_INSTANCE;
                        var$3 = new jl_StringBuilder;
                        var$3.$buffer = $rt_createCharArray(16);
                        var$2.$sb = var$3;
                        var$2.$buffer2 = $rt_createCharArray(32);
                        var$2.$autoFlush = 0;
                        jnci_UTF8Charset_$callClinit();
                        var$2.$charset = jnci_UTF8Charset_INSTANCE;
                        jl_System_outCache = var$2;
                    }
                    var$4 = jl_System_outCache;
                    $evt = $evt.$val$url;
                    var$3 = new jl_StringBuilder;
                    var$3.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(644));
                    var$5 = var$3.$length;
                    if ($evt === null)
                        $evt = $rt_s(1);
                    jl_AbstractStringBuilder_insert(var$3, var$5, $evt);
                    $evt = jl_String__init_1(var$3.$buffer, 0, var$3.$length);
                    var$3 = var$4.$sb;
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $evt);
                    jl_StringBuilder_append3(var$3, 10);
                    ji_PrintStream_printSB(var$4);
                }
                $evt = $this.$this$11;
                $evt.$val$listener.$onSuccess($evt.$val$url, $rt_str($this.$val$request0.responseText));
            } else if ($this.$val$request0.status != 404 && $this.$val$request0.status != 403) {
                try {
                    var$6 = Long_fromInt(100);
                    $ptr = 1;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
                $evt = $this.$this$11;
                var$3 = $evt.$this$05;
                var$5 = $evt.$val$async;
                var$2 = $evt.$val$url;
                var$7 = $evt.$val$listener;
                if (var$3.$showLogs) {
                    if (jl_System_outCache === null) {
                        var$4 = new ji_PrintStream;
                        var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                        $evt = new jl_StringBuilder;
                        $evt.$buffer = $rt_createCharArray(16);
                        var$4.$sb = $evt;
                        var$4.$buffer2 = $rt_createCharArray(32);
                        var$4.$autoFlush = 0;
                        jnci_UTF8Charset_$callClinit();
                        var$4.$charset = jnci_UTF8Charset_INSTANCE;
                        jl_System_outCache = var$4;
                    }
                    $evt = jl_System_outCache;
                    var$4 = new jl_StringBuilder;
                    var$4.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(119));
                    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$2 === null ? $rt_s(1) : var$2);
                    var$8 = new jl_String;
                    var$9 = var$4.$buffer;
                    var$10 = var$4.$length;
                    jl_String_$callClinit();
                    var$11 = $rt_createCharArray(var$10);
                    var$12 = var$11.data;
                    var$8.$characters = var$11;
                    var$13 = 0;
                    while (var$13 < var$10) {
                        var$12[var$13] = var$9.data[var$13 + 0 | 0];
                        var$13 = var$13 + 1 | 0;
                    }
                    var$4 = $evt.$sb;
                    jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$8);
                    var$13 = var$4.$length;
                    jl_AbstractStringBuilder_insertSpace(var$4, var$13, var$13 + 1 | 0);
                    var$4.$buffer.data[var$13] = 10;
                    ji_PrintStream_printSB($evt);
                }
                var$3.$queue = var$3.$queue + 1 | 0;
                $evt = new cgxgbtp_AssetDownloadImpl$1;
                $evt.$this$05 = var$3;
                $evt.$val$async = var$5;
                $evt.$val$url = var$2;
                $evt.$val$listener = var$7;
                var$3 = null;
                var$2 = null;
                $evt.$finishedLock = new jl_Object;
                $evt.$alive = 1;
                $evt.$name2 = var$2;
                $evt.$target = var$3;
                var$14 = jl_Thread_nextId;
                jl_Thread_nextId = var$14 + 1 | 0;
                $evt.$id1 = Long_fromInt(var$14);
                var$3 = new jl_Thread$start$lambda$_4_0;
                var$3.$_01 = $evt;
                otp_Platform_startThread(var$3);
            } else {
                $evt = $this.$this$11;
                $evt.$val$listener.$onFailure($evt.$val$url);
            }
            $evt = $this.$this$11.$this$05;
            $evt.$queue = $evt.$queue - 1 | 0;
        }
        return;
    case 1:
        a: {
            try {
                jl_Thread_sleep(var$6);
                if ($rt_suspending()) {
                    break main;
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
        }
        $evt = $this.$this$11;
        var$3 = $evt.$this$05;
        var$5 = $evt.$val$async;
        var$2 = $evt.$val$url;
        var$7 = $evt.$val$listener;
        if (var$3.$showLogs) {
            if (jl_System_outCache === null) {
                var$4 = new ji_PrintStream;
                var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                $evt = new jl_StringBuilder;
                $evt.$buffer = $rt_createCharArray(16);
                var$4.$sb = $evt;
                var$4.$buffer2 = $rt_createCharArray(32);
                var$4.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$4.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_outCache = var$4;
            }
            $evt = jl_System_outCache;
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(119));
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$2 === null ? $rt_s(1) : var$2);
            var$8 = new jl_String;
            var$9 = var$4.$buffer;
            var$10 = var$4.$length;
            jl_String_$callClinit();
            var$11 = $rt_createCharArray(var$10);
            var$12 = var$11.data;
            var$8.$characters = var$11;
            var$13 = 0;
            while (var$13 < var$10) {
                var$12[var$13] = var$9.data[var$13 + 0 | 0];
                var$13 = var$13 + 1 | 0;
            }
            var$4 = $evt.$sb;
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$8);
            var$13 = var$4.$length;
            jl_AbstractStringBuilder_insertSpace(var$4, var$13, var$13 + 1 | 0);
            var$4.$buffer.data[var$13] = 10;
            ji_PrintStream_printSB($evt);
        }
        var$3.$queue = var$3.$queue + 1 | 0;
        $evt = new cgxgbtp_AssetDownloadImpl$1;
        $evt.$this$05 = var$3;
        $evt.$val$async = var$5;
        $evt.$val$url = var$2;
        $evt.$val$listener = var$7;
        var$3 = null;
        var$2 = null;
        $evt.$finishedLock = new jl_Object;
        $evt.$alive = 1;
        $evt.$name2 = var$2;
        $evt.$target = var$3;
        var$14 = jl_Thread_nextId;
        jl_Thread_nextId = var$14 + 1 | 0;
        $evt.$id1 = Long_fromInt(var$14);
        var$3 = new jl_Thread$start$lambda$_4_0;
        var$3.$_01 = $evt;
        otp_Platform_startThread(var$3);
        $evt = $this.$this$11.$this$05;
        $evt.$queue = $evt.$queue - 1 | 0;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $evt, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $ptr);
}
function cgxgbtp_AssetDownloadImpl$1$1_handleEvent$exported$0(var$0, var$1) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        cgxgbtp_AssetDownloadImpl$1$1_handleEvent(var$0, var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$0, var$1, $ptr);
}
var jl_Object$NotifyListener = $rt_classWithoutFields(0);
var cbg_Audio = $rt_classWithoutFields(0);
function cgxgbt_TeaAudio() {
    jl_Object.call(this);
    this.$soundManager = null;
}
function jnci_BufferedDecoder() {
    var a = this; jnc_CharsetDecoder.call(a);
    a.$inArray0 = null;
    a.$outArray0 = null;
}
function jnci_BufferedDecoder_decodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $outSize, var$8, $i, var$10, $outSize_0, $result, $controller;
    $inArray = $this.$inArray0;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray0;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize) {
                $outSize = $in.$position;
                var$8 = $in.$limit;
                if ($outSize >= var$8 ? 0 : 1) {
                    $i = $inPos;
                    while ($i < $inSize) {
                        var$10 = $inArray.data;
                        var$10[$i - $inPos | 0] = var$10[$i];
                        $i = $i + 1 | 0;
                    }
                    var$10 = $inArray.data;
                    $i = $inSize - $inPos | 0;
                    $outSize_0 = (var$8 - $outSize | 0) + $i | 0;
                    $inSize = var$10.length;
                    if ($outSize_0 < $inSize)
                        $inSize = $outSize_0;
                    jn_ByteBuffer_get($in, $inArray, $i, $inSize - $i | 0);
                    $inPos = 0;
                }
            }
            $i = $out.$position;
            $outSize_0 = $out.$limit;
            if (!($i >= $outSize_0 ? 0 : 1)) {
                $i = $in.$position >= $in.$limit ? 0 : 1;
                $result = !$i && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$10 = $outArray.data;
            $outSize_0 = $outSize_0 - $i | 0;
            $outSize = var$10.length;
            if ($outSize_0 < $outSize)
                $outSize = $outSize_0;
            $controller = new jnci_BufferedDecoder$Controller;
            $controller.$in0 = $in;
            $controller.$out1 = $out;
            $result = jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if ($result === null && 0 == $controller.$outPosition0)
                $result = jnc_CoderResult_UNDERFLOW;
            jn_CharBuffer_put($out, $outArray, 0, $controller.$outPosition0);
            if ($result !== null)
                break;
        }
    }
    jn_Buffer_position($in, $in.$position - ($inSize - $inPos | 0) | 0);
    return $result;
}
var jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder);
function jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, $b2, $b, $b2_0, var$13, $b3, $b4, $code, $b2_1, $c;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    $b2 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if ($b2 >= $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            var$13 = $controller.$in0;
                            if ((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $b3 = $b2 + 1 | 0;
                        $b2 = var$9[$b2];
                        if (!(($b2 & 192) != 128 ? 0 : 1)) {
                            $inPos = $b3 + (-2) | 0;
                            $result = new jnc_CoderResult;
                            $result.$kind = 2;
                            $result.$length0 = 1;
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        $b2 = $b3;
                    } else if (($b & 240) != 224) {
                        if (($b & 248) != 240) {
                            $inPos = $b2 + (-1) | 0;
                            $result = jnc_CoderResult__init_(2, 1);
                            break a;
                        }
                        if (($b2 + 3 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 4))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreOutput($controller, 2))
                                break a;
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        $b3 = $b2 + 1 | 0;
                        $b2_0 = var$9[$b2];
                        $inPos = $b3 + 1 | 0;
                        $b3 = var$9[$b3];
                        $b2 = $inPos + 1 | 0;
                        $b4 = var$9[$inPos];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2_0))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2_0 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        $inPos = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        $b2_0 = $inPos + 1 | 0;
                        var$9[$inPos] = jl_Character_lowSurrogate($code);
                    } else {
                        if (($b2 + 2 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            var$13 = $controller.$in0;
                            if ((var$13.$limit - var$13.$position | 0) < 3 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2_1 = var$9[$b2];
                        $b2 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        if (!(($b2_1 & 192) != 128 ? 0 : 1))
                            break b;
                        if (!(($b3 & 192) != 128 ? 0 : 1))
                            break b;
                        $c = (($b & 15) << 12 | ($b2_1 & 63) << 6 | $b3 & 63) & 65535;
                        $b2_0 = $c & 64512;
                        $inPos = $b2_0 != 55296 ? 0 : 1;
                        if (!$inPos && !($b2_0 != 56320 ? 0 : 1) ? 0 : 1) {
                            $inPos = $b2 + (-3) | 0;
                            $result = new jnc_CoderResult;
                            $result.$kind = 2;
                            $result.$length0 = 3;
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    }
                    $inPos = $b2;
                    $outPos = $b2_0;
                }
                break a;
            }
            $inPos = $b2 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = $b2 + (-3) | 0;
        $result = new jnc_CoderResult;
        $result.$kind = 2;
        $result.$length0 = 1;
    }
    $controller.$inPosition0 = $inPos;
    $controller.$outPosition0 = $outPos;
    return $result;
}
function jnci_UTF8Decoder_checkMidByte($this, $b) {
    return ($b & 192) != 128 ? 0 : 1;
}
function cgxgbtf_FileDBManager() {
    var a = this; cgxgbtf_FileDB.call(a);
    a.$localStorage = null;
    a.$memory = null;
}
function cbgg_OrthographicCamera() {
    var a = this; cbgg_Camera.call(a);
    a.$zoom = 0.0;
    a.$tmp = null;
}
function cbgg_OrthographicCamera_update($this) {
    cbgg_OrthographicCamera_update0($this, 1);
}
function cbgg_OrthographicCamera_update0($this, $updateFrustum) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$2 = $this.$projection;
    var$3 = $this.$zoom;
    var$4 = $this.$viewportWidth;
    var$5 = var$3 *  -var$4 / 2.0;
    var$4 = var$3 * var$4 / 2.0;
    var$6 = $this.$viewportHeight;
    cbgm_Matrix4_setToOrtho(var$2, var$5, var$4, var$3 *  -(var$6 / 2.0), var$3 * var$6 / 2.0, $this.$near, $this.$far);
    var$2 = $this.$view;
    var$7 = $this.$position2;
    var$8 = $this.$tmp;
    var$3 = var$7.$x2;
    var$9 = var$7.$y2;
    var$5 = var$7.$z1;
    var$8.$x2 = var$3;
    var$8.$y2 = var$9;
    var$8.$z1 = var$5;
    var$10 = $this.$direction0;
    var$11 = var$10.$x2;
    var$4 = var$10.$y2;
    var$6 = var$10.$z1;
    var$3 = var$3 + var$11;
    var$9 = var$9 + var$4;
    var$5 = var$5 + var$6;
    var$8.$x2 = var$3;
    var$8.$y2 = var$9;
    var$8.$z1 = var$5;
    var$8 = $this.$up;
    var$10 = cbgm_Matrix4_tmpVec;
    var$10.$x2 = var$3;
    var$10.$y2 = var$9;
    var$10.$z1 = var$5;
    var$11 = var$7.$x2;
    var$4 = var$7.$y2;
    var$6 = var$7.$z1;
    var$11 = var$3 - var$11;
    var$4 = var$9 - var$4;
    var$6 = var$5 - var$6;
    var$10.$x2 = var$11;
    var$10.$y2 = var$4;
    var$10.$z1 = var$6;
    cbgm_Matrix4_setToLookAt(var$2, var$10, var$8);
    var$8 = cbgm_Matrix4_tmpMat;
    var$11 =  -var$7.$x2;
    var$4 =  -var$7.$y2;
    var$6 =  -var$7.$z1;
    cbgm_Matrix4_idt(var$8);
    var$12 = var$8.$val.data;
    var$12[12] = var$11;
    var$12[13] = var$4;
    var$12[14] = var$6;
    cbgm_Matrix4_mul(var$2, var$8);
    cbgm_Matrix4_set($this.$combined, $this.$projection.$val);
    cbgm_Matrix4_matrix4_mul($this.$combined.$val, $this.$view.$val);
    if ($updateFrustum) {
        cbgm_Matrix4_set($this.$invProjectionView, $this.$combined.$val);
        cbgm_Matrix4_matrix4_inv($this.$invProjectionView.$val);
        cbgm_Frustum_update($this.$frustum, $this.$invProjectionView);
    }
}
function cgxgbtf_FileDBStorage() {
    cgxgbtf_FileDB.call(this);
    this.$store = null;
}
var cgxgbtf_FileDBStorage_ID_LENGTH = 0;
function cgxgbtf_FileDBStorage_$callClinit() {
    cgxgbtf_FileDBStorage_$callClinit = $rt_eraseClinit(cgxgbtf_FileDBStorage);
    cgxgbtf_FileDBStorage__clinit_();
}
function cgxgbtf_FileDBStorage_read($this, $file) {
    var $data, var$3, $e, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $$je;
    $data = $this.$store;
    var$3 = $file.$file0;
    $e = new jl_StringBuilder;
    $e.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($e, $e.$length, $rt_s(645));
    var$5 = $e.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert($e, var$5, var$3);
    var$6 = new jl_String;
    var$7 = $e.$buffer;
    var$8 = $e.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    $data = $data.$getItem(var$6);
    a: {
        try {
            $e = ji_ByteArrayInputStream__init_(cgxgbtf_HEXCoder_decode($data));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $e;
    }
    $data = $this.$store;
    var$3 = $file.$file0;
    $file = new jl_StringBuilder;
    $file.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert($file, $file.$length, $rt_s(645));
    var$5 = $file.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert($file, var$5, var$3);
    var$6 = new jl_String;
    var$7 = $file.$buffer;
    var$8 = $file.$length;
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    $data.$removeItem(var$6);
    $rt_throw($e);
}
function cgxgbtf_FileDBStorage_exists($this, $file) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$2 = $this.$store;
    var$3 = $file.$file0;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(646));
    var$5 = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
    var$6 = new jl_String;
    var$7 = var$4.$buffer;
    var$8 = var$4.$length;
    jl_String_$callClinit();
    var$9 = $rt_createCharArray(var$8);
    var$10 = var$9.data;
    var$6.$characters = var$9;
    var$11 = 0;
    while (var$11 < var$8) {
        var$10[var$11] = var$7.data[var$11 + 0 | 0];
        var$11 = var$11 + 1 | 0;
    }
    a: {
        if (var$2.$getItem(var$6) === null) {
            var$2 = $this.$store;
            var$6 = $file.$file0;
            $file = new jl_StringBuilder;
            $file.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($file, $file.$length, $rt_s(645));
            var$5 = $file.$length;
            if (var$6 === null)
                var$6 = $rt_s(1);
            jl_AbstractStringBuilder_insert($file, var$5, var$6);
            var$4 = new jl_String;
            var$7 = $file.$buffer;
            var$11 = $file.$length;
            var$9 = $rt_createCharArray(var$11);
            var$10 = var$9.data;
            var$4.$characters = var$9;
            var$12 = 0;
            while (var$12 < var$11) {
                var$10[var$12] = var$7.data[var$12 + 0 | 0];
                var$12 = var$12 + 1 | 0;
            }
            if (var$2.$getItem(var$4) === null) {
                var$5 = 0;
                break a;
            }
        }
        var$5 = 1;
    }
    return var$5;
}
function cgxgbtf_FileDBStorage__clinit_() {
    cgxgbtf_FileDBStorage_ID_LENGTH = $rt_s(645).$characters.data.length;
}
var cgxgbtf_Store = $rt_classWithoutFields(0);
function cgxgbtf_StoreLocal() {
    var a = this; jl_Object.call(a);
    a.$storage = null;
    a.$prefix = null;
}
function cgxgbtf_StoreLocal_getItem($this, $key) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = $this.$storage;
    var$3 = $this.$prefix;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
    var$5 = var$4.$length;
    if ($key === null)
        $key = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, $key);
    var$3 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$3.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    return $rt_str(var$2.getItem($rt_ustr(var$3)));
}
function cgxgbtf_StoreLocal_removeItem($this, $key) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = $this.$storage;
    var$3 = $this.$prefix;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length;
    if (var$3 === null)
        var$3 = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
    var$5 = var$4.$length;
    if ($key === null)
        $key = $rt_s(1);
    jl_AbstractStringBuilder_insert(var$4, var$5, $key);
    var$3 = new jl_String;
    var$6 = var$4.$buffer;
    var$7 = var$4.$length;
    jl_String_$callClinit();
    var$8 = $rt_createCharArray(var$7);
    var$9 = var$8.data;
    var$3.$characters = var$8;
    var$10 = 0;
    while (var$10 < var$7) {
        var$9[var$10] = var$6.data[var$10 + 0 | 0];
        var$10 = var$10 + 1 | 0;
    }
    var$2.removeItem($rt_ustr(var$3));
}
function cgxgbtf_StoreMemory() {
    var a = this; jl_Object.call(a);
    a.$keys = null;
    a.$map = null;
}
function cgxgbtf_StoreMemory_getItem($this, $key) {
    var var$2, var$3;
    var$2 = $this.$map;
    var$3 = cbgu_ObjectMap_locateKey(var$2, $key);
    return var$3 < 0 ? null : var$2.$valueTable.data[var$3];
}
function cgxgbtf_StoreMemory_removeItem($this, $key) {
    cbgu_Array_removeValue($this.$keys, $key, 0);
    cbgu_ObjectMap_remove($this.$map, $key);
}
function cgtd_Base() {
    var a = this; jl_Object.call(a);
    a.$toEncoded = null;
    a.$fromEncoded = null;
    a.$paddingChar = 0;
    a.$positiveSign = 0;
    a.$negativeSign = 0;
    a.$caseInsensitive = 0;
    a.$base = 0;
    a.$length1Byte = 0;
    a.$length2Byte = 0;
    a.$length4Byte = 0;
    a.$length8Byte = 0;
    a.$progress = null;
}
var cgtd_Base_BASE2 = null;
var cgtd_Base_BASE8 = null;
var cgtd_Base_BASE10 = null;
var cgtd_Base_BASE16 = null;
var cgtd_Base_BASE36 = null;
var cgtd_Base_BASE64 = null;
var cgtd_Base_URI_SAFE = null;
var cgtd_Base_SIMPLE64 = null;
var cgtd_Base_BASE86 = null;
var cgtd_Base_BASES = null;
var cgtd_Base_long2D = null;
var cgtd_Base_int2D = null;
var cgtd_Base_short2D = null;
var cgtd_Base_byte2D = null;
var cgtd_Base_char2D = null;
var cgtd_Base_double2D = null;
var cgtd_Base_float2D = null;
function cgtd_Base_$callClinit() {
    cgtd_Base_$callClinit = $rt_eraseClinit(cgtd_Base);
    cgtd_Base__clinit_();
}
function cgtd_Base__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cgtd_Base();
    cgtd_Base__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cgtd_Base__init_0($this, $digits, $caseInsensitive, $padding, $positiveSign, $negativeSign) {
    var var$6, var$7, var$8, $i, $to, $logBase;
    cgtd_Base_$callClinit();
    $this.$paddingChar = $padding;
    $this.$caseInsensitive = $caseInsensitive;
    $this.$positiveSign = $positiveSign;
    $this.$negativeSign = $negativeSign;
    var$6 = $digits.$characters.data;
    var$7 = $rt_createCharArray(var$6.length);
    var$8 = var$7.data;
    $padding = 0;
    $positiveSign = var$8.length;
    while ($padding < $positiveSign) {
        var$8[$padding] = var$6[$padding];
        $padding = $padding + 1 | 0;
    }
    $this.$toEncoded = var$7;
    $this.$base = $positiveSign;
    var$6 = $rt_createIntArray(128);
    var$7 = var$6.data;
    $this.$fromEncoded = var$6;
    $positiveSign = 0;
    $negativeSign = var$7.length;
    if ($positiveSign > $negativeSign) {
        $digits = new jl_IllegalArgumentException;
        $digits.$suppressionEnabled = 1;
        $digits.$writableStackTrace = 1;
        $rt_throw($digits);
    }
    while ($positiveSign < $negativeSign) {
        $i = $positiveSign + 1 | 0;
        var$7[$positiveSign] = (-1);
        $positiveSign = $i;
    }
    $i = 0;
    while (true) {
        $padding = $this.$base;
        if ($i >= $padding)
            break;
        $to = $this.$toEncoded.data[$i];
        var$6 = $this.$fromEncoded.data;
        var$6[$to & 127] = $i;
        if ($caseInsensitive) {
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null));
            }
            a: {
                var$7 = jl_Character_lowerCaseMapping;
                $positiveSign = jl_Character_binarySearchTable(var$7, $to);
                if ($positiveSign >= 0) {
                    var$7 = var$7.data;
                    if ($positiveSign < (var$7.length / 2 | 0)) {
                        $padding = $to + var$7[($positiveSign * 2 | 0) + 1 | 0] | 0;
                        break a;
                    }
                }
                $padding = 0;
            }
            var$6[$padding & 65535 & 127] = $i;
        }
        $i = $i + 1 | 0;
    }
    $logBase = 1.0 / jl_Math_log($padding);
    $this.$length1Byte = jl_Math_ceil(jl_Math_log(256.0) * $logBase) | 0;
    $this.$length2Byte = jl_Math_ceil(jl_Math_log(65536.0) * $logBase) | 0;
    $this.$length4Byte = jl_Math_ceil(jl_Math_log(4.294967296E9) * $logBase) | 0;
    $caseInsensitive = jl_Math_ceil(jl_Math_log(1.8446744073709552E19) * $logBase) | 0;
    $this.$length8Byte = $caseInsensitive;
    $caseInsensitive = $caseInsensitive + 1 | 0;
    $padding = 32;
    if ($caseInsensitive > $padding)
        $padding = $caseInsensitive;
    $this.$progress = $rt_createCharArray($padding);
}
function cgtd_Base_unsigned($this, $number) {
    var var$2, $len, var$4, $halfBase, $i, var$7, var$8, $quotient, var$10, var$11, var$12, var$13;
    var$2 = $this.$length8Byte;
    $len = var$2 - 1 | 0;
    var$4 = $this.$base;
    $halfBase = var$4 >>> 1 | 0;
    $i = 0;
    var$7 = Long_fromInt($halfBase);
    var$8 = Long_fromInt(var$4);
    while ($i <= $len) {
        $quotient = Long_div(Long_shru($number, 1), var$7);
        $this.$progress.data[$len - $i | 0] = $this.$toEncoded.data[Long_lo(Long_sub($number, Long_mul($quotient, var$8)))];
        $i = $i + 1 | 0;
        $number = $quotient;
    }
    var$10 = $this.$progress;
    jl_String_$callClinit();
    var$11 = new jl_String;
    var$12 = $rt_createCharArray(var$2);
    var$13 = var$12.data;
    var$11.$characters = var$12;
    $halfBase = 0;
    while ($halfBase < var$2) {
        var$13[$halfBase] = var$10.data[$halfBase + 0 | 0];
        $halfBase = $halfBase + 1 | 0;
    }
    return var$11;
}
function cgtd_Base_appendUnsigned($this, $builder, $number) {
    var var$3, $len, var$5, $halfBase, $i, var$8, var$9, $quotient, var$11, var$12, var$13;
    var$3 = $this.$length8Byte;
    $len = var$3 - 1 | 0;
    var$5 = $this.$base;
    $halfBase = var$5 >>> 1 | 0;
    $i = 0;
    var$8 = Long_fromInt($halfBase);
    var$9 = Long_fromInt(var$5);
    while ($i <= $len) {
        $quotient = Long_div(Long_shru($number, 1), var$8);
        $this.$progress.data[$len - $i | 0] = $this.$toEncoded.data[Long_lo(Long_sub($number, Long_mul($quotient, var$9)))];
        $i = $i + 1 | 0;
        $number = $quotient;
    }
    var$11 = $this.$progress;
    var$5 = 0;
    $halfBase = $builder.$length;
    jl_AbstractStringBuilder_insertSpace($builder, $halfBase, $halfBase + var$3 | 0);
    $i = var$3 + var$5 | 0;
    while (var$5 < $i) {
        var$12 = var$11.data;
        var$13 = $builder.$buffer.data;
        $len = $halfBase + 1 | 0;
        var$3 = var$5 + 1 | 0;
        var$13[$halfBase] = var$12[var$5];
        $halfBase = $len;
        var$5 = var$3;
    }
    return $builder;
}
function cgtd_Base_signed($this, $number) {
    var $run, $sign, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $run = $this.$length8Byte;
    $sign = Long_shr($number, (-1));
    $number = Long_neg(Long_xor(Long_add($number, $sign), $sign));
    var$4 = $run;
    while (true) {
        var$5 = $this.$progress.data;
        var$6 = $this.$toEncoded.data;
        var$7 = Long_fromInt($this.$base);
        var$5[var$4] = var$6[Long_lo(Long_neg(Long_rem($number, var$7)))];
        $number = Long_div($number, var$7);
        if (Long_eq($number, Long_ZERO))
            break;
        var$4 = var$4 + (-1) | 0;
    }
    if (Long_ne($sign, Long_ZERO)) {
        var$4 = var$4 + (-1) | 0;
        var$5[var$4] = $this.$negativeSign;
    }
    var$8 = ($run + 1 | 0) - var$4 | 0;
    jl_String_$callClinit();
    var$9 = new jl_String;
    var$6 = $rt_createCharArray(var$8);
    var$10 = var$6.data;
    var$9.$characters = var$6;
    $run = 0;
    while ($run < var$8) {
        var$10[$run] = var$5[$run + var$4 | 0];
        $run = $run + 1 | 0;
    }
    return var$9;
}
function cgtd_Base_readInt($this, $cs, $start, $end) {
    var var$4, var$5, $c, var$7, $h, $lim, $i, var$11;
    if ($start >= 0 && $end > 0 && ($end - $start | 0) > 0) {
        var$4 = $cs.$characters.data;
        var$5 = var$4.length;
        if ((var$5 - $start | 0) > 0 && $end <= var$5) {
            if ($start >= 0 && $start < var$5) {
                $c = var$4[$start];
                if ($c == $this.$negativeSign) {
                    var$7 = (-1);
                    $h = 0;
                    $lim = $this.$length4Byte + 1 | 0;
                } else if ($c == $this.$positiveSign) {
                    var$7 = 1;
                    $h = 0;
                    $lim = $this.$length4Byte + 1 | 0;
                } else {
                    $h = $this.$fromEncoded.data[$c & 127];
                    if ($h < 0)
                        return 0;
                    var$7 = 1;
                    $lim = $this.$length4Byte;
                }
                $i = $start + 1 | 0;
                a: {
                    while ($i < $end && $i < ($start + $lim | 0)) {
                        var$11 = $this.$fromEncoded;
                        if ($i < 0)
                            break a;
                        if ($i >= var$5)
                            break a;
                        $c = var$11.data[var$4[$i] & 127];
                        if ($c < 0)
                            return $rt_imul($h, var$7);
                        $h = $rt_imul($h, $this.$base) + $c | 0;
                        $i = $i + 1 | 0;
                    }
                    return $rt_imul($h, var$7);
                }
                $cs = new jl_StringIndexOutOfBoundsException;
                $cs.$suppressionEnabled = 1;
                $cs.$writableStackTrace = 1;
                $rt_throw($cs);
            }
            $cs = new jl_StringIndexOutOfBoundsException;
            $cs.$suppressionEnabled = 1;
            $cs.$writableStackTrace = 1;
            $rt_throw($cs);
        }
    }
    return 0;
}
function cgtd_Base_decimal($this, $number) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    cgtd_RyuDouble_$callClinit();
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$2 = cgtd_RyuDouble_appendDecimal(var$2, $number, (-10000));
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$3;
}
function cgtd_Base_appendDecimal($this, $builder, $number) {
    cgtd_RyuDouble_$callClinit();
    return cgtd_RyuDouble_appendDecimal($builder, $number, (-10000));
}
function cgtd_Base__clinit_() {
    var var$1, var$2;
    cgtd_Base_BASE2 = cgtd_Base__init_($rt_s(647), 1, 36, 43, 45);
    cgtd_Base_BASE8 = cgtd_Base__init_($rt_s(648), 1, 36, 43, 45);
    cgtd_Base_BASE10 = cgtd_Base__init_($rt_s(649), 1, 36, 43, 45);
    cgtd_Base_BASE16 = cgtd_Base__init_($rt_s(650), 1, 112, 43, 45);
    cgtd_Base_BASE36 = cgtd_Base__init_($rt_s(651), 1, 36, 43, 45);
    cgtd_Base_BASE64 = cgtd_Base__init_($rt_s(461), 0, 61, 42, 45);
    cgtd_Base_URI_SAFE = cgtd_Base__init_($rt_s(652), 0, 36, 42, 33);
    cgtd_Base_SIMPLE64 = cgtd_Base__init_($rt_s(653), 0, 36, 43, 45);
    var$1 = cgtd_Base__init_($rt_s(654), 0, 92, 43, 45);
    cgtd_Base_BASE86 = var$1;
    var$2 = $rt_createArrayFromData(cgtd_Base, [cgtd_Base_BASE2, cgtd_Base_BASE8, cgtd_Base_BASE10, cgtd_Base_BASE16, cgtd_Base_BASE36, cgtd_Base_BASE64, cgtd_Base_URI_SAFE, cgtd_Base_SIMPLE64, var$1]);
    var$1 = new ju_Arrays$ArrayAsList;
    var$1.$array7 = var$2;
    cgtd_Base_BASES = var$1;
    cgtd_Base_long2D = $rt_createLongMultiArray([0, 0]);
    cgtd_Base_int2D = $rt_createIntMultiArray([0, 0]);
    cgtd_Base_short2D = $rt_createShortMultiArray([0, 0]);
    cgtd_Base_byte2D = $rt_createByteMultiArray([0, 0]);
    cgtd_Base_char2D = $rt_createCharMultiArray([0, 0]);
    cgtd_Base_double2D = $rt_createDoubleMultiArray([0, 0]);
    cgtd_Base_float2D = $rt_createFloatMultiArray([0, 0]);
}
var cgtd_TextTools = $rt_classWithoutFields();
function cgtd_TextTools_safeSubstring($source, $beginIndex, $endIndex) {
    var var$4, var$5, var$6, var$7, var$8;
    if ($source !== null) {
        var$4 = $source.$characters.data;
        var$5 = var$4.length;
        if (!(var$5 ? 0 : 1)) {
            if ($beginIndex < 0)
                $beginIndex = 0;
            if (!($endIndex >= 0 && $endIndex <= var$5))
                $endIndex = var$5;
            var$6 = $rt_compare($beginIndex, $endIndex);
            if (var$6 >= 0)
                return $rt_s(42);
            if (var$6 > 0) {
                $source = new jl_IndexOutOfBoundsException;
                $source.$suppressionEnabled = 1;
                $source.$writableStackTrace = 1;
                $rt_throw($source);
            }
            if (!var$6) {
                jl_String_$callClinit();
                $source = jl_String_EMPTY;
            } else if (!(!$beginIndex && $endIndex == var$5)) {
                $source = new jl_String;
                $endIndex = $endIndex - $beginIndex | 0;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray($endIndex);
                var$8 = var$7.data;
                $source.$characters = var$7;
                var$6 = 0;
                while (var$6 < $endIndex) {
                    var$8[var$6] = var$4[var$6 + $beginIndex | 0];
                    var$6 = var$6 + 1 | 0;
                }
            }
            return $source;
        }
    }
    return $rt_s(42);
}
var jur_IntArrHash = $rt_classWithoutFields();
var otjb_Storage = $rt_classWithoutFields();
function ju_Arrays$ArrayAsList() {
    ju_AbstractList.call(this);
    this.$array7 = null;
}
var cgtd_BitConversion = $rt_classWithoutFields();
function cgtd_BitConversion_doubleToLongBits($value) {
    return $rt_doubleToLongBits($value);
}
var cbggg_HdpiUtils = $rt_classWithoutFields();
var cbggg_HdpiUtils_mode = null;
function cbggg_HdpiUtils_$callClinit() {
    cbggg_HdpiUtils_$callClinit = $rt_eraseClinit(cbggg_HdpiUtils);
    cbggg_HdpiUtils__clinit_();
}
function cbggg_HdpiUtils_glViewport($x, $y, $width, $height) {
    var var$5;
    cbggg_HdpiUtils_$callClinit();
    a: {
        b: {
            var$5 = cbggg_HdpiUtils_mode;
            cbggg_HdpiMode_$callClinit();
            if (var$5 === cbggg_HdpiMode_Logical) {
                if (cbg_Gdx_graphics.$canvas0.width != cbg_Gdx_graphics.$canvas0.width)
                    break b;
                if (cbg_Gdx_graphics.$canvas0.height != cbg_Gdx_graphics.$canvas0.height)
                    break b;
            }
            cbg_Gdx_gl.$glViewport($x, $y, $width, $height);
            break a;
        }
        cbg_Gdx_gl.$glViewport($rt_imul($x, cbg_Gdx_graphics.$canvas0.width) / cbg_Gdx_graphics.$canvas0.width | 0, $rt_imul($y, cbg_Gdx_graphics.$canvas0.height) / cbg_Gdx_graphics.$canvas0.height | 0, $rt_imul($width, cbg_Gdx_graphics.$canvas0.width) / cbg_Gdx_graphics.$canvas0.width | 0, $rt_imul($height, cbg_Gdx_graphics.$canvas0.height) / cbg_Gdx_graphics.$canvas0.height | 0);
    }
}
function cbggg_HdpiUtils__clinit_() {
    cbggg_HdpiMode_$callClinit();
    cbggg_HdpiUtils_mode = cbggg_HdpiMode_Logical;
}
var cgtd_RyuDouble = $rt_classWithoutFields();
var cgtd_RyuDouble_POW5_SPLIT = null;
var cgtd_RyuDouble_POW5_INV_SPLIT = null;
var cgtd_RyuDouble_result = null;
function cgtd_RyuDouble_$callClinit() {
    cgtd_RyuDouble_$callClinit = $rt_eraseClinit(cgtd_RyuDouble);
    cgtd_RyuDouble__clinit_();
}
function cgtd_RyuDouble_appendDecimal($builder, $value, $lengthLimit) {
    var $bits, $exp, $ieeeExponent, $m2, $e2, $sign, $even, $mv, $mp, $mmShift, $mm, $i, $dmIsTrailingZeros, $dvIsTrailingZeros, $q, $dv, $dp, $dm, $q_0, $i_0, $j, $vplength, $removed, $lastRemovedDigit, $output, $index, $current;
    cgtd_RyuDouble_$callClinit();
    if ($rt_globals.isNaN($value) ? 1 : 0)
        return jl_StringBuilder_append1($builder, $rt_s(655));
    if ($value !== Infinity && $value !== (-Infinity)) {
        $bits = cgtd_BitConversion_doubleToLongBits($value);
        $exp = Long_compare($bits, Long_ZERO);
        if (!$exp)
            return jl_StringBuilder_append1($builder, $rt_s(656));
        if (Long_eq($bits, Long_create(0, 2147483648)))
            return jl_StringBuilder_append1($builder, $rt_s(657));
        $ieeeExponent = Long_lo(Long_and(Long_shru($bits, 52), Long_fromInt(2047)));
        $m2 = Long_and($bits, Long_create(4294967295, 1048575));
        if (!$ieeeExponent)
            $e2 = (-1074);
        else {
            $e2 = ($ieeeExponent - 1023 | 0) - 52 | 0;
            $m2 = Long_or($m2, Long_create(0, 1048576));
        }
        $sign = $exp >= 0 ? 0 : 1;
        $even = Long_ne(Long_and($m2, Long_fromInt(1)), Long_ZERO) ? 0 : 1;
        $mv = Long_mul(Long_fromInt(4), $m2);
        $mp = Long_add($mv, Long_fromInt(2));
        $mmShift = Long_eq($m2, Long_create(0, 1048576)) && $ieeeExponent != 1 ? 0 : 1;
        $mm = Long_sub(Long_sub($mv, Long_fromInt(1)), Long_fromInt($mmShift));
        $i = $e2 + (-2) | 0;
        $dmIsTrailingZeros = 0;
        $dvIsTrailingZeros = 0;
        if ($i >= 0) {
            $q = jl_Math_max(0, (($i * 78913 | 0) >>> 18 | 0) - 1 | 0);
            $i = (( -$i | 0) + $q | 0) + ((122 + cgtd_RyuDouble_pow5bits($q) | 0) - 1 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5InvDivPow2($mv, $q, $i);
            $dp = cgtd_RyuDouble_mulPow5InvDivPow2($mp, $q, $i);
            $dm = cgtd_RyuDouble_mulPow5InvDivPow2($mm, $q, $i);
            if ($q <= 21) {
                if (Long_eq(Long_rem($mv, Long_fromInt(5)), Long_ZERO))
                    $dvIsTrailingZeros = cgtd_RyuDouble_multipleOfPowerOf5($mv, $q);
                else if ($even)
                    $dmIsTrailingZeros = cgtd_RyuDouble_multipleOfPowerOf5($mm, $q);
                else if (cgtd_RyuDouble_multipleOfPowerOf5($mp, $q))
                    $dp = Long_sub($dp, Long_fromInt(1));
            }
        } else {
            $ieeeExponent =  -$i | 0;
            $q_0 = jl_Math_max(0, ($rt_imul($ieeeExponent, 732923) >>> 20 | 0) - 1 | 0);
            $i_0 = $ieeeExponent - $q_0 | 0;
            $j = $q_0 - (cgtd_RyuDouble_pow5bits($i_0) - 121 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5divPow2($mv, $i_0, $j);
            $dp = cgtd_RyuDouble_mulPow5divPow2($mp, $i_0, $j);
            $dm = cgtd_RyuDouble_mulPow5divPow2($mm, $i_0, $j);
            $q = $q_0 + $i | 0;
            if ($q_0 <= 1) {
                $dvIsTrailingZeros = 1;
                if (!$even)
                    $dp = Long_sub($dp, Long_fromInt(1));
                else
                    $dmIsTrailingZeros = $mmShift != 1 ? 0 : 1;
            } else if ($q_0 < 63)
                $dvIsTrailingZeros = Long_ne(Long_and($mv, Long_sub(Long_shl(Long_fromInt(1), $q_0 - 1 | 0), Long_fromInt(1))), Long_ZERO) ? 0 : 1;
        }
        $vplength = cgtd_RyuDouble_decimalLength($dp);
        $exp = ($q + $vplength | 0) - 1 | 0;
        $removed = 0;
        $lastRemovedDigit = 0;
        if (!$dmIsTrailingZeros && !$dvIsTrailingZeros) {
            while (true) {
                $dp = Long_div($dp, Long_fromInt(10));
                $bits = Long_div($dm, Long_fromInt(10));
                if (Long_le($dp, $bits))
                    break;
                $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                $dv = Long_div($dv, Long_fromInt(10));
                $removed = $removed + 1 | 0;
                $dm = $bits;
            }
            $output = Long_add($dv, Long_fromInt(Long_ne($dv, $dm) && $lastRemovedDigit < 5 ? 0 : 1));
        } else {
            while (true) {
                $dp = Long_div($dp, Long_fromInt(10));
                $bits = Long_div($dm, Long_fromInt(10));
                if (Long_le($dp, $bits))
                    break;
                $dmIsTrailingZeros = $dmIsTrailingZeros & (Long_ne(Long_rem($dm, Long_fromInt(10)), Long_ZERO) ? 0 : 1);
                $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                $dv = Long_div($dv, Long_fromInt(10));
                $removed = $removed + 1 | 0;
                $dm = $bits;
            }
            if ($dmIsTrailingZeros)
                while (Long_eq(Long_rem($dm, Long_fromInt(10)), Long_ZERO)) {
                    $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                    $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                    $dv = Long_div($dv, Long_fromInt(10));
                    $dm = Long_div($dm, Long_fromInt(10));
                    $removed = $removed + 1 | 0;
                }
            if ($dvIsTrailingZeros && $lastRemovedDigit == 5 && Long_eq(Long_and($dv, Long_fromInt(1)), Long_ZERO))
                $lastRemovedDigit = 4;
            $output = Long_add($dv, Long_fromInt(!(Long_eq($dv, $dm) && !$dmIsTrailingZeros) && $lastRemovedDigit < 5 ? 0 : 1));
        }
        $i = $vplength - $removed | 0;
        $index = jl_StringBuilder_length($builder);
        if ($sign)
            jl_StringBuilder_append3($builder, 45);
        a: {
            if ($exp < 0) {
                jl_StringBuilder_append1($builder, $rt_s(658));
                $i_0 = (-1);
                while ($i_0 > $exp) {
                    jl_StringBuilder_append3($builder, 48);
                    $i_0 = $i_0 + (-1) | 0;
                }
                $current = jl_StringBuilder_length($builder);
                $i_0 = 0;
                while ($i_0 < $i) {
                    jl_StringBuilder_insert1($builder, $current, Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535);
                    $output = Long_div($output, Long_fromInt(10));
                    $i_0 = $i_0 + 1 | 0;
                }
            } else {
                $ieeeExponent = $exp + 1 | 0;
                if ($ieeeExponent >= $i) {
                    $exp = jl_StringBuilder_length($builder);
                    $i_0 = 0;
                    while ($i_0 < $i) {
                        jl_StringBuilder_insert1($builder, $exp, Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535);
                        $output = Long_div($output, Long_fromInt(10));
                        $i_0 = $i_0 + 1 | 0;
                    }
                    while ($i < $ieeeExponent) {
                        jl_StringBuilder_append3($builder, 48);
                        $i = $i + 1 | 0;
                    }
                    jl_StringBuilder_append1($builder, $rt_s(659));
                } else {
                    $current = jl_StringBuilder_length($builder);
                    $i_0 = 0;
                    while (true) {
                        if ($i_0 >= $i)
                            break a;
                        if ((($i - $i_0 | 0) - 1 | 0) == $exp)
                            jl_StringBuilder_insert1($builder, $current, 46);
                        jl_StringBuilder_insert1($builder, $current, Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535);
                        $output = Long_div($output, Long_fromInt(10));
                        $i_0 = $i_0 + 1 | 0;
                    }
                }
            }
        }
        if ($lengthLimit != (-10000)) {
            while ($removed >= (-1)) {
                jl_StringBuilder_append3($builder, 48);
                $removed = $removed + (-1) | 0;
            }
            if (Long_lt(Long_add(Long_fromInt($index), Long_fromInt($lengthLimit)), Long_fromInt(jl_StringBuilder_length($builder))))
                jl_StringBuilder_setLength($builder, $index + $lengthLimit | 0);
        }
        return $builder;
    }
    if ($value === (-Infinity))
        jl_StringBuilder_append3($builder, 45);
    return jl_StringBuilder_append1($builder, $rt_s(660));
}
function cgtd_RyuDouble_pow5bits($e) {
    cgtd_RyuDouble_$callClinit();
    return ($rt_imul($e, 1217359) >>> 19 | 0) + 1 | 0;
}
function cgtd_RyuDouble_decimalLength($v) {
    cgtd_RyuDouble_$callClinit();
    if (Long_ge($v, Long_create(2808348672, 232830643)))
        return 19;
    if (Long_ge($v, Long_create(1569325056, 23283064)))
        return 18;
    if (Long_ge($v, Long_create(1874919424, 2328306)))
        return 17;
    if (Long_ge($v, Long_create(2764472320, 232830)))
        return 16;
    if (Long_ge($v, Long_create(276447232, 23283)))
        return 15;
    if (Long_ge($v, Long_create(1316134912, 2328)))
        return 14;
    if (Long_ge($v, Long_create(3567587328, 232)))
        return 13;
    if (Long_ge($v, Long_create(1215752192, 23)))
        return 12;
    if (Long_ge($v, Long_create(1410065408, 2)))
        return 11;
    if (Long_ge($v, Long_fromInt(1000000000)))
        return 10;
    if (Long_ge($v, Long_fromInt(100000000)))
        return 9;
    if (Long_ge($v, Long_fromInt(10000000)))
        return 8;
    if (Long_ge($v, Long_fromInt(1000000)))
        return 7;
    if (Long_ge($v, Long_fromInt(100000)))
        return 6;
    if (Long_ge($v, Long_fromInt(10000)))
        return 5;
    if (Long_ge($v, Long_fromInt(1000)))
        return 4;
    if (Long_ge($v, Long_fromInt(100)))
        return 3;
    if (Long_lt($v, Long_fromInt(10)))
        return 1;
    return 2;
}
function cgtd_RyuDouble_multipleOfPowerOf5($value, $q) {
    cgtd_RyuDouble_$callClinit();
    return cgtd_RyuDouble_pow5Factor($value) < $q ? 0 : 1;
}
function cgtd_RyuDouble_pow5Factor($value) {
    var $count, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgtd_RyuDouble_$callClinit();
    if (Long_ne(Long_rem($value, Long_fromInt(5)), Long_ZERO))
        return 0;
    if (Long_ne(Long_rem($value, Long_fromInt(25)), Long_ZERO))
        return 1;
    if (Long_ne(Long_rem($value, Long_fromInt(125)), Long_ZERO))
        return 2;
    if (Long_ne(Long_rem($value, Long_fromInt(625)), Long_ZERO))
        return 3;
    $count = 4;
    $value = Long_div($value, Long_fromInt(625));
    while (true) {
        if (Long_le($value, Long_ZERO)) {
            var$3 = new jl_IllegalArgumentException;
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(42));
            jl_AbstractStringBuilder_insert2(var$4, var$4.$length, $value, 10);
            var$5 = new jl_String;
            var$6 = var$4.$buffer;
            var$7 = var$4.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray(var$7);
            var$9 = var$8.data;
            var$5.$characters = var$8;
            var$10 = 0;
            while (var$10 < var$7) {
                var$9[var$10] = var$6.data[var$10 + 0 | 0];
                var$10 = var$10 + 1 | 0;
            }
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = var$5;
            $rt_throw(var$3);
        }
        if (Long_ne(Long_rem($value, Long_fromInt(5)), Long_ZERO))
            break;
        $value = Long_div($value, Long_fromInt(5));
        $count = $count + 1 | 0;
    }
    return $count;
}
function cgtd_RyuDouble_mulPow5divPow2($m, $i, $j) {
    var $mHigh, $mLow, var$6, $bits13, $bits03, $bits12, $bits02, $bits11, $bits01, $bits10, $bits00, $actualShift, var$16, var$17, var$18, var$19, var$20;
    cgtd_RyuDouble_$callClinit();
    $mHigh = Long_shru($m, 31);
    $mLow = Long_and($m, Long_fromInt(2147483647));
    var$6 = cgtd_RyuDouble_POW5_SPLIT.data;
    $bits13 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[0]));
    $bits03 = Long_mul($mLow, Long_fromInt(var$6[$i].data[0]));
    $bits12 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[1]));
    $bits02 = Long_mul($mLow, Long_fromInt(var$6[$i].data[1]));
    $bits11 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[2]));
    $bits01 = Long_mul($mLow, Long_fromInt(var$6[$i].data[2]));
    $bits10 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[3]));
    $bits00 = Long_mul($mLow, Long_fromInt(var$6[$i].data[3]));
    $actualShift = ($j - 93 | 0) - 21 | 0;
    if ($actualShift >= 0)
        return Long_shru(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru($bits00, 31), $bits01), $bits10), 31), $bits02), $bits11), 31), $bits03), $bits12), 21), Long_shl($bits13, 10)), $actualShift);
    var$16 = new jl_IllegalArgumentException;
    var$17 = new jl_StringBuilder;
    var$17.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$17, var$17.$length, $rt_s(42));
    jl_AbstractStringBuilder_insert0(var$17, var$17.$length, $actualShift, 10);
    var$18 = new jl_String;
    var$6 = var$17.$buffer;
    $j = var$17.$length;
    jl_String_$callClinit();
    var$19 = $rt_createCharArray($j);
    var$20 = var$19.data;
    var$18.$characters = var$19;
    $actualShift = 0;
    while ($actualShift < $j) {
        var$20[$actualShift] = var$6.data[$actualShift + 0 | 0];
        $actualShift = $actualShift + 1 | 0;
    }
    var$16.$suppressionEnabled = 1;
    var$16.$writableStackTrace = 1;
    var$16.$message = var$18;
    $rt_throw(var$16);
}
function cgtd_RyuDouble_mulPow5InvDivPow2($m, $i, $j) {
    var $mHigh, $mLow, var$6, $bits13, $bits03, $bits12, $bits02, $bits11, $bits01, $bits10, $bits00, $actualShift, var$16, var$17, var$18, var$19, var$20;
    cgtd_RyuDouble_$callClinit();
    $mHigh = Long_shru($m, 31);
    $mLow = Long_and($m, Long_fromInt(2147483647));
    var$6 = cgtd_RyuDouble_POW5_INV_SPLIT.data;
    $bits13 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[0]));
    $bits03 = Long_mul($mLow, Long_fromInt(var$6[$i].data[0]));
    $bits12 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[1]));
    $bits02 = Long_mul($mLow, Long_fromInt(var$6[$i].data[1]));
    $bits11 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[2]));
    $bits01 = Long_mul($mLow, Long_fromInt(var$6[$i].data[2]));
    $bits10 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[3]));
    $bits00 = Long_mul($mLow, Long_fromInt(var$6[$i].data[3]));
    $actualShift = ($j - 93 | 0) - 21 | 0;
    if ($actualShift >= 0)
        return Long_shru(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru($bits00, 31), $bits01), $bits10), 31), $bits02), $bits11), 31), $bits03), $bits12), 21), Long_shl($bits13, 10)), $actualShift);
    var$16 = new jl_IllegalArgumentException;
    var$17 = new jl_StringBuilder;
    var$17.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$17, var$17.$length, $rt_s(42));
    jl_AbstractStringBuilder_insert0(var$17, var$17.$length, $actualShift, 10);
    var$18 = new jl_String;
    var$6 = var$17.$buffer;
    $j = var$17.$length;
    jl_String_$callClinit();
    var$19 = $rt_createCharArray($j);
    var$20 = var$19.data;
    var$18.$characters = var$19;
    $actualShift = 0;
    while ($actualShift < $j) {
        var$20[$actualShift] = var$6.data[$actualShift + 0 | 0];
        $actualShift = $actualShift + 1 | 0;
    }
    var$16.$suppressionEnabled = 1;
    var$16.$writableStackTrace = 1;
    var$16.$message = var$18;
    $rt_throw(var$16);
}
function cgtd_RyuDouble__clinit_() {
    var $inv, $k, var$3, $invMask, $expectedPow5Bits, $mask, $i, $pow, $pow5len, var$10, var$11, $j, var$13, $j_0;
    cgtd_RyuDouble_POW5_SPLIT = $rt_createIntMultiArray([4, 326]);
    cgtd_RyuDouble_POW5_INV_SPLIT = $rt_createIntMultiArray([4, 291]);
    cgtd_RyuDouble_result = $rt_createCharArray(32);
    jm_BigInteger_$callClinit();
    $inv = jm_BigInteger_ONE;
    if ($inv.$sign1) {
        $k = ($inv.$numberLength + 0 | 0) + 1 | 0;
        var$3 = $rt_createIntArray($k);
        jm_BitLevel_shiftLeft(var$3, $inv.$digits, 0, 31);
        $invMask = new jm_BigInteger;
        $expectedPow5Bits = $inv.$sign1;
        $invMask.$firstNonzeroDigit = (-2);
        $invMask.$sign1 = $expectedPow5Bits;
        $invMask.$numberLength = $k;
        $invMask.$digits = var$3;
        jm_BigInteger_cutOffLeadingZeroes($invMask);
        $inv = $invMask;
    }
    $mask = jm_Elementary_subtract($inv, jm_BigInteger_ONE);
    $invMask = jm_BigInteger_ONE;
    if ($invMask.$sign1) {
        $k = ($invMask.$numberLength + 0 | 0) + 1 | 0;
        var$3 = $rt_createIntArray($k);
        jm_BitLevel_shiftLeft(var$3, $invMask.$digits, 0, 31);
        $inv = new jm_BigInteger;
        $expectedPow5Bits = $invMask.$sign1;
        $inv.$firstNonzeroDigit = (-2);
        $inv.$sign1 = $expectedPow5Bits;
        $inv.$numberLength = $k;
        $inv.$digits = var$3;
        jm_BigInteger_cutOffLeadingZeroes($inv);
        $invMask = $inv;
    }
    $invMask = jm_Elementary_subtract($invMask, jm_BigInteger_ONE);
    $i = 0;
    while ($i < 326) {
        $pow = jm_BigInteger_pow(jm_BigInteger_valueOf(Long_fromInt(5)), $i);
        $pow5len = jm_BitLevel_bitLength($pow);
        cgtd_RyuDouble_$callClinit();
        $expectedPow5Bits = ($rt_imul($i, 1217359) >>> 19 | 0) + 1 | 0;
        if ($expectedPow5Bits != $pow5len) {
            $inv = new jl_IllegalStateException;
            $invMask = new jl_StringBuilder;
            $invMask.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0($invMask, $invMask.$length, $pow5len, 10);
            jl_AbstractStringBuilder_insert($invMask, $invMask.$length, $rt_s(661));
            jl_AbstractStringBuilder_insert0($invMask, $invMask.$length, $expectedPow5Bits, 10);
            $mask = new jl_String;
            var$3 = $invMask.$buffer;
            $i = $invMask.$length;
            jl_String_$callClinit();
            var$10 = $rt_createCharArray($i);
            var$11 = var$10.data;
            $mask.$characters = var$10;
            $k = 0;
            while ($k < $i) {
                var$11[$k] = var$3.data[$k + 0 | 0];
                $k = $k + 1 | 0;
            }
            $inv.$suppressionEnabled = 1;
            $inv.$writableStackTrace = 1;
            $inv.$message = $mask;
            $rt_throw($inv);
        }
        $j = 0;
        var$13 = $pow5len - 121 | 0;
        while ($j < 4) {
            var$11 = cgtd_RyuDouble_POW5_SPLIT.data[$i];
            $expectedPow5Bits = var$13 + ((3 - $j | 0) * 31 | 0) | 0;
            if ($expectedPow5Bits && $pow.$sign1) {
                if ($expectedPow5Bits > 0)
                    $inv = jm_BitLevel_shiftRight($pow, $expectedPow5Bits);
                else {
                    $expectedPow5Bits =  -$expectedPow5Bits | 0;
                    $k = $expectedPow5Bits >> 5;
                    $j_0 = $expectedPow5Bits & 31;
                    $expectedPow5Bits = ($pow.$numberLength + $k | 0) + ($j_0 ? 1 : 0) | 0;
                    var$3 = $rt_createIntArray($expectedPow5Bits);
                    jm_BitLevel_shiftLeft(var$3, $pow.$digits, $k, $j_0);
                    $inv = new jm_BigInteger;
                    $k = $pow.$sign1;
                    $inv.$firstNonzeroDigit = (-2);
                    $inv.$sign1 = $k;
                    $inv.$numberLength = $expectedPow5Bits;
                    $inv.$digits = var$3;
                    jm_BigInteger_cutOffLeadingZeroes($inv);
                }
            } else
                $inv = $pow;
            var$3 = var$11.data;
            $inv = jm_Logical_and($inv, $mask);
            var$3[$j] = $rt_imul($inv.$sign1, $inv.$digits.data[0]);
            $j = $j + 1 | 0;
        }
        a: {
            if ($i < cgtd_RyuDouble_POW5_INV_SPLIT.data.length) {
                $j_0 = ($pow5len - 1 | 0) + 122 | 0;
                $inv = jm_Elementary_add(jm_BigInteger_divide(jm_BigInteger_shiftLeft(jm_BigInteger_ONE, $j_0), $pow), jm_BigInteger_ONE);
                $k = 0;
                while (true) {
                    if ($k >= 4)
                        break a;
                    if (!$k)
                        cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[$k] = jm_BigInteger_intValue(jm_BigInteger_shiftRight($inv, (3 - $k | 0) * 31 | 0));
                    else
                        cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[$k] = jm_BigInteger_intValue(jm_Logical_and(jm_BigInteger_shiftRight($inv, (3 - $k | 0) * 31 | 0), $invMask));
                    $k = $k + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
}
var ji_InputStream = $rt_classWithoutFields();
function ji_InputStream_read($this, $b, $off, $len) {
    var $i, $bt, var$6, var$7;
    $i = 0;
    while ($i < $len) {
        $bt = $this.$read4();
        if ($bt < 0) {
            if (!$i)
                $i = (-1);
            return $i;
        }
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$6[$off] = $bt << 24 >> 24;
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($len <= 0)
        $len = (-1);
    return $len;
}
function ji_InputStream_close($this) {}
function ji_ByteArrayInputStream() {
    var a = this; ji_InputStream.call(a);
    a.$buf = null;
    a.$pos = 0;
    a.$mark0 = 0;
    a.$count0 = 0;
}
function ji_ByteArrayInputStream__init_(var_0) {
    var var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_ByteArrayInputStream__init_0($this, $buf) {
    var var$2;
    var$2 = $buf.data.length;
    $this.$buf = $buf;
    $this.$pos = 0;
    $this.$mark0 = 0;
    $this.$count0 = 0 + var$2 | 0;
}
function ji_ByteArrayInputStream_read($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$pos;
    if (var$1 >= $this.$count0)
        var$2 = (-1);
    else {
        var$3 = $this.$buf.data;
        $this.$pos = var$1 + 1 | 0;
        var$2 = var$3[var$1] & 255;
    }
    return var$2;
}
function ji_ByteArrayInputStream_read0($this, $b, $off, $bytesToRead) {
    var $bytesToRead_0, $i, var$6, var$7, var$8;
    $bytesToRead_0 = $this.$count0 - $this.$pos | 0;
    if ($bytesToRead < $bytesToRead_0)
        $bytesToRead_0 = $bytesToRead;
    $i = 0;
    while ($i < $bytesToRead_0) {
        var$6 = $b.data;
        $bytesToRead = $off + 1 | 0;
        var$7 = $this.$buf.data;
        var$8 = $this.$pos;
        $this.$pos = var$8 + 1 | 0;
        var$6[$off] = var$7[var$8];
        $i = $i + 1 | 0;
        $off = $bytesToRead;
    }
    if ($bytesToRead_0 <= 0)
        $bytesToRead_0 = (-1);
    return $bytesToRead_0;
}
function ji_ByteArrayInputStream_close($this) {}
var ji_UnsupportedEncodingException = $rt_classWithoutFields(ji_IOException);
var cbggg_HdpiMode = $rt_classWithoutFields(jl_Enum);
var cbggg_HdpiMode_Logical = null;
var cbggg_HdpiMode_Pixels = null;
var cbggg_HdpiMode_$VALUES = null;
function cbggg_HdpiMode_$callClinit() {
    cbggg_HdpiMode_$callClinit = $rt_eraseClinit(cbggg_HdpiMode);
    cbggg_HdpiMode__clinit_();
}
function cbggg_HdpiMode__clinit_() {
    var var$1, var$2;
    var$1 = new cbggg_HdpiMode;
    cbggg_HdpiMode_$callClinit();
    var$1.$name0 = $rt_s(662);
    var$1.$ordinal = 0;
    cbggg_HdpiMode_Logical = var$1;
    var$2 = new cbggg_HdpiMode;
    var$2.$name0 = $rt_s(663);
    var$2.$ordinal = 1;
    cbggg_HdpiMode_Pixels = var$2;
    cbggg_HdpiMode_$VALUES = $rt_createArrayFromData(cbggg_HdpiMode, [var$1, var$2]);
}
function jm_BigInteger() {
    var a = this; jl_Number.call(a);
    a.$digits = null;
    a.$numberLength = 0;
    a.$sign1 = 0;
    a.$firstNonzeroDigit = 0;
}
var jm_BigInteger_ZERO = null;
var jm_BigInteger_ONE = null;
var jm_BigInteger_TEN = null;
var jm_BigInteger_MINUS_ONE = null;
var jm_BigInteger_SMALL_VALUES = null;
var jm_BigInteger_TWO_POWS = null;
function jm_BigInteger_$callClinit() {
    jm_BigInteger_$callClinit = $rt_eraseClinit(jm_BigInteger);
    jm_BigInteger__clinit_();
}
function jm_BigInteger__init_(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_0(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_1(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_2(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_0($this, $sign, $val) {
    var var$3;
    jm_BigInteger_$callClinit();
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    if (Long_eq(Long_and($val, Long_create(0, 4294967295)), Long_ZERO)) {
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = Long_lo($val);
        $this.$digits = var$3;
    } else {
        $this.$numberLength = 2;
        $this.$digits = $rt_createIntArrayFromData([Long_lo($val), Long_hi($val)]);
    }
}
function jm_BigInteger__init_2($this, $signum, $digits) {
    var var$3, var$4;
    jm_BigInteger_$callClinit();
    var$3 = $digits.data;
    $this.$firstNonzeroDigit = (-2);
    var$4 = var$3.length;
    if (var$4) {
        $this.$sign1 = $signum;
        $this.$numberLength = var$4;
        $this.$digits = $digits;
        jm_BigInteger_cutOffLeadingZeroes($this);
    } else {
        $this.$sign1 = 0;
        $this.$numberLength = 1;
        $digits = $rt_createIntArray(1);
        $digits.data[0] = 0;
        $this.$digits = $digits;
    }
}
function jm_BigInteger_valueOf($val) {
    jm_BigInteger_$callClinit();
    if (Long_lt($val, Long_ZERO)) {
        if (Long_eq($val, Long_fromInt(-1)))
            return jm_BigInteger_MINUS_ONE;
        return jm_BigInteger__init_((-1), Long_neg($val));
    }
    if (Long_gt($val, Long_fromInt(10)))
        return jm_BigInteger__init_(1, $val);
    return jm_BigInteger_SMALL_VALUES.data[Long_lo($val)];
}
function jm_BigInteger_shiftRight($this, $n) {
    var var$2, var$3, var$4, var$5;
    if ($n && $this.$sign1) {
        if ($n > 0)
            var$2 = jm_BitLevel_shiftRight($this, $n);
        else {
            $n =  -$n | 0;
            var$3 = $n >> 5;
            $n = $n & 31;
            var$4 = ($this.$numberLength + var$3 | 0) + ($n ? 1 : 0) | 0;
            var$5 = $rt_createIntArray(var$4);
            jm_BitLevel_shiftLeft(var$5, $this.$digits, var$3, $n);
            var$2 = new jm_BigInteger;
            $n = $this.$sign1;
            jm_BigInteger_$callClinit();
            var$2.$firstNonzeroDigit = (-2);
            var$2.$sign1 = $n;
            var$2.$numberLength = var$4;
            var$2.$digits = var$5;
            jm_BigInteger_cutOffLeadingZeroes(var$2);
        }
        return var$2;
    }
    return $this;
}
function jm_BigInteger_shiftLeft($this, $n) {
    var var$2, var$3, var$4, var$5;
    if ($n && $this.$sign1) {
        if ($n <= 0)
            var$2 = jm_BitLevel_shiftRight($this,  -$n | 0);
        else {
            var$3 = $n >> 5;
            $n = $n & 31;
            var$4 = ($this.$numberLength + var$3 | 0) + ($n ? 1 : 0) | 0;
            var$5 = $rt_createIntArray(var$4);
            jm_BitLevel_shiftLeft(var$5, $this.$digits, var$3, $n);
            var$2 = new jm_BigInteger;
            $n = $this.$sign1;
            jm_BigInteger_$callClinit();
            var$2.$firstNonzeroDigit = (-2);
            var$2.$sign1 = $n;
            var$2.$numberLength = var$4;
            var$2.$digits = var$5;
            jm_BigInteger_cutOffLeadingZeroes(var$2);
        }
        return var$2;
    }
    return $this;
}
function jm_BigInteger_testBit($this, $n) {
    var var$2, $intCount, var$4, $digit, var$6, $firstNonZeroDigit;
    if (!$n)
        return !($this.$digits.data[0] & 1) ? 0 : 1;
    if ($n < 0) {
        var$2 = new jl_ArithmeticException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(664);
        $rt_throw(var$2);
    }
    $intCount = $n >> 5;
    if ($intCount >= $this.$numberLength)
        return $this.$sign1 >= 0 ? 0 : 1;
    var$4 = $this.$digits.data;
    $digit = var$4[$intCount];
    $n = 1 << ($n & 31);
    var$6 = $this.$sign1;
    if (var$6 < 0) {
        if ($this.$firstNonzeroDigit == (-2)) {
            if (!var$6)
                var$6 = (-1);
            else {
                var$6 = 0;
                while (!var$4[var$6]) {
                    var$6 = var$6 + 1 | 0;
                }
            }
            $this.$firstNonzeroDigit = var$6;
        }
        $firstNonZeroDigit = $this.$firstNonzeroDigit;
        if ($intCount < $firstNonZeroDigit)
            return 0;
        $digit = $firstNonZeroDigit == $intCount ?  -$digit | 0 : $digit ^ (-1);
    }
    return !($digit & $n) ? 0 : 1;
}
function jm_BigInteger_intValue($this) {
    return $rt_imul($this.$sign1, $this.$digits.data[0]);
}
function jm_BigInteger_equals($this, $x1) {
    var var$2, var$3, var$4;
    if ($this === $x1)
        return 1;
    if (!($x1 instanceof jm_BigInteger))
        return 0;
    a: {
        if ($this.$sign1 == $x1.$sign1) {
            var$2 = $this.$numberLength;
            if (var$2 == $x1.$numberLength) {
                var$3 = $x1.$digits;
                var$2 = var$2 - 1 | 0;
                while (var$2 >= 0) {
                    var$4 = var$3.data;
                    if ($this.$digits.data[var$2] != var$4[var$2])
                        break;
                    var$2 = var$2 + (-1) | 0;
                }
                if (var$2 >= 0 ? 0 : 1) {
                    var$2 = 1;
                    break a;
                }
            }
        }
        var$2 = 0;
    }
    return var$2;
}
function jm_BigInteger_pow($this, $exp) {
    var var$2, $x, var$4, var$5, var$6, var$7;
    if ($exp < 0) {
        var$2 = new jl_ArithmeticException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(665);
        $rt_throw(var$2);
    }
    if (!$exp) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ONE;
    }
    if ($exp != 1) {
        jm_BigInteger_$callClinit();
        if (!jm_BigInteger_equals($this, jm_BigInteger_ONE) && !jm_BigInteger_equals($this, jm_BigInteger_ZERO)) {
            if (jm_BigInteger_testBit($this, 0))
                return jm_Multiplication_pow($this, $exp);
            $x = 1;
            while (!jm_BigInteger_testBit($this, $x)) {
                $x = $x + 1 | 0;
            }
            var$2 = jm_BigInteger_getPowerOfTwo($rt_imul($x, $exp));
            if ($x && $this.$sign1) {
                if ($x > 0)
                    $this = jm_BitLevel_shiftRight($this, $x);
                else {
                    $x =  -$x | 0;
                    var$4 = $x >> 5;
                    $x = $x & 31;
                    var$5 = ($this.$numberLength + var$4 | 0) + ($x ? 1 : 0) | 0;
                    var$6 = $rt_createIntArray(var$5);
                    jm_BitLevel_shiftLeft(var$6, $this.$digits, var$4, $x);
                    var$7 = new jm_BigInteger;
                    $x = $this.$sign1;
                    var$7.$firstNonzeroDigit = (-2);
                    var$7.$sign1 = $x;
                    var$7.$numberLength = var$5;
                    var$7.$digits = var$6;
                    jm_BigInteger_cutOffLeadingZeroes(var$7);
                    $this = var$7;
                }
            }
            var$7 = jm_BigInteger_pow($this, $exp);
            if (!var$7.$sign1)
                var$2 = jm_BigInteger_ZERO;
            else if (!var$2.$sign1)
                var$2 = jm_BigInteger_ZERO;
            else {
                jm_Multiplication_$callClinit();
                var$2 = jm_Multiplication_karatsuba(var$2, var$7);
            }
            return var$2;
        }
    }
    return $this;
}
function jm_BigInteger_divide($this, $divisor) {
    var $divisorSign, $divisorLen, var$4, $thisSign, $resDigits, $thisLen, $val, $cmp, $resLength, $resSign, $result;
    $divisorSign = $divisor.$sign1;
    if (!$divisorSign) {
        $divisor = new jl_ArithmeticException;
        $divisor.$suppressionEnabled = 1;
        $divisor.$writableStackTrace = 1;
        $divisor.$message = $rt_s(666);
        $rt_throw($divisor);
    }
    $divisorLen = $divisor.$numberLength;
    var$4 = $rt_compare($divisorLen, 1);
    if (!var$4 && $divisor.$digits.data[0] == 1 ? 1 : 0) {
        if ($divisorSign <= 0) {
            $divisorSign = $this.$sign1;
            if (!$divisorSign)
                $divisor = $this;
            else {
                $divisor = new jm_BigInteger;
                $divisorSign =  -$divisorSign | 0;
                $thisSign = $this.$numberLength;
                $resDigits = $this.$digits;
                jm_BigInteger_$callClinit();
                $divisor.$firstNonzeroDigit = (-2);
                $divisor.$sign1 = $divisorSign;
                $divisor.$numberLength = $thisSign;
                $divisor.$digits = $resDigits;
            }
            $this = $divisor;
        }
        return $this;
    }
    $thisSign = $this.$sign1;
    $thisLen = $this.$numberLength;
    if (($thisLen + $divisorLen | 0) == 2) {
        $val = Long_div(Long_and(Long_fromInt($this.$digits.data[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($divisor.$digits.data[0]), Long_create(4294967295, 0)));
        if ($thisSign != $divisorSign)
            $val = Long_neg($val);
        return jm_BigInteger_valueOf($val);
    }
    $cmp = $rt_compare($thisLen, $divisorLen);
    $cmp = !$cmp ? jm_Elementary_compareArrays($this.$digits, $divisor.$digits, $thisLen) : $cmp <= 0 ? (-1) : 1;
    if (!$cmp) {
        if ($thisSign != $divisorSign) {
            jm_BigInteger_$callClinit();
            $divisor = jm_BigInteger_MINUS_ONE;
        } else {
            jm_BigInteger_$callClinit();
            $divisor = jm_BigInteger_ONE;
        }
        return $divisor;
    }
    if ($cmp == (-1)) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ZERO;
    }
    $resLength = ($thisLen - $divisorLen | 0) + 1 | 0;
    $resDigits = $rt_createIntArray($resLength);
    $resSign = $thisSign != $divisorSign ? (-1) : 1;
    if (var$4)
        jm_Division_divide($resDigits, $resLength, $this.$digits, $thisLen, $divisor.$digits, $divisorLen);
    else
        jm_Division_divideArrayByInt($resDigits, $this.$digits, $thisLen, $divisor.$digits.data[0]);
    $result = new jm_BigInteger;
    jm_BigInteger_$callClinit();
    $result.$firstNonzeroDigit = (-2);
    $result.$sign1 = $resSign;
    $result.$numberLength = $resLength;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BigInteger_cutOffLeadingZeroes($this) {
    var var$1, var$2, var$3;
    while (true) {
        var$1 = $this.$numberLength;
        if (var$1 <= 0)
            break;
        var$2 = $this.$digits.data;
        var$1 = var$1 - 1 | 0;
        $this.$numberLength = var$1;
        if (var$2[var$1])
            break;
    }
    var$2 = $this.$digits.data;
    var$3 = $this.$numberLength;
    $this.$numberLength = var$3 + 1 | 0;
    if (!var$2[var$3])
        $this.$sign1 = 0;
}
function jm_BigInteger_getPowerOfTwo($exp) {
    var $resDigits, $intCount, $bitN, var$5, var$6;
    jm_BigInteger_$callClinit();
    $resDigits = jm_BigInteger_TWO_POWS.data;
    if ($exp < $resDigits.length)
        return $resDigits[$exp];
    $intCount = $exp >> 5;
    $bitN = $exp & 31;
    var$5 = $intCount + 1 | 0;
    $resDigits = $rt_createIntArray(var$5);
    $resDigits.data[$intCount] = 1 << $bitN;
    var$6 = new jm_BigInteger;
    var$6.$firstNonzeroDigit = (-2);
    var$6.$sign1 = 1;
    var$6.$numberLength = var$5;
    var$6.$digits = $resDigits;
    return var$6;
}
function jm_BigInteger__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, $i;
    var$1 = new jm_BigInteger;
    jm_BigInteger_$callClinit();
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 0;
    var$1.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 0;
    var$1.$digits = var$2;
    jm_BigInteger_ZERO = var$1;
    var$3 = new jm_BigInteger;
    var$3.$firstNonzeroDigit = (-2);
    var$3.$sign1 = 1;
    var$3.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 1;
    var$3.$digits = var$2;
    jm_BigInteger_ONE = var$3;
    var$4 = new jm_BigInteger;
    var$4.$firstNonzeroDigit = (-2);
    var$4.$sign1 = 1;
    var$4.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 10;
    var$4.$digits = var$2;
    jm_BigInteger_TEN = var$4;
    var$5 = new jm_BigInteger;
    var$5.$firstNonzeroDigit = (-2);
    var$5.$sign1 = (-1);
    var$5.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 1;
    var$5.$digits = var$2;
    jm_BigInteger_MINUS_ONE = var$5;
    var$2 = $rt_createArray(jm_BigInteger, 11);
    var$6 = var$2.data;
    var$6[0] = var$1;
    var$6[1] = var$3;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 2;
    var$1.$digits = var$7;
    var$6[2] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 3;
    var$1.$digits = var$7;
    var$6[3] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 4;
    var$1.$digits = var$7;
    var$6[4] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 5;
    var$1.$digits = var$7;
    var$6[5] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 6;
    var$1.$digits = var$7;
    var$6[6] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 7;
    var$1.$digits = var$7;
    var$6[7] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 8;
    var$1.$digits = var$7;
    var$6[8] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign1 = 1;
    var$1.$numberLength = 1;
    var$7 = $rt_createIntArray(1);
    var$7.data[0] = 9;
    var$1.$digits = var$7;
    var$6[9] = var$1;
    var$6[10] = var$4;
    jm_BigInteger_SMALL_VALUES = var$2;
    jm_BigInteger_TWO_POWS = $rt_createArray(jm_BigInteger, 32);
    $i = 0;
    while (true) {
        var$2 = jm_BigInteger_TWO_POWS.data;
        if ($i >= var$2.length)
            break;
        var$2[$i] = jm_BigInteger_valueOf(Long_shl(Long_fromInt(1), $i));
        $i = $i + 1 | 0;
    }
}
var jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error);
var jl_ArithmeticException = $rt_classWithoutFields(jl_RuntimeException);
var jm_Multiplication = $rt_classWithoutFields();
var jm_Multiplication_tenPows = null;
var jm_Multiplication_fivePows = null;
var jm_Multiplication_bigTenPows = null;
var jm_Multiplication_bigFivePows = null;
function jm_Multiplication_$callClinit() {
    jm_Multiplication_$callClinit = $rt_eraseClinit(jm_Multiplication);
    jm_Multiplication__clinit_();
}
function jm_Multiplication_karatsuba($op1, $op2) {
    var $upperOp1, var$4, $ndiv2, var$6, var$7, var$8, $upperOp2, $upper, $lowerOp1, $lowerOp2, $lower;
    jm_Multiplication_$callClinit();
    if ($op2.$numberLength <= $op1.$numberLength) {
        $upperOp1 = $op2;
        $op2 = $op1;
        $op1 = $upperOp1;
    }
    if ($op1.$numberLength < 63)
        return jm_Multiplication_multiplyPAP($op2, $op1);
    var$4 = $op2.$numberLength;
    $ndiv2 = (var$4 & (-2)) << 4;
    if ($ndiv2 && $op2.$sign1) {
        if ($ndiv2 > 0)
            $upperOp1 = jm_BitLevel_shiftRight($op2, $ndiv2);
        else {
            var$6 =  -$ndiv2 | 0;
            var$7 = var$6 >> 5;
            var$6 = var$6 & 31;
            var$4 = (var$4 + var$7 | 0) + (var$6 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$4);
            jm_BitLevel_shiftLeft(var$8, $op2.$digits, var$7, var$6);
            $upperOp1 = new jm_BigInteger;
            var$7 = $op2.$sign1;
            jm_BigInteger_$callClinit();
            $upperOp1.$firstNonzeroDigit = (-2);
            $upperOp1.$sign1 = var$7;
            $upperOp1.$numberLength = var$4;
            $upperOp1.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($upperOp1);
        }
    } else
        $upperOp1 = $op2;
    if ($ndiv2 && $op1.$sign1) {
        if ($ndiv2 > 0)
            $upperOp2 = jm_BitLevel_shiftRight($op1, $ndiv2);
        else {
            var$4 =  -$ndiv2 | 0;
            var$7 = var$4 >> 5;
            var$4 = var$4 & 31;
            var$6 = ($op1.$numberLength + var$7 | 0) + (var$4 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $op1.$digits, var$7, var$4);
            $upperOp2 = new jm_BigInteger;
            var$4 = $op1.$sign1;
            jm_BigInteger_$callClinit();
            $upperOp2.$firstNonzeroDigit = (-2);
            $upperOp2.$sign1 = var$4;
            $upperOp2.$numberLength = var$6;
            $upperOp2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($upperOp2);
        }
    } else
        $upperOp2 = $op1;
    if ($ndiv2 && $upperOp1.$sign1) {
        if ($ndiv2 <= 0)
            $upper = jm_BitLevel_shiftRight($upperOp1,  -$ndiv2 | 0);
        else {
            var$4 = $ndiv2 >> 5;
            var$7 = $ndiv2 & 31;
            var$6 = ($upperOp1.$numberLength + var$4 | 0) + (var$7 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $upperOp1.$digits, var$4, var$7);
            $upper = new jm_BigInteger;
            var$4 = $upperOp1.$sign1;
            jm_BigInteger_$callClinit();
            $upper.$firstNonzeroDigit = (-2);
            $upper.$sign1 = var$4;
            $upper.$numberLength = var$6;
            $upper.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($upper);
        }
    } else
        $upper = $upperOp1;
    $lowerOp1 = jm_Elementary_subtract($op2, $upper);
    if ($ndiv2 && $upperOp2.$sign1) {
        if ($ndiv2 <= 0)
            $op2 = jm_BitLevel_shiftRight($upperOp2,  -$ndiv2 | 0);
        else {
            var$4 = $ndiv2 >> 5;
            var$7 = $ndiv2 & 31;
            var$6 = ($upperOp2.$numberLength + var$4 | 0) + (var$7 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $upperOp2.$digits, var$4, var$7);
            $op2 = new jm_BigInteger;
            var$4 = $upperOp2.$sign1;
            jm_BigInteger_$callClinit();
            $op2.$firstNonzeroDigit = (-2);
            $op2.$sign1 = var$4;
            $op2.$numberLength = var$6;
            $op2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($op2);
        }
    } else
        $op2 = $upperOp2;
    $lowerOp2 = jm_Elementary_subtract($op1, $op2);
    $upper = jm_Multiplication_karatsuba($upperOp1, $upperOp2);
    $lower = jm_Multiplication_karatsuba($lowerOp1, $lowerOp2);
    $op1 = jm_Elementary_add(jm_Elementary_add(jm_Multiplication_karatsuba(jm_Elementary_subtract($upperOp1, $lowerOp1), jm_Elementary_subtract($lowerOp2, $upperOp2)), $upper), $lower);
    if ($ndiv2 && $op1.$sign1) {
        if ($ndiv2 <= 0)
            $op1 = jm_BitLevel_shiftRight($op1,  -$ndiv2 | 0);
        else {
            var$4 = $ndiv2 >> 5;
            var$7 = $ndiv2 & 31;
            var$6 = ($op1.$numberLength + var$4 | 0) + (var$7 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $op1.$digits, var$4, var$7);
            $op2 = new jm_BigInteger;
            var$4 = $op1.$sign1;
            jm_BigInteger_$callClinit();
            $op2.$firstNonzeroDigit = (-2);
            $op2.$sign1 = var$4;
            $op2.$numberLength = var$6;
            $op2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($op2);
            $op1 = $op2;
        }
    }
    var$4 = $ndiv2 << 1;
    if (var$4 && $upper.$sign1) {
        if (var$4 <= 0)
            $upper = jm_BitLevel_shiftRight($upper,  -var$4 | 0);
        else {
            $ndiv2 = var$4 >> 5;
            var$4 = var$4 & 31;
            var$7 = ($upper.$numberLength + $ndiv2 | 0) + (var$4 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$7);
            jm_BitLevel_shiftLeft(var$8, $upper.$digits, $ndiv2, var$4);
            $op2 = new jm_BigInteger;
            var$4 = $upper.$sign1;
            jm_BigInteger_$callClinit();
            $op2.$firstNonzeroDigit = (-2);
            $op2.$sign1 = var$4;
            $op2.$numberLength = var$7;
            $op2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($op2);
            $upper = $op2;
        }
    }
    return jm_Elementary_add(jm_Elementary_add($upper, $op1), $lower);
}
function jm_Multiplication_multiplyPAP($a, $b) {
    var $aLen, $bLen, $resLength, $resSign, $aDigits, $bDigits, $resDigits, $result, $val, $valueLo, $valueHi;
    jm_Multiplication_$callClinit();
    $aLen = $a.$numberLength;
    $bLen = $b.$numberLength;
    $resLength = $aLen + $bLen | 0;
    $resSign = $a.$sign1 == $b.$sign1 ? 1 : (-1);
    if ($resLength != 2) {
        $aDigits = $a.$digits;
        $bDigits = $b.$digits;
        $resDigits = $rt_createIntArray($resLength);
        jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits);
        $result = new jm_BigInteger;
        jm_BigInteger_$callClinit();
        $result.$firstNonzeroDigit = (-2);
        $result.$sign1 = $resSign;
        $result.$numberLength = $resLength;
        $result.$digits = $resDigits;
        jm_BigInteger_cutOffLeadingZeroes($result);
        return $result;
    }
    $val = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($a.$digits.data[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($b.$digits.data[0]), Long_create(4294967295, 0))), Long_ZERO), Long_ZERO);
    $valueLo = Long_lo($val);
    $valueHi = Long_hi($val);
    if (!$valueHi) {
        $a = new jm_BigInteger;
        jm_BigInteger_$callClinit();
        $a.$firstNonzeroDigit = (-2);
        $a.$sign1 = $resSign;
        $a.$numberLength = 1;
        $aDigits = $rt_createIntArray(1);
        $aDigits.data[0] = $valueLo;
        $a.$digits = $aDigits;
    } else {
        $a = new jm_BigInteger;
        $aDigits = $rt_createIntArrayFromData([$valueLo, $valueHi]);
        jm_BigInteger_$callClinit();
        $a.$firstNonzeroDigit = (-2);
        $a.$sign1 = $resSign;
        $a.$numberLength = 2;
        $a.$digits = $aDigits;
    }
    return $a;
}
function jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits) {
    var var$6, var$7, var$8, var$9, var$10;
    jm_Multiplication_$callClinit();
    if ($aLen && $bLen) {
        if ($aLen == 1) {
            var$6 = $aDigits.data[0];
            var$7 = Long_ZERO;
            $aLen = 0;
            var$8 = Long_and(Long_fromInt(var$6), Long_create(4294967295, 0));
            while ($aLen < $bLen) {
                $aDigits = $bDigits.data;
                var$9 = $resDigits.data;
                var$7 = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($aDigits[$aLen]), Long_create(4294967295, 0)), var$8), Long_and(Long_fromInt(Long_lo(var$7)), Long_create(4294967295, 0))), Long_ZERO);
                var$9[$aLen] = Long_lo(var$7);
                var$7 = Long_shru(var$7, 32);
                $aLen = $aLen + 1 | 0;
            }
            $resDigits.data[$bLen] = Long_lo(var$7);
        } else if ($bLen != 1)
            jm_Multiplication_multPAP($aDigits, $bDigits, $resDigits, $aLen, $bLen);
        else {
            $bLen = $bDigits.data[0];
            var$10 = Long_ZERO;
            var$6 = 0;
            var$7 = Long_and(Long_fromInt($bLen), Long_create(4294967295, 0));
            while (var$6 < $aLen) {
                $bDigits = $aDigits.data;
                var$9 = $resDigits.data;
                var$10 = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($bDigits[var$6]), Long_create(4294967295, 0)), var$7), Long_and(Long_fromInt(Long_lo(var$10)), Long_create(4294967295, 0))), Long_ZERO);
                var$9[var$6] = Long_lo(var$10);
                var$10 = Long_shru(var$10, 32);
                var$6 = var$6 + 1 | 0;
            }
            $resDigits.data[$aLen] = Long_lo(var$10);
        }
        return;
    }
}
function jm_Multiplication_multPAP($a, $b, $t, $aLen, $bLen) {
    var $i, var$7, $carry, $aI, $j, var$11, var$12, var$13, var$14, var$15;
    jm_Multiplication_$callClinit();
    if ($a === $b && $aLen == $bLen) {
        jm_Multiplication_square($a, $aLen, $t);
        return;
    }
    $i = 0;
    while ($i < $aLen) {
        var$7 = $a.data;
        $carry = Long_ZERO;
        $aI = var$7[$i];
        $j = 0;
        var$11 = Long_and(Long_fromInt($aI), Long_create(4294967295, 0));
        while ($j < $bLen) {
            var$7 = $b.data;
            var$12 = $t.data;
            $aI = var$7[$j];
            var$13 = $i + $j | 0;
            var$14 = var$12[var$13];
            var$15 = Long_lo($carry);
            $carry = Long_add(Long_add(Long_mul(var$11, Long_and(Long_fromInt($aI), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$14), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$15), Long_create(4294967295, 0)));
            var$12[var$13] = Long_lo($carry);
            $carry = Long_shru($carry, 32);
            $j = $j + 1 | 0;
        }
        $t.data[$i + $bLen | 0] = Long_lo($carry);
        $i = $i + 1 | 0;
    }
}
function jm_Multiplication_pow($acc, $exponent) {
    var $res, var$4, $acc_0, var$6;
    jm_Multiplication_$callClinit();
    jm_BigInteger_$callClinit();
    $res = jm_BigInteger_ONE;
    while ($exponent > 1) {
        if ($exponent & 1)
            $res = !$acc.$sign1 ? jm_BigInteger_ZERO : !$res.$sign1 ? jm_BigInteger_ZERO : jm_Multiplication_karatsuba($res, $acc);
        var$4 = $acc.$numberLength;
        if (var$4 != 1)
            $acc_0 = jm_BigInteger__init_1(1, jm_Multiplication_square($acc.$digits, var$4, $rt_createIntArray(var$4 << 1)));
        else {
            var$6 = $acc.$sign1;
            $acc_0 = !var$6 ? jm_BigInteger_ZERO : !var$6 ? jm_BigInteger_ZERO : jm_Multiplication_karatsuba($acc, $acc);
        }
        $exponent = $exponent >> 1;
        $acc = $acc_0;
    }
    return !$acc.$sign1 ? jm_BigInteger_ZERO : !$res.$sign1 ? jm_BigInteger_ZERO : jm_Multiplication_karatsuba($res, $acc);
}
function jm_Multiplication_square($a, $aLen, $res) {
    var $i, $carry, $i_0, $j, var$8, var$9, $index, var$11, var$12, var$13, var$14, var$15;
    jm_Multiplication_$callClinit();
    $i = 0;
    while ($i < $aLen) {
        $carry = Long_ZERO;
        $i_0 = $i + 1 | 0;
        $j = $i_0;
        while ($j < $aLen) {
            var$8 = $a.data;
            var$9 = $res.data;
            $index = var$8[$i];
            var$11 = var$8[$j];
            var$12 = $i + $j | 0;
            var$13 = var$9[var$12];
            var$14 = Long_lo($carry);
            $carry = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($index), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$11), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$13), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$14), Long_create(4294967295, 0)));
            var$9[var$12] = Long_lo($carry);
            $carry = Long_shru($carry, 32);
            $j = $j + 1 | 0;
        }
        $res.data[$i + $aLen | 0] = Long_lo($carry);
        $i = $i_0;
    }
    $i = $aLen << 1;
    $index = 0;
    $j = 0;
    while ($j < $i) {
        var$8 = $res.data;
        var$11 = var$8[$j];
        var$8[$j] = var$11 << 1 | $index;
        $index = var$11 >>> 31 | 0;
        $j = $j + 1 | 0;
    }
    if ($index)
        $res.data[$i] = $index;
    $carry = Long_ZERO;
    $i = 0;
    $index = 0;
    while ($i < $aLen) {
        var$8 = $a.data;
        var$9 = $res.data;
        $i_0 = var$8[$i];
        $j = var$8[$i];
        var$12 = var$9[$index];
        var$11 = Long_lo($carry);
        $carry = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($i_0), Long_create(4294967295, 0)), Long_and(Long_fromInt($j), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$12), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$11), Long_create(4294967295, 0)));
        var$9[$index] = Long_lo($carry);
        var$15 = Long_shru($carry, 32);
        $index = $index + 1 | 0;
        $carry = Long_add(var$15, Long_and(Long_fromInt(var$9[$index]), Long_create(4294967295, 0)));
        var$9[$index] = Long_lo($carry);
        $carry = Long_shru($carry, 32);
        $i = $i + 1 | 0;
        $index = $index + 1 | 0;
    }
    return $res;
}
function jm_Multiplication__clinit_() {
    var $fivePow, $i, var$3, var$4, var$5, var$6;
    jm_Multiplication_tenPows = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
    jm_Multiplication_fivePows = $rt_createIntArrayFromData([1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125]);
    jm_Multiplication_bigTenPows = $rt_createArray(jm_BigInteger, 32);
    jm_Multiplication_bigFivePows = $rt_createArray(jm_BigInteger, 32);
    $fivePow = Long_fromInt(1);
    $i = 0;
    while ($i <= 18) {
        jm_Multiplication_bigFivePows.data[$i] = jm_BigInteger_valueOf($fivePow);
        jm_Multiplication_bigTenPows.data[$i] = jm_BigInteger_valueOf(Long_shl($fivePow, $i));
        $fivePow = Long_mul($fivePow, Long_fromInt(5));
        $i = $i + 1 | 0;
    }
    while ($i < jm_Multiplication_bigTenPows.data.length) {
        var$3 = jm_Multiplication_bigFivePows.data;
        var$4 = $i - 1 | 0;
        var$5 = var$3[var$4];
        var$6 = var$3[1];
        if (!var$6.$sign1) {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_ZERO;
        } else if (!var$5.$sign1) {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_ZERO;
        } else {
            jm_Multiplication_$callClinit();
            var$5 = jm_Multiplication_karatsuba(var$5, var$6);
        }
        var$3[$i] = var$5;
        var$3 = jm_Multiplication_bigTenPows.data;
        var$5 = var$3[var$4];
        jm_BigInteger_$callClinit();
        var$6 = jm_BigInteger_TEN;
        if (!var$6.$sign1)
            var$5 = jm_BigInteger_ZERO;
        else if (!var$5.$sign1)
            var$5 = jm_BigInteger_ZERO;
        else {
            jm_Multiplication_$callClinit();
            var$5 = jm_Multiplication_karatsuba(var$5, var$6);
        }
        var$3[$i] = var$5;
        $i = $i + 1 | 0;
    }
}
var jm_BitLevel = $rt_classWithoutFields();
function jm_BitLevel_bitLength($val) {
    var $i, var$3, $bLength, var$5, var$6, $highDigit;
    $i = $val.$sign1;
    if (!$i)
        return 0;
    var$3 = $val.$numberLength;
    $bLength = var$3 << 5;
    var$5 = $val.$digits.data;
    var$6 = var$3 - 1 | 0;
    $highDigit = var$5[var$6];
    if ($i < 0) {
        if ($val.$firstNonzeroDigit == (-2)) {
            if (!$i)
                $i = (-1);
            else {
                $i = 0;
                while (!var$5[$i]) {
                    $i = $i + 1 | 0;
                }
            }
            $val.$firstNonzeroDigit = $i;
        }
        if ($val.$firstNonzeroDigit == var$6)
            $highDigit = $highDigit + (-1) | 0;
    }
    return $bLength - jl_Integer_numberOfLeadingZeros($highDigit) | 0;
}
function jm_BitLevel_shiftLeft($result, $source, $intCount, $count) {
    var var$5, $rightShiftCount, $i, var$8, $i_0, var$10;
    a: {
        if (!$count)
            jl_System_arraycopy($source, 0, $result, $intCount, $result.data.length - $intCount | 0);
        else {
            var$5 = $result.data;
            $rightShiftCount = 32 - $count | 0;
            $i = var$5.length - 1 | 0;
            var$5[$i] = 0;
            while (true) {
                if ($i <= $intCount)
                    break a;
                var$8 = $source.data;
                $i_0 = var$5[$i];
                var$10 = ($i - $intCount | 0) - 1 | 0;
                var$5[$i] = $i_0 | (var$8[var$10] >>> $rightShiftCount | 0);
                var$5[$i - 1 | 0] = var$8[var$10] << $count;
                $i = $i + (-1) | 0;
            }
        }
    }
    $i_0 = 0;
    while ($i_0 < $intCount) {
        $result.data[$i_0] = 0;
        $i_0 = $i_0 + 1 | 0;
    }
}
function jm_BitLevel_shiftRight($source, $count) {
    var $intCount, $resLength, var$5, $resDigits, var$7, $i, var$9, var$10, var$11, $result;
    $intCount = $count >> 5;
    $count = $count & 31;
    $resLength = $source.$numberLength;
    if ($intCount >= $resLength) {
        if ($source.$sign1 >= 0) {
            jm_BigInteger_$callClinit();
            $source = jm_BigInteger_ZERO;
        } else {
            jm_BigInteger_$callClinit();
            $source = jm_BigInteger_MINUS_ONE;
        }
        return $source;
    }
    a: {
        $resLength = $resLength - $intCount | 0;
        var$5 = $resLength + 1 | 0;
        $resDigits = $rt_createIntArray(var$5);
        jm_BitLevel_shiftRight0($resDigits, $resLength, $source.$digits, $intCount, $count);
        var$7 = $source.$sign1;
        if (var$7 >= 0)
            var$5 = $resLength;
        else {
            $i = 0;
            while (true) {
                var$9 = $rt_compare($i, $intCount);
                if (var$9 >= 0)
                    break;
                if ($source.$digits.data[$i])
                    break;
                $i = $i + 1 | 0;
            }
            if (var$9 >= 0) {
                if ($count <= 0) {
                    var$5 = $resLength;
                    break a;
                }
                if (!($source.$digits.data[$i] << (32 - $count | 0))) {
                    var$5 = $resLength;
                    break a;
                }
            }
            var$10 = $resDigits.data;
            var$11 = 0;
            while (true) {
                $i = $rt_compare(var$11, $resLength);
                if ($i >= 0)
                    break;
                if (var$10[var$11] != (-1))
                    break;
                var$10[var$11] = 0;
                var$11 = var$11 + 1 | 0;
            }
            if ($i)
                var$5 = $resLength;
            var$10[var$11] = var$10[var$11] + 1 | 0;
        }
    }
    $result = new jm_BigInteger;
    jm_BigInteger_$callClinit();
    $result.$firstNonzeroDigit = (-2);
    $result.$sign1 = var$7;
    $result.$numberLength = var$5;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BitLevel_shiftRight0($result, $resultLen, $source, $intCount, $count) {
    var $allZero, $i, var$8, $leftShiftCount, var$10, var$11;
    $allZero = 1;
    $i = 0;
    while ($i < $intCount) {
        $allZero = $allZero & ($source.data[$i] ? 0 : 1);
        $i = $i + 1 | 0;
    }
    if (!$count)
        jl_System_arraycopy($source, $intCount, $result, 0, $resultLen);
    else {
        var$8 = $source.data;
        $leftShiftCount = 32 - $count | 0;
        $allZero = $allZero & (var$8[$i] << $leftShiftCount ? 0 : 1);
        var$10 = 0;
        var$11 = $resultLen - 1 | 0;
        while (var$10 < var$11) {
            $source = $result.data;
            $resultLen = var$10 + $intCount | 0;
            $source[var$10] = (var$8[$resultLen] >>> $count | 0) | var$8[$resultLen + 1 | 0] << $leftShiftCount;
            var$10 = var$10 + 1 | 0;
        }
        $result.data[var$10] = var$8[var$10 + $intCount | 0] >>> $count | 0;
    }
    return $allZero;
}
var cgxgbtf_HEXCoder = $rt_classWithoutFields();
var cgxgbtf_HEXCoder_HEX_CHARS = null;
var cgxgbtf_HEXCoder_HEX_BYTES = null;
function cgxgbtf_HEXCoder_decode($string) {
    var var$2, var$3, $bytes, var$5, $i, var$7, var$8, $c0, $c1, var$11;
    var$2 = $string.$characters.data;
    var$3 = var$2.length;
    $bytes = $rt_createByteArray(var$3 / 2 | 0);
    var$5 = $bytes.data;
    $i = 0;
    var$7 = var$5.length;
    a: {
        b: {
            while ($i < var$7) {
                var$8 = $i * 2 | 0;
                if (var$8 < 0)
                    break a;
                if (var$8 >= var$3)
                    break a;
                $c0 = var$2[var$8];
                var$8 = var$8 + 1 | 0;
                if (var$8 < 0)
                    break b;
                if (var$8 >= var$3)
                    break b;
                $c1 = var$2[var$8];
                var$11 = cgxgbtf_HEXCoder_HEX_BYTES.data;
                var$5[$i] = ((var$11[$c0] << 4) + var$11[$c1] | 0) << 24 >> 24;
                $i = $i + 1 | 0;
            }
            return $bytes;
        }
        $string = new jl_StringIndexOutOfBoundsException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    $string = new jl_StringIndexOutOfBoundsException;
    $string.$suppressionEnabled = 1;
    $string.$writableStackTrace = 1;
    $rt_throw($string);
}
function cgxgbtf_HEXCoder__clinit_() {
    var var$1, var$2, var$3, $i;
    var$1 = $rt_createCharArray(16);
    var$2 = var$1.data;
    var$2[0] = 48;
    var$2[1] = 49;
    var$2[2] = 50;
    var$2[3] = 51;
    var$2[4] = 52;
    var$2[5] = 53;
    var$2[6] = 54;
    var$2[7] = 55;
    var$2[8] = 56;
    var$2[9] = 57;
    var$2[10] = 65;
    var$2[11] = 66;
    var$2[12] = 67;
    var$2[13] = 68;
    var$2[14] = 69;
    var$2[15] = 70;
    cgxgbtf_HEXCoder_HEX_CHARS = var$1;
    var$1 = $rt_createIntArray(128);
    var$3 = var$1.data;
    cgxgbtf_HEXCoder_HEX_BYTES = var$1;
    $i = 0;
    while ($i < var$2.length) {
        var$3[var$2[$i]] = $i;
        if (var$2[$i] >= 65)
            var$3[(var$2[$i] - 65 | 0) + 97 | 0] = $i;
        $i = $i + 1 | 0;
    }
}
function cgxgbtp_Blob$1() {
    var a = this; ji_InputStream.call(a);
    a.$pos0 = 0;
    a.$this$017 = null;
}
function cgxgbtp_Blob$1_read($this) {
    var var$1, var$2;
    if ($this.$pos0 == $this.$this$017.$data3.length)
        return (-1);
    var$1 = $this.$this$017;
    var$2 = $this.$pos0;
    $this.$pos0 = var$2 + 1 | 0;
    return var$1.$data3[var$2] & 255;
}
var jnc_Charset$Charsets = $rt_classWithoutFields();
var jnc_Charset$Charsets_value = null;
function jnc_Charset$Charsets_$callClinit() {
    jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    jnc_Charset$Charsets__clinit_();
}
function jnc_Charset$Charsets__clinit_() {
    var $charset, var$2, var$3, $charsets, var$5;
    $charset = new ju_HashMap;
    var$2 = ju_HashMap_calculateCapacity(16);
    $charset.$elementCount = 0;
    var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
    $charsets = var$3.data;
    $charset.$elementData = var$3;
    $charset.$loadFactor = 0.75;
    $charset.$threshold = $charsets.length * 0.75 | 0;
    jnc_Charset$Charsets_value = $charset;
    $charsets = $rt_createArray(jnc_Charset, 6).data;
    jnc_StandardCharsets_$callClinit();
    $charsets[0] = jnc_StandardCharsets_UTF_8;
    $charsets[1] = jnc_StandardCharsets_US_ASCII;
    $charsets[2] = jnc_StandardCharsets_ISO_8859_1;
    $charsets[3] = jnc_StandardCharsets_UTF_16;
    $charsets[4] = jnc_StandardCharsets_UTF_16BE;
    $charsets[5] = jnc_StandardCharsets_UTF_16LE;
    var$2 = $charsets.length;
    var$5 = 0;
    while (var$5 < var$2) {
        $charset = $charsets[var$5];
        ju_HashMap_putImpl(jnc_Charset$Charsets_value, $charset.$canonicalName, $charset);
        var$5 = var$5 + 1 | 0;
    }
}
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
var jnc_StandardCharsets = $rt_classWithoutFields();
var jnc_StandardCharsets_UTF_8 = null;
var jnc_StandardCharsets_US_ASCII = null;
var jnc_StandardCharsets_ISO_8859_1 = null;
var jnc_StandardCharsets_UTF_16 = null;
var jnc_StandardCharsets_UTF_16BE = null;
var jnc_StandardCharsets_UTF_16LE = null;
function jnc_StandardCharsets_$callClinit() {
    jnc_StandardCharsets_$callClinit = $rt_eraseClinit(jnc_StandardCharsets);
    jnc_StandardCharsets__clinit_();
}
function jnc_StandardCharsets__clinit_() {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    jnci_UTF8Charset_$callClinit();
    jnc_StandardCharsets_UTF_8 = jnci_UTF8Charset_INSTANCE;
    var$1 = new jnci_AsciiCharset;
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(667));
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        jnc_Charset_checkCanonicalName(var$3[var$5]);
        var$5 = var$5 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(667);
    var$1.$aliases = var$2.$clone();
    jnc_StandardCharsets_US_ASCII = var$1;
    var$1 = new jnci_Iso8859Charset;
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(668));
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        jnc_Charset_checkCanonicalName(var$3[var$5]);
        var$5 = var$5 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(668);
    var$1.$aliases = var$2.$clone();
    jnc_StandardCharsets_ISO_8859_1 = var$1;
    var$6 = new jnci_UTF16Charset;
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(669));
    var$7 = var$3.length;
    var$8 = 0;
    while (var$8 < var$7) {
        jnc_Charset_checkCanonicalName(var$3[var$8]);
        var$8 = var$8 + 1 | 0;
    }
    var$6.$canonicalName = $rt_s(669);
    var$6.$aliases = var$2.$clone();
    var$6.$bom = 1;
    var$6.$littleEndian = 0;
    jnc_StandardCharsets_UTF_16 = var$6;
    var$1 = new jnci_UTF16Charset;
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(670));
    var$7 = var$3.length;
    var$8 = 0;
    while (var$8 < var$7) {
        jnc_Charset_checkCanonicalName(var$3[var$8]);
        var$8 = var$8 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(670);
    var$1.$aliases = var$2.$clone();
    var$1.$bom = 0;
    var$1.$littleEndian = 0;
    jnc_StandardCharsets_UTF_16BE = var$1;
    var$1 = new jnci_UTF16Charset;
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(671));
    var$7 = var$3.length;
    var$8 = 0;
    while (var$8 < var$7) {
        jnc_Charset_checkCanonicalName(var$3[var$8]);
        var$8 = var$8 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(671);
    var$1.$aliases = var$2.$clone();
    var$1.$bom = 0;
    var$1.$littleEndian = 1;
    jnc_StandardCharsets_UTF_16LE = var$1;
}
var jnci_AsciiCharset = $rt_classWithoutFields(jnc_Charset);
function jnci_AsciiCharset_newEncoder($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_AsciiEncoder;
    var$2 = $rt_createByteArray(1);
    var$3 = var$2.data;
    var$3[0] = 63;
    jnc_CodingErrorAction_$callClinit();
    var$4 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction = var$4;
    var$1.$unmappableAction = var$4;
    var$5 = var$3.length;
    if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
        var$1.$charset0 = $this;
        var$1.$replacement0 = var$2.$clone();
        var$1.$averageBytesPerChar = 1.0;
        var$1.$maxBytesPerChar = 1.0;
        var$1.$inArray = $rt_createCharArray(512);
        var$1.$outArray = $rt_createByteArray(512);
        return var$1;
    }
    var$4 = new jl_IllegalArgumentException;
    jl_Throwable__init_3(var$4, $rt_s(466));
    $rt_throw(var$4);
}
var jnci_Iso8859Charset = $rt_classWithoutFields(jnc_Charset);
function jnci_Iso8859Charset_newEncoder($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_Iso8859Encoder;
    var$2 = $rt_createByteArray(1);
    var$3 = var$2.data;
    var$3[0] = 63;
    jnc_CodingErrorAction_$callClinit();
    var$4 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction = var$4;
    var$1.$unmappableAction = var$4;
    var$5 = var$3.length;
    if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
        var$1.$charset0 = $this;
        var$1.$replacement0 = var$2.$clone();
        var$1.$averageBytesPerChar = 1.0;
        var$1.$maxBytesPerChar = 1.0;
        var$1.$inArray = $rt_createCharArray(512);
        var$1.$outArray = $rt_createByteArray(512);
        return var$1;
    }
    var$4 = new jl_IllegalArgumentException;
    jl_Throwable__init_3(var$4, $rt_s(466));
    $rt_throw(var$4);
}
function jnci_UTF16Charset() {
    var a = this; jnc_Charset.call(a);
    a.$bom = 0;
    a.$littleEndian = 0;
}
function jnci_UTF16Charset_newEncoder($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = new jnci_UTF16Encoder;
    var$2 = $this.$bom;
    var$3 = $this.$littleEndian;
    var$4 = $rt_createByteArray(1);
    var$5 = var$4.data;
    var$5[0] = 63;
    jnc_CodingErrorAction_$callClinit();
    var$6 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction = var$6;
    var$1.$unmappableAction = var$6;
    var$7 = var$5.length;
    if (var$7 && var$7 >= var$1.$maxBytesPerChar) {
        var$1.$charset0 = $this;
        var$1.$replacement0 = var$4.$clone();
        var$1.$averageBytesPerChar = 2.0;
        var$1.$maxBytesPerChar = 4.0;
        var$1.$inArray = $rt_createCharArray(512);
        var$1.$outArray = $rt_createByteArray(512);
        var$1.$bom0 = var$2;
        var$1.$littleEndian0 = var$3;
        return var$1;
    }
    var$6 = new jl_IllegalArgumentException;
    jl_Throwable__init_3(var$6, $rt_s(466));
    $rt_throw(var$6);
}
var jm_Elementary = $rt_classWithoutFields();
function jm_Elementary_compareArrays($a, $b, $size) {
    var $i, var$5;
    $i = $size - 1 | 0;
    while ($i >= 0) {
        var$5 = $b.data;
        if ($a.data[$i] != var$5[$i])
            break;
        $i = $i + (-1) | 0;
    }
    if ($i < 0)
        $size = 0;
    else {
        $b = $b.data;
        $size = Long_ge(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt($b[$i]), Long_create(4294967295, 0))) ? 1 : (-1);
    }
    return $size;
}
function jm_Elementary_add($op1, $op2) {
    var $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, $res, $valueLo, $valueHi, var$12, var$13, $resDigits, $cmp, $res_0;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op1Sign)
        return $op2;
    if (!$op2Sign)
        return $op1;
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), Long_create(4294967295, 0));
        if ($op1Sign != $op2Sign)
            return jm_BigInteger_valueOf($op1Sign >= 0 ? Long_sub($a, $b) : Long_sub($b, $a));
        $res = Long_add($a, $b);
        $valueLo = Long_lo($res);
        $valueHi = Long_hi($res);
        if (!$valueHi) {
            $op1 = new jm_BigInteger;
            jm_BigInteger_$callClinit();
            $op1.$firstNonzeroDigit = (-2);
            $op1.$sign1 = $op1Sign;
            $op1.$numberLength = 1;
            var$12 = $rt_createIntArray(1);
            var$12.data[0] = $valueLo;
            $op1.$digits = var$12;
        } else {
            $op1 = new jm_BigInteger;
            var$12 = $rt_createIntArrayFromData([$valueLo, $valueHi]);
            jm_BigInteger_$callClinit();
            $op1.$firstNonzeroDigit = (-2);
            $op1.$sign1 = $op1Sign;
            $op1.$numberLength = 2;
            $op1.$digits = var$12;
        }
        return $op1;
    }
    if ($op1Sign == $op2Sign) {
        if ($op1Len < $op2Len) {
            var$12 = $op2.$digits;
            var$13 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len + 1 | 0);
            jm_Elementary_add0($resDigits, var$12, $op2Len, var$13, $op1Len);
        } else {
            var$13 = $op1.$digits;
            var$12 = $op2.$digits;
            $resDigits = $rt_createIntArray($op1Len + 1 | 0);
            jm_Elementary_add0($resDigits, var$13, $op1Len, var$12, $op2Len);
        }
    } else {
        $cmp = $rt_compare($op1Len, $op2Len);
        $cmp = !$cmp ? jm_Elementary_compareArrays($op1.$digits, $op2.$digits, $op1Len) : $cmp <= 0 ? (-1) : 1;
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        if ($cmp != 1) {
            var$12 = $op2.$digits;
            var$13 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len);
            jm_Elementary_subtract0($resDigits, var$12, $op2Len, var$13, $op1Len);
            $op1Sign = $op2Sign;
        } else {
            var$12 = $op1.$digits;
            var$13 = $op2.$digits;
            $resDigits = $rt_createIntArray($op1Len);
            jm_Elementary_subtract0($resDigits, var$12, $op1Len, var$13, $op2Len);
        }
    }
    var$12 = $resDigits.data;
    $res_0 = new jm_BigInteger;
    $op2Sign = var$12.length;
    jm_BigInteger_$callClinit();
    $res_0.$firstNonzeroDigit = (-2);
    $res_0.$sign1 = $op1Sign;
    $res_0.$numberLength = $op2Sign;
    $res_0.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($res_0);
    return $res_0;
}
function jm_Elementary_add0($res, $a, $aSize, $b, $bSize) {
    var var$6, $carry, var$8, $i;
    var$6 = $res.data;
    $res = $b.data;
    $a = $a.data;
    $carry = Long_add(Long_and(Long_fromInt($a[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($res[0]), Long_create(4294967295, 0)));
    var$6[0] = Long_lo($carry);
    var$8 = Long_shr($carry, 32);
    if ($aSize < $bSize) {
        $i = 1;
        while ($i < $aSize) {
            $carry = Long_add(var$8, Long_add(Long_and(Long_fromInt($a[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt($res[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $bSize) {
            $carry = Long_add(var$8, Long_and(Long_fromInt($res[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
    } else {
        $i = 1;
        while ($i < $bSize) {
            $carry = Long_add(var$8, Long_add(Long_and(Long_fromInt($a[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt($res[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $aSize) {
            $carry = Long_add(var$8, Long_and(Long_fromInt($a[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
    }
    if (Long_ne(var$8, Long_ZERO))
        var$6[$i] = Long_lo(var$8);
}
function jm_Elementary_subtract($op1, $op2) {
    var $op1Sign, $op2Sign, var$5, $op1Len, $op2Len, $a, $b, $resSign, $cmp, var$12, $resDigits, $res;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op2Sign)
        return $op1;
    if (!$op1Sign) {
        if (!$op2Sign)
            $op1 = $op2;
        else {
            $op1 = new jm_BigInteger;
            $op1Sign =  -$op2Sign | 0;
            $op2Sign = $op2.$numberLength;
            var$5 = $op2.$digits;
            jm_BigInteger_$callClinit();
            $op1.$firstNonzeroDigit = (-2);
            $op1.$sign1 = $op1Sign;
            $op1.$numberLength = $op2Sign;
            $op1.$digits = var$5;
        }
        return $op1;
    }
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), Long_create(4294967295, 0));
        if ($op1Sign < 0)
            $a = Long_neg($a);
        if ($op2Sign < 0)
            $b = Long_neg($b);
        return jm_BigInteger_valueOf(Long_sub($a, $b));
    }
    $resSign = $rt_compare($op1Len, $op2Len);
    $cmp = !$resSign ? jm_Elementary_compareArrays($op1.$digits, $op2.$digits, $op1Len) : $resSign <= 0 ? (-1) : 1;
    if ($cmp == (-1)) {
        $resSign =  -$op2Sign | 0;
        if ($op1Sign == $op2Sign) {
            var$5 = $op2.$digits;
            var$12 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len);
            jm_Elementary_subtract0($resDigits, var$5, $op2Len, var$12, $op1Len);
        } else {
            var$5 = $op2.$digits;
            var$12 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len + 1 | 0);
            jm_Elementary_add0($resDigits, var$5, $op2Len, var$12, $op1Len);
        }
    } else if ($op1Sign != $op2Sign) {
        var$5 = $op1.$digits;
        var$12 = $op2.$digits;
        $resDigits = $rt_createIntArray($op1Len + 1 | 0);
        jm_Elementary_add0($resDigits, var$5, $op1Len, var$12, $op2Len);
        $resSign = $op1Sign;
    } else {
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        var$5 = $op1.$digits;
        var$12 = $op2.$digits;
        $resDigits = $rt_createIntArray($op1Len);
        jm_Elementary_subtract0($resDigits, var$5, $op1Len, var$12, $op2Len);
        $resSign = $op1Sign;
    }
    var$5 = $resDigits.data;
    $res = new jm_BigInteger;
    $op1Sign = var$5.length;
    jm_BigInteger_$callClinit();
    $res.$firstNonzeroDigit = (-2);
    $res.$sign1 = $resSign;
    $res.$numberLength = $op1Sign;
    $res.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($res);
    return $res;
}
function jm_Elementary_subtract0($res, $a, $aSize, $b, $bSize) {
    var $borrow, $i, var$8, var$9, var$10, var$11;
    $borrow = Long_ZERO;
    $i = 0;
    while ($i < $bSize) {
        var$8 = $res.data;
        var$9 = $b.data;
        var$10 = Long_add($borrow, Long_sub(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$9[$i]), Long_create(4294967295, 0))));
        var$8[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
    while ($i < $aSize) {
        var$11 = $res.data;
        var$10 = Long_add($borrow, Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)));
        var$11[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
}
var jm_Division = $rt_classWithoutFields();
function jm_Division_divide($quot, $quotLength, $a, $j, $b, $bLength) {
    var var$7, $normA, $normB, $borrow, $divisorShift, $firstDivisorDigit, $i, var$14, var$15, var$16, $res, $rem, $rOverflowed, $product, $carry, $longR, $k;
    var$7 = $b.data;
    $normA = $rt_createIntArray($j + 1 | 0);
    $normB = $rt_createIntArray($bLength + 1 | 0);
    $borrow = $bLength - 1 | 0;
    $divisorShift = jl_Integer_numberOfLeadingZeros(var$7[$borrow]);
    if ($divisorShift) {
        jm_BitLevel_shiftLeft($normB, $b, 0, $divisorShift);
        jm_BitLevel_shiftLeft($normA, $a, 0, $divisorShift);
    } else {
        jl_System_arraycopy($a, 0, $normA, 0, $j);
        jl_System_arraycopy($b, 0, $normB, 0, $bLength);
    }
    var$7 = $normB.data;
    $b = $normA.data;
    $firstDivisorDigit = var$7[$borrow];
    $i = $quotLength - 1 | 0;
    var$14 = $bLength - 2 | 0;
    var$15 = Long_and(Long_fromInt($firstDivisorDigit), Long_create(4294967295, 0));
    while ($i >= 0) {
        a: {
            if ($b[$j] == $firstDivisorDigit)
                var$16 = (-1);
            else {
                $res = jm_Division_divideLongByInt(Long_add(Long_shl(Long_and(Long_fromInt($b[$j]), Long_create(4294967295, 0)), 32), Long_and(Long_fromInt($b[$j - 1 | 0]), Long_create(4294967295, 0))), $firstDivisorDigit);
                var$16 = Long_lo($res);
                $rem = Long_hi($res);
                if (var$16) {
                    $rOverflowed = 0;
                    var$16 = var$16 + 1 | 0;
                    while (true) {
                        var$16 = var$16 + (-1) | 0;
                        if ($rOverflowed)
                            break;
                        $product = Long_mul(Long_and(Long_fromInt(var$16), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[var$14]), Long_create(4294967295, 0)));
                        $carry = Long_fromInt($rem);
                        $res = Long_add(Long_shl($carry, 32), Long_and(Long_fromInt($b[$j - 2 | 0]), Long_create(4294967295, 0)));
                        $longR = Long_add(Long_and($carry, Long_create(4294967295, 0)), var$15);
                        if (jl_Integer_numberOfLeadingZeros(Long_hi($longR)) >= 32)
                            $rem = Long_lo($longR);
                        else
                            $rOverflowed = 1;
                        if (Long_le(Long_xor($product, Long_create(0, 2147483648)), Long_xor($res, Long_create(0, 2147483648))))
                            break a;
                    }
                }
            }
        }
        if (var$16) {
            $quotLength = $j - $bLength | 0;
            if (jm_Division_multiplyAndSubtract($normA, $quotLength, $normB, $bLength, var$16)) {
                var$16 = var$16 + (-1) | 0;
                $carry = Long_ZERO;
                $k = 0;
                while ($k < $bLength) {
                    $borrow = $quotLength + $k | 0;
                    $carry = Long_add($carry, Long_add(Long_and(Long_fromInt($b[$borrow]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$k]), Long_create(4294967295, 0))));
                    $b[$borrow] = Long_lo($carry);
                    $carry = Long_shru($carry, 32);
                    $k = $k + 1 | 0;
                }
            }
        }
        if ($quot !== null)
            $quot.data[$i] = var$16;
        $j = $j + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    if ($divisorShift) {
        jm_BitLevel_shiftRight0($normB, $bLength, $normA, 0, $divisorShift);
        return $normB;
    }
    jl_System_arraycopy($normA, 0, $normB, 0, $bLength);
    return $normA;
}
function jm_Division_divideArrayByInt($dest, $src, $srcLength, $divisor) {
    var $rem, $bLong, $i, $bPos, var$9, var$10, $temp, $quot, $aPos;
    $rem = Long_ZERO;
    $bLong = Long_and(Long_fromInt($divisor), Long_create(4294967295, 0));
    $i = $srcLength - 1 | 0;
    $bPos = Long_fromInt($divisor >>> 1 | 0);
    $divisor = $divisor & 1;
    var$9 = Long_shl($bLong, 1);
    while ($i >= 0) {
        var$10 = $src.data;
        $temp = Long_or(Long_shl($rem, 32), Long_and(Long_fromInt(var$10[$i]), Long_create(4294967295, 0)));
        if (Long_ge($temp, Long_ZERO)) {
            $quot = Long_div($temp, $bLong);
            $rem = Long_rem($temp, $bLong);
        } else {
            $aPos = Long_shru($temp, 1);
            $quot = Long_div($aPos, $bPos);
            $rem = Long_add(Long_shl(Long_rem($aPos, $bPos), 1), Long_and($temp, Long_fromInt(1)));
            if ($divisor) {
                if (Long_le($quot, $rem))
                    $rem = Long_sub($rem, $quot);
                else if (Long_gt(Long_sub($quot, $rem), $bLong)) {
                    $rem = Long_add($rem, Long_sub(var$9, $quot));
                    $quot = Long_sub($quot, Long_fromInt(2));
                } else {
                    $rem = Long_add($rem, Long_sub($bLong, $quot));
                    $quot = Long_sub($quot, Long_fromInt(1));
                }
            }
        }
        $dest.data[$i] = Long_lo(Long_and($quot, Long_create(4294967295, 0)));
        $i = $i + (-1) | 0;
    }
    return Long_lo($rem);
}
function jm_Division_divideLongByInt($a, $b) {
    var $bLong, $quot, $rem, $aPos, $bPos;
    $bLong = Long_and(Long_fromInt($b), Long_create(4294967295, 0));
    if (Long_ge($a, Long_ZERO)) {
        $quot = Long_div($a, $bLong);
        $rem = Long_rem($a, $bLong);
    } else {
        $aPos = Long_shru($a, 1);
        $bPos = Long_fromInt($b >>> 1 | 0);
        $quot = Long_div($aPos, $bPos);
        $rem = Long_add(Long_shl(Long_rem($aPos, $bPos), 1), Long_and($a, Long_fromInt(1)));
        if ($b & 1) {
            if (Long_le($quot, $rem))
                $rem = Long_sub($rem, $quot);
            else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                $rem = Long_add($rem, Long_sub($bLong, $quot));
                $quot = Long_sub($quot, Long_fromInt(1));
            } else {
                $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                $quot = Long_sub($quot, Long_fromInt(2));
            }
        }
    }
    return Long_or(Long_shl($rem, 32), Long_and($quot, Long_create(4294967295, 0)));
}
function jm_Division_multiplyAndSubtract($a, $start, $b, $bLen, $c) {
    var $carry0, $carry1, $i, var$9, var$10, var$11, var$12, var$13;
    $carry0 = Long_ZERO;
    $carry1 = Long_ZERO;
    $i = 0;
    var$9 = Long_and(Long_fromInt($c), Long_create(4294967295, 0));
    while ($i < $bLen) {
        var$10 = $b.data;
        var$11 = $a.data;
        $c = var$10[$i];
        var$12 = Long_lo($carry0);
        jm_Multiplication_$callClinit();
        $carry0 = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($c), Long_create(4294967295, 0)), var$9), Long_and(Long_fromInt(var$12), Long_create(4294967295, 0))), Long_ZERO);
        var$12 = $start + $i | 0;
        var$13 = Long_add(Long_sub(Long_and(Long_fromInt(var$11[var$12]), Long_create(4294967295, 0)), Long_and($carry0, Long_create(4294967295, 0))), $carry1);
        var$11[var$12] = Long_lo(var$13);
        $carry1 = Long_shr(var$13, 32);
        $carry0 = Long_shru($carry0, 32);
        $i = $i + 1 | 0;
    }
    $a = $a.data;
    $start = $start + $bLen | 0;
    var$9 = Long_add(Long_sub(Long_and(Long_fromInt($a[$start]), Long_create(4294967295, 0)), $carry0), $carry1);
    $a[$start] = Long_lo(var$9);
    return Long_hi(var$9);
}
function jnci_BufferedEncoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in = null;
    a.$out0 = null;
    a.$inPosition = 0;
    a.$outPosition = 0;
}
function cgxgbtp_Preloader$Asset() {
    var a = this; jl_Object.call(a);
    a.$succeed = 0;
    a.$failed = 0;
    a.$isLoading = 0;
    a.$loaded = Long_ZERO;
    a.$url = null;
    a.$type1 = null;
    a.$size3 = Long_ZERO;
    a.$mimeType = null;
}
var jm_Logical = $rt_classWithoutFields();
function jm_Logical_and($val, $that) {
    if ($that.$sign1 && $val.$sign1) {
        jm_BigInteger_$callClinit();
        if (jm_BigInteger_equals($that, jm_BigInteger_MINUS_ONE))
            return $val;
        if (jm_BigInteger_equals($val, jm_BigInteger_MINUS_ONE))
            return $that;
        if ($val.$sign1 > 0) {
            if ($that.$sign1 <= 0)
                return jm_Logical_andDiffSigns($val, $that);
            return jm_Logical_andPositive($val, $that);
        }
        if ($that.$sign1 > 0)
            return jm_Logical_andDiffSigns($that, $val);
        if ($val.$numberLength <= $that.$numberLength)
            return jm_Logical_andNegative($that, $val);
        return jm_Logical_andNegative($val, $that);
    }
    jm_BigInteger_$callClinit();
    return jm_BigInteger_ZERO;
}
function jm_Logical_andPositive($val, $that) {
    var $resLength, $resLength_0, $i, $i_0, $resDigits, var$8, $result;
    $resLength = $val.$numberLength;
    $resLength_0 = $that.$numberLength;
    if ($resLength < $resLength_0)
        $resLength_0 = $resLength;
    if ($val.$firstNonzeroDigit == (-2)) {
        if (!$val.$sign1)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$val.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $val.$firstNonzeroDigit = $resLength;
    }
    $i = $val.$firstNonzeroDigit;
    if ($that.$firstNonzeroDigit == (-2)) {
        if (!$that.$sign1)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$that.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $that.$firstNonzeroDigit = $resLength;
    }
    $i_0 = $that.$firstNonzeroDigit;
    if ($i > $i_0)
        $i_0 = $i;
    if ($i_0 >= $resLength_0) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ZERO;
    }
    $resDigits = $rt_createIntArray($resLength_0);
    var$8 = $resDigits.data;
    while ($i_0 < $resLength_0) {
        var$8[$i_0] = $val.$digits.data[$i_0] & $that.$digits.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    $result = new jm_BigInteger;
    jm_BigInteger_$callClinit();
    $result.$firstNonzeroDigit = (-2);
    $result.$sign1 = 1;
    $result.$numberLength = $resLength_0;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_Logical_andDiffSigns($positive, $negative) {
    var $resLength, $i, $iNeg, $resDigits, $limit, var$8, $result;
    if ($positive.$firstNonzeroDigit == (-2)) {
        if (!$positive.$sign1)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$positive.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $positive.$firstNonzeroDigit = $resLength;
    }
    $i = $positive.$firstNonzeroDigit;
    if ($negative.$firstNonzeroDigit == (-2)) {
        if (!$negative.$sign1)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$negative.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $negative.$firstNonzeroDigit = $resLength;
    }
    $iNeg = $negative.$firstNonzeroDigit;
    $resLength = $positive.$numberLength;
    if ($iNeg >= $resLength) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ZERO;
    }
    $resDigits = $rt_createIntArray($resLength);
    if ($i <= $iNeg)
        $i = $iNeg;
    if ($i == $iNeg) {
        $resDigits.data[$i] = ( -$negative.$digits.data[$i] | 0) & $positive.$digits.data[$i];
        $i = $i + 1 | 0;
    }
    $iNeg = $negative.$numberLength;
    $limit = $iNeg >= $resLength ? $resLength : $iNeg;
    var$8 = $resDigits.data;
    while ($i < $limit) {
        var$8[$i] = ($negative.$digits.data[$i] ^ (-1)) & $positive.$digits.data[$i];
        $i = $i + 1 | 0;
    }
    a: {
        if ($i >= $iNeg)
            while (true) {
                if ($i >= $resLength)
                    break a;
                var$8[$i] = $positive.$digits.data[$i];
                $i = $i + 1 | 0;
            }
    }
    $result = new jm_BigInteger;
    jm_BigInteger_$callClinit();
    $result.$firstNonzeroDigit = (-2);
    $result.$sign1 = 1;
    $result.$numberLength = $resLength;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_Logical_andNegative($longer, $shorter) {
    var $resLength, $i, $i_0, var$6, $digit, $resDigits, $result, $resLength_0, $resDigits_0, var$12;
    if ($longer.$firstNonzeroDigit == (-2)) {
        if (!$longer.$sign1)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$longer.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $longer.$firstNonzeroDigit = $resLength;
    }
    $i = $longer.$firstNonzeroDigit;
    if ($shorter.$firstNonzeroDigit == (-2)) {
        if (!$shorter.$sign1)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$shorter.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $shorter.$firstNonzeroDigit = $resLength;
    }
    $i_0 = $shorter.$firstNonzeroDigit;
    $resLength = $shorter.$numberLength;
    if ($i >= $resLength)
        return $longer;
    var$6 = $rt_compare($i_0, $i);
    if (var$6 > 0)
        $i = $i_0;
    $digit = var$6 > 0 ? ( -$shorter.$digits.data[$i] | 0) & ($longer.$digits.data[$i] ^ (-1)) : var$6 >= 0 ? ( -$shorter.$digits.data[$i] | 0) & ( -$longer.$digits.data[$i] | 0) : ($shorter.$digits.data[$i] ^ (-1)) & ( -$longer.$digits.data[$i] | 0);
    if (!$digit) {
        $i = $i + 1 | 0;
        a: {
            while ($i < $resLength) {
                $digit = ($longer.$digits.data[$i] | $shorter.$digits.data[$i]) ^ (-1);
                if ($digit)
                    break a;
                $i = $i + 1 | 0;
            }
        }
        if (!$digit) {
            b: {
                while (true) {
                    var$6 = $longer.$numberLength;
                    if ($i >= var$6)
                        break;
                    $digit = $longer.$digits.data[$i] ^ (-1);
                    if ($digit)
                        break b;
                    $i = $i + 1 | 0;
                }
            }
            if (!$digit) {
                $resLength = var$6 + 1 | 0;
                $resDigits = $rt_createIntArray($resLength);
                $resDigits.data[$resLength - 1 | 0] = 1;
                $result = new jm_BigInteger;
                jm_BigInteger_$callClinit();
                $result.$firstNonzeroDigit = (-2);
                $result.$sign1 = (-1);
                $result.$numberLength = $resLength;
                $result.$digits = $resDigits;
                return $result;
            }
        }
    }
    $resLength_0 = $longer.$numberLength;
    $resDigits_0 = $rt_createIntArray($resLength_0);
    var$12 = $resDigits_0.data;
    var$12[$i] =  -$digit | 0;
    $digit = $i + 1 | 0;
    while ($digit < $resLength) {
        var$12[$digit] = $longer.$digits.data[$digit] | $shorter.$digits.data[$digit];
        $digit = $digit + 1 | 0;
    }
    while ($digit < $resLength_0) {
        var$12[$digit] = $longer.$digits.data[$digit];
        $digit = $digit + 1 | 0;
    }
    $result = new jm_BigInteger;
    jm_BigInteger_$callClinit();
    $result.$firstNonzeroDigit = (-2);
    $result.$sign1 = (-1);
    $result.$numberLength = $resLength_0;
    $result.$digits = $resDigits_0;
    return $result;
}
function jnci_BufferedDecoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out1 = null;
    a.$inPosition0 = 0;
    a.$outPosition0 = 0;
}
function jnci_BufferedDecoder$Controller_hasMoreInput($this, $sz) {
    var var$2;
    var$2 = $this.$in0;
    return (var$2.$limit - var$2.$position | 0) < $sz ? 0 : 1;
}
function jnci_BufferedDecoder$Controller_hasMoreOutput($this, $sz) {
    var var$2;
    var$2 = $this.$out1;
    return (var$2.$limit - var$2.$position | 0) < $sz ? 0 : 1;
}
var jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException);
function jnc_CharacterCodingException__init_0() {
    var var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_(var_0);
    return var_0;
}
function jnc_CharacterCodingException__init_($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
}
var jl_AssertionError = $rt_classWithoutFields(jl_Error);
function cgxgbtp_Preloader$5() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$asset = null;
    a.$this$015 = null;
}
function jur_Matcher$1() {
    var a = this; jl_Object.call(a);
    a.$grN = 0;
    a.$val$gr = 0;
    a.$this$058 = null;
}
function jur_Matcher$1__init_(var_0, var_1) {
    var var_2 = new jur_Matcher$1();
    jur_Matcher$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Matcher$1__init_0($this, $this$0, var$2) {
    $this.$this$058 = $this$0;
    $this.$val$gr = var$2;
    $this.$grN = var$2;
}
function jur_Matcher$1_toString($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$this$058;
    var$2 = $this.$grN;
    var$1 = var$1.$matchResult;
    var$3 = var$1.$valid0;
    if (!var$3) {
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace(var$1);
        $rt_throw(var$1);
    }
    if (var$2 >= 0) {
        var$4 = $rt_compare(var$2, var$1.$groupCount);
        if (var$4 < 0) {
            a: {
                var$5 = var$1.$groupBounds.data;
                var$6 = var$2 * 2 | 0;
                if (var$5[var$6] < 0)
                    var$1 = null;
                else {
                    var$1 = var$1.$string0;
                    if (!var$3) {
                        var$1 = new jl_IllegalStateException;
                        var$1.$suppressionEnabled = 1;
                        var$1.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace(var$1);
                        $rt_throw(var$1);
                    }
                    if (var$2 >= 0 && var$4 < 0) {
                        var$7 = var$5[var$6];
                        if (!var$3) {
                            var$1 = new jl_IllegalStateException;
                            var$1.$suppressionEnabled = 1;
                            var$1.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace(var$1);
                            $rt_throw(var$1);
                        }
                        if (var$2 >= 0 && var$4 < 0) {
                            var$6 = var$5[var$6 + 1 | 0];
                            var$2 = $rt_compare(var$7, var$6);
                            if (var$2 > 0) {
                                var$1 = new jl_IndexOutOfBoundsException;
                                var$1.$suppressionEnabled = 1;
                                var$1.$writableStackTrace = 1;
                                jl_Throwable_fillInStackTrace(var$1);
                                $rt_throw(var$1);
                            }
                            if (!var$2) {
                                jl_String_$callClinit();
                                var$1 = jl_String_EMPTY;
                            } else if (!(!var$7 && var$6 == var$1.$characters.data.length)) {
                                var$8 = new jl_String;
                                var$5 = var$1.$characters;
                                var$2 = var$6 - var$7 | 0;
                                jl_String_$callClinit();
                                var$9 = $rt_createCharArray(var$2);
                                var$10 = var$9.data;
                                var$8.$characters = var$9;
                                var$6 = 0;
                                while (var$6 < var$2) {
                                    var$10[var$6] = var$5.data[var$6 + var$7 | 0];
                                    var$6 = var$6 + 1 | 0;
                                }
                                var$1 = var$8;
                            }
                            break a;
                        }
                        var$1 = new jl_IndexOutOfBoundsException;
                        jl_String_$callClinit();
                        var$8 = new jl_StringBuilder;
                        jl_Object__init_0(var$8);
                        var$8.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$2, 10);
                        var$11 = new jl_String;
                        var$5 = var$8.$buffer;
                        var$7 = var$8.$length;
                        jl_Object__init_0(var$11);
                        var$9 = $rt_createCharArray(var$7);
                        var$10 = var$9.data;
                        var$11.$characters = var$9;
                        var$6 = 0;
                        while (var$6 < var$7) {
                            var$10[var$6] = var$5.data[var$6 + 0 | 0];
                            var$6 = var$6 + 1 | 0;
                        }
                        var$1.$suppressionEnabled = 1;
                        var$1.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace(var$1);
                        var$1.$message = var$11;
                        $rt_throw(var$1);
                    }
                    var$1 = new jl_IndexOutOfBoundsException;
                    jl_String_$callClinit();
                    var$8 = new jl_StringBuilder;
                    jl_Object__init_0(var$8);
                    var$8.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$2, 10);
                    var$11 = new jl_String;
                    var$5 = var$8.$buffer;
                    var$7 = var$8.$length;
                    jl_Object__init_0(var$11);
                    var$9 = $rt_createCharArray(var$7);
                    var$10 = var$9.data;
                    var$11.$characters = var$9;
                    var$3 = 0;
                    while (var$3 < var$7) {
                        var$10[var$3] = var$5.data[var$3 + 0 | 0];
                        var$3 = var$3 + 1 | 0;
                    }
                    var$1.$suppressionEnabled = 1;
                    var$1.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace(var$1);
                    var$1.$message = var$11;
                    $rt_throw(var$1);
                }
            }
            return var$1;
        }
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_String_$callClinit();
    var$8 = new jl_StringBuilder;
    jl_Object__init_0(var$8);
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$2, 10);
    var$11 = new jl_String;
    var$5 = var$8.$buffer;
    var$7 = var$8.$length;
    jl_Object__init_0(var$11);
    var$9 = $rt_createCharArray(var$7);
    var$10 = var$9.data;
    var$11.$characters = var$9;
    var$6 = 0;
    while (var$6 < var$7) {
        var$10[var$6] = var$5.data[var$6 + 0 | 0];
        var$6 = var$6 + 1 | 0;
    }
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    var$1.$message = var$11;
    $rt_throw(var$1);
}
var jnci_AsciiEncoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_AsciiEncoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            $next = $c & 64512;
            if ($next != 55296 ? 0 : 1) {
                if (var$9 >= $inSize) {
                    var$13 = $controller.$in;
                    if (!((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)) {
                        $result = jnc_CoderResult_UNDERFLOW;
                        break a;
                    }
                    var$9 = var$9 + (-1) | 0;
                    break a;
                }
                if (!((var$10[var$9] & 64512) != 56320 ? 0 : 1)) {
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = new jnc_CoderResult;
                $result.$kind = 3;
                $result.$length0 = 2;
                break a;
            }
            if ($next != 56320 ? 0 : 1) {
                $result = new jnc_CoderResult;
                $result.$kind = 2;
                $result.$length0 = 1;
            }
            if ($c >= 128) {
                $result = new jnc_CoderResult;
                $result.$kind = 3;
                $result.$length0 = 1;
                var$9 = var$9 + (-1) | 0;
                break a;
            }
            var$10 = $outArray.data;
            $next = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = $next;
        }
        var$9 = $inPos;
    }
    $controller.$inPosition = var$9;
    $controller.$outPosition = $outPos;
    return $result;
}
var jnci_Iso8859Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_Iso8859Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            $next = $c & 64512;
            if ($next != 55296 ? 0 : 1) {
                if (var$9 == $inSize) {
                    var$13 = $controller.$in;
                    if (!((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)) {
                        $result = jnc_CoderResult_UNDERFLOW;
                        break a;
                    }
                    var$9 = var$9 + (-1) | 0;
                    break a;
                }
                if (!((var$10[var$9] & 64512) != 56320 ? 0 : 1)) {
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = new jnc_CoderResult;
                $result.$kind = 3;
                $result.$length0 = 2;
                break a;
            }
            if ($next != 56320 ? 0 : 1) {
                $result = new jnc_CoderResult;
                $result.$kind = 2;
                $result.$length0 = 1;
            }
            if ($c >= 256) {
                var$9 = var$9 + (-1) | 0;
                $result = new jnc_CoderResult;
                $result.$kind = 3;
                $result.$length0 = 1;
                break a;
            }
            var$10 = $outArray.data;
            $next = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = $next;
        }
        var$9 = $inPos;
    }
    $controller.$inPosition = var$9;
    $controller.$outPosition = $outPos;
    return $result;
}
function jnci_UTF16Encoder() {
    var a = this; jnci_BufferedEncoder.call(a);
    a.$bom0 = 0;
    a.$littleEndian0 = 0;
}
function jnci_UTF16Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var var$8, var$9;
    if ($this.$bom0) {
        if (($outPos + 2 | 0) > $outSize) {
            $controller = $controller.$out0;
            return !($controller.$position >= $controller.$limit ? 0 : 1) ? jnc_CoderResult_OVERFLOW : null;
        }
        $this.$bom0 = 0;
        if (!$this.$littleEndian0) {
            var$8 = $outArray.data;
            var$9 = $outPos + 1 | 0;
            var$8[$outPos] = (-2);
            $outPos = var$9 + 1 | 0;
            var$8[var$9] = (-1);
        } else {
            var$8 = $outArray.data;
            var$9 = $outPos + 1 | 0;
            var$8[$outPos] = (-1);
            $outPos = var$9 + 1 | 0;
            var$8[var$9] = (-2);
        }
    }
    return !$this.$littleEndian0 ? jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
}
function jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, var$12, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            $inPos = $c & 64512;
            if (!($inPos != 55296 ? 0 : 1)) {
                if ($inPos != 56320 ? 0 : 1) {
                    $inPos = var$10 + (-1) | 0;
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    var$12 = $controller.$out0;
                    if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                $inPos = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                $outPos = $inPos + 1 | 0;
                var$9[$inPos] = $c >> 8 << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    var$12 = $controller.$in;
                    if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!(($next & 64512) != 56320 ? 0 : 1)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    var$12 = $controller.$out0;
                    if ((var$12.$limit - var$12.$position | 0) < 4 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = $c >> 8 << 24 >> 24;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = ($next & 255) << 24 >> 24;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = $next >> 8 << 24 >> 24;
            }
        }
    }
    $controller.$inPosition = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
}
function jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, var$12, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            $inPos = $c & 64512;
            if (!($inPos != 55296 ? 0 : 1)) {
                if ($inPos != 56320 ? 0 : 1) {
                    $inPos = var$10 + (-1) | 0;
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    var$12 = $controller.$out0;
                    if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                $inPos = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                $outPos = $inPos + 1 | 0;
                var$9[$inPos] = ($c & 255) << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    var$12 = $controller.$in;
                    if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!(($next & 64512) != 56320 ? 0 : 1)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    var$12 = $controller.$out0;
                    if ((var$12.$limit - var$12.$position | 0) < 4 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = ($c & 255) << 24 >> 24;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $next >> 8 << 24 >> 24;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = ($next & 255) << 24 >> 24;
            }
        }
    }
    $controller.$inPosition = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
}
function cgxgbtp_Preloader$7() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$listener5 = null;
    a.$val$type = null;
    a.$val$url2 = null;
    a.$this$016 = null;
}
function cgxgbtp_Preloader$7_onProgress($this, $amount) {
    $this.$val$listener5.$val$asset.$loaded = Long_fromNumber($amount);
}
function cgxgbtp_Preloader$7_onFailure($this, $urll) {
    $urll = $this.$val$listener5.$val$asset;
    $urll.$failed = 1;
    $urll.$isLoading = 0;
}
function cgxgbtp_Preloader$7_onSuccess($this, $urll, $result) {
    cgxgbtp_Preloader_putAssetInMap($this.$this$016, $this.$val$type, $this.$val$url2, $result);
    $urll = $this.$val$listener5.$val$asset;
    $urll.$succeed = 1;
    $urll.$isLoading = 0;
    return 0;
}
function cbgu_StringBuilder() {
    var a = this; jl_Object.call(a);
    a.$chars = null;
    a.$length2 = 0;
}
var cbgu_StringBuilder_digits = null;
function cbgu_StringBuilder_enlargeBuffer($this, $min) {
    var var$2, var$3, $newSize, $newData;
    var$2 = $this.$chars;
    var$3 = var$2.data.length;
    $newSize = ((var$3 >> 1) + var$3 | 0) + 2 | 0;
    if ($min > $newSize)
        $newSize = $min;
    $newData = $rt_createCharArray($newSize);
    jl_System_arraycopy(var$2, 0, $newData, 0, $this.$length2);
    $this.$chars = $newData;
}
function cbgu_StringBuilder_appendNull($this) {
    var $newSize, var$2, var$3;
    $newSize = $this.$length2 + 4 | 0;
    if ($newSize > $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$2 = $this.$chars.data;
    var$3 = $this.$length2;
    $newSize = var$3 + 1 | 0;
    $this.$length2 = $newSize;
    var$2[var$3] = 110;
    var$3 = $newSize + 1 | 0;
    $this.$length2 = var$3;
    var$2[$newSize] = 117;
    $newSize = var$3 + 1 | 0;
    $this.$length2 = $newSize;
    var$2[var$3] = 108;
    $this.$length2 = $newSize + 1 | 0;
    var$2[$newSize] = 108;
}
function cbgu_StringBuilder_append0($this, $ch) {
    var var$2, var$3, var$4;
    var$2 = $this.$length2;
    if (var$2 == $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, var$2 + 1 | 0);
    var$3 = $this.$chars.data;
    var$4 = $this.$length2;
    $this.$length2 = var$4 + 1 | 0;
    var$3[var$4] = $ch;
}
function cbgu_StringBuilder_append($this, $value, $minLength, $prefix) {
    var $j, var$5, var$6, var$7;
    if ($value == (-2147483648)) {
        $j = $rt_s(672).$characters.data.length;
        $value = $this.$length2 + $j | 0;
        if ($value > $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $value);
        jl_String_getChars($rt_s(672), 0, $j, $this.$chars, $this.$length2);
        $this.$length2 = $value;
        return $this;
    }
    if ($value < 0) {
        $j = $this.$length2;
        if ($j == $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $j + 1 | 0);
        var$5 = $this.$chars.data;
        var$6 = $this.$length2;
        $this.$length2 = var$6 + 1 | 0;
        var$5[var$6] = 45;
        $value =  -$value | 0;
    }
    a: {
        if ($minLength > 1) {
            var$7 = $value >= 0 ? 1 : 2;
            var$6 = $value;
            while (true) {
                var$6 = var$6 / 10 | 0;
                if (!var$6)
                    break;
                var$7 = var$7 + 1 | 0;
            }
            $j = $minLength - var$7 | 0;
            while (true) {
                if ($j <= 0)
                    break a;
                $minLength = $this.$length2;
                if ($minLength == $this.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($this, $minLength + 1 | 0);
                var$5 = $this.$chars.data;
                var$7 = $this.$length2;
                $this.$length2 = var$7 + 1 | 0;
                var$5[var$7] = $prefix;
                $j = $j + (-1) | 0;
            }
        }
    }
    if ($value >= 10000) {
        if ($value >= 1000000000) {
            $minLength = cbgu_StringBuilder_digits.data[Long_lo(Long_div(Long_rem(Long_fromInt($value), Long_create(1410065408, 2)), Long_fromInt(1000000000)))];
            $prefix = $this.$length2;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            $j = $this.$length2;
            $this.$length2 = $j + 1 | 0;
            var$5[$j] = $minLength;
        }
        if ($value >= 100000000) {
            $minLength = cbgu_StringBuilder_digits.data[($value % 1000000000 | 0) / 100000000 | 0];
            $prefix = $this.$length2;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            $j = $this.$length2;
            $this.$length2 = $j + 1 | 0;
            var$5[$j] = $minLength;
        }
        if ($value >= 10000000) {
            $minLength = cbgu_StringBuilder_digits.data[($value % 100000000 | 0) / 10000000 | 0];
            $prefix = $this.$length2;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            $j = $this.$length2;
            $this.$length2 = $j + 1 | 0;
            var$5[$j] = $minLength;
        }
        if ($value >= 1000000) {
            $minLength = cbgu_StringBuilder_digits.data[($value % 10000000 | 0) / 1000000 | 0];
            $prefix = $this.$length2;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            $j = $this.$length2;
            $this.$length2 = $j + 1 | 0;
            var$5[$j] = $minLength;
        }
        if ($value >= 100000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000 | 0) / 100000 | 0]);
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000 | 0) / 10000 | 0]);
    }
    if ($value >= 1000)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000 | 0) / 1000 | 0]);
    if ($value >= 100)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000 | 0) / 100 | 0]);
    if ($value >= 10)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100 | 0) / 10 | 0]);
    cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[$value % 10 | 0]);
    return $this;
}
function cbgu_StringBuilder__clinit_() {
    cbgu_StringBuilder_digits = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
}
var jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
var jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length4 = 0;
}
function jnc_MalformedInputException_getMessage($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$length4;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(673));
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$3;
}
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length5 = 0;
}
function jnc_UnmappableCharacterException_getMessage($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$length5;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(674));
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
    var$3 = new jl_String;
    var$4 = var$2.$buffer;
    var$5 = var$2.$length;
    jl_String_$callClinit();
    var$6 = $rt_createCharArray(var$5);
    var$7 = var$6.data;
    var$3.$characters = var$6;
    var$8 = 0;
    while (var$8 < var$5) {
        var$7[var$8] = var$4.data[var$8 + 0 | 0];
        var$8 = var$8 + 1 | 0;
    }
    return var$3;
}
var cgxgbtp_AssetDownloadImpl$7 = $rt_classWithoutFields();
var cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = null;
function cgxgbtp_AssetDownloadImpl$7_$callClinit() {
    cgxgbtp_AssetDownloadImpl$7_$callClinit = $rt_eraseClinit(cgxgbtp_AssetDownloadImpl$7);
    cgxgbtp_AssetDownloadImpl$7__clinit_();
}
function cgxgbtp_AssetDownloadImpl$7__clinit_() {
    var var$1, var$2;
    cgxgbtp_AssetType_$callClinit();
    var$1 = $rt_createIntArray((cgxgbtp_AssetType_$VALUES.$clone()).data.length);
    var$2 = var$1.data;
    cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = var$1;
    var$2[cgxgbtp_AssetType_Text.$ordinal] = 1;
    var$2[cgxgbtp_AssetType_Image.$ordinal] = 2;
    var$2[cgxgbtp_AssetType_Binary.$ordinal] = 3;
    var$2[cgxgbtp_AssetType_Audio.$ordinal] = 4;
    var$2[cgxgbtp_AssetType_Directory.$ordinal] = 5;
}
var jl_InstantiationException = $rt_classWithoutFields(jl_ReflectiveOperationException);
var jl_IllegalAccessException = $rt_classWithoutFields(jl_ReflectiveOperationException);
var jlr_InvocationTargetException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function cgxgbtp_AssetDownloadImpl$4() {
    var a = this; jl_Thread.call(a);
    a.$val$async0 = 0;
    a.$val$url0 = null;
    a.$val$listener1 = null;
    a.$this$07 = null;
}
function cgxgbtp_AssetDownloadImpl$4_run($this) {
    var var$1, var$2, var$3, var$4, var$5;
    var$1 = new $rt_globals.XMLHttpRequest();
    var$2 = new cgxgbtp_AssetDownloadImpl$4$1;
    var$2.$this$12 = $this;
    var$2.$val$request1 = var$1;
    var$2 = otji_JS_function(var$2, "handleEvent");
    var$1.onreadystatechange = var$2;
    var$2 = $this.$this$07;
    var$3 = $this.$val$listener1;
    var$4 = new cgxgbtp_AssetDownloadImpl$6;
    var$4.$this$09 = var$2;
    var$4.$val$listener3 = var$3;
    var$2 = otji_JS_function(var$4, "handleEvent");
    var$1.onprogress = var$2;
    var$3 = $this.$val$url0;
    var$5 = $this.$val$async0;
    var$1.open("GET", $rt_ustr(var$3), !!var$5);
    if ($this.$val$async0) {
        var$3 = "arraybuffer";
        var$1.responseType = var$3;
    }
    var$1.send();
}
function cgxgbtp_AssetDownloadImpl$3() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$listener4 = null;
    a.$this$010 = null;
}
function cgxgbtp_AssetDownloadImpl$3_onProgress($this, $amount) {
    $this.$val$listener4.$val$listener5.$val$asset.$loaded = Long_fromNumber($amount);
}
function cgxgbtp_AssetDownloadImpl$3_onFailure($this, $url) {
    $url = $this.$val$listener4.$val$listener5.$val$asset;
    $url.$failed = 1;
    $url.$isLoading = 0;
}
function cgxgbtp_AssetDownloadImpl$3_onSuccess($this, var$1, var$2) {
    var$2 = $this.$val$listener4;
    var$1 = null;
    cgxgbtp_Preloader_putAssetInMap(var$2.$this$016, var$2.$val$type, var$2.$val$url2, var$1);
    var$1 = var$2.$val$listener5.$val$asset;
    var$1.$succeed = 1;
    var$1.$isLoading = 0;
    return 0;
}
var otcir_Converter = $rt_classWithoutFields();
function jl_Boolean() {
    jl_Object.call(this);
    this.$value = 0;
}
var jl_Boolean_TRUE = null;
var jl_Boolean_FALSE = null;
var jl_Boolean_TYPE = null;
function jl_Boolean_booleanValue($this) {
    return $this.$value;
}
function jl_Boolean__clinit_() {
    var var$1;
    var$1 = new jl_Boolean;
    var$1.$value = 1;
    jl_Boolean_TRUE = var$1;
    var$1 = new jl_Boolean;
    var$1.$value = 0;
    jl_Boolean_FALSE = var$1;
    jl_Boolean_TYPE = $rt_cls($rt_booleancls());
}
var cbgg_Colors = $rt_classWithoutFields();
var cbgg_Colors_map = null;
function cbgg_Colors_$callClinit() {
    cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
    cbgg_Colors__clinit_();
}
function cbgg_Colors_reset() {
    var var$1, var$2, var$3, var$4, var$5, var$6;
    cbgg_Colors_$callClinit();
    var$1 = cbgg_Colors_map;
    if (var$1.$size2) {
        var$1.$size2 = 0;
        var$2 = var$1.$keyTable.data;
        var$3 = null;
        var$4 = 0;
        var$5 = var$2.length;
        if (var$4 > var$5) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$4 < var$5) {
            var$6 = var$4 + 1 | 0;
            var$2[var$4] = var$3;
            var$4 = var$6;
        }
        var$2 = var$1.$valueTable.data;
        var$3 = null;
        var$4 = 0;
        var$5 = var$2.length;
        if (var$4 > var$5) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$4 < var$5) {
            var$6 = var$4 + 1 | 0;
            var$2[var$4] = var$3;
            var$4 = var$6;
        }
    }
    cbgg_Color_$callClinit();
    cbgu_ObjectMap_put(var$1, $rt_s(675), cbgg_Color_CLEAR);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(676), cbgg_Color_BLACK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(677), cbgg_Color_WHITE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(678), cbgg_Color_LIGHT_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(679), cbgg_Color_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(680), cbgg_Color_DARK_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(681), cbgg_Color_BLUE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(682), cbgg_Color_NAVY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(683), cbgg_Color_ROYAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(684), cbgg_Color_SLATE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(685), cbgg_Color_SKY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(686), cbgg_Color_CYAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(687), cbgg_Color_TEAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(688), cbgg_Color_GREEN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(689), cbgg_Color_CHARTREUSE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(690), cbgg_Color_LIME);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(691), cbgg_Color_FOREST);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(692), cbgg_Color_OLIVE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(693), cbgg_Color_YELLOW);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(694), cbgg_Color_GOLD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(695), cbgg_Color_GOLDENROD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(696), cbgg_Color_ORANGE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(697), cbgg_Color_BROWN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(698), cbgg_Color_TAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(699), cbgg_Color_FIREBRICK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(700), cbgg_Color_RED);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(701), cbgg_Color_SCARLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(702), cbgg_Color_CORAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(703), cbgg_Color_SALMON);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(704), cbgg_Color_PINK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(705), cbgg_Color_MAGENTA);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(706), cbgg_Color_PURPLE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(707), cbgg_Color_VIOLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(708), cbgg_Color_MAROON);
}
function cbgg_Colors__clinit_() {
    cbgg_Colors_map = cbgu_ObjectMap__init_(51, 0.800000011920929);
    cbgg_Colors_reset();
}
function cgxgbtp_AssetDownloadImpl$5() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$listener0 = null;
    a.$val$crossOrigin = null;
    a.$val$mimeType = null;
    a.$this$06 = null;
}
function cgxgbtp_AssetDownloadImpl$5_onProgress($this, $amount) {
    $this.$val$listener0.$val$listener5.$val$asset.$loaded = Long_fromNumber($amount);
}
function cgxgbtp_AssetDownloadImpl$5_onFailure($this, $url) {
    $url = $this.$val$listener0.$val$listener5.$val$asset;
    $url.$failed = 1;
    $url.$isLoading = 0;
}
function cgxgbtp_AssetDownloadImpl$5_onSuccess($this, $url, $result) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = $rt_globals.window.document.createElement("img");
    var$4 = $this.$val$crossOrigin;
    if (var$4 !== null)
        var$3.setAttribute("crossOrigin", $rt_ustr(var$4));
    var$4 = $this.$this$06;
    var$4.$queue = var$4.$queue + 1 | 0;
    var$4 = new cgxgbtp_AssetDownloadImpl$5$1;
    var$4.$this$13 = $this;
    var$4.$val$url3 = $url;
    var$4.$val$result = $result;
    var$4.$val$image = var$3;
    var$3.addEventListener("load", otji_JS_function(var$4, "handleEvent"), !!0);
    var$3.addEventListener("error", otji_JS_function(var$4, "handleEvent"), !!0);
    if (!$this.$this$06.$useInlineBase64) {
        $url = $rt_ustr($url);
        var$3.src = $url;
    } else {
        $url = $this.$val$mimeType;
        $result = cgxgbtp_Blob_toBase64($result);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(709));
        var$5 = var$4.$length;
        if ($url === null)
            $url = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, $url);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(710));
        var$5 = var$4.$length;
        if ($result === null)
            $result = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, $result);
        $url = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$9 = var$8.data;
        $url.$characters = var$8;
        var$10 = 0;
        while (var$10 < var$7) {
            var$9[var$10] = var$6.data[var$10 + 0 | 0];
            var$10 = var$10 + 1 | 0;
        }
        $url = $rt_ustr($url);
        var$3.src = $url;
    }
    return 0;
}
function cgxgbtp_AssetDownloadImpl$5_onSuccess0($this, var$1, var$2) {
    return cgxgbtp_AssetDownloadImpl$5_onSuccess($this, var$1, var$2);
}
function cgxgbtp_AssetDownloadImpl$4$1() {
    var a = this; jl_Object.call(a);
    a.$val$request1 = null;
    a.$this$12 = null;
}
function cgxgbtp_AssetDownloadImpl$4$1_handleEvent($this, $evt) {
    var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$15 = $thread.pop();var$14 = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$val$request1.readyState == 4) {
            if ($this.$val$request1.status == 200) {
                $evt = $this.$this$12;
                if ($evt.$this$07.$showLogs) {
                    if (jl_System_outCache === null) {
                        var$2 = new ji_PrintStream;
                        var$2.$out = otcic_StdoutOutputStream_INSTANCE;
                        var$3 = new jl_StringBuilder;
                        var$3.$buffer = $rt_createCharArray(16);
                        var$2.$sb = var$3;
                        var$2.$buffer2 = $rt_createCharArray(32);
                        var$2.$autoFlush = 0;
                        jnci_UTF8Charset_$callClinit();
                        var$2.$charset = jnci_UTF8Charset_INSTANCE;
                        jl_System_outCache = var$2;
                    }
                    var$4 = jl_System_outCache;
                    $evt = $evt.$val$url0;
                    var$3 = new jl_StringBuilder;
                    var$3.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(644));
                    var$5 = var$3.$length;
                    if ($evt === null)
                        $evt = $rt_s(1);
                    jl_AbstractStringBuilder_insert(var$3, var$5, $evt);
                    ji_PrintStream_println(var$4, jl_String__init_1(var$3.$buffer, 0, var$3.$length));
                }
                var$4 = $this.$val$request1.response;
                var$6 = new $rt_globals.Int8Array(var$4);
                $evt = $this.$this$12;
                var$3 = $evt.$val$listener1;
                var$2 = $evt.$val$url0;
                $evt = new cgxgbtp_Blob;
                $evt.$data3 = var$6;
                $evt.$response = var$4;
                var$3.$onSuccess(var$2, $evt);
            } else if ($this.$val$request1.status != 404 && $this.$val$request1.status != 403) {
                try {
                    var$7 = Long_fromInt(100);
                    $ptr = 1;
                    continue main;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
                $evt = $this.$this$12;
                var$3 = $evt.$this$07;
                var$5 = $evt.$val$async0;
                var$2 = $evt.$val$url0;
                var$6 = $evt.$val$listener1;
                if (var$3.$showLogs) {
                    if (jl_System_outCache === null) {
                        var$4 = new ji_PrintStream;
                        var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                        $evt = new jl_StringBuilder;
                        $evt.$buffer = $rt_createCharArray(16);
                        var$4.$sb = $evt;
                        var$4.$buffer2 = $rt_createCharArray(32);
                        var$4.$autoFlush = 0;
                        jnci_UTF8Charset_$callClinit();
                        var$4.$charset = jnci_UTF8Charset_INSTANCE;
                        jl_System_outCache = var$4;
                    }
                    var$4 = jl_System_outCache;
                    var$8 = new jl_StringBuilder;
                    var$8.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(119));
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, var$2 === null ? $rt_s(1) : var$2);
                    var$9 = new jl_String;
                    var$10 = var$8.$buffer;
                    var$11 = var$8.$length;
                    jl_String_$callClinit();
                    var$12 = $rt_createCharArray(var$11);
                    var$13 = var$12.data;
                    var$9.$characters = var$12;
                    var$14 = 0;
                    while (var$14 < var$11) {
                        var$13[var$14] = var$10.data[var$14 + 0 | 0];
                        var$14 = var$14 + 1 | 0;
                    }
                    $evt = var$4.$sb;
                    jl_AbstractStringBuilder_insert($evt, $evt.$length, var$9);
                    var$14 = $evt.$length;
                    jl_AbstractStringBuilder_insertSpace($evt, var$14, var$14 + 1 | 0);
                    $evt.$buffer.data[var$14] = 10;
                    ji_PrintStream_printSB(var$4);
                }
                var$3.$queue = var$3.$queue + 1 | 0;
                $evt = new cgxgbtp_AssetDownloadImpl$4;
                $evt.$this$07 = var$3;
                $evt.$val$async0 = var$5;
                $evt.$val$url0 = var$2;
                $evt.$val$listener1 = var$6;
                var$3 = null;
                var$2 = null;
                $evt.$finishedLock = new jl_Object;
                $evt.$alive = 1;
                $evt.$name2 = var$2;
                $evt.$target = var$3;
                var$15 = jl_Thread_nextId;
                jl_Thread_nextId = var$15 + 1 | 0;
                $evt.$id1 = Long_fromInt(var$15);
                var$3 = new jl_Thread$start$lambda$_4_0;
                var$3.$_01 = $evt;
                otp_Platform_startThread(var$3);
            } else {
                $evt = $this.$this$12;
                $evt.$val$listener1.$onFailure($evt.$val$url0);
            }
            $evt = $this.$this$12.$this$07;
            $evt.$queue = $evt.$queue - 1 | 0;
        }
        return;
    case 1:
        a: {
            try {
                jl_Thread_sleep(var$7);
                if ($rt_suspending()) {
                    break main;
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
        }
        $evt = $this.$this$12;
        var$3 = $evt.$this$07;
        var$5 = $evt.$val$async0;
        var$2 = $evt.$val$url0;
        var$6 = $evt.$val$listener1;
        if (var$3.$showLogs) {
            if (jl_System_outCache === null) {
                var$4 = new ji_PrintStream;
                var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                $evt = new jl_StringBuilder;
                $evt.$buffer = $rt_createCharArray(16);
                var$4.$sb = $evt;
                var$4.$buffer2 = $rt_createCharArray(32);
                var$4.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$4.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_outCache = var$4;
            }
            var$4 = jl_System_outCache;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(119));
            jl_AbstractStringBuilder_insert(var$8, var$8.$length, var$2 === null ? $rt_s(1) : var$2);
            var$9 = new jl_String;
            var$10 = var$8.$buffer;
            var$11 = var$8.$length;
            jl_String_$callClinit();
            var$12 = $rt_createCharArray(var$11);
            var$13 = var$12.data;
            var$9.$characters = var$12;
            var$14 = 0;
            while (var$14 < var$11) {
                var$13[var$14] = var$10.data[var$14 + 0 | 0];
                var$14 = var$14 + 1 | 0;
            }
            $evt = var$4.$sb;
            jl_AbstractStringBuilder_insert($evt, $evt.$length, var$9);
            var$14 = $evt.$length;
            jl_AbstractStringBuilder_insertSpace($evt, var$14, var$14 + 1 | 0);
            $evt.$buffer.data[var$14] = 10;
            ji_PrintStream_printSB(var$4);
        }
        var$3.$queue = var$3.$queue + 1 | 0;
        $evt = new cgxgbtp_AssetDownloadImpl$4;
        $evt.$this$07 = var$3;
        $evt.$val$async0 = var$5;
        $evt.$val$url0 = var$2;
        $evt.$val$listener1 = var$6;
        var$3 = null;
        var$2 = null;
        $evt.$finishedLock = new jl_Object;
        $evt.$alive = 1;
        $evt.$name2 = var$2;
        $evt.$target = var$3;
        var$15 = jl_Thread_nextId;
        jl_Thread_nextId = var$15 + 1 | 0;
        $evt.$id1 = Long_fromInt(var$15);
        var$3 = new jl_Thread$start$lambda$_4_0;
        var$3.$_01 = $evt;
        otp_Platform_startThread(var$3);
        $evt = $this.$this$12.$this$07;
        $evt.$queue = $evt.$queue - 1 | 0;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $evt, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, $ptr);
}
function cgxgbtp_AssetDownloadImpl$4$1_handleEvent$exported$0(var$0, var$1) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        cgxgbtp_AssetDownloadImpl$4$1_handleEvent(var$0, var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$0, var$1, $ptr);
}
function cgxgbtp_AssetDownloadImpl$5$1() {
    var a = this; jl_Object.call(a);
    a.$val$url3 = null;
    a.$val$result = null;
    a.$val$image = null;
    a.$this$13 = null;
}
function cgxgbtp_AssetDownloadImpl$5$1_handleEvent($this, $evt) {
    var var$2;
    if (jl_String_equals($rt_str($evt.type), $rt_s(711))) {
        $evt = $this.$this$13.$val$listener0.$val$listener5.$val$asset;
        $evt.$failed = 1;
        $evt.$isLoading = 0;
    } else {
        $evt = $this.$val$result;
        $evt.$image0 = $this.$val$image;
        var$2 = $this.$this$13.$val$listener0;
        cgxgbtp_Preloader_putAssetInMap(var$2.$this$016, var$2.$val$type, var$2.$val$url2, $evt);
        $evt = var$2.$val$listener5.$val$asset;
        $evt.$succeed = 1;
        $evt.$isLoading = 0;
    }
    $evt = $this.$this$13.$this$06;
    $evt.$queue = $evt.$queue - 1 | 0;
}
function cgxgbtp_AssetDownloadImpl$5$1_handleEvent$exported$0(var$0, var$1) {
    cgxgbtp_AssetDownloadImpl$5$1_handleEvent(var$0, var$1);
}
$rt_packages([-1, "com", 0, "github", 1, "xpenatan", 2, "gdx", 3, "backends", 4, "teavm", 5, "preloader", 0, "badlogic", 7, "gdx", 8, "utils", 9, "reflect", 8, "scenes", 11, "scene2d", 12, "ui", 8, "graphics", 14, "glutils", 14, "g2d", -1, "java", 17, "util", 18, "regex", 17, "nio", 20, "charset", 17, "io", 17, "lang", 23, "reflect", -1, "org", 25, "teavm", 26, "classlib", 27, "impl", 28, "unicode"
]);
$rt_metadata([jl_Object, "Object", 23, 0, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString)],
cgtt_TeaVMLauncher, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_UIUtilsEmu, 0, jl_Object, [], 0, 3, 0, cbgssu_UIUtilsEmu_$callClinit, 0,
cbg_InputProcessor, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_InputAdapter, 0, jl_Object, [cbg_InputProcessor], 0, 3, 0, 0, 0,
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Stage, 0, cbg_InputAdapter, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Event, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Enum_toString)],
cbgss_Touchable, 0, jl_Enum, [], 12, 3, 0, cbgss_Touchable_$callClinit, 0,
cbgss_Actor, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Cullable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Group, 0, cbgss_Actor, [cbgssu_Cullable], 0, 3, 0, 0, 0,
cbgssu_Disableable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_Selection, 0, jl_Object, [cbgssu_Disableable, jl_Iterable], 0, 3, 0, 0, 0,
cbgss_EventListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_InputListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, 0, 0,
cbgssu_DragListener, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop$1, 0, cbgssu_DragListener, [], 0, 0, 0, 0, 0,
cbgssu_FocusListener$FocusEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgssu_FocusListener$FocusEvent$Type_$callClinit, 0,
cbgssu_Drawable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_TransformDrawable, 0, jl_Object, [cbgssu_Drawable], 3, 3, 0, 0, 0,
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Timer$Task, 0, jl_Object, [jl_Runnable], 1, 3, 0, 0, 0,
cbgssu_DragScrollListener$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_ArraySelection, 0, cbgssu_Selection, [], 0, 3, 0, 0, 0,
cbgssu_ActorGestureListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop$Source, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgssu_DragAndDrop$Payload, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgi_GestureDetector$GestureListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgi_GestureDetector$GestureAdapter, 0, jl_Object, [cbgi_GestureDetector$GestureListener], 0, 3, 0, 0, 0,
cbgssu_ActorGestureListener$1, 0, cbgi_GestureDetector$GestureAdapter, [], 0, 0, 0, 0, 0,
cbgssu_FocusListener$FocusEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
cbgssu_FocusListener$1, 0, jl_Object, [], 32, 0, 0, cbgssu_FocusListener$1_$callClinit, 0,
cbgssu_DragAndDrop$Target, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgssu_ActorGestureListener$2, 0, jl_Object, [], 32, 0, 0, cbgssu_ActorGestureListener$2_$callClinit, 0,
cbgssu_DragScrollListener$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_BaseDrawable, 0, jl_Object, [cbgssu_Drawable], 0, 3, 0, 0, 0,
cbgssu_NinePatchDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cbgssu_UIUtils, 0, jl_Object, [], 4, 3, 0, cbgssu_UIUtils_$callClinit, 0,
cbgssu_FocusListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
cbgssu_DragScrollListener, 0, cbgssu_DragListener, [], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_ScissorStack, 0, jl_Object, [], 0, 3, 0, cbgssu_ScissorStack_$callClinit, 0,
cbgssu_ChangeListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
cbgssu_TextureRegionDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0]);
$rt_metadata([cbgssu_SpriteDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cbgssu_ClickListener, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
cbgssu_TiledDrawable, 0, cbgssu_TextureRegionDrawable, [], 0, 3, 0, 0, 0,
cbgssu_ChangeListener$ChangeEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
cbgssu_Layout, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_InputEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
cbgss_Stage$TouchFocus, 0, jl_Object, [cbgu_Pool$Poolable], 4, 3, 0, 0, 0,
cbgss_InputListener$1, 0, jl_Object, [], 32, 0, 0, cbgss_InputListener$1_$callClinit, 0,
cbgss_InputEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgss_InputEvent$Type_$callClinit, 0,
cbgss_Action, 0, jl_Object, [cbgu_Pool$Poolable], 1, 3, 0, 0, 0,
cbgssa_DelegateAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_TimeScaleAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssa_DelayAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssa_TemporalAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_RelativeTemporalAction, 0, cbgssa_TemporalAction, [], 1, 3, 0, 0, 0,
cbgssa_SizeByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_EventAction$1, 0, jl_Object, [cbgss_EventListener], 0, 0, 0, 0, 0,
cbgssa_ParallelAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_SequenceAction, 0, cbgssa_ParallelAction, [], 0, 3, 0, 0, 0,
cbgssa_RemoveListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_AddListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_TouchableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_Actions, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssa_EventAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_CountdownEventAction, 0, cbgssa_EventAction, [], 0, 3, 0, 0, 0,
cbgssa_MoveToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_ScaleToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_RotateByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_VisibleAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_ScaleByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_IntAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_ColorAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_RunnableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_SizeToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_LayoutAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_RemoveActorAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_AfterAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssa_FloatAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_RemoveAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_MoveByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_RepeatAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssa_AddAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_RotateToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_AlphaAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssu_Skin, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgssu_WidgetGroup, 0, cbgss_Group, [cbgssu_Layout], 0, 3, 0, 0, 0,
cbgssu_Table, 0, cbgssu_WidgetGroup, [], 0, 3, 0, cbgssu_Table_$callClinit, 0,
cbgssu_Button, 0, cbgssu_Table, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_TextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgssu_CheckBox, 0, cbgssu_TextButton, [], 0, 3, 0, 0, 0]);
$rt_metadata([cbgssu_Dialog$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Container, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgu_Json$Serializer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Json$ReadOnlySerializer, 0, jl_Object, [cbgu_Json$Serializer], 1, 3, 0, 0, 0,
cbgssu_Skin$2, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Widget, 0, cbgss_Actor, [cbgssu_Layout], 0, 3, 0, 0, 0,
cbgssu_Touchpad, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
cbgssu_Dialog$4, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Value, 0, jl_Object, [], 1, 3, 0, cbgssu_Value_$callClinit, 0,
cbgssu_Value$4, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Value$7, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_TextField$TextFieldClickListener, 0, cbgssu_ClickListener, [], 0, 3, 0, 0, 0,
cbgssu_TextArea$TextAreaListener, 0, cbgssu_TextField$TextFieldClickListener, [], 0, 3, 0, 0, 0,
cbgssu_Table$3, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Window, 0, cbgssu_Table, [], 0, 3, 0, 0, 0,
cbgssu_Value$9, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgm_Shape2D, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Rectangle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgssu_Table$DebugRect, "Table$DebugRect", 13, cbgm_Rectangle, [], 0, 3, 0, cbgssu_Table$DebugRect_$callClinit, 0,
cbgssu_Skin$5, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_TextField, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_TextArea, 0, cbgssu_TextField, [], 0, 3, 0, 0, 0,
cbgssu_ScrollPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_TextField$OnscreenKeyboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_TextField$DefaultOnscreenKeyboard, 0, jl_Object, [cbgssu_TextField$OnscreenKeyboard], 0, 3, 0, 0, 0,
cbgssu_Button$ButtonStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_TextButton$TextButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_ImageTextButton$ImageTextButtonStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_ProgressBar, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_Slider, 0, cbgssu_ProgressBar, [], 0, 3, 0, 0, 0,
cbgssu_Tooltip$1, 0, cbgssu_Container, [], 0, 0, 0, 0, 0,
cbgssu_ScrollPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_ImageButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgssu_List, 0, cbgssu_Widget, [cbgssu_Cullable], 0, 3, 0, 0, 0,
cbgssu_Table$5, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_TextTooltip$TextTooltipStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Dialog$4$1, 0, jl_Object, [jl_Runnable], 0, 0, 0, 0, 0,
cbgssu_Touchpad$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_TextField$KeyRepeatTask, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_ButtonGroup, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_SplitPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Tree$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_ScrollPane$2, 0, cbgssu_ActorGestureListener, [], 0, 0, 0, 0, 0,
cbgssu_Value$6, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Value$5, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_TextField$TextFieldFilter, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_ProgressBar$ProgressBarStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Slider$SliderStyle, 0, cbgssu_ProgressBar$ProgressBarStyle, [], 0, 3, 0, 0, 0,
cbgssu_Skin$3, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0]);
$rt_metadata([cbgssu_Dialog$3, 0, cbgssu_FocusListener, [], 0, 0, 0, 0, 0,
cbgssu_Dialog$2, 0, cbgssu_ChangeListener, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_Table$4, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Cell, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbgssu_Cell_$callClinit, 0,
cbgssu_CheckBox$CheckBoxStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_List$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_TooltipManager$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_Value$1, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Stack, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_ScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Touchpad$TouchpadStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Value$Fixed, 0, cbgssu_Value, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane, 0, cbgssu_ScrollPane, [], 0, 3, 0, 0, 0,
cbgssu_Value$3, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_SelectBox$1, 0, cbgssu_ArraySelection, [], 0, 0, 0, 0, 0,
cbgssu_SplitPane$SplitPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Label, 0, cbgssu_Widget, [], 0, 3, 0, cbgssu_Label_$callClinit, 0,
cbgssu_Window$WindowStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Value$8, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Table$2, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Dialog, 0, cbgssu_Window, [], 0, 3, 0, 0, 0,
cbgssu_Value$2, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Label$LabelStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_TooltipManager, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Table$Debug, 0, jl_Enum, [], 12, 3, 0, cbgssu_Table$Debug_$callClinit, 0,
cbgssu_Value$10, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_TextField$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgssu_Table$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter, 0, jl_Object, [cbgssu_TextField$TextFieldFilter], 0, 3, 0, 0, 0,
cbgssu_List$ListStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Skin$TintedDrawable, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Tooltip, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
cbgssu_TooltipManager$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$4, 0, cbgssu_List, [], 0, 0, 0, 0, 0,
cbgssu_TextField$TextFieldListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_List$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_VerticalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_SplitPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgu_Json, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Skin$1, 0, cbgu_Json, [], 0, 0, 0, 0, 0,
cbgssu_ParticleEffectActor, 0, cbgss_Actor, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgssu_Window$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_ImageTextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgssu_Slider$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0]);
$rt_metadata([cbgssu_Button$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_ImageButton$ImageButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_HorizontalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_TextField$TextFieldStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Tree$TreeStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Image, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
cbgssu_Tree$1, 0, cbgssu_Selection, [], 0, 0, 0, 0, 0,
cbgssu_Window$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Tree, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_TextTooltip, 0, cbgssu_Tooltip, [], 0, 3, 0, 0, 0,
cbgssu_Window$1, 0, cbgssu_Table, [], 0, 0, 0, 0, 0,
cbgssu_Skin$4, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Tree$Node, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgssu_ScrollPane$ScrollPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Matrix4Emu, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4Emu_$callClinit, 0,
cbgm_Interpolation, 0, jl_Object, [], 1, 3, 0, cbgm_Interpolation_$callClinit, 0,
cbgm_Interpolation$SwingIn, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Bresenham2, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$7, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_ConvexHull, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Pow, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowIn, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowOut, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_Path, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_BSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
cbgm_Interpolation$8, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Polygon, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgm_Interpolation$4, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Elastic, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$5, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$2, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_GeometryUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Bresenham2$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Vector2, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, 0, 0,
cbgm_Interpolation$13, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Exp, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_CumulativeDistribution, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$1, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$ExpOut, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_FloatCounter, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
cbgm_Plane$PlaneSide, 0, jl_Enum, [], 12, 3, 0, cbgm_Plane$PlaneSide_$callClinit, 0,
cbgm_Octree, 0, jl_Object, [], 0, 3, 0, cbgm_Octree_$callClinit, 0,
cbgm_Interpolation$BounceOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$BounceIn, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$10, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Affine2, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
cbgm_Interpolation$3, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Vector4, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector4_$callClinit, 0,
cbgm_Interpolation$ElasticIn, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0]);
$rt_metadata([cbgm_Interpolation$Swing, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_DelaunayTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Polyline, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgm_Interpolation$6, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$SwingOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$14, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$ElasticOut, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
cbgmc_OrientedBoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_OrientedBoundingBox_$callClinit, 0,
cbgmc_BoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_BoundingBox_$callClinit, 0,
cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, 0,
cbgmc_Segment, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgmc_Sphere, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Ellipse, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgm_CatmullRomSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, cbgm_MathUtils_$callClinit, 0,
cbgm_Intersector, 0, jl_Object, [], 4, 3, 0, cbgm_Intersector_$callClinit, 0,
cbgm_WindowedMean, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Interpolation$Bounce, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, 0,
ju_Random, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_RandomXS128, 0, ju_Random, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$12, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$9, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, 0,
cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Quaternion_$callClinit, 0,
cbgm_EarClippingTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Octree$RayCastResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Vector3, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, 0,
cbgm_Circle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgm_Octree$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$ExpIn, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_Bezier, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
cbgm_CumulativeDistribution$CumulativeValue, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_GridPoint2, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Interpolation$11, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Octree$OctreeNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Intersector$MinimumTranslationVector, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Intersector$SplitTriangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_GridPoint3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Octree$Collider, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Matrix3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_MathUtils$Sin, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbggg_GlyphLayout, "GlyphLayout", 16, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)],
cbggg_TextureRegion, "TextureRegion", 16, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_Sprite, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
cbggg_BitmapFont, "BitmapFont", 16, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggg_NinePatch, 0, jl_Object, [], 0, 3, 0, cbggg_NinePatch_$callClinit, 0,
cbgg_Color, "Color", 14, jl_Object, [], 0, 3, 0, cbgg_Color_$callClinit, ["$equals", $rt_wrapFunction1(cbgg_Color_equals), "$hashCode", $rt_wrapFunction0(cbgg_Color_hashCode), "$toString", $rt_wrapFunction0(cbgg_Color_toString)],
cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, 0, 0]);
$rt_metadata([cbgg_Texture, "Texture", 14, cbgg_GLTexture, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbgg_Texture_toString)],
cbgu_Array, "Array", 9, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals", $rt_wrapFunction1(cbgu_Array_equals), "$toString", $rt_wrapFunction0(cbgu_Array_toString)],
cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, 0,
cbgu_Queue, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgg_VertexAttribute, "VertexAttribute", 14, jl_Object, [], 4, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbgg_VertexAttribute_equals), "$hashCode", $rt_wrapFunction0(cbgg_VertexAttribute_hashCode)],
cbgggm_Node, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_NodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_NodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_Animation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_MeshPart, 0, jl_Object, [], 0, 3, 0, cbgggm_MeshPart_$callClinit, 0,
cbgggmd_ModelAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMesh, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMaterial, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMeshPart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelData, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelTexture, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMaterial$MaterialType, 0, jl_Enum, [], 12, 3, 0, cbgggmd_ModelMaterial$MaterialType_$callClinit, 0,
cbgggm_NodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Net, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_MapObject, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgmo_RectangleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_PolygonMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_CircleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_PolylineMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_EllipseMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_TextureMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmto_TiledMapTileMapObject, 0, cbgmo_TextureMapObject, [], 0, 3, 0, 0, 0,
cbgggp_ResourceData$Configurable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleEffect, 0, jl_Object, [cbgu_Disposable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgu_Json$Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleController, 0, jl_Object, [cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgggp_ResourceData, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggp_ParallelArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpv_ParticleValue, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggpv_NumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbgggpv_SpawnShapeValue, 0, cbgggpv_ParticleValue, [cbgggp_ResourceData$Configurable, cbgu_Json$Serializable], 1, 3, 0, 0, 0,
cbgggpv_PrimitiveSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, cbgggpv_PrimitiveSpawnShapeValue_$callClinit, 0,
cbgggpv_MeshSpawnShapeValue$Triangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpv_PointSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_RectangleSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_GradientColorValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbgggpv_RangedNumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbgggpv_ScaledNumericValue, 0, cbgggpv_RangedNumericValue, [], 0, 3, 0, 0, 0,
cbgggpv_EllipseSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_MeshSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, 0, 0]);
$rt_metadata([cbgggpv_WeightMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_LineSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_CylinderSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_UnweightedMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, 0, jl_Enum, [], 12, 3, 0, cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit, 0,
cbgggp_ParticleControllerComponent, 0, jl_Object, [cbgu_Disposable, cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 1, 3, 0, 0, 0,
cbgggpe_Emitter, 0, cbgggp_ParticleControllerComponent, [cbgu_Json$Serializable], 1, 3, 0, 0, 0,
cbgggpe_RegularEmitter, 0, cbgggpe_Emitter, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggpe_RegularEmitter$EmissionMode, 0, jl_Enum, [], 12, 3, 0, cbgggpe_RegularEmitter$EmissionMode_$callClinit, 0,
cbgggpi_Influencer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$AspectTextureRegion, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier, 0, cbgggpi_Influencer, [], 1, 3, 0, cbgggpi_DynamicsModifier_$callClinit, 0,
cbgggpi_DynamicsModifier$Strength, 0, cbgggpi_DynamicsModifier, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Angular, 0, cbgggpi_DynamicsModifier$Strength, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Rotational3D, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
cbgggpi_ColorInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_ColorInfluencer$Random, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
cbgggpi_RegionInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$Single, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ModelInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Rotational2D, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$BrownianAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
cbgggpi_SimpleInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_ScaleInfluencer, 0, cbgggpi_SimpleInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$Random, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$TangentialAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerFinalizerInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$Animated, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_SpawnInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$FaceDirection, 0, cbgggpi_DynamicsModifier, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgggpi_ModelInfluencer$Random$ModelInstancePool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgggpi_DynamicsModifier$CentripetalAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
cbgggpi_ModelInfluencer$Single, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Random, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Single, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ModelInfluencer$Random, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$PolarAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
cbgggpi_ColorInfluencer$Single, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
cbgggpr_ParticleControllerRenderer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
cbgggpr_PointSpriteRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_ParticleControllerRenderData, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgggpr_BillboardControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
cbgggpr_ModelInstanceRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_ParticleControllerControllerRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_PointSpriteControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
cbgggpr_BillboardRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_ModelInstanceControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0]);
$rt_metadata([jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, "Class", 23, jl_Object, [jlr_AnnotatedElement, jlr_Type], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString)],
otji_JS, 0, jl_Object, [], 4, 0, 0, 0, 0,
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_CharSequence, "CharSequence", 23, jl_Object, [], 3, 3, 0, 0, 0,
jl_String, "String", 23, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, jl_String_$callClinit, ["$toString", $rt_wrapFunction0(jl_String_toString), "$equals", $rt_wrapFunction1(jl_String_equals), "$hashCode", $rt_wrapFunction0(jl_String_hashCode)],
jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage)],
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_LinkageError, 0, jl_Error, [], 0, 3, 0, 0, 0,
jl_NoClassDefFoundError, 0, jl_LinkageError, [], 0, 3, 0, 0, 0,
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Integer_toString), "$hashCode", $rt_wrapFunction0(jl_Integer_hashCode), "$equals", $rt_wrapFunction1(jl_Integer_equals)],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert8", $rt_wrapFunction4(jl_StringBuilder_insert3), "$append11", $rt_wrapFunction3(jl_StringBuilder_append4), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert3", $rt_wrapFunction2(jl_StringBuilder_insert4), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert)],
jl_IncompatibleClassChangeError, 0, jl_LinkageError, [], 0, 3, 0, 0, 0,
jl_NoSuchFieldError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, 0,
jl_NoSuchMethodError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, 0,
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_RuntimeException, "RuntimeException", 23, jl_Exception, [], 0, 3, 0, 0, 0,
cgxgbt_TeaApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication, "TeaApplication", 5, jl_Object, [cbg_Application, jl_Runnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(cgxgbt_TeaApplication_run)],
cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_Game, 0, jl_Object, [cbg_ApplicationListener], 1, 3, 0, 0, 0,
cgt_SpeedDemo, 0, cbg_Game, [], 0, 3, 0, 0, 0,
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbtdt_TypedArrays, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgxgbtd_TeaTypedArrays, 0, cgxgbtdt_TypedArrays, [], 0, 3, 0, 0, 0,
cgxgbt_TeaApplication$AppState, 0, jl_Enum, [], 12, 3, 0, cgxgbt_TeaApplication$AppState_$callClinit, 0,
cgxgbtd_WindowWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtdi_TeaWindow, 0, jl_Object, [cgxgbtd_WindowWrapper, otjb_AnimationFrameCallback], 0, 3, 0, cgxgbtdi_TeaWindow_$callClinit, ["$onAnimationFrame$exported$0", $rt_wrapFunction1(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0)],
cgxgbtu_TeaNavigator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 16, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
cbgu_IntArray, "IntArray", 9, jl_Object, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals), "$toString", $rt_wrapFunction0(cbgu_IntArray_toString)],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, 0,
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_String$_clinit_$lambda$_89_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, 0,
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, 0,
cgxgbta_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0]);
$rt_metadata([jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbtp_AssetDownloader$AssetDownload, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl, 0, jl_Object, [cgxgbtp_AssetDownloader$AssetDownload], 0, 3, 0, 0, 0,
cgxgbtp_AssetDownloader, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, 0, 0,
cgxgbtp_Preloader, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbt_AssetLoaderListener, 0, jl_Object, [], 0, 3, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbt_AssetLoaderListener_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbt_AssetLoaderListener_onFailure)],
cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtd_EventListenerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaInput, 0, jl_Object, [cbg_Input, cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaInput_handleEvent$exported$0)],
cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, 0,
cgxgbt_TeaNet, 0, jl_Object, [cbg_Net], 0, 3, 0, 0, 0,
cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, 0,
cbgu_Clipboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard, 0, jl_Object, [cbgu_Clipboard], 0, 3, 0, 0, 0,
cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbt_TeaApplication$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaApplication$1_handleEvent$exported$0)],
cgxgbt_TeaApplication$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaApplication$2_handleEvent$exported$0)],
jl_IllegalArgumentException, "IllegalArgumentException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGL20, "TeaGL20", 5, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements), "$glEnable",
$rt_wrapFunction1(cgxgbt_TeaGL20_glEnable), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20_glViewport), "$glAttachShader",
$rt_wrapFunction2(cgxgbt_TeaGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCreateShader),
"$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetAttribLocation),
"$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glLinkProgram), "$glShaderSource",
$rt_wrapFunction2(cgxgbt_TeaGL20_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cgxgbt_TeaGL20Debug, "TeaGL20Debug", 5, cgxgbt_TeaGL20, [], 0, 3, 0, 0, ["$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements),
"$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnable), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glViewport),
"$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20Debug_glCreateProgram),
"$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveAttrib), "$glGetActiveUniform",
$rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetShaderInfoLog),
"$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5,
var_6) { cgxgbt_TeaGL20Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cbggg_GLVersion, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, cbg_Application$ApplicationType_$callClinit, 0,
cgxgbt_TeaGraphics$FullscreenChanged, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics$1, 0, jl_Object, [cgxgbt_TeaGraphics$FullscreenChanged], 0, 0, 0, 0, ["$fullscreenChanged$exported$0", $rt_wrapFunction0(cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0)],
cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbt_TeaPermissions$TeaPermissionResult, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard$ClipboardWriteHandler, 0, jl_Object, [cgxgbt_TeaPermissions$TeaPermissionResult], 0, 0, 0, 0, ["$granted$exported$0", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0), "$prompt$exported$1", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1), "$denied$exported$2", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2)],
cgxgbt_TeaApplication$4, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$4_onSuccess)],
cgxgbt_TeaApplication$3, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$3_onSuccess)],
jl_CloneNotSupportedException, "CloneNotSupportedException", 23, jl_Exception, [], 0, 3, 0, 0, 0,
cbgu_ReflectionPool, "ReflectionPool", 9, cbgu_Pool, [], 0, 3, 0, 0, 0,
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otjde_FocusEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjde_MouseEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjde_KeyboardEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjde_LoadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjde_GamepadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjb_WindowEventTarget, 0, jl_Object, [otjde_EventTarget, otjde_FocusEventTarget, otjde_MouseEventTarget, otjde_KeyboardEventTarget, otjde_LoadEventTarget, otjde_GamepadEventTarget], 3, 3, 0, 0, 0,
otjb_StorageProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjc_JSArrayReader, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otjb_Window, 0, jl_Object, [otj_JSObject, otjb_WindowEventTarget, otjb_StorageProvider, otjc_JSArrayReader], 1, 3, 0, 0, ["$addEventListener$exported$0", $rt_wrapFunction2(otjb_Window_addEventListener$exported$0), "$removeEventListener$exported$1", $rt_wrapFunction2(otjb_Window_removeEventListener$exported$1), "$get$exported$2", $rt_wrapFunction1(otjb_Window_get$exported$2), "$removeEventListener$exported$3", $rt_wrapFunction3(otjb_Window_removeEventListener$exported$3), "$dispatchEvent$exported$4", $rt_wrapFunction1(otjb_Window_dispatchEvent$exported$4),
"$getLength$exported$5", $rt_wrapFunction0(otjb_Window_getLength$exported$5), "$addEventListener$exported$6", $rt_wrapFunction3(otjb_Window_addEventListener$exported$6)],
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, 0]);
$rt_metadata([ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, 0,
cbggg_GLVersion$Type, 0, jl_Enum, [], 12, 3, 0, cbggg_GLVersion$Type_$callClinit, 0,
cgxgbtp_Preloader$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$1_handleEvent$exported$0)],
cgxgbtp_Preloader$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$2_handleEvent$exported$0)],
cgxgbtp_Preloader$3, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$3_handleEvent$exported$0)],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
cbgur_ClassReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgur_ReflectionException, "ReflectionException", 10, jl_Exception, [], 0, 3, 0, 0, 0,
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, 0,
jl_NumberFormatException, "NumberFormatException", 23, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
cbgur_Constructor, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_SecurityException, 0, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0, 0,
jl_NoSuchMethodException, "NoSuchMethodException", 23, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jl_NullPointerException, "NullPointerException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$getType0", $rt_wrapFunction0(jur_AbstractSet_getType), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first0", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, 0,
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
jur_FSet, "FSet", 19, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$matches", $rt_wrapFunction3(jur_FSet_matches), "$getName", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_PatternSyntaxException, "PatternSyntaxException", 19, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, 0,
ju_List, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, 0,
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, 0,
jur_NonCapFSet, "NonCapFSet", 19, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
jur_AheadFSet, "AheadFSet", 19, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName", $rt_wrapFunction0(jur_AheadFSet_getName)],
jur_BehindFSet, "BehindFSet", 19, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName", $rt_wrapFunction0(jur_BehindFSet_getName)],
jur_AtomicFSet, "AtomicFSet", 19, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getName", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
jur_FinalSet, "FinalSet", 19, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName", $rt_wrapFunction0(jur_FinalSet_getName)],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount0", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_EmptySet, "EmptySet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find0", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
jur_JointSet, "JointSet", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName", $rt_wrapFunction0(jur_JointSet_getName), "$first0", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_NonCapJointSet, "NonCapJointSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, "AtomicJointSet", 19, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
jur_PositiveLookAhead, "PositiveLookAhead", 19, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
jur_NegativeLookAhead, "NegativeLookAhead", 19, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookAhead_getName)],
jur_PositiveLookBehind, "PositiveLookBehind", 19, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
jur_NegativeLookBehind, "NegativeLookBehind", 19, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
jur_SingleSet, "SingleSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find0", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first0", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0]);
$rt_metadata([jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_ArrayStoreException, "ArrayStoreException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, jur_AbstractCharClass_$callClinit, ["$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$getInstance2", $rt_wrapFunction0(jur_AbstractCharClass_getInstance), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI)],
jur_CharClass, "CharClass", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass_contains), "$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance2", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
ju_MissingResourceException, "MissingResourceException", 18, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$first0", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_LeafQuantifierSet, "LeafQuantifierSet", 19, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 19, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
jur_GroupQuantifierSet, "GroupQuantifierSet", 19, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
jur_AltQuantifierSet, "AltQuantifierSet", 19, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 19, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_Quantifier, "Quantifier", 19, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
jur_LowHighSurrogateRangeSet, "LowHighSurrogateRangeSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$getName", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)],
jur_CompositeRangeSet, "CompositeRangeSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first0", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
jur_SupplRangeSet, "SupplRangeSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains1", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first0", $rt_wrapFunction1(jur_SupplRangeSet_first), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
jur_UCISupplRangeSet, "UCISupplRangeSet", 19, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
jur_UCIRangeSet, "UCIRangeSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
jur_RangeSet, "RangeSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName", $rt_wrapFunction0(jur_RangeSet_getName), "$first0", $rt_wrapFunction1(jur_RangeSet_first)],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first0", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
jur_CharSet, "CharSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$charCount0", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find0", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName", $rt_wrapFunction0(jur_CharSet_getName), "$first0", $rt_wrapFunction1(jur_CharSet_first)],
jur_UCICharSet, "UCICharSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCICharSet_getName)],
jur_CICharSet, "CICharSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName", $rt_wrapFunction0(jur_CICharSet_getName)],
jur_DecomposedCharSet, "DecomposedCharSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$first0", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 19, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 19, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 19, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 19, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 19, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 19, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 19, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 19, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 19, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 19, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 19, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
jur_DotAllQuantifierSet, "DotAllQuantifierSet", 19, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
jur_DotQuantifierSet, "DotQuantifierSet", 19, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 19, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 19, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 19, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 19, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 19, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 19, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
jur_SOLSet, "SOLSet", 19, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_SOLSet_getName)],
jur_WordBoundary, "WordBoundary", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName", $rt_wrapFunction0(jur_WordBoundary_getName)],
jur_PreviousMatch, "PreviousMatch", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName", $rt_wrapFunction0(jur_PreviousMatch_getName)]]);
$rt_metadata([jur_EOLSet, "EOLSet", 19, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOLSet_getName)],
jur_EOISet, "EOISet", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOISet_getName)],
jur_MultiLineSOLSet, "MultiLineSOLSet", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
jur_DotAllSet, "DotAllSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
jur_DotSet, "DotSet", 19, jur_JointSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_UEOLSet, "UEOLSet", 19, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UEOLSet_getName)],
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
jur_MultiLineEOLSet, "MultiLineEOLSet", 19, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
jur_CIBackReferenceSet, "CIBackReferenceSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getName", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_BackReferenceSet, "BackReferenceSet", 19, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find0", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first0", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 19, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert8", $rt_wrapFunction4(jl_StringBuffer_insert0), "$append11", $rt_wrapFunction3(jl_StringBuffer_append1), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert3", $rt_wrapFunction2(jl_StringBuffer_insert1), "$insert", $rt_wrapFunction2(jl_StringBuffer_insert2)],
jur_SequenceSet, "SequenceSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find0", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName", $rt_wrapFunction0(jur_SequenceSet_getName), "$first0", $rt_wrapFunction1(jur_SequenceSet_first)],
jur_UCISequenceSet, "UCISequenceSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
jur_CISequenceSet, "CISequenceSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_CISequenceSet_getName)],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, 0,
jur_UCISupplCharSet, "UCISupplCharSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first0", $rt_wrapFunction1(jur_LowSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 19, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first0", $rt_wrapFunction1(jur_HighSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
jur_SupplCharSet, "SupplCharSet", 19, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find0", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName", $rt_wrapFunction0(jur_SupplCharSet_getName), "$first0", $rt_wrapFunction1(jur_SupplCharSet_first)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, 0,
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 29, jl_Object, [], 0, 3, 0, 0, 0,
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_NegativeArraySizeException, "NegativeArraySizeException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjt_Float32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
otjt_Int16Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
otjt_Int32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
otjt_Uint8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 23, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, 0,
cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbtp_Preloader$4, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_Preloader$4_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_Preloader$4_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_Preloader$4_onSuccess0)],
otjw_WebGLContextAttributes, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit, 0, jl_Enum, [], 9, 3, 0, cgxgbtd_StyleWrapper$Unit_$callClinit, 0,
cbg_LifecycleListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
cgxgbtp_AssetFilter, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtd_EventTargetWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtd_FileReaderWrapper, 0, jl_Object, [cgxgbtd_EventTargetWrapper, otj_JSObject], 1, 3, 0, 0, ["$removeEventListener$exported$0", $rt_wrapFunction2(cgxgbtd_FileReaderWrapper_removeEventListener$exported$0), "$dispatchEvent$exported$1", $rt_wrapFunction1(cgxgbtd_FileReaderWrapper_dispatchEvent$exported$1), "$addEventListener$exported$2", $rt_wrapFunction2(cgxgbtd_FileReaderWrapper_addEventListener$exported$2), "$addEventListener$exported$3", $rt_wrapFunction3(cgxgbtd_FileReaderWrapper_addEventListener$exported$3),
"$removeEventListener$exported$4", $rt_wrapFunction3(cgxgbtd_FileReaderWrapper_removeEventListener$exported$4)],
cgxgbtp_Preloader$3$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$3$1_handleEvent$exported$0)],
cgxgbtp_AssetType, "AssetType", 6, jl_Enum, [], 12, 3, 0, cgxgbtp_AssetType_$callClinit, 0,
jlr_Modifier, 0, jl_Object, [], 0, 3, 0, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0, 0,
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Constructor, "Constructor", 24, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jlr_Constructor_toString)],
jur_AbstractCharClass$1, "AbstractCharClass$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
jur_CharClass$18, "CharClass$18", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$1_contains)],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$3_contains)],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$7_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$6_contains)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$9_contains)]]);
$rt_metadata([jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$8_contains)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$11_contains)],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$10_contains)],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$13_contains)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$12_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$14_contains)],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$17_contains)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$16_contains)],
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, 0,
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, jl_Thread_$callClinit, 0,
jl_IllegalStateException, "IllegalStateException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, 0,
cgxgbt_TeaApplication$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$5_onSuccess), "$onFailure", $rt_wrapFunction1(cgxgbt_TeaApplication$5_onFailure)],
cgxgbt_TeaApplication$7, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$7_onSuccess), "$onFailure", $rt_wrapFunction1(cgxgbt_TeaApplication$7_onFailure)],
cgxgbt_TeaApplication$6, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$6_onSuccess), "$onFailure", $rt_wrapFunction1(cgxgbt_TeaApplication$6_onFailure)],
cgxgbtu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(jl_Object$monitorExit$lambda$_8_0_run)],
cgxgbtd_StyleWrapper$Unit$1, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$2, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$3, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$4, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$5, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$6, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$7, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$8, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$9, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, 0,
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, 0,
otjb_Performance, 0, jl_Object, [otj_JSObject], 4, 3, 0, 0, 0,
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 19, jur_SingleSet, [], 0, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
cgxgbtp_AssetDownloadImpl$1, 0, jl_Thread, [], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl$1_run)],
cgxgbt_TeaApplication$8, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaApplication$8_$callClinit, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 1, 3, 0, 0, ["$addEventListener$exported$0", $rt_wrapFunction2(otja_XMLHttpRequest_addEventListener$exported$0), "$removeEventListener$exported$1", $rt_wrapFunction2(otja_XMLHttpRequest_removeEventListener$exported$1), "$removeEventListener$exported$2", $rt_wrapFunction3(otja_XMLHttpRequest_removeEventListener$exported$2), "$dispatchEvent$exported$3", $rt_wrapFunction1(otja_XMLHttpRequest_dispatchEvent$exported$3), "$addEventListener$exported$4",
$rt_wrapFunction3(otja_XMLHttpRequest_addEventListener$exported$4)],
cgxgbtd_EventHandlerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl$2, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$2_handleEvent$exported$0)],
cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cgxgbtp_Blob, "Blob", 6, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbtp_Preloader$3$1$1, "Preloader$3$1$1", 6, jl_Object, [jl_Runnable], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(cgxgbtp_Preloader$3$1$1_run)]]);
$rt_metadata([jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, 0,
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
ji_PrintStream, 0, ji_FilterOutputStream, [], 0, 3, 0, 0, 0,
otcic_ConsoleOutputStream, 0, ji_OutputStream, [], 1, 3, 0, 0, 0,
otcic_StdoutOutputStream, 0, otcic_ConsoleOutputStream, [], 0, 3, 0, 0, ["$write", $rt_wrapFunction3(otcic_StdoutOutputStream_write)],
cgxgbtp_AssetDownloadImpl$6, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$6_handleEvent$exported$0)],
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, 0,
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, ["$newEncoder", $rt_wrapFunction0(jnci_UTF8Charset_newEncoder)],
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 21, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, 0,
cbg_Screen, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_ScreenAdapter, 0, jl_Object, [cbg_Screen], 0, 3, 0, 0, 0,
cgt_ChopScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ChopScreen_show), "$render0", $rt_wrapFunction1(cgt_ChopScreen_render), "$resize0", $rt_wrapFunction2(cgt_ChopScreen_resize)],
cgt_AceScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_AceScreen_show), "$render0", $rt_wrapFunction1(cgt_AceScreen_render), "$resize0", $rt_wrapFunction2(cgt_AceScreen_resize)],
ju_NoSuchElementException, "NoSuchElementException", 18, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbgu_GdxRuntimeException, "GdxRuntimeException", 9, jl_RuntimeException, [], 0, 3, 0, 0, 0,
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jur_UnicodeCategory, "UnicodeCategory", 19, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 19, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
jl_Thread$start$lambda$_4_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(jl_Thread$start$lambda$_4_0_run)],
otjt_Int8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
cgxgbtp_Preloader$12, 0, jl_Object, [], 32, 0, 0, cgxgbtp_Preloader$12_$callClinit, 0,
ju_ConcurrentModificationException, "ConcurrentModificationException", 18, jl_RuntimeException, [], 0, 3, 0, 0, 0,
otcic_StderrOutputStream, 0, otcic_ConsoleOutputStream, [], 0, 3, 0, 0, ["$write", $rt_wrapFunction3(otcic_StderrOutputStream_write)],
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, 0, 0,
otcit_DoubleAnalyzer, 0, jl_Object, [], 4, 3, 0, 0, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
otr_EventQueue$Event, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_ThreadInterruptHandler, 0, jl_Object, [], 3, 3, 0, 0, 0]);
$rt_metadata([jl_Thread$SleepHandler, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event, jl_ThreadInterruptHandler], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(jl_Thread$SleepHandler_run)],
cbggg_BitmapFont$BitmapFontData, "BitmapFont$BitmapFontData", 16, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_Mesh$VertexDataType_$callClinit, 0,
cbgg_Mesh, "Mesh", 14, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, 0,
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, 0,
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$limit0", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position0", $rt_wrapFunction1(jn_ByteBuffer_position)],
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, jnc_CodingErrorAction_$callClinit, 0,
cbggg_BitmapFont$Glyph, "BitmapFont$Glyph", 16, jl_Object, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbggg_BitmapFont$Glyph_toString)],
cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, 0,
cbggg_ShaderProgram, "ShaderProgram", 15, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, 0,
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, 0,
jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, 0, 0,
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObject_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObject_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind)],
cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices0", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind), "$unbind0", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind)],
cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind)],
cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices0", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind), "$unbind0", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind)],
cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind)],
cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, 0,
cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, 0,
cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_ByteBufferImpl, 0, jn_ByteBuffer, [], 0, 0, 0, 0, 0,
cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbt_TeaTool, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, jn_ByteOrder_$callClinit, 0,
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$limit0", $rt_wrapFunction1(jn_FloatBuffer_limit0), "$position0", $rt_wrapFunction1(jn_FloatBuffer_position0)],
cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
cbgur_ArrayReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_FileTextureData, "FileTextureData", 15, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, 0,
cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Pixmap_$callClinit, 0,
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, 0,
jn_IntBufferOverArray, 0, jn_IntBufferImpl, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverArray_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverArray_putElement), "$readOnly4", $rt_wrapFunction0(jn_IntBufferOverArray_readOnly)],
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, 0,
jn_FloatBufferOverArray, 0, jn_FloatBufferImpl, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverArray_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverArray_putElement), "$readOnly4", $rt_wrapFunction0(jn_FloatBufferOverArray_readOnly)],
cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Blending_$callClinit, 0,
cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Filter_$callClinit, 0,
cgxgbt_TeaFileHandle, "TeaFileHandle", 5, cbgf_FileHandle, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cgxgbt_TeaFileHandle_toString)],
cbggg_Gdx2DPixmapEmu, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, 0]);
$rt_metadata([jn_ShortBufferOverArray, 0, jn_ShortBufferImpl, [], 0, 0, 0, 0, ["$getElement1", $rt_wrapFunction1(jn_ShortBufferOverArray_getElement), "$putElement0", $rt_wrapFunction2(jn_ShortBufferOverArray_putElement), "$readOnly4", $rt_wrapFunction0(jn_ShortBufferOverArray_readOnly)],
otjc_JSNumber, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureFilter_$callClinit, 0,
cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureWrap_$callClinit, 0,
otjc_JSArray, 0, jl_Object, [otjc_JSArrayReader], 1, 3, 0, 0, ["$get$exported$0", $rt_wrapFunction1(otjc_JSArray_get$exported$0), "$getLength$exported$1", $rt_wrapFunction0(otjc_JSArray_getLength$exported$1)],
jn_FloatBufferOverByteBuffer, 0, jn_FloatBufferImpl, [], 1, 0, 0, 0, ["$readOnly4", $rt_wrapFunction0(jn_FloatBufferOverByteBuffer_readOnly)],
jn_FloatBufferOverByteBufferLittleEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferLittleEndian_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverByteBufferLittleEndian_putElement)],
jn_FloatBufferOverByteBufferBigEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferBigEndian_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverByteBufferBigEndian_putElement)],
jn_ShortBufferOverByteBuffer, 0, jn_ShortBufferImpl, [], 1, 0, 0, 0, ["$readOnly4", $rt_wrapFunction0(jn_ShortBufferOverByteBuffer_readOnly)],
jn_ShortBufferOverByteBufferLittleEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement1", $rt_wrapFunction1(jn_ShortBufferOverByteBufferLittleEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_ShortBufferOverByteBufferLittleEndian_putElement)],
jn_ShortBufferOverByteBufferBigEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement1", $rt_wrapFunction1(jn_ShortBufferOverByteBufferBigEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_ShortBufferOverByteBufferBigEndian_putElement)],
jl_UnsupportedOperationException, "UnsupportedOperationException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 20, jl_UnsupportedOperationException, [], 0, 3, 0, 0, 0,
jn_IntBufferOverByteBuffer, 0, jn_IntBufferImpl, [], 1, 0, 0, 0, ["$readOnly4", $rt_wrapFunction0(jn_IntBufferOverByteBuffer_readOnly)],
jn_IntBufferOverByteBufferLittleEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferLittleEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverByteBufferLittleEndian_putElement)],
jn_IntBufferOverByteBufferBigEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferBigEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverByteBufferBigEndian_putElement)],
jn_BufferUnderflowException, "BufferUnderflowException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbg_Files$FileType, "Files$FileType", 8, jl_Enum, [], 12, 3, 0, cbg_Files$FileType_$callClinit, 0,
cgxgbts_TeaSoundManager, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbts_SoundManagerCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication$4$1, 0, jl_Object, [cgxgbts_SoundManagerCallback], 0, 0, 0, 0, ["$onready$exported$0", $rt_wrapFunction0(cgxgbt_TeaApplication$4$1_onready$exported$0), "$ontimeout$exported$1", $rt_wrapFunction0(cgxgbt_TeaApplication$4$1_ontimeout$exported$1)],
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, 0,
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
ji_IOException, "IOException", 22, jl_Exception, [], 0, 3, 0, 0, 0,
ji_Reader, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, 0,
ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, 0, 0,
ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, 0, 0,
ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, 0, 0,
cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, cbggg_BitmapFontCache_$callClinit, 0,
cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Format_$callClinit, 0,
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgg_PixmapEmu$DrawType, 0, jl_Enum, [], 12, 0, 0, cbgg_PixmapEmu$DrawType_$callClinit, 0,
cbgg_Composite, 0, jl_Enum, [], 12, 3, 0, cbgg_Composite_$callClinit, 0,
cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_TextureData$TextureDataType_$callClinit, 0,
cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_PixmapEmu$2, 0, jl_Object, [], 32, 0, 0, cbgg_PixmapEmu$2_$callClinit, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
jn_BufferOverflowException, "BufferOverflowException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbtf_FileDB, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgu_ScreenUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgt_Stringf, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgtr_EnhancedRandom, 0, ju_Random, [], 1, 3, 0, 0, 0,
cgtr_ChopRandom, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgtr_ChopRandom_nextLong)],
cbguv_Viewport, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbguv_ScreenViewport, 0, cbguv_Viewport, [], 0, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer20, 0, jl_Object, [cbggg_ImmediateModeRenderer], 0, 3, 0, 0, 0,
cgtr_AceRandom, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgtr_AceRandom_nextLong)]]);
$rt_metadata([otcic_Console, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl$1$1, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$1$1_handleEvent$exported$0)],
jl_Object$NotifyListener, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event], 3, 0, 0, 0, 0,
cbg_Audio, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaAudio, 0, jl_Object, [cbg_Audio], 0, 3, 0, 0, 0,
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, 0,
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, 0,
cgxgbtf_FileDBManager, 0, cgxgbtf_FileDB, [], 4, 3, 0, 0, 0,
cbgg_OrthographicCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, 0,
cgxgbtf_FileDBStorage, 0, cgxgbtf_FileDB, [], 4, 0, 0, cgxgbtf_FileDBStorage_$callClinit, 0,
cgxgbtf_Store, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtf_StoreLocal, 0, jl_Object, [cgxgbtf_Store], 0, 0, 0, 0, ["$getItem", $rt_wrapFunction1(cgxgbtf_StoreLocal_getItem), "$removeItem", $rt_wrapFunction1(cgxgbtf_StoreLocal_removeItem)],
cgxgbtf_StoreMemory, 0, jl_Object, [cgxgbtf_Store], 0, 0, 0, 0, ["$getItem", $rt_wrapFunction1(cgxgbtf_StoreMemory_getItem), "$removeItem", $rt_wrapFunction1(cgxgbtf_StoreMemory_removeItem)],
cgtd_Base, 0, jl_Object, [], 0, 3, 0, cgtd_Base_$callClinit, 0,
cgtd_TextTools, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
otjb_Storage, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
ju_Arrays$ArrayAsList, 0, ju_AbstractList, [ju_RandomAccess], 0, 0, 0, 0, 0,
cgtd_BitConversion, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_HdpiUtils, 0, jl_Object, [], 0, 3, 0, cbggg_HdpiUtils_$callClinit, 0,
cgtd_RyuDouble, 0, jl_Object, [], 4, 0, 0, cgtd_RyuDouble_$callClinit, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, ["$read3", $rt_wrapFunction3(ji_InputStream_read), "$close", $rt_wrapFunction0(ji_InputStream_close)],
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$read4", $rt_wrapFunction0(ji_ByteArrayInputStream_read), "$read3", $rt_wrapFunction3(ji_ByteArrayInputStream_read0), "$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
ji_UnsupportedEncodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
cbggg_HdpiMode, 0, jl_Enum, [], 12, 3, 0, cbggg_HdpiMode_$callClinit, 0,
jm_BigInteger, 0, jl_Number, [jl_Comparable, ji_Serializable], 0, 3, 0, jm_BigInteger_$callClinit, 0,
jnc_CoderMalfunctionError, "CoderMalfunctionError", 21, jl_Error, [], 0, 3, 0, 0, 0,
jl_ArithmeticException, "ArithmeticException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jm_Multiplication, 0, jl_Object, [], 0, 0, 0, jm_Multiplication_$callClinit, 0,
jm_BitLevel, 0, jl_Object, [], 0, 0, 0, 0, 0,
cgxgbtf_HEXCoder, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtp_Blob$1, 0, ji_InputStream, [], 0, 0, 0, 0, ["$read4", $rt_wrapFunction0(cgxgbtp_Blob$1_read)],
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, jnc_Charset$Charsets_$callClinit, 0,
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 21, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
jnc_StandardCharsets, 0, jl_Object, [], 4, 3, 0, jnc_StandardCharsets_$callClinit, 0,
jnci_AsciiCharset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$newEncoder", $rt_wrapFunction0(jnci_AsciiCharset_newEncoder)],
jnci_Iso8859Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$newEncoder", $rt_wrapFunction0(jnci_Iso8859Charset_newEncoder)],
jnci_UTF16Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$newEncoder", $rt_wrapFunction0(jnci_UTF16Charset_newEncoder)],
jm_Elementary, 0, jl_Object, [], 0, 0, 0, 0, 0,
jm_Division, 0, jl_Object, [], 0, 0, 0, 0, 0,
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtp_Preloader$Asset, "Preloader$Asset", 6, jl_Object, [], 0, 3, 0, 0, 0,
jm_Logical, 0, jl_Object, [], 0, 0, 0, 0, 0,
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
jl_AssertionError, "AssertionError", 23, jl_Error, [], 0, 3, 0, 0, 0,
cgxgbtp_Preloader$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, 0,
jur_Matcher$1, "Matcher$1", 19, jl_Object, [], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Matcher$1_toString)],
jnci_AsciiEncoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiEncoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }]]);
$rt_metadata([jnci_Iso8859Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jnci_UTF16Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cgxgbtp_Preloader$7, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_Preloader$7_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_Preloader$7_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_Preloader$7_onSuccess)],
cbgu_StringBuilder, 0, jl_Object, [jl_Appendable, jl_CharSequence], 0, 3, 0, 0, 0,
jnc_BufferUnderflowException, "BufferUnderflowException", 21, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_BufferOverflowException, "BufferOverflowException", 21, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_MalformedInputException, "MalformedInputException", 21, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 21, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
cgxgbtp_AssetDownloadImpl$7, 0, jl_Object, [], 32, 0, 0, cgxgbtp_AssetDownloadImpl$7_$callClinit, 0,
jl_InstantiationException, "InstantiationException", 23, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jl_IllegalAccessException, "IllegalAccessException", 23, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jlr_InvocationTargetException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl$4, 0, jl_Thread, [], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl$4_run)],
cgxgbtp_AssetDownloadImpl$3, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$3_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$3_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$3_onSuccess)],
otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, 0, 0,
cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0,
cgxgbtp_AssetDownloadImpl$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$5_onSuccess0)],
cgxgbtp_AssetDownloadImpl$4$1, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$4$1_handleEvent$exported$0)],
cgxgbtp_AssetDownloadImpl$5$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5$1_handleEvent$exported$0)]]);
function $rt_array(cls, data) {
    this.$monitor = null;
    this.$id$ = 0;
    this.type = cls;
    this.data = data;
    this.constructor = $rt_arraycls(cls);
}
$rt_array.prototype = $rt_globals.Object.create(($rt_objcls()).prototype);
$rt_array.prototype.toString = function() {
    var str = "[";
    for (var i = 0;i < this.data.length;++i) {
        if (i > 0) {
            str += ", ";
        }
        str += this.data[i].toString();
    }
    str += "]";
    return str;
};
$rt_setCloneMethod($rt_array.prototype, function() {
    var dataCopy;
    if ('slice' in this.data) {
        dataCopy = this.data.slice();
    } else {
        dataCopy = new this.data.constructor(this.data.length);
        for (var i = 0;i < dataCopy.length;++i) {
            dataCopy[i] = this.data[i];
        }
    }
    return new $rt_array(this.type, dataCopy);
});
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "null", "canvas", "Android", "Mac", "Win", "Linux", "FreeBSD", "iPhone", "iPod", "iPad", "enabled", "disabled", "childrenOnly", "keyboard", "scroll", "touchDown", "touchUp", "touchDragged", "mouseMoved", "enter", "exit", "scrolled", "keyDown", "keyUp", "keyTyped", "Class cannot be created (missing no-arg constructor): ", "none", "all", "table", "cell", "actor", "Array is empty.", "Unable to create new instance: ", "object cannot be null.",
"objects cannot be null.", "index can\'t be >= size: ", " >= ", "OnPlane", "Back", "Front", "bounces cannot be < 2 or > 5: ", "", "If no regions are specified, the font data must have an images path.", "0", "This TextureData implementation does not upload data itself", "Call prepare() before calling getPixmap()", "Pixmap already disposed!", "unknown format: ", "start + count must be <= size: ", " + ", " <= ", "end can\'t be >= size: ", "start can\'t be > end: ", " > ", "additionalCapacity must be >= 0: ", "newSize must be >= 0: ",
"[]", ", ", "loadFactor must be > 0 and < 1: ", "key cannot be null.", "Lambert", "Phong", "both", "top", "bottom", "Enabled", "EnabledUntilCycleEnd", "Disabled", "interface ", "class ", "<init>", "charsetName is null", "Should never been thrown", ": ", "\tat ", "Caused by: ", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", "The value is too big for int type: ", "Illegal radix: ", "java.runtime.name", "userAgent", "os.name", "Windows", "OS X",
"no OS", ".html", "index.html", "index-debug.html", "assets/", "assets.txt", "resize", "gdx.wasm.js", "soundmanager2-jsmin.js", "bullet.wasm.js", "box2D.wasm.js", "imgui.js", "Cozette.fnt", "LOAD_ASSETS", "APP_CREATE", "APP_LOOP", "offset + length must be <= size: ", "Either src or dest is null", "java.version", "1.8", "TeaVM", "file.separator", "/", "path.separator", ":", "line.separator", "\n", "java.io.tmpdir", "/tmp", "java.vm.version", "user.home", "Loading asset : ", "Unsupported asset type ", "Loading script : ",
"px", "UTF-8", "mousedown", "mouseup", "mousemove", "wheel", "touchstart", "touchmove", "touchcancel", "touchend", "keydown", "keypress", "keyup", "CSS1Compat", "hidden", "capacity must be >= 0: ", "The required capacity is too large: ", "Can only cope with FloatBuffer, ShortBuffer and IntBuffer at the moment", "glGetFloat not supported by WebGL backend", "GL error: ", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})", "WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})", "\\.", "Invalid version string: ", "Error parsing number: ",
", assuming: ", "libGDX GL", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", "OpenGL", "GLES", "NONE", "mp3", "ogg", "wav", "Patter is null", "Constructor not found for class: ", "Security violation occurred while getting constructor for class: \'", "\'.", "Security violation while getting constructor for class: ", "Exception occurred in constructor for class: ", "Could not instantiate instance of class: ", "Illegal argument(s) supplied to constructor for class: ", "fSet", "\\Q", "\\E", "\\\\E\\Q", "Is",
"In", "NonCapFSet", "AheadFSet", "BehindFSet", "AtomicFSet", "FinalSet", "<Empty set>", "JointSet", "NonCapJointSet", "PosLookaheadJointSet", "NegLookaheadJointSet", "PosBehindJointSet", "NegBehindJointSet", "<Quant>", "<GroupQuant>", "posFSet", " ", "^ ", "range:", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ", "UCI range:", "decomposed Hangul syllable:", "UCI ", "CI ", "decomposed char:", "<DotAllQuant>", "<DotQuant>", "<SOL>", "WordBoundary", "PreviousMatch", "<EOL>", "EOI", "^", "DotAll", ".", "<Unix MultiLine $>",
"<MultiLine $>", "CI back reference: ", "back reference: ", "UCI back reference: ", "sequence: ", "UCI sequence: ", "CI sequence: ", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart",
"javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic",
"EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators",
"MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement",
"KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea",
"CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "ErrorLoading: ",
"i", "b", "a", "Invalid assets description file.", "PX", "PCT", "EM", "EX", "PT", "PC", "IN", "CM", "MM", "jpg", "jpeg", "png", "bmp", "gif", "json", "xml", "txt", "glsl", "fnt", "pack", "obj", "atlas", "g3dj", "Image", "Audio", "Text", "t", "Binary", "Directory", "public", "protected", "private", "abstract", "static", "final", "transient", "volatile", "synchronized", "native", "strictfp", "interface", "main", "Script loaded: ", "#iterator() cannot be used nested.", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
"=", "==", "Action must be non-null", "Index out of bounds", "Replacement preconditions do not hold", "Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n",
"#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}", "Error compiling shader: ", "SpriteBatch.end must be called before begin.", "SpriteBatch.begin must be called before end.", "SpriteBatch.begin must be called before draw.", "u_projTrans", "u_texture", "%s at %d FPS", "Already loaded.", "File is empty.", "padding=",
",", "Invalid padding.", "Missing common header.", "Invalid common header.", "lineHeight=", "Missing: lineHeight", "base=", "Missing: base", "pages=", "Missing additional page definitions.", ".*id=(\\d+)", ".*file=\"?([^\"]+)\"?", "\\\\", "Missing: file", "Page IDs must be indices starting at 0: ", "Invalid page id: ", "kernings ", "metrics ", "char ", " =", "kerning ", "Error loading font file: ", "No glyphs found.", "VertexArray", "VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO",
"Capacity is negative: ", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", ")", "New position ", " is outside of range [0;", "New limit ", "The last char in dst ", " is outside of array of size ", "Length ", " must be non-negative", "Offset ", "The last char in src ", " is outside of string of size ", "Start ", " must be before end ", "The last byte in dst ", "The last byte in src ", "IGNORE", "REPLACE", "REPORT", "attributes must be >= 1", "vertex shader must not be null",
"fragment shader must not be null", "Fragment shader:\n", "Vertex shader\n", "No uniform with name \'", "\' in shader", "An attempted fetch uniform from uncompiled shader \n", "data must be a ByteBuffer or FloatBuffer", "No buffer allocated!", "IndexBufferObject cannot be used after it has been disposed.", "Index ", "BIG_ENDIAN", "LITTLE_ENDIAN", "The last float in src ", "The last short in src ", "Already prepared", "Couldn\'t load image \'", "\', file does not exist", "rgba(", "None", "SourceOver", "NearestNeighbour",
"BiLinear", "FileType \'", "\' Not supported in web backend", "\\", " does not exist", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "MirroredRepeat", "ClampToEdge", "Repeat", "Classpath", "Internal", "External", "Absolute", "Local", "newAction must be non-null", "The specified font must contain at least one texture page.", "Unknown Gdx2DPixmap Format: ", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "FILL",
"STROKE", "COPY", "copy", "DESTINATION_ATOP", "destination-atop", "DESTINATION_IN", "destination-in", "DESTINATION_OUT", "destination-out", "DESTINATION_OVER", "destination-over", "LIGHTER", "lighter", "SOURCE_ATOP", "source-atop", "SOURCE_IN", "source-in", "SOURCE_OUT", "source-out", "SOURCE_OVER", "source-over", "XOR", "xor", "Pixmap", "Custom", "com.badlogic.gdx.backends.lwjgl3.Lwjgl3GLES20", "texture width and height must be square when using mipmapping.", "�", "averageCharsPerByte must be positive. Actual value is ",
"maxCharsPerByte must be positive. Actual value is ", "ChpR", "u_sampler", "a_normal", "a_texCoord", "u_projModelView", "attribute vec4 a_position;\n", "attribute vec3 a_normal;\n", "attribute vec4 a_color;\n", "attribute vec2 a_texCoord", ";\n", "uniform mat4 u_projModelView;\n", "varying vec4 v_col;\n", "varying vec2 v_tex", "void main() {\n   gl_Position = u_projModelView * a_position;\n", "   v_col = a_color;\n   v_col.a *= 255.0 / 254.0;\n", "   v_tex", " = ", "   gl_PointSize = 1.0;\n}\n", "#ifdef GL_ES\nprecision mediump float;\n#endif\n",
"uniform sampler2D u_sampler", "void main() {\n   gl_FragColor = ", "vec4(1, 1, 1, 1)", "v_col", " * ", " texture2D(u_sampler", ",  v_tex", ") *", ";\n}", "AceR", "Asset loaded: ", "file-f:", "file-d:", "01", "01234567", "0123456789", "0123456789ABCDEF", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!?", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\'/!@#$%^&*()[]{}<>:?;|_=",
"NaN", "0.0", "-0.0", "0.", ".0", "Infinity", " != ", "Logical", "Pixels", "Negative bit address", "Negative exponent", "BigInteger divide by zero", "US-ASCII", "ISO-8859-1", "UTF-16", "UTF-16BE", "UTF-16LE", "-2147483648", "Malformed input of length ", "Unmappable characters of length ", "CLEAR", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD", "GOLDENROD", "ORANGE", "BROWN", "TAN",
"FIREBRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON", "data:", ";base64,", "error"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
var Long_eq;
var Long_ne;
var Long_gt;
var Long_ge;
var Long_lt;
var Long_le;
var Long_compare;
var Long_ucompare;
var Long_add;
var Long_sub;
var Long_inc;
var Long_dec;
var Long_mul;
var Long_div;
var Long_rem;
var Long_udiv;
var Long_urem;
var Long_neg;
var Long_and;
var Long_or;
var Long_xor;
var Long_shl;
var Long_shr;
var Long_shru;
var Long_not;
if (typeof $rt_globals.BigInt !== 'function') {
    Long_eq = function(a, b) {
        return a.hi === b.hi && a.lo === b.lo;
    };
    Long_ne = function(a, b) {
        return a.hi !== b.hi || a.lo !== b.lo;
    };
    Long_gt = function(a, b) {
        if (a.hi < b.hi) {
            return false;
        }
        if (a.hi > b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x > y;
        }
        return (a.lo & 1) > (b.lo & 1);
    };
    Long_ge = function(a, b) {
        if (a.hi < b.hi) {
            return false;
        }
        if (a.hi > b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x >= y;
        }
        return (a.lo & 1) >= (b.lo & 1);
    };
    Long_lt = function(a, b) {
        if (a.hi > b.hi) {
            return false;
        }
        if (a.hi < b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x < y;
        }
        return (a.lo & 1) < (b.lo & 1);
    };
    Long_le = function(a, b) {
        if (a.hi > b.hi) {
            return false;
        }
        if (a.hi < b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x <= y;
        }
        return (a.lo & 1) <= (b.lo & 1);
    };
    Long_add = function(a, b) {
        if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
            return Long_fromNumber(a.lo + b.lo);
        } else if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) + Long_toNumber(b));
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = a_lolo + b_lolo | 0;
        var lohi = a_lohi + b_lohi + (lolo >> 16) | 0;
        var hilo = a_hilo + b_hilo + (lohi >> 16) | 0;
        var hihi = a_hihi + b_hihi + (hilo >> 16) | 0;
        return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
    };
    Long_inc = function(a) {
        var lo = a.lo + 1 | 0;
        var hi = a.hi;
        if (lo === 0) {
            hi = hi + 1 | 0;
        }
        return new Long(lo, hi);
    };
    Long_dec = function(a) {
        var lo = a.lo - 1 | 0;
        var hi = a.hi;
        if (lo ===  -1) {
            hi = hi - 1 | 0;
        }
        return new Long(lo, hi);
    };
    Long_neg = function(a) {
        return Long_inc(new Long(a.lo ^ 0xFFFFFFFF, a.hi ^ 0xFFFFFFFF));
    };
    Long_sub = function(a, b) {
        if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
            return Long_fromNumber(a.lo - b.lo);
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = a_lolo - b_lolo | 0;
        var lohi = a_lohi - b_lohi + (lolo >> 16) | 0;
        var hilo = a_hilo - b_hilo + (lohi >> 16) | 0;
        var hihi = a_hihi - b_hihi + (hilo >> 16) | 0;
        return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
    };
    Long_compare = function(a, b) {
        var r = a.hi - b.hi;
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    };
    Long_ucompare = function(a, b) {
        var r = $rt_ucmp(a.hi, b.hi);
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    };
    Long_mul = function(a, b) {
        var positive = Long_isNegative(a) === Long_isNegative(b);
        if (Long_isNegative(a)) {
            a = Long_neg(a);
        }
        if (Long_isNegative(b)) {
            b = Long_neg(b);
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = 0;
        var lohi = 0;
        var hilo = 0;
        var hihi = 0;
        lolo = a_lolo * b_lolo | 0;
        lohi = lolo >>> 16;
        lohi = (lohi & 0xFFFF) + a_lohi * b_lolo | 0;
        hilo = hilo + (lohi >>> 16) | 0;
        lohi = (lohi & 0xFFFF) + a_lolo * b_lohi | 0;
        hilo = hilo + (lohi >>> 16) | 0;
        hihi = hilo >>> 16;
        hilo = (hilo & 0xFFFF) + a_hilo * b_lolo | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hilo = (hilo & 0xFFFF) + a_lohi * b_lohi | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hilo = (hilo & 0xFFFF) + a_lolo * b_hilo | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hihi = hihi + a_hihi * b_lolo + a_hilo * b_lohi + a_lohi * b_hilo + a_lolo * b_hihi | 0;
        var result = new Long(lolo & 0xFFFF | lohi << 16, hilo & 0xFFFF | hihi << 16);
        return positive ? result : Long_neg(result);
    };
    Long_div = function(a, b) {
        if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_divRem(a, b))[0];
    };
    Long_udiv = function(a, b) {
        if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_udivRem(a, b))[0];
    };
    Long_rem = function(a, b) {
        if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) % Long_toNumber(b));
        }
        return (Long_divRem(a, b))[1];
    };
    Long_urem = function(a, b) {
        if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_udivRem(a, b))[1];
    };
    function Long_divRem(a, b) {
        if (b.lo === 0 && b.hi === 0) {
            throw new $rt_globals.Error("Division by zero");
        }
        var positive = Long_isNegative(a) === Long_isNegative(b);
        if (Long_isNegative(a)) {
            a = Long_neg(a);
        }
        if (Long_isNegative(b)) {
            b = Long_neg(b);
        }
        a = new LongInt(a.lo, a.hi, 0);
        b = new LongInt(b.lo, b.hi, 0);
        var q = LongInt_div(a, b);
        a = new Long(a.lo, a.hi);
        q = new Long(q.lo, q.hi);
        return positive ? [q, a] : [Long_neg(q), Long_neg(a)];
    }
    function Long_udivRem(a, b) {
        if (b.lo === 0 && b.hi === 0) {
            throw new $rt_globals.Error("Division by zero");
        }
        a = new LongInt(a.lo, a.hi, 0);
        b = new LongInt(b.lo, b.hi, 0);
        var q = LongInt_div(a, b);
        a = new Long(a.lo, a.hi);
        q = new Long(q.lo, q.hi);
        return [q, a];
    }
    function Long_shiftLeft16(a) {
        return new Long(a.lo << 16, a.lo >>> 16 | a.hi << 16);
    }
    function Long_shiftRight16(a) {
        return new Long(a.lo >>> 16 | a.hi << 16, a.hi >>> 16);
    }
    Long_and = function(a, b) {
        return new Long(a.lo & b.lo, a.hi & b.hi);
    };
    Long_or = function(a, b) {
        return new Long(a.lo | b.lo, a.hi | b.hi);
    };
    Long_xor = function(a, b) {
        return new Long(a.lo ^ b.lo, a.hi ^ b.hi);
    };
    Long_shl = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo << b, a.lo >>> 32 - b | a.hi << b);
        } else if (b === 32) {
            return new Long(0, a.lo);
        } else {
            return new Long(0, a.lo << b - 32);
        }
    };
    Long_shr = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >> b);
        } else if (b === 32) {
            return new Long(a.hi, a.hi >> 31);
        } else {
            return new Long(a.hi >> b - 32, a.hi >> 31);
        }
    };
    Long_shru = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >>> b);
        } else if (b === 32) {
            return new Long(a.hi, 0);
        } else {
            return new Long(a.hi >>> b - 32, 0);
        }
    };
    Long_not = function(a) {
        return new Long(~a.hi, ~a.lo);
    };
    function LongInt(lo, hi, sup) {
        this.lo = lo;
        this.hi = hi;
        this.sup = sup;
    }
    function LongInt_mul(a, b) {
        var a_lolo = (a.lo & 0xFFFF) * b | 0;
        var a_lohi = (a.lo >>> 16) * b | 0;
        var a_hilo = (a.hi & 0xFFFF) * b | 0;
        var a_hihi = (a.hi >>> 16) * b | 0;
        var sup = a.sup * b | 0;
        a_lohi = a_lohi + (a_lolo >>> 16) | 0;
        a_hilo = a_hilo + (a_lohi >>> 16) | 0;
        a_hihi = a_hihi + (a_hilo >>> 16) | 0;
        sup = sup + (a_hihi >>> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup & 0xFFFF;
    }
    function LongInt_sub(a, b) {
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        a_lolo = a_lolo - b_lolo | 0;
        a_lohi = a_lohi - b_lohi + (a_lolo >> 16) | 0;
        a_hilo = a_hilo - b_hilo + (a_lohi >> 16) | 0;
        a_hihi = a_hihi - b_hihi + (a_hilo >> 16) | 0;
        var sup = a.sup - b.sup + (a_hihi >> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup;
    }
    function LongInt_add(a, b) {
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        a_lolo = a_lolo + b_lolo | 0;
        a_lohi = a_lohi + b_lohi + (a_lolo >> 16) | 0;
        a_hilo = a_hilo + b_hilo + (a_lohi >> 16) | 0;
        a_hihi = a_hihi + b_hihi + (a_hilo >> 16) | 0;
        var sup = a.sup + b.sup + (a_hihi >> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup;
    }
    function LongInt_inc(a) {
        a.lo = a.lo + 1 | 0;
        if (a.lo === 0) {
            a.hi = a.hi + 1 | 0;
            if (a.hi === 0) {
                a.sup = a.sup + 1 & 0xFFFF;
            }
        }
    }
    function LongInt_dec(a) {
        a.lo = a.lo - 1 | 0;
        if (a.lo ===  -1) {
            a.hi = a.hi - 1 | 0;
            if (a.hi ===  -1) {
                a.sup = a.sup - 1 & 0xFFFF;
            }
        }
    }
    function LongInt_ucompare(a, b) {
        var r = a.sup - b.sup;
        if (r !== 0) {
            return r;
        }
        r = (a.hi >>> 1) - (b.hi >>> 1);
        if (r !== 0) {
            return r;
        }
        r = (a.hi & 1) - (b.hi & 1);
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    }
    function LongInt_numOfLeadingZeroBits(a) {
        var n = 0;
        var d = 16;
        while (d > 0) {
            if (a >>> d !== 0) {
                a >>>= d;
                n = n + d | 0;
            }
            d = d / 2 | 0;
        }
        return 31 - n;
    }
    function LongInt_shl(a, b) {
        if (b === 0) {
            return;
        }
        if (b < 32) {
            a.sup = (a.hi >>> 32 - b | a.sup << b) & 0xFFFF;
            a.hi = a.lo >>> 32 - b | a.hi << b;
            a.lo <<= b;
        } else if (b === 32) {
            a.sup = a.hi & 0xFFFF;
            a.hi = a.lo;
            a.lo = 0;
        } else if (b < 64) {
            a.sup = (a.lo >>> 64 - b | a.hi << b - 32) & 0xFFFF;
            a.hi = a.lo << b;
            a.lo = 0;
        } else if (b === 64) {
            a.sup = a.lo & 0xFFFF;
            a.hi = 0;
            a.lo = 0;
        } else {
            a.sup = a.lo << b - 64 & 0xFFFF;
            a.hi = 0;
            a.lo = 0;
        }
    }
    function LongInt_shr(a, b) {
        if (b === 0) {
            return;
        }
        if (b === 32) {
            a.lo = a.hi;
            a.hi = a.sup;
            a.sup = 0;
        } else if (b < 32) {
            a.lo = a.lo >>> b | a.hi << 32 - b;
            a.hi = a.hi >>> b | a.sup << 32 - b;
            a.sup >>>= b;
        } else if (b === 64) {
            a.lo = a.sup;
            a.hi = 0;
            a.sup = 0;
        } else if (b < 64) {
            a.lo = a.hi >>> b - 32 | a.sup << 64 - b;
            a.hi = a.sup >>> b - 32;
            a.sup = 0;
        } else {
            a.lo = a.sup >>> b - 64;
            a.hi = 0;
            a.sup = 0;
        }
    }
    function LongInt_copy(a) {
        return new LongInt(a.lo, a.hi, a.sup);
    }
    function LongInt_div(a, b) {
        var bits = b.hi !== 0 ? LongInt_numOfLeadingZeroBits(b.hi) : LongInt_numOfLeadingZeroBits(b.lo) + 32;
        var sz = 1 + (bits / 16 | 0);
        var dividentBits = bits % 16;
        LongInt_shl(b, bits);
        LongInt_shl(a, dividentBits);
        var q = new LongInt(0, 0, 0);
        while (sz-- > 0) {
            LongInt_shl(q, 16);
            var digitA = (a.hi >>> 16) + 0x10000 * a.sup;
            var digitB = b.hi >>> 16;
            var digit = digitA / digitB | 0;
            var t = LongInt_copy(b);
            LongInt_mul(t, digit);
            if (LongInt_ucompare(t, a) >= 0) {
                while (LongInt_ucompare(t, a) > 0) {
                    LongInt_sub(t, b);
                     --digit;
                }
            } else {
                while (true) {
                    var nextT = LongInt_copy(t);
                    LongInt_add(nextT, b);
                    if (LongInt_ucompare(nextT, a) > 0) {
                        break;
                    }
                    t = nextT;
                    ++digit;
                }
            }
            LongInt_sub(a, t);
            q.lo |= digit;
            LongInt_shl(a, 16);
        }
        LongInt_shr(a, bits + 16);
        return q;
    }
} else {
    Long_eq = function(a, b) {
        return a === b;
    };
    Long_ne = function(a, b) {
        return a !== b;
    };
    Long_gt = function(a, b) {
        return a > b;
    };
    Long_ge = function(a, b) {
        return a >= b;
    };
    Long_lt = function(a, b) {
        return a < b;
    };
    Long_le = function(a, b) {
        return a <= b;
    };
    Long_add = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a + b);
    };
    Long_inc = function(a) {
        return $rt_globals.BigInt.asIntN(64, a + 1);
    };
    Long_dec = function(a) {
        return $rt_globals.BigInt.asIntN(64, a - 1);
    };
    Long_neg = function(a) {
        return $rt_globals.BigInt.asIntN(64,  -a);
    };
    Long_sub = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a - b);
    };
    Long_compare = function(a, b) {
        return a < b ?  -1 : a > b ? 1 : 0;
    };
    Long_ucompare = function(a, b) {
        a = $rt_globals.BigInt.asUintN(64, a);
        b = $rt_globals.BigInt.asUintN(64, b);
        return a < b ?  -1 : a > b ? 1 : 0;
    };
    Long_mul = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a * b);
    };
    Long_div = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a / b);
    };
    Long_udiv = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) / $rt_globals.BigInt.asUintN(64, b));
    };
    Long_rem = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a % b);
    };
    Long_urem = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) % $rt_globals.BigInt.asUintN(64, b));
    };
    Long_and = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a & b);
    };
    Long_or = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a | b);
    };
    Long_xor = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a ^ b);
    };
    Long_shl = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a << $rt_globals.BigInt(b & 63));
    };
    Long_shr = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a >> $rt_globals.BigInt(b & 63));
    };
    Long_shru = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) >> $rt_globals.BigInt(b & 63));
    };
    Long_not = function(a) {
        return $rt_globals.BigInt.asIntN(64, ~a);
    };
}
var Long_add = Long_add;

var Long_sub = Long_sub;

var Long_mul = Long_mul;

var Long_div = Long_div;

var Long_rem = Long_rem;

var Long_or = Long_or;

var Long_and = Long_and;

var Long_xor = Long_xor;

var Long_shl = Long_shl;

var Long_shr = Long_shr;

var Long_shru = Long_shru;

var Long_compare = Long_compare;

var Long_eq = Long_eq;

var Long_ne = Long_ne;

var Long_lt = Long_lt;

var Long_le = Long_le;

var Long_gt = Long_gt;

var Long_ge = Long_ge;

var Long_not = Long_not;

var Long_neg = Long_neg;

function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (var i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new $rt_globals.Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new $rt_globals.Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : function(result) {
        if (result instanceof $rt_globals.Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new $rt_globals.Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    var result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        var self = this;
        var callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(function() {
            self.resume();
        });
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
function $rt_suspending() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
}
function $rt_resuming() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
}
function $rt_suspend(callback) {
    var nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new $rt_globals.Error("Suspension point reached from non-threading context (perhaps, from native JS method).");
    }
    return nativeThread.suspend(callback);
}
function $rt_startThread(runner, callback) {
    (new TeaVMThread(runner)).start(callback);
}
var $rt_currentNativeThread = null;
function $rt_nativeThread() {
    return $rt_currentNativeThread;
}
function $rt_invalidPointer() {
    throw new $rt_globals.Error("Invalid recorded state");
}
main = $rt_mainStarter(cgtt_TeaVMLauncher_main);
main.javaException = $rt_javaException;
(function() {
    var c;
    c = cgxgbtdi_TeaWindow.prototype;
    c.onAnimationFrame = c.$onAnimationFrame$exported$0;
    c = cgxgbt_TeaInput.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbt_TeaApplication$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbt_TeaApplication$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbt_TeaGraphics$1.prototype;
    c.fullscreenChanged = c.$fullscreenChanged$exported$0;
    c = cgxgbt_TeaClipboard$ClipboardWriteHandler.prototype;
    c.prompt = c.$prompt$exported$1;
    c.granted = c.$granted$exported$0;
    c.denied = c.$denied$exported$2;
    c = otjb_Window.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$4;
    c.addEventListener = c.$addEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.getLength = c.$getLength$exported$5;
    c.get = c.$get$exported$2;
    c.addEventListener = c.$addEventListener$exported$6;
    c.removeEventListener = c.$removeEventListener$exported$3;
    c = cgxgbtp_Preloader$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_Preloader$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_Preloader$3.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtd_FileReaderWrapper.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$1;
    c.removeEventListener = c.$removeEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$4;
    c.addEventListener = c.$addEventListener$exported$2;
    c.addEventListener = c.$addEventListener$exported$3;
    c = cgxgbtp_Preloader$3$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otja_XMLHttpRequest.prototype;
    c.addEventListener = c.$addEventListener$exported$0;
    c.dispatchEvent = c.$dispatchEvent$exported$3;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.removeEventListener = c.$removeEventListener$exported$2;
    c.addEventListener = c.$addEventListener$exported$4;
    c = cgxgbtp_AssetDownloadImpl$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_AssetDownloadImpl$6.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otjc_JSArray.prototype;
    c.getLength = c.$getLength$exported$1;
    c.get = c.$get$exported$0;
    c = cgxgbt_TeaApplication$4$1.prototype;
    c.onready = c.$onready$exported$0;
    c.ontimeout = c.$ontimeout$exported$1;
    c = cgxgbtp_AssetDownloadImpl$1$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_AssetDownloadImpl$4$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_AssetDownloadImpl$5$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
})();
})(this);
