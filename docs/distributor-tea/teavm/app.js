"use strict";
var main;
(function($rt_globals) {
var $rt_seed = 2463534242;
function $rt_nextId() {
    var x = $rt_seed;
    x ^= x << 13;
    x ^= x >> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
}
function $rt_compare(a, b) {
    return a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1;
}
function $rt_isInstance(obj, cls) {
    return obj !== null && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls);
}
function $rt_isAssignable(from, to) {
    if (from === to) {
        return true;
    }
    if (to.$meta.item !== null) {
        return from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
    }
    var supertypes = from.$meta.supertypes;
    for (var i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            return true;
        }
    }
    return false;
}
function $rt_castToInterface(obj, cls) {
    if (obj !== null && !$rt_isInstance(obj, cls)) {
        $rt_throwCCE();
    }
    return obj;
}
function $rt_castToClass(obj, cls) {
    if (obj !== null && !(obj instanceof cls)) {
        $rt_throwCCE();
    }
    return obj;
}
$rt_globals.Array.prototype.fill = $rt_globals.Array.prototype.fill || function(value, start, end) {
    var len = this.length;
    if (!len) return this;
    start = start | 0;
    var i = start < 0 ? $rt_globals.Math.max(len + start, 0) : $rt_globals.Math.min(start, len);
    end = end === $rt_globals.undefined ? len : end | 0;
    end = end < 0 ? $rt_globals.Math.max(len + end, 0) : $rt_globals.Math.min(end, len);
    for (;i < end;i++) {
        this[i] = value;
    }
    return this;
};
function $rt_createArray(cls, sz) {
    var data = new $rt_globals.Array(sz);
    data.fill(null);
    return new $rt_array(cls, data);
}
function $rt_createArrayFromData(cls, init) {
    return $rt_wrapArray(cls, init);
}
function $rt_wrapArray(cls, data) {
    return new $rt_array(cls, data);
}
function $rt_createUnfilledArray(cls, sz) {
    return new $rt_array(cls, new $rt_globals.Array(sz));
}
function $rt_createNumericArray(cls, nativeArray) {
    return new $rt_array(cls, nativeArray);
}
var $rt_createLongArray;
var $rt_createLongArrayFromData;
if (typeof $rt_globals.BigInt64Array !== 'function') {
    $rt_createLongArray = function(sz) {
        var data = new $rt_globals.Array(sz);
        var arr = new $rt_array($rt_longcls(), data);
        data.fill(Long_ZERO);
        return arr;
    };
    $rt_createLongArrayFromData = function(init) {
        return new $rt_array($rt_longcls(), init);
    };
} else {
    $rt_createLongArray = function(sz) {
        return $rt_createNumericArray($rt_longcls(), new $rt_globals.BigInt64Array(sz));
    };
    $rt_createLongArrayFromData = function(data) {
        var buffer = new $rt_globals.BigInt64Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_longcls(), buffer);
    };
}
function $rt_createCharArray(sz) {
    return $rt_createNumericArray($rt_charcls(), new $rt_globals.Uint16Array(sz));
}
function $rt_createCharArrayFromData(data) {
    var buffer = new $rt_globals.Uint16Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_charcls(), buffer);
}
function $rt_createByteArray(sz) {
    return $rt_createNumericArray($rt_bytecls(), new $rt_globals.Int8Array(sz));
}
function $rt_createByteArrayFromData(data) {
    var buffer = new $rt_globals.Int8Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_bytecls(), buffer);
}
function $rt_createShortArray(sz) {
    return $rt_createNumericArray($rt_shortcls(), new $rt_globals.Int16Array(sz));
}
function $rt_createShortArrayFromData(data) {
    var buffer = new $rt_globals.Int16Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_shortcls(), buffer);
}
function $rt_createIntArray(sz) {
    return $rt_createNumericArray($rt_intcls(), new $rt_globals.Int32Array(sz));
}
function $rt_createIntArrayFromData(data) {
    var buffer = new $rt_globals.Int32Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_intcls(), buffer);
}
function $rt_createBooleanArray(sz) {
    return $rt_createNumericArray($rt_booleancls(), new $rt_globals.Int8Array(sz));
}
function $rt_createBooleanArrayFromData(data) {
    var buffer = new $rt_globals.Int8Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_booleancls(), buffer);
}
function $rt_createFloatArray(sz) {
    return $rt_createNumericArray($rt_floatcls(), new $rt_globals.Float32Array(sz));
}
function $rt_createFloatArrayFromData(data) {
    var buffer = new $rt_globals.Float32Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_floatcls(), buffer);
}
function $rt_createDoubleArray(sz) {
    return $rt_createNumericArray($rt_doublecls(), new $rt_globals.Float64Array(sz));
}
function $rt_createDoubleArrayFromData(data) {
    var buffer = new $rt_globals.Float64Array(data.length);
    buffer.set(data);
    return $rt_createNumericArray($rt_doublecls(), buffer);
}
function $rt_arraycls(cls) {
    var result = cls.$array;
    if (result === null) {
        var arraycls = {  };
        var name = "[" + cls.$meta.binaryName;
        arraycls.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        arraycls.classObject = null;
        arraycls.$array = null;
        result = arraycls;
        cls.$array = arraycls;
    }
    return result;
}
function $rt_createcls() {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
}
function $rt_createPrimitiveCls(name, binaryName) {
    var cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
}
var $rt_booleanclsCache = null;
function $rt_booleancls() {
    if ($rt_booleanclsCache === null) {
        $rt_booleanclsCache = $rt_createPrimitiveCls("boolean", "Z");
    }
    return $rt_booleanclsCache;
}
var $rt_charclsCache = null;
function $rt_charcls() {
    if ($rt_charclsCache === null) {
        $rt_charclsCache = $rt_createPrimitiveCls("char", "C");
    }
    return $rt_charclsCache;
}
var $rt_byteclsCache = null;
function $rt_bytecls() {
    if ($rt_byteclsCache === null) {
        $rt_byteclsCache = $rt_createPrimitiveCls("byte", "B");
    }
    return $rt_byteclsCache;
}
var $rt_shortclsCache = null;
function $rt_shortcls() {
    if ($rt_shortclsCache === null) {
        $rt_shortclsCache = $rt_createPrimitiveCls("short", "S");
    }
    return $rt_shortclsCache;
}
var $rt_intclsCache = null;
function $rt_intcls() {
    if ($rt_intclsCache === null) {
        $rt_intclsCache = $rt_createPrimitiveCls("int", "I");
    }
    return $rt_intclsCache;
}
var $rt_longclsCache = null;
function $rt_longcls() {
    if ($rt_longclsCache === null) {
        $rt_longclsCache = $rt_createPrimitiveCls("long", "J");
    }
    return $rt_longclsCache;
}
var $rt_floatclsCache = null;
function $rt_floatcls() {
    if ($rt_floatclsCache === null) {
        $rt_floatclsCache = $rt_createPrimitiveCls("float", "F");
    }
    return $rt_floatclsCache;
}
var $rt_doubleclsCache = null;
function $rt_doublecls() {
    if ($rt_doubleclsCache === null) {
        $rt_doubleclsCache = $rt_createPrimitiveCls("double", "D");
    }
    return $rt_doubleclsCache;
}
var $rt_voidclsCache = null;
function $rt_voidcls() {
    if ($rt_voidclsCache === null) {
        $rt_voidclsCache = $rt_createPrimitiveCls("void", "V");
    }
    return $rt_voidclsCache;
}
function $rt_throw(ex) {
    throw $rt_exception(ex);
}
var $rt_javaExceptionProp = $rt_globals.Symbol("javaException");
function $rt_exception(ex) {
    var err = ex.$jsException;
    if (!err) {
        var javaCause = $rt_throwableCause(ex);
        var jsCause = javaCause !== null ? javaCause.$jsException : $rt_globals.undefined;
        var cause = typeof jsCause === "object" ? { cause : jsCause } : $rt_globals.undefined;
        err = new JavaError("Java exception thrown", cause);
        if (typeof $rt_globals.Error.captureStackTrace === "function") {
            $rt_globals.Error.captureStackTrace(err);
        }
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return err;
}
function $rt_fillStack(err, ex) {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        var stack = $rt_decodeStack(err.stack);
        var javaStack = $rt_createArray($rt_stecls(), stack.length);
        var elem;
        var noStack = false;
        for (var i = 0;i < stack.length;++i) {
            var element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
}
function $rt_createMultiArray(cls, dimensions) {
    var first = 0;
    for (var i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, first));
    var firstDim = dimensions[first] | 0;
    for (i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
}
function $rt_createByteMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_bytecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createByteArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_bytecls(), arrays, dimensions);
}
function $rt_createCharMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_charcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createCharArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_charcls(), arrays, dimensions, 0);
}
function $rt_createBooleanMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_booleancls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createBooleanArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_booleancls(), arrays, dimensions, 0);
}
function $rt_createShortMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_shortcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createShortArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_shortcls(), arrays, dimensions, 0);
}
function $rt_createIntMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_intcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createIntArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_intcls(), arrays, dimensions, 0);
}
function $rt_createLongMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_longcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createLongArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_longcls(), arrays, dimensions, 0);
}
function $rt_createFloatMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_floatcls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createFloatArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_floatcls(), arrays, dimensions, 0);
}
function $rt_createDoubleMultiArray(dimensions) {
    var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_doublecls(), dimensions);
    }
    var firstDim = dimensions[0] | 0;
    for (var i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createDoubleArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_doublecls(), arrays, dimensions, 0);
}
function $rt_primitiveArrayCount(dimensions, start) {
    var val = dimensions[start + 1] | 0;
    for (var i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
}
function $rt_createMultiArrayImpl(cls, arrays, dimensions, start) {
    var limit = arrays.length;
    for (var i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        var dim = dimensions[i];
        var index = 0;
        var packedIndex = 0;
        while (index < limit) {
            var arr = $rt_createUnfilledArray(cls, dim);
            for (var j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
}
function $rt_assertNotNaN(value) {
    if (typeof value === 'number' && $rt_globals.isNaN(value)) {
        throw "NaN";
    }
    return value;
}
function $rt_createOutputFunction(printFunction) {
    var buffer = "";
    var utf8Buffer = 0;
    var utf8Remaining = 0;
    function putCodePoint(ch) {
        if (ch === 0xA) {
            printFunction(buffer);
            buffer = "";
        } else if (ch < 0x10000) {
            buffer += $rt_globals.String.fromCharCode(ch);
        } else {
            ch = ch - 0x10000 | 0;
            var hi = (ch >> 10) + 0xD800;
            var lo = (ch & 0x3FF) + 0xDC00;
            buffer += $rt_globals.String.fromCharCode(hi, lo);
        }
    }
    return function(ch) {
        if ((ch & 0x80) === 0) {
            putCodePoint(ch);
        } else if ((ch & 0xC0) === 0x80) {
            if (utf8Buffer > 0) {
                utf8Remaining <<= 6;
                utf8Remaining |= ch & 0x3F;
                if ( --utf8Buffer === 0) {
                    putCodePoint(utf8Remaining);
                }
            }
        } else if ((ch & 0xE0) === 0xC0) {
            utf8Remaining = ch & 0x1F;
            utf8Buffer = 1;
        } else if ((ch & 0xF0) === 0xE0) {
            utf8Remaining = ch & 0x0F;
            utf8Buffer = 2;
        } else if ((ch & 0xF8) === 0xF0) {
            utf8Remaining = ch & 0x07;
            utf8Buffer = 3;
        }
    };
}
var $rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof $rt_globals.console === "object" ? $rt_createOutputFunction(function(msg) {
    $rt_globals.console.info(msg);
}) : function() {
};
var $rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof $rt_globals.console === "object" ? $rt_createOutputFunction(function(msg) {
    $rt_globals.console.error(msg);
}) : function() {
};
var $rt_packageData = null;
function $rt_packages(data) {
    var i = 0;
    var packages = new $rt_globals.Array(data.length);
    for (var j = 0;j < data.length;++j) {
        var prefixIndex = data[i++];
        var prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
}
function $rt_metadata(data) {
    var packages = $rt_packageData;
    var i = 0;
    while (i < data.length) {
        var cls = data[i++];
        cls.$meta = {  };
        var m = cls.$meta;
        var className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            var packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        var superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = $rt_globals.Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        var flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        var innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            var enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            var declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            var simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        var clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        var virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (var j = 0;j < virtualMethods.length;j += 2) {
                var name = virtualMethods[j];
                var func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (var k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
}
function $rt_wrapFunction0(f) {
    return function() {
        return f(this);
    };
}
function $rt_wrapFunction1(f) {
    return function(p1) {
        return f(this, p1);
    };
}
function $rt_wrapFunction2(f) {
    return function(p1, p2) {
        return f(this, p1, p2);
    };
}
function $rt_wrapFunction3(f) {
    return function(p1, p2, p3) {
        return f(this, p1, p2, p3, p3);
    };
}
function $rt_wrapFunction4(f) {
    return function(p1, p2, p3, p4) {
        return f(this, p1, p2, p3, p4);
    };
}
function $rt_threadStarter(f) {
    return function() {
        var args = $rt_globals.Array.prototype.slice.apply(arguments);
        $rt_startThread(function() {
            f.apply(this, args);
        });
    };
}
function $rt_mainStarter(f) {
    return function(args, callback) {
        if (!args) {
            args = [];
        }
        var javaArgs = $rt_createArray($rt_objcls(), args.length);
        for (var i = 0;i < args.length;++i) {
            javaArgs.data[i] = $rt_str(args[i]);
        }
        $rt_startThread(function() {
            f.call(null, javaArgs);
        }, callback);
    };
}
var $rt_stringPool_instance;
function $rt_stringPool(strings) {
    $rt_stringPool_instance = new $rt_globals.Array(strings.length);
    for (var i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
}
function $rt_s(index) {
    return $rt_stringPool_instance[index];
}
function $rt_eraseClinit(target) {
    return target.$clinit = function() {
    };
}
var $rt_numberConversionView = new $rt_globals.DataView(new $rt_globals.ArrayBuffer(8));
var $rt_doubleToLongBits;
var $rt_longBitsToDouble;
if (typeof $rt_globals.BigInt !== 'function') {
    $rt_doubleToLongBits = function(n) {
        $rt_numberConversionView.setFloat64(0, n, true);
        return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
    };
    $rt_longBitsToDouble = function(n) {
        $rt_numberConversionView.setInt32(0, n.lo, true);
        $rt_numberConversionView.setInt32(4, n.hi, true);
        return $rt_numberConversionView.getFloat64(0, true);
    };
} else {
    $rt_doubleToLongBits = function(n) {
        $rt_numberConversionView.setFloat64(0, n, true);
        var lo = $rt_numberConversionView.getInt32(0, true);
        var hi = $rt_numberConversionView.getInt32(4, true);
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(32, $rt_globals.BigInt(lo)) | $rt_globals.BigInt(hi) << $rt_globals.BigInt(32));
    };
    $rt_longBitsToDouble = function(n) {
        var hi = $rt_globals.Number($rt_globals.BigInt.asIntN(32, n >> $rt_globals.BigInt(32)));
        var lo = $rt_globals.Number($rt_globals.BigInt.asIntN(32, n & $rt_globals.BigInt(0xFFFFFFFF)));
        $rt_numberConversionView.setInt32(0, lo, true);
        $rt_numberConversionView.setInt32(4, hi, true);
        return $rt_numberConversionView.getFloat64(0, true);
    };
}
function $rt_floatToIntBits(n) {
    $rt_numberConversionView.setFloat32(0, n);
    return $rt_numberConversionView.getInt32(0);
}
function $rt_intBitsToFloat(n) {
    $rt_numberConversionView.setInt32(0, n);
    return $rt_numberConversionView.getFloat32(0);
}
var JavaError;
if (typeof $rt_globals.Reflect === 'object') {
    var defaultMessage = $rt_globals.Symbol("defaultMessage");
    JavaError = function JavaError(message, cause) {
        var self = $rt_globals.Reflect.construct($rt_globals.Error, [$rt_globals.undefined, cause], JavaError);
        $rt_globals.Object.setPrototypeOf(self, JavaError.prototype);
        self[defaultMessage] = message;
        return self;
    };
    JavaError.prototype = $rt_globals.Object.create($rt_globals.Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get : function() {
        try {
            var javaException = this[$rt_javaExceptionProp];
            if (typeof javaException === 'object') {
                var javaMessage = $rt_throwableMessage(javaException);
                if (typeof javaMessage === "object") {
                    return javaMessage !== null ? javaMessage.toString() : null;
                }
            }
            return this[defaultMessage];
        } catch (e){
            return "Exception occurred trying to extract Java exception message: " + e;
        }
    } } });
} else {
    JavaError = $rt_globals.Error;
}
function $rt_javaException(e) {
    return e instanceof $rt_globals.Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null;
}
function $rt_jsException(e) {
    return typeof e.$jsException === 'object' ? e.$jsException : null;
}
function $rt_wrapException(err) {
    var ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
}
function $dbg_class(obj) {
    var cls = obj.constructor;
    var arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    var clsName = "";
    if (cls === $rt_booleancls()) {
        clsName = "boolean";
    } else if (cls === $rt_bytecls()) {
        clsName = "byte";
    } else if (cls === $rt_shortcls()) {
        clsName = "short";
    } else if (cls === $rt_charcls()) {
        clsName = "char";
    } else if (cls === $rt_intcls()) {
        clsName = "int";
    } else if (cls === $rt_longcls()) {
        clsName = "long";
    } else if (cls === $rt_floatcls()) {
        clsName = "float";
    } else if (cls === $rt_doublecls()) {
        clsName = "double";
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
}
function Long(lo, hi) {
    this.lo = lo | 0;
    this.hi = hi | 0;
}
Long.prototype.__teavm_class__ = function() {
    return "long";
};
function Long_isPositive(a) {
    return (a.hi & 0x80000000) === 0;
}
function Long_isNegative(a) {
    return (a.hi & 0x80000000) !== 0;
}
var Long_MAX_NORMAL = 1 << 18;
var Long_ZERO;
var Long_create;
var Long_fromInt;
var Long_fromNumber;
var Long_toNumber;
var Long_hi;
var Long_lo;
if (typeof $rt_globals.BigInt !== "function") {
    Long.prototype.toString = function() {
        var result = [];
        var n = this;
        var positive = Long_isPositive(n);
        if (!positive) {
            n = Long_neg(n);
        }
        var radix = new Long(10, 0);
        do  {
            var divRem = Long_divRem(n, radix);
            result.push($rt_globals.String.fromCharCode(48 + divRem[1].lo));
            n = divRem[0];
        }while (n.lo !== 0 || n.hi !== 0);
        result = (result.reverse()).join('');
        return positive ? result : "-" + result;
    };
    Long.prototype.valueOf = function() {
        return Long_toNumber(this);
    };
    Long_ZERO = new Long(0, 0);
    Long_fromInt = function(val) {
        return new Long(val,  -(val < 0) | 0);
    };
    Long_fromNumber = function(val) {
        if (val >= 0) {
            return new Long(val | 0, val / 0x100000000 | 0);
        } else {
            return Long_neg(new Long( -val | 0,  -val / 0x100000000 | 0));
        }
    };
    Long_create = function(lo, hi) {
        return new Long(lo, hi);
    };
    Long_toNumber = function(val) {
        return 0x100000000 * val.hi + (val.lo >>> 0);
    };
    Long_hi = function(val) {
        return val.hi;
    };
    Long_lo = function(val) {
        return val.lo;
    };
} else {
    Long_ZERO = $rt_globals.BigInt(0);
    Long_create = function(lo, hi) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(32, $rt_globals.BigInt(lo)) | $rt_globals.BigInt(hi) << $rt_globals.BigInt(32));
    };
    Long_fromInt = function(val) {
        return $rt_globals.BigInt(val);
    };
    Long_fromNumber = function(val) {
        return $rt_globals.BigInt(val >= 0 ? $rt_globals.Math.floor(val) : $rt_globals.Math.ceil(val));
    };
    Long_toNumber = function(val) {
        return $rt_globals.Number(val);
    };
    Long_hi = function(val) {
        return $rt_globals.Number($rt_globals.BigInt.asIntN(64, val >> $rt_globals.BigInt(32))) | 0;
    };
    Long_lo = function(val) {
        return $rt_globals.Number($rt_globals.BigInt.asIntN(32, val)) | 0;
    };
}
var $rt_imul = $rt_globals.Math.imul || function(a, b) {
    var ah = a >>> 16 & 0xFFFF;
    var al = a & 0xFFFF;
    var bh = b >>> 16 & 0xFFFF;
    var bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
};
var $rt_udiv = function(a, b) {
    return (a >>> 0) / (b >>> 0) >>> 0;
};
var $rt_umod = function(a, b) {
    return (a >>> 0) % (b >>> 0) >>> 0;
};
var $rt_ucmp = function(a, b) {
    a >>>= 0;
    b >>>= 0;
    return a < b ?  -1 : a > b ? 1 : 0;
};
function $rt_checkBounds(index, array) {
    if (index < 0 || index >= array.length) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_checkUpperBound(index, array) {
    if (index >= array.length) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_checkLowerBound(index) {
    if (index < 0) {
        $rt_throwAIOOBE();
    }
    return index;
}
function $rt_classWithoutFields(superclass) {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
}
function $rt_setCloneMethod(target, f) {
    target.$clone = f;
}
function $rt_cls(cls) {
    return jl_Class_getClass(cls);
}
function $rt_str(str) {
    if (str === null) {
        return null;
    }
    var characters = $rt_createCharArray(str.length);
    var charsBuffer = characters.data;
    for (var i = 0; i < str.length; i = (i + 1) | 0) {
        charsBuffer[i] = str.charCodeAt(i) & 0xFFFF;
    }
    return jl_String__init_(characters);
}
function $rt_ustr(str) {
    if (str === null) {
        return null;
    }
    var data = str.$characters.data;
    var result = "";
    for (var i = 0; i < data.length; i = (i + 1) | 0) {
        result += String.fromCharCode(data[i]);
    }
    return result;
}
function $rt_objcls() { return jl_Object; }
function $rt_stecls() {
    return jl_StackTraceElement;
}
function $rt_throwableMessage(t) {
    return jl_Throwable_getMessage(t);
}
function $rt_throwableCause(t) {
    return jl_Throwable_getCause(t);
}
function $rt_nullCheck(val) {
    if (val === null) {
        $rt_throw(jl_NullPointerException__init_());
    }
    return val;
}
function $rt_intern(str) {
    return str;
}
function $rt_getThread() {
    return jl_Thread_currentThread();
}
function $rt_setThread(t) {
    return jl_Thread_setCurrentThread(t);
}
function $rt_createException(message) {
    return jl_RuntimeException__init_(message);
}
function $rt_createStackElement(className, methodName, fileName, lineNumber) {
    return null;
}
function $rt_setStack(e, stack) {
}
function $rt_throwAIOOBE() {
}
function $rt_throwCCE() {
}
var $java = Object.create(null);
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
function jl_Object__init_() {
    var var_0 = new jl_Object();
    jl_Object__init_0(var_0);
    return var_0;
}
function jl_Object_monitorEnterSync($o) {
    var var$2;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread();
    else if ($o.$monitor.$owner !== jl_Thread_currentThread())
        $rt_throw(jl_IllegalStateException__init_($rt_s(0)));
    var$2 = $o.$monitor;
    var$2.$count = var$2.$count + 1 | 0;
}
function jl_Object_monitorExitSync($o) {
    var var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        var$2 = $o.$monitor;
        var$3 = var$2.$count - 1 | 0;
        var$2.$count = var$3;
        if (!var$3)
            $o.$monitor.$owner = null;
        jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_monitorEnter($o) {
    jl_Object_monitorEnter0($o, 1);
}
function jl_Object_monitorEnter0($o, $count) {
    var var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        if ($o.$monitor.$owner === null)
            $o.$monitor.$owner = jl_Thread_currentThread();
        if ($o.$monitor.$owner === jl_Thread_currentThread()) {
            var$3 = $o.$monitor;
            var$3.$count = var$3.$count + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, $ptr);
}
function jl_Object_createMonitor($o) {
    $o.$monitor = jl_Object$Monitor__init_();
}
function jl_Object_monitorEnterWait(var$1, var$2) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Object_monitorEnterWait0($o, $count, $callback) {
    var $thread_0, var$5, $monitor;
    $thread_0 = jl_Thread_currentThread();
    if ($o.$monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    if ($o.$monitor.$owner === null) {
        $o.$monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    $monitor = $o.$monitor;
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueue();
    otp_PlatformQueue_add$static($monitor.$enteringThreads, jl_Object$monitorEnterWait$lambda$_6_0__init_($thread_0, $o, $count, $callback));
}
function jl_Object_monitorExit($o) {
    jl_Object_monitorExit0($o, 1);
}
function jl_Object_monitorExit0($o, $count) {
    var $monitor;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        $monitor = $o.$monitor;
        $monitor.$count = $monitor.$count - $count | 0;
        if ($monitor.$count > 0)
            return;
        $monitor.$owner = null;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads))
            otp_Platform_postpone(jl_Object$monitorExit$lambda$_8_0__init_($o));
        else
            jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
}
function jl_Object_waitForOtherThreads($o) {
    var $monitor, $enteringThreads, $r;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === null) {
        $monitor = $o.$monitor;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads)) {
            $enteringThreads = $monitor.$enteringThreads;
            $r = otp_PlatformQueue_remove$static($enteringThreads);
            $monitor.$enteringThreads = null;
            $r.$run();
        }
        return;
    }
}
function jl_Object_isEmptyMonitor($this) {
    var $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        b: {
            if ($monitor.$owner === null) {
                if ($monitor.$enteringThreads !== null) {
                    var$2 = $monitor.$enteringThreads;
                    if (!otp_PlatformQueue_isEmpty$static(var$2))
                        break b;
                }
                if ($monitor.$notifyListeners === null)
                    break a;
                var$2 = $monitor.$notifyListeners;
                if (otp_PlatformQueue_isEmpty$static(var$2))
                    break a;
            }
        }
        return 0;
    }
    jl_Object_deleteMonitor($this);
    return 1;
}
function jl_Object_deleteMonitor($this) {
    $this.$monitor = null;
}
function jl_Object_holdsLock($o) {
    return $o.$monitor !== null && $o.$monitor.$owner === jl_Thread_currentThread() ? 1 : 0;
}
function jl_Object__init_0($this) {}
function jl_Object_getClass($this) {
    return jl_Class_getClass($this.constructor);
}
function jl_Object_hashCode($this) {
    return jl_Object_identity($this);
}
function jl_Object_equals($this, $other) {
    return $this !== $other ? 0 : 1;
}
function jl_Object_toString($this) {
    var var$1, var$2, var$3;
    var$1 = (jl_Object_getClass($this)).$getName();
    var$2 = jl_Integer_toHexString(jl_Object_identity($this));
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$3, var$1), 64), var$2);
    return jl_StringBuilder_toString(var$3);
}
function jl_Object_identity($this) {
    var $platformThis, var$2;
    $platformThis = $this;
    if (!$platformThis.$id$) {
        var$2 = $rt_nextId();
        $platformThis.$id$ = var$2;
    }
    return $this.$id$;
}
function jl_Object_clone($this) {
    var var$1, $result, var$3;
    if (!$rt_isInstance($this, jl_Cloneable)) {
        var$1 = $this;
        if (var$1.constructor.$meta.item === null)
            $rt_throw(jl_CloneNotSupportedException__init_());
    }
    $result = otp_Platform_clone($this);
    var$1 = $result;
    var$3 = $rt_nextId();
    var$1.$id$ = var$3;
    return $result;
}
function jl_Object_notifyAll($this) {
    var $listeners, $listener;
    if (!jl_Object_holdsLock($this))
        $rt_throw(jl_IllegalMonitorStateException__init_());
    $listeners = $this.$monitor.$notifyListeners;
    if ($listeners === null)
        return;
    while (!otp_PlatformQueue_isEmpty$static($listeners)) {
        $listener = otp_PlatformQueue_remove$static($listeners);
        if (!$listener.$expired())
            otp_Platform_postpone($listener);
    }
    $this.$monitor.$notifyListeners = null;
}
function jl_Object_lambda$monitorExit$2($o) {
    jl_Object_waitForOtherThreads($o);
}
function jl_Object_lambda$monitorEnterWait$0($thread_0, $o, $count, $callback) {
    var var$5;
    jl_Thread_setCurrentThread($thread_0);
    $o.$monitor.$owner = $thread_0;
    var$5 = $o.$monitor;
    var$5.$count = var$5.$count + $count | 0;
    $callback.$complete(null);
}
function jur_AbstractCharClass$LazyCharClass() {
    var a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
function jur_AbstractCharClass$LazyCharClass__init_($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$LazyCharClass_getValue($this, $negative) {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = ($this.$computeValue()).$setNegative(1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
}
var jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyBlank__init_() {
    var var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyBlank__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyBlank_computeValue($this) {
    return ((jur_CharClass__init_()).$add(32)).$add(9);
}
var jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyCntrl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyCntrl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyCntrl_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(0, 31)).$add(127);
}
var jl_Runnable = $rt_classWithoutFields(0);
function cgxgbtp_Preloader$3$1$1() {
    jl_Object.call(this);
    this.$this$2 = null;
}
function cgxgbtp_Preloader$3$1$1__init_(var_0) {
    var var_1 = new cgxgbtp_Preloader$3$1$1();
    cgxgbtp_Preloader$3$1$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbtp_Preloader$3$1$1__init_0($this, $this$2) {
    $this.$this$2 = $this$2;
    jl_Object__init_0($this);
}
function cgxgbtp_Preloader$3$1$1_run($this) {
    var $array;
    $array = $this.$this$2.$val$droppedFiles.$toArray();
    $this.$this$2.$this$1.$val$config.$windowListener.$filesDropped($array);
}
var cbgss_Actor = $rt_classWithoutFields();
var cbgssu_Cullable = $rt_classWithoutFields(0);
var cbgss_Group = $rt_classWithoutFields(cbgss_Actor);
var cbgss_Group_tmp = null;
function cbgss_Group_$callClinit() {
    cbgss_Group_$callClinit = $rt_eraseClinit(cbgss_Group);
    cbgss_Group__clinit_();
}
function cbgss_Group__clinit_() {
    cbgss_Group_tmp = cbgm_Vector2__init_();
}
var cbgssu_Layout = $rt_classWithoutFields(0);
var cbgssu_WidgetGroup = $rt_classWithoutFields(cbgss_Group);
var cbgssu_Table = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_Table_debugTableColor = null;
var cbgssu_Table_debugCellColor = null;
var cbgssu_Table_debugActorColor = null;
var cbgssu_Table_cellPool = null;
var cbgssu_Table_backgroundTop = null;
var cbgssu_Table_backgroundLeft = null;
var cbgssu_Table_backgroundBottom = null;
var cbgssu_Table_backgroundRight = null;
function cbgssu_Table_$callClinit() {
    cbgssu_Table_$callClinit = $rt_eraseClinit(cbgssu_Table);
    cbgssu_Table__clinit_();
}
function cbgssu_Table__clinit_() {
    cbgssu_Table_debugTableColor = cbgg_Color__init_(0.0, 0.0, 1.0, 1.0);
    cbgssu_Table_debugCellColor = cbgg_Color__init_(1.0, 0.0, 0.0, 1.0);
    cbgssu_Table_debugActorColor = cbgg_Color__init_(0.0, 1.0, 0.0, 1.0);
    cbgssu_Table_cellPool = cbgssu_Table$1__init_();
    cbgssu_Table_backgroundTop = cbgssu_Table$2__init_();
    cbgssu_Table_backgroundLeft = cbgssu_Table$3__init_();
    cbgssu_Table_backgroundBottom = cbgssu_Table$4__init_();
    cbgssu_Table_backgroundRight = cbgssu_Table$5__init_();
}
var cbgm_Interpolation = $rt_classWithoutFields();
var cbgm_Interpolation_linear = null;
var cbgm_Interpolation_smooth = null;
var cbgm_Interpolation_smooth2 = null;
var cbgm_Interpolation_smoother = null;
var cbgm_Interpolation_fade = null;
var cbgm_Interpolation_pow2 = null;
var cbgm_Interpolation_pow2In = null;
var cbgm_Interpolation_slowFast = null;
var cbgm_Interpolation_pow2Out = null;
var cbgm_Interpolation_fastSlow = null;
var cbgm_Interpolation_pow2InInverse = null;
var cbgm_Interpolation_pow2OutInverse = null;
var cbgm_Interpolation_pow3 = null;
var cbgm_Interpolation_pow3In = null;
var cbgm_Interpolation_pow3Out = null;
var cbgm_Interpolation_pow3InInverse = null;
var cbgm_Interpolation_pow3OutInverse = null;
var cbgm_Interpolation_pow4 = null;
var cbgm_Interpolation_pow4In = null;
var cbgm_Interpolation_pow4Out = null;
var cbgm_Interpolation_pow5 = null;
var cbgm_Interpolation_pow5In = null;
var cbgm_Interpolation_pow5Out = null;
var cbgm_Interpolation_sine = null;
var cbgm_Interpolation_sineIn = null;
var cbgm_Interpolation_sineOut = null;
var cbgm_Interpolation_exp10 = null;
var cbgm_Interpolation_exp10In = null;
var cbgm_Interpolation_exp10Out = null;
var cbgm_Interpolation_exp5 = null;
var cbgm_Interpolation_exp5In = null;
var cbgm_Interpolation_exp5Out = null;
var cbgm_Interpolation_circle = null;
var cbgm_Interpolation_circleIn = null;
var cbgm_Interpolation_circleOut = null;
var cbgm_Interpolation_elastic = null;
var cbgm_Interpolation_elasticIn = null;
var cbgm_Interpolation_elasticOut = null;
var cbgm_Interpolation_swing = null;
var cbgm_Interpolation_swingIn = null;
var cbgm_Interpolation_swingOut = null;
var cbgm_Interpolation_bounce = null;
var cbgm_Interpolation_bounceIn = null;
var cbgm_Interpolation_bounceOut = null;
function cbgm_Interpolation_$callClinit() {
    cbgm_Interpolation_$callClinit = $rt_eraseClinit(cbgm_Interpolation);
    cbgm_Interpolation__clinit_();
}
function cbgm_Interpolation__init_($this) {
    cbgm_Interpolation_$callClinit();
    jl_Object__init_0($this);
}
function cbgm_Interpolation__clinit_() {
    cbgm_Interpolation_linear = cbgm_Interpolation$1__init_();
    cbgm_Interpolation_smooth = cbgm_Interpolation$2__init_();
    cbgm_Interpolation_smooth2 = cbgm_Interpolation$3__init_();
    cbgm_Interpolation_smoother = cbgm_Interpolation$4__init_();
    cbgm_Interpolation_fade = cbgm_Interpolation_smoother;
    cbgm_Interpolation_pow2 = cbgm_Interpolation$Pow__init_(2);
    cbgm_Interpolation_pow2In = cbgm_Interpolation$PowIn__init_(2);
    cbgm_Interpolation_slowFast = cbgm_Interpolation_pow2In;
    cbgm_Interpolation_pow2Out = cbgm_Interpolation$PowOut__init_(2);
    cbgm_Interpolation_fastSlow = cbgm_Interpolation_pow2Out;
    cbgm_Interpolation_pow2InInverse = cbgm_Interpolation$5__init_();
    cbgm_Interpolation_pow2OutInverse = cbgm_Interpolation$6__init_();
    cbgm_Interpolation_pow3 = cbgm_Interpolation$Pow__init_(3);
    cbgm_Interpolation_pow3In = cbgm_Interpolation$PowIn__init_(3);
    cbgm_Interpolation_pow3Out = cbgm_Interpolation$PowOut__init_(3);
    cbgm_Interpolation_pow3InInverse = cbgm_Interpolation$7__init_();
    cbgm_Interpolation_pow3OutInverse = cbgm_Interpolation$8__init_();
    cbgm_Interpolation_pow4 = cbgm_Interpolation$Pow__init_(4);
    cbgm_Interpolation_pow4In = cbgm_Interpolation$PowIn__init_(4);
    cbgm_Interpolation_pow4Out = cbgm_Interpolation$PowOut__init_(4);
    cbgm_Interpolation_pow5 = cbgm_Interpolation$Pow__init_(5);
    cbgm_Interpolation_pow5In = cbgm_Interpolation$PowIn__init_(5);
    cbgm_Interpolation_pow5Out = cbgm_Interpolation$PowOut__init_(5);
    cbgm_Interpolation_sine = cbgm_Interpolation$9__init_();
    cbgm_Interpolation_sineIn = cbgm_Interpolation$10__init_();
    cbgm_Interpolation_sineOut = cbgm_Interpolation$11__init_();
    cbgm_Interpolation_exp10 = cbgm_Interpolation$Exp__init_(2.0, 10.0);
    cbgm_Interpolation_exp10In = cbgm_Interpolation$ExpIn__init_(2.0, 10.0);
    cbgm_Interpolation_exp10Out = cbgm_Interpolation$ExpOut__init_(2.0, 10.0);
    cbgm_Interpolation_exp5 = cbgm_Interpolation$Exp__init_(2.0, 5.0);
    cbgm_Interpolation_exp5In = cbgm_Interpolation$ExpIn__init_(2.0, 5.0);
    cbgm_Interpolation_exp5Out = cbgm_Interpolation$ExpOut__init_(2.0, 5.0);
    cbgm_Interpolation_circle = cbgm_Interpolation$12__init_();
    cbgm_Interpolation_circleIn = cbgm_Interpolation$13__init_();
    cbgm_Interpolation_circleOut = cbgm_Interpolation$14__init_();
    cbgm_Interpolation_elastic = cbgm_Interpolation$Elastic__init_(2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_elasticIn = cbgm_Interpolation$ElasticIn__init_(2.0, 10.0, 6, 1.0);
    cbgm_Interpolation_elasticOut = cbgm_Interpolation$ElasticOut__init_(2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_swing = cbgm_Interpolation$Swing__init_(1.5);
    cbgm_Interpolation_swingIn = cbgm_Interpolation$SwingIn__init_(2.0);
    cbgm_Interpolation_swingOut = cbgm_Interpolation$SwingOut__init_(2.0);
    cbgm_Interpolation_bounce = cbgm_Interpolation$Bounce__init_(4);
    cbgm_Interpolation_bounceIn = cbgm_Interpolation$BounceIn__init_(4);
    cbgm_Interpolation_bounceOut = cbgm_Interpolation$BounceOut__init_(4);
}
function cbgm_Interpolation$BounceOut() {
    var a = this; cbgm_Interpolation.call(a);
    a.$widths = null;
    a.$heights = null;
}
function cbgm_Interpolation$BounceOut__init_(var_0) {
    var var_1 = new cbgm_Interpolation$BounceOut();
    cbgm_Interpolation$BounceOut__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$BounceOut__init_0($this, $bounces) {
    var var$2;
    cbgm_Interpolation__init_($this);
    if ($bounces >= 2 && $bounces <= 5) {
        a: {
            $this.$widths = $rt_createFloatArray($bounces);
            $this.$heights = $rt_createFloatArray($bounces);
            $this.$heights.data[0] = 1.0;
            switch ($bounces) {
                case 2:
                    break;
                case 3:
                    $this.$widths.data[0] = 0.4000000059604645;
                    $this.$widths.data[1] = 0.4000000059604645;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$heights.data[1] = 0.33000001311302185;
                    $this.$heights.data[2] = 0.10000000149011612;
                    break a;
                case 4:
                    $this.$widths.data[0] = 0.3400000035762787;
                    $this.$widths.data[1] = 0.3400000035762787;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$widths.data[3] = 0.15000000596046448;
                    $this.$heights.data[1] = 0.25999999046325684;
                    $this.$heights.data[2] = 0.10999999940395355;
                    $this.$heights.data[3] = 0.029999999329447746;
                    break a;
                case 5:
                    $this.$widths.data[0] = 0.30000001192092896;
                    $this.$widths.data[1] = 0.30000001192092896;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$widths.data[3] = 0.10000000149011612;
                    $this.$widths.data[4] = 0.10000000149011612;
                    $this.$heights.data[1] = 0.44999998807907104;
                    $this.$heights.data[2] = 0.30000001192092896;
                    $this.$heights.data[3] = 0.15000000596046448;
                    $this.$heights.data[4] = 0.05999999865889549;
                    break a;
                default:
                    break a;
            }
            $this.$widths.data[0] = 0.6000000238418579;
            $this.$widths.data[1] = 0.4000000059604645;
            $this.$heights.data[1] = 0.33000001311302185;
        }
        var$2 = $this.$widths.data;
        var$2[0] = var$2[0] * 2.0;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(1))).$append2($bounces)).$toString()));
}
function jnci_BufferedEncoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in = null;
    a.$out = null;
    a.$inPosition = 0;
    a.$outPosition = 0;
}
function jnci_BufferedEncoder$Controller__init_(var_0, var_1) {
    var var_2 = new jnci_BufferedEncoder$Controller();
    jnci_BufferedEncoder$Controller__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnci_BufferedEncoder$Controller__init_0($this, $in, $out) {
    jl_Object__init_0($this);
    $this.$in = $in;
    $this.$out = $out;
}
function jnci_BufferedEncoder$Controller_hasMoreInput($this) {
    return jn_Buffer_hasRemaining($this.$in);
}
function jnci_BufferedEncoder$Controller_hasMoreInput0($this, $sz) {
    return jn_Buffer_remaining($this.$in) < $sz ? 0 : 1;
}
function jnci_BufferedEncoder$Controller_hasMoreOutput($this) {
    return jn_Buffer_hasRemaining($this.$out);
}
function jnci_BufferedEncoder$Controller_hasMoreOutput0($this, $sz) {
    return jn_Buffer_remaining($this.$out) < $sz ? 0 : 1;
}
function jnci_BufferedEncoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition = $inPosition;
}
function jnci_BufferedEncoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition = $outPosition;
}
var cbgggmd_ModelTexture = $rt_classWithoutFields();
var cbgur_ClassReflection = $rt_classWithoutFields();
function cbgur_ClassReflection_getNoArgPublicConstructor($c) {
    var $constructors, var$3;
    $constructors = $c.$getConstructors();
    var$3 = $constructors.data;
    if (var$3.length <= 0)
        return null;
    return cbgur_Constructor__init_(var$3[0]);
}
function cbgur_ClassReflection_getConstructor($c, $parameterTypes) {
    var $constructor, var$4, $e, var$6, var$7, $$je;
    if ($parameterTypes !== null && $parameterTypes.data.length) {
        a: {
            b: {
                try {
                    $constructor = $c.$getConstructor($parameterTypes);
                    var$4 = cbgur_Constructor__init_($constructor);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_SecurityException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jl_NoSuchMethodException) {
                        $e = $$je;
                        break b;
                    } else {
                        throw $$e;
                    }
                }
                return var$4;
            }
            var$4 = new cbgur_ReflectionException;
            var$6 = $c.$getName();
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(2)), var$6);
            cbgur_ReflectionException__init_(var$4, jl_StringBuilder_toString(var$7), $e);
            $rt_throw(var$4);
        }
        var$4 = new cbgur_ReflectionException;
        var$6 = $c.$getName();
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(3)), var$6), $rt_s(4));
        cbgur_ReflectionException__init_(var$4, jl_StringBuilder_toString(var$7), $e);
        $rt_throw(var$4);
    }
    return cbgur_ClassReflection_getNoArgPublicConstructor($c);
}
function cbgur_ClassReflection_getDeclaredConstructor($c, $parameterTypes) {
    var $declaredConstructor, var$4, $e, var$6, var$7, $$je;
    a: {
        try {
            $declaredConstructor = $c.$getDeclaredConstructor($parameterTypes);
            var$4 = cbgur_Constructor__init_($declaredConstructor);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_SecurityException) {
                $e = $$je;
                break a;
            } else if ($$je instanceof jl_NoSuchMethodException) {
                $e = $$je;
                var$4 = new cbgur_ReflectionException;
                var$6 = $c.$getName();
                var$7 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(2)), var$6);
                cbgur_ReflectionException__init_(var$4, jl_StringBuilder_toString(var$7), $e);
                $rt_throw(var$4);
            } else {
                throw $$e;
            }
        }
        return var$4;
    }
    var$4 = new cbgur_ReflectionException;
    var$6 = $c.$getName();
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(5)), var$6);
    cbgur_ReflectionException__init_(var$4, jl_StringBuilder_toString(var$7), $e);
    $rt_throw(var$4);
}
var cbgssu_Drawable = $rt_classWithoutFields(0);
var cbgssu_BaseDrawable = $rt_classWithoutFields();
var ji_Serializable = $rt_classWithoutFields(0);
var jl_Number = $rt_classWithoutFields();
function jl_Number__init_($this) {
    jl_Object__init_0($this);
}
var jl_Comparable = $rt_classWithoutFields(0);
function jl_Integer() {
    jl_Number.call(this);
    this.$value = 0;
}
var jl_Integer_TYPE = null;
var jl_Integer_integerCache = null;
function jl_Integer_$callClinit() {
    jl_Integer_$callClinit = $rt_eraseClinit(jl_Integer);
    jl_Integer__clinit_();
}
function jl_Integer__init_(var_0) {
    var var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
}
function jl_Integer__init_0($this, $value) {
    jl_Integer_$callClinit();
    jl_Number__init_($this);
    $this.$value = $value;
}
function jl_Integer_toString($i, $radix) {
    jl_Integer_$callClinit();
    if (!($radix >= 2 && $radix <= 36))
        $radix = 10;
    return ((jl_AbstractStringBuilder__init_(20)).$append3($i, $radix)).$toString();
}
function jl_Integer_hashCode($value) {
    jl_Integer_$callClinit();
    return ($value >>> 4 | 0) ^ $value << 28 ^ $value << 8 ^ ($value >>> 24 | 0);
}
function jl_Integer_toHexString($i) {
    jl_Integer_$callClinit();
    return otci_IntegerUtil_toUnsignedLogRadixString($i, 4);
}
function jl_Integer_toString0($i) {
    jl_Integer_$callClinit();
    return jl_Integer_toString($i, 10);
}
function jl_Integer_parseInt($s, $radix) {
    jl_Integer_$callClinit();
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$length(), $radix);
    $rt_throw(jl_NumberFormatException__init_($rt_s(6)));
}
function jl_Integer_parseIntImpl($s, $beginIndex, $endIndex, $radix) {
    var $negative, var$6, $value, var$8, $digit, var$10, var$11, var$12;
    jl_Integer_$callClinit();
    if ($beginIndex == $endIndex)
        $rt_throw(jl_NumberFormatException__init_($rt_s(7)));
    if ($radix >= 2 && $radix <= 36) {
        a: {
            $negative = 0;
            switch ($s.$charAt($beginIndex)) {
                case 43:
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                case 45:
                    $negative = 1;
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                default:
            }
            var$6 = $beginIndex;
        }
        $value = 0;
        if (var$6 == $endIndex)
            $rt_throw(jl_NumberFormatException__init_0());
        while (var$6 < $endIndex) {
            var$8 = var$6 + 1 | 0;
            $digit = jl_Character_getNumericValue($s.$charAt(var$6));
            if ($digit < 0) {
                var$10 = new jl_NumberFormatException;
                var$11 = $s.$subSequence($beginIndex, $endIndex);
                var$12 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(8)), var$11);
                jl_NumberFormatException__init_1(var$10, jl_StringBuilder_toString(var$12));
                $rt_throw(var$10);
            }
            if ($digit >= $radix) {
                var$10 = new jl_NumberFormatException;
                var$11 = $s.$subSequence($beginIndex, $endIndex);
                var$12 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$12, $rt_s(9)), $radix), $rt_s(10)), var$11);
                jl_NumberFormatException__init_1(var$10, jl_StringBuilder_toString(var$12));
                $rt_throw(var$10);
            }
            $value = $rt_imul($radix, $value) + $digit | 0;
            if ($value < 0) {
                if (var$8 == $endIndex && $value == (-2147483648) && $negative)
                    return (-2147483648);
                var$10 = new jl_NumberFormatException;
                var$11 = $s.$subSequence($beginIndex, $endIndex);
                var$12 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(11)), var$11);
                jl_NumberFormatException__init_1(var$10, jl_StringBuilder_toString(var$12));
                $rt_throw(var$10);
            }
            var$6 = var$8;
        }
        if ($negative)
            $value =  -$value | 0;
        return $value;
    }
    var$10 = new jl_NumberFormatException;
    var$11 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$11, $rt_s(12)), $radix);
    jl_NumberFormatException__init_1(var$10, jl_StringBuilder_toString(var$11));
    $rt_throw(var$10);
}
function jl_Integer_parseInt0($s) {
    jl_Integer_$callClinit();
    return jl_Integer_parseInt($s, 10);
}
function jl_Integer_valueOf($i) {
    jl_Integer_$callClinit();
    if ($i >= (-128) && $i <= 127) {
        jl_Integer_ensureIntegerCache();
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_($i);
}
function jl_Integer_ensureIntegerCache() {
    var $j;
    jl_Integer_$callClinit();
    a: {
        if (jl_Integer_integerCache === null) {
            jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
            $j = 0;
            while (true) {
                if ($j >= jl_Integer_integerCache.data.length)
                    break a;
                jl_Integer_integerCache.data[$j] = jl_Integer__init_($j - 128 | 0);
                $j = $j + 1 | 0;
            }
        }
    }
}
function jl_Integer_intValue($this) {
    return $this.$value;
}
function jl_Integer_longValue($this) {
    return Long_fromInt($this.$value);
}
function jl_Integer_doubleValue($this) {
    return $this.$value;
}
function jl_Integer_toString1($this) {
    return jl_Integer_toString0($this.$value);
}
function jl_Integer_hashCode0($this) {
    return jl_Integer_hashCode($this.$value);
}
function jl_Integer_equals($this, $other) {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value == $this.$value ? 1 : 0;
}
function jl_Integer_numberOfLeadingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16 | 0;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 >>> 8 | 0;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 >>> 4 | 0;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 >>> 2 | 0;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 >>> 1 | 0)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_numberOfTrailingZeros($i) {
    var $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 << 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 << 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 << 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
}
function jl_Integer_rotateLeft($i, $distance) {
    var var$3;
    jl_Integer_$callClinit();
    var$3 = $distance & 31;
    return $i << var$3 | ($i >>> (32 - var$3 | 0) | 0);
}
function jl_Integer_reverseBytes($i) {
    var var$2;
    jl_Integer_$callClinit();
    var$2 = (($i & (-16711936)) >>> 8 | 0) | ($i & 16711935) << 8;
    var$2 = (var$2 >>> 16 | 0) + (var$2 << 16) | 0;
    return var$2;
}
function jl_Integer__clinit_() {
    jl_Integer_TYPE = $rt_cls($rt_intcls());
}
var cbgssu_SplitPane$SplitPaneStyle = $rt_classWithoutFields();
var cbgu_Disposable = $rt_classWithoutFields(0);
var cbgu_Json$Serializable = $rt_classWithoutFields(0);
var cbgggp_ResourceData$Configurable = $rt_classWithoutFields(0);
var cbgggp_ParticleControllerComponent = $rt_classWithoutFields();
var cbgggpi_Influencer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
var cbgggpi_ParticleControllerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
function jnc_CharsetEncoder() {
    var a = this; jl_Object.call(a);
    a.$charset = null;
    a.$replacement = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$status = 0;
}
function jnc_CharsetEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar, $replacement) {
    jl_Object__init_0($this);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction = jnc_CodingErrorAction_REPORT;
    jnc_CharsetEncoder_checkReplacement($this, $replacement);
    $this.$charset = $cs;
    $this.$replacement = $replacement.$clone();
    $this.$averageBytesPerChar = $averageBytesPerChar;
    $this.$maxBytesPerChar = $maxBytesPerChar;
}
function jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    var var$4;
    var$4 = $rt_createByteArray(1);
    var$4.data[0] = 63;
    jnc_CharsetEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar, var$4);
}
function jnc_CharsetEncoder_checkReplacement($this, $replacement) {
    var var$2;
    if ($replacement !== null) {
        var$2 = $replacement.data.length;
        if (var$2 && var$2 >= $this.$maxBytesPerChar)
            return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(13)));
}
function jnc_CharsetEncoder_onMalformedInput($this, $newAction) {
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(14)));
}
function jnc_CharsetEncoder_implOnMalformedInput($this, $newAction) {}
function jnc_CharsetEncoder_onUnmappableCharacter($this, $newAction) {
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(14)));
}
function jnc_CharsetEncoder_implOnUnmappableCharacter($this, $newAction) {}
function jnc_CharsetEncoder_encode($this, $in, $out, $endOfInput) {
    var $result, $e, $remaining, $action, $$je;
    a: {
        if ($this.$status != 3) {
            if ($endOfInput)
                break a;
            if ($this.$status != 2)
                break a;
        }
        $rt_throw(jl_IllegalStateException__init_0());
    }
    $this.$status = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = $this.$encodeLoop($in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_($e));
            } else {
                throw $$e;
            }
        }
        if ($result.$isUnderflow()) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if ($result.$isOverflow())
            break;
        $action = !$result.$isUnmappable() ? $this.$malformedAction : $this.$unmappableAction;
        b: {
            jnc_CodingErrorAction_$callClinit();
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            if (jn_Buffer_remaining($out) < $this.$replacement.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, $this.$replacement);
        }
        $in.$position(jn_Buffer_position($in) + $result.$length() | 0);
    }
    return $result;
}
function jnc_CharsetEncoder_encode0($this, $in) {
    var $output, $result, var$4;
    if (!jn_Buffer_remaining($in))
        return jn_ByteBuffer_allocate(0);
    jnc_CharsetEncoder_reset($this);
    $output = jn_ByteBuffer_allocate(jn_Buffer_remaining($in) * $this.$averageBytesPerChar | 0);
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        jnc_CoderResult_$callClinit();
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetEncoder_encode($this, $in, $output, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetEncoder_flush($this, $output);
        if (var$4.$isUnderflow())
            break;
        if (!var$4.$isOverflow())
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_ByteBuffer_flip($output);
    return $output;
}
function jnc_CharsetEncoder_allocateMore($this, $buffer) {
    var $array, var$3, $result;
    $array = jn_ByteBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf($array, var$3.length * 2 | 0);
    $result = jn_ByteBuffer_wrap(var$3);
    $result.$position1(jn_Buffer_position($buffer));
    return $result;
}
function jnc_CharsetEncoder_flush($this, $out) {
    var $result;
    if ($this.$status != 2 && $this.$status != 4)
        $rt_throw(jl_IllegalStateException__init_0());
    $result = $this.$implFlush($out);
    jnc_CoderResult_$callClinit();
    if ($result === jnc_CoderResult_UNDERFLOW)
        $this.$status = 3;
    return $result;
}
function jnc_CharsetEncoder_implFlush($this, $out) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
}
function jnc_CharsetEncoder_reset($this) {
    $this.$status = 0;
    $this.$implReset();
    return $this;
}
function jnc_CharsetEncoder_implReset($this) {}
function jnci_BufferedEncoder() {
    var a = this; jnc_CharsetEncoder.call(a);
    a.$inArray = null;
    a.$outArray = null;
}
function jnci_BufferedEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar) {
    jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar);
    $this.$inArray = $rt_createCharArray(512);
    $this.$outArray = $rt_createByteArray(512);
}
function jnci_BufferedEncoder_encodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, $result, $outPos, $outSize, $controller;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outPos = 0;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedEncoder$Controller__init_($in, $out);
            $result = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
            $inPos = $controller.$inPosition;
            var$9 = $controller.$outPosition;
            if ($result === null) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else if (!jn_Buffer_hasRemaining($out) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
            }
            $out.$put0($outArray, 0, var$9);
            if ($result !== null)
                break;
        }
    }
    $in.$position(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return $result;
}
function jnci_UTF16Encoder() {
    var a = this; jnci_BufferedEncoder.call(a);
    a.$bom = 0;
    a.$littleEndian = 0;
}
function jnci_UTF16Encoder__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_UTF16Encoder();
    jnci_UTF16Encoder__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_UTF16Encoder__init_0($this, $cs, $bom, $littleEndian) {
    jnci_BufferedEncoder__init_($this, $cs, 2.0, 4.0);
    $this.$bom = $bom;
    $this.$littleEndian = $littleEndian;
}
function jnci_UTF16Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var var$8, var$9, var$10;
    if ($this.$bom) {
        if (($outPos + 2 | 0) > $outSize) {
            if ($controller.$hasMoreOutput())
                var$8 = null;
            else {
                jnc_CoderResult_$callClinit();
                var$8 = jnc_CoderResult_OVERFLOW;
            }
            return var$8;
        }
        $this.$bom = 0;
        if (!$this.$littleEndian) {
            var$9 = $outArray.data;
            var$10 = $outPos + 1 | 0;
            var$9[$outPos] = (-2);
            $outPos = var$10 + 1 | 0;
            var$9[var$10] = (-1);
        } else {
            var$9 = $outArray.data;
            var$10 = $outPos + 1 | 0;
            var$9[$outPos] = (-1);
            $outPos = var$10 + 1 | 0;
            var$9[var$10] = (-2);
        }
    }
    return !$this.$littleEndian ? jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
}
function jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, var$12, $next, var$14;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = var$10 + (-1) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = $c >> 8 << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreInput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = ($c & 255) << 24 >> 24;
                var$14 = var$12 + 1 | 0;
                var$9[var$12] = $c >> 8 << 24 >> 24;
                var$12 = var$14 + 1 | 0;
                var$9[var$14] = ($next & 255) << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = $next >> 8 << 24 >> 24;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
}
function jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, var$12, $next, var$14;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $c = var$9[$inPos];
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = var$10 + (-1) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = ($c & 255) << 24 >> 24;
                $inPos = var$10;
            } else {
                if (var$10 == $inSize) {
                    $inPos = var$10 + (-1) | 0;
                    if ($controller.$hasMoreInput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$10 + 1 | 0;
                $next = var$9[var$10];
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    $inPos = $inPos + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$9[$outPos] = $c >> 8 << 24 >> 24;
                var$14 = var$12 + 1 | 0;
                var$9[var$12] = ($c & 255) << 24 >> 24;
                var$12 = var$14 + 1 | 0;
                var$9[var$14] = $next >> 8 << 24 >> 24;
                $outPos = var$12 + 1 | 0;
                var$9[var$12] = ($next & 255) << 24 >> 24;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
}
var jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyAlpha__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlpha__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyAlpha_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90);
}
var cbgssu_UIUtils = $rt_classWithoutFields();
var cbgssu_UIUtils_isAndroid = 0;
var cbgssu_UIUtils_isMac = 0;
var cbgssu_UIUtils_isWindows = 0;
var cbgssu_UIUtils_isLinux = 0;
var cbgssu_UIUtils_isIos = 0;
function cbgssu_UIUtils_$callClinit() {
    cbgssu_UIUtils_$callClinit = $rt_eraseClinit(cbgssu_UIUtils);
    cbgssu_UIUtils__clinit_();
}
function cbgssu_UIUtils_shift() {
    cbgssu_UIUtils_$callClinit();
    return !cbg_Gdx_input.$isKeyPressed(59) && !cbg_Gdx_input.$isKeyPressed(60) ? 0 : 1;
}
function cbgssu_UIUtils__clinit_() {
    var var$1;
    cbgssu_UIUtils_isAndroid = $rt_str($rt_globals.navigator.platform).$contains($rt_s(15));
    cbgssu_UIUtils_isMac = $rt_str($rt_globals.navigator.platform).$contains($rt_s(16));
    cbgssu_UIUtils_isWindows = $rt_str($rt_globals.navigator.platform).$contains($rt_s(17));
    cbgssu_UIUtils_isLinux = !$rt_str($rt_globals.navigator.platform).$contains($rt_s(18)) && !$rt_str($rt_globals.navigator.platform).$contains($rt_s(19)) ? 0 : 1;
    var$1 = !$rt_str($rt_globals.navigator.platform).$contains($rt_s(20)) && !$rt_str($rt_globals.navigator.platform).$contains($rt_s(21)) && !$rt_str($rt_globals.navigator.platform).$contains($rt_s(22)) ? 0 : 1;
    cbgssu_UIUtils_isIos = var$1;
}
var cbgu_Pool$Poolable = $rt_classWithoutFields(0);
var cbgss_Action = $rt_classWithoutFields();
var cbgssa_DelegateAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_TimeScaleAction = $rt_classWithoutFields(cbgssa_DelegateAction);
var jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyWord__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyWord_computeValue($this) {
    return ((((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90)).$add0(48, 57)).$add(95);
}
var jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord);
function jur_AbstractCharClass$LazyNonWord__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonWord__init_0($this) {
    jur_AbstractCharClass$LazyWord__init_0($this);
}
function jur_AbstractCharClass$LazyNonWord_computeValue($this) {
    var $chCl;
    $chCl = (jur_AbstractCharClass$LazyWord_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var otj_JSObject = $rt_classWithoutFields(0);
var cgxgbtd_EventListenerWrapper = $rt_classWithoutFields(0);
function cgxgbtp_AssetDownloadImpl$5$1() {
    var a = this; jl_Object.call(a);
    a.$val$url = null;
    a.$val$result = null;
    a.$val$image = null;
    a.$this$10 = null;
}
function cgxgbtp_AssetDownloadImpl$5$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbtp_AssetDownloadImpl$5$1();
    cgxgbtp_AssetDownloadImpl$5$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbtp_AssetDownloadImpl$5$1__init_0($this, $this$1, var$2, var$3, var$4) {
    $this.$this$10 = $this$1;
    $this.$val$url = var$2;
    $this.$val$result = var$3;
    $this.$val$image = var$4;
    jl_Object__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$5$1_handleEvent($this, $evt) {
    if ($rt_str($evt.type).$equals($rt_s(23)))
        $this.$this$10.$val$listener.$onFailure($this.$val$url);
    else {
        cgxgbtp_Blob_setImage($this.$val$result, $this.$val$image);
        $this.$this$10.$val$listener.$onSuccess($this.$val$url, $this.$val$result);
    }
    $this.$this$10.$this$0.$subtractQueue();
}
function cgxgbtp_AssetDownloadImpl$5$1_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
function jl_Enum() {
    var a = this; jl_Object.call(a);
    a.$name = null;
    a.$ordinal = 0;
}
function jl_Enum__init_($this, $name, $ordinal) {
    jl_Object__init_0($this);
    $this.$name = $name;
    $this.$ordinal = $ordinal;
}
function jl_Enum_ordinal($this) {
    return $this.$ordinal;
}
function jl_Enum_toString($this) {
    return $this.$name.$toString();
}
var cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum);
var cbg_Application$ApplicationType_Android = null;
var cbg_Application$ApplicationType_Desktop = null;
var cbg_Application$ApplicationType_HeadlessDesktop = null;
var cbg_Application$ApplicationType_Applet = null;
var cbg_Application$ApplicationType_WebGL = null;
var cbg_Application$ApplicationType_iOS = null;
var cbg_Application$ApplicationType_$VALUES = null;
function cbg_Application$ApplicationType_$callClinit() {
    cbg_Application$ApplicationType_$callClinit = $rt_eraseClinit(cbg_Application$ApplicationType);
    cbg_Application$ApplicationType__clinit_();
}
function cbg_Application$ApplicationType__init_(var_0, var_1) {
    var var_2 = new cbg_Application$ApplicationType();
    cbg_Application$ApplicationType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbg_Application$ApplicationType__init_0($this, var$1, var$2) {
    cbg_Application$ApplicationType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbg_Application$ApplicationType__clinit_() {
    cbg_Application$ApplicationType_Android = cbg_Application$ApplicationType__init_($rt_s(15), 0);
    cbg_Application$ApplicationType_Desktop = cbg_Application$ApplicationType__init_($rt_s(24), 1);
    cbg_Application$ApplicationType_HeadlessDesktop = cbg_Application$ApplicationType__init_($rt_s(25), 2);
    cbg_Application$ApplicationType_Applet = cbg_Application$ApplicationType__init_($rt_s(26), 3);
    cbg_Application$ApplicationType_WebGL = cbg_Application$ApplicationType__init_($rt_s(27), 4);
    cbg_Application$ApplicationType_iOS = cbg_Application$ApplicationType__init_($rt_s(28), 5);
    cbg_Application$ApplicationType_$VALUES = $rt_createArrayFromData(cbg_Application$ApplicationType, [cbg_Application$ApplicationType_Android, cbg_Application$ApplicationType_Desktop, cbg_Application$ApplicationType_HeadlessDesktop, cbg_Application$ApplicationType_Applet, cbg_Application$ApplicationType_WebGL, cbg_Application$ApplicationType_iOS]);
}
function jur_AbstractSet() {
    var a = this; jl_Object.call(a);
    a.$next = null;
    a.$isSecondPassVisited = 0;
    a.$index = null;
    a.$type = 0;
}
var jur_AbstractSet_counter = 0;
function jur_AbstractSet_$callClinit() {
    jur_AbstractSet_$callClinit = $rt_eraseClinit(jur_AbstractSet);
    jur_AbstractSet__clinit_();
}
function jur_AbstractSet__init_($this) {
    var var$1, var$2;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$1 = new jl_Integer;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    jl_Integer__init_0(var$1, var$2);
    $this.$index = var$1.$toString();
}
function jur_AbstractSet__init_0($this, $n) {
    var var$2, var$3;
    jur_AbstractSet_$callClinit();
    jl_Object__init_0($this);
    var$2 = new jl_Integer;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    jl_Integer__init_0(var$2, var$3);
    $this.$index = var$2.$toString();
    $this.$next = $n;
}
function jur_AbstractSet_find($this, $stringIndex, $testString, $matchResult) {
    var $length;
    $length = $matchResult.$getRightBound();
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_AbstractSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_AbstractSet_setType($this, $type) {
    $this.$type = $type;
}
function jur_AbstractSet_getType($this) {
    return $this.$type;
}
function jur_AbstractSet_getQualifiedName($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$index;
    var$2 = $this.$getName();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(var$3, 60), var$1), 58), var$2), 62);
    return jl_StringBuilder_toString(var$3);
}
function jur_AbstractSet_toString($this) {
    return $this.$getQualifiedName();
}
function jur_AbstractSet_getNext($this) {
    return $this.$next;
}
function jur_AbstractSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_AbstractSet_first($this, $set) {
    return 1;
}
function jur_AbstractSet_processBackRefReplacement($this) {
    return null;
}
function jur_AbstractSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next !== null) {
        if (!$this.$next.$isSecondPassVisited) {
            $set = $this.$next.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next.$isSecondPassVisited = 1;
                $this.$next = $set;
            }
            $this.$next.$processSecondPass();
        } else if ($this.$next instanceof jur_SingleSet && $this.$next.$fSet.$isBackReferenced)
            $this.$next = $this.$next.$next;
    }
}
function jur_AbstractSet__clinit_() {
    jur_AbstractSet_counter = 1;
}
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount = 0;
}
function jur_LeafSet__init_($this, $next) {
    jur_AbstractSet__init_0($this, $next);
    $this.$charCount = 1;
    $this.$setType(1);
}
function jur_LeafSet__init_0($this) {
    jur_AbstractSet__init_($this);
    $this.$charCount = 1;
}
function jur_LeafSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    if (($stringIndex + $this.$charCount0() | 0) > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next.$matches($stringIndex + $shift | 0, $testString, $matchResult);
}
function jur_LeafSet_charCount($this) {
    return $this.$charCount;
}
function jur_LeafSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string = null;
}
function jur_CISequenceSet__init_(var_0) {
    var var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CISequenceSet__init_0($this, $substring) {
    jur_LeafSet__init_0($this);
    $this.$string = $substring.$toString();
    $this.$charCount = $substring.$length();
}
function jur_CISequenceSet_accepts($this, $strIndex, $testString) {
    var $i, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= $this.$string.$length())
            return $this.$string.$length();
        var$4 = $this.$string.$charAt($i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != $testString.$charAt(var$5)) {
            var$6 = $this.$string;
            if (jur_Pattern_getSupplement(var$6.$charAt($i)) != $testString.$charAt(var$5))
                break;
        }
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_CISequenceSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$string;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(29)), var$1);
    return jl_StringBuilder_toString(var$2);
}
var jl_CharSequence = $rt_classWithoutFields(0);
function jl_Throwable() {
    var a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
function jl_Throwable__init_() {
    var var_0 = new jl_Throwable();
    jl_Throwable__init_0(var_0);
    return var_0;
}
function jl_Throwable__init_1(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_2(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_3(var_0, var_1) {
    var var_2 = new jl_Throwable();
    jl_Throwable__init_4(var_2, var_0, var_1);
    return var_2;
}
function jl_Throwable__init_5(var_0) {
    var var_1 = new jl_Throwable();
    jl_Throwable__init_6(var_1, var_0);
    return var_1;
}
function jl_Throwable__init_0($this) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
}
function jl_Throwable__init_2($this, $message) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
}
function jl_Throwable__init_4($this, $message, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
    $this.$cause = $cause;
}
function jl_Throwable__init_6($this, $cause) {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$cause = $cause;
}
function jl_Throwable_fillInStackTrace($this) {
    return $this;
}
function jl_Throwable_getMessage($this) {
    return $this.$message;
}
function jl_Throwable_getLocalizedMessage($this) {
    return $this.$getMessage();
}
function jl_Throwable_getCause($this) {
    return $this.$cause === $this ? null : $this.$cause;
}
function jl_Throwable_printStackTrace($this) {
    $this.$printStackTrace(jl_System_err());
}
function jl_Throwable_printStackTrace0($this, $stream) {
    var $message, var$3, var$4, var$5, var$6, $element;
    $stream.$print((jl_Object_getClass($this)).$getName());
    $message = $this.$getLocalizedMessage();
    if ($message !== null) {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(10)), $message);
        $stream.$print(jl_StringBuilder_toString(var$3));
    }
    a: {
        $stream.$println();
        if ($this.$stackTrace !== null) {
            var$4 = $this.$stackTrace.data;
            var$5 = var$4.length;
            var$6 = 0;
            while (true) {
                if (var$6 >= var$5)
                    break a;
                $element = var$4[var$6];
                $stream.$print($rt_s(30));
                $stream.$println0($element);
                var$6 = var$6 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        $stream.$print($rt_s(31));
        $this.$cause.$printStackTrace($stream);
    }
}
var jl_Error = $rt_classWithoutFields(jl_Throwable);
function jl_Error__init_(var_0, var_1) {
    var var_2 = new jl_Error();
    jl_Error__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_Error__init_1(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_2(var_1, var_0);
    return var_1;
}
function jl_Error__init_3(var_0) {
    var var_1 = new jl_Error();
    jl_Error__init_4(var_1, var_0);
    return var_1;
}
function jl_Error__init_0($this, $message, $cause) {
    jl_Throwable__init_4($this, $message, $cause);
}
function jl_Error__init_2($this, $message) {
    jl_Throwable__init_2($this, $message);
}
function jl_Error__init_4($this, $cause) {
    jl_Throwable__init_6($this, $cause);
}
var jl_LinkageError = $rt_classWithoutFields(jl_Error);
function jl_LinkageError__init_(var_0) {
    var var_1 = new jl_LinkageError();
    jl_LinkageError__init_0(var_1, var_0);
    return var_1;
}
function jl_LinkageError__init_0($this, $message) {
    jl_Error__init_2($this, $message);
}
var cbgu_Pools = $rt_classWithoutFields();
var cbgu_Pools_typePools = null;
function cbgu_Pools_$callClinit() {
    cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
    cbgu_Pools__clinit_();
}
function cbgu_Pools_get($type, $max) {
    var $pool;
    cbgu_Pools_$callClinit();
    $pool = cbgu_Pools_typePools.$get0($type);
    if ($pool === null) {
        $pool = cbgu_ReflectionPool__init_($type, 4, $max);
        cbgu_Pools_typePools.$put1($type, $pool);
    }
    return $pool;
}
function cbgu_Pools_get0($type) {
    cbgu_Pools_$callClinit();
    return cbgu_Pools_get($type, 100);
}
function cbgu_Pools_obtain($type) {
    cbgu_Pools_$callClinit();
    return (cbgu_Pools_get0($type)).$obtain();
}
function cbgu_Pools_freeAll($objects, $samePool) {
    var $pool, $i, $n, $object;
    cbgu_Pools_$callClinit();
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(32)));
    $pool = null;
    $i = 0;
    $n = $objects.$size;
    while ($i < $n) {
        a: {
            $object = $objects.$get3($i);
            if ($object !== null) {
                if ($pool === null) {
                    $pool = cbgu_Pools_typePools.$get0(jl_Object_getClass($object));
                    if ($pool === null)
                        break a;
                }
                $pool.$free($object);
                if (!$samePool)
                    $pool = null;
            }
        }
        $i = $i + 1 | 0;
    }
}
function cbgu_Pools__clinit_() {
    cbgu_Pools_typePools = cbgu_ObjectMap__init_();
}
var cbgssu_Skin$TintedDrawable = $rt_classWithoutFields();
function cbgm_Interpolation$SwingOut() {
    cbgm_Interpolation.call(this);
    this.$scale = 0.0;
}
function cbgm_Interpolation$SwingOut__init_(var_0) {
    var var_1 = new cbgm_Interpolation$SwingOut();
    cbgm_Interpolation$SwingOut__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$SwingOut__init_0($this, $scale) {
    cbgm_Interpolation__init_($this);
    $this.$scale = $scale;
}
function cgtrd_Distribution() {
    jl_Object.call(this);
    this.$generator = null;
}
function cgtrd_Distribution__init_($this) {
    jl_Object__init_0($this);
}
function cgtrd_TriangularDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha = 0.0;
    a.$beta = 0.0;
    a.$gamma = 0.0;
}
function cgtrd_TriangularDistribution__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgtrd_TriangularDistribution();
    cgtrd_TriangularDistribution__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgtrd_TriangularDistribution__init_0($this, $generator, $alpha, $beta, $gamma) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, $gamma))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(33)));
}
function cgtrd_TriangularDistribution_getMedian($this) {
    if ($this.$gamma < ($this.$beta - $this.$alpha) * 0.5)
        return $this.$beta - jl_Math_sqrt(($this.$beta - $this.$alpha) * ($this.$beta - $this.$gamma)) / jl_Math_sqrt(2.0);
    return $this.$alpha + jl_Math_sqrt(($this.$beta - $this.$alpha) * ($this.$gamma - $this.$alpha)) / jl_Math_sqrt(2.0);
}
function cgtrd_TriangularDistribution_setParameters($this, $a, $b, $c) {
    if ($a < $b && $a <= $c && $c <= $b) {
        $this.$alpha = $a;
        $this.$beta = $b;
        $this.$gamma = $c;
        return 1;
    }
    return 0;
}
function cgtrd_TriangularDistribution_nextDouble($this) {
    return cgtrd_TriangularDistribution_sample($this.$generator, $this.$alpha, $this.$beta, $this.$gamma);
}
function cgtrd_TriangularDistribution_sample($generator, $alpha, $beta, $gamma) {
    var $helper1, $helper2, $helper3, $helper4, $genNum;
    $helper1 = $gamma - $alpha;
    $helper2 = $beta - $alpha;
    $helper3 = jl_Math_sqrt($helper1 * $helper2);
    $helper4 = jl_Math_sqrt($beta - $gamma);
    $genNum = $generator.$nextDouble();
    if ($genNum <= $helper1 / $helper2)
        return $alpha + jl_Math_sqrt($genNum) * $helper3;
    return $beta - jl_Math_sqrt($genNum * $helper2 - $helper1) * $helper4;
}
function jur_AbstractCharClass$LazyCategory() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates = 0;
}
function jur_AbstractCharClass$LazyCategory__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategory__init_1(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategory__init_0($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category = $cat;
}
function jur_AbstractCharClass$LazyCategory_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategory__init_($this.$category);
    if ($this.$containsAllSurrogates)
        $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
}
function cbgm_Interpolation$Exp() {
    var a = this; cbgm_Interpolation.call(a);
    a.$value0 = 0.0;
    a.$power = 0.0;
    a.$min0 = 0.0;
    a.$scale0 = 0.0;
}
function cbgm_Interpolation$Exp__init_(var_0, var_1) {
    var var_2 = new cbgm_Interpolation$Exp();
    cbgm_Interpolation$Exp__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Interpolation$Exp__init_0($this, $value, $power) {
    cbgm_Interpolation__init_($this);
    $this.$value0 = $value;
    $this.$power = $power;
    $this.$min0 = jl_Math_pow($value,  -$power);
    $this.$scale0 = 1.0 / (1.0 - $this.$min0);
}
var cbgm_FloatCounter = $rt_classWithoutFields();
function jur_FSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex = 0;
}
var jur_FSet_posFSet = null;
function jur_FSet_$callClinit() {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
}
function jur_FSet__init_(var_0) {
    var var_1 = new jur_FSet();
    jur_FSet__init_0(var_1, var_0);
    return var_1;
}
function jur_FSet__init_0($this, $groupIndex) {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_($this);
    $this.$groupIndex = $groupIndex;
}
function jur_FSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $end, $shift;
    $end = $matchResult.$getEnd($this.$groupIndex);
    $matchResult.$setEnd($this.$groupIndex, $stringIndex);
    $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $matchResult.$setEnd($this.$groupIndex, $end);
    return $shift;
}
function jur_FSet_getGroupIndex($this) {
    return $this.$groupIndex;
}
function jur_FSet_getName($this) {
    return $rt_s(34);
}
function jur_FSet_hasConsumed($this, $mr) {
    return 0;
}
function jur_FSet__clinit_() {
    jur_FSet_posFSet = jur_FSet$PossessiveFSet__init_();
}
var jur_BehindFSet = $rt_classWithoutFields(jur_FSet);
function jur_BehindFSet__init_(var_0) {
    var var_1 = new jur_BehindFSet();
    jur_BehindFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BehindFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_BehindFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr, $rightBound;
    $gr = $this.$getGroupIndex();
    $rightBound = $matchResult.$getConsumed($gr);
    if ($rightBound != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
}
function jur_BehindFSet_getName($this) {
    return $rt_s(35);
}
function cgtrd_KnobDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$mu = 0.0;
    a.$sigma = 0.0;
    a.$iota = 0.0;
}
function cgtrd_KnobDistribution__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgtrd_KnobDistribution();
    cgtrd_KnobDistribution__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgtrd_KnobDistribution__init_0($this, $generator, $mu, $sigma, $iota) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($mu, $sigma, $iota))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(36)));
}
function cgtrd_KnobDistribution_getMedian($this) {
    return $this.$mu;
}
function cgtrd_KnobDistribution_setParameters($this, $a, $b, $c) {
    if (!($rt_globals.isNaN($a) ? 1 : 0) && $b > 0.0 && $c >= 0.0 && $c <= 1.0) {
        $this.$mu = $a;
        $this.$sigma = $b;
        $this.$iota = $c;
        return 1;
    }
    return 0;
}
function cgtrd_KnobDistribution_nextDouble($this) {
    return cgtrd_KnobDistribution_sample($this.$generator, $this.$mu, $this.$sigma, $this.$iota);
}
function cgtrd_KnobDistribution_sample($generator, $mu, $sigma, $iota) {
    var var$5, var$6;
    var$5 = $generator.$nextInclusiveDouble( -$sigma, $sigma) + $mu;
    var$6 = $generator.$nextGaussian($mu, $sigma);
    return cgtd_MathTools_lerp(var$5, var$6, $iota);
}
var cbgm_Path = $rt_classWithoutFields(0);
var cbgm_Bezier = $rt_classWithoutFields();
function jur_JointSet() {
    var a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex0 = 0;
}
function jur_JointSet__init_() {
    var var_0 = new jur_JointSet();
    jur_JointSet__init_0(var_0);
    return var_0;
}
function jur_JointSet__init_1(var_0, var_1) {
    var var_2 = new jur_JointSet();
    jur_JointSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_JointSet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_JointSet__init_2($this, $children, $fSet) {
    jur_AbstractSet__init_($this);
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$getGroupIndex();
}
function jur_JointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    if ($this.$children === null)
        return (-1);
    $start = $matchResult.$getStart($this.$groupIndex0);
    $matchResult.$setStart($this.$groupIndex0, $stringIndex);
    $size = $this.$children.$size0();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setStart($this.$groupIndex0, $start);
            return (-1);
        }
        $e = $this.$children.$get3($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_JointSet_setNext($this, $next) {
    $this.$fSet.$setNext($next);
}
function jur_JointSet_getName($this) {
    return $rt_s(37);
}
function jur_JointSet_first($this, $set) {
    var $i;
    a: {
        if ($this.$children !== null) {
            $i = $this.$children.$iterator();
            while (true) {
                if (!$i.$hasNext())
                    break a;
                if (!($i.$next0()).$first($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
}
function jur_JointSet_hasConsumed($this, $matchResult) {
    var var$2, var$3;
    a: {
        if ($matchResult.$getEnd($this.$groupIndex0) >= 0) {
            var$2 = $matchResult.$getStart($this.$groupIndex0);
            var$3 = $this.$groupIndex0;
            if (var$2 == $matchResult.$getEnd(var$3)) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
}
function jur_JointSet_processSecondPass($this) {
    var $childrenSize, $i, $child, $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    a: {
        if ($this.$children !== null) {
            $childrenSize = $this.$children.$size0();
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = $this.$children.$get3($i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    $this.$children.$remove($i);
                    $this.$children.$add1($i, $set);
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$next !== null)
        jur_AbstractSet_processSecondPass($this);
}
function jur_LowHighSurrogateRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt = 0;
}
function jur_LowHighSurrogateRangeSet__init_(var_0) {
    var var_1 = new jur_LowHighSurrogateRangeSet();
    jur_LowHighSurrogateRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowHighSurrogateRangeSet__init_0($this, $surrChars) {
    jur_JointSet__init_0($this);
    $this.$surrChars = $surrChars.$getInstance();
    $this.$alt = $surrChars.$alt0;
}
function jur_LowHighSurrogateRangeSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_LowHighSurrogateRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    var$6 = $stringIndex + 1 | 0;
    var$7 = $rt_compare(var$6, $strLength);
    if (var$7 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $ch = $testString.$charAt($stringIndex);
    if (!$this.$surrChars.$contains0($ch))
        return (-1);
    if (jl_Character_isHighSurrogate($ch)) {
        if (var$7 < 0) {
            $low = $testString.$charAt(var$6);
            if (jl_Character_isLowSurrogate($low))
                return (-1);
        }
    } else if (jl_Character_isLowSurrogate($ch) && $stringIndex > $startStr) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    return $this.$next.$matches(var$6, $testString, $matchResult);
}
function jur_LowHighSurrogateRangeSet_getName($this) {
    var var$1, var$2, var$3;
    var$1 = !$this.$alt ? $rt_s(38) : $rt_s(39);
    var$2 = $this.$surrChars.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(40)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
}
var cbgmc_OrientedBoundingBox = $rt_classWithoutFields();
var cbgmc_OrientedBoundingBox_tempAxes = null;
var cbgmc_OrientedBoundingBox_tempVertices = null;
var cbgmc_OrientedBoundingBox_tmpVectors = null;
function cbgmc_OrientedBoundingBox_$callClinit() {
    cbgmc_OrientedBoundingBox_$callClinit = $rt_eraseClinit(cbgmc_OrientedBoundingBox);
    cbgmc_OrientedBoundingBox__clinit_();
}
function cbgmc_OrientedBoundingBox__clinit_() {
    var $i;
    cbgmc_OrientedBoundingBox_tempAxes = $rt_createArray(cbgm_Vector3, 15);
    cbgmc_OrientedBoundingBox_tempVertices = $rt_createArray(cbgm_Vector3, 8);
    cbgmc_OrientedBoundingBox_tmpVectors = $rt_createArray(cbgm_Vector3, 9);
    $i = 0;
    while ($i < cbgmc_OrientedBoundingBox_tmpVectors.data.length) {
        cbgmc_OrientedBoundingBox_tmpVectors.data[$i] = cbgm_Vector3__init_();
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < cbgmc_OrientedBoundingBox_tempVertices.data.length) {
        cbgmc_OrientedBoundingBox_tempVertices.data[$i] = cbgm_Vector3__init_();
        $i = $i + 1 | 0;
    }
}
var jnci_AsciiEncoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_AsciiEncoder__init_(var_0) {
    var var_1 = new jnci_AsciiEncoder();
    jnci_AsciiEncoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_AsciiEncoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_($this, $cs, 1.0, 1.0);
}
function jnci_AsciiEncoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            if (jl_Character_isHighSurrogate($c)) {
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput(2)) {
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $next = var$10[var$9];
                if (!jl_Character_isLowSurrogate($next)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(2);
                break a;
            }
            if (jl_Character_isLowSurrogate($c))
                $result = jnc_CoderResult_malformedForLength(1);
            if ($c >= 128) {
                $result = jnc_CoderResult_unmappableForLength(1);
                var$9 = var$9 + (-1) | 0;
                break a;
            }
            var$10 = $outArray.data;
            var$13 = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = var$13;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
var cbgssu_TextField$OnscreenKeyboard = $rt_classWithoutFields(0);
var cbg_Gdx = $rt_classWithoutFields();
var cbg_Gdx_app = null;
var cbg_Gdx_graphics = null;
var cbg_Gdx_audio = null;
var cbg_Gdx_input = null;
var cbg_Gdx_files = null;
var cbg_Gdx_net = null;
var cbg_Gdx_gl = null;
var cbg_Gdx_gl20 = null;
var cbg_Gdx_gl30 = null;
var jlr_AnnotatedElement = $rt_classWithoutFields(0);
var jlr_AccessibleObject = $rt_classWithoutFields();
function jlr_AccessibleObject__init_() {
    var var_0 = new jlr_AccessibleObject();
    jlr_AccessibleObject__init_0(var_0);
    return var_0;
}
function jlr_AccessibleObject__init_0($this) {
    jl_Object__init_0($this);
}
function jlr_AccessibleObject_setAccessible($this, $flag) {}
var jlr_Member = $rt_classWithoutFields(0);
function jlr_Constructor() {
    var a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name0 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$callable = null;
}
function jlr_Constructor__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jlr_Constructor();
    jlr_Constructor__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jlr_Constructor__init_0($this, $declaringClass, $name, $modifiers, $accessLevel, $parameterTypes, $callable) {
    jlr_AccessibleObject__init_0($this);
    $this.$declaringClass = $declaringClass;
    $this.$name0 = $name;
    $this.$modifiers = $modifiers;
    $this.$accessLevel = $accessLevel;
    $this.$parameterTypes = $parameterTypes;
    $this.$callable = $callable;
}
function jlr_Constructor_getDeclaringClass($this) {
    return $this.$declaringClass;
}
function jlr_Constructor_getModifiers($this) {
    return otcir_Flags_getModifiers($this.$modifiers, $this.$accessLevel);
}
function jlr_Constructor_getParameterTypes($this) {
    return $this.$parameterTypes.$clone();
}
function jlr_Constructor_toString($this) {
    var $sb, $parameterTypes, $i, var$4;
    $sb = jl_StringBuilder__init_();
    $sb.$append1(jlr_Modifier_toString($this.$getModifiers0()));
    if ($sb.$length() > 0)
        $sb.$append0(32);
    ($sb.$append1(($this.$declaringClass.$getName()).$toString())).$append0(40);
    $parameterTypes = $this.$getParameterTypes();
    $i = 0;
    while (true) {
        var$4 = $parameterTypes.data;
        if ($i >= var$4.length)
            break;
        if ($i > 0)
            $sb.$append0(44);
        $sb.$append1(var$4[$i].$getName());
        $i = $i + 1 | 0;
    }
    return ($sb.$append0(41)).$toString();
}
function jlr_Constructor_newInstance($this, $initargs) {
    var var$2, var$3, $i, $jsArgs, $instance, var$7, var$8;
    if ($this.$modifiers & 1)
        $rt_throw(jl_InstantiationException__init_());
    if ($this.$callable === null)
        $rt_throw(jl_IllegalAccessException__init_());
    var$2 = $initargs.data;
    var$3 = var$2.length;
    if (var$3 != $this.$parameterTypes.data.length)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $i = 0;
    while (true) {
        if ($i >= var$3) {
            $jsArgs = $initargs.data;
            $instance = new ($this.$declaringClass.$platformClass);
            $this.$callable.call($instance, $jsArgs);
            return $instance;
        }
        if (!$this.$parameterTypes.data[$i].$isPrimitive() && var$2[$i] !== null) {
            var$7 = $this.$parameterTypes.data[$i];
            var$8 = var$2[$i];
            if (!var$7.$isInstance(var$8))
                $rt_throw(jl_IllegalArgumentException__init_0());
        }
        if ($this.$parameterTypes.data[$i].$isPrimitive() && var$2[$i] === null)
            break;
        $i = $i + 1 | 0;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
function jur_QuantifierSet__init_($this, $innerSet, $next, $type) {
    jur_AbstractSet__init_0($this, $next);
    $this.$innerSet = $innerSet;
    $this.$setType($type);
}
function jur_QuantifierSet_getInnerSet($this) {
    return $this.$innerSet;
}
function jur_QuantifierSet_first($this, $set) {
    return !$this.$innerSet.$first($set) && !$this.$next.$first($set) ? 0 : 1;
}
function jur_QuantifierSet_hasConsumed($this, $mr) {
    return 1;
}
function jur_QuantifierSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next !== null && !$this.$next.$isSecondPassVisited) {
        $set = $this.$next.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next.$isSecondPassVisited = 1;
            $this.$next = $set;
        }
        $this.$next.$processSecondPass();
    }
    if ($this.$innerSet !== null) {
        if (!$this.$innerSet.$isSecondPassVisited) {
            $set = $this.$innerSet.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($this.$innerSet instanceof jur_SingleSet && $this.$innerSet.$fSet.$isBackReferenced)
            $this.$innerSet = $this.$innerSet.$next;
    }
}
var jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
function jur_GroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_GroupQuantifierSet();
    jur_GroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
}
function jur_GroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_GroupQuantifierSet_getName($this) {
    return $rt_s(41);
}
var jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_PosPlusGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosPlusGroupQuantifierSet();
    jur_PosPlusGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosPlusGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosPlusGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex, var$5;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            var$5 = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if (var$5 <= $nextIndex)
                break;
            $nextIndex = var$5;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function ju_Random() {
    var a = this; jl_Object.call(a);
    a.$storedGaussian = 0.0;
    a.$haveStoredGaussian = 0;
}
function ju_Random__init_() {
    var var_0 = new ju_Random();
    ju_Random__init_0(var_0);
    return var_0;
}
function ju_Random__init_1(var_0) {
    var var_1 = new ju_Random();
    ju_Random__init_2(var_1, var_0);
    return var_1;
}
function ju_Random__init_0($this) {
    jl_Object__init_0($this);
}
function ju_Random__init_2($this, $seed) {
    jl_Object__init_0($this);
}
function ju_Random_setSeed($this, $seed) {}
function ju_Random_next($this, $bits) {
    if ($bits == 32)
        return $this.$nextDouble() * 4.294967295E9 + (-2.147483648E9) | 0;
    return $this.$nextDouble() * Long_toNumber(Long_shl(Long_fromInt(1), jl_Math_min(32, $bits))) | 0;
}
function ju_Random_nextInt($this) {
    return $this.$next1(32);
}
function ju_Random_nextLong($this) {
    return Long_or(Long_shl(Long_fromInt($this.$nextInt()), 32), Long_fromInt($this.$nextInt()));
}
function ju_Random_nextFloat($this) {
    return $this.$nextDouble();
}
function ju_Random_nextDouble($this) {
    return $rt_globals.Math.random();
}
function ju_Random_nextGaussian($this) {
    var $v1, $v2, $s, $m;
    if ($this.$haveStoredGaussian) {
        $this.$haveStoredGaussian = 0;
        return $this.$storedGaussian;
    }
    while (true) {
        while (true) {
            $v1 = 2.0 * $this.$nextDouble() - 1.0;
            $v2 = 2.0 * $this.$nextDouble() - 1.0;
            $s = $v1 * $v1 + $v2 * $v2;
            if ($s >= 1.0)
                continue;
            else
                break;
        }
        if ($s === 0.0)
            continue;
        else
            break;
    }
    $m = jl_StrictMath_sqrt((-2.0) * jl_StrictMath_log($s) / $s);
    $this.$storedGaussian = $v2 * $m;
    $this.$haveStoredGaussian = 1;
    return $v1 * $m;
}
var cgtr_EnhancedRandom = $rt_classWithoutFields(ju_Random);
function cgtr_EnhancedRandom__init_($this) {
    ju_Random__init_0($this);
}
function cgtr_EnhancedRandom__init_0($this, $seed) {
    ju_Random__init_2($this, $seed);
}
function cgtr_EnhancedRandom_seedFromMath() {
    return Long_xor(Long_fromNumber((jl_Math_random() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_random() - 0.5) * 1.8446744073709552E19));
}
function cgtr_EnhancedRandom_next($this, $bits) {
    return Long_lo(($this.$nextLong())) >>> (32 - $bits | 0) | 0;
}
function cgtr_EnhancedRandom_nextFloat($this) {
    return Long_toNumber(Long_shru($this.$nextLong(), 40)) * 5.960464477539063E-8;
}
function cgtr_EnhancedRandom_nextDouble($this) {
    return Long_toNumber(Long_shru($this.$nextLong(), 11)) * 1.1102230246251565E-16;
}
function cgtr_EnhancedRandom_nextInclusiveDouble($this) {
    var $bits;
    $bits = $this.$nextLong();
    return cgtd_BitConversion_longBitsToDouble(Long_or(Long_shl(Long_sub(Long_fromInt(1022), Long_fromInt(cgtd_BitConversion_countLeadingZeros($bits))), 52), Long_and($bits, Long_create(4294967295, 1048575)))) + 2.44140625E-4 - 2.44140625E-4;
}
function cgtr_EnhancedRandom_nextInclusiveDouble0($this, $innerBound, $outerBound) {
    return $innerBound + $this.$nextInclusiveDouble0() * ($outerBound - $innerBound);
}
function cgtr_EnhancedRandom_nextExclusiveDouble($this) {
    var $bits;
    $bits = $this.$nextLong();
    return cgtd_BitConversion_longBitsToDouble(Long_or(Long_shl(Long_sub(Long_fromInt(1022), Long_fromInt(cgtd_BitConversion_countLeadingZeros($bits))), 52), Long_and($bits, Long_create(4294967295, 1048575))));
}
function cgtr_EnhancedRandom_nextExclusiveSignedDouble($this) {
    var $bits;
    $bits = $this.$nextLong();
    return cgtd_BitConversion_longBitsToDouble(Long_or(Long_shl(Long_sub(Long_fromInt(1022), Long_fromInt(cgtd_BitConversion_countLeadingZeros($bits))), 52), Long_and(Long_or(Long_shl($bits, 63), Long_shru($bits, 1)), Long_create(4294967295, 2148532223))));
}
function cgtr_EnhancedRandom_nextExclusiveFloat($this) {
    var $bits;
    $bits = $this.$nextLong();
    return cgtd_BitConversion_intBitsToFloat((126 - cgtd_BitConversion_countLeadingZeros($bits) | 0) << 23 | Long_lo($bits) & 8388607);
}
function cgtr_EnhancedRandom_nextGaussian($this) {
    return cgtr_Ziggurat_normal($this.$nextLong());
}
function cgtr_EnhancedRandom_nextGaussian0($this, $mean, $stddev) {
    return $mean + $stddev * $this.$nextGaussian0();
}
function cgtr_EnhancedRandom_probit($d) {
    var $q, $r;
    if ($d > 0.0 && $d < 1.0) {
        if ($d < 0.02425) {
            $q = jl_Math_sqrt((-2.0) * jl_Math_log($d));
            return ((((((-0.007784894002430293) * $q - 0.3223964580411365) * $q - 2.400758277161838) * $q - 2.549732539343734) * $q + 4.374664141464968) * $q + 2.938163982698783) / ((((0.007784695709041462 * $q + 0.3224671290700398) * $q + 2.445134137142996) * $q + 3.754408661907416) * $q + 1.0);
        }
        if (0.97575 < $d) {
            $q = jl_Math_sqrt((-2.0) * jl_Math_log(1.0 - $d));
            return  -((((((-0.007784894002430293) * $q - 0.3223964580411365) * $q - 2.400758277161838) * $q - 2.549732539343734) * $q + 4.374664141464968) * $q + 2.938163982698783) / ((((0.007784695709041462 * $q + 0.3224671290700398) * $q + 2.445134137142996) * $q + 3.754408661907416) * $q + 1.0);
        }
        $q = $d - 0.5;
        $r = $q * $q;
        return ((((((-39.69683028665376) * $r + 220.9460984245205) * $r - 275.9285104469687) * $r + 138.357751867269) * $r - 30.66479806614716) * $r + 2.506628277459239) * $q / ((((((-54.47609879822406) * $r + 161.5858368580409) * $r - 155.6989798598866) * $r + 66.80131188771972) * $r - 13.28068155288572) * $r + 1.0);
    }
    return jl_Math_copySign(38.5, $d - 0.5);
}
function cgtr_EnhancedRandom_nextTriangular($this, $min, $max) {
    return $this.$nextTriangular($min, $max, ($min + $max) * 0.5);
}
function cgtr_EnhancedRandom_nextTriangular0($this, $min, $max, $mode) {
    var $u, $d, var$6;
    $u = $this.$nextFloat();
    $d = $max - $min;
    var$6 = $mode - $min;
    if ($u <= var$6 / $d)
        return $min + jl_Math_sqrt($u * $d * var$6);
    return $max - jl_Math_sqrt((1.0 - $u) * $d * ($max - $mode));
}
function cgtr_LowChangeQuasiRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$state = Long_ZERO;
    a.$choice = Long_ZERO;
}
function cgtr_LowChangeQuasiRandom__init_() {
    var var_0 = new cgtr_LowChangeQuasiRandom();
    cgtr_LowChangeQuasiRandom__init_0(var_0);
    return var_0;
}
function cgtr_LowChangeQuasiRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$state = cgtr_EnhancedRandom_seedFromMath();
    $this.$choice = cgtr_EnhancedRandom_seedFromMath();
}
function cgtr_LowChangeQuasiRandom_nextLong($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$state;
    var$2 = Long_add($this.$choice, Long_create(2135587861, 2654435769));
    $this.$choice = var$2;
    var$3 = Long_xor(var$1, Long_shl(Long_fromInt(1), Long_lo(Long_shru(var$2, 58))));
    $this.$state = var$3;
    return var$3;
}
var cbgf_FileHandle = $rt_classWithoutFields();
function cbgf_FileHandle__init_() {
    var var_0 = new cbgf_FileHandle();
    cbgf_FileHandle__init_0(var_0);
    return var_0;
}
function cbgf_FileHandle__init_0($this) {
    jl_Object__init_0($this);
}
function cgxgbt_TeaFileHandle() {
    var a = this; cbgf_FileHandle.call(a);
    a.$preloader = null;
    a.$file = null;
    a.$type0 = null;
}
function cgxgbt_TeaFileHandle__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbt_TeaFileHandle();
    cgxgbt_TeaFileHandle__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbt_TeaFileHandle__init_0($this, $preloader, $fileName, $type) {
    var var$4, var$5;
    cbgf_FileHandle__init_0($this);
    cbg_Files$FileType_$callClinit();
    if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath && $type !== cbg_Files$FileType_Local) {
        var$4 = new cbgu_GdxRuntimeException;
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(42)), $type), $rt_s(43));
        cbgu_GdxRuntimeException__init_(var$4, jl_StringBuilder_toString(var$5));
        $rt_throw(var$4);
    }
    $this.$preloader = $preloader;
    $this.$file = cgxgbt_TeaFileHandle_fixSlashes($fileName);
    $this.$type0 = $type;
}
function cgxgbt_TeaFileHandle_path($this) {
    return $this.$file;
}
function cgxgbt_TeaFileHandle_name($this) {
    var $index;
    $index = $this.$file.$lastIndexOf(47);
    if ($index < 0)
        return $this.$file;
    return $this.$file.$substring($index + 1 | 0);
}
function cgxgbt_TeaFileHandle_nameWithoutExtension($this) {
    var $name, $dotIndex;
    $name = $this.$name1();
    $dotIndex = $name.$lastIndexOf(46);
    if ($dotIndex == (-1))
        return $name;
    return $name.$substring0(0, $dotIndex);
}
function cgxgbt_TeaFileHandle_type($this) {
    return $this.$type0;
}
function cgxgbt_TeaFileHandle_read($this) {
    var var$1, $in, var$3, var$4;
    var$1 = $this.$type0;
    cbg_Files$FileType_$callClinit();
    if (var$1 === cbg_Files$FileType_Local)
        return (cgxgbtf_FileDB_getInstance()).$read($this);
    $in = $this.$preloader.$read0($this.$file);
    if ($in !== null)
        return $in;
    var$3 = new cbgu_GdxRuntimeException;
    var$1 = $this.$file;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$1), $rt_s(44));
    cbgu_GdxRuntimeException__init_(var$3, jl_StringBuilder_toString(var$4));
    $rt_throw(var$3);
}
function cgxgbt_TeaFileHandle_child($this, $name) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = new cgxgbt_TeaFileHandle;
    var$3 = $this.$preloader;
    if ($this.$file.$isEmpty())
        var$4 = $rt_s(45);
    else {
        var$5 = $this.$file;
        var$6 = !$this.$file.$endsWith($rt_s(46)) ? $rt_s(46) : $rt_s(45);
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$5), var$6);
        var$4 = jl_StringBuilder_toString(var$4);
    }
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $name);
    cgxgbt_TeaFileHandle__init_0(var$2, var$3, jl_StringBuilder_toString(var$5), $this.$type0);
    return var$2;
}
function cgxgbt_TeaFileHandle_parent($this) {
    var $index, $dir;
    $index = $this.$file.$lastIndexOf0($rt_s(46));
    $dir = $rt_s(45);
    if ($index > 0)
        $dir = $this.$file.$substring0(0, $index);
    return cgxgbt_TeaFileHandle__init_($this.$preloader, $dir, $this.$type0);
}
function cgxgbt_TeaFileHandle_toString($this) {
    return $this.$file;
}
function cgxgbt_TeaFileHandle_fixSlashes($path) {
    var var$2;
    var$2 = $path.$replace($rt_s(47), $rt_s(46));
    if (var$2.$endsWith($rt_s(46)))
        var$2 = var$2.$substring0(0, var$2.$length() - 1 | 0);
    return var$2;
}
function jl_AbstractStringBuilder() {
    var a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length0 = 0;
}
function jl_AbstractStringBuilder__init_0() {
    var var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_1(var_0);
    return var_0;
}
function jl_AbstractStringBuilder__init_(var_0) {
    var var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_2(var_1, var_0);
    return var_1;
}
function jl_AbstractStringBuilder__init_1($this) {
    jl_AbstractStringBuilder__init_2($this, 16);
}
function jl_AbstractStringBuilder__init_2($this, $capacity) {
    jl_Object__init_0($this);
    $this.$buffer = $rt_createCharArray($capacity);
}
function jl_AbstractStringBuilder_append($this, $obj) {
    return $this.$insert($this.$length0, $obj);
}
function jl_AbstractStringBuilder_append0($this, $string) {
    return $this.$insert0($this.$length0, $string);
}
function jl_AbstractStringBuilder_insert($this, $index, $string) {
    var $i, var$4, var$5;
    if ($index >= 0 && $index <= $this.$length0) {
        if ($string === null)
            $string = $rt_s(48);
        else if ($string.$isEmpty())
            return $this;
        $this.$ensureCapacity($this.$length0 + $string.$length() | 0);
        $i = $this.$length0 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$length() | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length0 = $this.$length0 + $string.$length() | 0;
        $i = 0;
        while ($i < $string.$length()) {
            var$4 = $this.$buffer.data;
            var$5 = $index + 1 | 0;
            var$4[$index] = $string.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$5;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append1($this, $value) {
    return $this.$append3($value, 10);
}
function jl_AbstractStringBuilder_append2($this, $value, $radix) {
    return $this.$insert1($this.$length0, $value, $radix);
}
function jl_AbstractStringBuilder_insert0($this, $target, $value, $radix) {
    var $positive, var$5, var$6, $pos, $sz, $posLimit, var$10, var$11;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($rt_ucmp($value, $radix) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = $rt_udiv((-1), $radix);
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if ($rt_ucmp(var$10, $value) > 0) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if ($rt_ucmp(var$10, $posLimit) > 0)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$11 = $target;
            else {
                var$5 = $this.$buffer.data;
                var$11 = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (!var$10)
                    break a;
                var$5 = $this.$buffer.data;
                var$6 = var$11 + 1 | 0;
                var$5[var$11] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                $value = $rt_umod($value, var$10);
                var$10 = $rt_udiv(var$10, $radix);
                var$11 = var$6;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_append3($this, $value) {
    return $this.$insert2($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert1($this, $target, $value) {
    return $this.$insert3($target, $value, 10);
}
function jl_AbstractStringBuilder_insert2($this, $target, $value, $radix) {
    var $positive, var$5, var$6, var$7, $sz, $pos, $posLimit, var$11, var$12;
    $positive = 1;
    if (Long_lt($value, Long_ZERO)) {
        $positive = 0;
        $value = Long_neg($value);
    }
    a: {
        var$5 = Long_fromInt($radix);
        if (jl_Long_compareUnsigned($value, var$5) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$6 = $this.$buffer.data;
                var$7 = $target + 1 | 0;
                var$6[$target] = 45;
                $target = var$7;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit(Long_lo($value), $radix);
        } else {
            $sz = 1;
            $pos = Long_fromInt(1);
            $posLimit = jl_Long_divideUnsigned(Long_fromInt(-1), var$5);
            b: {
                while (true) {
                    var$11 = Long_mul($pos, var$5);
                    if (jl_Long_compareUnsigned(var$11, $value) > 0) {
                        var$11 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (jl_Long_compareUnsigned(var$11, $posLimit) > 0)
                        break;
                    $pos = var$11;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$12 = $target;
            else {
                var$6 = $this.$buffer.data;
                var$12 = $target + 1 | 0;
                var$6[$target] = 45;
            }
            while (true) {
                if (Long_eq(var$11, Long_ZERO))
                    break a;
                var$6 = $this.$buffer.data;
                var$7 = var$12 + 1 | 0;
                var$6[var$12] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned($value, var$11))), $radix);
                $value = jl_Long_remainderUnsigned($value, var$11);
                var$11 = jl_Long_divideUnsigned(var$11, var$5);
                var$12 = var$7;
            }
        }
    }
    return $this;
}
function jl_AbstractStringBuilder_append4($this, $value) {
    return $this.$insert4($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert3($this, $target, $value) {
    var var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $pos, $i, $intDigit, var$17;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        $this.$buffer.data[var$5] = 48;
        return $this;
    }
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if ($rt_globals.isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!$rt_globals.isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $mantissa = $mantissa / jl_AbstractStringBuilder$Constants_intPowersOfTen.data[ -$exp | 0] | 0;
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + $digits | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$5 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$5 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$5 = var$3;
        else {
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp | 0;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp < 10)
            var$17 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$17 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$17] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_append5($this, $value) {
    return $this.$insert5($this.$length0, $value);
}
function jl_AbstractStringBuilder_insert4($this, $target, $value) {
    var var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, var$14, $pos, $i, $intDigit;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 48;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        $this.$buffer.data[var$5] = 48;
        return $this;
    }
    if (!var$3) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if ($rt_globals.isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!$rt_globals.isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_doubleAnalysisResult;
    otcit_DoubleAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa0;
    $exp = $number.$exponent0;
    $negative = $number.$sign0;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 18;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros0($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $mantissa = Long_div($mantissa, jl_AbstractStringBuilder$Constants_longPowersOfTen.data[ -$exp | 0]);
            $digits = $digits - $exp | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if (!($exp > (-100) && $exp < 100))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + $digits | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$14 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$14 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = Long_create(1569325056, 23283064);
    $i = 0;
    while ($i < $digits) {
        if (Long_le($pos, Long_ZERO))
            $intDigit = 0;
        else {
            $intDigit = Long_lo(Long_div($mantissa, $pos));
            $mantissa = Long_rem($mantissa, $pos);
        }
        var$4 = $this.$buffer.data;
        var$3 = var$14 + 1 | 0;
        var$4[var$14] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$14 = var$3;
        else {
            var$4 = $this.$buffer.data;
            var$14 = var$3 + 1 | 0;
            var$4[var$3] = 46;
        }
        $pos = Long_div($pos, Long_fromInt(10));
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$3 = var$14 + 1 | 0;
        var$4[var$14] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp | 0;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp >= 100) {
            var$4 = $this.$buffer.data;
            var$3 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 100 | 0) | 0) & 65535;
            $exp = $exp % 100 | 0;
            var$4 = $this.$buffer.data;
            var$14 = var$3 + 1 | 0;
            var$4[var$3] = (48 + ($exp / 10 | 0) | 0) & 65535;
        } else if ($exp < 10)
            var$14 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$14 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$14] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
}
function jl_AbstractStringBuilder_trailingDecimalZeros($n) {
    var $result, $zeros, var$4, var$5;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    var$5 = var$4 * 100 | 0;
    if ($n % var$5 | 0)
        var$5 = var$4;
    else
        $result = $result | 2;
    if (!($n % (var$5 * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
}
function jl_AbstractStringBuilder_trailingDecimalZeros0($n) {
    var $zeros, $result, $bit, $i;
    $zeros = Long_fromInt(1);
    $result = 0;
    $bit = 16;
    jl_AbstractStringBuilder$Constants_$callClinit();
    $i = jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data.length - 1 | 0;
    while ($i >= 0) {
        if (Long_eq(Long_rem($n, Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i])), Long_ZERO)) {
            $result = $result | $bit;
            $zeros = Long_mul($zeros, jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data[$i]);
        }
        $bit = $bit >>> 1 | 0;
        $i = $i + (-1) | 0;
    }
    return $result;
}
function jl_AbstractStringBuilder_append6($this, $c) {
    return $this.$insert6($this.$length0, $c);
}
function jl_AbstractStringBuilder_insert5($this, $index, $c) {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
}
function jl_AbstractStringBuilder_insert6($this, $index, $obj) {
    return $this.$insert0($index, $obj === null ? $rt_s(48) : $obj.$toString());
}
function jl_AbstractStringBuilder_ensureCapacity($this, $capacity) {
    var $newLength;
    if ($this.$buffer.data.length >= $capacity)
        return;
    $newLength = $this.$buffer.data.length >= 1073741823 ? 2147483647 : jl_Math_max($capacity, jl_Math_max($this.$buffer.data.length * 2 | 0, 5));
    $this.$buffer = ju_Arrays_copyOf0($this.$buffer, $newLength);
}
function jl_AbstractStringBuilder_toString($this) {
    return jl_String__init_0($this.$buffer, 0, $this.$length0);
}
function jl_AbstractStringBuilder_length($this) {
    return $this.$length0;
}
function jl_AbstractStringBuilder_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$length0)
        return $this.$buffer.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append7($this, $s, $start, $end) {
    return $this.$insert7($this.$length0, $s, $start, $end);
}
function jl_AbstractStringBuilder_insert7($this, $index, $s, $i, $end) {
    var var$5, var$6;
    if ($i <= $end && $end <= $s.$length() && $i >= 0) {
        jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
        while ($i < $end) {
            var$5 = $this.$buffer.data;
            var$6 = $index + 1 | 0;
            var$5[$index] = $s.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$6;
        }
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_append8($this, $s) {
    return $this.$append4($s, 0, $s.$length());
}
function jl_AbstractStringBuilder_append9($this, $chars, $offset, $len) {
    return $this.$insert8($this.$length0, $chars, $offset, $len);
}
function jl_AbstractStringBuilder_insert8($this, $index, $chars, $offset, $len) {
    var var$5, var$6, var$7, var$8, var$9;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        var$8 = $index + 1 | 0;
        var$9 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = var$8;
        $offset = var$9;
    }
    return $this;
}
function jl_AbstractStringBuilder_append10($this, $chars) {
    return $this.$append5($chars, 0, $chars.data.length);
}
function jl_AbstractStringBuilder_subSequence($this, $start, $end) {
    return $this.$substring0($start, $end);
}
function jl_AbstractStringBuilder_getChars($this, $srcBegin, $srcEnd, $dst, $dstBegin) {
    var var$5, var$6, var$7, var$8;
    if ($srcBegin > $srcEnd)
        $rt_throw(jl_IndexOutOfBoundsException__init_0($rt_s(49)));
    while ($srcBegin < $srcEnd) {
        var$5 = $dst.data;
        var$6 = $dstBegin + 1 | 0;
        var$7 = $this.$buffer.data;
        var$8 = $srcBegin + 1 | 0;
        var$5[$dstBegin] = var$7[$srcBegin];
        $dstBegin = var$6;
        $srcBegin = var$8;
    }
}
function jl_AbstractStringBuilder_setLength($this, $newLength) {
    $this.$length0 = $newLength;
}
function jl_AbstractStringBuilder_deleteCharAt($this, $i) {
    var var$2, var$3, $i_0;
    if ($i >= 0 && $i < $this.$length0) {
        $this.$length0 = $this.$length0 - 1 | 0;
        while ($i < $this.$length0) {
            var$2 = $this.$buffer.data;
            var$3 = $this.$buffer.data;
            $i_0 = $i + 1 | 0;
            var$2[$i] = var$3[$i_0];
            $i = $i_0;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_delete($this, $start, $end) {
    var var$3, $sz, $i, var$6, var$7, var$8;
    var$3 = $rt_compare($start, $end);
    if (var$3 <= 0 && $start <= $this.$length0) {
        if (!var$3)
            return $this;
        $sz = $this.$length0 - $end | 0;
        $this.$length0 = $this.$length0 - ($end - $start | 0) | 0;
        $i = 0;
        while ($i < $sz) {
            var$6 = $this.$buffer.data;
            var$3 = $start + 1 | 0;
            var$7 = $this.$buffer.data;
            var$8 = $end + 1 | 0;
            var$6[$start] = var$7[$end];
            $i = $i + 1 | 0;
            $start = var$3;
            $end = var$8;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_AbstractStringBuilder_insertSpace($this, $start, $end) {
    var $sz, $i;
    $sz = $this.$length0 - $start | 0;
    $this.$ensureCapacity(($this.$length0 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        $this.$buffer.data[$end + $i | 0] = $this.$buffer.data[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length0 = $this.$length0 + ($end - $start | 0) | 0;
}
function jl_AbstractStringBuilder_substring($this, $from, $to) {
    if ($from <= $to && $from >= 0 && $to <= $this.$length0)
        return jl_String__init_0($this.$buffer, $from, $to - $from | 0);
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
var jl_Appendable = $rt_classWithoutFields(0);
var jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder);
function jl_StringBuffer__init_() {
    var var_0 = new jl_StringBuffer();
    jl_StringBuffer__init_0(var_0);
    return var_0;
}
function jl_StringBuffer__init_0($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuffer_append($this, $string) {
    jl_AbstractStringBuilder_append0($this, $string);
    return $this;
}
function jl_StringBuffer_append0($this, $c) {
    jl_AbstractStringBuilder_append6($this, $c);
    return $this;
}
function jl_StringBuffer_append1($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append9($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_append2($this, $chars) {
    jl_AbstractStringBuilder_append10($this, $chars);
    return $this;
}
function jl_StringBuffer_append3($this, $s, $start, $end) {
    jl_AbstractStringBuilder_append7($this, $s, $start, $end);
    return $this;
}
function jl_StringBuffer_append4($this, $s) {
    jl_AbstractStringBuilder_append8($this, $s);
    return $this;
}
function jl_StringBuffer_insert($this, $index, $s, $start, $end) {
    jl_AbstractStringBuilder_insert7($this, $index, $s, $start, $end);
    return $this;
}
function jl_StringBuffer_insert0($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert8($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuffer_insert1($this, $index, $c) {
    jl_AbstractStringBuilder_insert5($this, $index, $c);
    return $this;
}
function jl_StringBuffer_insert2($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuffer_insert3($this, var$1, var$2, var$3, var$4) {
    return $this.$insert9(var$1, var$2, var$3, var$4);
}
function jl_StringBuffer_append5($this, var$1, var$2, var$3) {
    return $this.$append10(var$1, var$2, var$3);
}
function jl_StringBuffer_insert4($this, var$1, var$2, var$3, var$4) {
    return $this.$insert10(var$1, var$2, var$3, var$4);
}
function jl_StringBuffer_append6($this, var$1, var$2, var$3) {
    return $this.$append11(var$1, var$2, var$3);
}
function jl_StringBuffer_charAt($this, var$1) {
    return jl_AbstractStringBuilder_charAt($this, var$1);
}
function jl_StringBuffer_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuffer_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuffer_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuffer_insert5($this, var$1, var$2) {
    return $this.$insert11(var$1, var$2);
}
function jl_StringBuffer_insert6($this, var$1, var$2) {
    return $this.$insert12(var$1, var$2);
}
var cbg_Screen = $rt_classWithoutFields(0);
var cbg_ScreenAdapter = $rt_classWithoutFields();
function cbg_ScreenAdapter__init_() {
    var var_0 = new cbg_ScreenAdapter();
    cbg_ScreenAdapter__init_0(var_0);
    return var_0;
}
function cbg_ScreenAdapter__init_0($this) {
    jl_Object__init_0($this);
}
function cbg_ScreenAdapter_resize($this, $width, $height) {}
function cbg_ScreenAdapter_hide($this) {}
function cbg_ScreenAdapter_pause($this) {}
function cbg_ScreenAdapter_resume($this) {}
function cgt_KumaraswamyScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist = null;
    a.$batch = null;
    a.$renderer = null;
    a.$amounts = null;
    a.$iterations = Long_ZERO;
    a.$font = null;
    a.$viewport = null;
    a.$mainGame = null;
}
function cgt_KumaraswamyScreen__init_(var_0) {
    var var_1 = new cgt_KumaraswamyScreen();
    cgt_KumaraswamyScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_KumaraswamyScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font = $this.$mainGame.$font0;
    a: {
        try {
            var$1 = new cgtrd_KumaraswamyDistribution;
            var$2 = $this.$mainGame.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_KumaraswamyDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist = cgtrd_KumaraswamyDistribution__init_0($this.$mainGame.$random0, 1.0, 1.0);
    }
    $this.$batch = $this.$mainGame.$batch0;
    $this.$viewport = cbguv_ScreenViewport__init_();
    $this.$renderer = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts, Long_ZERO);
    $this.$iterations = Long_ZERO;
}
function cgt_KumaraswamyScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts = $rt_createLongArray(512);
    $this.$iterations = Long_ZERO;
    $this.$mainGame = $main;
}
function cgt_KumaraswamyScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts, Long_ZERO);
        $this.$iterations = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts, Long_ZERO);
        $this.$iterations = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts, Long_ZERO);
        $this.$iterations = Long_ZERO;
    }
    $this.$iterations = Long_add($this.$iterations, Long_fromInt(1));
    var$3 = $this.$dist;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist.$nextDouble() * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer.$color($color);
        var$3 = $this.$renderer;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer.$color($color);
        $this.$renderer.$vertex(var$9, Long_toNumber(Long_div($this.$amounts.data[$x], $this.$iterations)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer.$color((-6.221923240859403E37));
        var$3 = $this.$renderer;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer.$color((-6.221923240859403E37));
        $this.$renderer.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer.$end();
    $this.$batch.$setProjectionMatrix($camera.$combined);
    $this.$batch.$begin0();
    var$3 = $this.$font;
    var$12 = $this.$batch;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$13[0] = jl_Double_valueOf(cgt_DistributorDemo_a);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$14 = $this.$dist;
    var$13[2] = jl_Double_valueOf(var$14.$getMean());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(50), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font.$draw($this.$batch, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font.$draw($this.$batch, $rt_s(52), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch.$end();
}
function cgt_KumaraswamyScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport.$update0($width, $height, 1);
    $this.$viewport.$apply(1);
}
var cbgssu_DragAndDrop = $rt_classWithoutFields();
var cbgssu_DragAndDrop_tmpVector = null;
function cbgssu_DragAndDrop_$callClinit() {
    cbgssu_DragAndDrop_$callClinit = $rt_eraseClinit(cbgssu_DragAndDrop);
    cbgssu_DragAndDrop__clinit_();
}
function cbgssu_DragAndDrop__clinit_() {
    cbgssu_DragAndDrop_tmpVector = cbgm_Vector2__init_();
}
function jn_Buffer() {
    var a = this; jl_Object.call(a);
    a.$capacity = 0;
    a.$position2 = 0;
    a.$limit = 0;
    a.$mark = 0;
}
function jn_Buffer__init_($this, $capacity) {
    jl_Object__init_0($this);
    $this.$mark = (-1);
    $this.$capacity = $capacity;
    $this.$limit = $capacity;
}
function jn_Buffer_capacity($this) {
    return $this.$capacity;
}
function jn_Buffer_position($this) {
    return $this.$position2;
}
function jn_Buffer_position0($this, $newPosition) {
    var var$2, var$3, var$4;
    if ($newPosition >= 0 && $newPosition <= $this.$limit) {
        $this.$position2 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$limit;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(53)), $newPosition), $rt_s(54)), var$3), 93);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
}
function jn_Buffer_limit($this) {
    return $this.$limit;
}
function jn_Buffer_limit0($this, $newLimit) {
    var var$2, var$3, var$4;
    if ($newLimit >= 0 && $newLimit <= $this.$capacity) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit = $newLimit;
        if ($this.$position2 > $this.$limit)
            $this.$position2 = $this.$limit;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$capacity;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(55)), $newLimit), $rt_s(54)), var$3), 93);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
}
function jn_Buffer_clear($this) {
    $this.$position2 = 0;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_flip($this) {
    $this.$limit = $this.$position2;
    $this.$position2 = 0;
    $this.$mark = (-1);
    return $this;
}
function jn_Buffer_remaining($this) {
    return $this.$limit - $this.$position2 | 0;
}
function jn_Buffer_hasRemaining($this) {
    return $this.$position2 >= $this.$limit ? 0 : 1;
}
var cbgggmd_ModelData = $rt_classWithoutFields();
function cgtrd_ErlangDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha0 = 0;
    a.$lambda = 0.0;
}
function cgtrd_ErlangDistribution__init_(var_0, var_1, var_2) {
    var var_3 = new cgtrd_ErlangDistribution();
    cgtrd_ErlangDistribution__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_ErlangDistribution__init_0($this, $generator, $alpha, $lambda) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $lambda, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(56)));
}
function cgtrd_ErlangDistribution_setParameters($this, $a, $b, $c) {
    if ($a >= 1.0 && $b > 0.0) {
        $this.$alpha0 = $a | 0;
        $this.$lambda = $b;
        return 1;
    }
    return 0;
}
function cgtrd_ErlangDistribution_nextDouble($this) {
    return cgtrd_ErlangDistribution_sample($this.$generator, $this.$alpha0, $this.$lambda);
}
function cgtrd_ErlangDistribution_sample($generator, $alpha, $lambda) {
    var $d, $c, $x, $v, var$8, $u, var$10;
    if (Infinity === $lambda)
        return $alpha;
    $d = $alpha - 0.3333333333333333;
    $c = 1.0 / jl_Math_sqrt(9.0 * $d);
    while (true) {
        $x = $generator.$nextGaussian0();
        $v = 1.0 + $c * $x;
        while ($v <= 0.0) {
            $x = $generator.$nextGaussian0();
            $v = 1.0 + $c * $x;
        }
        var$8 = $v * $v * $v;
        $u = $generator.$nextExclusiveDouble();
        var$10 = $x * $x;
        if ($u < 1.0 - 0.0331 * var$10 * var$10)
            return $d * var$8 / $lambda;
        if (jl_Math_log($u) < 0.5 * var$10 + $d * (1.0 - var$8 + jl_Math_log(var$8)))
            break;
    }
    return $d * var$8 / $lambda;
}
var cbgssu_Container = $rt_classWithoutFields(cbgssu_WidgetGroup);
var jur_SpecialToken = $rt_classWithoutFields();
function jur_SpecialToken__init_($this) {
    jl_Object__init_0($this);
}
function jur_AbstractCharClass() {
    var a = this; jur_SpecialToken.call(a);
    a.$alt0 = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
var jur_AbstractCharClass_charClasses = null;
function jur_AbstractCharClass_$callClinit() {
    jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
    jur_AbstractCharClass__clinit_();
}
function jur_AbstractCharClass__init_($this) {
    jur_AbstractCharClass_$callClinit();
    jur_SpecialToken__init_($this);
    $this.$lowHighSurrogates = ju_BitSet__init_(2048);
}
function jur_AbstractCharClass_getBits($this) {
    return null;
}
function jur_AbstractCharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_AbstractCharClass_hasLowHighSurrogates($this) {
    return !$this.$altSurrogates ? ($this.$lowHighSurrogates.$nextSetBit(0) >= 2048 ? 0 : 1) : $this.$lowHighSurrogates.$nextClearBit(0) >= 2048 ? 0 : 1;
}
function jur_AbstractCharClass_mayContainSupplCodepoints($this) {
    return $this.$mayContainSupplCodepoints;
}
function jur_AbstractCharClass_getInstance($this) {
    return $this;
}
function jur_AbstractCharClass_getSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithSurrogates = jur_AbstractCharClass$1__init_($this, $lHS);
        $this.$charClassWithSurrogates.$setNegative($this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
}
function jur_AbstractCharClass_getWithoutSurrogates($this) {
    var $lHS;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithoutSurrogates = jur_AbstractCharClass$2__init_($this, $lHS, $this);
        $this.$charClassWithoutSurrogates.$setNegative($this.$isNegative());
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
}
function jur_AbstractCharClass_hasUCI($this) {
    return 0;
}
function jur_AbstractCharClass_setNegative($this, $value) {
    if ($this.$alt0 ^ $value) {
        $this.$alt0 = $this.$alt0 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_AbstractCharClass_isNegative($this) {
    return $this.$alt0;
}
function jur_AbstractCharClass_intersects($cc, $ch) {
    jur_AbstractCharClass_$callClinit();
    return $cc.$contains0($ch);
}
function jur_AbstractCharClass_intersects0($cc1, $cc2) {
    jur_AbstractCharClass_$callClinit();
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null)
        return ($cc1.$getBits()).$intersects($cc2.$getBits());
    return 1;
}
function jur_AbstractCharClass_getPredefinedClass($name, $negative) {
    jur_AbstractCharClass_$callClinit();
    return (jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name)).$getValue($negative);
}
function jur_AbstractCharClass__clinit_() {
    jur_AbstractCharClass_charClasses = jur_AbstractCharClass$PredefinedCharacterClasses__init_();
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$00 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$00 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierPart($ch);
}
var cbgggpv_ParticleValue = $rt_classWithoutFields();
var cbgggpv_SpawnShapeValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
var cbgggpv_PrimitiveSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue);
var cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = null;
function cbgggpv_PrimitiveSpawnShapeValue_$callClinit() {
    cbgggpv_PrimitiveSpawnShapeValue_$callClinit = $rt_eraseClinit(cbgggpv_PrimitiveSpawnShapeValue);
    cbgggpv_PrimitiveSpawnShapeValue__clinit_();
}
function cbgggpv_PrimitiveSpawnShapeValue__clinit_() {
    cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = cbgm_Vector3__init_();
}
var jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields();
var jur_AbstractCharClass$PredefinedCharacterClasses_space = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_digit = null;
var jur_AbstractCharClass$PredefinedCharacterClasses_contents = null;
function jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit() {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_() {
    var var_0 = new jur_AbstractCharClass$PredefinedCharacterClasses();
    jur_AbstractCharClass$PredefinedCharacterClasses__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$PredefinedCharacterClasses__init_0($this) {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
    jl_Object__init_0($this);
}
function jur_AbstractCharClass$PredefinedCharacterClasses_getObject($this, $name) {
    var $i, $row, var$4;
    $i = 0;
    while (true) {
        jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
        if ($i >= jur_AbstractCharClass$PredefinedCharacterClasses_contents.data.length)
            $rt_throw(ju_MissingResourceException__init_($rt_s(45), $rt_s(45), $name));
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data[$i];
        var$4 = $row.data;
        if ($name.$equals(var$4[0]))
            break;
        $i = $i + 1 | 0;
    }
    return var$4[1];
}
function jur_AbstractCharClass$PredefinedCharacterClasses__clinit_() {
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_();
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = $rt_createArrayFromData($rt_arraycls(jl_Object), [$rt_createArrayFromData(jl_Object, [$rt_s(57), jur_AbstractCharClass$LazyLower__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(58), jur_AbstractCharClass$LazyUpper__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(59), jur_AbstractCharClass$LazyASCII__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(60), jur_AbstractCharClass$LazyAlpha__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(61), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(62), jur_AbstractCharClass$LazyAlnum__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(63), jur_AbstractCharClass$LazyPunct__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(64), jur_AbstractCharClass$LazyGraph__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(65), jur_AbstractCharClass$LazyPrint__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(66), jur_AbstractCharClass$LazyBlank__init_()]),
    $rt_createArrayFromData(jl_Object, [$rt_s(67), jur_AbstractCharClass$LazyCntrl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(68), jur_AbstractCharClass$LazyXDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(69), jur_AbstractCharClass$LazyJavaLowerCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(70), jur_AbstractCharClass$LazyJavaUpperCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(71), jur_AbstractCharClass$LazyJavaWhitespace__init_()]), $rt_createArrayFromData(jl_Object,
    [$rt_s(72), jur_AbstractCharClass$LazyJavaMirrored__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(73), jur_AbstractCharClass$LazyJavaDefined__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(74), jur_AbstractCharClass$LazyJavaDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(75), jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(76), jur_AbstractCharClass$LazyJavaISOControl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(77),
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(78), jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(79), jur_AbstractCharClass$LazyJavaLetter__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(80), jur_AbstractCharClass$LazyJavaLetterOrDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(81), jur_AbstractCharClass$LazyJavaSpaceChar__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(82),
    jur_AbstractCharClass$LazyJavaTitleCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(83), jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(84), jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(85), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(86), jur_AbstractCharClass$LazyWord__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(87),
    jur_AbstractCharClass$LazyNonWord__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(88), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(89), jur_AbstractCharClass$LazyNonSpace__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(90), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(91), jur_AbstractCharClass$LazyNonDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(92), jur_AbstractCharClass$LazyRange__init_(0,
    127)]), $rt_createArrayFromData(jl_Object, [$rt_s(93), jur_AbstractCharClass$LazyRange__init_(128, 255)]), $rt_createArrayFromData(jl_Object, [$rt_s(94), jur_AbstractCharClass$LazyRange__init_(256, 383)]), $rt_createArrayFromData(jl_Object, [$rt_s(95), jur_AbstractCharClass$LazyRange__init_(384, 591)]), $rt_createArrayFromData(jl_Object, [$rt_s(96), jur_AbstractCharClass$LazyRange__init_(592, 687)]), $rt_createArrayFromData(jl_Object, [$rt_s(97), jur_AbstractCharClass$LazyRange__init_(688, 767)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(98), jur_AbstractCharClass$LazyRange__init_(768, 879)]), $rt_createArrayFromData(jl_Object, [$rt_s(99), jur_AbstractCharClass$LazyRange__init_(880, 1023)]), $rt_createArrayFromData(jl_Object, [$rt_s(100), jur_AbstractCharClass$LazyRange__init_(1024, 1279)]), $rt_createArrayFromData(jl_Object, [$rt_s(101), jur_AbstractCharClass$LazyRange__init_(1280, 1327)]), $rt_createArrayFromData(jl_Object, [$rt_s(102), jur_AbstractCharClass$LazyRange__init_(1328, 1423)]), $rt_createArrayFromData(jl_Object, [$rt_s(103),
    jur_AbstractCharClass$LazyRange__init_(1424, 1535)]), $rt_createArrayFromData(jl_Object, [$rt_s(104), jur_AbstractCharClass$LazyRange__init_(1536, 1791)]), $rt_createArrayFromData(jl_Object, [$rt_s(105), jur_AbstractCharClass$LazyRange__init_(1792, 1871)]), $rt_createArrayFromData(jl_Object, [$rt_s(106), jur_AbstractCharClass$LazyRange__init_(1872, 1919)]), $rt_createArrayFromData(jl_Object, [$rt_s(107), jur_AbstractCharClass$LazyRange__init_(1920, 1983)]), $rt_createArrayFromData(jl_Object, [$rt_s(108),
    jur_AbstractCharClass$LazyRange__init_(2304, 2431)]), $rt_createArrayFromData(jl_Object, [$rt_s(109), jur_AbstractCharClass$LazyRange__init_(2432, 2559)]), $rt_createArrayFromData(jl_Object, [$rt_s(110), jur_AbstractCharClass$LazyRange__init_(2560, 2687)]), $rt_createArrayFromData(jl_Object, [$rt_s(111), jur_AbstractCharClass$LazyRange__init_(2688, 2815)]), $rt_createArrayFromData(jl_Object, [$rt_s(112), jur_AbstractCharClass$LazyRange__init_(2816, 2943)]), $rt_createArrayFromData(jl_Object, [$rt_s(113),
    jur_AbstractCharClass$LazyRange__init_(2944, 3071)]), $rt_createArrayFromData(jl_Object, [$rt_s(114), jur_AbstractCharClass$LazyRange__init_(3072, 3199)]), $rt_createArrayFromData(jl_Object, [$rt_s(115), jur_AbstractCharClass$LazyRange__init_(3200, 3327)]), $rt_createArrayFromData(jl_Object, [$rt_s(116), jur_AbstractCharClass$LazyRange__init_(3328, 3455)]), $rt_createArrayFromData(jl_Object, [$rt_s(117), jur_AbstractCharClass$LazyRange__init_(3456, 3583)]), $rt_createArrayFromData(jl_Object, [$rt_s(118),
    jur_AbstractCharClass$LazyRange__init_(3584, 3711)]), $rt_createArrayFromData(jl_Object, [$rt_s(119), jur_AbstractCharClass$LazyRange__init_(3712, 3839)]), $rt_createArrayFromData(jl_Object, [$rt_s(120), jur_AbstractCharClass$LazyRange__init_(3840, 4095)]), $rt_createArrayFromData(jl_Object, [$rt_s(121), jur_AbstractCharClass$LazyRange__init_(4096, 4255)]), $rt_createArrayFromData(jl_Object, [$rt_s(122), jur_AbstractCharClass$LazyRange__init_(4256, 4351)]), $rt_createArrayFromData(jl_Object, [$rt_s(123),
    jur_AbstractCharClass$LazyRange__init_(4352, 4607)]), $rt_createArrayFromData(jl_Object, [$rt_s(124), jur_AbstractCharClass$LazyRange__init_(4608, 4991)]), $rt_createArrayFromData(jl_Object, [$rt_s(125), jur_AbstractCharClass$LazyRange__init_(4992, 5023)]), $rt_createArrayFromData(jl_Object, [$rt_s(126), jur_AbstractCharClass$LazyRange__init_(5024, 5119)]), $rt_createArrayFromData(jl_Object, [$rt_s(127), jur_AbstractCharClass$LazyRange__init_(5120, 5759)]), $rt_createArrayFromData(jl_Object, [$rt_s(128),
    jur_AbstractCharClass$LazyRange__init_(5760, 5791)]), $rt_createArrayFromData(jl_Object, [$rt_s(129), jur_AbstractCharClass$LazyRange__init_(5792, 5887)]), $rt_createArrayFromData(jl_Object, [$rt_s(130), jur_AbstractCharClass$LazyRange__init_(5888, 5919)]), $rt_createArrayFromData(jl_Object, [$rt_s(131), jur_AbstractCharClass$LazyRange__init_(5920, 5951)]), $rt_createArrayFromData(jl_Object, [$rt_s(132), jur_AbstractCharClass$LazyRange__init_(5952, 5983)]), $rt_createArrayFromData(jl_Object, [$rt_s(133),
    jur_AbstractCharClass$LazyRange__init_(5984, 6015)]), $rt_createArrayFromData(jl_Object, [$rt_s(134), jur_AbstractCharClass$LazyRange__init_(6016, 6143)]), $rt_createArrayFromData(jl_Object, [$rt_s(135), jur_AbstractCharClass$LazyRange__init_(6144, 6319)]), $rt_createArrayFromData(jl_Object, [$rt_s(136), jur_AbstractCharClass$LazyRange__init_(6400, 6479)]), $rt_createArrayFromData(jl_Object, [$rt_s(137), jur_AbstractCharClass$LazyRange__init_(6480, 6527)]), $rt_createArrayFromData(jl_Object, [$rt_s(138),
    jur_AbstractCharClass$LazyRange__init_(6528, 6623)]), $rt_createArrayFromData(jl_Object, [$rt_s(139), jur_AbstractCharClass$LazyRange__init_(6624, 6655)]), $rt_createArrayFromData(jl_Object, [$rt_s(140), jur_AbstractCharClass$LazyRange__init_(6656, 6687)]), $rt_createArrayFromData(jl_Object, [$rt_s(141), jur_AbstractCharClass$LazyRange__init_(7424, 7551)]), $rt_createArrayFromData(jl_Object, [$rt_s(142), jur_AbstractCharClass$LazyRange__init_(7552, 7615)]), $rt_createArrayFromData(jl_Object, [$rt_s(143),
    jur_AbstractCharClass$LazyRange__init_(7616, 7679)]), $rt_createArrayFromData(jl_Object, [$rt_s(144), jur_AbstractCharClass$LazyRange__init_(7680, 7935)]), $rt_createArrayFromData(jl_Object, [$rt_s(145), jur_AbstractCharClass$LazyRange__init_(7936, 8191)]), $rt_createArrayFromData(jl_Object, [$rt_s(146), jur_AbstractCharClass$LazyRange__init_(8192, 8303)]), $rt_createArrayFromData(jl_Object, [$rt_s(147), jur_AbstractCharClass$LazyRange__init_(8304, 8351)]), $rt_createArrayFromData(jl_Object, [$rt_s(148),
    jur_AbstractCharClass$LazyRange__init_(8352, 8399)]), $rt_createArrayFromData(jl_Object, [$rt_s(149), jur_AbstractCharClass$LazyRange__init_(8400, 8447)]), $rt_createArrayFromData(jl_Object, [$rt_s(150), jur_AbstractCharClass$LazyRange__init_(8448, 8527)]), $rt_createArrayFromData(jl_Object, [$rt_s(151), jur_AbstractCharClass$LazyRange__init_(8528, 8591)]), $rt_createArrayFromData(jl_Object, [$rt_s(152), jur_AbstractCharClass$LazyRange__init_(8592, 8703)]), $rt_createArrayFromData(jl_Object, [$rt_s(153),
    jur_AbstractCharClass$LazyRange__init_(8704, 8959)]), $rt_createArrayFromData(jl_Object, [$rt_s(154), jur_AbstractCharClass$LazyRange__init_(8960, 9215)]), $rt_createArrayFromData(jl_Object, [$rt_s(155), jur_AbstractCharClass$LazyRange__init_(9216, 9279)]), $rt_createArrayFromData(jl_Object, [$rt_s(156), jur_AbstractCharClass$LazyRange__init_(9280, 9311)]), $rt_createArrayFromData(jl_Object, [$rt_s(157), jur_AbstractCharClass$LazyRange__init_(9312, 9471)]), $rt_createArrayFromData(jl_Object, [$rt_s(158),
    jur_AbstractCharClass$LazyRange__init_(9472, 9599)]), $rt_createArrayFromData(jl_Object, [$rt_s(159), jur_AbstractCharClass$LazyRange__init_(9600, 9631)]), $rt_createArrayFromData(jl_Object, [$rt_s(160), jur_AbstractCharClass$LazyRange__init_(9632, 9727)]), $rt_createArrayFromData(jl_Object, [$rt_s(161), jur_AbstractCharClass$LazyRange__init_(9728, 9983)]), $rt_createArrayFromData(jl_Object, [$rt_s(162), jur_AbstractCharClass$LazyRange__init_(9984, 10175)]), $rt_createArrayFromData(jl_Object, [$rt_s(163),
    jur_AbstractCharClass$LazyRange__init_(10176, 10223)]), $rt_createArrayFromData(jl_Object, [$rt_s(164), jur_AbstractCharClass$LazyRange__init_(10224, 10239)]), $rt_createArrayFromData(jl_Object, [$rt_s(165), jur_AbstractCharClass$LazyRange__init_(10240, 10495)]), $rt_createArrayFromData(jl_Object, [$rt_s(166), jur_AbstractCharClass$LazyRange__init_(10496, 10623)]), $rt_createArrayFromData(jl_Object, [$rt_s(167), jur_AbstractCharClass$LazyRange__init_(10624, 10751)]), $rt_createArrayFromData(jl_Object, [$rt_s(168),
    jur_AbstractCharClass$LazyRange__init_(10752, 11007)]), $rt_createArrayFromData(jl_Object, [$rt_s(169), jur_AbstractCharClass$LazyRange__init_(11008, 11263)]), $rt_createArrayFromData(jl_Object, [$rt_s(170), jur_AbstractCharClass$LazyRange__init_(11264, 11359)]), $rt_createArrayFromData(jl_Object, [$rt_s(171), jur_AbstractCharClass$LazyRange__init_(11392, 11519)]), $rt_createArrayFromData(jl_Object, [$rt_s(172), jur_AbstractCharClass$LazyRange__init_(11520, 11567)]), $rt_createArrayFromData(jl_Object, [$rt_s(173),
    jur_AbstractCharClass$LazyRange__init_(11568, 11647)]), $rt_createArrayFromData(jl_Object, [$rt_s(174), jur_AbstractCharClass$LazyRange__init_(11648, 11743)]), $rt_createArrayFromData(jl_Object, [$rt_s(175), jur_AbstractCharClass$LazyRange__init_(11776, 11903)]), $rt_createArrayFromData(jl_Object, [$rt_s(176), jur_AbstractCharClass$LazyRange__init_(11904, 12031)]), $rt_createArrayFromData(jl_Object, [$rt_s(177), jur_AbstractCharClass$LazyRange__init_(12032, 12255)]), $rt_createArrayFromData(jl_Object, [$rt_s(178),
    jur_AbstractCharClass$LazyRange__init_(12272, 12287)]), $rt_createArrayFromData(jl_Object, [$rt_s(179), jur_AbstractCharClass$LazyRange__init_(12288, 12351)]), $rt_createArrayFromData(jl_Object, [$rt_s(180), jur_AbstractCharClass$LazyRange__init_(12352, 12447)]), $rt_createArrayFromData(jl_Object, [$rt_s(181), jur_AbstractCharClass$LazyRange__init_(12448, 12543)]), $rt_createArrayFromData(jl_Object, [$rt_s(182), jur_AbstractCharClass$LazyRange__init_(12544, 12591)]), $rt_createArrayFromData(jl_Object, [$rt_s(183),
    jur_AbstractCharClass$LazyRange__init_(12592, 12687)]), $rt_createArrayFromData(jl_Object, [$rt_s(184), jur_AbstractCharClass$LazyRange__init_(12688, 12703)]), $rt_createArrayFromData(jl_Object, [$rt_s(185), jur_AbstractCharClass$LazyRange__init_(12704, 12735)]), $rt_createArrayFromData(jl_Object, [$rt_s(186), jur_AbstractCharClass$LazyRange__init_(12736, 12783)]), $rt_createArrayFromData(jl_Object, [$rt_s(187), jur_AbstractCharClass$LazyRange__init_(12784, 12799)]), $rt_createArrayFromData(jl_Object, [$rt_s(188),
    jur_AbstractCharClass$LazyRange__init_(12800, 13055)]), $rt_createArrayFromData(jl_Object, [$rt_s(189), jur_AbstractCharClass$LazyRange__init_(13056, 13311)]), $rt_createArrayFromData(jl_Object, [$rt_s(190), jur_AbstractCharClass$LazyRange__init_(13312, 19893)]), $rt_createArrayFromData(jl_Object, [$rt_s(191), jur_AbstractCharClass$LazyRange__init_(19904, 19967)]), $rt_createArrayFromData(jl_Object, [$rt_s(192), jur_AbstractCharClass$LazyRange__init_(19968, 40959)]), $rt_createArrayFromData(jl_Object, [$rt_s(193),
    jur_AbstractCharClass$LazyRange__init_(40960, 42127)]), $rt_createArrayFromData(jl_Object, [$rt_s(194), jur_AbstractCharClass$LazyRange__init_(42128, 42191)]), $rt_createArrayFromData(jl_Object, [$rt_s(195), jur_AbstractCharClass$LazyRange__init_(42752, 42783)]), $rt_createArrayFromData(jl_Object, [$rt_s(196), jur_AbstractCharClass$LazyRange__init_(43008, 43055)]), $rt_createArrayFromData(jl_Object, [$rt_s(197), jur_AbstractCharClass$LazyRange__init_(44032, 55203)]), $rt_createArrayFromData(jl_Object, [$rt_s(198),
    jur_AbstractCharClass$LazyRange__init_(55296, 56191)]), $rt_createArrayFromData(jl_Object, [$rt_s(199), jur_AbstractCharClass$LazyRange__init_(56192, 56319)]), $rt_createArrayFromData(jl_Object, [$rt_s(200), jur_AbstractCharClass$LazyRange__init_(56320, 57343)]), $rt_createArrayFromData(jl_Object, [$rt_s(201), jur_AbstractCharClass$LazyRange__init_(57344, 63743)]), $rt_createArrayFromData(jl_Object, [$rt_s(202), jur_AbstractCharClass$LazyRange__init_(63744, 64255)]), $rt_createArrayFromData(jl_Object, [$rt_s(203),
    jur_AbstractCharClass$LazyRange__init_(64256, 64335)]), $rt_createArrayFromData(jl_Object, [$rt_s(204), jur_AbstractCharClass$LazyRange__init_(64336, 65023)]), $rt_createArrayFromData(jl_Object, [$rt_s(205), jur_AbstractCharClass$LazyRange__init_(65024, 65039)]), $rt_createArrayFromData(jl_Object, [$rt_s(206), jur_AbstractCharClass$LazyRange__init_(65040, 65055)]), $rt_createArrayFromData(jl_Object, [$rt_s(207), jur_AbstractCharClass$LazyRange__init_(65056, 65071)]), $rt_createArrayFromData(jl_Object, [$rt_s(208),
    jur_AbstractCharClass$LazyRange__init_(65072, 65103)]), $rt_createArrayFromData(jl_Object, [$rt_s(209), jur_AbstractCharClass$LazyRange__init_(65104, 65135)]), $rt_createArrayFromData(jl_Object, [$rt_s(210), jur_AbstractCharClass$LazyRange__init_(65136, 65279)]), $rt_createArrayFromData(jl_Object, [$rt_s(211), jur_AbstractCharClass$LazyRange__init_(65280, 65519)]), $rt_createArrayFromData(jl_Object, [$rt_s(212), jur_AbstractCharClass$LazyRange__init_(0, 1114111)]), $rt_createArrayFromData(jl_Object, [$rt_s(213),
    jur_AbstractCharClass$LazySpecialsBlock__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(214), jur_AbstractCharClass$LazyCategory__init_(0, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(215), jur_AbstractCharClass$LazyCategoryScope__init_(62, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(216), jur_AbstractCharClass$LazyCategory__init_(1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(217), jur_AbstractCharClass$LazyCategory__init_(2, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(218), jur_AbstractCharClass$LazyCategory__init_(3,
    0)]), $rt_createArrayFromData(jl_Object, [$rt_s(219), jur_AbstractCharClass$LazyCategory__init_(4, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(220), jur_AbstractCharClass$LazyCategory__init_(5, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(221), jur_AbstractCharClass$LazyCategoryScope__init_(448, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(222), jur_AbstractCharClass$LazyCategory__init_(6, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(223), jur_AbstractCharClass$LazyCategory__init_(7, 0)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(224), jur_AbstractCharClass$LazyCategory__init_(8, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(225), jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(226), jur_AbstractCharClass$LazyCategory__init_(9, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(227), jur_AbstractCharClass$LazyCategory__init_(10, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(228), jur_AbstractCharClass$LazyCategory__init_(11, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(229),
    jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(230), jur_AbstractCharClass$LazyCategory__init_(12, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(231), jur_AbstractCharClass$LazyCategory__init_(13, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(232), jur_AbstractCharClass$LazyCategory__init_(14, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(233), jur_AbstractCharClass$LazyCategoryScope__init_0(983040, 1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(234),
    jur_AbstractCharClass$LazyCategory__init_(15, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(235), jur_AbstractCharClass$LazyCategory__init_(16, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(236), jur_AbstractCharClass$LazyCategory__init_(18, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(237), jur_AbstractCharClass$LazyCategory__init_1(19, 0, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(238), jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(239),
    jur_AbstractCharClass$LazyCategory__init_(20, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(240), jur_AbstractCharClass$LazyCategory__init_(21, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(241), jur_AbstractCharClass$LazyCategory__init_(22, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(242), jur_AbstractCharClass$LazyCategory__init_(23, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(243), jur_AbstractCharClass$LazyCategory__init_(24, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(244), jur_AbstractCharClass$LazyCategoryScope__init_(2113929216,
    1)]), $rt_createArrayFromData(jl_Object, [$rt_s(245), jur_AbstractCharClass$LazyCategory__init_(25, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(246), jur_AbstractCharClass$LazyCategory__init_(26, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(247), jur_AbstractCharClass$LazyCategory__init_(27, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(248), jur_AbstractCharClass$LazyCategory__init_(28, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(249), jur_AbstractCharClass$LazyCategory__init_(29, 0)]), $rt_createArrayFromData(jl_Object,
    [$rt_s(250), jur_AbstractCharClass$LazyCategory__init_(30, 0)])]);
}
var cbg_Input = $rt_classWithoutFields(0);
function cbgmc_BoundingBox() {
    var a = this; jl_Object.call(a);
    a.$min1 = null;
    a.$max0 = null;
    a.$cnt = null;
    a.$dim = null;
}
var cbgmc_BoundingBox_tmpVector = null;
function cbgmc_BoundingBox_$callClinit() {
    cbgmc_BoundingBox_$callClinit = $rt_eraseClinit(cbgmc_BoundingBox);
    cbgmc_BoundingBox__clinit_();
}
function cbgmc_BoundingBox__init_() {
    var var_0 = new cbgmc_BoundingBox();
    cbgmc_BoundingBox__init_0(var_0);
    return var_0;
}
function cbgmc_BoundingBox__init_0($this) {
    cbgmc_BoundingBox_$callClinit();
    jl_Object__init_0($this);
    $this.$min1 = cbgm_Vector3__init_();
    $this.$max0 = cbgm_Vector3__init_();
    $this.$cnt = cbgm_Vector3__init_();
    $this.$dim = cbgm_Vector3__init_();
    $this.$clr();
}
function cbgmc_BoundingBox_set($this, $minimum, $maximum) {
    var var$3, var$4, var$5, var$6, var$7;
    var$3 = $this.$min1;
    var$4 = $minimum.$x >= $maximum.$x ? $maximum.$x : $minimum.$x;
    var$5 = $minimum.$y >= $maximum.$y ? $maximum.$y : $minimum.$y;
    var$6 = $minimum.$z >= $maximum.$z ? $maximum.$z : $minimum.$z;
    var$3.$set0(var$4, var$5, var$6);
    var$3 = $this.$max0;
    var$5 = $minimum.$x <= $maximum.$x ? $maximum.$x : $minimum.$x;
    var$6 = $minimum.$y <= $maximum.$y ? $maximum.$y : $minimum.$y;
    var$7 = $minimum.$z <= $maximum.$z ? $maximum.$z : $minimum.$z;
    var$3.$set0(var$5, var$6, var$7);
    $this.$update();
    return $this;
}
function cbgmc_BoundingBox_update($this) {
    (($this.$cnt.$set1($this.$min1)).$add2($this.$max0)).$scl(0.5);
    ($this.$dim.$set1($this.$max0)).$sub($this.$min1);
}
function cbgmc_BoundingBox_clr($this) {
    return $this.$set2($this.$min1.$set0(0.0, 0.0, 0.0), $this.$max0.$set0(0.0, 0.0, 0.0));
}
function cbgmc_BoundingBox__clinit_() {
    cbgmc_BoundingBox_tmpVector = cbgm_Vector3__init_();
}
function cgtr_TupleQuasiRandom() {
    cgtr_EnhancedRandom.call(this);
    this.$state0 = Long_ZERO;
}
function cgtr_TupleQuasiRandom__init_(var_0) {
    var var_1 = new cgtr_TupleQuasiRandom();
    cgtr_TupleQuasiRandom__init_0(var_1, var_0);
    return var_1;
}
function cgtr_TupleQuasiRandom__init_0($this, $state) {
    cgtr_EnhancedRandom__init_0($this, $state);
    $this.$state0 = $state;
}
function cgtr_TupleQuasiRandom_nextLong($this) {
    var var$1;
    var$1 = Long_add($this.$state0, Long_create(2135587861, 2654435769));
    $this.$state0 = var$1;
    var$1 = Long_shru(var$1, 10);
    cgtd_MathTools_$callClinit();
    return Long_mul(var$1, cgtd_MathTools_GOLDEN_LONGS.data[Long_lo(Long_and($this.$state0, Long_fromInt(1023)))]);
}
function cgtr_TupleQuasiRandom_next($this, $bits) {
    var var$2;
    var$2 = Long_add($this.$state0, Long_create(2135587861, 2654435769));
    $this.$state0 = var$2;
    var$2 = Long_shru(var$2, 10);
    cgtd_MathTools_$callClinit();
    return Long_lo(Long_shru(Long_mul(var$2, cgtd_MathTools_GOLDEN_LONGS.data[Long_lo(Long_and($this.$state0, Long_fromInt(1023)))]), 64 - $bits | 0));
}
function cgtr_TupleQuasiRandom_nextExclusiveDouble($this) {
    var var$1, $n;
    var$1 = Long_add($this.$state0, Long_create(2135587861, 2654435769));
    $this.$state0 = var$1;
    var$1 = Long_shru(var$1, 10);
    cgtd_MathTools_$callClinit();
    $n = Long_toNumber(Long_shru(Long_mul(var$1, cgtd_MathTools_GOLDEN_LONGS.data[Long_lo(Long_and($this.$state0, Long_fromInt(1023)))]), 11)) * 1.1102230246251565E-16;
    if ($n === 0.0)
        $n = 5.551115123125783E-17;
    return $n;
}
function cgtr_TupleQuasiRandom_nextExclusiveSignedDouble($this) {
    var var$1, $bits, $n;
    var$1 = Long_add($this.$state0, Long_create(2135587861, 2654435769));
    $this.$state0 = var$1;
    var$1 = Long_shru(var$1, 10);
    cgtd_MathTools_$callClinit();
    $bits = Long_mul(var$1, cgtd_MathTools_GOLDEN_LONGS.data[Long_lo(Long_and($this.$state0, Long_fromInt(1023)))]);
    $n = Long_toNumber(Long_shru($bits, 11)) * 1.1102230246251565E-16;
    if ($n === 0.0)
        $n = 5.551115123125783E-17;
    return jl_Math_copySign($n, Long_toNumber(Long_shl($bits, 54)));
}
function cgtr_TupleQuasiRandom_nextExclusiveFloat($this) {
    var var$1, $n;
    var$1 = Long_add($this.$state0, Long_create(2135587861, 2654435769));
    $this.$state0 = var$1;
    var$1 = Long_shru(var$1, 10);
    cgtd_MathTools_$callClinit();
    $n = Long_toNumber(Long_shru(Long_mul(var$1, cgtd_MathTools_GOLDEN_LONGS.data[Long_lo(Long_and($this.$state0, Long_fromInt(1023)))]), 40)) * 5.960464477539063E-8;
    if ($n === 0.0)
        $n = 2.9802322387695312E-8;
    return $n;
}
function cgtr_TupleQuasiRandom_nextGaussian($this) {
    var var$1;
    var$1 = Long_add($this.$state0, Long_create(2135587861, 2654435769));
    $this.$state0 = var$1;
    var$1 = Long_shru(var$1, 10);
    cgtd_MathTools_$callClinit();
    return cgtr_Ziggurat_normal(Long_mul(var$1, cgtd_MathTools_GOLDEN_LONGS.data[Long_lo(Long_and($this.$state0, Long_fromInt(1023)))]));
}
var cbgggpi_DynamicsModifier = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_DynamicsModifier_TMP_V1 = null;
var cbgggpi_DynamicsModifier_TMP_V2 = null;
var cbgggpi_DynamicsModifier_TMP_V3 = null;
var cbgggpi_DynamicsModifier_TMP_Q = null;
function cbgggpi_DynamicsModifier_$callClinit() {
    cbgggpi_DynamicsModifier_$callClinit = $rt_eraseClinit(cbgggpi_DynamicsModifier);
    cbgggpi_DynamicsModifier__clinit_();
}
function cbgggpi_DynamicsModifier__clinit_() {
    cbgggpi_DynamicsModifier_TMP_V1 = cbgm_Vector3__init_();
    cbgggpi_DynamicsModifier_TMP_V2 = cbgm_Vector3__init_();
    cbgggpi_DynamicsModifier_TMP_V3 = cbgm_Vector3__init_();
    cbgggpi_DynamicsModifier_TMP_Q = cbgm_Quaternion__init_();
}
var cbgggpi_DynamicsModifier$Strength = $rt_classWithoutFields(cbgggpi_DynamicsModifier);
var cbgggpi_DynamicsModifier$Rotational2D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
var jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyDigit_computeValue($this) {
    return (jur_CharClass__init_()).$add0(48, 57);
}
var jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLetter__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetter__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetter_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetter$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgm_Intersector = $rt_classWithoutFields();
var cbgm_Intersector_v0 = null;
var cbgm_Intersector_v1 = null;
var cbgm_Intersector_v2 = null;
var cbgm_Intersector_floatArray = null;
var cbgm_Intersector_floatArray2 = null;
var cbgm_Intersector_ip = null;
var cbgm_Intersector_ep1 = null;
var cbgm_Intersector_ep2 = null;
var cbgm_Intersector_s = null;
var cbgm_Intersector_e = null;
var cbgm_Intersector_v2a = null;
var cbgm_Intersector_v2b = null;
var cbgm_Intersector_v2c = null;
var cbgm_Intersector_v2d = null;
var cbgm_Intersector_p = null;
var cbgm_Intersector_i = null;
var cbgm_Intersector_dir = null;
var cbgm_Intersector_start = null;
var cbgm_Intersector_best = null;
var cbgm_Intersector_tmp = null;
var cbgm_Intersector_tmp1 = null;
var cbgm_Intersector_tmp2 = null;
var cbgm_Intersector_tmp3 = null;
var cbgm_Intersector_intersection = null;
function cbgm_Intersector_$callClinit() {
    cbgm_Intersector_$callClinit = $rt_eraseClinit(cbgm_Intersector);
    cbgm_Intersector__clinit_();
}
function cbgm_Intersector__clinit_() {
    cbgm_Intersector_v0 = cbgm_Vector3__init_();
    cbgm_Intersector_v1 = cbgm_Vector3__init_();
    cbgm_Intersector_v2 = cbgm_Vector3__init_();
    cbgm_Intersector_floatArray = cbgu_FloatArray__init_();
    cbgm_Intersector_floatArray2 = cbgu_FloatArray__init_();
    cbgm_Intersector_ip = cbgm_Vector2__init_();
    cbgm_Intersector_ep1 = cbgm_Vector2__init_();
    cbgm_Intersector_ep2 = cbgm_Vector2__init_();
    cbgm_Intersector_s = cbgm_Vector2__init_();
    cbgm_Intersector_e = cbgm_Vector2__init_();
    cbgm_Intersector_v2a = cbgm_Vector2__init_();
    cbgm_Intersector_v2b = cbgm_Vector2__init_();
    cbgm_Intersector_v2c = cbgm_Vector2__init_();
    cbgm_Intersector_v2d = cbgm_Vector2__init_();
    cbgm_Intersector_p = cbgm_Plane__init_(cbgm_Vector3__init_(), 0.0);
    cbgm_Intersector_i = cbgm_Vector3__init_();
    cbgm_Intersector_dir = cbgm_Vector3__init_();
    cbgm_Intersector_start = cbgm_Vector3__init_();
    cbgm_Intersector_best = cbgm_Vector3__init_();
    cbgm_Intersector_tmp = cbgm_Vector3__init_();
    cbgm_Intersector_tmp1 = cbgm_Vector3__init_();
    cbgm_Intersector_tmp2 = cbgm_Vector3__init_();
    cbgm_Intersector_tmp3 = cbgm_Vector3__init_();
    cbgm_Intersector_intersection = cbgm_Vector3__init_();
}
function cgtr_LaserRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA = Long_ZERO;
    a.$stateB = Long_ZERO;
}
function cgtr_LaserRandom__init_() {
    var var_0 = new cgtr_LaserRandom();
    cgtr_LaserRandom__init_0(var_0);
    return var_0;
}
function cgtr_LaserRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$stateA = Long_xor(Long_fromNumber((jl_Math_random() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_random() - 0.5) * 1.8446744073709552E19));
    $this.$stateB = Long_or(Long_xor(Long_fromNumber((jl_Math_random() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_random() - 0.5) * 1.8446744073709552E19)), Long_fromInt(1));
}
function cgtr_LaserRandom_next($this, $bits) {
    var var$2, var$3, $z;
    var$2 = Long_add($this.$stateA, Long_create(2461385507, 3334219670));
    $this.$stateA = var$2;
    var$3 = Long_xor(var$2, Long_shru(var$2, 31));
    var$2 = Long_add($this.$stateB, Long_create(2135587862, 2654435769));
    $this.$stateB = var$2;
    $z = Long_mul(var$3, var$2);
    return Long_lo(Long_xor(Long_xor($z, Long_shru($z, 26)), Long_shru($z, 6))) >>> (32 - $bits | 0) | 0;
}
function cgtr_LaserRandom_nextLong($this) {
    var var$1, var$2, $z;
    var$1 = Long_add($this.$stateA, Long_create(2461385507, 3334219670));
    $this.$stateA = var$1;
    var$2 = Long_xor(var$1, Long_shru(var$1, 31));
    var$1 = Long_add($this.$stateB, Long_create(2135587862, 2654435769));
    $this.$stateB = var$1;
    $z = Long_mul(var$2, var$1);
    return Long_xor(Long_xor($z, Long_shru($z, 26)), Long_shru($z, 6));
}
function cgtr_LaserRandom_nextFloat($this) {
    var var$1, var$2, $z;
    var$1 = Long_add($this.$stateA, Long_create(2461385507, 3334219670));
    $this.$stateA = var$1;
    var$2 = Long_xor(var$1, Long_shru(var$1, 31));
    var$1 = Long_add($this.$stateB, Long_create(2135587862, 2654435769));
    $this.$stateB = var$1;
    $z = Long_mul(var$2, var$1);
    return Long_toNumber(Long_shru(Long_xor($z, Long_shru($z, 6)), 40)) * 5.960464477539063E-8;
}
function cgtr_LaserRandom_nextDouble($this) {
    var var$1, var$2, $z;
    var$1 = Long_add($this.$stateA, Long_create(2461385507, 3334219670));
    $this.$stateA = var$1;
    var$2 = Long_xor(var$1, Long_shru(var$1, 31));
    var$1 = Long_add($this.$stateB, Long_create(2135587862, 2654435769));
    $this.$stateB = var$1;
    $z = Long_mul(var$2, var$1);
    return Long_toNumber(Long_xor(Long_xor(Long_shru($z, 11), Long_shru($z, 37)), Long_shru($z, 17))) * 1.1102230246251565E-16;
}
function cgtr_LaserRandom_nextInclusiveDouble($this) {
    var $rand, $randLow, $randHigh;
    $rand = $this.$nextLong();
    $randLow = Long_and($rand, Long_create(4294967295, 0));
    $randHigh = Long_shru($rand, 32);
    return Long_toNumber(Long_add(Long_shru(Long_mul($randLow, Long_fromInt(2097152)), 32), Long_mul($randHigh, Long_fromInt(2097152)))) * 1.1102230246251565E-16;
}
function cgtr_LaserRandom_nextInclusiveDouble0($this, $innerBound, $outerBound) {
    return $innerBound + $this.$nextInclusiveDouble0() * ($outerBound - $innerBound);
}
function cgtr_LaserRandom_nextGaussian($this) {
    var $d, $q, $r;
    $d = $this.$nextDouble();
    if ($d === 0.0)
        return (-38.5);
    if ($d < 0.02425) {
        $q = jl_Math_sqrt((-2.0) * jl_Math_log($d));
        return ((((((-0.007784894002430293) * $q - 0.3223964580411365) * $q - 2.400758277161838) * $q - 2.549732539343734) * $q + 4.374664141464968) * $q + 2.938163982698783) / ((((0.007784695709041462 * $q + 0.3224671290700398) * $q + 2.445134137142996) * $q + 3.754408661907416) * $q + 1.0);
    }
    if (0.97575 < $d) {
        $q = jl_Math_sqrt((-2.0) * jl_Math_log(1.0 - $d));
        return  -((((((-0.007784894002430293) * $q - 0.3223964580411365) * $q - 2.400758277161838) * $q - 2.549732539343734) * $q + 4.374664141464968) * $q + 2.938163982698783) / ((((0.007784695709041462 * $q + 0.3224671290700398) * $q + 2.445134137142996) * $q + 3.754408661907416) * $q + 1.0);
    }
    $q = $d - 0.5;
    $r = $q * $q;
    return ((((((-39.69683028665376) * $r + 220.9460984245205) * $r - 275.9285104469687) * $r + 138.357751867269) * $r - 30.66479806614716) * $r + 2.506628277459239) * $q / ((((((-54.47609879822406) * $r + 161.5858368580409) * $r - 155.6989798598866) * $r + 66.80131188771972) * $r - 13.28068155288572) * $r + 1.0);
}
function cgtr_LaserRandom_nextTriangular($this, $min, $max) {
    return $this.$nextTriangular($min, $max, ($min + $max) * 0.5);
}
function cgtr_LaserRandom_nextTriangular0($this, $min, $max, $mode) {
    var $u, $d, var$6;
    $u = $this.$nextFloat();
    $d = $max - $min;
    var$6 = $mode - $min;
    if ($u <= var$6 / $d)
        return $min + jl_Math_sqrt($u * $d * var$6);
    return $max - jl_Math_sqrt((1.0 - $u) * $d * ($max - $mode));
}
var cbgm_MapObject = $rt_classWithoutFields();
var cbgmo_PolylineMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgm_Interpolation$1 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$1__init_() {
    var var_0 = new cbgm_Interpolation$1();
    cbgm_Interpolation$1__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$1__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgu_TimeUtils = $rt_classWithoutFields();
function cbgu_TimeUtils_nanoTime() {
    return jl_System_nanoTime();
}
var cbgm_Interpolation$2 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$2__init_() {
    var var_0 = new cbgm_Interpolation$2();
    cbgm_Interpolation$2__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$2__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgggpr_ParticleControllerRenderer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
var cbgggpr_BillboardRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
var cbgu_Timer$Task = $rt_classWithoutFields();
var cbgssu_TextField$1 = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgm_Interpolation$5 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$5__init_() {
    var var_0 = new cbgm_Interpolation$5();
    cbgm_Interpolation$5__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$5__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var jur_AheadFSet = $rt_classWithoutFields(jur_FSet);
function jur_AheadFSet__init_() {
    var var_0 = new jur_AheadFSet();
    jur_AheadFSet__init_0(var_0);
    return var_0;
}
function jur_AheadFSet__init_0($this) {
    jur_FSet__init_0($this, (-1));
}
function jur_AheadFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_AheadFSet_getName($this) {
    return $rt_s(251);
}
function cbgm_Interpolation$Pow() {
    cbgm_Interpolation.call(this);
    this.$power0 = 0;
}
function cbgm_Interpolation$Pow__init_(var_0) {
    var var_1 = new cbgm_Interpolation$Pow();
    cbgm_Interpolation$Pow__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$Pow__init_0($this, $power) {
    cbgm_Interpolation__init_($this);
    $this.$power0 = $power;
}
var cbgm_Interpolation$6 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$6__init_() {
    var var_0 = new cbgm_Interpolation$6();
    cbgm_Interpolation$6__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$6__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgm_Interpolation$3 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$3__init_() {
    var var_0 = new cbgm_Interpolation$3();
    cbgm_Interpolation$3__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$3__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgmo_TextureMapObject = $rt_classWithoutFields(cbgm_MapObject);
var cbgmto_TiledMapTileMapObject = $rt_classWithoutFields(cbgmo_TextureMapObject);
var cbgm_Interpolation$4 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$4__init_() {
    var var_0 = new cbgm_Interpolation$4();
    cbgm_Interpolation$4__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$4__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgm_Interpolation$9 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$9__init_() {
    var var_0 = new cbgm_Interpolation$9();
    cbgm_Interpolation$9__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$9__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgm_Interpolation$7 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$7__init_() {
    var var_0 = new cbgm_Interpolation$7();
    cbgm_Interpolation$7__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$7__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgm_Interpolation$8 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$8__init_() {
    var var_0 = new cbgm_Interpolation$8();
    cbgm_Interpolation$8__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$8__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet);
function jur_NonCapJointSet__init_(var_0, var_1) {
    var var_2 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NonCapJointSet__init_0($this, $children, $fSet) {
    jur_JointSet__init_2($this, $children, $fSet);
}
function jur_NonCapJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex0);
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $size = $this.$children.$size0();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setConsumed($this.$groupIndex0, $start);
            return (-1);
        }
        $e = $this.$children.$get3($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
}
function jur_NonCapJointSet_getName($this) {
    return $rt_s(252);
}
function jur_NonCapJointSet_hasConsumed($this, $matchResult) {
    var $cons;
    $cons = $matchResult.$getConsumed($this.$groupIndex0);
    return !$cons ? 0 : 1;
}
var jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet);
function jur_AtomicJointSet__init_(var_0, var_1) {
    var var_2 = new jur_AtomicJointSet();
    jur_AtomicJointSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AtomicJointSet__init_0($this, $children, $fSet) {
    jur_NonCapJointSet__init_0($this, $children, $fSet);
}
function jur_AtomicJointSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex0);
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $size = $this.$children.$size0();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children.$get3($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next.$matches($this.$fSet.$getIndex(), $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    $matchResult.$setConsumed($this.$groupIndex0, $start);
    return (-1);
}
function jur_AtomicJointSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_AtomicJointSet_getName($this) {
    return $rt_s(252);
}
var jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_PositiveLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookAhead();
    jur_PositiveLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children.$size0();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children.$get3($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_PositiveLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PositiveLookAhead_getName($this) {
    return $rt_s(253);
}
var jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_NegativeLookAhead__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookAhead();
    jur_NegativeLookAhead__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookAhead__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e;
    $size = $this.$children.$size0();
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children.$get3($i);
        if ($e.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookAhead_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookAhead_getName($this) {
    return $rt_s(254);
}
var cbgssu_Value = $rt_classWithoutFields();
var cbgssu_Value_zero = null;
var cbgssu_Value_minWidth = null;
var cbgssu_Value_minHeight = null;
var cbgssu_Value_prefWidth = null;
var cbgssu_Value_prefHeight = null;
var cbgssu_Value_maxWidth = null;
var cbgssu_Value_maxHeight = null;
function cbgssu_Value_$callClinit() {
    cbgssu_Value_$callClinit = $rt_eraseClinit(cbgssu_Value);
    cbgssu_Value__clinit_();
}
function cbgssu_Value__init_($this) {
    cbgssu_Value_$callClinit();
    jl_Object__init_0($this);
}
function cbgssu_Value__clinit_() {
    cbgssu_Value_zero = cbgssu_Value$Fixed__init_(0.0);
    cbgssu_Value_minWidth = cbgssu_Value$1__init_();
    cbgssu_Value_minHeight = cbgssu_Value$2__init_();
    cbgssu_Value_prefWidth = cbgssu_Value$3__init_();
    cbgssu_Value_prefHeight = cbgssu_Value$4__init_();
    cbgssu_Value_maxWidth = cbgssu_Value$5__init_();
    cbgssu_Value_maxHeight = cbgssu_Value$6__init_();
}
var cbgssu_Value$10 = $rt_classWithoutFields(cbgssu_Value);
var cbgggpi_DynamicsModifier$Angular = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
var cbgggpi_DynamicsModifier$Rotational3D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
var jl_Exception = $rt_classWithoutFields(jl_Throwable);
function jl_Exception__init_() {
    var var_0 = new jl_Exception();
    jl_Exception__init_0(var_0);
    return var_0;
}
function jl_Exception__init_1(var_0, var_1) {
    var var_2 = new jl_Exception();
    jl_Exception__init_2(var_2, var_0, var_1);
    return var_2;
}
function jl_Exception__init_3(var_0) {
    var var_1 = new jl_Exception();
    jl_Exception__init_4(var_1, var_0);
    return var_1;
}
function jl_Exception__init_0($this) {
    jl_Throwable__init_0($this);
}
function jl_Exception__init_2($this, $message, $cause) {
    jl_Throwable__init_4($this, $message, $cause);
}
function jl_Exception__init_4($this, $message) {
    jl_Throwable__init_2($this, $message);
}
var jl_RuntimeException = $rt_classWithoutFields(jl_Exception);
function jl_RuntimeException__init_0() {
    var var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_1(var_0);
    return var_0;
}
function jl_RuntimeException__init_2(var_0, var_1) {
    var var_2 = new jl_RuntimeException();
    jl_RuntimeException__init_3(var_2, var_0, var_1);
    return var_2;
}
function jl_RuntimeException__init_(var_0) {
    var var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_4(var_1, var_0);
    return var_1;
}
function jl_RuntimeException__init_1($this) {
    jl_Exception__init_0($this);
}
function jl_RuntimeException__init_3($this, $message, $cause) {
    jl_Exception__init_2($this, $message, $cause);
}
function jl_RuntimeException__init_4($this, $message) {
    jl_Exception__init_4($this, $message);
}
var jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException);
function jl_UnsupportedOperationException__init_() {
    var var_0 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_0(var_0);
    return var_0;
}
function jl_UnsupportedOperationException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException);
function jn_ReadOnlyBufferException__init_() {
    var var_0 = new jn_ReadOnlyBufferException();
    jn_ReadOnlyBufferException__init_0(var_0);
    return var_0;
}
function jn_ReadOnlyBufferException__init_0($this) {
    jl_UnsupportedOperationException__init_0($this);
}
var cgxgbt_TeaPermissions$TeaPermissionResult = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard$ClipboardWriteHandler() {
    jl_Object.call(this);
    this.$this$01 = null;
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler__init_(var_0) {
    var var_1 = new cgxgbt_TeaClipboard$ClipboardWriteHandler();
    cgxgbt_TeaClipboard$ClipboardWriteHandler__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler__init_0($this, var$1) {
    $this.$this$01 = var$1;
    jl_Object__init_0($this);
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_granted($this) {
    $this.$this$01.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr($this.$this$01.$content));
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_denied($this) {
    $this.$this$01.$hasWritePermissions = 0;
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt($this) {
    $this.$this$01.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr($this.$this$01.$content));
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0(var$0) {
    var$0.$granted();
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1(var$0) {
    var$0.$prompt();
}
function cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2(var$0) {
    var$0.$denied();
}
var cbgss_EventListener = $rt_classWithoutFields(0);
var cbgss_InputListener = $rt_classWithoutFields();
var cbgss_InputListener_tmpCoords = null;
function cbgss_InputListener_$callClinit() {
    cbgss_InputListener_$callClinit = $rt_eraseClinit(cbgss_InputListener);
    cbgss_InputListener__clinit_();
}
function cbgss_InputListener__clinit_() {
    cbgss_InputListener_tmpCoords = cbgm_Vector2__init_();
}
var cbgssu_ClickListener = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_ClickListener_visualPressedDuration = 0.0;
function cbgssu_ClickListener_$callClinit() {
    cbgssu_ClickListener_$callClinit = $rt_eraseClinit(cbgssu_ClickListener);
    cbgssu_ClickListener__clinit_();
}
function cbgssu_ClickListener__clinit_() {
    cbgssu_ClickListener_visualPressedDuration = 0.10000000149011612;
}
var cbgssu_TextField$TextFieldClickListener = $rt_classWithoutFields(cbgssu_ClickListener);
var jlr_Array = $rt_classWithoutFields();
function jlr_Array_getLength(var$1) {
    if (var$1 === null || var$1.constructor.$meta.item === undefined) {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
}
function jlr_Array_newInstance($componentType, $length) {
    if ($componentType === null)
        $rt_throw(jl_NullPointerException__init_());
    if ($componentType === $rt_cls($rt_voidcls()))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($length < 0)
        $rt_throw(jl_NegativeArraySizeException__init_());
    return jlr_Array_newInstanceImpl($componentType.$getPlatformClass(), $length);
}
function jlr_Array_newInstanceImpl(var$1, var$2) {
    if (var$1.$meta.primitive) {
        if (var$1 == $rt_bytecls()) {
            return $rt_createByteArray(var$2);
        }
        if (var$1 == $rt_shortcls()) {
            return $rt_createShortArray(var$2);
        }
        if (var$1 == $rt_charcls()) {
            return $rt_createCharArray(var$2);
        }
        if (var$1 == $rt_intcls()) {
            return $rt_createIntArray(var$2);
        }
        if (var$1 == $rt_longcls()) {
            return $rt_createLongArray(var$2);
        }
        if (var$1 == $rt_floatcls()) {
            return $rt_createFloatArray(var$2);
        }
        if (var$1 == $rt_doublecls()) {
            return $rt_createDoubleArray(var$2);
        }
        if (var$1 == $rt_booleancls()) {
            return $rt_createBooleanArray(var$2);
        }
    } else {
        return $rt_createArray(var$1, var$2)
    }
}
var cbgggpv_RangedNumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
var cbg_Files = $rt_classWithoutFields(0);
function cgxgbt_TeaFiles() {
    jl_Object.call(this);
    this.$preloader0 = null;
}
function cgxgbt_TeaFiles__init_(var_0) {
    var var_1 = new cgxgbt_TeaFiles();
    cgxgbt_TeaFiles__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaFiles__init_0($this, $preloader) {
    jl_Object__init_0($this);
    $this.$preloader0 = $preloader;
}
function cgxgbt_TeaFiles_getFileHandle($this, $path, $type) {
    return cgxgbt_TeaFileHandle__init_($this.$preloader0, $path, $type);
}
function cgxgbt_TeaFiles_internal($this, $path) {
    var var$2, var$3;
    var$2 = new cgxgbt_TeaFileHandle;
    var$3 = $this.$preloader0;
    cbg_Files$FileType_$callClinit();
    cgxgbt_TeaFileHandle__init_0(var$2, var$3, $path, cbg_Files$FileType_Internal);
    return var$2;
}
var cbgssu_Widget = $rt_classWithoutFields(cbgss_Actor);
var cbgssu_Touchpad = $rt_classWithoutFields(cbgssu_Widget);
var jl_IncompatibleClassChangeError = $rt_classWithoutFields(jl_LinkageError);
function jl_IncompatibleClassChangeError__init_(var_0) {
    var var_1 = new jl_IncompatibleClassChangeError();
    jl_IncompatibleClassChangeError__init_0(var_1, var_0);
    return var_1;
}
function jl_IncompatibleClassChangeError__init_0($this, $message) {
    jl_LinkageError__init_0($this, $message);
}
var jl_NoSuchFieldError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
function jl_NoSuchFieldError__init_(var_0) {
    var var_1 = new jl_NoSuchFieldError();
    jl_NoSuchFieldError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchFieldError__init_0($this, $message) {
    jl_IncompatibleClassChangeError__init_0($this, $message);
}
var cbgssu_TransformDrawable = $rt_classWithoutFields(0);
var jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgssu_TextArea$TextAreaListener = $rt_classWithoutFields(cbgssu_TextField$TextFieldClickListener);
var cbgssu_Window$2 = $rt_classWithoutFields(cbgss_InputListener);
var cgtd_TrigTools = $rt_classWithoutFields();
var cgtd_TrigTools_SIN_TABLE = null;
var cgtd_TrigTools_SIN_TABLE_D = null;
var cgtd_TrigTools_COS_TABLE = null;
var cgtd_TrigTools_COS_TABLE_D = null;
function cgtd_TrigTools_$callClinit() {
    cgtd_TrigTools_$callClinit = $rt_eraseClinit(cgtd_TrigTools);
    cgtd_TrigTools__clinit_();
}
function cgtd_TrigTools_sin($radians) {
    cgtd_TrigTools_$callClinit();
    return cgtd_TrigTools_COS_TABLE.data[(jl_Math_abs($radians - 1.5707963705062866) * 2607.594482421875 + 0.5 | 0) & 16383];
}
function cgtd_TrigTools_sin0($radians) {
    cgtd_TrigTools_$callClinit();
    return cgtd_TrigTools_COS_TABLE_D.data[(jl_Math_abs0($radians - 1.5707963267948966) * 2607.5945876176133 + 0.5 | 0) & 16383];
}
function cgtd_TrigTools_sinSmooth($radians) {
    var var$2, $ceil, $x2, $x3;
    cgtd_TrigTools_$callClinit();
    var$2 = $radians * 0.6366197466850281;
    $ceil = (jl_Math_ceil(var$2) | 0) & (-2);
    var$2 = var$2 - $ceil;
    $x2 = var$2 * var$2;
    $x3 = var$2 * $x2;
    return (11.0 * var$2 - 3.0 * $x3) / (7.0 + $x2) * (1 - ($ceil & 2) | 0);
}
function cgtd_TrigTools_sinSmoother($radians) {
    var var$2, $floor, $masked, $from, $to;
    cgtd_TrigTools_$callClinit();
    var$2 = jl_Math_abs($radians - 1.5707963705062866) * 2607.594482421875;
    $floor = var$2 | 0;
    $masked = $floor & 16383;
    $from = cgtd_TrigTools_COS_TABLE.data[$masked];
    $to = cgtd_TrigTools_COS_TABLE.data[$masked + 1 | 0];
    return $from + ($to - $from) * (var$2 - $floor);
}
function cgtd_TrigTools_tanSmootherTurns($turns) {
    var var$2, $floor, $masked, $fromS, var$6, var$7, $toS, $fromC, $toC;
    cgtd_TrigTools_$callClinit();
    var$2 = $turns * 16384.0;
    $floor = jl_Math_floor(var$2) | 0;
    $masked = $floor & 16383;
    var$2 = var$2 - $floor;
    $fromS = cgtd_TrigTools_SIN_TABLE_D.data[$masked];
    var$6 = cgtd_TrigTools_SIN_TABLE_D.data;
    var$7 = $masked + 1 | 0;
    $toS = var$6[var$7];
    $fromC = cgtd_TrigTools_COS_TABLE_D.data[$masked];
    $toC = cgtd_TrigTools_COS_TABLE_D.data[var$7];
    return ($fromS + ($toS - $fromS) * var$2) / ($fromC + ($toC - $fromC) * var$2);
}
function cgtd_TrigTools_atanUncheckedTurns($i) {
    var $n, $c, $c2, $c3, $c5, $c7, $c9, $c11;
    cgtd_TrigTools_$callClinit();
    $n = jl_Math_abs0($i);
    $c = ($n - 1.0) / ($n + 1.0);
    $c2 = $c * $c;
    $c3 = $c * $c2;
    $c5 = $c3 * $c2;
    $c7 = $c5 * $c2;
    $c9 = $c7 * $c2;
    $c11 = $c9 * $c2;
    return jl_Math_signum($i) * (0.125 + 0.15915132390848943 * $c - 0.052938669438878753 * $c3 + 0.030803398362108523 * $c5 - 0.01853086679887605 * $c7 + 0.008380036148199356 * $c9 - 0.0018654869189687236 * $c11);
}
function cgtd_TrigTools_atan2Turns($y, $x) {
    var $n, var$4, var$5;
    cgtd_TrigTools_$callClinit();
    $n = $y / $x;
    if ($n === $n) {
        var$4 = $n - $n;
        if (var$4 !== var$4)
            $x = 0.0;
    } else
        $n = $y !== $x ? (-1.0) : 1.0;
    var$5 = $rt_compare($x, 0.0);
    if (var$5 > 0) {
        if ($y >= 0.0)
            return cgtd_TrigTools_atanUncheckedTurns($n);
        return cgtd_TrigTools_atanUncheckedTurns($n) + 1.0;
    }
    if (var$5 < 0)
        return cgtd_TrigTools_atanUncheckedTurns($n) + 0.5;
    var$5 = $rt_compare($y, 0.0);
    if (var$5 > 0)
        return $x + 0.25;
    if (var$5 >= 0)
        return $x + $y;
    return $x + 0.75;
}
function cgtd_TrigTools__clinit_() {
    var $i, $theta, var$3, var$4, var$5;
    cgtd_TrigTools_SIN_TABLE = $rt_createFloatArray(16385);
    cgtd_TrigTools_SIN_TABLE_D = $rt_createDoubleArray(16385);
    cgtd_TrigTools_COS_TABLE = $rt_createFloatArray(16385);
    cgtd_TrigTools_COS_TABLE_D = $rt_createDoubleArray(16385);
    $i = 0;
    while ($i < 16384) {
        $theta = $i / 16384.0 * 6.283185307179586;
        var$3 = cgtd_TrigTools_SIN_TABLE.data;
        var$4 = cgtd_TrigTools_SIN_TABLE_D.data;
        var$5 = jl_Math_sin($theta);
        var$4[$i] = var$5;
        var$3[$i] = var$5;
        var$3 = cgtd_TrigTools_COS_TABLE.data;
        var$4 = cgtd_TrigTools_COS_TABLE_D.data;
        var$5 = jl_Math_cos($theta);
        var$4[$i] = var$5;
        var$3[$i] = var$5;
        $i = $i + 1 | 0;
    }
    cgtd_TrigTools_SIN_TABLE.data[0] = 0.0;
    cgtd_TrigTools_SIN_TABLE.data[16384] = 0.0;
    cgtd_TrigTools_SIN_TABLE.data[4096] = 1.0;
    cgtd_TrigTools_SIN_TABLE.data[8192] = 0.0;
    cgtd_TrigTools_SIN_TABLE.data[12288] = (-1.0);
    cgtd_TrigTools_SIN_TABLE_D.data[0] = 0.0;
    cgtd_TrigTools_SIN_TABLE_D.data[16384] = 0.0;
    cgtd_TrigTools_SIN_TABLE_D.data[4096] = 1.0;
    cgtd_TrigTools_SIN_TABLE_D.data[8192] = 0.0;
    cgtd_TrigTools_SIN_TABLE_D.data[12288] = (-1.0);
    cgtd_TrigTools_COS_TABLE.data[0] = 1.0;
    cgtd_TrigTools_COS_TABLE.data[16384] = 1.0;
    cgtd_TrigTools_COS_TABLE.data[4096] = 0.0;
    cgtd_TrigTools_COS_TABLE.data[8192] = (-1.0);
    cgtd_TrigTools_COS_TABLE.data[12288] = 0.0;
    cgtd_TrigTools_COS_TABLE_D.data[0] = 1.0;
    cgtd_TrigTools_COS_TABLE_D.data[16384] = 1.0;
    cgtd_TrigTools_COS_TABLE_D.data[4096] = 0.0;
    cgtd_TrigTools_COS_TABLE_D.data[8192] = (-1.0);
    cgtd_TrigTools_COS_TABLE_D.data[12288] = 0.0;
}
var cbgssu_Window$3 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Tree = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_Tree_tmp = null;
function cbgssu_Tree_$callClinit() {
    cbgssu_Tree_$callClinit = $rt_eraseClinit(cbgssu_Tree);
    cbgssu_Tree__clinit_();
}
function cbgssu_Tree__clinit_() {
    cbgssu_Tree_tmp = cbgm_Vector2__init_();
}
var otji_JS = $rt_classWithoutFields();
function otji_JS_wrap($array) {
    var var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new $rt_globals.Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = var$6;
        $i = $i + 1 | 0;
    }
    return $result;
}
function otji_JS_wrap0($array) {
    var var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new $rt_globals.Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = var$6;
        $i = $i + 1 | 0;
    }
    return $result;
}
function otji_JS_unwrapByteArray($array) {
    var $result, $i, var$4;
    if ($array === null)
        return null;
    $result = $rt_createByteArray($array.length);
    $i = 0;
    while (true) {
        var$4 = $result.data;
        if ($i >= var$4.length)
            break;
        var$4[$i] = otjc_JSNumber_byteValue$static($array[$i]);
        $i = $i + 1 | 0;
    }
    return $result;
}
function otji_JS_function(var$1, var$2) {
    var name = 'jso$functor$' + var$2;
    if (!var$1[name]) {
        var fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        var$1[name] = function() {
            return fn;
        };
    }
    return var$1[name]();
}
function otji_JS_functionAsObject(var$1, var$2) {
    if (typeof var$1 !== "function") return var$1;
    var result = {};
    result[var$2] = var$1;
    return result;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$02 = null;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0($this, $this$0) {
    $this.$this$02 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains($this, $ch) {
    return jl_Character_isUnicodeIdentifierStart($ch);
}
function jnc_Charset() {
    var a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
function jnc_Charset__init_($this, $canonicalName, $aliases) {
    var var$3, var$4, var$5, $alias;
    var$3 = $aliases.data;
    jl_Object__init_0($this);
    jnc_Charset_checkCanonicalName($canonicalName);
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $alias = var$3[var$5];
        jnc_Charset_checkCanonicalName($alias);
        var$5 = var$5 + 1 | 0;
    }
    $this.$canonicalName = $canonicalName;
    $this.$aliases = $aliases.$clone();
}
function jnc_Charset_checkCanonicalName($name) {
    var $i, $c;
    if ($name.$isEmpty())
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart($name.$charAt(0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$length()) {
        a: {
            $c = $name.$charAt($i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
}
function jnc_Charset_isValidCharsetStart($c) {
    var var$2;
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
}
function jnc_Charset_forName($charsetName) {
    var $charset;
    if ($charsetName === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(255)));
    jnc_Charset_checkCanonicalName($charsetName);
    jnc_Charset$Charsets_$callClinit();
    $charset = jnc_Charset$Charsets_value.$get0($charsetName.$toUpperCase());
    if ($charset !== null)
        return $charset;
    $rt_throw(jnc_UnsupportedCharsetException__init_($charsetName));
}
function jnc_Charset_name($this) {
    return $this.$canonicalName;
}
function jnc_Charset_encode($this, $cb) {
    var var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newEncoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetEncoder_encode0(var$3, $cb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_($rt_s(256), $e));
}
function jnci_UTF16Charset() {
    var a = this; jnc_Charset.call(a);
    a.$bom0 = 0;
    a.$littleEndian0 = 0;
}
function jnci_UTF16Charset__init_(var_0, var_1, var_2) {
    var var_3 = new jnci_UTF16Charset();
    jnci_UTF16Charset__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jnci_UTF16Charset__init_0($this, $canonicalName, $bom, $littleEndian) {
    jnc_Charset__init_($this, $canonicalName, $rt_createArray(jl_String, 0));
    $this.$bom0 = $bom;
    $this.$littleEndian0 = $littleEndian;
}
function jnci_UTF16Charset_newEncoder($this) {
    return jnci_UTF16Encoder__init_($this, $this.$bom0, $this.$littleEndian0);
}
var cbgssu_ProgressBar$ProgressBarStyle = $rt_classWithoutFields();
var cbgssu_Slider$SliderStyle = $rt_classWithoutFields(cbgssu_ProgressBar$ProgressBarStyle);
var cbgssu_Window$1 = $rt_classWithoutFields(cbgssu_Table);
var cbgggpi_RegionInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var otciu_UnicodeHelper = $rt_classWithoutFields();
function otciu_UnicodeHelper_decodeIntPairsDiff($text) {
    var $flow, $sz, $data, $j, $lastKey, $lastValue, $i, var$9, var$10;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    $j = 0;
    $lastKey = 0;
    $lastValue = 0;
    $i = 0;
    while ($i < $sz) {
        var$9 = $data.data;
        $lastKey = $lastKey + otci_Base46_decode($flow) | 0;
        $lastValue = $lastValue + otci_Base46_decode($flow) | 0;
        var$10 = $j + 1 | 0;
        var$9[$j] = $lastKey;
        $j = var$10 + 1 | 0;
        var$9[var$10] = $lastValue;
        $i = $i + 1 | 0;
    }
    return $data;
}
function otciu_UnicodeHelper_decodeCaseMapping($text) {
    var $flow, $sz, $data, $last, $i, var$7, var$8;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    $last = 0;
    $i = 0;
    while ($i < $sz) {
        var$7 = $data.data;
        $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
        var$8 = $i * 2 | 0;
        var$7[var$8] = $last;
        var$7[var$8 + 1 | 0] = otci_Base46_decode($flow);
        $i = $i + 1 | 0;
    }
    return $data;
}
function otciu_UnicodeHelper_decodeByte($c) {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
}
function otciu_UnicodeHelper_extractRle($encoded) {
    var $ranges, $buffer, $index, $rangeIndex, $codePoint, $i, $b, $count, $pos, $j, $digit, var$13, var$14, var$15, var$16, var$17;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    $buffer = $rt_createByteArray(16384);
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    while ($i < $encoded.$length()) {
        $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        if ($b == 64) {
            $i = $i + 1 | 0;
            $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
            $count = 0;
            $pos = 1;
            $j = 0;
            while ($j < 3) {
                $i = $i + 1 | 0;
                $digit = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
                $count = $count | $rt_imul($pos, $digit);
                $pos = $pos * 64 | 0;
                $j = $j + 1 | 0;
            }
        } else if ($b < 32)
            $count = 1;
        else {
            $b = ($b - 32 | 0) << 24 >> 24;
            $i = $i + 1 | 0;
            $count = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        }
        if (!$b && $count >= 128) {
            if ($index > 0) {
                var$13 = $ranges.data;
                var$14 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $rangeIndex = var$14;
            }
            $codePoint = $codePoint + ($index + $count | 0) | 0;
            $index = 0;
        } else {
            var$15 = $buffer.data;
            var$14 = $index + $count | 0;
            if (var$14 < var$15.length)
                var$16 = $rangeIndex;
            else {
                var$13 = $ranges.data;
                var$16 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf($buffer, $index));
                $codePoint = $codePoint + var$14 | 0;
                $index = 0;
            }
            while (true) {
                var$14 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$17 = $index + 1 | 0;
                var$15[$index] = $b;
                $index = var$17;
                $count = var$14;
            }
            $rangeIndex = var$16;
        }
        $i = $i + 1 | 0;
    }
    return ju_Arrays_copyOf1($ranges, $rangeIndex);
}
var otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorEnterWait$lambda$_6_0() {
    var a = this; jl_Object.call(a);
    a.$_0 = null;
    a.$_1 = null;
    a.$_2 = 0;
    a.$_3 = null;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jl_Object$monitorEnterWait$lambda$_6_0();
    jl_Object$monitorEnterWait$lambda$_6_0__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jl_Object$monitorEnterWait$lambda$_6_0__init_0(var$0, var$1, var$2, var$3, var$4) {
    jl_Object__init_0(var$0);
    var$0.$_0 = var$1;
    var$0.$_1 = var$2;
    var$0.$_2 = var$3;
    var$0.$_3 = var$4;
}
function jl_Object$monitorEnterWait$lambda$_6_0_run(var$0) {
    jl_Object_lambda$monitorEnterWait$0(var$0.$_0, var$0.$_1, var$0.$_2, var$0.$_3);
}
var cbgssu_Dialog$4 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_FocusListener = $rt_classWithoutFields();
var cbgssu_Dialog$3 = $rt_classWithoutFields(cbgssu_FocusListener);
var cbgssu_ChangeListener = $rt_classWithoutFields();
var cbgssu_Dialog$2 = $rt_classWithoutFields(cbgssu_ChangeListener);
var jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha);
function jur_AbstractCharClass$LazyAlnum__init_() {
    var var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyAlnum__init_0($this) {
    jur_AbstractCharClass$LazyAlpha__init_0($this);
}
function jur_AbstractCharClass$LazyAlnum_computeValue($this) {
    return (jur_AbstractCharClass$LazyAlpha_computeValue($this)).$add0(48, 57);
}
var jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum);
function jur_AbstractCharClass$LazyGraph__init_() {
    var var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyGraph__init_0($this) {
    jur_AbstractCharClass$LazyAlnum__init_0($this);
}
function jur_AbstractCharClass$LazyGraph_computeValue($this) {
    return (((jur_AbstractCharClass$LazyAlnum_computeValue($this)).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
}
var jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph);
function jur_AbstractCharClass$LazyPrint__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPrint__init_0($this) {
    jur_AbstractCharClass$LazyGraph__init_0($this);
}
function jur_AbstractCharClass$LazyPrint_computeValue($this) {
    return (jur_AbstractCharClass$LazyGraph_computeValue($this)).$add(32);
}
var jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaSpaceChar__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaSpaceChar__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaSpaceChar$1__init_($this);
}
var cbgssu_Dialog$1 = $rt_classWithoutFields(cbgss_InputListener);
var jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_PositiveLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_PositiveLookBehind();
    jur_PositiveLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_PositiveLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_PositiveLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $leftBound, $shift, $i, $e;
    $size = $this.$children.$size0();
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    a: {
        $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                $e = $this.$children.$get3($i);
                if ($e.$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    $matchResult.$setConsumed($this.$groupIndex0, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
}
function jur_PositiveLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PositiveLookBehind_getName($this) {
    return $rt_s(257);
}
var jnci_AsciiCharset = $rt_classWithoutFields(jnc_Charset);
function jnci_AsciiCharset__init_() {
    var var_0 = new jnci_AsciiCharset();
    jnci_AsciiCharset__init_0(var_0);
    return var_0;
}
function jnci_AsciiCharset__init_0($this) {
    jnc_Charset__init_($this, $rt_s(258), $rt_createArray(jl_String, 0));
}
function jnci_AsciiCharset_newEncoder($this) {
    return jnci_AsciiEncoder__init_($this);
}
function cbgu_StringBuilder() {
    var a = this; jl_Object.call(a);
    a.$chars = null;
    a.$length1 = 0;
}
var cbgu_StringBuilder_digits = null;
function cbgu_StringBuilder_$callClinit() {
    cbgu_StringBuilder_$callClinit = $rt_eraseClinit(cbgu_StringBuilder);
    cbgu_StringBuilder__clinit_();
}
function cbgu_StringBuilder__init_(var_0) {
    var var_1 = new cbgu_StringBuilder();
    cbgu_StringBuilder__init_0(var_1, var_0);
    return var_1;
}
function cbgu_StringBuilder_numChars($value, $radix) {
    var $result;
    cbgu_StringBuilder_$callClinit();
    $result = $value >= 0 ? 1 : 2;
    while (true) {
        $value = $value / $radix | 0;
        if (!$value)
            break;
        $result = $result + 1 | 0;
    }
    return $result;
}
function cbgu_StringBuilder__init_0($this, $capacity) {
    cbgu_StringBuilder_$callClinit();
    jl_Object__init_0($this);
    if ($capacity >= 0) {
        $this.$chars = $rt_createCharArray($capacity);
        return;
    }
    $rt_throw(jl_NegativeArraySizeException__init_());
}
function cbgu_StringBuilder_enlargeBuffer($this, $min) {
    var $newSize, $newData;
    $newSize = (($this.$chars.data.length >> 1) + $this.$chars.data.length | 0) + 2 | 0;
    if ($min > $newSize)
        $newSize = $min;
    $newData = $rt_createCharArray($newSize);
    jl_System_arraycopy($this.$chars, 0, $newData, 0, $this.$length1);
    $this.$chars = $newData;
}
function cbgu_StringBuilder_appendNull($this) {
    var $newSize, var$2, var$3, var$4;
    $newSize = $this.$length1 + 4 | 0;
    if ($newSize > $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$2 = $this.$chars.data;
    var$3 = $this.$length1;
    $this.$length1 = var$3 + 1 | 0;
    var$2[var$3] = 110;
    var$2 = $this.$chars.data;
    var$4 = $this.$length1;
    $this.$length1 = var$4 + 1 | 0;
    var$2[var$4] = 117;
    var$2 = $this.$chars.data;
    var$4 = $this.$length1;
    $this.$length1 = var$4 + 1 | 0;
    var$2[var$4] = 108;
    var$2 = $this.$chars.data;
    var$4 = $this.$length1;
    $this.$length1 = var$4 + 1 | 0;
    var$2[var$4] = 108;
}
function cbgu_StringBuilder_append0($this, $ch) {
    var var$2, var$3;
    if ($this.$length1 == $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $this.$length1 + 1 | 0);
    var$2 = $this.$chars.data;
    var$3 = $this.$length1;
    $this.$length1 = var$3 + 1 | 0;
    var$2[var$3] = $ch;
}
function cbgu_StringBuilder_append00($this, $string) {
    var $adding, $newSize;
    if ($string === null) {
        cbgu_StringBuilder_appendNull($this);
        return;
    }
    $adding = $string.$length();
    $newSize = $this.$length1 + $adding | 0;
    if ($newSize > $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    $string.$getChars(0, $adding, $this.$chars, $this.$length1);
    $this.$length1 = $newSize;
}
function cbgu_StringBuilder_toString($this) {
    if (!$this.$length1)
        return $rt_s(45);
    return jl_String__init_0($this.$chars, 0, $this.$length1);
}
function cbgu_StringBuilder_append($this, $c) {
    cbgu_StringBuilder_append0($this, $c);
    return $this;
}
function cbgu_StringBuilder_append1($this, $value) {
    return $this.$append12($value, 0);
}
function cbgu_StringBuilder_append2($this, $value, $minLength) {
    return $this.$append13($value, $minLength, 48);
}
function cbgu_StringBuilder_append3($this, $value, $minLength, $prefix) {
    var $j;
    if ($value == (-2147483648)) {
        cbgu_StringBuilder_append00($this, $rt_s(259));
        return $this;
    }
    if ($value < 0) {
        cbgu_StringBuilder_append0($this, 45);
        $value =  -$value | 0;
    }
    a: {
        if ($minLength > 1) {
            $j = $minLength - cbgu_StringBuilder_numChars($value, 10) | 0;
            while (true) {
                if ($j <= 0)
                    break a;
                $this.$append14($prefix);
                $j = $j + (-1) | 0;
            }
        }
    }
    if ($value >= 10000) {
        if ($value >= 1000000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[Long_lo(Long_div(Long_rem(Long_fromInt($value), Long_create(1410065408, 2)), Long_fromInt(1000000000)))]);
        }
        if ($value >= 100000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000000 | 0) / 100000000 | 0]);
        }
        if ($value >= 10000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000000 | 0) / 10000000 | 0]);
        }
        if ($value >= 1000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000000 | 0) / 1000000 | 0]);
        }
        if ($value >= 100000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000 | 0) / 100000 | 0]);
        }
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000 | 0) / 10000 | 0]);
    }
    if ($value >= 1000) {
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000 | 0) / 1000 | 0]);
    }
    if ($value >= 100) {
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000 | 0) / 100 | 0]);
    }
    if ($value >= 10) {
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100 | 0) / 10 | 0]);
    }
    cbgu_StringBuilder_$callClinit();
    cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[$value % 10 | 0]);
    return $this;
}
function cbgu_StringBuilder_append4($this, $obj) {
    if ($obj === null)
        cbgu_StringBuilder_appendNull($this);
    else
        cbgu_StringBuilder_append00($this, $obj.$toString());
    return $this;
}
function cbgu_StringBuilder_append5($this, $str) {
    cbgu_StringBuilder_append00($this, $str);
    return $this;
}
function cbgu_StringBuilder__clinit_() {
    cbgu_StringBuilder_digits = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
}
var cbgggpi_ParticleControllerFinalizerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException);
function jl_ArrayStoreException__init_() {
    var var_0 = new jl_ArrayStoreException();
    jl_ArrayStoreException__init_0(var_0);
    return var_0;
}
function jl_ArrayStoreException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var cbgm_Matrix4Emu = $rt_classWithoutFields();
var cbgm_Matrix4Emu_tmp = null;
var cbgm_Matrix4Emu_quat = null;
var cbgm_Matrix4Emu_quat2 = null;
var cbgm_Matrix4Emu_l_vez = null;
var cbgm_Matrix4Emu_l_vex = null;
var cbgm_Matrix4Emu_l_vey = null;
var cbgm_Matrix4Emu_tmpVec = null;
var cbgm_Matrix4Emu_tmpMat = null;
var cbgm_Matrix4Emu_right = null;
var cbgm_Matrix4Emu_tmpForward = null;
var cbgm_Matrix4Emu_tmpUp = null;
function cbgm_Matrix4Emu_$callClinit() {
    cbgm_Matrix4Emu_$callClinit = $rt_eraseClinit(cbgm_Matrix4Emu);
    cbgm_Matrix4Emu__clinit_();
}
function cbgm_Matrix4Emu__clinit_() {
    cbgm_Matrix4Emu_tmp = $rt_createFloatArray(16);
    cbgm_Matrix4Emu_quat = cbgm_Quaternion__init_();
    cbgm_Matrix4Emu_quat2 = cbgm_Quaternion__init_();
    cbgm_Matrix4Emu_l_vez = cbgm_Vector3__init_();
    cbgm_Matrix4Emu_l_vex = cbgm_Vector3__init_();
    cbgm_Matrix4Emu_l_vey = cbgm_Vector3__init_();
    cbgm_Matrix4Emu_tmpVec = cbgm_Vector3__init_();
    cbgm_Matrix4Emu_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4Emu_right = cbgm_Vector3__init_();
    cbgm_Matrix4Emu_tmpForward = cbgm_Vector3__init_();
    cbgm_Matrix4Emu_tmpUp = cbgm_Vector3__init_();
}
var cbgggpv_LineSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var cbgggp_ResourceData = $rt_classWithoutFields();
var jur_MatchResult = $rt_classWithoutFields(0);
function jur_MatchResultImpl() {
    var a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string0 = null;
    a.$groupCount = 0;
    a.$valid = 0;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode = 0;
}
function jur_MatchResultImpl__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jur_MatchResultImpl__init_0($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) {
    var var$7;
    jl_Object__init_0($this);
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount = var$7;
    $this.$groupBounds = $rt_createIntArray(var$7 * 2 | 0);
    $this.$consumers = $rt_createIntArray($consumersCount);
    ju_Arrays_fill0($this.$consumers, (-1));
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    ju_Arrays_fill0($this.$groupBounds, (-1));
    $this.$reset0($string, $leftBound, $rightBound);
}
function jur_MatchResultImpl_setConsumed($this, $counter, $value) {
    $this.$consumers.data[$counter] = $value;
}
function jur_MatchResultImpl_getConsumed($this, $counter) {
    return $this.$consumers.data[$counter];
}
function jur_MatchResultImpl_end($this) {
    return $this.$end0(0);
}
function jur_MatchResultImpl_end0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_setStart($this, $group, $offset) {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
}
function jur_MatchResultImpl_setEnd($this, $group, $offset) {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
}
function jur_MatchResultImpl_getStart($this, $group) {
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_getEnd($this, $group) {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
}
function jur_MatchResultImpl_group($this, $group) {
    if ($this.$start($group) < 0)
        return null;
    return ($this.$string0.$subSequence($this.$start($group), $this.$end0($group))).$toString();
}
function jur_MatchResultImpl_getGroupNoCheck($this, $group) {
    var $st, $end;
    $st = $this.$getStart($group);
    $end = $this.$getEnd($group);
    if (($end | $st | ($end - $st | 0)) >= 0 && $end <= $this.$string0.$length())
        return ($this.$string0.$subSequence($st, $end)).$toString();
    return null;
}
function jur_MatchResultImpl_start($this) {
    return $this.$start(0);
}
function jur_MatchResultImpl_start0($this, $group) {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
}
function jur_MatchResultImpl_finalizeMatch($this) {
    if ($this.$groupBounds.data[0] == (-1)) {
        $this.$groupBounds.data[0] = $this.$startIndex;
        $this.$groupBounds.data[1] = $this.$startIndex;
    }
    $this.$previousMatch = $this.$end1();
}
function jur_MatchResultImpl_getEnterCounter($this, $setCounter) {
    return $this.$compQuantCounters.data[$setCounter];
}
function jur_MatchResultImpl_setEnterCounter($this, $setCounter, $value) {
    $this.$compQuantCounters.data[$setCounter] = $value;
}
function jur_MatchResultImpl_checkGroup($this, $group) {
    if (!$this.$valid)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf($group)));
}
function jur_MatchResultImpl_setValid($this) {
    $this.$valid = 1;
}
function jur_MatchResultImpl_isValid($this) {
    return $this.$valid;
}
function jur_MatchResultImpl_reset($this, $newSequence, $leftBound, $rightBound) {
    $this.$valid = 0;
    $this.$mode = 2;
    ju_Arrays_fill0($this.$groupBounds, (-1));
    ju_Arrays_fill0($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string0 = $newSequence;
    if ($leftBound >= 0)
        jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound);
    $this.$startIndex = $this.$leftBound;
}
function jur_MatchResultImpl_reset0($this) {
    $this.$reset0(null, (-1), (-1));
}
function jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound) {
    $this.$leftBound = $leftBound;
    $this.$rightBound = $rightBound;
}
function jur_MatchResultImpl_setStartIndex($this, $startIndex) {
    $this.$startIndex = $startIndex;
    if ($this.$previousMatch >= 0)
        $startIndex = $this.$previousMatch;
    $this.$previousMatch = $startIndex;
}
function jur_MatchResultImpl_getLeftBound($this) {
    return $this.$leftBound;
}
function jur_MatchResultImpl_getRightBound($this) {
    return $this.$rightBound;
}
function jur_MatchResultImpl_setMode($this, $mode) {
    $this.$mode = $mode;
}
function jur_MatchResultImpl_mode($this) {
    return $this.$mode;
}
function jur_MatchResultImpl_useAnchoringBounds($this, $value) {
    $this.$anchoringBounds = $value;
}
function jur_MatchResultImpl_hasAnchoringBounds($this) {
    return $this.$anchoringBounds;
}
function jur_MatchResultImpl_hasTransparentBounds($this) {
    return $this.$transparentBounds;
}
function jur_MatchResultImpl_getPreviousMatchEnd($this) {
    return $this.$previousMatch;
}
var cbgssa_EventAction$1 = $rt_classWithoutFields();
var cbgssu_Button$ButtonStyle = $rt_classWithoutFields();
var cbgmo_EllipseMapObject = $rt_classWithoutFields(cbgm_MapObject);
function cbggg_BitmapFont$Glyph() {
    var a = this; jl_Object.call(a);
    a.$id = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width = 0;
    a.$height = 0;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v2 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning = null;
    a.$fixedWidth = 0;
    a.$page = 0;
}
function cbggg_BitmapFont$Glyph__init_() {
    var var_0 = new cbggg_BitmapFont$Glyph();
    cbggg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
}
function cbggg_BitmapFont$Glyph__init_0($this) {
    jl_Object__init_0($this);
    $this.$page = 0;
}
function cbggg_BitmapFont$Glyph_getKerning($this, $ch) {
    var $page;
    if ($this.$kerning !== null) {
        $page = $this.$kerning.data[$ch >>> 9 | 0];
        if ($page !== null)
            return $page.data[$ch & 511];
    }
    return 0;
}
function cbggg_BitmapFont$Glyph_setKerning($this, $ch, $value) {
    var var$3, var$4, $page;
    if ($this.$kerning === null)
        $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls()), 128);
    var$3 = $this.$kerning.data;
    var$4 = $ch >>> 9 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$kerning.data;
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
}
function cbggg_BitmapFont$Glyph_toString($this) {
    return jl_Character_toString($this.$id & 65535);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$03 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0($this, $this$0) {
    $this.$this$03 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains($this, $ch) {
    return jl_Character_isJavaIdentifierPart($ch);
}
function cbgg_GLTexture() {
    var a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter = null;
    a.$uWrap = null;
    a.$vWrap = null;
    a.$anisotropicFilterLevel = 0.0;
}
var cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
function cbgg_GLTexture_$callClinit() {
    cbgg_GLTexture_$callClinit = $rt_eraseClinit(cbgg_GLTexture);
    cbgg_GLTexture__clinit_();
}
function cbgg_GLTexture__init_($this, $glTarget, $glHandle) {
    cbgg_GLTexture_$callClinit();
    jl_Object__init_0($this);
    cbgg_Texture$TextureFilter_$callClinit();
    $this.$minFilter = cbgg_Texture$TextureFilter_Nearest;
    $this.$magFilter = cbgg_Texture$TextureFilter_Nearest;
    cbgg_Texture$TextureWrap_$callClinit();
    $this.$uWrap = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$vWrap = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$anisotropicFilterLevel = 1.0;
    $this.$glTarget = $glTarget;
    $this.$glHandle = $glHandle;
}
function cbgg_GLTexture_bind($this) {
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
}
function cbgg_GLTexture_unsafeSetWrap($this, $u, $v, $force) {
    if ($u !== null && !(!$force && $this.$uWrap === $u)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, cbgg_Texture$TextureWrap_getGLEnum($u));
        $this.$uWrap = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap === $v)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, cbgg_Texture$TextureWrap_getGLEnum($v));
        $this.$vWrap = $v;
    }
}
function cbgg_GLTexture_unsafeSetFilter($this, $minFilter, $magFilter, $force) {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, cbgg_Texture$TextureFilter_getGLEnum($minFilter));
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, cbgg_Texture$TextureFilter_getGLEnum($magFilter));
        $this.$magFilter = $magFilter;
    }
}
function cbgg_GLTexture_unsafeSetAnisotropicFilter($this, $level, $force) {
    var $max, var$4;
    $max = cbgg_GLTexture_getMaxAnisotropicFilterLevel();
    if ($max === 1.0)
        return 1.0;
    var$4 = jl_Math_min0($level, $max);
    if (!$force && cbgm_MathUtils_isEqual(var$4, $this.$anisotropicFilterLevel, 0.10000000149011612))
        return $this.$anisotropicFilterLevel;
    cbg_Gdx_gl20.$glTexParameterf(3553, 34046, var$4);
    $this.$anisotropicFilterLevel = var$4;
    return var$4;
}
function cbgg_GLTexture_getMaxAnisotropicFilterLevel() {
    var $buffer, var$2;
    cbgg_GLTexture_$callClinit();
    if (cbgg_GLTexture_maxAnisotropicFilterLevel > 0.0)
        return cbgg_GLTexture_maxAnisotropicFilterLevel;
    if (!cbg_Gdx_graphics.$supportsExtension($rt_s(260))) {
        cbgg_GLTexture_maxAnisotropicFilterLevel = 1.0;
        return 1.0;
    }
    $buffer = cbgu_BufferUtils_newFloatBuffer(16);
    $buffer.$position3(0);
    $buffer.$limit0(jn_Buffer_capacity($buffer));
    cbg_Gdx_gl20.$glGetFloatv(34047, $buffer);
    var$2 = $buffer.$get4(0);
    cbgg_GLTexture_maxAnisotropicFilterLevel = var$2;
    return var$2;
}
function cbgg_GLTexture_uploadImageData($target, $data) {
    cbgg_GLTexture_$callClinit();
    cbgg_GLTexture_uploadImageData0($target, $data, 0);
}
function cbgg_GLTexture_uploadImageData0($target, $data, $miplevel) {
    var $type, $pixmap, $disposePixmap, $tmp_0, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    cbgg_GLTexture_$callClinit();
    if ($data === null)
        return;
    if (!$data.$isPrepared())
        $data.$prepare();
    $type = $data.$getType();
    cbgg_TextureData$TextureDataType_$callClinit();
    if ($type === cbgg_TextureData$TextureDataType_Custom) {
        $data.$consumeCustomData($target);
        return;
    }
    $pixmap = $data.$consumePixmap();
    $disposePixmap = $data.$disposePixmap();
    if ($data.$getFormat() === $pixmap.$getFormat())
        $tmp_0 = $pixmap;
    else {
        $tmp_0 = cbgg_Pixmap__init_($pixmap.$getWidth(), $pixmap.$getHeight(), $data.$getFormat());
        cbgg_Pixmap$Blending_$callClinit();
        $tmp_0.$setBlending(cbgg_Pixmap$Blending_None);
        $tmp_0.$drawPixmap($pixmap, 0, 0, 0, 0, $pixmap.$getWidth(), $pixmap.$getHeight());
        if ($data.$disposePixmap())
            $pixmap.$dispose();
        $disposePixmap = 1;
    }
    cbg_Gdx_gl.$glPixelStorei(3317, 1);
    if ($data.$useMipMaps())
        cbggg_MipMapGenerator_generateMipMap($target, $tmp_0, $tmp_0.$getWidth(), $tmp_0.$getHeight());
    else {
        var$8 = cbg_Gdx_gl;
        var$9 = $tmp_0.$getGLInternalFormat();
        var$10 = $tmp_0.$getWidth();
        var$11 = $tmp_0.$getHeight();
        var$12 = $tmp_0.$getGLFormat();
        var$13 = $tmp_0.$getGLType();
        var$14 = $tmp_0.$getPixels();
        var$8.$glTexImage2D($target, $miplevel, var$9, var$10, var$11, 0, var$12, var$13, var$14);
    }
    if ($disposePixmap)
        $tmp_0.$dispose();
}
function cbgg_GLTexture__clinit_() {
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
}
function cbgg_Texture() {
    cbgg_GLTexture.call(this);
    this.$data = null;
}
var cbgg_Texture_managedTextures = null;
function cbgg_Texture_$callClinit() {
    cbgg_Texture_$callClinit = $rt_eraseClinit(cbgg_Texture);
    cbgg_Texture__clinit_();
}
function cbgg_Texture__init_(var_0, var_1) {
    var var_2 = new cbgg_Texture();
    cbgg_Texture__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Texture__init_1(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture();
    cbgg_Texture__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture__init_3(var_0) {
    var var_1 = new cbgg_Texture();
    cbgg_Texture__init_4(var_1, var_0);
    return var_1;
}
function cbgg_Texture__init_5(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture();
    cbgg_Texture__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture__init_0($this, $file, $useMipMaps) {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_2($this, $file, null, $useMipMaps);
}
function cbgg_Texture__init_2($this, $file, $format, $useMipMaps) {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_4($this, cbgg_TextureData$Factory_loadFromFile($file, $format, $useMipMaps));
}
function cbgg_Texture__init_4($this, $data) {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_6($this, 3553, cbg_Gdx_gl.$glGenTexture(), $data);
}
function cbgg_Texture__init_6($this, $glTarget, $glHandle, $data) {
    cbgg_Texture_$callClinit();
    cbgg_GLTexture__init_($this, $glTarget, $glHandle);
    $this.$load($data);
    if ($data.$isManaged())
        cbgg_Texture_addManagedTexture(cbg_Gdx_app, $this);
}
function cbgg_Texture_load($this, $data) {
    if ($this.$data !== null && $data.$isManaged() != $this.$data.$isManaged())
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(261)));
    $this.$data = $data;
    if (!$data.$isPrepared())
        $data.$prepare();
    $this.$bind();
    cbgg_GLTexture_uploadImageData(3553, $data);
    $this.$unsafeSetFilter($this.$minFilter, $this.$magFilter, 1);
    $this.$unsafeSetWrap($this.$uWrap, $this.$vWrap, 1);
    $this.$unsafeSetAnisotropicFilter($this.$anisotropicFilterLevel, 1);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
}
function cbgg_Texture_getWidth($this) {
    return $this.$data.$getWidth();
}
function cbgg_Texture_getHeight($this) {
    return $this.$data.$getHeight();
}
function cbgg_Texture_toString($this) {
    if (!($this.$data instanceof cbggg_FileTextureData))
        return jl_Object_toString($this);
    return $this.$data.$toString();
}
function cbgg_Texture_addManagedTexture($app, $texture) {
    var $managedTextureArray;
    cbgg_Texture_$callClinit();
    $managedTextureArray = cbgg_Texture_managedTextures.$get0($app);
    if ($managedTextureArray === null)
        $managedTextureArray = cbgu_Array__init_();
    $managedTextureArray.$add3($texture);
    cbgg_Texture_managedTextures.$put1($app, $managedTextureArray);
}
function cbgg_Texture__clinit_() {
    cbgg_Texture_managedTextures = ju_HashMap__init_();
}
var cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException);
function cbgu_GdxRuntimeException__init_1(var_0, var_1) {
    var var_2 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_GdxRuntimeException__init_0(var_0) {
    var var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_(var_1, var_0);
    return var_1;
}
function cbgu_GdxRuntimeException__init_2($this, $message, $cause) {
    jl_RuntimeException__init_3($this, $message, $cause);
}
function cbgu_GdxRuntimeException__init_($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
var cbgssu_SplitPane = $rt_classWithoutFields(cbgssu_WidgetGroup);
function jur_DecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar = null;
    a.$decomposedCharLength = 0;
}
function jur_DecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_DecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
}
function jur_DecomposedCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $decCodePoint, $readCodePoints, $rightBound, $curChar, var$8, $decCurCodePoint, var$10, var$11, var$12, var$13, var$14, var$15;
    $decCodePoint = $rt_createIntArray(4);
    $readCodePoints = 0;
    $rightBound = $matchResult.$getRightBound();
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = $this.$codePointAt($strIndex, $testString, $rightBound);
    var$8 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        var$10 = $decCodePoint.data;
        var$11 = 1;
        var$10[$readCodePoints] = $curChar;
    } else {
        var$11 = $decCurCodePoint.data.length;
        jl_System_arraycopy($decCurCodePoint, 0, $decCodePoint, 0, var$11);
        var$11 = $readCodePoints + var$11 | 0;
    }
    a: {
        if (var$8 < $rightBound) {
            var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
            while (var$11 < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass(var$12)) {
                    var$10 = $decCodePoint.data;
                    var$13 = var$11 + 1 | 0;
                    var$10[var$11] = var$12;
                } else {
                    var$10 = (jur_Lexer_getDecomposition(var$12)).data;
                    if (var$10.length != 2) {
                        var$14 = $decCodePoint.data;
                        var$13 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                    } else {
                        var$14 = $decCodePoint.data;
                        var$12 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                        var$13 = var$12 + 1 | 0;
                        var$14[var$12] = var$10[1];
                    }
                }
                var$8 = var$8 + $this.$readCharsForCodePoint | 0;
                if (var$8 >= $rightBound) {
                    var$11 = var$13;
                    break a;
                }
                var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
                var$11 = var$13;
            }
        }
    }
    if (var$11 != $this.$decomposedCharLength)
        return (-1);
    var$15 = 0;
    while (true) {
        if (var$15 >= var$11)
            return $this.$next.$matches(var$8, $testString, $matchResult);
        if ($decCodePoint.data[var$15] != $this.$decomposedChar.data[var$15])
            break;
        var$15 = var$15 + 1 | 0;
    }
    return (-1);
}
function jur_DecomposedCharSet_getDecomposedChar($this) {
    var $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$decomposedCharLength) {
            $strBuff.$append15(jl_Character_toChars($this.$decomposedChar.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = $strBuff.$toString();
    }
    return $this.$decomposedCharUTF16;
}
function jur_DecomposedCharSet_getName($this) {
    var var$1, var$2;
    var$1 = jur_DecomposedCharSet_getDecomposedChar($this);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(262)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound) {
    var $curChar, var$5, $low, $curCodePointUTF16;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = $testString.$charAt($strIndex);
    else {
        var$5 = $strIndex + 1 | 0;
        $curChar = $testString.$charAt($strIndex);
        $low = $testString.$charAt(var$5);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArrayFromData([$curChar, $low]);
            $curChar = jl_Character_codePointAt($curCodePointUTF16, 0);
            $this.$readCharsForCodePoint = 2;
        }
    }
    return $curChar;
}
function jur_DecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            var$2 = $set;
            if (!(jur_DecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_DecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_DecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IllegalArgumentException__init_0() {
    var var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_0);
    return var_0;
}
function jl_IllegalArgumentException__init_(var_0) {
    var var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_1(var_1, var_0);
    return var_1;
}
function jl_IllegalArgumentException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IllegalArgumentException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
function jnc_IllegalCharsetNameException__init_(var_0) {
    var var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
}
function jnc_IllegalCharsetNameException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName = $charsetName;
}
var cbgssu_Tooltip = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Tooltip_tmp = null;
function cbgssu_Tooltip_$callClinit() {
    cbgssu_Tooltip_$callClinit = $rt_eraseClinit(cbgssu_Tooltip);
    cbgssu_Tooltip__clinit_();
}
function cbgssu_Tooltip__clinit_() {
    cbgssu_Tooltip_tmp = cbgm_Vector2__init_();
}
var cbgggmd_ModelNodePart = $rt_classWithoutFields();
var jl_AutoCloseable = $rt_classWithoutFields(0);
var ji_Closeable = $rt_classWithoutFields(0);
var ji_Flushable = $rt_classWithoutFields(0);
var ji_OutputStream = $rt_classWithoutFields();
function ji_OutputStream__init_($this) {
    jl_Object__init_0($this);
}
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out0 = null;
}
function ji_FilterOutputStream__init_(var_0) {
    var var_1 = new ji_FilterOutputStream();
    ji_FilterOutputStream__init_0(var_1, var_0);
    return var_1;
}
function ji_FilterOutputStream__init_0($this, $out) {
    ji_OutputStream__init_($this);
    $this.$out0 = $out;
}
function ji_PrintStream() {
    var a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$errorState = 0;
    a.$sb = null;
    a.$buffer0 = null;
    a.$charset0 = null;
}
function ji_PrintStream__init_(var_0, var_1) {
    var var_2 = new ji_PrintStream();
    ji_PrintStream__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_PrintStream__init_0($this, $out, $autoFlush) {
    ji_FilterOutputStream__init_0($this, $out);
    $this.$sb = jl_StringBuilder__init_();
    $this.$buffer0 = $rt_createCharArray(32);
    $this.$autoFlush = $autoFlush;
    jnci_UTF8Charset_$callClinit();
    $this.$charset0 = jnci_UTF8Charset_INSTANCE;
}
function ji_PrintStream_write($this, $b, $off, $len) {
    var $$je;
    if (!ji_PrintStream_check($this))
        return;
    a: {
        try {
            $this.$out0.$write($b, $off, $len);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof ji_IOException) {
            } else {
                throw $$e;
            }
        }
        $this.$errorState = 1;
    }
}
function ji_PrintStream_check($this) {
    if ($this.$out0 === null)
        $this.$errorState = 1;
    return $this.$errorState ? 0 : 1;
}
function ji_PrintStream_print($this, $s, $begin, $end) {
    var var$4, $src, $destBytes, $dest, var$8, var$9, $encoder, $overflow;
    var$4 = $s.data;
    $src = jn_CharBuffer_wrap($s, $begin, $end - $begin | 0);
    $destBytes = $rt_createByteArray(jl_Math_max(16, jl_Math_min(var$4.length, 1024)));
    $dest = jn_ByteBuffer_wrap($destBytes);
    var$8 = $this.$charset0.$newEncoder();
    jnc_CodingErrorAction_$callClinit();
    var$9 = jnc_CodingErrorAction_REPLACE;
    var$8 = jnc_CharsetEncoder_onMalformedInput(var$8, var$9);
    var$9 = jnc_CodingErrorAction_REPLACE;
    $encoder = jnc_CharsetEncoder_onUnmappableCharacter(var$8, var$9);
    while (true) {
        $overflow = (jnc_CharsetEncoder_encode($encoder, $src, $dest, 1)).$isOverflow();
        $this.$write($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
    while (true) {
        $overflow = (jnc_CharsetEncoder_flush($encoder, $dest)).$isOverflow();
        $this.$write($destBytes, 0, jn_Buffer_position($dest));
        jn_ByteBuffer_clear($dest);
        if (!$overflow)
            break;
    }
}
function ji_PrintStream_print0($this, $c) {
    $this.$buffer0.data[0] = $c;
    ji_PrintStream_print($this, $this.$buffer0, 0, 1);
}
function ji_PrintStream_print1($this, $s) {
    $this.$sb.$append1($s);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println($this, $s) {
    ($this.$sb.$append1($s)).$append0(10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println0($this, $s) {
    ($this.$sb.$append($s)).$append0(10);
    ji_PrintStream_printSB($this);
}
function ji_PrintStream_println1($this) {
    $this.$print1(10);
}
function ji_PrintStream_printSB($this) {
    var $buffer;
    $buffer = $this.$sb.$length() <= $this.$buffer0.data.length ? $this.$buffer0 : $rt_createCharArray($this.$sb.$length());
    $this.$sb.$getChars(0, $this.$sb.$length(), $buffer, 0);
    ji_PrintStream_print($this, $buffer, 0, $this.$sb.$length());
    $this.$sb.$setLength(0);
}
var jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
function jur_NegativeLookBehind__init_(var_0, var_1) {
    var var_2 = new jur_NegativeLookBehind();
    jur_NegativeLookBehind__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_NegativeLookBehind__init_0($this, $children, $fSet) {
    jur_AtomicJointSet__init_0($this, $children, $fSet);
}
function jur_NegativeLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
    var $size, $i, $e, $shift;
    $size = $this.$children.$size0();
    $matchResult.$setConsumed($this.$groupIndex0, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children.$get3($i);
        $shift = $e.$findBack(0, $stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_NegativeLookBehind_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_NegativeLookBehind_getName($this) {
    return $rt_s(263);
}
var jn_IntBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_IntBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position2 = $position;
    $this.$limit = $limit;
}
function jn_IntBuffer_wrap($array, $offset, $length) {
    return jn_IntBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_IntBuffer_wrap0($array) {
    return jn_IntBuffer_wrap($array, 0, $array.data.length);
}
function jn_IntBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_IntBuffer_clear0($this) {
    return jn_IntBuffer_clear($this);
}
var jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer);
function jn_IntBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_IntBuffer__init_($this, $capacity, $position, $limit);
}
function jn_IntBufferImpl_get($this) {
    var var$1;
    if ($this.$position2 >= $this.$limit)
        $rt_throw(jn_BufferUnderflowException__init_());
    var$1 = $this.$position2;
    $this.$position2 = var$1 + 1 | 0;
    return $this.$getElement(var$1);
}
function jn_IntBufferImpl_put($this, $b) {
    var var$2;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($this.$position2 >= $this.$limit)
        $rt_throw(jn_BufferOverflowException__init_());
    var$2 = $this.$position2;
    $this.$position2 = var$2 + 1 | 0;
    $this.$putElement(var$2, $b);
    return $this;
}
function jn_IntBufferImpl_get0($this, $index) {
    var var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(264)), $index), $rt_s(54)), var$3), 41);
    jl_IndexOutOfBoundsException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
}
function jn_IntBufferImpl_put0($this, $index, $b) {
    var var$3, var$4, var$5;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit) {
        $this.$putElement($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(264)), $index), $rt_s(54)), var$4), 41);
    jl_IndexOutOfBoundsException__init_1(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
}
function jn_IntBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_IntBufferOverByteBuffer() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$byteByffer = null;
    a.$readOnly0 = 0;
    a.$start0 = 0;
}
function jn_IntBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start0 = $start;
    $this.$byteByffer = $byteBuffer;
    $this.$readOnly0 = $readOnly;
}
function jn_IntBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly0;
}
var jn_IntBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
function jn_IntBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBufferLittleEndian();
    jn_IntBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_IntBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer.$array0.data;
    var$3 = $this.$start0;
    var$4 = $index * 4 | 0;
    return var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer.$array0.data[($this.$start0 + var$4 | 0) + 1 | 0] & 255) << 8 | ($this.$byteByffer.$array0.data[($this.$start0 + var$4 | 0) + 2 | 0] & 255) << 16 | ($this.$byteByffer.$array0.data[($this.$start0 + var$4 | 0) + 3 | 0] & 255) << 24;
}
function jn_IntBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer.$array0.data;
    var$4 = $this.$start0;
    var$5 = $index * 4 | 0;
    var$3[var$4 + var$5 | 0] = $value << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start0 + var$5 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start0 + var$5 | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start0 + var$5 | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
}
function cgxgbtp_Preloader$1() {
    jl_Object.call(this);
    this.$this$04 = null;
}
function cgxgbtp_Preloader$1__init_(var_0) {
    var var_1 = new cgxgbtp_Preloader$1();
    cgxgbtp_Preloader$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbtp_Preloader$1__init_0($this, $this$0) {
    $this.$this$04 = $this$0;
    jl_Object__init_0($this);
}
function cgxgbtp_Preloader$1_handleEvent($this, $evt) {
    $evt.preventDefault();
}
function cgxgbtp_Preloader$1_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
function cgxgbtp_Preloader$2() {
    jl_Object.call(this);
    this.$this$05 = null;
}
function cgxgbtp_Preloader$2__init_(var_0) {
    var var_1 = new cgxgbtp_Preloader$2();
    cgxgbtp_Preloader$2__init_0(var_1, var_0);
    return var_1;
}
function cgxgbtp_Preloader$2__init_0($this, $this$0) {
    $this.$this$05 = $this$0;
    jl_Object__init_0($this);
}
function cgxgbtp_Preloader$2_handleEvent($this, $evt) {
    $evt.preventDefault();
}
function cgxgbtp_Preloader$2_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function cgxgbtp_Preloader$3() {
    var a = this; jl_Object.call(a);
    a.$val$teaApplication = null;
    a.$val$config = null;
    a.$this$06 = null;
}
function cgxgbtp_Preloader$3__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbtp_Preloader$3();
    cgxgbtp_Preloader$3__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbtp_Preloader$3__init_0($this, $this$0, var$2, var$3) {
    $this.$this$06 = $this$0;
    $this.$val$teaApplication = var$2;
    $this.$val$config = var$3;
    jl_Object__init_0($this);
}
function cgxgbtp_Preloader$3_handleEvent($this, $event) {
    var $dataTransfer, $files, $length, $droppedFiles, $i, $itemWrapper, $name, $type, $fileReader, var$11;
    a: {
        $event.preventDefault();
        $dataTransfer = $event.dataTransfer;
        $files = $dataTransfer.files;
        $length = $files.length;
        if ($length > 0) {
            $droppedFiles = cbgu_Array__init_();
            $i = 0;
            while (true) {
                if ($i >= $length)
                    break a;
                $itemWrapper = $files[$i];
                $name = $rt_str($itemWrapper.name);
                $type = cgxgbtp_AssetFilter_getType($name);
                $fileReader = new $rt_globals.FileReader();
                var$11 = cgxgbtp_Preloader$3$1__init_($this, $type, $name, $droppedFiles, $length);
                $fileReader.addEventListener("load", otji_JS_function(var$11, "handleEvent"));
                cgxgbtp_AssetType_$callClinit();
                if ($type !== cgxgbtp_AssetType_Binary && $type !== cgxgbtp_AssetType_Audio) {
                    if ($type === cgxgbtp_AssetType_Image)
                        $fileReader.readAsDataURL($itemWrapper);
                    else if ($type === cgxgbtp_AssetType_Text)
                        $fileReader.readAsText($itemWrapper);
                } else
                    $fileReader.readAsArrayBuffer($itemWrapper);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cgxgbtp_Preloader$3_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var cgxgbt_AssetLoaderListener = $rt_classWithoutFields();
function cgxgbt_AssetLoaderListener__init_() {
    var var_0 = new cgxgbt_AssetLoaderListener();
    cgxgbt_AssetLoaderListener__init_0(var_0);
    return var_0;
}
function cgxgbt_AssetLoaderListener__init_0($this) {
    jl_Object__init_0($this);
}
function cgxgbt_AssetLoaderListener_onProgress($this, $amount) {}
function cgxgbt_AssetLoaderListener_onFailure($this, $url) {}
function cgxgbtp_Preloader$4() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$assetFileUrl = null;
    a.$val$loadAssets = 0;
    a.$this$07 = null;
}
function cgxgbtp_Preloader$4__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbtp_Preloader$4();
    cgxgbtp_Preloader$4__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbtp_Preloader$4__init_0($this, $this$0, var$2, var$3) {
    $this.$this$07 = $this$0;
    $this.$val$assetFileUrl = var$2;
    $this.$val$loadAssets = var$3;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbtp_Preloader$4_onProgress($this, $amount) {}
function cgxgbtp_Preloader$4_onFailure($this, $url) {
    var var$2, var$3, var$4;
    var$2 = jl_System_out();
    var$3 = $this.$val$assetFileUrl;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(265)), var$3);
    var$2.$println1(jl_StringBuilder_toString(var$4));
}
function cgxgbtp_Preloader$4_onSuccess($this, $url, $result) {
    var $lines, var$4, var$5, var$6, $i, $asset, $line, $tokens, var$11, $type, $size;
    $lines = $result.$split($rt_s(266));
    var$4 = $lines.data;
    var$5 = var$4.length;
    var$6 = 0;
    while (true) {
        if (var$6 >= var$5) {
            a: {
                $this.$this$07.$assetTotal = $this.$this$07.$assets.$size;
                if ($this.$val$loadAssets) {
                    $i = 0;
                    while (true) {
                        if ($i >= $this.$this$07.$assets.$size)
                            break a;
                        $asset = $this.$this$07.$assets.$get3($i);
                        $this.$this$07.$loadSingleAsset($asset);
                        $i = $i + 1 | 0;
                    }
                }
            }
            return 0;
        }
        $line = var$4[var$6];
        $tokens = $line.$split($rt_s(267));
        var$11 = $tokens.data;
        if (var$11.length != 4)
            break;
        cgxgbtp_AssetType_$callClinit();
        $type = cgxgbtp_AssetType_Text;
        if (var$11[0].$equals($rt_s(268)))
            $type = cgxgbtp_AssetType_Image;
        if (var$11[0].$equals($rt_s(269)))
            $type = cgxgbtp_AssetType_Binary;
        if (var$11[0].$equals($rt_s(270)))
            $type = cgxgbtp_AssetType_Audio;
        if (var$11[0].$equals($rt_s(90)))
            $type = cgxgbtp_AssetType_Directory;
        $size = jl_Long_parseLong(var$11[2]);
        if ($type === cgxgbtp_AssetType_Audio && !(cgxgbtp_AssetDownloader_getInstance()).$isUseBrowserCache())
            $size = Long_ZERO;
        $this.$this$07.$assets.$add3(cgxgbtp_Preloader$Asset__init_(var$11[1].$trim(), $type, $size, var$11[3]));
        var$6 = var$6 + 1 | 0;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(271)));
}
function cgxgbtp_Preloader$4_onSuccess0($this, var$1, var$2) {
    return $this.$onSuccess0(var$1, var$2);
}
function cgt_DigitalSinSmoothScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$random1 = null;
    a.$batch1 = null;
    a.$renderer0 = null;
    a.$amounts0 = null;
    a.$iterations0 = Long_ZERO;
    a.$font1 = null;
    a.$viewport0 = null;
    a.$mainGame0 = null;
}
function cgt_DigitalSinSmoothScreen__init_(var_0) {
    var var_1 = new cgt_DigitalSinSmoothScreen();
    cgt_DigitalSinSmoothScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_DigitalSinSmoothScreen_show($this) {
    $this.$font1 = $this.$mainGame0.$font0;
    $this.$random1 = $this.$mainGame0.$random0;
    $this.$batch1 = $this.$mainGame0.$batch0;
    $this.$viewport0 = cbguv_ScreenViewport__init_();
    $this.$renderer0 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts0, Long_ZERO);
    $this.$iterations0 = Long_ZERO;
}
function cgt_DigitalSinSmoothScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts0 = $rt_createLongArray(512);
    $this.$iterations0 = Long_ZERO;
    $this.$mainGame0 = $main;
}
function cgt_DigitalSinSmoothScreen_render($this, $delta) {
    var $camera, $i, $m, var$5, $x, $color, var$8, var$9, $j, var$11, var$12, var$13;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame0.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame0.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport0.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        ju_Arrays_fill($this.$amounts0, Long_ZERO);
        $this.$iterations0 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        ju_Arrays_fill($this.$amounts0, Long_ZERO);
        $this.$iterations0 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        ju_Arrays_fill($this.$amounts0, Long_ZERO);
        $this.$iterations0 = Long_ZERO;
    }
    $this.$iterations0 = Long_add($this.$iterations0, Long_fromInt(1));
    $i = 0;
    while ($i < 262144) {
        $m = cgtd_TrigTools_sinSmooth($this.$random1.$nextExclusiveFloat()) * 128.0 + 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$5 = $this.$amounts0.data;
            var$5[$m] = Long_add(var$5[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer0.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer0.$color($color);
        var$8 = $this.$renderer0;
        var$9 = $x;
        var$8.$vertex(var$9, 0.0, 0.0);
        $this.$renderer0.$color($color);
        $this.$renderer0.$vertex(var$9, 0.125 * Long_toNumber($this.$amounts0.data[$x]) / Long_toNumber($this.$iterations0), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer0.$color((-6.221923240859403E37));
        var$8 = $this.$renderer0;
        var$11 = $j;
        var$8.$vertex(0.0, var$11, 0.0);
        $this.$renderer0.$color((-6.221923240859403E37));
        $this.$renderer0.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer0.$end();
    $this.$batch1.$setProjectionMatrix($camera.$combined);
    $this.$batch1.$begin0();
    var$12 = $this.$font1;
    var$13 = $this.$batch1;
    var$5 = $rt_createArray(jl_Object, 1);
    var$5.data[0] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$12.$draw(var$13, cgt_Stringf_format($rt_s(272), var$5), 64.0, 522.0, 384.0, 1, 1);
    $this.$batch1.$end();
}
function cgt_DigitalSinSmoothScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport0.$update0($width, $height, 1);
    $this.$viewport0.$apply(1);
}
function cgxgbtp_Preloader$5() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$asset = null;
    a.$this$08 = null;
}
function cgxgbtp_Preloader$5__init_(var_0, var_1) {
    var var_2 = new cgxgbtp_Preloader$5();
    cgxgbtp_Preloader$5__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtp_Preloader$5__init_0($this, $this$0, var$2) {
    $this.$this$08 = $this$0;
    $this.$val$asset = var$2;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbtp_Preloader$5_onProgress($this, $amount) {
    $this.$val$asset.$loaded = Long_fromNumber($amount);
}
function cgxgbtp_Preloader$5_onFailure($this, $url) {
    $this.$val$asset.$failed = 1;
    $this.$val$asset.$isLoading = 0;
}
function cgxgbtp_Preloader$5_onSuccess($this, $url, $result) {
    $this.$val$asset.$succeed = 1;
    $this.$val$asset.$isLoading = 0;
    return 0;
}
function cbgg_Color() {
    var a = this; jl_Object.call(a);
    a.$r = 0.0;
    a.$g = 0.0;
    a.$b = 0.0;
    a.$a = 0.0;
}
var cbgg_Color_WHITE = null;
var cbgg_Color_LIGHT_GRAY = null;
var cbgg_Color_GRAY = null;
var cbgg_Color_DARK_GRAY = null;
var cbgg_Color_BLACK = null;
var cbgg_Color_WHITE_FLOAT_BITS = 0.0;
var cbgg_Color_CLEAR = null;
var cbgg_Color_BLUE = null;
var cbgg_Color_NAVY = null;
var cbgg_Color_ROYAL = null;
var cbgg_Color_SLATE = null;
var cbgg_Color_SKY = null;
var cbgg_Color_CYAN = null;
var cbgg_Color_TEAL = null;
var cbgg_Color_GREEN = null;
var cbgg_Color_CHARTREUSE = null;
var cbgg_Color_LIME = null;
var cbgg_Color_FOREST = null;
var cbgg_Color_OLIVE = null;
var cbgg_Color_YELLOW = null;
var cbgg_Color_GOLD = null;
var cbgg_Color_GOLDENROD = null;
var cbgg_Color_ORANGE = null;
var cbgg_Color_BROWN = null;
var cbgg_Color_TAN = null;
var cbgg_Color_FIREBRICK = null;
var cbgg_Color_RED = null;
var cbgg_Color_SCARLET = null;
var cbgg_Color_CORAL = null;
var cbgg_Color_SALMON = null;
var cbgg_Color_PINK = null;
var cbgg_Color_MAGENTA = null;
var cbgg_Color_PURPLE = null;
var cbgg_Color_VIOLET = null;
var cbgg_Color_MAROON = null;
function cbgg_Color_$callClinit() {
    cbgg_Color_$callClinit = $rt_eraseClinit(cbgg_Color);
    cbgg_Color__clinit_();
}
function cbgg_Color__init_0() {
    var var_0 = new cbgg_Color();
    cbgg_Color__init_1(var_0);
    return var_0;
}
function cbgg_Color__init_2(var_0) {
    var var_1 = new cbgg_Color();
    cbgg_Color__init_3(var_1, var_0);
    return var_1;
}
function cbgg_Color__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgg_Color();
    cbgg_Color__init_4(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgg_Color__init_1($this) {
    cbgg_Color_$callClinit();
    jl_Object__init_0($this);
}
function cbgg_Color__init_3($this, $rgba8888) {
    cbgg_Color_$callClinit();
    jl_Object__init_0($this);
    cbgg_Color_rgba8888ToColor($this, $rgba8888);
}
function cbgg_Color__init_4($this, $r, $g, $b, $a) {
    cbgg_Color_$callClinit();
    jl_Object__init_0($this);
    $this.$r = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    $this.$clamp();
}
function cbgg_Color_set($this, $color) {
    $this.$r = $color.$r;
    $this.$g = $color.$g;
    $this.$b = $color.$b;
    $this.$a = $color.$a;
    return $this;
}
function cbgg_Color_clamp($this) {
    if ($this.$r < 0.0)
        $this.$r = 0.0;
    else if ($this.$r > 1.0)
        $this.$r = 1.0;
    if ($this.$g < 0.0)
        $this.$g = 0.0;
    else if ($this.$g > 1.0)
        $this.$g = 1.0;
    if ($this.$b < 0.0)
        $this.$b = 0.0;
    else if ($this.$b > 1.0)
        $this.$b = 1.0;
    if ($this.$a < 0.0)
        $this.$a = 0.0;
    else if ($this.$a > 1.0)
        $this.$a = 1.0;
    return $this;
}
function cbgg_Color_equals($this, $o) {
    var $color;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $color = $o;
        return $this.$toIntBits() != $color.$toIntBits() ? 0 : 1;
    }
    return 0;
}
function cbgg_Color_hashCode($this) {
    var $result, var$2;
    $result = $this.$r === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$r);
    var$2 = (31 * $result | 0) + ($this.$g === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$g)) | 0;
    var$2 = (31 * var$2 | 0) + ($this.$b === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$b)) | 0;
    var$2 = (31 * var$2 | 0) + ($this.$a === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$a)) | 0;
    return var$2;
}
function cbgg_Color_toFloatBits($this) {
    var $color;
    $color = (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
    return cbgu_NumberUtils_intToFloatColor($color);
}
function cbgg_Color_toIntBits($this) {
    return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
}
function cbgg_Color_toString($this) {
    var var$1, $value;
    var$1 = (255.0 * $this.$r | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0;
    $value = jl_Integer_toHexString(var$1);
    while ($value.$length() < 8) {
        $value = (((jl_StringBuilder__init_()).$append1($rt_s(273))).$append1($value)).$toString();
    }
    return $value;
}
function cbgg_Color_rgba8888ToColor($color, $value) {
    cbgg_Color_$callClinit();
    $color.$r = (($value & (-16777216)) >>> 24 | 0) / 255.0;
    $color.$g = (($value & 16711680) >>> 16 | 0) / 255.0;
    $color.$b = (($value & 65280) >>> 8 | 0) / 255.0;
    $color.$a = ($value & 255) / 255.0;
}
function cbgg_Color__clinit_() {
    cbgg_Color_WHITE = cbgg_Color__init_(1.0, 1.0, 1.0, 1.0);
    cbgg_Color_LIGHT_GRAY = cbgg_Color__init_2((-1077952513));
    cbgg_Color_GRAY = cbgg_Color__init_2(2139062271);
    cbgg_Color_DARK_GRAY = cbgg_Color__init_2(1061109759);
    cbgg_Color_BLACK = cbgg_Color__init_(0.0, 0.0, 0.0, 1.0);
    cbgg_Color_WHITE_FLOAT_BITS = cbgg_Color_WHITE.$toFloatBits();
    cbgg_Color_CLEAR = cbgg_Color__init_(0.0, 0.0, 0.0, 0.0);
    cbgg_Color_BLUE = cbgg_Color__init_(0.0, 0.0, 1.0, 1.0);
    cbgg_Color_NAVY = cbgg_Color__init_(0.0, 0.0, 0.5, 1.0);
    cbgg_Color_ROYAL = cbgg_Color__init_2(1097458175);
    cbgg_Color_SLATE = cbgg_Color__init_2(1887473919);
    cbgg_Color_SKY = cbgg_Color__init_2((-2016482305));
    cbgg_Color_CYAN = cbgg_Color__init_(0.0, 1.0, 1.0, 1.0);
    cbgg_Color_TEAL = cbgg_Color__init_(0.0, 0.5, 0.5, 1.0);
    cbgg_Color_GREEN = cbgg_Color__init_2(16711935);
    cbgg_Color_CHARTREUSE = cbgg_Color__init_2(2147418367);
    cbgg_Color_LIME = cbgg_Color__init_2(852308735);
    cbgg_Color_FOREST = cbgg_Color__init_2(579543807);
    cbgg_Color_OLIVE = cbgg_Color__init_2(1804477439);
    cbgg_Color_YELLOW = cbgg_Color__init_2((-65281));
    cbgg_Color_GOLD = cbgg_Color__init_2((-2686721));
    cbgg_Color_GOLDENROD = cbgg_Color__init_2((-626712321));
    cbgg_Color_ORANGE = cbgg_Color__init_2((-5963521));
    cbgg_Color_BROWN = cbgg_Color__init_2((-1958407169));
    cbgg_Color_TAN = cbgg_Color__init_2((-759919361));
    cbgg_Color_FIREBRICK = cbgg_Color__init_2((-1306385665));
    cbgg_Color_RED = cbgg_Color__init_2((-16776961));
    cbgg_Color_SCARLET = cbgg_Color__init_2((-13361921));
    cbgg_Color_CORAL = cbgg_Color__init_2((-8433409));
    cbgg_Color_SALMON = cbgg_Color__init_2((-92245249));
    cbgg_Color_PINK = cbgg_Color__init_2((-9849601));
    cbgg_Color_MAGENTA = cbgg_Color__init_(1.0, 0.0, 1.0, 1.0);
    cbgg_Color_PURPLE = cbgg_Color__init_2((-1608453889));
    cbgg_Color_VIOLET = cbgg_Color__init_2((-293409025));
    cbgg_Color_MAROON = cbgg_Color__init_2((-1339006721));
}
function cgxgbtp_Preloader$7() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$listener0 = null;
    a.$val$type = null;
    a.$val$url0 = null;
    a.$this$09 = null;
}
function cgxgbtp_Preloader$7__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbtp_Preloader$7();
    cgxgbtp_Preloader$7__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbtp_Preloader$7__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$09 = $this$0;
    $this.$val$listener0 = var$2;
    $this.$val$type = var$3;
    $this.$val$url0 = var$4;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbtp_Preloader$7_onProgress($this, $amount) {
    $this.$val$listener0.$onProgress($amount);
}
function cgxgbtp_Preloader$7_onFailure($this, $urll) {
    $this.$val$listener0.$onFailure($urll);
}
function cgxgbtp_Preloader$7_onSuccess($this, $urll, $result) {
    $this.$this$09.$putAssetInMap($this.$val$type, $this.$val$url0, $result);
    $this.$val$listener0.$onSuccess($urll, $result);
    return 0;
}
var cbgggpr_ParticleControllerRenderData = $rt_classWithoutFields();
var cbgggpr_PointSpriteControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
function cbgg_VertexAttribute() {
    var a = this; jl_Object.call(a);
    a.$usage = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type1 = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
    a.$usageIndex = 0;
}
function cbgg_VertexAttribute__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_VertexAttribute__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgg_VertexAttribute__init_3(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_4(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function cbgg_VertexAttribute__init_0($this, $usage, $numComponents, $alias) {
    cbgg_VertexAttribute__init_2($this, $usage, $numComponents, $alias, 0);
}
function cbgg_VertexAttribute__init_2($this, $usage, $numComponents, $alias, $unit) {
    var var$5;
    var$5 = $rt_compare($usage, 4);
    cbgg_VertexAttribute__init_4($this, $usage, $numComponents, var$5 ? 5126 : 5121, var$5 ? 0 : 1, $alias, $unit);
}
function cbgg_VertexAttribute__init_4($this, $usage, $numComponents, $type, $normalized, $alias, $unit) {
    jl_Object__init_0($this);
    $this.$usage = $usage;
    $this.$numComponents = $numComponents;
    $this.$type1 = $type;
    $this.$normalized = $normalized;
    $this.$alias = $alias;
    $this.$unit = $unit;
    $this.$usageIndex = jl_Integer_numberOfTrailingZeros($usage);
}
function cbgg_VertexAttribute_equals($this, $obj) {
    if (!($obj instanceof cbgg_VertexAttribute))
        return 0;
    return cbgg_VertexAttribute_equals0($this, $obj);
}
function cbgg_VertexAttribute_equals0($this, $other) {
    var var$2, var$3, var$4;
    a: {
        if ($other !== null && $this.$usage == $other.$usage && $this.$numComponents == $other.$numComponents && $this.$type1 == $other.$type1 && $this.$normalized == $other.$normalized) {
            var$2 = $this.$alias;
            var$3 = $other.$alias;
            if (var$2.$equals(var$3) && $this.$unit == $other.$unit) {
                var$4 = 1;
                break a;
            }
        }
        var$4 = 0;
    }
    return var$4;
}
function cbgg_VertexAttribute_getKey($this) {
    return ($this.$usageIndex << 8) + ($this.$unit & 255) | 0;
}
function cbgg_VertexAttribute_getSizeInBytes($this) {
    a: {
        switch ($this.$type1) {
            case 5120:
            case 5121:
                break;
            case 5122:
            case 5123:
                return 2 * $this.$numComponents | 0;
            case 5124:
            case 5125:
            case 5127:
            case 5128:
            case 5129:
            case 5130:
            case 5131:
                break a;
            case 5126:
            case 5132:
                return 4 * $this.$numComponents | 0;
            default:
                break a;
        }
        return $this.$numComponents;
    }
    return 0;
}
function cbgg_VertexAttribute_hashCode($this) {
    var $result, var$2;
    $result = cbgg_VertexAttribute_getKey($this);
    var$2 = (541 * $result | 0) + $this.$numComponents | 0;
    var$2 = (541 * var$2 | 0) + $this.$alias.$hashCode0() | 0;
    return var$2;
}
var cbgssu_DragListener = $rt_classWithoutFields(cbgss_InputListener);
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
function jur_LeafQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
}
function jur_LeafQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
}
function jur_LeafQuantifierSet_getName($this) {
    return $rt_s(274);
}
var jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_UnifiedQuantifierSet__init_(var_0) {
    var var_1 = new jur_UnifiedQuantifierSet();
    jur_UnifiedQuantifierSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UnifiedQuantifierSet__init_0($this, $quant) {
    jur_LeafQuantifierSet__init_0($this, $quant.$getInnerSet(), $quant.$getNext(), $quant.$getType1());
    $this.$innerSet.$setNext($this);
}
function jur_UnifiedQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf;
        if (var$4.$accepts($stringIndex, $testString) <= 0)
            break;
        $stringIndex = $stringIndex + $this.$leaf.$charCount0() | 0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_UnifiedQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next.$find($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount0() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount0() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
}
var jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    var a = this; jl_Object.call(a);
    a.$name2 = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
}
var jl_Class_reflectionInitialized = 0;
function jl_Class__init_(var_0) {
    var var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
}
function jl_Class__init_0($this, $platformClass) {
    var var$2;
    jl_Object__init_0($this);
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
}
function jl_Class_getClass($cls) {
    var $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null)
        $result = jl_Class__init_($cls);
    return $result;
}
function jl_Class_toString($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$isInterface() ? $rt_s(275) : !$this.$isPrimitive() ? $rt_s(276) : $rt_s(45);
    var$2 = $this.$getName();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, var$1), var$2);
    return jl_StringBuilder_toString(var$3);
}
function jl_Class_getPlatformClass($this) {
    return $this.$platformClass;
}
function jl_Class_isInstance($this, $obj) {
    return otp_Platform_isInstance($obj, $this.$platformClass);
}
function jl_Class_getName($this) {
    if ($this.$name2 === null)
        $this.$name2 = otp_Platform_getName($this.$platformClass);
    return $this.$name2;
}
function jl_Class_isPrimitive($this) {
    return otp_Platform_isPrimitive($this.$platformClass);
}
function jl_Class_isArray($this) {
    return otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1;
}
function jl_Class_isInterface($this) {
    return !($this.$platformClass.$meta.flags & 2) ? 0 : 1;
}
function jl_Class_getComponentType($this) {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
}
function jl_Class_initReflection() {
    if (!jl_Class_reflectionInitialized) {
        jl_Class_reflectionInitialized = 1;
        jl_Class_createMetadata();
    }
}
function jl_Class_createMetadata() {
    cbgssu_Table$DebugRect.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgssu_Table$DebugRect__init_(obj );
                return null;
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbgssu_Table$DebugRect_$callClinit();
                cbgssu_Table$DebugRect__clinit_();
                return null;
            }
        }];
    cbggg_GlyphLayout$GlyphRun.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun__init_(obj );
                return null;
            }
        }, {
            name : "appendRun",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun_appendRun(obj , args[0]);
                return null;
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout$GlyphRun_toString(obj );
            }
        }];
    cbggg_GlyphLayout.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_(obj );
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_0(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_1(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_2(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText0(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText1(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "calculateWidths",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_calculateWidths(obj , args[0]);
                return null;
            }
        }, {
            name : "alignRuns",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_floatcls(), $rt_intcls()],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_alignRuns(obj , jl_Float_floatValue(args[0]), jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "truncate",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_floatcls(), jl_String],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_truncate(obj , args[0], args[1], jl_Float_floatValue(args[2]), args[3]);
                return null;
            }
        }, {
            name : "wrap",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_intcls()],
            returnType : cbggg_GlyphLayout$GlyphRun,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_wrap(obj , args[0], args[1], jl_Integer_intValue(args[2]));
            }
        }, {
            name : "setLastGlyphXAdvance",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_setLastGlyphXAdvance(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "getGlyphWidth",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$Glyph, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls(),
            callable : function(obj, args) {
                return cbggg_GlyphLayout_getGlyphWidth(obj , args[0], args[1]);
            }
        }, {
            name : "getLineOffset",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbgu_Array, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls(),
            callable : function(obj, args) {
                return cbggg_GlyphLayout_getLineOffset(obj , args[0], args[1]);
            }
        }, {
            name : "parseColorMarkup",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_CharSequence, $rt_intcls(), $rt_intcls()],
            returnType : $rt_intcls(),
            callable : function(obj, args) {
                return cbggg_GlyphLayout_parseColorMarkup(obj , args[0], jl_Integer_intValue(args[1]), jl_Integer_intValue(args[2]));
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_toString(obj );
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls(),
            callable : function(obj, args) {
                cbggg_GlyphLayout_$callClinit();
                cbggg_GlyphLayout__clinit_();
                return null;
            }
        }];
}
function jl_Class_getDeclaredConstructors($this) {
    var var$1, $jsMethods, $count, $i, var$5, $jsParameterTypes, $parameterTypes, $j, var$9, var$10, var$11, var$12;
    if (!$this.$isPrimitive() && !$this.$isArray()) {
        if ($this.$declaredConstructors === null) {
            jl_Class_initReflection();
            var$1 = ($this.$getPlatformClass()).$meta;
            $jsMethods = var$1.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                var$5 = $jsMethods[$i];
                if ($rt_str(var$5.name).$equals($rt_s(277))) {
                    $jsParameterTypes = var$5.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    $j = 0;
                    while (true) {
                        var$9 = $parameterTypes.data;
                        if ($j >= var$9.length)
                            break;
                        var$9[$j] = jl_Class_getClass($jsParameterTypes[$j]);
                        $j = $j + 1 | 0;
                    }
                    var$9 = $this.$declaredConstructors.data;
                    var$10 = $count + 1 | 0;
                    var$11 = new jlr_Constructor;
                    var$1 = $rt_str(var$5.name);
                    var$12 = var$5.modifiers;
                    jlr_Constructor__init_0(var$11, $this, var$1, var$12, var$5.accessLevel, $parameterTypes, otji_JS_functionAsObject(var$5.callable, "call"));
                    var$9[$count] = var$11;
                    $count = var$10;
                }
                $i = $i + 1 | 0;
            }
            $this.$declaredConstructors = ju_Arrays_copyOf1($this.$declaredConstructors, $count);
        }
        return $this.$declaredConstructors.$clone();
    }
    return $rt_createArray(jlr_Constructor, 0);
}
function jl_Class_getConstructors($this) {
    var $declaredConstructors, var$2, var$3, $constructors, $sz, var$6, $constructor, var$8, var$9;
    $declaredConstructors = $this.$getDeclaredConstructors();
    var$2 = $declaredConstructors.data;
    var$3 = var$2.length;
    $constructors = $rt_createArray(jlr_Constructor, var$3);
    $sz = 0;
    var$6 = 0;
    while (var$6 < var$3) {
        $constructor = var$2[var$6];
        if (jlr_Modifier_isPublic($constructor.$getModifiers0())) {
            var$8 = $constructors.data;
            var$9 = $sz + 1 | 0;
            var$8[$sz] = $constructor;
            $sz = var$9;
        }
        var$6 = var$6 + 1 | 0;
    }
    if ($sz < $constructors.data.length)
        $constructors = ju_Arrays_copyOf1($constructors, $sz);
    return $constructors;
}
function jl_Class_getDeclaredConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor;
    var$2 = ($this.$getDeclaredConstructors()).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3)
            $rt_throw(jl_NoSuchMethodException__init_());
        $constructor = var$2[var$4];
        if (ju_Arrays_equals($constructor.$getParameterTypes(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
function jl_Class_getConstructor($this, $parameterTypes) {
    var var$2, var$3, var$4, $constructor;
    var$2 = ($this.$getDeclaredConstructors()).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3)
            $rt_throw(jl_NoSuchMethodException__init_());
        $constructor = var$2[var$4];
        if (jlr_Modifier_isPublic($constructor.$getModifiers0()) && ju_Arrays_equals($constructor.$getParameterTypes(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
}
var otjt_ArrayBufferView = $rt_classWithoutFields();
var otjt_Int16Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var jl_Cloneable = $rt_classWithoutFields(0);
function ju_BitSet() {
    var a = this; jl_Object.call(a);
    a.$data0 = null;
    a.$length2 = 0;
}
function ju_BitSet__init_0() {
    var var_0 = new ju_BitSet();
    ju_BitSet__init_1(var_0);
    return var_0;
}
function ju_BitSet__init_(var_0) {
    var var_1 = new ju_BitSet();
    ju_BitSet__init_2(var_1, var_0);
    return var_1;
}
function ju_BitSet__init_1($this) {
    jl_Object__init_0($this);
    $this.$data0 = $rt_createIntArray(0);
}
function ju_BitSet__init_2($this, $nbits) {
    jl_Object__init_0($this);
    $this.$data0 = $rt_createIntArray((($nbits + 32 | 0) - 1 | 0) / 32 | 0);
}
function ju_BitSet_set($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length2) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length2 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data0.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
}
function ju_BitSet_set0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    var$3 = $rt_compare($fromIndex, $toIndex);
    if (var$3 > 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if (!var$3)
        return;
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = $toIndex / 32 | 0;
    if ($toIndex > $this.$length2) {
        ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
        $this.$length2 = $toIndex;
    }
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data0.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
    } else {
        var$6 = $this.$data0.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data0.data[$i] = (-1);
            $i = $i + 1 | 0;
        }
        if ($toIndex & 31) {
            var$6 = $this.$data0.data;
            var$6[$toDataIndex] = var$6[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
        }
    }
}
function ju_BitSet_trailingZeroBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return (-1) << var$2;
}
function ju_BitSet_trailingOneBits($this, $num) {
    var var$2;
    var$2 = $num % 32 | 0;
    return !var$2 ? 0 : (-1) >>> (32 - var$2 | 0) | 0;
}
function ju_BitSet_clear($this, $bitIndex) {
    var $index, var$3;
    $index = $bitIndex / 32 | 0;
    if ($index < $this.$data0.data.length) {
        var$3 = $this.$data0.data;
        var$3[$index] = var$3[$index] & jl_Integer_rotateLeft((-2), $bitIndex % 32 | 0);
        if ($bitIndex == ($this.$length2 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
}
function ju_BitSet_clear0($this, $fromIndex, $toIndex) {
    var var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length2)
        return;
    var$3 = jl_Math_min($this.$length2, $toIndex);
    if ($fromIndex == var$3)
        return;
    $fromDataIndex = $fromIndex / 32 | 0;
    $toDataIndex = var$3 / 32 | 0;
    if ($fromDataIndex == $toDataIndex) {
        var$6 = $this.$data0.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & (ju_BitSet_trailingOneBits($this, $fromIndex) | ju_BitSet_trailingZeroBits($this, var$3));
    } else {
        var$6 = $this.$data0.data;
        var$6[$fromDataIndex] = var$6[$fromDataIndex] & ju_BitSet_trailingOneBits($this, $fromIndex);
        $i = $fromDataIndex + 1 | 0;
        while ($i < $toDataIndex) {
            $this.$data0.data[$i] = 0;
            $i = $i + 1 | 0;
        }
        if (var$3 & 31) {
            var$6 = $this.$data0.data;
            var$6[$toDataIndex] = var$6[$toDataIndex] & ju_BitSet_trailingZeroBits($this, var$3);
        }
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_get($this, $bitIndex) {
    var $index;
    $index = $bitIndex / 32 | 0;
    return $index < $this.$data0.data.length && $this.$data0.data[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
}
function ju_BitSet_nextSetBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length2)
        return (-1);
    $index = $fromIndex / 32 | 0;
    $val = $this.$data0.data[$index];
    var$4 = $val >>> ($fromIndex % 32 | 0) | 0;
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data0.data[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data0.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function ju_BitSet_nextClearBit($this, $fromIndex) {
    var $index, $val, var$4, $top, $i;
    if ($fromIndex >= $this.$length2)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    $val = $this.$data0.data[$index] ^ (-1);
    var$4 = $val >>> ($fromIndex % 32 | 0) | 0;
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data0.data[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data0.data[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return $this.$length2;
}
function ju_BitSet_ensureCapacity($this, $capacity) {
    var $newArrayLength;
    if ($this.$data0.data.length >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($this.$data0.data.length * 2 | 0) + 1 | 0);
    $this.$data0 = ju_Arrays_copyOf2($this.$data0, $newArrayLength);
}
function ju_BitSet_recalculateLength($this) {
    var $top, $i, $sz;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $this.$length2 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data0.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length2 = $this.$length2 - 32 | 0;
        }
        $this.$length2 = $this.$length2 - $sz | 0;
    }
}
function ju_BitSet_intersects($this, $set) {
    var $sz, $i;
    $sz = jl_Math_min($this.$data0.data.length, $set.$data0.data.length);
    $i = 0;
    while ($i < $sz) {
        if ($this.$data0.data[$i] & $set.$data0.data[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function ju_BitSet_and($this, $set) {
    var $i, $i_0, var$4;
    $i = jl_Math_min($this.$data0.data.length, $set.$data0.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data0.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data0.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while ($i < $this.$data0.data.length) {
        $this.$data0.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length2 = jl_Math_min($this.$length2, $set.$length2);
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_andNot($this, $set) {
    var $sz, $i, var$4;
    $sz = jl_Math_min($this.$data0.data.length, $set.$data0.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data0.data;
        var$4[$i] = var$4[$i] & ($set.$data0.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_or($this, $set) {
    var $sz, $i, var$4;
    $this.$length2 = jl_Math_max($this.$length2, $set.$length2);
    ju_BitSet_ensureCapacity($this, ($this.$length2 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data0.data.length, $set.$data0.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data0.data;
        var$4[$i] = var$4[$i] | $set.$data0.data[$i];
        $i = $i + 1 | 0;
    }
}
function ju_BitSet_xor($this, $set) {
    var $sz, $i, var$4;
    $this.$length2 = jl_Math_max($this.$length2, $set.$length2);
    ju_BitSet_ensureCapacity($this, ($this.$length2 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data0.data.length, $set.$data0.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data0.data;
        var$4[$i] = var$4[$i] ^ $set.$data0.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
}
function ju_BitSet_isEmpty($this) {
    return $this.$length2 ? 0 : 1;
}
function jl_Float() {
    jl_Number.call(this);
    this.$value1 = 0.0;
}
var jl_Float_NaN = 0.0;
var jl_Float_TYPE = null;
function jl_Float_$callClinit() {
    jl_Float_$callClinit = $rt_eraseClinit(jl_Float);
    jl_Float__clinit_();
}
function jl_Float__init_(var_0) {
    var var_1 = new jl_Float();
    jl_Float__init_0(var_1, var_0);
    return var_1;
}
function jl_Float__init_0($this, $value) {
    jl_Float_$callClinit();
    jl_Number__init_($this);
    $this.$value1 = $value;
}
function jl_Float_floatValue($this) {
    return $this.$value1;
}
function jl_Float_valueOf($d) {
    jl_Float_$callClinit();
    return jl_Float__init_($d);
}
function jl_Float_parseFloat($string) {
    var $start, $end, $negative, $c, $mantissa, $exp, $hasOneDigit, var$9, var$10, $negativeExp, $numExp, var$13;
    jl_Float_$callClinit();
    if ($string.$isEmpty())
        $rt_throw(jl_NumberFormatException__init_0());
    $start = 0;
    $end = $string.$length();
    while (true) {
        if ($string.$charAt($start) > 32) {
            while ($string.$charAt($end - 1 | 0) <= 32) {
                $end = $end + (-1) | 0;
            }
            $negative = 0;
            if ($string.$charAt($start) == 45) {
                $start = $start + 1 | 0;
                $negative = 1;
            } else if ($string.$charAt($start) == 43)
                $start = $start + 1 | 0;
            if ($start == $end)
                $rt_throw(jl_NumberFormatException__init_0());
            a: {
                $c = $string.$charAt($start);
                $mantissa = 0;
                $exp = 0;
                $hasOneDigit = 0;
                if ($c != 46) {
                    $hasOneDigit = 1;
                    if ($c >= 48 && $c <= 57) {
                        b: {
                            while ($start < $end) {
                                if ($string.$charAt($start) != 48)
                                    break b;
                                $start = $start + 1 | 0;
                            }
                        }
                        while ($start < $end) {
                            var$9 = $string.$charAt($start);
                            if (var$9 < 48)
                                break a;
                            if (var$9 > 57)
                                break a;
                            if ($mantissa >= 214748355)
                                $exp = $exp + 1 | 0;
                            else
                                $mantissa = ($mantissa * 10 | 0) + (var$9 - 48 | 0) | 0;
                            $start = $start + 1 | 0;
                        }
                    } else
                        $rt_throw(jl_NumberFormatException__init_0());
                }
            }
            if ($start < $end && $string.$charAt($start) == 46) {
                $start = $start + 1 | 0;
                c: {
                    while (true) {
                        if ($start >= $end)
                            break c;
                        var$10 = $string.$charAt($start);
                        if (var$10 < 48)
                            break c;
                        if (var$10 > 57)
                            break;
                        if ($mantissa < 214748355) {
                            $mantissa = ($mantissa * 10 | 0) + (var$10 - 48 | 0) | 0;
                            $exp = $exp + (-1) | 0;
                        }
                        $start = $start + 1 | 0;
                        $hasOneDigit = 1;
                    }
                }
                if (!$hasOneDigit)
                    $rt_throw(jl_NumberFormatException__init_0());
            }
            if ($start < $end) {
                var$9 = $string.$charAt($start);
                if (var$9 != 101 && var$9 != 69)
                    $rt_throw(jl_NumberFormatException__init_0());
                var$9 = $start + 1 | 0;
                $negativeExp = 0;
                if (var$9 == $end)
                    $rt_throw(jl_NumberFormatException__init_0());
                if ($string.$charAt(var$9) == 45) {
                    var$9 = var$9 + 1 | 0;
                    $negativeExp = 1;
                } else if ($string.$charAt(var$9) == 43)
                    var$9 = var$9 + 1 | 0;
                $numExp = 0;
                var$13 = 0;
                d: {
                    while (true) {
                        if (var$9 >= $end)
                            break d;
                        var$10 = $string.$charAt(var$9);
                        if (var$10 < 48)
                            break d;
                        if (var$10 > 57)
                            break;
                        $numExp = (10 * $numExp | 0) + (var$10 - 48 | 0) | 0;
                        var$13 = 1;
                        var$9 = var$9 + 1 | 0;
                    }
                }
                if (!var$13)
                    $rt_throw(jl_NumberFormatException__init_0());
                if ($negativeExp)
                    $numExp =  -$numExp | 0;
                $exp = $exp + $numExp | 0;
            }
            e: {
                var$9 = $rt_compare($exp, 38);
                if (var$9 <= 0) {
                    if (var$9)
                        break e;
                    if ($mantissa <= 34028234)
                        break e;
                }
                return $negative ? (-Infinity) : Infinity;
            }
            if ($negative)
                $mantissa =  -$mantissa | 0;
            return $mantissa * jl_Float_decimalExponent($exp);
        }
        $start = $start + 1 | 0;
        if ($start == $end)
            break;
    }
    $rt_throw(jl_NumberFormatException__init_0());
}
function jl_Float_decimalExponent($n) {
    var $d, $result;
    jl_Float_$callClinit();
    if ($n >= 0)
        $d = 10.0;
    else {
        $d = 0.1;
        $n =  -$n | 0;
    }
    $result = 1.0;
    while ($n) {
        if ($n % 2 | 0)
            $result = $result * $d;
        $d = $d * $d;
        $n = $n / 2 | 0;
    }
    return $result;
}
function jl_Float__clinit_() {
    jl_Float_NaN = $rt_globals.NaN;
    jl_Float_TYPE = $rt_cls($rt_floatcls());
}
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch = 0;
}
function jur_CharSet__init_(var_0) {
    var var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$ch = $ch;
}
function jur_CharSet_charCount($this) {
    return 1;
}
function jur_CharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_CharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf($this.$ch, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_CharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf1($this.$ch, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
}
function jur_CharSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$ch;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_CharSet_getChar($this) {
    return $this.$ch;
}
function jur_CharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$ch ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains0($this.$ch);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return $set.$accepts(0, jl_Character_toString($this.$ch)) <= 0 ? 0 : 1;
}
var cbgggpi_SimpleInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
function cbgu_Pool() {
    var a = this; jl_Object.call(a);
    a.$max1 = 0;
    a.$peak = 0;
    a.$freeObjects = null;
}
function cbgu_Pool__init_($this) {
    cbgu_Pool__init_0($this, 16, 2147483647);
}
function cbgu_Pool__init_0($this, $initialCapacity, $max) {
    jl_Object__init_0($this);
    $this.$freeObjects = cbgu_Array__init_0(0, $initialCapacity);
    $this.$max1 = $max;
}
function cbgu_Pool_obtain($this) {
    return !$this.$freeObjects.$size ? $this.$newObject() : $this.$freeObjects.$pop();
}
function cbgu_Pool_free($this, $object) {
    if ($object === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(278)));
    if ($this.$freeObjects.$size >= $this.$max1)
        $this.$discard($object);
    else {
        $this.$freeObjects.$add3($object);
        $this.$peak = jl_Math_max($this.$peak, $this.$freeObjects.$size);
        $this.$reset1($object);
    }
}
function cbgu_Pool_reset($this, $object) {
    if ($rt_isInstance($object, cbgu_Pool$Poolable))
        $object.$reset2();
}
function cbgu_Pool_discard($this, $object) {
    $this.$reset1($object);
}
function cbgu_Pool_freeAll($this, $objects) {
    var $freeObjects, $max, $i, $n, $object;
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(32)));
    $freeObjects = $this.$freeObjects;
    $max = $this.$max1;
    $i = 0;
    $n = $objects.$size;
    while ($i < $n) {
        $object = $objects.$get3($i);
        if ($object !== null) {
            if ($freeObjects.$size >= $max)
                $this.$discard($object);
            else {
                $freeObjects.$add3($object);
                $this.$reset1($object);
            }
        }
        $i = $i + 1 | 0;
    }
    $this.$peak = jl_Math_max($this.$peak, $freeObjects.$size);
}
var cbgggpi_ModelInfluencer$Random$ModelInstancePool = $rt_classWithoutFields(cbgu_Pool);
var otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
var cbggg_VertexData = $rt_classWithoutFields(0);
var cbgm_WindowedMean = $rt_classWithoutFields();
var cbgssa_TemporalAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_MoveToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
function cgtr_MizuchiRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA0 = Long_ZERO;
    a.$stateB0 = Long_ZERO;
}
function cgtr_MizuchiRandom__init_() {
    var var_0 = new cgtr_MizuchiRandom();
    cgtr_MizuchiRandom__init_0(var_0);
    return var_0;
}
function cgtr_MizuchiRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$stateA0 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateB0 = Long_or(cgtr_EnhancedRandom_seedFromMath(), Long_fromInt(1));
}
function cgtr_MizuchiRandom_nextLong($this) {
    var var$1;
    var$1 = Long_add(Long_mul($this.$stateA0, Long_create(2405954229, 4156746688)), $this.$stateB0);
    $this.$stateA0 = var$1;
    var$1 = Long_mul(Long_xor(Long_xor(var$1, Long_shru(var$1, 23)), Long_shru(var$1, 47)), Long_create(277803737, 2935059714));
    return Long_xor(var$1, Long_shru(var$1, 25));
}
function cgtr_MizuchiRandom_next($this, $bits) {
    var var$2;
    var$2 = Long_add(Long_mul($this.$stateA0, Long_create(2405954229, 4156746688)), $this.$stateB0);
    $this.$stateA0 = var$2;
    var$2 = Long_mul(Long_xor(Long_xor(var$2, Long_shru(var$2, 23)), Long_shru(var$2, 47)), Long_create(277803737, 2935059714));
    return Long_lo(Long_xor(var$2, Long_shru(var$2, 25))) >>> (32 - $bits | 0) | 0;
}
function jur_AbstractCharClass$LazyCategoryScope() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates0 = 0;
}
function jur_AbstractCharClass$LazyCategoryScope__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyCategoryScope__init_0(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$LazyCategoryScope__init_1($this, $cat, $mayContainSupplCodepoints) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
}
function jur_AbstractCharClass$LazyCategoryScope_computeValue($this) {
    var $chCl;
    $chCl = jur_UnicodeCategoryScope__init_($this.$category0);
    if ($this.$containsAllSurrogates0)
        $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
}
function cgxgbts_TeaSoundManager() {
    jl_Object.call(this);
    this.$soundManagerJS = null;
}
function cgxgbts_TeaSoundManager__init_() {
    var var_0 = new cgxgbts_TeaSoundManager();
    cgxgbts_TeaSoundManager__init_0(var_0);
    return var_0;
}
function cgxgbts_TeaSoundManager__init_0($this) {
    jl_Object__init_0($this);
    $this.$soundManagerJS = cgxgbts_TeaSoundManager_createSM$js_body$_0();
}
function cgxgbts_TeaSoundManager_setup($this, $url, $callback) {
    cgxgbts_TeaSoundManager_setupJS$js_body$_1($this.$soundManagerJS, $rt_ustr($url), $callback);
}
function cgxgbts_TeaSoundManager_createSM$js_body$_0() {
    var soundManager = new $rt_globals.SoundManager();
    soundManager.debugMode = false;
    return soundManager;
}
function cgxgbts_TeaSoundManager_setupJS$js_body$_1(var$1, var$2, var$3) {
    var$1.setup({ url : var$2, onready : function() {
        var$3.onready();
    }, ontimeout : function(status) {
        var$3.ontimeout();
    } });
}
var cbggg_NinePatch = $rt_classWithoutFields();
var cbggg_NinePatch_tmpDrawColor = null;
function cbggg_NinePatch_$callClinit() {
    cbggg_NinePatch_$callClinit = $rt_eraseClinit(cbggg_NinePatch);
    cbggg_NinePatch__clinit_();
}
function cbggg_NinePatch__clinit_() {
    cbggg_NinePatch_tmpDrawColor = cbgg_Color__init_0();
}
var cbgssu_Disableable = $rt_classWithoutFields(0);
var cbgssu_TextField = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_TextField_tmp1 = null;
var cbgssu_TextField_tmp2 = null;
var cbgssu_TextField_tmp3 = null;
var cbgssu_TextField_keyRepeatInitialTime = 0.0;
var cbgssu_TextField_keyRepeatTime = 0.0;
function cbgssu_TextField_$callClinit() {
    cbgssu_TextField_$callClinit = $rt_eraseClinit(cbgssu_TextField);
    cbgssu_TextField__clinit_();
}
function cbgssu_TextField__clinit_() {
    cbgssu_TextField_tmp1 = cbgm_Vector2__init_();
    cbgssu_TextField_tmp2 = cbgm_Vector2__init_();
    cbgssu_TextField_tmp3 = cbgm_Vector2__init_();
    cbgssu_TextField_keyRepeatInitialTime = 0.4000000059604645;
    cbgssu_TextField_keyRepeatTime = 0.10000000149011612;
}
var cbgssu_TextArea = $rt_classWithoutFields(cbgssu_TextField);
var jl_Readable = $rt_classWithoutFields(0);
var jn_CharBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_CharBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position2 = $position;
    $this.$limit = $limit;
}
function jn_CharBuffer_wrap($array, $offset, $length) {
    return jn_CharBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_CharBuffer_wrap0($array) {
    return jn_CharBuffer_wrap($array, 0, $array.data.length);
}
function jn_CharBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, var$7, var$8, $pos, $i, var$11;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(279)), var$6), $rt_s(280)), var$5);
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0) {
                var$8 = new jl_IndexOutOfBoundsException;
                var$7 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(281)), $length), $rt_s(282));
                jl_IndexOutOfBoundsException__init_1(var$8, jl_StringBuilder_toString(var$7));
                $rt_throw(var$8);
            }
            $pos = $this.$position2;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = $this.$getChar0($pos);
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position2 = $this.$position2 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    var$8 = new jl_IndexOutOfBoundsException;
    var$5 = var$4.length;
    var$11 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$11, $rt_s(283)), $offset), $rt_s(54)), var$5), 41);
    jl_IndexOutOfBoundsException__init_1(var$8, jl_StringBuilder_toString(var$11));
    $rt_throw(var$8);
}
function jn_CharBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, var$7, var$8, $pos, $i, var$11;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(284)), var$6), $rt_s(280)), var$5);
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            if ($length < 0) {
                var$8 = new jl_IndexOutOfBoundsException;
                var$7 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(281)), $length), $rt_s(282));
                jl_IndexOutOfBoundsException__init_1(var$8, jl_StringBuilder_toString(var$7));
                $rt_throw(var$8);
            }
            $pos = $this.$position2;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$11 = $offset + 1 | 0;
                $this.$putChar($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$11;
            }
            $this.$position2 = $this.$position2 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    var$8 = new jl_IndexOutOfBoundsException;
    var$5 = var$4.length;
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(283)), $offset), $rt_s(54)), var$5), 41);
    jl_IndexOutOfBoundsException__init_1(var$8, jl_StringBuilder_toString(var$7));
    $rt_throw(var$8);
}
function jn_CharBuffer_put0($this, $src, $start, $end) {
    var $sz, var$5, var$6, var$7, $pos, $pos_0;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    $sz = $end - $start | 0;
    if (jn_Buffer_remaining($this) < $sz)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($start >= 0 && $start <= $src.$length()) {
        if ($end > $src.$length()) {
            var$5 = new jl_IndexOutOfBoundsException;
            var$6 = $src.$length();
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(284)), $end), $rt_s(285)), var$6);
            jl_IndexOutOfBoundsException__init_1(var$5, jl_StringBuilder_toString(var$7));
            $rt_throw(var$5);
        }
        if ($start > $end) {
            var$5 = new jl_IndexOutOfBoundsException;
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(286)), $start), $rt_s(287)), $end);
            jl_IndexOutOfBoundsException__init_1(var$5, jl_StringBuilder_toString(var$7));
            $rt_throw(var$5);
        }
        $pos = $this.$position2;
        while ($start < $end) {
            $pos_0 = $pos + 1 | 0;
            var$6 = $start + 1 | 0;
            $this.$putChar($pos, $src.$charAt($start));
            $pos = $pos_0;
            $start = var$6;
        }
        $this.$position2 = $this.$position2 + $sz | 0;
        return $this;
    }
    var$5 = new jl_IndexOutOfBoundsException;
    var$6 = $src.$length();
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(286)), $start), $rt_s(54)), var$6), 41);
    jl_IndexOutOfBoundsException__init_1(var$5, jl_StringBuilder_toString(var$7));
    $rt_throw(var$5);
}
function jn_CharBuffer_put1($this, $src) {
    return $this.$put2($src, 0, $src.$length());
}
function jn_CharBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_CharBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
var jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer);
function jn_CharBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_CharBuffer__init_($this, $capacity, $position, $limit);
}
function jn_CharBufferImpl_compact($this) {
    var $sz, $src, $i, var$4;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    a: {
        $sz = jn_Buffer_remaining($this);
        if ($this.$position2 > 0) {
            $src = $this.$position2;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$4 = $src + 1 | 0;
                $this.$putChar($i, $this.$getChar0($src));
                $i = $i + 1 | 0;
                $src = var$4;
            }
        }
    }
    $this.$position2 = $sz;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_CharBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_CharBufferOverArray() {
    var a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$start1 = 0;
    a.$array1 = null;
}
function jn_CharBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_CharBufferOverArray();
    jn_CharBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_CharBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_CharBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start1 = $start;
    $this.$readOnly1 = $readOnly;
    $this.$array1 = $array;
}
function jn_CharBufferOverArray_getChar($this, $index) {
    return $this.$array1.data[$index + $this.$start1 | 0];
}
function jn_CharBufferOverArray_putChar($this, $index, $value) {
    $this.$array1.data[$index + $this.$start1 | 0] = $value;
}
function jn_CharBufferOverArray_readOnly($this) {
    return $this.$readOnly1;
}
var cbgssu_TextTooltip$TextTooltipStyle = $rt_classWithoutFields();
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$010 = null;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaTitleCase$1();
    jur_AbstractCharClass$LazyJavaTitleCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaTitleCase$1__init_0($this, $this$0) {
    $this.$this$010 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase$1_contains($this, $ch) {
    return jl_Character_isTitleCase($ch);
}
var cbggg_MipMapGenerator = $rt_classWithoutFields();
var cbggg_MipMapGenerator_useHWMipMap = 0;
function cbggg_MipMapGenerator_$callClinit() {
    cbggg_MipMapGenerator_$callClinit = $rt_eraseClinit(cbggg_MipMapGenerator);
    cbggg_MipMapGenerator__clinit_();
}
function cbggg_MipMapGenerator_generateMipMap($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5;
    cbggg_MipMapGenerator_$callClinit();
    if (!cbggg_MipMapGenerator_useHWMipMap) {
        cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
        return;
    }
    a: {
        var$5 = cbg_Gdx_app.$getType2();
        cbg_Application$ApplicationType_$callClinit();
        if (var$5 !== cbg_Application$ApplicationType_Android && cbg_Gdx_app.$getType2() !== cbg_Application$ApplicationType_WebGL) {
            var$5 = cbg_Gdx_app;
            if (var$5.$getType2() !== cbg_Application$ApplicationType_iOS) {
                cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight);
                break a;
            }
        }
        cbggg_MipMapGenerator_generateMipMapGLES20($target, $pixmap);
    }
}
function cbggg_MipMapGenerator_generateMipMapGLES20($target, $pixmap) {
    var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbggg_MipMapGenerator_$callClinit();
    var$3 = cbg_Gdx_gl;
    var$4 = $pixmap.$getGLInternalFormat();
    var$5 = $pixmap.$getWidth();
    var$6 = $pixmap.$getHeight();
    var$7 = $pixmap.$getGLFormat();
    var$8 = $pixmap.$getGLType();
    var$9 = $pixmap.$getPixels();
    var$3.$glTexImage2D($target, 0, var$4, var$5, var$6, 0, var$7, var$8, var$9);
    cbg_Gdx_gl20.$glGenerateMipmap($target);
}
function cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cbggg_MipMapGenerator_$callClinit();
    a: {
        if (!cbg_Gdx_graphics.$supportsExtension($rt_s(288))) {
            var$5 = cbg_Gdx_graphics;
            if (!var$5.$supportsExtension($rt_s(289))) {
                var$5 = cbg_Gdx_gl20;
                if (!((jl_Object_getClass(var$5)).$getName()).$equals($rt_s(290)) && cbg_Gdx_gl30 === null) {
                    cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
                    break a;
                }
            }
        }
        var$5 = cbg_Gdx_gl;
        var$6 = $pixmap.$getGLInternalFormat();
        var$7 = $pixmap.$getWidth();
        var$8 = $pixmap.$getHeight();
        var$9 = $pixmap.$getGLFormat();
        var$10 = $pixmap.$getGLType();
        var$11 = $pixmap.$getPixels();
        var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
        cbg_Gdx_gl20.$glGenerateMipmap($target);
    }
}
function cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight) {
    var var$5, var$6, var$7, var$8, var$9, var$10, var$11, $width, $height, $level, $tmp_0, var$16;
    cbggg_MipMapGenerator_$callClinit();
    var$5 = cbg_Gdx_gl;
    var$6 = $pixmap.$getGLInternalFormat();
    var$7 = $pixmap.$getWidth();
    var$8 = $pixmap.$getHeight();
    var$9 = $pixmap.$getGLFormat();
    var$10 = $pixmap.$getGLType();
    var$11 = $pixmap.$getPixels();
    var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
    if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(291)));
    $width = $pixmap.$getWidth() / 2 | 0;
    $height = $pixmap.$getHeight() / 2 | 0;
    $level = 1;
    while ($width > 0 && $height > 0) {
        $tmp_0 = cbgg_Pixmap__init_($width, $height, $pixmap.$getFormat());
        cbgg_Pixmap$Blending_$callClinit();
        $tmp_0.$setBlending(cbgg_Pixmap$Blending_None);
        $tmp_0.$drawPixmap0($pixmap, 0, 0, $pixmap.$getWidth(), $pixmap.$getHeight(), 0, 0, $width, $height);
        if ($level > 1)
            $pixmap.$dispose();
        var$5 = cbg_Gdx_gl;
        var$9 = $tmp_0.$getGLInternalFormat();
        var$10 = $tmp_0.$getWidth();
        var$16 = $tmp_0.$getHeight();
        var$6 = $tmp_0.$getGLFormat();
        var$7 = $tmp_0.$getGLType();
        var$11 = $tmp_0.$getPixels();
        var$5.$glTexImage2D($target, $level, var$9, var$10, var$16, 0, var$6, var$7, var$11);
        $width = $tmp_0.$getWidth() / 2 | 0;
        $height = $tmp_0.$getHeight() / 2 | 0;
        $level = $level + 1 | 0;
        $pixmap = $tmp_0;
    }
}
function cbggg_MipMapGenerator__clinit_() {
    cbggg_MipMapGenerator_useHWMipMap = 1;
}
function jl_Thread() {
    var a = this; jl_Object.call(a);
    a.$uncaughtExceptionHandler = null;
    a.$id0 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$interruptHandler = null;
    a.$name3 = null;
    a.$alive = 0;
    a.$target = null;
}
var jl_Thread_mainThread = null;
var jl_Thread_currentThread0 = null;
var jl_Thread_nextId = 0;
var jl_Thread_activeCount = 0;
var jl_Thread_defaultUncaughtExceptionHandler = null;
function jl_Thread_$callClinit() {
    jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
    jl_Thread__clinit_();
}
function jl_Thread__init_() {
    var var_0 = new jl_Thread();
    jl_Thread__init_0(var_0);
    return var_0;
}
function jl_Thread__init_1(var_0) {
    var var_1 = new jl_Thread();
    jl_Thread__init_2(var_1, var_0);
    return var_1;
}
function jl_Thread__init_3(var_0, var_1) {
    var var_2 = new jl_Thread();
    jl_Thread__init_4(var_2, var_0, var_1);
    return var_2;
}
function jl_Thread__init_0($this) {
    jl_Thread_$callClinit();
    jl_Thread__init_4($this, null, null);
}
function jl_Thread__init_2($this, $name) {
    jl_Thread_$callClinit();
    jl_Thread__init_4($this, null, $name);
}
function jl_Thread__init_4($this, $target, $name) {
    var var$3;
    jl_Thread_$callClinit();
    jl_Object__init_0($this);
    $this.$finishedLock = jl_Object__init_();
    $this.$alive = 1;
    $this.$name3 = $name;
    $this.$target = $target;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    $this.$id0 = Long_fromInt(var$3);
}
function jl_Thread_start($this) {
    otp_Platform_startThread(jl_Thread$start$lambda$_4_0__init_($this));
}
function jl_Thread_runThread($this) {
    var $t, var$2, var$3, $$je;
    a: {
        b: {
            c: {
                d: {
                    try {
                        jl_Thread_$callClinit();
                        jl_Thread_activeCount = jl_Thread_activeCount + 1 | 0;
                        jl_Thread_setCurrentThread($this);
                        $this.$run();
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $t = $$je;
                            break d;
                        } else{
                            var$2 = $$je;
                            break c;
                        }
                    }
                    var$2 = $this.$finishedLock;
                    jl_Object_monitorEnterSync(var$2);
                    e: {
                        try {
                            jl_Object_notifyAll($this.$finishedLock);
                            jl_Object_monitorExitSync(var$2);
                            break e;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$3 = $$je;

                        }
                        jl_Object_monitorExitSync(var$2);
                        $rt_throw(var$3);
                    }
                    $this.$alive = 0;
                    jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
                    jl_Thread_setCurrentThread(jl_Thread_mainThread);
                    break a;
                }
                try {
                    ($this.$getUncaughtExceptionHandler()).$uncaughtException($this, $t);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$2 = $$je;

                }
            }
            var$3 = $this.$finishedLock;
            jl_Object_monitorEnterSync(var$3);
            f: {
                try {
                    jl_Object_notifyAll($this.$finishedLock);
                    jl_Object_monitorExitSync(var$3);
                    break f;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$2 = $$je;

                }
                jl_Object_monitorExitSync(var$3);
                $rt_throw(var$2);
            }
            $this.$alive = 0;
            jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
            jl_Thread_setCurrentThread(jl_Thread_mainThread);
            $rt_throw(var$2);
        }
        var$2 = $this.$finishedLock;
        jl_Object_monitorEnterSync(var$2);
        g: {
            try {
                jl_Object_notifyAll($this.$finishedLock);
                jl_Object_monitorExitSync(var$2);
                break g;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$3 = $$je;

            }
            jl_Object_monitorExitSync(var$2);
            $rt_throw(var$3);
        }
        $this.$alive = 0;
        jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
        jl_Thread_setCurrentThread(jl_Thread_mainThread);
    }
}
function jl_Thread_setCurrentThread($thread_0) {
    jl_Thread_$callClinit();
    if (jl_Thread_currentThread0 !== $thread_0)
        jl_Thread_currentThread0 = $thread_0;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
}
function jl_Thread_currentThread() {
    jl_Thread_$callClinit();
    return jl_Thread_currentThread0;
}
function jl_Thread_sleep(var$1) {
    var thread = $rt_nativeThread();
    var javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        var result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    var callback = function() {};
    callback.$complete = function(val) {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = function(e) {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    return thread.suspend(function() {
        try {
            jl_Thread_sleep0(var$1, callback);
        } catch($e) {
            callback.$error($rt_exception($e));
        }
    });
}
function jl_Thread_sleep0($millis, $callback) {
    var $current, $handler, $intMillis;
    jl_Thread_$callClinit();
    $current = jl_Thread_currentThread();
    $handler = jl_Thread$SleepHandler__init_($current, $callback);
    $intMillis = Long_ge($millis, Long_fromInt(2147483647)) ? 2147483647 : Long_lo($millis);
    $handler.$scheduleId = otp_Platform_schedule($handler, $intMillis);
    $current.$interruptHandler = $handler;
}
function jl_Thread_getUncaughtExceptionHandler($this) {
    if ($this.$uncaughtExceptionHandler !== null)
        return $this.$uncaughtExceptionHandler;
    jl_Thread_$callClinit();
    return jl_Thread_defaultUncaughtExceptionHandler;
}
function jl_Thread__clinit_() {
    jl_Thread_mainThread = jl_Thread__init_1($rt_s(292));
    jl_Thread_currentThread0 = jl_Thread_mainThread;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = jl_DefaultUncaughtExceptionHandler__init_();
}
function cgxgbtp_AssetDownloadImpl$1() {
    var a = this; jl_Thread.call(a);
    a.$val$async = 0;
    a.$val$url1 = null;
    a.$val$listener1 = null;
    a.$this$011 = null;
}
function cgxgbtp_AssetDownloadImpl$1__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbtp_AssetDownloadImpl$1();
    cgxgbtp_AssetDownloadImpl$1__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbtp_AssetDownloadImpl$1__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$011 = $this$0;
    $this.$val$async = var$2;
    $this.$val$url1 = var$3;
    $this.$val$listener1 = var$4;
    jl_Thread__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$1_run($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = new $rt_globals.XMLHttpRequest();
    var$2 = otji_JS_function(cgxgbtp_AssetDownloadImpl$1$1__init_($this, var$1), "handleEvent");
    var$1.onreadystatechange = var$2;
    cgxgbtp_AssetDownloadImpl_setOnProgress($this.$this$011, var$1, $this.$val$listener1);
    var$3 = $this.$val$url1;
    var$4 = $this.$val$async;
    var$1.open("GET", $rt_ustr(var$3), !!var$4);
    var$1.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
    var$1.send();
}
var cgxgbtd_EventHandlerWrapper = $rt_classWithoutFields(0);
function cgxgbtp_AssetDownloadImpl$2() {
    var a = this; jl_Object.call(a);
    a.$val$request = null;
    a.$val$async0 = 0;
    a.$val$url2 = null;
    a.$val$listener2 = null;
    a.$this$012 = null;
}
function cgxgbtp_AssetDownloadImpl$2__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cgxgbtp_AssetDownloadImpl$2();
    cgxgbtp_AssetDownloadImpl$2__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cgxgbtp_AssetDownloadImpl$2__init_0($this, $this$0, var$2, var$3, var$4, var$5) {
    $this.$this$012 = $this$0;
    $this.$val$request = var$2;
    $this.$val$async0 = var$3;
    $this.$val$url2 = var$4;
    $this.$val$listener2 = var$5;
    jl_Object__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$2_handleEvent($this, $evt) {
    var var$2, var$3, var$4, var$5, $response, $currentWindow, $document, $scriptElement, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$scriptElement = $thread.pop();$document = $thread.pop();$currentWindow = $thread.pop();$response = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$val$request.readyState == 4) {
            a: {
                if ($this.$val$request.status != 200) {
                    if ($this.$val$request.status != 404) {
                        var$2 = $this.$val$request;
                        if (var$2.status != 403) {
                            try {
                                var$3 = Long_fromInt(100);
                                $ptr = 1;
                                continue main;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                } else {
                                    throw $$e;
                                }
                            }
                            $this.$this$012.$loadScript($this.$val$async0, $this.$val$url2, $this.$val$listener2);
                            break a;
                        }
                    }
                    $this.$val$listener2.$onFailure($this.$val$url2);
                } else {
                    if ($this.$this$012.$showLogs) {
                        var$2 = jl_System_out();
                        var$4 = $this.$val$url2;
                        var$5 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(293)), var$4);
                        var$2.$println1(jl_StringBuilder_toString(var$5));
                    }
                    $response = $this.$val$request.response;
                    $currentWindow = cgxgbtdi_TeaWindow_get();
                    $document = $currentWindow.$getDocument();
                    $scriptElement = $document.createElement("script");
                    var$2 = $document.createTextNode($response);
                    $scriptElement.appendChild(var$2);
                    $document.body.appendChild($scriptElement);
                    $this.$val$listener2.$onSuccess($this.$val$url2, $rt_str($this.$val$request.responseText));
                }
            }
            $this.$this$012.$subtractQueue();
        }
        return;
    case 1:
        b: {
            try {
                jl_Thread_sleep(var$3);
                if ($rt_suspending()) {
                    break main;
                }
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
        }
        $this.$this$012.$loadScript($this.$val$async0, $this.$val$url2, $this.$val$listener2);
        $this.$this$012.$subtractQueue();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $evt, var$2, var$3, var$4, var$5, $response, $currentWindow, $document, $scriptElement, $ptr);
}
function cgxgbtp_AssetDownloadImpl$2_handleEvent$exported$0(var$0, var$1) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        var$0.$handleEvent(var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$0, var$1, $ptr);
}
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
function jnc_UnsupportedCharsetException__init_(var_0) {
    var var_1 = new jnc_UnsupportedCharsetException();
    jnc_UnsupportedCharsetException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnsupportedCharsetException__init_0($this, $charsetName) {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName0 = $charsetName;
}
function cgxgbtp_AssetDownloadImpl$3() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$listener3 = null;
    a.$this$013 = null;
}
function cgxgbtp_AssetDownloadImpl$3__init_(var_0, var_1) {
    var var_2 = new cgxgbtp_AssetDownloadImpl$3();
    cgxgbtp_AssetDownloadImpl$3__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtp_AssetDownloadImpl$3__init_0($this, $this$0, var$2) {
    $this.$this$013 = $this$0;
    $this.$val$listener3 = var$2;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$3_onProgress($this, $amount) {
    $this.$val$listener3.$onProgress($amount);
}
function cgxgbtp_AssetDownloadImpl$3_onFailure($this, $url) {
    $this.$val$listener3.$onFailure($url);
}
function cgxgbtp_AssetDownloadImpl$3_onSuccess($this, $url, $result) {
    return $this.$val$listener3.$onSuccess($url, null);
}
function cgxgbtp_AssetDownloadImpl$3_onSuccess0($this, var$1, var$2) {
    return $this.$onSuccess1(var$1, var$2);
}
function cgxgbtp_AssetDownloadImpl$4() {
    var a = this; jl_Thread.call(a);
    a.$val$async1 = 0;
    a.$val$url3 = null;
    a.$val$listener4 = null;
    a.$this$014 = null;
}
function cgxgbtp_AssetDownloadImpl$4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbtp_AssetDownloadImpl$4();
    cgxgbtp_AssetDownloadImpl$4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbtp_AssetDownloadImpl$4__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$014 = $this$0;
    $this.$val$async1 = var$2;
    $this.$val$url3 = var$3;
    $this.$val$listener4 = var$4;
    jl_Thread__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$4_run($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = new $rt_globals.XMLHttpRequest();
    var$2 = otji_JS_function(cgxgbtp_AssetDownloadImpl$4$1__init_($this, var$1), "handleEvent");
    var$1.onreadystatechange = var$2;
    cgxgbtp_AssetDownloadImpl_setOnProgress($this.$this$014, var$1, $this.$val$listener4);
    var$3 = $this.$val$url3;
    var$4 = $this.$val$async1;
    var$1.open("GET", $rt_ustr(var$3), !!var$4);
    if ($this.$val$async1) {
        var$2 = "arraybuffer";
        var$1.responseType = var$2;
    }
    var$1.send();
}
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$015 = null;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaISOControl$1();
    jur_AbstractCharClass$LazyJavaISOControl$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaISOControl$1__init_0($this, $this$0) {
    $this.$this$015 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaISOControl$1_contains($this, $ch) {
    return jl_Character_isISOControl($ch);
}
function cgxgbtp_AssetDownloadImpl$5() {
    var a = this; cgxgbt_AssetLoaderListener.call(a);
    a.$val$listener = null;
    a.$val$crossOrigin = null;
    a.$val$mimeType = null;
    a.$this$0 = null;
}
function cgxgbtp_AssetDownloadImpl$5__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbtp_AssetDownloadImpl$5();
    cgxgbtp_AssetDownloadImpl$5__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbtp_AssetDownloadImpl$5__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$0 = $this$0;
    $this.$val$listener = var$2;
    $this.$val$crossOrigin = var$3;
    $this.$val$mimeType = var$4;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$5_onProgress($this, $amount) {
    $this.$val$listener.$onProgress($amount);
}
function cgxgbtp_AssetDownloadImpl$5_onFailure($this, $url) {
    $this.$val$listener.$onFailure($url);
}
function cgxgbtp_AssetDownloadImpl$5_onSuccess($this, $url, $result) {
    var var$3, var$4, var$5, var$6, var$7;
    var$3 = $rt_globals.window.document;
    var$4 = var$3.createElement("img");
    if ($this.$val$crossOrigin !== null) {
        var$3 = $this.$val$crossOrigin;
        var$4.setAttribute("crossOrigin", $rt_ustr(var$3));
    }
    $this.$this$0.$addQueue();
    cgxgbtp_AssetDownloadImpl_hookImgListener(var$4, cgxgbtp_AssetDownloadImpl$5$1__init_($this, $url, $result, var$4));
    if (!$this.$this$0.$useInlineBase64) {
        var$3 = $rt_ustr($url);
        var$4.src = var$3;
    } else {
        var$5 = $this.$val$mimeType;
        var$6 = cgxgbtp_Blob_toBase64($result);
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(294)), var$5), $rt_s(295)), var$6);
        var$7 = $rt_ustr(jl_StringBuilder_toString(var$7));
        var$4.src = var$7;
    }
    return 0;
}
function cgxgbtp_AssetDownloadImpl$5_onSuccess0($this, var$1, var$2) {
    return $this.$onSuccess1(var$1, var$2);
}
function cgxgbtp_AssetDownloadImpl$6() {
    var a = this; jl_Object.call(a);
    a.$val$listener5 = null;
    a.$this$016 = null;
}
function cgxgbtp_AssetDownloadImpl$6__init_(var_0, var_1) {
    var var_2 = new cgxgbtp_AssetDownloadImpl$6();
    cgxgbtp_AssetDownloadImpl$6__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtp_AssetDownloadImpl$6__init_0($this, $this$0, var$2) {
    $this.$this$016 = $this$0;
    $this.$val$listener5 = var$2;
    jl_Object__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$6_handleEvent($this, $progressEvent) {
    $this.$val$listener5.$onProgress($progressEvent.loaded);
}
function cgxgbtp_AssetDownloadImpl$6_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_FloatBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position2 = $position;
    $this.$limit = $limit;
}
function jn_FloatBuffer_wrap($array, $offset, $length) {
    return jn_FloatBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_FloatBuffer_wrap0($array) {
    return jn_FloatBuffer_wrap($array, 0, $array.data.length);
}
function jn_FloatBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, var$7, var$8, $pos, $i;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(296)), var$6), $rt_s(280)), var$5);
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            if ($length < 0) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(281)), $length), $rt_s(282));
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            $pos = $this.$position2;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                $this.$putElement0($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position2 = $this.$position2 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    var$7 = new jl_IndexOutOfBoundsException;
    var$5 = var$4.length;
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(283)), $offset), $rt_s(54)), var$5), 41);
    jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
    $rt_throw(var$7);
}
function jn_FloatBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_FloatBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_FloatBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_FloatBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_FloatBuffer_flip0($this) {
    return jn_FloatBuffer_flip($this);
}
function jn_FloatBuffer_clear0($this) {
    return jn_FloatBuffer_clear($this);
}
function jn_FloatBuffer_limit0($this, var$1) {
    return $this.$limit1(var$1);
}
function jn_FloatBuffer_position0($this, var$1) {
    return $this.$position4(var$1);
}
var jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer);
function jn_FloatBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_FloatBuffer__init_($this, $capacity, $position, $limit);
}
function jn_FloatBufferImpl_get($this, $index) {
    var var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement0($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(264)), $index), $rt_s(54)), var$3), 41);
    jl_IndexOutOfBoundsException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
}
function jn_FloatBufferImpl_put($this, $index, $b) {
    var var$3, var$4, var$5;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit) {
        $this.$putElement0($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(264)), $index), $rt_s(54)), var$4), 41);
    jl_IndexOutOfBoundsException__init_1(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
}
function jn_FloatBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_FloatBufferOverByteBuffer() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$byteByffer0 = null;
    a.$readOnly2 = 0;
    a.$start2 = 0;
}
function jn_FloatBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start2 = $start;
    $this.$byteByffer0 = $byteBuffer;
    $this.$readOnly2 = $readOnly;
}
function jn_FloatBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly2;
}
var cgxgbtp_AssetDownloader$AssetDownload = $rt_classWithoutFields(0);
function cgxgbtp_AssetDownloadImpl() {
    var a = this; jl_Object.call(a);
    a.$queue = 0;
    a.$useBrowserCache = 0;
    a.$useInlineBase64 = 0;
    a.$showLogs = 0;
}
function cgxgbtp_AssetDownloadImpl__init_(var_0) {
    var var_1 = new cgxgbtp_AssetDownloadImpl();
    cgxgbtp_AssetDownloadImpl__init_0(var_1, var_0);
    return var_1;
}
function cgxgbtp_AssetDownloadImpl__init_0($this, $showDownloadLogs) {
    jl_Object__init_0($this);
    $this.$useBrowserCache = 0;
    $this.$useInlineBase64 = 0;
    $this.$showLogs = 1;
    $this.$showLogs = $showDownloadLogs;
}
function cgxgbtp_AssetDownloadImpl_isUseBrowserCache($this) {
    return $this.$useBrowserCache;
}
function cgxgbtp_AssetDownloadImpl_getHostPageBaseURL($this) {
    var $currentWindow, $location, $href;
    $currentWindow = cgxgbtdi_TeaWindow_get();
    $location = $currentWindow.$getLocation();
    $href = $rt_str($location.href);
    return $href;
}
function cgxgbtp_AssetDownloadImpl_getQueue($this) {
    return $this.$queue;
}
function cgxgbtp_AssetDownloadImpl_subtractQueue($this) {
    $this.$queue = $this.$queue - 1 | 0;
}
function cgxgbtp_AssetDownloadImpl_addQueue($this) {
    $this.$queue = $this.$queue + 1 | 0;
}
function cgxgbtp_AssetDownloadImpl_load($this, $async, $url, $type, $mimeType, $listener) {
    var var$6, var$7;
    a: {
        cgxgbtp_AssetDownloadImpl$7_$callClinit();
        switch (cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal($type)]) {
            case 1:
                break;
            case 2:
                $this.$loadImage($async, $url, $mimeType, $listener);
                break a;
            case 3:
                $this.$loadBinary($async, $url, $listener);
                break a;
            case 4:
                $this.$loadAudio($async, $url, $listener);
                break a;
            case 5:
                $listener.$onSuccess($url, null);
                break a;
            default:
                var$6 = new cbgu_GdxRuntimeException;
                var$7 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(297)), $type);
                cbgu_GdxRuntimeException__init_(var$6, jl_StringBuilder_toString(var$7));
                $rt_throw(var$6);
        }
        $this.$loadText($async, $url, $listener);
    }
}
function cgxgbtp_AssetDownloadImpl_loadText($this, $async, $url, $listener) {
    var var$4, var$5, var$6;
    if ($this.$showLogs) {
        var$4 = jl_System_out();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(298)), $url);
        var$4.$println1(jl_StringBuilder_toString(var$5));
    }
    $this.$addQueue();
    var$6 = cgxgbtp_AssetDownloadImpl$1__init_($this, $async, $url, $listener);
    var$6.$start3();
}
function cgxgbtp_AssetDownloadImpl_loadScript($this, $async, $url, $listener) {
    var var$4, var$5;
    if ($this.$showLogs) {
        var$4 = jl_System_out();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(299)), $url);
        var$4.$println1(jl_StringBuilder_toString(var$5));
    }
    $this.$addQueue();
    var$4 = new $rt_globals.XMLHttpRequest();
    var$5 = otji_JS_function(cgxgbtp_AssetDownloadImpl$2__init_($this, var$4, $async, $url, $listener), "handleEvent");
    var$4.onreadystatechange = var$5;
    cgxgbtp_AssetDownloadImpl_setOnProgress($this, var$4, $listener);
    var$4.open("GET", $rt_ustr($url), !!$async);
    var$4.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
    var$4.send();
}
function cgxgbtp_AssetDownloadImpl_loadAudio($this, $async, $url, $listener) {
    $this.$loadBinary($async, $url, cgxgbtp_AssetDownloadImpl$3__init_($this, $listener));
}
function cgxgbtp_AssetDownloadImpl_loadBinary($this, $async, $url, $listener) {
    var var$4, var$5, var$6;
    if ($this.$showLogs) {
        var$4 = jl_System_out();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(298)), $url);
        var$4.$println1(jl_StringBuilder_toString(var$5));
    }
    $this.$addQueue();
    var$6 = cgxgbtp_AssetDownloadImpl$4__init_($this, $async, $url, $listener);
    var$6.$start3();
}
function cgxgbtp_AssetDownloadImpl_loadImage($this, $async, $url, $mimeType, $listener) {
    $this.$loadImage0($async, $url, $mimeType, null, $listener);
}
function cgxgbtp_AssetDownloadImpl_loadImage0($this, $async, $url, $mimeType, $crossOrigin, $listener) {
    $this.$loadBinary($async, $url, cgxgbtp_AssetDownloadImpl$5__init_($this, $listener, $crossOrigin, $mimeType));
}
function cgxgbtp_AssetDownloadImpl_hookImgListener($img, $listener) {
    $img.addEventListener("load", otji_JS_function($listener, "handleEvent"), !!0);
    $img.addEventListener("error", otji_JS_function($listener, "handleEvent"), !!0);
}
function cgxgbtp_AssetDownloadImpl_setOnProgress($this, $req, $listener) {
    var var$3;
    var$3 = otji_JS_function(cgxgbtp_AssetDownloadImpl$6__init_($this, $listener), "handleEvent");
    $req.onprogress = var$3;
}
var cgxgbtp_AssetDownloadImpl$7 = $rt_classWithoutFields();
var cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = null;
function cgxgbtp_AssetDownloadImpl$7_$callClinit() {
    cgxgbtp_AssetDownloadImpl$7_$callClinit = $rt_eraseClinit(cgxgbtp_AssetDownloadImpl$7);
    cgxgbtp_AssetDownloadImpl$7__clinit_();
}
function cgxgbtp_AssetDownloadImpl$7__clinit_() {
    cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = $rt_createIntArray((cgxgbtp_AssetType_values()).data.length);
    cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Text)] = 1;
    cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Image)] = 2;
    cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Binary)] = 3;
    cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Audio)] = 4;
    cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Directory)] = 5;
}
var cbgssa_AddAction = $rt_classWithoutFields(cbgss_Action);
var cbgggpi_ModelInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var cbgggpi_ModelInfluencer$Random = $rt_classWithoutFields(cbgggpi_ModelInfluencer);
var cbgm_Interpolation$BounceIn = $rt_classWithoutFields(cbgm_Interpolation$BounceOut);
function cbgm_Interpolation$BounceIn__init_(var_0) {
    var var_1 = new cbgm_Interpolation$BounceIn();
    cbgm_Interpolation$BounceIn__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$BounceIn__init_0($this, $bounces) {
    cbgm_Interpolation$BounceOut__init_0($this, $bounces);
}
var jl_Iterable = $rt_classWithoutFields(0);
function cbgu_Array() {
    var a = this; jl_Object.call(a);
    a.$items = null;
    a.$size = 0;
    a.$ordered = 0;
    a.$iterable = null;
}
function cbgu_Array__init_() {
    var var_0 = new cbgu_Array();
    cbgu_Array__init_1(var_0);
    return var_0;
}
function cbgu_Array__init_2(var_0) {
    var var_1 = new cbgu_Array();
    cbgu_Array__init_3(var_1, var_0);
    return var_1;
}
function cbgu_Array__init_0(var_0, var_1) {
    var var_2 = new cbgu_Array();
    cbgu_Array__init_4(var_2, var_0, var_1);
    return var_2;
}
function cbgu_Array__init_5(var_0, var_1, var_2) {
    var var_3 = new cbgu_Array();
    cbgu_Array__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgu_Array__init_7(var_0) {
    var var_1 = new cbgu_Array();
    cbgu_Array__init_8(var_1, var_0);
    return var_1;
}
function cbgu_Array__init_9(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgu_Array();
    cbgu_Array__init_10(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgu_Array__init_1($this) {
    cbgu_Array__init_4($this, 1, 16);
}
function cbgu_Array__init_3($this, $capacity) {
    cbgu_Array__init_4($this, 1, $capacity);
}
function cbgu_Array__init_4($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered = $ordered;
    $this.$items = $rt_createArray(jl_Object, $capacity);
}
function cbgu_Array__init_6($this, $ordered, $capacity, $arrayType) {
    jl_Object__init_0($this);
    $this.$ordered = $ordered;
    $this.$items = cbgur_ArrayReflection_newInstance($arrayType, $capacity);
}
function cbgu_Array__init_8($this, $array) {
    cbgu_Array__init_10($this, 1, $array, 0, $array.data.length);
}
function cbgu_Array__init_10($this, $ordered, $array, $start, $count) {
    cbgu_Array__init_6($this, $ordered, $count, (jl_Object_getClass($array)).$getComponentType());
    $this.$size = $count;
    jl_System_arraycopy($array, $start, $this.$items, 0, $this.$size);
}
function cbgu_Array_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items;
    var$3 = $items.data;
    if ($this.$size == var$3.length)
        $items = $this.$resize0(jl_Math_max(8, $this.$size * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size;
    $this.$size = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function cbgu_Array_addAll($this, $array) {
    $this.$addAll($array.$items, 0, $array.$size);
}
function cbgu_Array_addAll0($this, $array, $start, $count) {
    if (($start + $count | 0) <= $array.$size) {
        $this.$addAll($array.$items, $start, $count);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((((((jl_StringBuilder__init_()).$append1($rt_s(300))).$append2($start)).$append1($rt_s(301))).$append2($count)).$append1($rt_s(302))).$append2($array.$size)).$toString()));
}
function cbgu_Array_addAll1($this, $array, $start, $count) {
    var $items, var$5, $sizeNeeded;
    $items = $this.$items;
    var$5 = $items.data;
    $sizeNeeded = $this.$size + $count | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize0(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size * 1.75 | 0));
    jl_System_arraycopy($array, $start, $items, $this.$size, $count);
    $this.$size = $sizeNeeded;
}
function cbgu_Array_get($this, $index) {
    if ($index < $this.$size)
        return $this.$items.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(303))).$append2($index)).$append1($rt_s(304))).$append2($this.$size)).$toString()));
}
function cbgu_Array_removeValue($this, $value, $identity) {
    var $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!(!$identity && $value !== null)) {
            $i = 0;
            $n = $this.$size;
            while ($i < $n) {
                if ($items.data[$i] === $value) {
                    $this.$removeIndex($i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            $n = $this.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                if ($value.$equals($items.data[$i])) {
                    $this.$removeIndex($i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
}
function cbgu_Array_removeIndex($this, $index) {
    var $items, var$3, $value;
    if ($index >= $this.$size)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(303))).$append2($index)).$append1($rt_s(304))).$append2($this.$size)).$toString()));
    $items = $this.$items;
    var$3 = $items.data;
    $value = var$3[$index];
    $this.$size = $this.$size - 1 | 0;
    if (!$this.$ordered)
        var$3[$index] = var$3[$this.$size];
    else
        jl_System_arraycopy($items, $index + 1 | 0, $items, $index, $this.$size - $index | 0);
    var$3[$this.$size] = null;
    return $value;
}
function cbgu_Array_removeRange($this, $start, $end) {
    var $n, $items, $count, $lastIndex, var$7, $i;
    $n = $this.$size;
    if ($end >= $n)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(305))).$append2($end)).$append1($rt_s(304))).$append2($this.$size)).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(306))).$append2($start)).$append1($rt_s(307))).$append2($end)).$toString()));
    $items = $this.$items;
    $count = ($end - $start | 0) + 1 | 0;
    $lastIndex = $n - $count | 0;
    if ($this.$ordered) {
        var$7 = $start + $count | 0;
        jl_System_arraycopy($items, var$7, $items, $start, $n - var$7 | 0);
    } else {
        $i = jl_Math_max($lastIndex, $end + 1 | 0);
        jl_System_arraycopy($items, $i, $items, $start, $n - $i | 0);
    }
    $i = $lastIndex;
    while ($i < $n) {
        $items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size = $lastIndex;
}
function cbgu_Array_pop($this) {
    var $item;
    if (!$this.$size)
        $rt_throw(jl_IllegalStateException__init_($rt_s(308)));
    $this.$size = $this.$size - 1 | 0;
    $item = $this.$items.data[$this.$size];
    $this.$items.data[$this.$size] = null;
    return $item;
}
function cbgu_Array_peek($this) {
    if (!$this.$size)
        $rt_throw(jl_IllegalStateException__init_($rt_s(308)));
    return $this.$items.data[$this.$size - 1 | 0];
}
function cbgu_Array_first($this) {
    if (!$this.$size)
        $rt_throw(jl_IllegalStateException__init_($rt_s(308)));
    return $this.$items.data[0];
}
function cbgu_Array_clear($this) {
    ju_Arrays_fill1($this.$items, 0, $this.$size, null);
    $this.$size = 0;
}
function cbgu_Array_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(309))).$append2($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items.data.length)
        $this.$resize0(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size * 1.75 | 0));
    return $this.$items;
}
function cbgu_Array_resize($this, $newSize) {
    var $items, $newItems, var$4;
    $items = $this.$items;
    $newItems = cbgur_ArrayReflection_newInstance((jl_Object_getClass($items)).$getComponentType(), $newSize);
    var$4 = $newItems.data;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size, var$4.length));
    $this.$items = $newItems;
    return $newItems;
}
function cbgu_Array_iterator($this) {
    if (cbgu_Collections_allocateIterators)
        return cbgu_Array$ArrayIterator__init_($this, 1);
    if ($this.$iterable === null)
        $this.$iterable = cbgu_Array$ArrayIterable__init_($this);
    return $this.$iterable.$iterator0();
}
function cbgu_Array_truncate($this, $newSize) {
    var $i;
    if ($newSize < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(310))).$append2($newSize)).$toString()));
    if ($this.$size <= $newSize)
        return;
    $i = $newSize;
    while ($i < $this.$size) {
        $this.$items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size = $newSize;
}
function cbgu_Array_toArray($this) {
    return $this.$toArray0((jl_Object_getClass($this.$items)).$getComponentType());
}
function cbgu_Array_toArray0($this, $type) {
    var $result;
    $result = cbgur_ArrayReflection_newInstance($type, $this.$size);
    jl_System_arraycopy($this.$items, 0, $result, 0, $this.$size);
    return $result;
}
function cbgu_Array_hashCode($this) {
    var $items, $h, $i, $n, var$5, $item;
    if (!$this.$ordered)
        return jl_Object_hashCode($this);
    $items = $this.$items;
    $h = 1;
    $i = 0;
    $n = $this.$size;
    while ($i < $n) {
        var$5 = $items.data;
        $h = $h * 31 | 0;
        $item = var$5[$i];
        if ($item !== null)
            $h = $h + $item.$hashCode0() | 0;
        $i = $i + 1 | 0;
    }
    return $h;
}
function cbgu_Array_equals($this, $object) {
    var $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered)
        return 0;
    if (!($object instanceof cbgu_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered)
        return 0;
    $n = $this.$size;
    if ($n != $array.$size)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
}
function cbgu_Array_toString($this) {
    var $items, var$2, $buffer, $i;
    if (!$this.$size)
        return $rt_s(311);
    $items = $this.$items;
    var$2 = $items.data;
    $buffer = cbgu_StringBuilder__init_(32);
    $buffer.$append14(91);
    $buffer.$append16(var$2[0]);
    $i = 1;
    while ($i < $this.$size) {
        $buffer.$append17($rt_s(312));
        $buffer.$append16(var$2[$i]);
        $i = $i + 1 | 0;
    }
    $buffer.$append14(93);
    return $buffer.$toString();
}
function cbgu_Array_with($array) {
    return cbgu_Array__init_7($array);
}
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index0 = 0;
}
function jur_AtomicFSet__init_(var_0) {
    var var_1 = new jur_AtomicFSet();
    jur_AtomicFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_AtomicFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_AtomicFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    $this.$index0 = $stringIndex;
    return $stringIndex;
}
function jur_AtomicFSet_getIndex($this) {
    return $this.$index0;
}
function jur_AtomicFSet_getName($this) {
    return $rt_s(313);
}
function jur_AtomicFSet_hasConsumed($this, $mr) {
    return 0;
}
var cbggg_IndexData = $rt_classWithoutFields(0);
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
function jur_LowSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_LowSurrogateCharSet__init_0($this, $low) {
    jur_JointSet__init_0($this);
    $this.$low = $low;
}
function jur_LowSurrogateCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_LowSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $low = $testString.$charAt($stringIndex);
    if ($stringIndex > $matchResult.$getLeftBound()) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    if ($this.$low != $low)
        return (-1);
    return $this.$next.$matches(var$4, $testString, $matchResult);
}
function jur_LowSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = $testStr.$indexOf($this.$low, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
}
function jur_LowSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $startStr, $testStr, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$getLeftBound();
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($this.$low, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
                $lastIndex = var$7 + (-2) | 0;
                continue;
            }
            if ($this.$next.$matches(var$7 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_LowSurrogateCharSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$low;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_LowSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
}
function jur_LowSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var jl_AssertionError = $rt_classWithoutFields(jl_Error);
function jl_AssertionError__init_(var_0, var_1) {
    var var_2 = new jl_AssertionError();
    jl_AssertionError__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_AssertionError__init_0($this, $message, $cause) {
    jl_Error__init_0($this, $message, $cause);
}
var cbgm_MathUtils$Sin = $rt_classWithoutFields();
var cbgm_MathUtils$Sin_table = null;
function cbgm_MathUtils$Sin_$callClinit() {
    cbgm_MathUtils$Sin_$callClinit = $rt_eraseClinit(cbgm_MathUtils$Sin);
    cbgm_MathUtils$Sin__clinit_();
}
function cbgm_MathUtils$Sin__clinit_() {
    var $i;
    cbgm_MathUtils$Sin_table = $rt_createFloatArray(16384);
    $i = 0;
    while ($i < 16384) {
        cbgm_MathUtils$Sin_table.data[$i] = jl_Math_sin(($i + 0.5) / 16384.0 * 6.2831854820251465);
        $i = $i + 1 | 0;
    }
    cbgm_MathUtils$Sin_table.data[0] = 0.0;
    cbgm_MathUtils$Sin_table.data[4096] = 1.0;
    cbgm_MathUtils$Sin_table.data[8192] = 0.0;
    cbgm_MathUtils$Sin_table.data[12288] = (-1.0);
}
var cbggg_Batch = $rt_classWithoutFields(0);
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier = null;
}
function jur_CompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
}
function jur_CompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier.$min3();
    $max = $this.$quantifier.$max2();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_CompositeQuantifierSet_getName($this) {
    return $this.$quantifier.$toString();
}
var jm_Division = $rt_classWithoutFields();
function jm_Division_divide($quot, $quotLength, $a, $j, $b, $bLength) {
    var var$7, $normA, $normB, var$10, $divisorShift, var$12, $firstDivisorDigit, $i, var$15, $product, $res, $rem, $rOverflowed, var$20, var$21, var$22, $longR, var$24, $borrow, $carry, $k;
    var$7 = $b.data;
    $normA = $rt_createIntArray($j + 1 | 0);
    $normB = $rt_createIntArray($bLength + 1 | 0);
    var$10 = $bLength - 1 | 0;
    $divisorShift = jl_Integer_numberOfLeadingZeros(var$7[var$10]);
    if ($divisorShift) {
        jm_BitLevel_shiftLeft($normB, $b, 0, $divisorShift);
        jm_BitLevel_shiftLeft($normA, $a, 0, $divisorShift);
    } else {
        jl_System_arraycopy($a, 0, $normA, 0, $j);
        jl_System_arraycopy($b, 0, $normB, 0, $bLength);
    }
    var$12 = $normB.data;
    $firstDivisorDigit = var$12[var$10];
    $i = $quotLength - 1 | 0;
    while ($i >= 0) {
        a: {
            var$7 = $normA.data;
            if (var$7[$j] == $firstDivisorDigit)
                var$15 = (-1);
            else {
                $product = Long_add(Long_shl(Long_and(Long_fromInt(var$7[$j]), Long_create(4294967295, 0)), 32), Long_and(Long_fromInt(var$7[$j - 1 | 0]), Long_create(4294967295, 0)));
                $res = jm_Division_divideLongByInt($product, $firstDivisorDigit);
                var$15 = Long_lo($res);
                $rem = Long_hi($res);
                if (var$15) {
                    $rOverflowed = 0;
                    var$15 = var$15 + 1 | 0;
                    while (true) {
                        var$15 = var$15 + (-1) | 0;
                        if ($rOverflowed)
                            break;
                        var$20 = Long_mul(Long_and(Long_fromInt(var$15), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$12[$bLength - 2 | 0]), Long_create(4294967295, 0)));
                        var$21 = Long_fromInt($rem);
                        var$22 = Long_add(Long_shl(var$21, 32), Long_and(Long_fromInt(var$7[$j - 2 | 0]), Long_create(4294967295, 0)));
                        $longR = Long_add(Long_and(var$21, Long_create(4294967295, 0)), Long_and(Long_fromInt($firstDivisorDigit), Long_create(4294967295, 0)));
                        if (jl_Integer_numberOfLeadingZeros(Long_hi($longR)) >= 32)
                            $rem = Long_lo($longR);
                        else
                            $rOverflowed = 1;
                        if (Long_le(Long_xor(var$20, Long_create(0, 2147483648)), Long_xor(var$22, Long_create(0, 2147483648))))
                            break a;
                    }
                }
            }
        }
        if (var$15) {
            var$24 = $j - $bLength | 0;
            $borrow = jm_Division_multiplyAndSubtract($normA, var$24, $normB, $bLength, var$15);
            if ($borrow) {
                var$15 = var$15 + (-1) | 0;
                $carry = Long_ZERO;
                $k = 0;
                while ($k < $bLength) {
                    var$10 = var$24 + $k | 0;
                    var$21 = Long_add($carry, Long_add(Long_and(Long_fromInt(var$7[var$10]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$12[$k]), Long_create(4294967295, 0))));
                    var$7[var$10] = Long_lo(var$21);
                    $carry = Long_shru(var$21, 32);
                    $k = $k + 1 | 0;
                }
            }
        }
        if ($quot !== null)
            $quot.data[$i] = var$15;
        $j = $j + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    if ($divisorShift) {
        jm_BitLevel_shiftRight($normB, $bLength, $normA, 0, $divisorShift);
        return $normB;
    }
    jl_System_arraycopy($normA, 0, $normB, 0, $bLength);
    return $normA;
}
function jm_Division_divideArrayByInt($dest, $src, $srcLength, $divisor) {
    var $rem, $bLong, $i, var$8, $temp, $quot, $aPos, $bPos, var$13;
    $rem = Long_ZERO;
    $bLong = Long_and(Long_fromInt($divisor), Long_create(4294967295, 0));
    $i = $srcLength - 1 | 0;
    while ($i >= 0) {
        var$8 = $src.data;
        $temp = Long_or(Long_shl($rem, 32), Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)));
        if (Long_ge($temp, Long_ZERO)) {
            $quot = Long_div($temp, $bLong);
            $rem = Long_rem($temp, $bLong);
        } else {
            $aPos = Long_shru($temp, 1);
            $bPos = Long_fromInt($divisor >>> 1 | 0);
            $quot = Long_div($aPos, $bPos);
            var$13 = Long_rem($aPos, $bPos);
            $rem = Long_add(Long_shl(var$13, 1), Long_and($temp, Long_fromInt(1)));
            if ($divisor & 1) {
                if (Long_le($quot, $rem))
                    $rem = Long_sub($rem, $quot);
                else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                    $rem = Long_add($rem, Long_sub($bLong, $quot));
                    $quot = Long_sub($quot, Long_fromInt(1));
                } else {
                    $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                    $quot = Long_sub($quot, Long_fromInt(2));
                }
            }
        }
        $dest.data[$i] = Long_lo(Long_and($quot, Long_create(4294967295, 0)));
        $i = $i + (-1) | 0;
    }
    return Long_lo($rem);
}
function jm_Division_divideLongByInt($a, $b) {
    var $bLong, $quot, $rem, $aPos, $bPos;
    $bLong = Long_and(Long_fromInt($b), Long_create(4294967295, 0));
    if (Long_ge($a, Long_ZERO)) {
        $quot = Long_div($a, $bLong);
        $rem = Long_rem($a, $bLong);
    } else {
        $aPos = Long_shru($a, 1);
        $bPos = Long_fromInt($b >>> 1 | 0);
        $quot = Long_div($aPos, $bPos);
        $rem = Long_rem($aPos, $bPos);
        $rem = Long_add(Long_shl($rem, 1), Long_and($a, Long_fromInt(1)));
        if ($b & 1) {
            if (Long_le($quot, $rem))
                $rem = Long_sub($rem, $quot);
            else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                $rem = Long_add($rem, Long_sub($bLong, $quot));
                $quot = Long_sub($quot, Long_fromInt(1));
            } else {
                $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                $quot = Long_sub($quot, Long_fromInt(2));
            }
        }
    }
    return Long_or(Long_shl($rem, 32), Long_and($quot, Long_create(4294967295, 0)));
}
function jm_Division_multiplyAndSubtract($a, $start, $b, $bLen, $c) {
    var $carry0, $carry1, $i, var$9, var$10, var$11, var$12, var$13, var$14;
    $carry0 = Long_ZERO;
    $carry1 = Long_ZERO;
    $i = 0;
    while ($i < $bLen) {
        var$9 = $a.data;
        var$10 = jm_Multiplication_unsignedMultAddAdd($b.data[$i], $c, Long_lo($carry0), 0);
        var$11 = $start + $i | 0;
        var$12 = Long_add(Long_sub(Long_and(Long_fromInt(var$9[var$11]), Long_create(4294967295, 0)), Long_and(var$10, Long_create(4294967295, 0))), $carry1);
        var$9[var$11] = Long_lo(var$12);
        $carry1 = Long_shr(var$12, 32);
        $carry0 = Long_shru(var$10, 32);
        $i = $i + 1 | 0;
    }
    var$13 = $a.data;
    var$14 = $start + $bLen | 0;
    var$12 = Long_add(Long_sub(Long_and(Long_fromInt(var$13[var$14]), Long_create(4294967295, 0)), $carry0), $carry1);
    var$13[var$14] = Long_lo(var$12);
    return Long_hi(var$12);
}
var jm_BitLevel = $rt_classWithoutFields();
function jm_BitLevel_bitLength($val) {
    var $bLength, $highDigit, $i, var$5;
    if (!$val.$sign1)
        return 0;
    $bLength = $val.$numberLength << 5;
    $highDigit = $val.$digits.data[$val.$numberLength - 1 | 0];
    if ($val.$sign1 < 0) {
        $i = $val.$getFirstNonzeroDigit();
        if ($i == ($val.$numberLength - 1 | 0))
            $highDigit = $highDigit + (-1) | 0;
    }
    var$5 = $bLength - jl_Integer_numberOfLeadingZeros($highDigit) | 0;
    return var$5;
}
function jm_BitLevel_shiftLeft0($source, $count) {
    var $intCount, var$4, $resLength, $resDigits, $result;
    $intCount = $count >> 5;
    var$4 = $count & 31;
    $resLength = ($source.$numberLength + $intCount | 0) + (var$4 ? 1 : 0) | 0;
    $resDigits = $rt_createIntArray($resLength);
    jm_BitLevel_shiftLeft($resDigits, $source.$digits, $intCount, var$4);
    $result = jm_BigInteger__init_($source.$sign1, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BitLevel_shiftLeft($result, $source, $intCount, $count) {
    var var$5, $rightShiftCount, $i, var$8, var$9, var$10;
    a: {
        if (!$count)
            jl_System_arraycopy($source, 0, $result, $intCount, $result.data.length - $intCount | 0);
        else {
            var$5 = $result.data;
            $rightShiftCount = 32 - $count | 0;
            $i = var$5.length - 1 | 0;
            var$5[$i] = 0;
            while (true) {
                if ($i <= $intCount)
                    break a;
                var$8 = $source.data;
                var$9 = var$5[$i];
                var$10 = ($i - $intCount | 0) - 1 | 0;
                var$5[$i] = var$9 | (var$8[var$10] >>> $rightShiftCount | 0);
                var$5[$i - 1 | 0] = var$8[var$10] << $count;
                $i = $i + (-1) | 0;
            }
        }
    }
    $i = 0;
    while ($i < $intCount) {
        $result.data[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function jm_BitLevel_shiftLeftOneBit($result, $source, $srcLen) {
    var $carry, $i, var$6, $val;
    $carry = 0;
    $i = 0;
    while ($i < $srcLen) {
        var$6 = $result.data;
        $val = $source.data[$i];
        var$6[$i] = $val << 1 | $carry;
        $carry = $val >>> 31 | 0;
        $i = $i + 1 | 0;
    }
    if ($carry)
        $result.data[$srcLen] = $carry;
}
function jm_BitLevel_shiftRight0($source, $count) {
    var $intCount, var$4, var$5, $resLength, var$7, $resDigits, $i, var$10, var$11, var$12, $result;
    $intCount = $count >> 5;
    var$4 = $count & 31;
    if ($intCount >= $source.$numberLength) {
        if ($source.$sign1 >= 0) {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_ZERO;
        } else {
            jm_BigInteger_$callClinit();
            var$5 = jm_BigInteger_MINUS_ONE;
        }
        return var$5;
    }
    a: {
        $resLength = $source.$numberLength - $intCount | 0;
        var$7 = $resLength + 1 | 0;
        $resDigits = $rt_createIntArray(var$7);
        jm_BitLevel_shiftRight($resDigits, $resLength, $source.$digits, $intCount, var$4);
        if ($source.$sign1 >= 0)
            var$7 = $resLength;
        else {
            $i = 0;
            while (true) {
                var$10 = $rt_compare($i, $intCount);
                if (var$10 >= 0)
                    break;
                if ($source.$digits.data[$i])
                    break;
                $i = $i + 1 | 0;
            }
            if (var$10 >= 0) {
                if (var$4 <= 0) {
                    var$7 = $resLength;
                    break a;
                }
                if (!($source.$digits.data[$i] << (32 - var$4 | 0))) {
                    var$7 = $resLength;
                    break a;
                }
            }
            var$4 = 0;
            while (true) {
                var$11 = $rt_compare(var$4, $resLength);
                if (var$11 >= 0)
                    break;
                var$12 = $resDigits.data;
                if (var$12[var$4] != (-1))
                    break;
                var$12[var$4] = 0;
                var$4 = var$4 + 1 | 0;
            }
            if (var$11)
                var$7 = $resLength;
            var$12 = $resDigits.data;
            var$12[var$4] = var$12[var$4] + 1 | 0;
        }
    }
    $result = jm_BigInteger__init_($source.$sign1, var$7, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BitLevel_shiftRight($result, $resultLen, $source, $intCount, $count) {
    var $allZero, $i, var$8, $leftShiftCount, var$10, var$11, var$12;
    $allZero = 1;
    $i = 0;
    while ($i < $intCount) {
        $allZero = $allZero & ($source.data[$i] ? 0 : 1);
        $i = $i + 1 | 0;
    }
    if (!$count)
        jl_System_arraycopy($source, $intCount, $result, 0, $resultLen);
    else {
        var$8 = $source.data;
        $leftShiftCount = 32 - $count | 0;
        $allZero = $allZero & (var$8[$i] << $leftShiftCount ? 0 : 1);
        var$10 = 0;
        while (var$10 < ($resultLen - 1 | 0)) {
            var$11 = $result.data;
            var$12 = var$10 + $intCount | 0;
            var$11[var$10] = (var$8[var$12] >>> $count | 0) | var$8[var$12 + 1 | 0] << $leftShiftCount;
            var$10 = var$10 + 1 | 0;
        }
        $result.data[var$10] = var$8[var$10 + $intCount | 0] >>> $count | 0;
    }
    return $allZero;
}
function jur_SupplRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$chars0 = null;
    a.$alt1 = 0;
}
function jur_SupplRangeSet__init_(var_0) {
    var var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplRangeSet__init_0($this, $cc) {
    jur_JointSet__init_0($this);
    $this.$chars0 = $cc.$getInstance();
    $this.$alt1 = $cc.$alt0;
}
function jur_SupplRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, $offset, var$8, $low;
    $strLength = $matchResult.$getRightBound();
    if ($stringIndex < $strLength) {
        var$5 = $stringIndex + 1 | 0;
        $high = $testString.$charAt($stringIndex);
        if ($this.$contains0($high)) {
            $offset = $this.$next.$matches(var$5, $testString, $matchResult);
            if ($offset > 0)
                return $offset;
        }
        if (var$5 < $strLength) {
            var$8 = var$5 + 1 | 0;
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains0(jl_Character_toCodePoint($high, $low)))
                return $this.$next.$matches(var$8, $testString, $matchResult);
        }
    }
    return (-1);
}
function jur_SupplRangeSet_getName($this) {
    var var$1, var$2, var$3;
    var$1 = !$this.$alt1 ? $rt_s(38) : $rt_s(39);
    var$2 = $this.$chars0.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(40)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
}
function jur_SupplRangeSet_contains($this, $ch) {
    return $this.$chars0.$contains0($ch);
}
function jur_SupplRangeSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$getCodePoint());
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$getChar());
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars0, $set.$chars0);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects0($this.$chars0, $set.$getChars0());
}
function jur_SupplRangeSet_getChars($this) {
    return $this.$chars0;
}
function jur_SupplRangeSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_SupplRangeSet_hasConsumed($this, $mr) {
    return 1;
}
var cbgss_Event = $rt_classWithoutFields();
var cbgssu_ChangeListener$ChangeEvent = $rt_classWithoutFields(cbgss_Event);
function jl_String() {
    var a = this; jl_Object.call(a);
    a.$characters = null;
    a.$hashCode1 = 0;
}
var jl_String_EMPTY_CHARS = null;
var jl_String_EMPTY = null;
var jl_String_CASE_INSENSITIVE_ORDER = null;
function jl_String_$callClinit() {
    jl_String_$callClinit = $rt_eraseClinit(jl_String);
    jl_String__clinit_();
}
function jl_String__init_1() {
    var var_0 = new jl_String();
    jl_String__init_2(var_0);
    return var_0;
}
function jl_String__init_(var_0) {
    var var_1 = new jl_String();
    jl_String__init_3(var_1, var_0);
    return var_1;
}
function jl_String__init_0(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_5(var_0, var_1, var_2) {
    var var_3 = new jl_String();
    jl_String__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function jl_String__init_2($this) {
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = jl_String_EMPTY_CHARS;
}
function jl_String__init_3($this, $characters) {
    var var$2, var$3, $i;
    jl_String_$callClinit();
    var$2 = $characters.data;
    jl_Object__init_0($this);
    var$3 = var$2.length;
    $this.$characters = $rt_createCharArray(var$3);
    $i = 0;
    while ($i < var$3) {
        $this.$characters.data[$i] = var$2[$i];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_4($this, $value, $offset, $count) {
    var $i, var$5;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count);
    $i = 0;
    while ($i < $count) {
        var$5 = $value.data;
        $this.$characters.data[$i] = var$5[$i + $offset | 0];
        $i = $i + 1 | 0;
    }
}
function jl_String__init_6($this, $codePoints, $offset, $count) {
    var $charCount, $i, var$6, var$7, $codePoint, var$9, var$10;
    jl_String_$callClinit();
    jl_Object__init_0($this);
    $this.$characters = $rt_createCharArray($count * 2 | 0);
    $charCount = 0;
    $i = 0;
    while ($i < $count) {
        var$6 = $codePoints.data;
        var$7 = $offset + 1 | 0;
        $codePoint = var$6[$offset];
        if ($codePoint < 65536) {
            var$6 = $this.$characters.data;
            var$9 = $charCount + 1 | 0;
            var$6[$charCount] = $codePoint & 65535;
        } else {
            var$6 = $this.$characters.data;
            var$10 = $charCount + 1 | 0;
            var$6[$charCount] = jl_Character_highSurrogate($codePoint);
            var$6 = $this.$characters.data;
            var$9 = var$10 + 1 | 0;
            var$6[var$10] = jl_Character_lowSurrogate($codePoint);
        }
        $i = $i + 1 | 0;
        $offset = var$7;
        $charCount = var$9;
    }
    if ($charCount < $this.$characters.data.length)
        $this.$characters = ju_Arrays_copyOf0($this.$characters, $charCount);
}
function jl_String_charAt($this, $index) {
    if ($index >= 0 && $index < $this.$characters.data.length)
        return $this.$characters.data[$index];
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
}
function jl_String_length($this) {
    return $this.$characters.data.length;
}
function jl_String_isEmpty($this) {
    return $this.$characters.data.length ? 0 : 1;
}
function jl_String_getChars($this, $srcBegin, $srcEnd, $dst, $dstBegin) {
    var var$5, var$6, var$7;
    if ($srcBegin >= 0 && $srcBegin <= $srcEnd && $srcEnd <= $this.$length() && $dstBegin >= 0) {
        var$5 = $dst.data;
        if (($dstBegin + ($srcEnd - $srcBegin | 0) | 0) <= var$5.length) {
            while ($srcBegin < $srcEnd) {
                var$6 = $dstBegin + 1 | 0;
                var$7 = $srcBegin + 1 | 0;
                var$5[$dstBegin] = $this.$charAt($srcBegin);
                $dstBegin = var$6;
                $srcBegin = var$7;
            }
            return;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function jl_String_startsWith($this, $prefix, $toffset) {
    var $i, var$4, var$5;
    if (($toffset + $prefix.$length() | 0) > $this.$length())
        return 0;
    $i = 0;
    while ($i < $prefix.$length()) {
        var$4 = $prefix.$charAt($i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != $this.$charAt($toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
}
function jl_String_startsWith0($this, $prefix) {
    if ($this === $prefix)
        return 1;
    return $this.$startsWith($prefix, 0);
}
function jl_String_endsWith($this, $suffix) {
    var $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$length() > $this.$length())
        return 0;
    $j = 0;
    $i = $this.$length() - $suffix.$length() | 0;
    while ($i < $this.$length()) {
        var$4 = $this.$charAt($i);
        var$5 = $j + 1 | 0;
        if (var$4 != $suffix.$charAt($j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
}
function jl_String_indexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$characters.data.length)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$characters.data.length - 1 | 0))
            return (-1);
        if ($this.$characters.data[$i] == $hi && $this.$characters.data[$i + 1 | 0] == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf0($this, $ch) {
    return $this.$indexOf($ch, 0);
}
function jl_String_lastIndexOf($this, $ch, $fromIndex) {
    var $i, $bmpChar, $hi, $lo, var$7, var$8;
    $i = jl_Math_min($fromIndex, $this.$length() - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$characters.data[$i] == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$characters.data[$i] == $lo) {
            var$7 = $this.$characters.data;
            var$8 = $i - 1 | 0;
            if (var$7[var$8] == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return var$8;
}
function jl_String_lastIndexOf0($this, $ch) {
    return $this.$lastIndexOf1($ch, $this.$length() - 1 | 0);
}
function jl_String_indexOf1($this, $str, $fromIndex) {
    var $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = $this.$length() - $str.$length() | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
}
function jl_String_indexOf2($this, $str) {
    return $this.$indexOf0($str, 0);
}
function jl_String_lastIndexOf1($this, $str, $fromIndex) {
    var $i, $j;
    $i = jl_Math_min($fromIndex, $this.$length() - $str.$length() | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
}
function jl_String_lastIndexOf2($this, $str) {
    return $this.$lastIndexOf2($str, $this.$length());
}
function jl_String_substring($this, $beginIndex, $endIndex) {
    var var$3;
    var$3 = $rt_compare($beginIndex, $endIndex);
    if (var$3 > 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if (!var$3) {
        jl_String_$callClinit();
        return jl_String_EMPTY;
    }
    if (!$beginIndex && $endIndex == $this.$length())
        return $this;
    return jl_String__init_0($this.$characters, $beginIndex, $endIndex - $beginIndex | 0);
}
function jl_String_substring0($this, $beginIndex) {
    return $this.$substring0($beginIndex, $this.$length());
}
function jl_String_subSequence($this, $beginIndex, $endIndex) {
    return $this.$substring0($beginIndex, $endIndex);
}
function jl_String_contains($this, $s) {
    var $sz, $i, $j;
    $sz = $this.$length() - $s.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        while (true) {
            if ($j >= $s.$length())
                return 1;
            if ($this.$charAt($i + $j | 0) != $s.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return 0;
}
function jl_String_replace($this, $target, $replacement) {
    var $sb, $sz, $i, $j;
    $sb = jl_StringBuilder__init_();
    $sz = $this.$length() - $target.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= $target.$length()) {
                    $sb.$append($replacement);
                    $i = $i + ($target.$length() - 1 | 0) | 0;
                    break a;
                }
                if ($this.$charAt($i + $j | 0) != $target.$charAt($j))
                    break;
                $j = $j + 1 | 0;
            }
            $sb.$append0($this.$charAt($i));
        }
        $i = $i + 1 | 0;
    }
    $sb.$append($this.$substring($i));
    return $sb.$toString();
}
function jl_String_trim($this) {
    var $lower, $upper;
    $lower = 0;
    $upper = $this.$length() - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if ($this.$charAt($lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && $this.$charAt($upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return $this.$substring0($lower, $upper + 1 | 0);
}
function jl_String_toString($this) {
    return $this;
}
function jl_String_toCharArray($this) {
    var $array, $i, var$3;
    $array = $rt_createCharArray($this.$characters.data.length);
    $i = 0;
    while (true) {
        var$3 = $array.data;
        if ($i >= var$3.length)
            break;
        var$3[$i] = $this.$characters.data[$i];
        $i = $i + 1 | 0;
    }
    return $array;
}
function jl_String_valueOf0($obj) {
    jl_String_$callClinit();
    return $obj === null ? $rt_s(48) : $obj.$toString();
}
function jl_String_valueOf1($data, $offset, $count) {
    jl_String_$callClinit();
    return jl_String__init_0($data, $offset, $count);
}
function jl_String_valueOf2($c) {
    var var$2, var$3;
    jl_String_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_3(var$2, var$3);
    return var$2;
}
function jl_String_valueOf($i) {
    jl_String_$callClinit();
    return ((jl_StringBuilder__init_()).$append2($i)).$toString();
}
function jl_String_equals($this, $other) {
    var $str, $i;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    if ($str.$length() != $this.$length())
        return 0;
    $i = 0;
    while ($i < $str.$length()) {
        if ($this.$charAt($i) != $str.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function jl_String_getBytes($this, $charsetName) {
    return $this.$getBytes(jnc_Charset_forName($charsetName.$toString()));
}
function jl_String_getBytes0($this, $charset) {
    var $buffer, $result;
    $buffer = jnc_Charset_encode($charset, jn_CharBuffer_wrap0($this.$characters));
    if ($buffer.$hasArray() && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        return jn_ByteBuffer_array($buffer);
    $result = $rt_createByteArray(jn_Buffer_remaining($buffer));
    $buffer.$get6($result);
    return $result;
}
function jl_String_hashCode($this) {
    var var$1, var$2, var$3, $c;
    a: {
        if (!$this.$hashCode1) {
            var$1 = $this.$characters.data;
            var$2 = var$1.length;
            var$3 = 0;
            while (true) {
                if (var$3 >= var$2)
                    break a;
                $c = var$1[var$3];
                $this.$hashCode1 = (31 * $this.$hashCode1 | 0) + $c | 0;
                var$3 = var$3 + 1 | 0;
            }
        }
    }
    return $this.$hashCode1;
}
function jl_String_toLowerCase($this) {
    var $codePoints, $codePointCount, $i, var$4, var$5, var$6, var$7, var$8;
    if ($this.$isEmpty())
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$4 = $this.$characters.data;
                var$5 = $i + 1 | 0;
                var$6 = var$4[var$5];
                if (jl_Character_isLowSurrogate(var$6)) {
                    var$7 = $codePoints.data;
                    var$8 = $codePointCount + 1 | 0;
                    var$7[$codePointCount] = jl_Character_toLowerCase(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$5]));
                    $i = var$5;
                    break a;
                }
            }
            var$7 = $codePoints.data;
            var$8 = $codePointCount + 1 | 0;
            var$7[$codePointCount] = jl_Character_toLowerCase0($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$8;
    }
    return jl_String__init_5($codePoints, 0, $codePointCount);
}
function jl_String_toUpperCase($this) {
    var $codePoints, $codePointCount, $i, var$4, var$5, var$6, var$7, var$8;
    if ($this.$isEmpty())
        return $this;
    $codePoints = $rt_createIntArray($this.$characters.data.length);
    $codePointCount = 0;
    $i = 0;
    while ($i < $this.$characters.data.length) {
        a: {
            if ($i != ($this.$characters.data.length - 1 | 0) && jl_Character_isHighSurrogate($this.$characters.data[$i])) {
                var$4 = $this.$characters.data;
                var$5 = $i + 1 | 0;
                var$6 = var$4[var$5];
                if (jl_Character_isLowSurrogate(var$6)) {
                    var$7 = $codePoints.data;
                    var$8 = $codePointCount + 1 | 0;
                    var$7[$codePointCount] = jl_Character_toUpperCase(jl_Character_toCodePoint($this.$characters.data[$i], $this.$characters.data[var$5]));
                    $i = var$5;
                    break a;
                }
            }
            var$7 = $codePoints.data;
            var$8 = $codePointCount + 1 | 0;
            var$7[$codePointCount] = jl_Character_toUpperCase0($this.$characters.data[$i]);
        }
        $i = $i + 1 | 0;
        $codePointCount = var$8;
    }
    return jl_String__init_5($codePoints, 0, $codePointCount);
}
function jl_String_split($this, $regex) {
    return jur_Pattern_split(jur_Pattern_compile($regex), $this.$toString());
}
function jl_String_split0($this, $regex, $limit) {
    return jur_Pattern_split0(jur_Pattern_compile($regex), $this.$toString(), $limit);
}
function jl_String_replaceAll($this, $regex, $replacement) {
    return jur_Matcher_replaceAll(jur_Pattern_matcher(jur_Pattern_compile($regex), $this.$toString()), $replacement);
}
function jl_String__clinit_() {
    jl_String_EMPTY_CHARS = $rt_createCharArray(0);
    jl_String_EMPTY = jl_String__init_1();
    jl_String_CASE_INSENSITIVE_ORDER = jl_String$_clinit_$lambda$_89_0__init_();
}
function otcic_ConsoleOutputStream() {
    ji_OutputStream.call(this);
    this.$buffer1 = null;
}
function otcic_ConsoleOutputStream__init_($this) {
    ji_OutputStream__init_($this);
    $this.$buffer1 = $rt_createByteArray(1);
}
var otcic_StderrOutputStream = $rt_classWithoutFields(otcic_ConsoleOutputStream);
var otcic_StderrOutputStream_INSTANCE = null;
function otcic_StderrOutputStream_$callClinit() {
    otcic_StderrOutputStream_$callClinit = $rt_eraseClinit(otcic_StderrOutputStream);
    otcic_StderrOutputStream__clinit_();
}
function otcic_StderrOutputStream__init_() {
    var var_0 = new otcic_StderrOutputStream();
    otcic_StderrOutputStream__init_0(var_0);
    return var_0;
}
function otcic_StderrOutputStream__init_0($this) {
    otcic_StderrOutputStream_$callClinit();
    otcic_ConsoleOutputStream__init_($this);
}
function otcic_StderrOutputStream_write($this, $b, $off, $len) {
    otcic_Console_writeStderr($b, $off, $len);
}
function otcic_StderrOutputStream__clinit_() {
    otcic_StderrOutputStream_INSTANCE = otcic_StderrOutputStream__init_();
}
var cbgssu_UIUtilsEmu = $rt_classWithoutFields();
var cbgssu_UIUtilsEmu_isAndroid = 0;
var cbgssu_UIUtilsEmu_isMac = 0;
var cbgssu_UIUtilsEmu_isWindows = 0;
var cbgssu_UIUtilsEmu_isLinux = 0;
var cbgssu_UIUtilsEmu_isIos = 0;
function cbgssu_UIUtilsEmu_$callClinit() {
    cbgssu_UIUtilsEmu_$callClinit = $rt_eraseClinit(cbgssu_UIUtilsEmu);
    cbgssu_UIUtilsEmu__clinit_();
}
function cbgssu_UIUtilsEmu__clinit_() {
    var var$1;
    cbgssu_UIUtilsEmu_isAndroid = $rt_str($rt_globals.navigator.platform).$contains($rt_s(15));
    cbgssu_UIUtilsEmu_isMac = $rt_str($rt_globals.navigator.platform).$contains($rt_s(16));
    cbgssu_UIUtilsEmu_isWindows = $rt_str($rt_globals.navigator.platform).$contains($rt_s(17));
    cbgssu_UIUtilsEmu_isLinux = !$rt_str($rt_globals.navigator.platform).$contains($rt_s(18)) && !$rt_str($rt_globals.navigator.platform).$contains($rt_s(19)) ? 0 : 1;
    var$1 = !$rt_str($rt_globals.navigator.platform).$contains($rt_s(20)) && !$rt_str($rt_globals.navigator.platform).$contains($rt_s(21)) && !$rt_str($rt_globals.navigator.platform).$contains($rt_s(22)) ? 0 : 1;
    cbgssu_UIUtilsEmu_isIos = var$1;
}
function jn_IntBufferOverArray() {
    var a = this; jn_IntBufferImpl.call(a);
    a.$readOnly3 = 0;
    a.$start4 = 0;
    a.$array2 = null;
}
function jn_IntBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverArray();
    jn_IntBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_IntBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start4 = $start;
    $this.$readOnly3 = $readOnly;
    $this.$array2 = $array;
}
function jn_IntBufferOverArray_getElement($this, $index) {
    return $this.$array2.data[$index + $this.$start4 | 0];
}
function jn_IntBufferOverArray_putElement($this, $index, $value) {
    $this.$array2.data[$index + $this.$start4 | 0] = $value;
}
function jn_IntBufferOverArray_readOnly($this) {
    return $this.$readOnly3;
}
var cbgss_InputEvent$Type = $rt_classWithoutFields(jl_Enum);
var cbgss_InputEvent$Type_touchDown = null;
var cbgss_InputEvent$Type_touchUp = null;
var cbgss_InputEvent$Type_touchDragged = null;
var cbgss_InputEvent$Type_mouseMoved = null;
var cbgss_InputEvent$Type_enter = null;
var cbgss_InputEvent$Type_exit = null;
var cbgss_InputEvent$Type_scrolled = null;
var cbgss_InputEvent$Type_keyDown = null;
var cbgss_InputEvent$Type_keyUp = null;
var cbgss_InputEvent$Type_keyTyped = null;
var cbgss_InputEvent$Type_$VALUES = null;
function cbgss_InputEvent$Type_$callClinit() {
    cbgss_InputEvent$Type_$callClinit = $rt_eraseClinit(cbgss_InputEvent$Type);
    cbgss_InputEvent$Type__clinit_();
}
function cbgss_InputEvent$Type__init_(var_0, var_1) {
    var var_2 = new cbgss_InputEvent$Type();
    cbgss_InputEvent$Type__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgss_InputEvent$Type_values() {
    cbgss_InputEvent$Type_$callClinit();
    return cbgss_InputEvent$Type_$VALUES.$clone();
}
function cbgss_InputEvent$Type__init_0($this, var$1, var$2) {
    cbgss_InputEvent$Type_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgss_InputEvent$Type__clinit_() {
    cbgss_InputEvent$Type_touchDown = cbgss_InputEvent$Type__init_($rt_s(314), 0);
    cbgss_InputEvent$Type_touchUp = cbgss_InputEvent$Type__init_($rt_s(315), 1);
    cbgss_InputEvent$Type_touchDragged = cbgss_InputEvent$Type__init_($rt_s(316), 2);
    cbgss_InputEvent$Type_mouseMoved = cbgss_InputEvent$Type__init_($rt_s(317), 3);
    cbgss_InputEvent$Type_enter = cbgss_InputEvent$Type__init_($rt_s(318), 4);
    cbgss_InputEvent$Type_exit = cbgss_InputEvent$Type__init_($rt_s(319), 5);
    cbgss_InputEvent$Type_scrolled = cbgss_InputEvent$Type__init_($rt_s(320), 6);
    cbgss_InputEvent$Type_keyDown = cbgss_InputEvent$Type__init_($rt_s(321), 7);
    cbgss_InputEvent$Type_keyUp = cbgss_InputEvent$Type__init_($rt_s(322), 8);
    cbgss_InputEvent$Type_keyTyped = cbgss_InputEvent$Type__init_($rt_s(323), 9);
    cbgss_InputEvent$Type_$VALUES = $rt_createArrayFromData(cbgss_InputEvent$Type, [cbgss_InputEvent$Type_touchDown, cbgss_InputEvent$Type_touchUp, cbgss_InputEvent$Type_touchDragged, cbgss_InputEvent$Type_mouseMoved, cbgss_InputEvent$Type_enter, cbgss_InputEvent$Type_exit, cbgss_InputEvent$Type_scrolled, cbgss_InputEvent$Type_keyDown, cbgss_InputEvent$Type_keyUp, cbgss_InputEvent$Type_keyTyped]);
}
var jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_UTF8Encoder__init_(var_0) {
    var var_1 = new jnci_UTF8Encoder();
    jnci_UTF8Encoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_UTF8Encoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_($this, $cs, 2.0, 4.0);
}
function jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $ch, var$12, var$13, var$14, $low, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput0(3))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$14 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                var$13 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $ch >> 6 & 63) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput0())
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                var$13 = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = var$13 + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = var$13 + (-2) | 0;
                    if ($controller.$hasMoreOutput0(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                var$9 = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$14 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                var$9 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                var$12 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = var$13;
            }
            $inPos = var$9;
            $outPos = var$12;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
var ju_Dictionary = $rt_classWithoutFields();
function ju_Dictionary__init_($this) {
    jl_Object__init_0($this);
}
var ju_Map = $rt_classWithoutFields(0);
function ju_Hashtable() {
    var a = this; ju_Dictionary.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$loadFactor = 0.0;
    a.$threshold = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount = 0;
}
var ju_Hashtable_EMPTY_ENUMERATION = null;
var ju_Hashtable_EMPTY_ITERATOR = null;
function ju_Hashtable_$callClinit() {
    ju_Hashtable_$callClinit = $rt_eraseClinit(ju_Hashtable);
    ju_Hashtable__clinit_();
}
function ju_Hashtable__init_() {
    var var_0 = new ju_Hashtable();
    ju_Hashtable__init_0(var_0);
    return var_0;
}
function ju_Hashtable__init_1(var_0) {
    var var_1 = new ju_Hashtable();
    ju_Hashtable__init_2(var_1, var_0);
    return var_1;
}
function ju_Hashtable_newEntry($key, $value, $hash) {
    ju_Hashtable_$callClinit();
    return ju_Hashtable$Entry__init_($key, $value);
}
function ju_Hashtable__init_0($this) {
    ju_Hashtable_$callClinit();
    ju_Hashtable__init_2($this, 11);
}
function ju_Hashtable__init_2($this, $capacity) {
    ju_Hashtable_$callClinit();
    ju_Dictionary__init_($this);
    $this.$lastSlot = (-1);
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$elementCount = 0;
    if (!$capacity)
        $capacity = 1;
    $this.$elementData = ju_Hashtable_newElementArray($this, $capacity);
    $this.$firstSlot = $this.$elementData.data.length;
    $this.$loadFactor = 0.75;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable_newElementArray($this, $size) {
    return $rt_createArray(ju_Hashtable$Entry, $size);
}
function ju_Hashtable_computeMaxSize($this) {
    $this.$threshold = $this.$elementData.data.length * $this.$loadFactor | 0;
}
function ju_Hashtable_put($this, $key, $value) {
    var $hash, var$4, $index, $entry, $result, var$8, var$9;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            $hash = $key.$hashCode0();
            var$4 = $hash & 2147483647;
            $index = var$4 % $this.$elementData.data.length | 0;
            $entry = $this.$elementData.data[$index];
            while ($entry !== null && !$entry.$equalsKey($key, $hash)) {
                $entry = $entry.$next2;
            }
            if ($entry !== null) {
                $result = $entry.$value2;
                $entry.$value2 = $value;
                return $result;
            }
            $this.$modCount = $this.$modCount + 1 | 0;
            var$8 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$8;
            if (var$8 > $this.$threshold) {
                $this.$rehash();
                $index = var$4 % $this.$elementData.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            var$9 = ju_Hashtable_newEntry($key, $value, $hash);
            var$9.$next2 = $this.$elementData.data[$index];
            $this.$elementData.data[$index] = var$9;
            return null;
        }
        $rt_throw(jl_NullPointerException__init_());
    } finally {
        jl_Object_monitorExitSync($this);
    }
}
function ju_Hashtable_rehash($this) {
    var $length, $newLast, $newData, $i, var$5, $entry, $index, var$8, $entry_0;
    $length = ($this.$elementData.data.length << 1) + 1 | 0;
    if (!$length)
        $length = 1;
    $newLast = (-1);
    $newData = ju_Hashtable_newElementArray($this, $length);
    $i = $this.$lastSlot + 1 | 0;
    var$5 = $length;
    while (true) {
        $i = $i + (-1) | 0;
        if ($i < $this.$firstSlot)
            break;
        $entry = $this.$elementData.data[$i];
        while ($entry !== null) {
            $index = ($entry.$getKeyHash() & 2147483647) % $length | 0;
            if ($index < var$5)
                var$5 = $index;
            if ($index > $newLast)
                $newLast = $index;
            var$8 = $newData.data;
            $entry_0 = $entry.$next2;
            $entry.$next2 = var$8[$index];
            var$8[$index] = $entry;
            $entry = $entry_0;
        }
    }
    $this.$firstSlot = var$5;
    $this.$lastSlot = $newLast;
    $this.$elementData = $newData;
    ju_Hashtable_computeMaxSize($this);
}
function ju_Hashtable__clinit_() {
    ju_Hashtable_EMPTY_ENUMERATION = ju_Hashtable$1__init_();
    ju_Hashtable_EMPTY_ITERATOR = ju_Hashtable$2__init_();
}
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults = null;
}
function ju_Properties__init_() {
    var var_0 = new ju_Properties();
    ju_Properties__init_0(var_0);
    return var_0;
}
function ju_Properties__init_1(var_0) {
    var var_1 = new ju_Properties();
    ju_Properties__init_2(var_1, var_0);
    return var_1;
}
function ju_Properties__init_0($this) {
    ju_Hashtable__init_0($this);
}
function ju_Properties__init_2($this, $properties) {
    ju_Hashtable__init_0($this);
    $this.$defaults = $properties;
}
function jn_FloatBufferOverArray() {
    var a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly4 = 0;
    a.$start5 = 0;
    a.$array3 = null;
}
function jn_FloatBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverArray();
    jn_FloatBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_FloatBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start5 = $start;
    $this.$readOnly4 = $readOnly;
    $this.$array3 = $array;
}
function jn_FloatBufferOverArray_getElement($this, $index) {
    return $this.$array3.data[$index + $this.$start5 | 0];
}
function jn_FloatBufferOverArray_putElement($this, $index, $value) {
    $this.$array3.data[$index + $this.$start5 | 0] = $value;
}
function jn_FloatBufferOverArray_readOnly($this) {
    return $this.$readOnly4;
}
var cbgssu_DragAndDrop$Target = $rt_classWithoutFields();
var cbgggmd_ModelMeshPart = $rt_classWithoutFields();
var cbgssa_RelativeTemporalAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssa_MoveByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
var ji_InputStream = $rt_classWithoutFields();
function ji_InputStream__init_($this) {
    jl_Object__init_0($this);
}
function ji_InputStream_read($this, $b, $off, $len) {
    var $i, $bt, var$6, var$7;
    $i = 0;
    while ($i < $len) {
        $bt = $this.$read1();
        if ($bt < 0) {
            if (!$i)
                $i = (-1);
            return $i;
        }
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$6[$off] = $bt << 24 >> 24;
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($len <= 0)
        $len = (-1);
    return $len;
}
function ji_InputStream_close($this) {}
function cgxgbtp_Blob$1() {
    var a = this; ji_InputStream.call(a);
    a.$pos = 0;
    a.$this$017 = null;
}
function cgxgbtp_Blob$1__init_(var_0) {
    var var_1 = new cgxgbtp_Blob$1();
    cgxgbtp_Blob$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbtp_Blob$1__init_0($this, $this$0) {
    $this.$this$017 = $this$0;
    ji_InputStream__init_($this);
}
function cgxgbtp_Blob$1_read($this) {
    var var$1, var$2;
    if ($this.$pos == cgxgbtp_Blob_length($this.$this$017))
        return (-1);
    var$1 = $this.$this$017;
    var$2 = $this.$pos;
    $this.$pos = var$2 + 1 | 0;
    return cgxgbtp_Blob_get(var$1, var$2) & 255;
}
function cgt_TriangleVariantsScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist0 = null;
    a.$batch2 = null;
    a.$renderer1 = null;
    a.$amounts1 = null;
    a.$iterations1 = Long_ZERO;
    a.$font2 = null;
    a.$viewport1 = null;
    a.$mode0 = 0;
    a.$mainGame1 = null;
}
function cgt_TriangleVariantsScreen__init_(var_0) {
    var var_1 = new cgt_TriangleVariantsScreen();
    cgt_TriangleVariantsScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_TriangleVariantsScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font2 = $this.$mainGame1.$font0;
    a: {
        try {
            var$1 = new cgtrd_TriangularDistribution;
            var$2 = $this.$mainGame1.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_TriangularDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
            $this.$dist0 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist0 = cgtrd_TriangularDistribution__init_($this.$mainGame1.$random0, 0.0, 1.0, 0.5);
    }
    $this.$batch2 = $this.$mainGame1.$batch0;
    $this.$viewport1 = cbguv_ScreenViewport__init_();
    $this.$renderer1 = cbggg_ImmediateModeRenderer20__init_(3584, 0, 1, 0);
    ju_Arrays_fill($this.$amounts1, Long_ZERO);
    $this.$iterations1 = Long_ZERO;
}
function cgt_TriangleVariantsScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts1 = $rt_createLongArray(256);
    $this.$iterations1 = Long_ZERO;
    $this.$mode0 = 0;
    $this.$mainGame1 = $main;
}
function cgt_TriangleVariantsScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, var$7, $x, $color, var$10, $j, var$12, var$13, var$14, var$15;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame1.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame1.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(38)) {
        $this.$mode0 = ($this.$mode0 + 2 | 0) % 3 | 0;
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(39)) {
        $this.$mode0 = ($this.$mode0 + 1 | 0) % 3 | 0;
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame1.$nextScreen();
        $this.$mainGame1.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport1.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts1, Long_ZERO);
        $this.$iterations1 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts1, Long_ZERO);
        $this.$iterations1 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts1, Long_ZERO);
        $this.$iterations1 = Long_ZERO;
    }
    a: {
        b: {
            c: {
                $this.$iterations1 = Long_add($this.$iterations1, Long_fromInt(4));
                var$3 = $this.$dist0;
                cgt_DistributorDemo_$callClinit();
                var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
                switch ($this.$mode0) {
                    case 0:
                        break b;
                    case 1:
                        break;
                    case 2:
                        break c;
                    default:
                        break a;
                }
                $i = 0;
                while ($i < 262144) {
                    $m = $this.$dist0.$generator.$next1(15);
                    var$6 = (($m & 1) + (($m >>> 1 | 0) & 127) | 0) + (($m >>> 8 | 0) & 127) | 0;
                    var$7 = $this.$amounts1.data;
                    var$7[var$6] = Long_add(var$7[var$6], Long_fromInt(1));
                    $i = $i + 1 | 0;
                }
                break a;
            }
            $i = 0;
            while (true) {
                if ($i >= 262144)
                    break a;
                $m = $this.$dist0.$generator.$nextTriangular0(0.0, 256.0) | 0;
                if ($m >= 0 && $m < 256) {
                    var$7 = $this.$amounts1.data;
                    var$7[$m] = Long_add(var$7[$m], Long_fromInt(1));
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < 262144) {
            $m = cgtrd_TriangularDistribution_sample($this.$dist0.$generator, 0.0, 256.0, 128.0) | 0;
            if ($m >= 0 && $m < 256) {
                var$7 = $this.$amounts1.data;
                var$7[$m] = Long_add(var$7[$m], Long_fromInt(1));
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$renderer1.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 256) {
        $color = $x & 31 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer1.$color($color);
        var$3 = $this.$renderer1;
        var$6 = $x << 1;
        var$10 = var$6;
        var$3.$vertex(var$10, 0.0, 0.0);
        $this.$renderer1.$color($color);
        $this.$renderer1.$vertex(var$10, Long_toNumber(Long_div($this.$amounts1.data[$x], $this.$iterations1)), 0.0);
        $this.$renderer1.$color($color);
        var$3 = $this.$renderer1;
        var$10 = var$6 | 1;
        var$3.$vertex(var$10, 0.0, 0.0);
        $this.$renderer1.$color($color);
        $this.$renderer1.$vertex(var$10, Long_toNumber(Long_div($this.$amounts1.data[$x], $this.$iterations1)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer1.$color((-6.221923240859403E37));
        var$3 = $this.$renderer1;
        var$12 = $j;
        var$3.$vertex(0.0, var$12, 0.0);
        $this.$renderer1.$color((-6.221923240859403E37));
        $this.$renderer1.$vertex(10.0, var$12, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer1.$end();
    $this.$batch2.$setProjectionMatrix($camera.$combined);
    $this.$batch2.$begin0();
    var$3 = $this.$font2;
    var$13 = $this.$batch2;
    var$14 = $rt_createArray(jl_Object, 5);
    var$7 = var$14.data;
    var$15 = cgt_DistributorDemo_a;
    var$7[0] = jl_Double_valueOf(var$15);
    var$7[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$7[2] = jl_Double_valueOf($this.$dist0.$getMedian());
    var$7[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$7[4] = jl_Integer_valueOf($this.$mode0);
    var$3.$draw(var$13, cgt_Stringf_format($rt_s(324), var$14), 64.0, 522.0, 384.0, 1, 1);
    $this.$font2.$draw($this.$batch2, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font2.$draw($this.$batch2, $rt_s(325), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch2.$end();
}
function cgt_TriangleVariantsScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport1.$update0($width, $height, 1);
    $this.$viewport1.$apply(1);
}
function cbgm_Interpolation$Elastic() {
    var a = this; cbgm_Interpolation.call(a);
    a.$value3 = 0.0;
    a.$power1 = 0.0;
    a.$scale1 = 0.0;
    a.$bounces = 0.0;
}
function cbgm_Interpolation$Elastic__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Interpolation$Elastic();
    cbgm_Interpolation$Elastic__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale) {
    cbgm_Interpolation__init_($this);
    $this.$value3 = $value;
    $this.$power1 = $power;
    $this.$scale1 = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
}
var cbgm_Interpolation$ElasticOut = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
function cbgm_Interpolation$ElasticOut__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Interpolation$ElasticOut();
    cbgm_Interpolation$ElasticOut__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Interpolation$ElasticOut__init_0($this, $value, $power, $bounces, $scale) {
    cbgm_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale);
}
var cbgssu_Table$Debug = $rt_classWithoutFields(jl_Enum);
var cbgssu_Table$Debug_none = null;
var cbgssu_Table$Debug_all = null;
var cbgssu_Table$Debug_table = null;
var cbgssu_Table$Debug_cell = null;
var cbgssu_Table$Debug_actor = null;
var cbgssu_Table$Debug_$VALUES = null;
function cbgssu_Table$Debug_$callClinit() {
    cbgssu_Table$Debug_$callClinit = $rt_eraseClinit(cbgssu_Table$Debug);
    cbgssu_Table$Debug__clinit_();
}
function cbgssu_Table$Debug__init_(var_0, var_1) {
    var var_2 = new cbgssu_Table$Debug();
    cbgssu_Table$Debug__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgssu_Table$Debug__init_0($this, var$1, var$2) {
    cbgssu_Table$Debug_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgssu_Table$Debug__clinit_() {
    cbgssu_Table$Debug_none = cbgssu_Table$Debug__init_($rt_s(326), 0);
    cbgssu_Table$Debug_all = cbgssu_Table$Debug__init_($rt_s(212), 1);
    cbgssu_Table$Debug_table = cbgssu_Table$Debug__init_($rt_s(327), 2);
    cbgssu_Table$Debug_cell = cbgssu_Table$Debug__init_($rt_s(328), 3);
    cbgssu_Table$Debug_actor = cbgssu_Table$Debug__init_($rt_s(329), 4);
    cbgssu_Table$Debug_$VALUES = $rt_createArrayFromData(cbgssu_Table$Debug, [cbgssu_Table$Debug_none, cbgssu_Table$Debug_all, cbgssu_Table$Debug_table, cbgssu_Table$Debug_cell, cbgssu_Table$Debug_actor]);
}
var jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset);
var jnci_UTF8Charset_INSTANCE = null;
function jnci_UTF8Charset_$callClinit() {
    jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
    jnci_UTF8Charset__clinit_();
}
function jnci_UTF8Charset__init_() {
    var var_0 = new jnci_UTF8Charset();
    jnci_UTF8Charset__init_0(var_0);
    return var_0;
}
function jnci_UTF8Charset__init_0($this) {
    jnci_UTF8Charset_$callClinit();
    jnc_Charset__init_($this, $rt_s(330), $rt_createArray(jl_String, 0));
}
function jnci_UTF8Charset_newDecoder($this) {
    return jnci_UTF8Decoder__init_($this);
}
function jnci_UTF8Charset_newEncoder($this) {
    return jnci_UTF8Encoder__init_($this);
}
function jnci_UTF8Charset__clinit_() {
    jnci_UTF8Charset_INSTANCE = jnci_UTF8Charset__init_();
}
var otjde_EventTarget = $rt_classWithoutFields(0);
var otjde_KeyboardEventTarget = $rt_classWithoutFields(0);
var cbgssu_ActorGestureListener = $rt_classWithoutFields();
var cbgssu_ActorGestureListener_tmpCoords = null;
var cbgssu_ActorGestureListener_tmpCoords2 = null;
function cbgssu_ActorGestureListener_$callClinit() {
    cbgssu_ActorGestureListener_$callClinit = $rt_eraseClinit(cbgssu_ActorGestureListener);
    cbgssu_ActorGestureListener__clinit_();
}
function cbgssu_ActorGestureListener__clinit_() {
    cbgssu_ActorGestureListener_tmpCoords = cbgm_Vector2__init_();
    cbgssu_ActorGestureListener_tmpCoords2 = cbgm_Vector2__init_();
}
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
function jur_MultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter = $counter;
}
function jur_MultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif, $ch1, $ch2;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if (!$strDif) {
        $matchResult.$setConsumed($this.$consCounter, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = 97;
    } else {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = $testString.$charAt($strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $matchResult.$setConsumed($this.$consCounter, 0);
                return $this.$next.$matches($strIndex, $testString, $matchResult);
            }
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
}
function jur_MultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter, (-1));
    return $res;
}
function jur_MultiLineEOLSet_getName($this) {
    return $rt_s(331);
}
var cbg_InputProcessor = $rt_classWithoutFields(0);
function ji_Reader() {
    jl_Object.call(this);
    this.$lock = null;
}
function ji_Reader__init_($this) {
    ji_Reader__init_0($this, jl_Object__init_());
}
function ji_Reader__init_0($this, $lock) {
    jl_Object__init_0($this);
    $this.$lock = $lock;
}
function ji_BufferedReader() {
    var a = this; ji_Reader.call(a);
    a.$innerReader = null;
    a.$buffer2 = null;
    a.$index1 = 0;
    a.$count0 = 0;
    a.$eof = 0;
    a.$mark0 = 0;
}
function ji_BufferedReader__init_(var_0, var_1) {
    var var_2 = new ji_BufferedReader();
    ji_BufferedReader__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_BufferedReader__init_0($this, $innerReader, $size) {
    ji_Reader__init_($this);
    $this.$mark0 = (-1);
    if ($size < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$innerReader = $innerReader;
    $this.$buffer2 = $rt_createCharArray(jl_Math_max(64, $size));
}
function ji_BufferedReader_close($this) {
    ji_BufferedReader_requireOpened($this);
    $this.$innerReader.$close();
    $this.$innerReader = null;
}
function ji_BufferedReader_readLine($this) {
    var $line, var$2, var$3, $ch;
    ji_BufferedReader_requireOpened($this);
    if ($this.$eof && $this.$index1 >= $this.$count0)
        return null;
    $line = jl_StringBuilder__init_();
    a: {
        while (true) {
            if ($this.$index1 >= $this.$count0 && !ji_BufferedReader_fillBuffer($this, 0))
                break a;
            var$2 = $this.$buffer2.data;
            var$3 = $this.$index1;
            $this.$index1 = var$3 + 1 | 0;
            $ch = var$2[var$3];
            if ($ch == 10)
                break;
            if ($ch == 13) {
                if ($this.$index1 >= $this.$count0 && !ji_BufferedReader_fillBuffer($this, 0))
                    break a;
                if ($this.$buffer2.data[$this.$index1] != 10)
                    break a;
                $this.$index1 = $this.$index1 + 1 | 0;
                break a;
            }
            $line.$append0($ch);
        }
    }
    return $line.$toString();
}
function ji_BufferedReader_fillBuffer($this, $offset) {
    var $charsRead;
    if ($this.$eof)
        return 0;
    a: {
        while (true) {
            if ($offset >= $this.$buffer2.data.length)
                break a;
            $charsRead = $this.$innerReader.$read2($this.$buffer2, $offset, $this.$buffer2.data.length - $offset | 0);
            if ($charsRead == (-1)) {
                $this.$eof = 1;
                break a;
            }
            if (!$charsRead)
                break;
            $offset = $offset + $charsRead | 0;
        }
    }
    $this.$count0 = $offset;
    $this.$index1 = 0;
    $this.$mark0 = (-1);
    return 1;
}
function ji_BufferedReader_requireOpened($this) {
    if ($this.$innerReader !== null)
        return;
    $rt_throw(ji_IOException__init_());
}
var cbgssa_DelayAction = $rt_classWithoutFields(cbgssa_DelegateAction);
var cbgssu_TextureRegionDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
function cgtr_DistinctRandom() {
    cgtr_EnhancedRandom.call(this);
    this.$state1 = Long_ZERO;
}
function cgtr_DistinctRandom__init_() {
    var var_0 = new cgtr_DistinctRandom();
    cgtr_DistinctRandom__init_0(var_0);
    return var_0;
}
function cgtr_DistinctRandom__init_1(var_0) {
    var var_1 = new cgtr_DistinctRandom();
    cgtr_DistinctRandom__init_2(var_1, var_0);
    return var_1;
}
function cgtr_DistinctRandom__init_0($this) {
    cgtr_DistinctRandom__init_2($this, cgtr_EnhancedRandom_seedFromMath());
}
function cgtr_DistinctRandom__init_2($this, $state) {
    cgtr_EnhancedRandom__init_0($this, $state);
    $this.$state1 = $state;
}
function cgtr_DistinctRandom_nextLong($this) {
    var var$1;
    var$1 = Long_add($this.$state1, Long_create(2135587861, 2654435769));
    $this.$state1 = var$1;
    var$1 = Long_xor(var$1, Long_shru(var$1, 27));
    var$1 = Long_mul(var$1, Long_create(732411475, 1014606921));
    var$1 = Long_xor(var$1, Long_shru(var$1, 33));
    var$1 = Long_mul(var$1, Long_create(1254403637, 476689399));
    return Long_xor(var$1, Long_shru(var$1, 27));
}
function cgtr_DistinctRandom_next($this, $bits) {
    var var$2;
    var$2 = Long_add($this.$state1, Long_create(2135587861, 2654435769));
    $this.$state1 = var$2;
    var$2 = Long_xor(var$2, Long_shru(var$2, 27));
    var$2 = Long_mul(var$2, Long_create(732411475, 1014606921));
    var$2 = Long_xor(var$2, Long_shru(var$2, 33));
    var$2 = Long_mul(var$2, Long_create(1254403637, 476689399));
    return Long_lo(Long_xor(var$2, Long_shru(var$2, 27))) >>> (32 - $bits | 0) | 0;
}
var cgxgbtf_Store = $rt_classWithoutFields(0);
var cgxgbtp_AssetFilter = $rt_classWithoutFields(0);
function cgxgbtp_AssetFilter_getType($file) {
    var $extension;
    $extension = (cgxgbtp_AssetFilter_extension($file)).$toLowerCase1();
    if (cgxgbtp_AssetFilter_isImage($extension)) {
        cgxgbtp_AssetType_$callClinit();
        return cgxgbtp_AssetType_Image;
    }
    if (cgxgbtp_AssetFilter_isAudio($extension)) {
        cgxgbtp_AssetType_$callClinit();
        return cgxgbtp_AssetType_Audio;
    }
    if (!cgxgbtp_AssetFilter_isText($extension)) {
        cgxgbtp_AssetType_$callClinit();
        return cgxgbtp_AssetType_Binary;
    }
    cgxgbtp_AssetType_$callClinit();
    return cgxgbtp_AssetType_Text;
}
function cgxgbtp_AssetFilter_extension($file) {
    var $dotIndex;
    $dotIndex = $file.$lastIndexOf(46);
    if ($dotIndex == (-1))
        return $rt_s(45);
    return $file.$substring($dotIndex + 1 | 0);
}
function cgxgbtp_AssetFilter_isImage($extension) {
    return !$extension.$equals($rt_s(332)) && !$extension.$equals($rt_s(333)) && !$extension.$equals($rt_s(334)) && !$extension.$equals($rt_s(335)) && !$extension.$equals($rt_s(336)) ? 0 : 1;
}
function cgxgbtp_AssetFilter_isText($extension) {
    var var$2;
    a: {
        b: {
            if ($extension.$equals($rt_s(337)))
                break b;
            if ($extension.$equals($rt_s(338)))
                break b;
            if ($extension.$equals($rt_s(339)))
                break b;
            if ($extension.$equals($rt_s(340)))
                break b;
            if ($extension.$equals($rt_s(341)))
                break b;
            if ($extension.$equals($rt_s(342)))
                break b;
            if ($extension.$equals($rt_s(343)))
                break b;
            if ($extension.$equals($rt_s(344)))
                break b;
            if (!$extension.$equals($rt_s(345))) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
}
function cgxgbtp_AssetFilter_isAudio($extension) {
    return !$extension.$equals($rt_s(346)) && !$extension.$equals($rt_s(347)) && !$extension.$equals($rt_s(348)) ? 0 : 1;
}
var otcir_Converter = $rt_classWithoutFields();
var jm_Logical = $rt_classWithoutFields();
function jm_Logical_and($val, $that) {
    if ($that.$sign1 && $val.$sign1) {
        jm_BigInteger_$callClinit();
        if ($that.$equals(jm_BigInteger_MINUS_ONE))
            return $val;
        if ($val.$equals(jm_BigInteger_MINUS_ONE))
            return $that;
        if ($val.$sign1 > 0) {
            if ($that.$sign1 <= 0)
                return jm_Logical_andDiffSigns($val, $that);
            return jm_Logical_andPositive($val, $that);
        }
        if ($that.$sign1 > 0)
            return jm_Logical_andDiffSigns($that, $val);
        if ($val.$numberLength <= $that.$numberLength)
            return jm_Logical_andNegative($that, $val);
        return jm_Logical_andNegative($val, $that);
    }
    jm_BigInteger_$callClinit();
    return jm_BigInteger_ZERO;
}
function jm_Logical_andPositive($val, $that) {
    var $resLength, $i, $resDigits, $result;
    $resLength = jl_Math_min($val.$numberLength, $that.$numberLength);
    $i = jl_Math_max($val.$getFirstNonzeroDigit(), $that.$getFirstNonzeroDigit());
    if ($i >= $resLength)
        return jm_BigInteger_ZERO;
    $resDigits = $rt_createIntArray($resLength);
    while ($i < $resLength) {
        $resDigits.data[$i] = $val.$digits.data[$i] & $that.$digits.data[$i];
        $i = $i + 1 | 0;
    }
    $result = jm_BigInteger__init_(1, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_Logical_andDiffSigns($positive, $negative) {
    var $iPos, $iNeg, $resLength, $resDigits, $i, $limit, $result;
    $iPos = $positive.$getFirstNonzeroDigit();
    $iNeg = $negative.$getFirstNonzeroDigit();
    if ($iNeg >= $positive.$numberLength)
        return jm_BigInteger_ZERO;
    $resLength = $positive.$numberLength;
    $resDigits = $rt_createIntArray($resLength);
    $i = jl_Math_max($iPos, $iNeg);
    if ($i == $iNeg) {
        $resDigits.data[$i] = ( -$negative.$digits.data[$i] | 0) & $positive.$digits.data[$i];
        $i = $i + 1 | 0;
    }
    $limit = jl_Math_min($negative.$numberLength, $positive.$numberLength);
    while ($i < $limit) {
        $resDigits.data[$i] = ($negative.$digits.data[$i] ^ (-1)) & $positive.$digits.data[$i];
        $i = $i + 1 | 0;
    }
    a: {
        if ($i >= $negative.$numberLength)
            while (true) {
                if ($i >= $positive.$numberLength)
                    break a;
                $resDigits.data[$i] = $positive.$digits.data[$i];
                $i = $i + 1 | 0;
            }
    }
    $result = jm_BigInteger__init_(1, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_Logical_andNegative($longer, $shorter) {
    var $iLonger, $iShorter, $i, var$6, $digit, $resLength, $resDigits, var$10, $result;
    $iLonger = $longer.$getFirstNonzeroDigit();
    $iShorter = $shorter.$getFirstNonzeroDigit();
    if ($iLonger >= $shorter.$numberLength)
        return $longer;
    $i = jl_Math_max($iShorter, $iLonger);
    var$6 = $rt_compare($iShorter, $iLonger);
    $digit = var$6 > 0 ? ( -$shorter.$digits.data[$i] | 0) & ($longer.$digits.data[$i] ^ (-1)) : var$6 >= 0 ? ( -$shorter.$digits.data[$i] | 0) & ( -$longer.$digits.data[$i] | 0) : ($shorter.$digits.data[$i] ^ (-1)) & ( -$longer.$digits.data[$i] | 0);
    if (!$digit) {
        $i = $i + 1 | 0;
        a: {
            while ($i < $shorter.$numberLength) {
                $digit = ($longer.$digits.data[$i] | $shorter.$digits.data[$i]) ^ (-1);
                if ($digit)
                    break a;
                $i = $i + 1 | 0;
            }
        }
        if (!$digit) {
            b: {
                while ($i < $longer.$numberLength) {
                    $digit = $longer.$digits.data[$i] ^ (-1);
                    if ($digit)
                        break b;
                    $i = $i + 1 | 0;
                }
            }
            if (!$digit) {
                $resLength = $longer.$numberLength + 1 | 0;
                $resDigits = $rt_createIntArray($resLength);
                var$10 = $resDigits.data;
                var$10[$resLength - 1 | 0] = 1;
                $result = jm_BigInteger__init_((-1), $resLength, $resDigits);
                return $result;
            }
        }
    }
    $resLength = $longer.$numberLength;
    $resDigits = $rt_createIntArray($resLength);
    var$10 = $resDigits.data;
    var$10[$i] =  -$digit | 0;
    var$6 = $i + 1 | 0;
    while (var$6 < $shorter.$numberLength) {
        var$10[var$6] = $longer.$digits.data[var$6] | $shorter.$digits.data[var$6];
        var$6 = var$6 + 1 | 0;
    }
    while (var$6 < $longer.$numberLength) {
        var$10[var$6] = $longer.$digits.data[var$6];
        var$6 = var$6 + 1 | 0;
    }
    $result = jm_BigInteger__init_((-1), $resLength, $resDigits);
    return $result;
}
var cbgggmd_ModelMaterial = $rt_classWithoutFields();
var cbgmo_PolygonMapObject = $rt_classWithoutFields(cbgm_MapObject);
function jl_Object$Monitor() {
    var a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
function jl_Object$Monitor__init_() {
    var var_0 = new jl_Object$Monitor();
    jl_Object$Monitor__init_0(var_0);
    return var_0;
}
function jl_Object$Monitor__init_0($this) {
    jl_Object__init_0($this);
    $this.$owner = jl_Thread_currentThread();
}
function cbggg_VertexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$attributes = null;
    a.$buffer3 = null;
    a.$byteBuffer = null;
    a.$bufferHandle = 0;
    a.$isDirect = 0;
    a.$isStatic = 0;
    a.$usage0 = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
}
function cbggg_VertexBufferObjectSubData__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObjectSubData();
    cbggg_VertexBufferObjectSubData__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObjectSubData__init_0($this, $isStatic, $numVertices, $attributes) {
    jl_Object__init_0($this);
    $this.$isDirty = 0;
    $this.$isBound = 0;
    $this.$isStatic = $isStatic;
    $this.$attributes = $attributes;
    $this.$byteBuffer = cbgu_BufferUtils_newByteBuffer($rt_imul($this.$attributes.$vertexSize, $numVertices));
    $this.$isDirect = 1;
    $this.$usage0 = !$isStatic ? 35048 : 35044;
    $this.$buffer3 = $this.$byteBuffer.$asFloatBuffer();
    $this.$bufferHandle = cbggg_VertexBufferObjectSubData_createBufferObject($this);
    $this.$buffer3.$flip0();
    $this.$byteBuffer.$flip0();
}
function cbggg_VertexBufferObjectSubData_createBufferObject($this) {
    var $result;
    $result = cbg_Gdx_gl20.$glGenBuffer();
    cbg_Gdx_gl20.$glBindBuffer(34962, $result);
    cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_capacity($this.$byteBuffer), null, $this.$usage0);
    cbg_Gdx_gl20.$glBindBuffer(34962, 0);
    return $result;
}
function cbggg_VertexBufferObjectSubData_getAttributes($this) {
    return $this.$attributes;
}
function cbggg_VertexBufferObjectSubData_getNumVertices($this) {
    return (jn_Buffer_limit($this.$buffer3) * 4 | 0) / $this.$attributes.$vertexSize | 0;
}
function cbggg_VertexBufferObjectSubData_bufferChanged($this) {
    if ($this.$isBound) {
        cbg_Gdx_gl20.$glBufferSubData(34962, 0, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer);
        $this.$isDirty = 0;
    }
}
function cbggg_VertexBufferObjectSubData_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty = 1;
    if ($this.$isDirect) {
        cbgu_BufferUtils_copy($vertices, $this.$byteBuffer, $count, $offset);
        $this.$buffer3.$position3(0);
        $this.$buffer3.$limit0($count);
    } else {
        $this.$buffer3.$clear1();
        $this.$buffer3.$put3($vertices, $offset, $count);
        $this.$buffer3.$flip0();
        $this.$byteBuffer.$position3(0);
        $this.$byteBuffer.$limit0(jn_Buffer_limit($this.$buffer3) << 2);
    }
    cbggg_VertexBufferObjectSubData_bufferChanged($this);
}
function cbggg_VertexBufferObjectSubData_bind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, var$6, $attribute, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle);
    if ($this.$isDirty) {
        $this.$byteBuffer.$limit0(jn_Buffer_limit($this.$buffer3) * 4 | 0);
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer, $this.$usage0);
        $this.$isDirty = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound = 1;
}
function cbggg_VertexBufferObjectSubData_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute((cbgg_VertexAttributes_get($this.$attributes, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound = 0;
}
var cbgggmd_ModelMesh = $rt_classWithoutFields();
var cbgssu_Selection = $rt_classWithoutFields();
var cbgggmd_ModelNode = $rt_classWithoutFields();
function cbgu_ReflectionPool() {
    cbgu_Pool.call(this);
    this.$constructor = null;
}
function cbgu_ReflectionPool__init_(var_0, var_1, var_2) {
    var var_3 = new cbgu_ReflectionPool();
    cbgu_ReflectionPool__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgu_ReflectionPool__init_0($this, $type, $initialCapacity, $max) {
    cbgu_Pool__init_0($this, $initialCapacity, $max);
    $this.$constructor = cbgu_ReflectionPool_findConstructor($this, $type);
    if ($this.$constructor !== null)
        return;
    $rt_throw(jl_RuntimeException__init_((((jl_StringBuilder__init_()).$append1($rt_s(349))).$append1($type.$getName())).$toString()));
}
function cbgu_ReflectionPool_findConstructor($this, $type) {
    var var$2, $constructor, $$je;
    a: {
        try {
            var$2 = cbgur_ClassReflection_getConstructor($type, null);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    b: {
        try {
            $constructor = cbgur_ClassReflection_getDeclaredConstructor($type, null);
            cbgur_Constructor_setAccessible($constructor, 1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof cbgur_ReflectionException) {
                break b;
            } else {
                throw $$e;
            }
        }
        return $constructor;
    }
    return null;
}
function cbgu_ReflectionPool_newObject($this) {
    var var$1, $ex, $$je;
    a: {
        try {
            var$1 = cbgur_Constructor_newInstance($this.$constructor, null);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Exception) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$1;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_1((((jl_StringBuilder__init_()).$append1($rt_s(350))).$append1((cbgur_Constructor_getDeclaringClass($this.$constructor)).$getName())).$toString(), $ex));
}
var cbgssu_ScissorStack = $rt_classWithoutFields();
var cbgssu_ScissorStack_scissors = null;
var cbgssu_ScissorStack_tmp = null;
var cbgssu_ScissorStack_viewport = null;
function cbgssu_ScissorStack_$callClinit() {
    cbgssu_ScissorStack_$callClinit = $rt_eraseClinit(cbgssu_ScissorStack);
    cbgssu_ScissorStack__clinit_();
}
function cbgssu_ScissorStack__clinit_() {
    cbgssu_ScissorStack_scissors = cbgu_Array__init_();
    cbgssu_ScissorStack_tmp = cbgm_Vector3__init_();
    cbgssu_ScissorStack_viewport = cbgm_Rectangle__init_();
}
var cbgggm_MeshPart = $rt_classWithoutFields();
var cbgggm_MeshPart_bounds = null;
function cbgggm_MeshPart_$callClinit() {
    cbgggm_MeshPart_$callClinit = $rt_eraseClinit(cbgggm_MeshPart);
    cbgggm_MeshPart__clinit_();
}
function cbgggm_MeshPart__clinit_() {
    cbgggm_MeshPart_bounds = cbgmc_BoundingBox__init_();
}
var cgxgbtu_KeyCodes = $rt_classWithoutFields();
function cgxgbtu_KeyCodes_keyForCode($keyCode) {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                return 61;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                return 66;
            case 16:
                return 59;
            case 17:
                return 129;
            case 18:
                return 57;
            case 19:
                return 0;
            case 20:
                return 0;
            case 27:
                return 111;
            case 32:
                return 62;
            case 33:
                return 92;
            case 34:
                return 93;
            case 35:
                return 123;
            case 36:
                return 3;
            case 37:
                return 21;
            case 38:
                return 19;
            case 39:
                return 22;
            case 40:
                return 20;
            case 45:
                return 124;
            case 46:
                return 112;
            case 48:
                return 7;
            case 49:
                return 8;
            case 50:
                return 9;
            case 51:
                return 10;
            case 52:
                return 11;
            case 53:
                return 12;
            case 54:
                return 13;
            case 55:
                return 14;
            case 56:
                return 15;
            case 57:
                return 16;
            case 65:
                return 29;
            case 66:
                return 30;
            case 67:
                return 31;
            case 68:
                return 32;
            case 69:
                return 33;
            case 70:
                return 34;
            case 71:
                return 35;
            case 72:
                return 36;
            case 73:
                return 37;
            case 74:
                return 38;
            case 75:
                return 39;
            case 76:
                return 40;
            case 77:
                return 41;
            case 78:
                return 42;
            case 79:
                return 43;
            case 80:
                return 44;
            case 81:
                return 45;
            case 82:
                return 46;
            case 83:
                return 47;
            case 84:
                return 48;
            case 85:
                return 49;
            case 86:
                return 50;
            case 87:
                return 51;
            case 88:
                return 52;
            case 89:
                return 53;
            case 90:
                return 54;
            case 91:
                return 0;
            case 92:
                return 0;
            case 96:
                return 144;
            case 97:
                return 145;
            case 98:
                return 146;
            case 99:
                return 147;
            case 100:
                return 148;
            case 101:
                return 149;
            case 102:
                return 150;
            case 103:
                return 151;
            case 104:
                return 152;
            case 105:
                return 153;
            case 106:
                return 0;
            case 107:
                return 81;
            case 109:
                return 69;
            case 110:
                return 56;
            case 111:
                return 0;
            case 112:
                return 131;
            case 113:
                return 132;
            case 114:
                return 133;
            case 115:
                return 134;
            case 116:
                return 135;
            case 117:
                return 136;
            case 118:
                return 137;
            case 119:
                return 138;
            case 120:
                return 139;
            case 121:
                return 140;
            case 122:
                return 141;
            case 123:
                return 142;
            case 144:
                return 78;
            case 145:
                return 0;
            case 186:
                return 74;
            case 187:
                return 70;
            case 188:
                return 55;
            case 189:
                return 69;
            case 190:
                return 56;
            case 191:
                return 76;
            case 192:
                return 0;
            case 219:
                return 71;
            case 220:
                return 73;
            case 221:
                return 72;
            case 222:
                return 75;
            default:
                break a;
        }
        return 67;
    }
    return 0;
}
function cgxgbtu_KeyCodes_getButton($button) {
    if ($button == 1)
        return 0;
    if ($button == 2)
        return 1;
    if ($button != 4)
        return 0;
    return 2;
}
var cgxgbtd_StyleWrapper$Unit = $rt_classWithoutFields(jl_Enum);
var cgxgbtd_StyleWrapper$Unit_PX = null;
var cgxgbtd_StyleWrapper$Unit_PCT = null;
var cgxgbtd_StyleWrapper$Unit_EM = null;
var cgxgbtd_StyleWrapper$Unit_EX = null;
var cgxgbtd_StyleWrapper$Unit_PT = null;
var cgxgbtd_StyleWrapper$Unit_PC = null;
var cgxgbtd_StyleWrapper$Unit_IN = null;
var cgxgbtd_StyleWrapper$Unit_CM = null;
var cgxgbtd_StyleWrapper$Unit_MM = null;
var cgxgbtd_StyleWrapper$Unit_$VALUES = null;
function cgxgbtd_StyleWrapper$Unit_$callClinit() {
    cgxgbtd_StyleWrapper$Unit_$callClinit = $rt_eraseClinit(cgxgbtd_StyleWrapper$Unit);
    cgxgbtd_StyleWrapper$Unit__clinit_();
}
function cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cgxgbtd_StyleWrapper$Unit__clinit_() {
    cgxgbtd_StyleWrapper$Unit_PX = cgxgbtd_StyleWrapper$Unit$1__init_($rt_s(351), 0);
    cgxgbtd_StyleWrapper$Unit_PCT = cgxgbtd_StyleWrapper$Unit$2__init_($rt_s(352), 1);
    cgxgbtd_StyleWrapper$Unit_EM = cgxgbtd_StyleWrapper$Unit$3__init_($rt_s(353), 2);
    cgxgbtd_StyleWrapper$Unit_EX = cgxgbtd_StyleWrapper$Unit$4__init_($rt_s(354), 3);
    cgxgbtd_StyleWrapper$Unit_PT = cgxgbtd_StyleWrapper$Unit$5__init_($rt_s(355), 4);
    cgxgbtd_StyleWrapper$Unit_PC = cgxgbtd_StyleWrapper$Unit$6__init_($rt_s(356), 5);
    cgxgbtd_StyleWrapper$Unit_IN = cgxgbtd_StyleWrapper$Unit$7__init_($rt_s(357), 6);
    cgxgbtd_StyleWrapper$Unit_CM = cgxgbtd_StyleWrapper$Unit$8__init_($rt_s(358), 7);
    cgxgbtd_StyleWrapper$Unit_MM = cgxgbtd_StyleWrapper$Unit$9__init_($rt_s(359), 8);
    cgxgbtd_StyleWrapper$Unit_$VALUES = $rt_createArrayFromData(cgxgbtd_StyleWrapper$Unit, [cgxgbtd_StyleWrapper$Unit_PX, cgxgbtd_StyleWrapper$Unit_PCT, cgxgbtd_StyleWrapper$Unit_EM, cgxgbtd_StyleWrapper$Unit_EX, cgxgbtd_StyleWrapper$Unit_PT, cgxgbtd_StyleWrapper$Unit_PC, cgxgbtd_StyleWrapper$Unit_IN, cgxgbtd_StyleWrapper$Unit_CM, cgxgbtd_StyleWrapper$Unit_MM]);
}
var cgxgbtd_StyleWrapper$Unit$8 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$8__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$8();
    cgxgbtd_StyleWrapper$Unit$8__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$8__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var cbgm_Vector = $rt_classWithoutFields(0);
var cgxgbtd_StyleWrapper$Unit$9 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$9__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$9();
    cgxgbtd_StyleWrapper$Unit$9__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$9__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var ju_Collection = $rt_classWithoutFields(0);
var ju_List = $rt_classWithoutFields(0);
var cgxgbtd_StyleWrapper$Unit$6 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$6__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$6();
    cgxgbtd_StyleWrapper$Unit$6__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$6__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var cgxgbtd_StyleWrapper$Unit$7 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$7__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$7();
    cgxgbtd_StyleWrapper$Unit$7__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$7__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var cbgm_Plane$PlaneSide = $rt_classWithoutFields(jl_Enum);
var cbgm_Plane$PlaneSide_OnPlane = null;
var cbgm_Plane$PlaneSide_Back = null;
var cbgm_Plane$PlaneSide_Front = null;
var cbgm_Plane$PlaneSide_$VALUES = null;
function cbgm_Plane$PlaneSide_$callClinit() {
    cbgm_Plane$PlaneSide_$callClinit = $rt_eraseClinit(cbgm_Plane$PlaneSide);
    cbgm_Plane$PlaneSide__clinit_();
}
function cbgm_Plane$PlaneSide__init_(var_0, var_1) {
    var var_2 = new cbgm_Plane$PlaneSide();
    cbgm_Plane$PlaneSide__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Plane$PlaneSide__init_0($this, var$1, var$2) {
    cbgm_Plane$PlaneSide_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgm_Plane$PlaneSide__clinit_() {
    cbgm_Plane$PlaneSide_OnPlane = cbgm_Plane$PlaneSide__init_($rt_s(360), 0);
    cbgm_Plane$PlaneSide_Back = cbgm_Plane$PlaneSide__init_($rt_s(361), 1);
    cbgm_Plane$PlaneSide_Front = cbgm_Plane$PlaneSide__init_($rt_s(362), 2);
    cbgm_Plane$PlaneSide_$VALUES = $rt_createArrayFromData(cbgm_Plane$PlaneSide, [cbgm_Plane$PlaneSide_OnPlane, cbgm_Plane$PlaneSide_Back, cbgm_Plane$PlaneSide_Front]);
}
var cgxgbtd_StyleWrapper$Unit$1 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$1__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$1();
    cgxgbtd_StyleWrapper$Unit$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$1__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
function cgxgbtd_StyleWrapper$Unit$1_getType($this) {
    return $rt_s(363);
}
var cgxgbtd_StyleWrapper$Unit$4 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$4__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$4();
    cgxgbtd_StyleWrapper$Unit$4__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$4__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var cgxgbtd_StyleWrapper$Unit$5 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$5__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$5();
    cgxgbtd_StyleWrapper$Unit$5__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$5__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var cgxgbtd_StyleWrapper$Unit$2 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$2__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$2();
    cgxgbtd_StyleWrapper$Unit$2__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$2__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var cgxgbtd_StyleWrapper$Unit$3 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
function cgxgbtd_StyleWrapper$Unit$3__init_(var_0, var_1) {
    var var_2 = new cgxgbtd_StyleWrapper$Unit$3();
    cgxgbtd_StyleWrapper$Unit$3__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtd_StyleWrapper$Unit$3__init_0($this, var$1, var$2) {
    cgxgbtd_StyleWrapper$Unit__init_($this, var$1, var$2);
}
var cgxgbt_TeaTool = $rt_classWithoutFields();
function cgxgbt_TeaTool_isProdMode() {
    return 1;
}
function cbggg_GLVersion() {
    var a = this; jl_Object.call(a);
    a.$majorVersion = 0;
    a.$minorVersion = 0;
    a.$releaseVersion = 0;
    a.$vendorString = null;
    a.$rendererString = null;
    a.$type2 = null;
    a.$TAG = $rt_s(364);
}
function cbggg_GLVersion__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_GLVersion();
    cbggg_GLVersion__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_GLVersion__init_0($this, $appType, $versionString, $vendorString, $rendererString) {
    var var$5;
    jl_Object__init_0($this);
    $this.$TAG = $rt_s(364);
    cbg_Application$ApplicationType_$callClinit();
    if ($appType === cbg_Application$ApplicationType_Android) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_GLES;
    } else if ($appType === cbg_Application$ApplicationType_iOS) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_GLES;
    } else if ($appType === cbg_Application$ApplicationType_Desktop) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_OpenGL;
    } else if ($appType === cbg_Application$ApplicationType_Applet) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_OpenGL;
    } else if ($appType !== cbg_Application$ApplicationType_WebGL) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_NONE;
    } else {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_WebGL;
    }
    var$5 = $this.$type2;
    cbggg_GLVersion$Type_$callClinit();
    if (var$5 === cbggg_GLVersion$Type_GLES)
        cbggg_GLVersion_extractVersion($this, $rt_s(365), $versionString);
    else if ($this.$type2 === cbggg_GLVersion$Type_WebGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(366), $versionString);
    else if ($this.$type2 === cbggg_GLVersion$Type_OpenGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(367), $versionString);
    else {
        $this.$majorVersion = (-1);
        $this.$minorVersion = (-1);
        $this.$releaseVersion = (-1);
        $vendorString = $rt_s(45);
        $rendererString = $rt_s(45);
    }
    $this.$vendorString = $vendorString;
    $this.$rendererString = $rendererString;
}
function cbggg_GLVersion_extractVersion($this, $patternString, $versionString) {
    var $pattern, $matcher, $found, $result, $resultSplit, var$8, var$9;
    $pattern = jur_Pattern_compile($patternString);
    $matcher = jur_Pattern_matcher($pattern, $versionString);
    $found = jur_Matcher_find($matcher);
    if (!$found) {
        cbg_Gdx_app.$log0($rt_s(364), (((jl_StringBuilder__init_()).$append1($rt_s(368))).$append1($versionString)).$toString());
        $this.$majorVersion = 2;
        $this.$minorVersion = 0;
        $this.$releaseVersion = 0;
    } else {
        $result = jur_Matcher_group($matcher, 1);
        $resultSplit = $result.$split($rt_s(369));
        var$8 = $resultSplit.data;
        $this.$majorVersion = cbggg_GLVersion_parseInt($this, var$8[0], 2);
        var$9 = var$8.length;
        $this.$minorVersion = var$9 < 2 ? 0 : cbggg_GLVersion_parseInt($this, var$8[1], 0);
        $this.$releaseVersion = var$9 < 3 ? 0 : cbggg_GLVersion_parseInt($this, var$8[2], 0);
    }
}
function cbggg_GLVersion_parseInt($this, $v, $defaultValue) {
    var var$3, $$je;
    a: {
        try {
            var$3 = jl_Integer_parseInt0($v);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    cbg_Gdx_app.$error0($rt_s(370), (((((jl_StringBuilder__init_()).$append1($rt_s(371))).$append1($v)).$append1($rt_s(372))).$append2($defaultValue)).$toString());
    return $defaultValue;
}
var jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jn_BufferOverflowException__init_() {
    var var_0 = new jn_BufferOverflowException();
    jn_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jn_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer);
function jn_ShortBuffer__init_($this, $capacity, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    $this.$position2 = $position;
    $this.$limit = $limit;
}
function jn_ShortBuffer_wrap($array, $offset, $length) {
    return jn_ShortBufferOverArray__init_(0, $array.data.length, $array, $offset, $offset + $length | 0, 0);
}
function jn_ShortBuffer_wrap0($array) {
    return jn_ShortBuffer_wrap($array, 0, $array.data.length);
}
function jn_ShortBuffer_put($this, $src, $offset, $length) {
    var var$4, var$5, var$6, var$7, var$8, $pos, $i, var$11;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(373)), var$6), $rt_s(280)), var$5);
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            if ($length < 0) {
                var$8 = new jl_IndexOutOfBoundsException;
                var$7 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(281)), $length), $rt_s(282));
                jl_IndexOutOfBoundsException__init_1(var$8, jl_StringBuilder_toString(var$7));
                $rt_throw(var$8);
            }
            $pos = $this.$position2;
            $i = 0;
            while ($i < $length) {
                var$6 = $pos + 1 | 0;
                var$11 = $offset + 1 | 0;
                $this.$putElement1($pos, var$4[$offset]);
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$11;
            }
            $this.$position2 = $this.$position2 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    var$8 = new jl_IndexOutOfBoundsException;
    var$5 = var$4.length;
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(283)), $offset), $rt_s(54)), var$5), 41);
    jl_IndexOutOfBoundsException__init_1(var$8, jl_StringBuilder_toString(var$7));
    $rt_throw(var$8);
}
function jn_ShortBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ShortBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_ShortBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_ShortBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_ShortBuffer_flip0($this) {
    return jn_ShortBuffer_flip($this);
}
function jn_ShortBuffer_clear0($this) {
    return jn_ShortBuffer_clear($this);
}
function jn_ShortBuffer_limit0($this, var$1) {
    return $this.$limit3(var$1);
}
function jn_ShortBuffer_position0($this, var$1) {
    return $this.$position5(var$1);
}
var cbgggpr_ParticleControllerControllerRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
var jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function otciu_UnicodeHelper$Range() {
    var a = this; jl_Object.call(a);
    a.$start6 = 0;
    a.$end2 = 0;
    a.$data1 = null;
}
function otciu_UnicodeHelper$Range__init_(var_0, var_1, var_2) {
    var var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function otciu_UnicodeHelper$Range__init_0($this, $start, $end, $data) {
    jl_Object__init_0($this);
    $this.$start6 = $start;
    $this.$end2 = $end;
    $this.$data1 = $data;
}
function cgtr_Respite32Random() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA1 = 0;
    a.$stateB1 = 0;
    a.$stateC = 0;
}
function cgtr_Respite32Random__init_() {
    var var_0 = new cgtr_Respite32Random();
    cgtr_Respite32Random__init_0(var_0);
    return var_0;
}
function cgtr_Respite32Random__init_1(var_0) {
    var var_1 = new cgtr_Respite32Random();
    cgtr_Respite32Random__init_2(var_1, var_0);
    return var_1;
}
function cgtr_Respite32Random__init_0($this) {
    cgtr_Respite32Random__init_2($this, cgtr_EnhancedRandom_seedFromMath());
}
function cgtr_Respite32Random__init_2($this, $seed) {
    cgtr_EnhancedRandom__init_0($this, $seed);
    $this.$setSeed($seed);
}
function cgtr_Respite32Random_setSeed($this, $seed) {
    var $a, $b, $c, $i, var$6;
    $a = Long_lo($seed);
    $b = Long_hi($seed);
    $c = Long_lo(Long_shru(Long_xor($seed, Long_fromInt(-1)), 16));
    $i = 0;
    while ($i < 5) {
        var$6 = ($b << 24 | ($b >>> 8 | 0)) + $a | 0;
        $c = $c + 1 | 0;
        $b = var$6 ^ $c;
        $a = ($a << 3 | ($a >>> 29 | 0)) ^ $b;
        $i = $i + 1 | 0;
    }
    $this.$stateA1 = $a;
    $i = 0;
    while ($i < 5) {
        var$6 = ($b << 24 | ($b >>> 8 | 0)) + $a | 0;
        $c = $c + 1 | 0;
        $b = var$6 ^ $c;
        $a = ($a << 3 | ($a >>> 29 | 0)) ^ $b;
        $i = $i + 1 | 0;
    }
    $this.$stateB1 = $a;
    $i = 0;
    while ($i < 5) {
        var$6 = ($b << 24 | ($b >>> 8 | 0)) + $a | 0;
        $c = $c + 1 | 0;
        $b = var$6 ^ $c;
        $a = ($a << 3 | ($a >>> 29 | 0)) ^ $b;
        $i = $i + 1 | 0;
    }
    $this.$stateC = $a;
}
function cgtr_Respite32Random_nextLong($this) {
    var var$1, var$2, var$3, $h, var$5;
    var$1 = $this.$stateA1 + (-1847521883) | 0;
    $this.$stateA1 = var$1;
    var$2 = $this.$stateB1 + (1821285621 ^ jl_Integer_numberOfLeadingZeros(var$1)) | 0;
    $this.$stateB1 = var$2;
    var$3 = $this.$stateC + (2146121005 ^ jl_Integer_numberOfLeadingZeros(var$1 & var$2)) | 0;
    $this.$stateC = var$3;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    $h = Long_fromInt(var$1);
    var$1 = $this.$stateA1 + (-1847521883) | 0;
    $this.$stateA1 = var$1;
    var$2 = $this.$stateB1 + (1821285621 ^ jl_Integer_numberOfLeadingZeros(var$1)) | 0;
    $this.$stateB1 = var$2;
    var$3 = $this.$stateC + (2146121005 ^ jl_Integer_numberOfLeadingZeros(var$1 & var$2)) | 0;
    $this.$stateC = var$3;
    var$5 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$5;
    var$2 = ((var$5 << 24 | (var$5 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    return Long_xor(Long_shl($h, 32), Long_and(Long_fromInt(var$1), Long_create(4294967295, 0)));
}
function cgtr_Respite32Random_next($this, $bits) {
    var var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$stateA1 + (-1847521883) | 0;
    $this.$stateA1 = var$2;
    var$3 = $this.$stateB1 + (1821285621 ^ jl_Integer_numberOfLeadingZeros(var$2)) | 0;
    $this.$stateB1 = var$3;
    var$4 = $this.$stateC + (2146121005 ^ jl_Integer_numberOfLeadingZeros(var$2 & var$3)) | 0;
    $this.$stateC = var$4;
    var$5 = ((var$3 << 24 | (var$3 >>> 8 | 0)) + var$2 | 0) ^ var$4;
    var$3 = (var$2 << 3 | (var$2 >>> 29 | 0)) ^ var$5;
    var$2 = ((var$5 << 24 | (var$5 >>> 8 | 0)) + var$3 | 0) ^ var$4;
    var$5 = (var$3 << 3 | (var$3 >>> 29 | 0)) ^ var$2;
    var$6 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$5 | 0) ^ var$4;
    var$2 = (var$5 << 3 | (var$5 >>> 29 | 0)) ^ var$6;
    var$3 = ((var$6 << 24 | (var$6 >>> 8 | 0)) + var$2 | 0) ^ var$4;
    var$2 = (var$2 << 3 | (var$2 >>> 29 | 0)) ^ var$3;
    return var$2 >>> (32 - $bits | 0) | 0;
}
function cgtr_Respite32Random_nextInt($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$stateA1 + (-1847521883) | 0;
    $this.$stateA1 = var$1;
    var$2 = $this.$stateB1 + (1821285621 ^ jl_Integer_numberOfLeadingZeros(var$1)) | 0;
    $this.$stateB1 = var$2;
    var$3 = $this.$stateC + (2146121005 ^ jl_Integer_numberOfLeadingZeros(var$1 & var$2)) | 0;
    $this.$stateC = var$3;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    var$2 = ((var$2 << 24 | (var$2 >>> 8 | 0)) + var$1 | 0) ^ var$3;
    var$1 = (var$1 << 3 | (var$1 >>> 29 | 0)) ^ var$2;
    return var$1;
}
function cgtr_Respite32Random_nextFloat($this) {
    return ($this.$nextInt() >>> 8 | 0) * 5.960464477539063E-8;
}
var jur_AbstractLineTerminator = $rt_classWithoutFields();
var jur_AbstractLineTerminator_unixLT = null;
var jur_AbstractLineTerminator_unicodeLT = null;
function jur_AbstractLineTerminator__init_($this) {
    jl_Object__init_0($this);
}
function jur_AbstractLineTerminator_getInstance($flag) {
    if (!($flag & 1)) {
        if (jur_AbstractLineTerminator_unicodeLT !== null)
            return jur_AbstractLineTerminator_unicodeLT;
        jur_AbstractLineTerminator_unicodeLT = jur_AbstractLineTerminator$2__init_();
        return jur_AbstractLineTerminator_unicodeLT;
    }
    if (jur_AbstractLineTerminator_unixLT !== null)
        return jur_AbstractLineTerminator_unixLT;
    jur_AbstractLineTerminator_unixLT = jur_AbstractLineTerminator$1__init_();
    return jur_AbstractLineTerminator_unixLT;
}
var jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator);
function jur_AbstractLineTerminator$2__init_() {
    var var_0 = new jur_AbstractLineTerminator$2();
    jur_AbstractLineTerminator$2__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$2__init_0($this) {
    jur_AbstractLineTerminator__init_($this);
}
function jur_AbstractLineTerminator$2_isLineTerminator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_AbstractLineTerminator$2_isAfterLineTerminator($this, $ch, $ch2) {
    var var$3;
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
}
var jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator);
function jur_AbstractLineTerminator$1__init_() {
    var var_0 = new jur_AbstractLineTerminator$1();
    jur_AbstractLineTerminator$1__init_0(var_0);
    return var_0;
}
function jur_AbstractLineTerminator$1__init_0($this) {
    jur_AbstractLineTerminator__init_($this);
}
function jur_AbstractLineTerminator$1_isLineTerminator($this, $ch) {
    return $ch != 10 ? 0 : 1;
}
function jur_AbstractLineTerminator$1_isAfterLineTerminator($this, $ch, $ch2) {
    return $ch != 10 ? 0 : 1;
}
var jl_NoClassDefFoundError = $rt_classWithoutFields(jl_LinkageError);
var jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cgxgbtf_FileDB = $rt_classWithoutFields();
var cgxgbtf_FileDB_INSTANCE = null;
function cgxgbtf_FileDB_$callClinit() {
    cgxgbtf_FileDB_$callClinit = $rt_eraseClinit(cgxgbtf_FileDB);
    cgxgbtf_FileDB__clinit_();
}
function cgxgbtf_FileDB__init_($this) {
    cgxgbtf_FileDB_$callClinit();
    jl_Object__init_0($this);
}
function cgxgbtf_FileDB_getInstance() {
    cgxgbtf_FileDB_$callClinit();
    if (cgxgbtf_FileDB_INSTANCE === null)
        cgxgbtf_FileDB_INSTANCE = cgxgbtf_FileDBManager__init_();
    return cgxgbtf_FileDB_INSTANCE;
}
function cgxgbtf_FileDB__clinit_() {
    cgxgbtf_FileDB_INSTANCE = null;
}
function cgxgbtf_FileDBStorage() {
    cgxgbtf_FileDB.call(this);
    this.$store = null;
}
var cgxgbtf_FileDBStorage_ID_LENGTH = 0;
function cgxgbtf_FileDBStorage_$callClinit() {
    cgxgbtf_FileDBStorage_$callClinit = $rt_eraseClinit(cgxgbtf_FileDBStorage);
    cgxgbtf_FileDBStorage__clinit_();
}
function cgxgbtf_FileDBStorage__init_(var_0) {
    var var_1 = new cgxgbtf_FileDBStorage();
    cgxgbtf_FileDBStorage__init_0(var_1, var_0);
    return var_1;
}
function cgxgbtf_FileDBStorage__init_0($this, $store) {
    cgxgbtf_FileDBStorage_$callClinit();
    cgxgbtf_FileDB__init_($this);
    $this.$store = $store;
}
function cgxgbtf_FileDBStorage_read($this, $file) {
    var var$2, var$3, var$4, $data, $e, $$je;
    var$2 = $this.$store;
    var$3 = $file.$path();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(374)), var$3);
    $data = var$2.$getItem(jl_StringBuilder_toString(var$4));
    a: {
        try {
            var$2 = ji_ByteArrayInputStream__init_(cgxgbtf_HEXCoder_decode($data));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    var$2 = $this.$store;
    var$3 = $file.$path();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(374)), var$3);
    var$2.$removeItem(jl_StringBuilder_toString(var$4));
    $rt_throw($e);
}
function cgxgbtf_FileDBStorage_exists($this, $file) {
    var var$2, var$3, var$4, var$5;
    a: {
        var$2 = $this.$store;
        var$3 = $file.$path();
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(375)), var$3);
        if (var$2.$getItem(jl_StringBuilder_toString(var$4)) === null) {
            var$2 = $this.$store;
            var$3 = $file.$path();
            var$4 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(374)), var$3);
            if (var$2.$getItem(jl_StringBuilder_toString(var$4)) === null) {
                var$5 = 0;
                break a;
            }
        }
        var$5 = 1;
    }
    return var$5;
}
function cgxgbtf_FileDBStorage__clinit_() {
    cgxgbtf_FileDBStorage_ID_LENGTH = $rt_s(374).$length();
}
function cgt_MathSinScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$random2 = null;
    a.$batch3 = null;
    a.$renderer2 = null;
    a.$amounts2 = null;
    a.$iterations2 = Long_ZERO;
    a.$font3 = null;
    a.$viewport2 = null;
    a.$mainGame2 = null;
}
function cgt_MathSinScreen__init_(var_0) {
    var var_1 = new cgt_MathSinScreen();
    cgt_MathSinScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_MathSinScreen_show($this) {
    $this.$font3 = $this.$mainGame2.$font0;
    $this.$random2 = $this.$mainGame2.$random0;
    $this.$batch3 = $this.$mainGame2.$batch0;
    $this.$viewport2 = cbguv_ScreenViewport__init_();
    $this.$renderer2 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts2, Long_ZERO);
    $this.$iterations2 = Long_ZERO;
}
function cgt_MathSinScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts2 = $rt_createLongArray(512);
    $this.$iterations2 = Long_ZERO;
    $this.$mainGame2 = $main;
}
function cgt_MathSinScreen_render($this, $delta) {
    var $camera, $i, $m, var$5, $x, $color, var$8, var$9, $j, var$11, var$12, var$13;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame2.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame2.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport2.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        ju_Arrays_fill($this.$amounts2, Long_ZERO);
        $this.$iterations2 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        ju_Arrays_fill($this.$amounts2, Long_ZERO);
        $this.$iterations2 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        ju_Arrays_fill($this.$amounts2, Long_ZERO);
        $this.$iterations2 = Long_ZERO;
    }
    $this.$iterations2 = Long_add($this.$iterations2, Long_fromInt(1));
    $i = 0;
    while ($i < 262144) {
        $m = jl_Math_sin($this.$random2.$nextExclusiveFloat()) * 128.0 + 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$5 = $this.$amounts2.data;
            var$5[$m] = Long_add(var$5[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer2.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer2.$color($color);
        var$8 = $this.$renderer2;
        var$9 = $x;
        var$8.$vertex(var$9, 0.0, 0.0);
        $this.$renderer2.$color($color);
        $this.$renderer2.$vertex(var$9, 0.125 * Long_toNumber($this.$amounts2.data[$x]) / Long_toNumber($this.$iterations2), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer2.$color((-6.221923240859403E37));
        var$8 = $this.$renderer2;
        var$11 = $j;
        var$8.$vertex(0.0, var$11, 0.0);
        $this.$renderer2.$color((-6.221923240859403E37));
        $this.$renderer2.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer2.$end();
    $this.$batch3.$setProjectionMatrix($camera.$combined);
    $this.$batch3.$begin0();
    var$12 = $this.$font3;
    var$13 = $this.$batch3;
    var$5 = $rt_createArray(jl_Object, 1);
    var$5.data[0] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$12.$draw(var$13, cgt_Stringf_format($rt_s(376), var$5), 64.0, 522.0, 384.0, 1, 1);
    $this.$batch3.$end();
}
function cgt_MathSinScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport2.$update0($width, $height, 1);
    $this.$viewport2.$apply(1);
}
function cgt_CauchyAlternateScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist1 = null;
    a.$batch4 = null;
    a.$renderer3 = null;
    a.$amounts3 = null;
    a.$iterations3 = Long_ZERO;
    a.$font4 = null;
    a.$viewport3 = null;
    a.$mainGame3 = null;
}
function cgt_CauchyAlternateScreen__init_(var_0) {
    var var_1 = new cgt_CauchyAlternateScreen();
    cgt_CauchyAlternateScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_CauchyAlternateScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font4 = $this.$mainGame3.$font0;
    a: {
        try {
            var$1 = new cgt_CauchyAlternateDistribution;
            var$2 = $this.$mainGame3.$random0;
            cgt_DistributorDemo_$callClinit();
            cgt_CauchyAlternateDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist1 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist1 = cgt_CauchyAlternateDistribution__init_0($this.$mainGame3.$random0, 0.0, 1.0);
    }
    $this.$batch4 = $this.$mainGame3.$batch0;
    $this.$viewport3 = cbguv_ScreenViewport__init_();
    $this.$renderer3 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts3, Long_ZERO);
    $this.$iterations3 = Long_ZERO;
}
function cgt_CauchyAlternateScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts3 = $rt_createLongArray(512);
    $this.$iterations3 = Long_ZERO;
    $this.$mainGame3 = $main;
}
function cgt_CauchyAlternateScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame3.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame3.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame3.$nextScreen();
        $this.$mainGame3.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport3.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts3, Long_ZERO);
        $this.$iterations3 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts3, Long_ZERO);
        $this.$iterations3 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts3, Long_ZERO);
        $this.$iterations3 = Long_ZERO;
    }
    $this.$iterations3 = Long_add($this.$iterations3, Long_fromInt(1));
    var$3 = $this.$dist1;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist1.$nextDouble() * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts3.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer3.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer3.$color($color);
        var$3 = $this.$renderer3;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer3.$color($color);
        $this.$renderer3.$vertex(var$9, Long_toNumber(Long_div($this.$amounts3.data[$x], $this.$iterations3)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer3.$color((-6.221923240859403E37));
        var$3 = $this.$renderer3;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer3.$color((-6.221923240859403E37));
        $this.$renderer3.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer3.$end();
    $this.$batch4.$setProjectionMatrix($camera.$combined);
    $this.$batch4.$begin0();
    var$3 = $this.$font4;
    var$12 = $this.$batch4;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist1.$getMedian());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(377), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font4.$draw($this.$batch4, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font4.$draw($this.$batch4, $rt_s(378), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch4.$end();
}
function cgt_CauchyAlternateScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport3.$update0($width, $height, 1);
    $this.$viewport3.$apply(1);
}
var cbgssu_ProgressBar = $rt_classWithoutFields(cbgssu_Widget);
function otci_CharFlow() {
    var a = this; jl_Object.call(a);
    a.$characters0 = null;
    a.$pointer = 0;
}
function otci_CharFlow__init_(var_0) {
    var var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
}
function otci_CharFlow__init_0($this, $characters) {
    jl_Object__init_0($this);
    $this.$characters0 = $characters;
}
function jur_RangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt2 = 0;
}
function jur_RangeSet__init_(var_0) {
    var var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_RangeSet__init_0($this, $cc) {
    jur_LeafSet__init_0($this);
    $this.$chars1 = $cc.$getInstance();
    $this.$alt2 = $cc.$alt0;
}
function jur_RangeSet_accepts($this, $strIndex, $testString) {
    return !$this.$chars1.$contains0($testString.$charAt($strIndex)) ? (-1) : 1;
}
function jur_RangeSet_getName($this) {
    var var$1, var$2, var$3;
    var$1 = !$this.$alt2 ? $rt_s(38) : $rt_s(39);
    var$2 = $this.$chars1.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(40)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
}
function jur_RangeSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects($this.$chars1, $set.$getChar());
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars1, $set.$chars1);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects0($this.$chars1, $set.$getChars0());
    if (!($set instanceof jur_SupplCharSet))
        return 1;
    return 0;
}
function jur_RangeSet_getChars($this) {
    return $this.$chars1;
}
function cbggg_SpriteBatch() {
    var a = this; jl_Object.call(a);
    a.$mesh = null;
    a.$vertices = null;
    a.$idx = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$drawing = 0;
    a.$transformMatrix = null;
    a.$projectionMatrix = null;
    a.$combinedMatrix = null;
    a.$blendingDisabled = 0;
    a.$blendSrcFunc = 0;
    a.$blendDstFunc = 0;
    a.$blendSrcFuncAlpha = 0;
    a.$blendDstFuncAlpha = 0;
    a.$shader = null;
    a.$customShader = null;
    a.$ownsShader = 0;
    a.$color0 = null;
    a.$colorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
var cbggg_SpriteBatch_defaultVertexDataType = null;
function cbggg_SpriteBatch_$callClinit() {
    cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
    cbggg_SpriteBatch__clinit_();
}
function cbggg_SpriteBatch__init_() {
    var var_0 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_0(var_0);
    return var_0;
}
function cbggg_SpriteBatch__init_1(var_0, var_1) {
    var var_2 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbggg_SpriteBatch__init_0($this) {
    cbggg_SpriteBatch_$callClinit();
    cbggg_SpriteBatch__init_2($this, 1000, null);
}
function cbggg_SpriteBatch__init_2($this, $size, $defaultShader) {
    var $vertexDataType, var$4, var$5, var$6, $indices, $j, $i, var$10, var$11, var$12;
    cbggg_SpriteBatch_$callClinit();
    jl_Object__init_0($this);
    $this.$idx = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$drawing = 0;
    $this.$transformMatrix = cbgm_Matrix4__init_();
    $this.$projectionMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix = cbgm_Matrix4__init_();
    $this.$blendingDisabled = 0;
    $this.$blendSrcFunc = 770;
    $this.$blendDstFunc = 771;
    $this.$blendSrcFuncAlpha = 770;
    $this.$blendDstFuncAlpha = 771;
    $this.$customShader = null;
    $this.$color0 = cbgg_Color__init_(1.0, 1.0, 1.0, 1.0);
    $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(379))).$append2($size)).$toString()));
    if (cbg_Gdx_gl30 === null)
        $vertexDataType = cbggg_SpriteBatch_defaultVertexDataType;
    else {
        cbgg_Mesh$VertexDataType_$callClinit();
        $vertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    }
    var$4 = new cbgg_Mesh;
    var$5 = $size * 4 | 0;
    var$6 = $size * 6 | 0;
    cbgg_Mesh__init_(var$4, $vertexDataType, 0, var$5, var$6, $rt_createArrayFromData(cbgg_VertexAttribute, [cbgg_VertexAttribute__init_(1, 2, $rt_s(380)), cbgg_VertexAttribute__init_(4, 4, $rt_s(381)), cbgg_VertexAttribute__init_(16, 2, $rt_s(382))]));
    $this.$mesh = var$4;
    $this.$projectionMatrix.$setToOrtho2D(0.0, 0.0, cbg_Gdx_graphics.$getWidth(), cbg_Gdx_graphics.$getHeight());
    $this.$vertices = $rt_createFloatArray($size * 20 | 0);
    $indices = $rt_createShortArray(var$6);
    $j = 0;
    $i = 0;
    while ($i < var$6) {
        var$10 = $indices.data;
        var$10[$i] = $j;
        var$10[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
        var$11 = $i + 2 | 0;
        var$12 = ($j + 2 | 0) << 16 >> 16;
        var$10[var$11] = var$12;
        var$10[$i + 3 | 0] = var$12;
        var$10[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
        var$10[$i + 5 | 0] = $j;
        $i = $i + 6 | 0;
        $j = ($j + 4 | 0) << 16 >> 16;
    }
    $this.$mesh.$setIndices($indices);
    if ($defaultShader !== null)
        $this.$shader = $defaultShader;
    else {
        $this.$shader = cbggg_SpriteBatch_createDefaultShader();
        $this.$ownsShader = 1;
    }
}
function cbggg_SpriteBatch_createDefaultShader() {
    var $vertexShader, $fragmentShader, $shader;
    cbggg_SpriteBatch_$callClinit();
    $vertexShader = $rt_s(383);
    $fragmentShader = $rt_s(384);
    $shader = cbggg_ShaderProgram__init_($vertexShader, $fragmentShader);
    if ($shader.$isCompiled())
        return $shader;
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(385))).$append1($shader.$getLog())).$toString()));
}
function cbggg_SpriteBatch_begin($this) {
    if ($this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(386)));
    $this.$renderCalls = 0;
    cbg_Gdx_gl.$glDepthMask(0);
    if ($this.$customShader === null)
        $this.$shader.$bind();
    else
        $this.$customShader.$bind();
    $this.$setupMatrices();
    $this.$drawing = 1;
}
function cbggg_SpriteBatch_end($this) {
    var $gl;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(387)));
    if ($this.$idx > 0)
        $this.$flush0();
    $this.$lastTexture = null;
    $this.$drawing = 0;
    $gl = cbg_Gdx_gl;
    $gl.$glDepthMask(1);
    if ($this.$isBlendingEnabled())
        $gl.$glDisable(3042);
}
function cbggg_SpriteBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
    var $verticesLength, var$6, $copyCount;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(388)));
    $verticesLength = $this.$vertices.data.length;
    if ($texture !== $this.$lastTexture) {
        $this.$switchTexture($texture);
        var$6 = $verticesLength;
    } else {
        var$6 = $verticesLength - $this.$idx | 0;
        if (!var$6) {
            $this.$flush0();
            var$6 = $verticesLength;
        }
    }
    $copyCount = jl_Math_min(var$6, $count);
    jl_System_arraycopy($spriteVertices, $offset, $this.$vertices, $this.$idx, $copyCount);
    $this.$idx = $this.$idx + $copyCount | 0;
    var$6 = $count - $copyCount | 0;
    while (var$6 > 0) {
        $offset = $offset + $copyCount | 0;
        $this.$flush0();
        $copyCount = jl_Math_min($verticesLength, var$6);
        jl_System_arraycopy($spriteVertices, $offset, $this.$vertices, 0, $copyCount);
        $this.$idx = $this.$idx + $copyCount | 0;
        var$6 = var$6 - $copyCount | 0;
    }
}
function cbggg_SpriteBatch_flush($this) {
    var $spritesInBatch, $count, $mesh, $indicesBuffer;
    if (!$this.$idx)
        return;
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $this.$idx / 20 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    $this.$lastTexture.$bind();
    $mesh = $this.$mesh;
    $mesh.$setVertices($this.$vertices, 0, $this.$idx);
    $indicesBuffer = $mesh.$getIndicesBuffer(1);
    $indicesBuffer.$position3(0);
    $indicesBuffer.$limit0($count);
    if ($this.$blendingDisabled)
        cbg_Gdx_gl.$glDisable(3042);
    else {
        cbg_Gdx_gl.$glEnable(3042);
        if ($this.$blendSrcFunc != (-1))
            cbg_Gdx_gl.$glBlendFuncSeparate($this.$blendSrcFunc, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
    }
    $mesh.$render($this.$customShader === null ? $this.$shader : $this.$customShader, 4, 0, $count);
    $this.$idx = 0;
}
function cbggg_SpriteBatch_setProjectionMatrix($this, $projection) {
    if ($this.$drawing)
        $this.$flush0();
    $this.$projectionMatrix.$set3($projection);
    if ($this.$drawing)
        $this.$setupMatrices();
}
function cbggg_SpriteBatch_setupMatrices($this) {
    ($this.$combinedMatrix.$set3($this.$projectionMatrix)).$mul($this.$transformMatrix);
    if ($this.$customShader === null) {
        $this.$shader.$setUniformMatrix($rt_s(389), $this.$combinedMatrix);
        $this.$shader.$setUniformi($rt_s(390), 0);
    } else {
        $this.$customShader.$setUniformMatrix($rt_s(389), $this.$combinedMatrix);
        $this.$customShader.$setUniformi($rt_s(390), 0);
    }
}
function cbggg_SpriteBatch_switchTexture($this, $texture) {
    $this.$flush0();
    $this.$lastTexture = $texture;
    $this.$invTexWidth = 1.0 / $texture.$getWidth();
    $this.$invTexHeight = 1.0 / $texture.$getHeight();
}
function cbggg_SpriteBatch_isBlendingEnabled($this) {
    return $this.$blendingDisabled ? 0 : 1;
}
function cbggg_SpriteBatch__clinit_() {
    cbgg_Mesh$VertexDataType_$callClinit();
    cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexArray;
}
var cbgg_Mesh$1 = $rt_classWithoutFields();
var cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null;
function cbgg_Mesh$1_$callClinit() {
    cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
    cbgg_Mesh$1__clinit_();
}
function cbgg_Mesh$1__clinit_() {
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = $rt_createIntArray((cbgg_Mesh$VertexDataType_values()).data.length);
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObject)] = 1;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObjectSubData)] = 2;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO)] = 3;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexArray)] = 4;
}
var otjt_Float32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
function jur_CharClass() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
function jur_CharClass__init_() {
    var var_0 = new jur_CharClass();
    jur_CharClass__init_0(var_0);
    return var_0;
}
function jur_CharClass__init_1(var_0, var_1) {
    var var_2 = new jur_CharClass();
    jur_CharClass__init_2(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass__init_3(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass();
    jur_CharClass__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass__init_0($this) {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_0();
}
function jur_CharClass__init_2($this, $ci, $uci) {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_0();
    $this.$ci = $ci;
    $this.$uci = $uci;
}
function jur_CharClass__init_4($this, $negative, $ci, $uci) {
    jur_CharClass__init_2($this, $ci, $uci);
    $this.$setNegative($negative);
}
function jur_CharClass_add($this, $ch) {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    $this.$bits.$clear5(jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                $this.$bits.$set4(jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI = 1;
                $ch = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            $this.$lowHighSurrogates.$clear5($ch - 55296 | 0);
        else
            $this.$lowHighSurrogates.$set4($ch - 55296 | 0);
    }
    if ($this.$inverted)
        $this.$bits.$clear5($ch);
    else
        $this.$bits.$set4($ch);
    if (!$this.$mayContainSupplCodepoints && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
}
function jur_CharClass_add0($this, $cc) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            $this.$lowHighSurrogates.$andNot($cc.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        $this.$lowHighSurrogates.$or($cc.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($cc.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$isNegative())
                $this.$bits.$andNot($cc.$getBits());
            else
                $this.$bits.$and($cc.$getBits());
        } else if (!$cc.$isNegative())
            $this.$bits.$or($cc.$getBits());
        else {
            $this.$bits.$xor($cc.$getBits());
            $this.$bits.$and($cc.$getBits());
            $this.$alt0 = $this.$alt0 ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$5__init_($this, $curAlt, $nb, $cc);
            else
                $this.$nonBitSet = jur_CharClass$4__init_($this, $curAlt, $nb, $cc);
        } else {
            if ($curAlt && !$this.$inverted && $this.$bits.$isEmpty())
                $this.$nonBitSet = jur_CharClass$1__init_($this, $cc);
            else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$3__init_($this, $curAlt, $cc);
            else
                $this.$nonBitSet = jur_CharClass$2__init_($this, $curAlt, $cc);
            $this.$hideBits = 1;
        }
    }
    return $this;
}
function jur_CharClass_add1($this, $i, $end) {
    if ($i > $end)
        $rt_throw(jl_IllegalArgumentException__init_0());
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            while (true) {
                if ($i >= ($end + 1 | 0))
                    break a;
                $this.$add($i);
                $i = $i + 1 | 0;
            }
        }
        if ($this.$inverted)
            $this.$bits.$clear6($i, $end + 1 | 0);
        else
            $this.$bits.$set($i, $end + 1 | 0);
    }
    return $this;
}
function jur_CharClass_union($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0())
        $this.$hasUCI = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
    } else if ($this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$or($clazz.$getBits());
            else
                $this.$bits.$and($clazz.$getBits());
        } else if ($this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 1;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$11__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$10__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$7__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$6__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$9__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$8__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_intersection($this, $clazz) {
    var $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($clazz.$hasUCI0())
        $this.$hasUCI = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
    } else if (!$this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt0 ^ $clazz.$isNegative())) {
            if (!$this.$alt0)
                $this.$bits.$and($clazz.$getBits());
            else
                $this.$bits.$or($clazz.$getBits());
        } else if (!$this.$alt0)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt0 = 0;
        }
    } else {
        $curAlt = $this.$alt0;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$17__init_($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$16__init_($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$13__init_($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$12__init_($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$15__init_($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$14__init_($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
}
function jur_CharClass_contains($this, $ch) {
    if ($this.$nonBitSet !== null)
        return $this.$alt0 ^ $this.$nonBitSet.$contains0($ch);
    return $this.$alt0 ^ $this.$bits.$get9($ch);
}
function jur_CharClass_getBits($this) {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
}
function jur_CharClass_getLowHighSurrogates($this) {
    return $this.$lowHighSurrogates;
}
function jur_CharClass_getInstance($this) {
    var $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = $this.$getBits();
    $res = jur_CharClass$18__init_($this, $bs);
    return $res.$setNegative($this.$isNegative());
}
function jur_CharClass_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$bits.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append15(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$bits.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
function jur_CharClass_hasUCI($this) {
    return $this.$hasUCI;
}
var jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
function jn_BufferUnderflowException__init_() {
    var var_0 = new jn_BufferUnderflowException();
    jn_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jn_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function cgt_BetaScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist2 = null;
    a.$batch5 = null;
    a.$renderer4 = null;
    a.$amounts4 = null;
    a.$iterations4 = Long_ZERO;
    a.$font5 = null;
    a.$viewport4 = null;
    a.$mainGame4 = null;
}
function cgt_BetaScreen__init_(var_0) {
    var var_1 = new cgt_BetaScreen();
    cgt_BetaScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_BetaScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font5 = $this.$mainGame4.$font0;
    a: {
        try {
            var$1 = new cgtrd_BetaDistribution;
            var$2 = $this.$mainGame4.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_BetaDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist2 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist2 = cgtrd_BetaDistribution__init_0($this.$mainGame4.$random0, 1.0, 1.0);
    }
    $this.$batch5 = $this.$mainGame4.$batch0;
    $this.$viewport4 = cbguv_ScreenViewport__init_();
    $this.$renderer4 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts4, Long_ZERO);
    $this.$iterations4 = Long_ZERO;
}
function cgt_BetaScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts4 = $rt_createLongArray(512);
    $this.$iterations4 = Long_ZERO;
    $this.$mainGame4 = $main;
}
function cgt_BetaScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame4.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame4.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport4.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts4, Long_ZERO);
        $this.$iterations4 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts4, Long_ZERO);
        $this.$iterations4 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts4, Long_ZERO);
        $this.$iterations4 = Long_ZERO;
    }
    $this.$iterations4 = Long_add($this.$iterations4, Long_fromInt(1));
    var$3 = $this.$dist2;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist2.$nextDouble() * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts4.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer4.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer4.$color($color);
        var$3 = $this.$renderer4;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer4.$color($color);
        $this.$renderer4.$vertex(var$9, Long_toNumber(Long_div($this.$amounts4.data[$x], $this.$iterations4)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer4.$color((-6.221923240859403E37));
        var$3 = $this.$renderer4;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer4.$color((-6.221923240859403E37));
        $this.$renderer4.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer4.$end();
    $this.$batch5.$setProjectionMatrix($camera.$combined);
    $this.$batch5.$begin0();
    var$3 = $this.$font5;
    var$12 = $this.$batch5;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$13[0] = jl_Double_valueOf(cgt_DistributorDemo_a);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$14 = $this.$dist2;
    var$13[2] = jl_Double_valueOf(var$14.$getMean());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(391), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font5.$draw($this.$batch5, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font5.$draw($this.$batch5, $rt_s(52), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch5.$end();
}
function cgt_BetaScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport4.$update0($width, $height, 1);
    $this.$viewport4.$apply(1);
}
var cgtd_TextTools = $rt_classWithoutFields();
function cgtd_TextTools_safeSubstring($source, $beginIndex, $endIndex) {
    if ($source !== null && !$source.$isEmpty()) {
        if ($beginIndex < 0)
            $beginIndex = 0;
        if (!($endIndex >= 0 && $endIndex <= $source.$length()))
            $endIndex = $source.$length();
        if ($beginIndex < $endIndex)
            return $source.$substring0($beginIndex, $endIndex);
        return $rt_s(45);
    }
    return $rt_s(45);
}
var cbgggpi_ColorInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var jn_FloatBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
function jn_FloatBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverByteBufferLittleEndian();
    jn_FloatBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer0.$array0.data;
    var$3 = $this.$start2;
    var$4 = $index * 4 | 0;
    $value = (var$2[var$3 + var$4 | 0] & 255) << 24 | ($this.$byteByffer0.$array0.data[($this.$start2 + var$4 | 0) + 1 | 0] & 255) << 16 | ($this.$byteByffer0.$array0.data[($this.$start2 + var$4 | 0) + 2 | 0] & 255) << 8 | $this.$byteByffer0.$array0.data[($this.$start2 + var$4 | 0) + 3 | 0] & 255;
    return $rt_intBitsToFloat($value);
}
function jn_FloatBufferOverByteBufferLittleEndian_putElement($this, $index, $f) {
    var $value, var$4, var$5, var$6;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer0.$array0.data;
    var$5 = $this.$start2;
    var$6 = $index * 4 | 0;
    var$4[var$5 + var$6 | 0] = $value >> 24 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start2 + var$6 | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start2 + var$6 | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start2 + var$6 | 0) + 3 | 0] = $value << 24 >> 24;
}
var cbgm_Octree$RayCastResult = $rt_classWithoutFields();
var cbgssu_DragAndDrop$Payload = $rt_classWithoutFields();
var cbgssu_List = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_SelectBox$SelectBoxScrollPane$4 = $rt_classWithoutFields(cbgssu_List);
var cbgssu_SelectBox$SelectBoxScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener);
var ji_IOException = $rt_classWithoutFields(jl_Exception);
function ji_IOException__init_() {
    var var_0 = new ji_IOException();
    ji_IOException__init_0(var_0);
    return var_0;
}
function ji_IOException__init_0($this) {
    jl_Exception__init_0($this);
}
var jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException);
function jnc_CharacterCodingException__init_() {
    var var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_0(var_0);
    return var_0;
}
function jnc_CharacterCodingException__init_0($this) {
    ji_IOException__init_0($this);
}
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length3 = 0;
}
function jnc_MalformedInputException__init_(var_0) {
    var var_1 = new jnc_MalformedInputException();
    jnc_MalformedInputException__init_0(var_1, var_0);
    return var_1;
}
function jnc_MalformedInputException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length3 = $length;
}
function jnc_MalformedInputException_getMessage($this) {
    var var$1, var$2;
    var$1 = $this.$length3;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(392)), var$1);
    return jl_StringBuilder_toString(var$2);
}
var cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Filter_NearestNeighbour = null;
var cbgg_Pixmap$Filter_BiLinear = null;
var cbgg_Pixmap$Filter_$VALUES = null;
function cbgg_Pixmap$Filter_$callClinit() {
    cbgg_Pixmap$Filter_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Filter);
    cbgg_Pixmap$Filter__clinit_();
}
function cbgg_Pixmap$Filter__init_(var_0, var_1) {
    var var_2 = new cbgg_Pixmap$Filter();
    cbgg_Pixmap$Filter__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Pixmap$Filter__init_0($this, var$1, var$2) {
    cbgg_Pixmap$Filter_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Pixmap$Filter__clinit_() {
    cbgg_Pixmap$Filter_NearestNeighbour = cbgg_Pixmap$Filter__init_($rt_s(393), 0);
    cbgg_Pixmap$Filter_BiLinear = cbgg_Pixmap$Filter__init_($rt_s(394), 1);
    cbgg_Pixmap$Filter_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Filter, [cbgg_Pixmap$Filter_NearestNeighbour, cbgg_Pixmap$Filter_BiLinear]);
}
function cgtrd_KumaraswamyDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha1 = 0.0;
    a.$beta0 = 0.0;
}
function cgtrd_KumaraswamyDistribution__init_0(var_0, var_1, var_2) {
    var var_3 = new cgtrd_KumaraswamyDistribution();
    cgtrd_KumaraswamyDistribution__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_KumaraswamyDistribution__init_($this, $generator, $alpha, $beta) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(395)));
}
function cgtrd_KumaraswamyDistribution_getMean($this) {
    var $b;
    $b = 1.0 / $this.$beta0;
    return cgtd_MathTools_factorial($this.$alpha1) * cgtd_MathTools_gamma($b) * $b / cgtd_MathTools_factorial($this.$alpha1 + $b);
}
function cgtrd_KumaraswamyDistribution_setParameters($this, $a, $b, $c) {
    if ($a > 0.0 && $b > 0.0) {
        $this.$alpha1 = 1.0 / $a;
        $this.$beta0 = 1.0 / $b;
        return 1;
    }
    return 0;
}
function cgtrd_KumaraswamyDistribution_nextDouble($this) {
    return cgtrd_KumaraswamyDistribution_sample($this.$generator, $this.$alpha1, $this.$beta0);
}
function cgtrd_KumaraswamyDistribution_sample($generator, $inverseAlpha, $inverseBeta) {
    return jl_Math_pow(1.0 - jl_Math_pow($generator.$nextExclusiveDouble(), $inverseBeta), $inverseAlpha);
}
var jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception);
function jl_CloneNotSupportedException__init_() {
    var var_0 = new jl_CloneNotSupportedException();
    jl_CloneNotSupportedException__init_0(var_0);
    return var_0;
}
function jl_CloneNotSupportedException__init_0($this) {
    jl_Exception__init_0($this);
}
var jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer);
function jn_ShortBufferImpl__init_($this, $capacity, $position, $limit) {
    jn_ShortBuffer__init_($this, $capacity, $position, $limit);
}
function jn_ShortBufferImpl_get($this, $index) {
    var var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$getElement1($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(264)), $index), $rt_s(54)), var$3), 41);
    jl_IndexOutOfBoundsException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
}
function jn_ShortBufferImpl_isReadOnly($this) {
    return $this.$readOnly();
}
function jn_ShortBufferOverByteBuffer() {
    var a = this; jn_ShortBufferImpl.call(a);
    a.$byteByffer1 = null;
    a.$readOnly5 = 0;
    a.$start7 = 0;
}
function jn_ShortBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start7 = $start;
    $this.$byteByffer1 = $byteBuffer;
    $this.$readOnly5 = $readOnly;
}
function jn_ShortBufferOverByteBuffer_readOnly($this) {
    return $this.$readOnly5;
}
var cbgu_ScreenUtils = $rt_classWithoutFields();
function cbgu_ScreenUtils_clear($r, $g, $b, $a) {
    cbgu_ScreenUtils_clear0($r, $g, $b, $a, 0);
}
function cbgu_ScreenUtils_clear0($r, $g, $b, $a, $clearDepth) {
    var $mask;
    cbg_Gdx_gl.$glClearColor($r, $g, $b, $a);
    $mask = 16384;
    if ($clearDepth)
        $mask = 16640;
    cbg_Gdx_gl.$glClear($mask);
}
var cbgm_Interpolation$PowIn = $rt_classWithoutFields(cbgm_Interpolation$Pow);
function cbgm_Interpolation$PowIn__init_(var_0) {
    var var_1 = new cbgm_Interpolation$PowIn();
    cbgm_Interpolation$PowIn__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$PowIn__init_0($this, $power) {
    cbgm_Interpolation$Pow__init_0($this, $power);
}
function cbgm_RandomXS128() {
    var a = this; ju_Random.call(a);
    a.$seed0 = Long_ZERO;
    a.$seed1 = Long_ZERO;
}
function cbgm_RandomXS128__init_() {
    var var_0 = new cbgm_RandomXS128();
    cbgm_RandomXS128__init_0(var_0);
    return var_0;
}
function cbgm_RandomXS128__init_0($this) {
    ju_Random__init_0($this);
    $this.$setSeed((ju_Random__init_()).$nextLong());
}
function cbgm_RandomXS128_setSeed($this, $seed) {
    var $seed0;
    if (Long_eq($seed, Long_ZERO))
        $seed = Long_create(0, 2147483648);
    $seed0 = cbgm_RandomXS128_murmurHash3($seed);
    $this.$setState($seed0, cbgm_RandomXS128_murmurHash3($seed0));
}
function cbgm_RandomXS128_setState($this, $seed0, $seed1) {
    $this.$seed0 = $seed0;
    $this.$seed1 = $seed1;
}
function cbgm_RandomXS128_murmurHash3($x) {
    var var$2;
    var$2 = Long_xor($x, Long_shru($x, 33));
    var$2 = Long_mul(var$2, Long_create(3981806797, 4283543511));
    var$2 = Long_xor(var$2, Long_shru(var$2, 33));
    var$2 = Long_mul(var$2, Long_create(444984403, 3301882366));
    var$2 = Long_xor(var$2, Long_shru(var$2, 33));
    return var$2;
}
var otjc_JSArrayReader = $rt_classWithoutFields(0);
var otjc_JSArray = $rt_classWithoutFields();
function otjc_JSArray_get$exported$0(var$0, var$1) {
    return var$0.$get10(var$1);
}
function otjc_JSArray_getLength$exported$1(var$0) {
    return var$0.$getLength();
}
var cbgssu_VerticalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup);
function jm_BigInteger() {
    var a = this; jl_Number.call(a);
    a.$digits = null;
    a.$numberLength = 0;
    a.$sign1 = 0;
    a.$firstNonzeroDigit = 0;
}
var jm_BigInteger_ZERO = null;
var jm_BigInteger_ONE = null;
var jm_BigInteger_TEN = null;
var jm_BigInteger_MINUS_ONE = null;
var jm_BigInteger_SMALL_VALUES = null;
var jm_BigInteger_TWO_POWS = null;
function jm_BigInteger_$callClinit() {
    jm_BigInteger_$callClinit = $rt_eraseClinit(jm_BigInteger);
    jm_BigInteger__clinit_();
}
function jm_BigInteger__init_0(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_1(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_(var_0, var_1, var_2) {
    var var_3 = new jm_BigInteger();
    jm_BigInteger__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function jm_BigInteger__init_3(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_4(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_5(var_0, var_1) {
    var var_2 = new jm_BigInteger();
    jm_BigInteger__init_6(var_2, var_0, var_1);
    return var_2;
}
function jm_BigInteger__init_1($this, $sign, $value) {
    var var$3;
    jm_BigInteger_$callClinit();
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    $this.$numberLength = 1;
    var$3 = $rt_createIntArray(1);
    var$3.data[0] = $value;
    $this.$digits = var$3;
}
function jm_BigInteger__init_2($this, $sign, $numberLength, $digits) {
    jm_BigInteger_$callClinit();
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    $this.$numberLength = $numberLength;
    $this.$digits = $digits;
}
function jm_BigInteger__init_4($this, $sign, $val) {
    var var$3;
    jm_BigInteger_$callClinit();
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    $this.$sign1 = $sign;
    if (Long_eq(Long_and($val, Long_create(0, 4294967295)), Long_ZERO)) {
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = Long_lo($val);
        $this.$digits = var$3;
    } else {
        $this.$numberLength = 2;
        $this.$digits = $rt_createIntArrayFromData([Long_lo($val), Long_hi($val)]);
    }
}
function jm_BigInteger__init_6($this, $signum, $digits) {
    var var$3, var$4;
    jm_BigInteger_$callClinit();
    var$3 = $digits.data;
    jl_Number__init_($this);
    $this.$firstNonzeroDigit = (-2);
    var$4 = var$3.length;
    if (var$4) {
        $this.$sign1 = $signum;
        $this.$numberLength = var$4;
        $this.$digits = $digits;
        jm_BigInteger_cutOffLeadingZeroes($this);
    } else {
        $this.$sign1 = 0;
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = 0;
        $this.$digits = var$3;
    }
}
function jm_BigInteger_valueOf($val) {
    jm_BigInteger_$callClinit();
    if (Long_lt($val, Long_ZERO)) {
        if (Long_eq($val, Long_fromInt(-1)))
            return jm_BigInteger_MINUS_ONE;
        return jm_BigInteger__init_3((-1), Long_neg($val));
    }
    if (Long_gt($val, Long_fromInt(10)))
        return jm_BigInteger__init_3(1, $val);
    return jm_BigInteger_SMALL_VALUES.data[Long_lo($val)];
}
function jm_BigInteger_negate($this) {
    return !$this.$sign1 ? $this : jm_BigInteger__init_( -$this.$sign1 | 0, $this.$numberLength, $this.$digits);
}
function jm_BigInteger_add($this, $val) {
    return jm_Elementary_add($this, $val);
}
function jm_BigInteger_subtract($this, $val) {
    return jm_Elementary_subtract($this, $val);
}
function jm_BigInteger_shiftRight($this, $n) {
    if ($n && $this.$sign1)
        return $n > 0 ? jm_BitLevel_shiftRight0($this, $n) : jm_BitLevel_shiftLeft0($this,  -$n | 0);
    return $this;
}
function jm_BigInteger_shiftLeft($this, $n) {
    if ($n && $this.$sign1)
        return $n > 0 ? jm_BitLevel_shiftLeft0($this, $n) : jm_BitLevel_shiftRight0($this,  -$n | 0);
    return $this;
}
function jm_BigInteger_bitLength($this) {
    return jm_BitLevel_bitLength($this);
}
function jm_BigInteger_testBit($this, $n) {
    var $intCount, $digit, var$4, $firstNonZeroDigit;
    if (!$n)
        return !($this.$digits.data[0] & 1) ? 0 : 1;
    if ($n < 0)
        $rt_throw(jl_ArithmeticException__init_($rt_s(396)));
    $intCount = $n >> 5;
    if ($intCount >= $this.$numberLength)
        return $this.$sign1 >= 0 ? 0 : 1;
    $digit = $this.$digits.data[$intCount];
    var$4 = 1 << ($n & 31);
    if ($this.$sign1 < 0) {
        $firstNonZeroDigit = $this.$getFirstNonzeroDigit();
        if ($intCount < $firstNonZeroDigit)
            return 0;
        $digit = $firstNonZeroDigit == $intCount ?  -$digit | 0 : $digit ^ (-1);
    }
    return !($digit & var$4) ? 0 : 1;
}
function jm_BigInteger_and($this, $val) {
    return jm_Logical_and($this, $val);
}
function jm_BigInteger_intValue($this) {
    return $rt_imul($this.$sign1, $this.$digits.data[0]);
}
function jm_BigInteger_equals($this, $x) {
    var $x1;
    if ($this === $x)
        return 1;
    if (!($x instanceof jm_BigInteger))
        return 0;
    $x1 = $x;
    return $this.$sign1 == $x1.$sign1 && $this.$numberLength == $x1.$numberLength && $this.$equalsArrays($x1.$digits) ? 1 : 0;
}
function jm_BigInteger_equalsArrays($this, $b) {
    var $i, var$3;
    $i = $this.$numberLength - 1 | 0;
    while ($i >= 0) {
        var$3 = $b.data;
        if ($this.$digits.data[$i] != var$3[$i])
            break;
        $i = $i + (-1) | 0;
    }
    return $i >= 0 ? 0 : 1;
}
function jm_BigInteger_multiply($this, $val) {
    if (!$val.$sign1) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ZERO;
    }
    if ($this.$sign1)
        return jm_Multiplication_multiply($this, $val);
    jm_BigInteger_$callClinit();
    return jm_BigInteger_ZERO;
}
function jm_BigInteger_pow($this, $exp) {
    var $x;
    if ($exp < 0)
        $rt_throw(jl_ArithmeticException__init_($rt_s(397)));
    if (!$exp) {
        jm_BigInteger_$callClinit();
        return jm_BigInteger_ONE;
    }
    if ($exp != 1) {
        jm_BigInteger_$callClinit();
        if (!$this.$equals(jm_BigInteger_ONE) && !$this.$equals(jm_BigInteger_ZERO)) {
            if ($this.$testBit(0))
                return jm_Multiplication_pow($this, $exp);
            $x = 1;
            while (!$this.$testBit($x)) {
                $x = $x + 1 | 0;
            }
            return (jm_BigInteger_getPowerOfTwo($rt_imul($x, $exp))).$multiply0(($this.$shiftRight1($x)).$pow1($exp));
        }
    }
    return $this;
}
function jm_BigInteger_divide($this, $divisor) {
    var $divisorSign, $thisSign, $thisLen, $divisorLen, $val, var$7, $cmp, $resLength, $resDigits, $resSign, $result;
    if (!$divisor.$sign1)
        $rt_throw(jl_ArithmeticException__init_($rt_s(398)));
    $divisorSign = $divisor.$sign1;
    if ($divisor.$isOne()) {
        if ($divisor.$sign1 <= 0)
            $this = $this.$negate();
        return $this;
    }
    $thisSign = $this.$sign1;
    $thisLen = $this.$numberLength;
    $divisorLen = $divisor.$numberLength;
    if (($thisLen + $divisorLen | 0) == 2) {
        $val = Long_div(Long_and(Long_fromInt($this.$digits.data[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($divisor.$digits.data[0]), Long_create(4294967295, 0)));
        if ($thisSign != $divisorSign)
            $val = Long_neg($val);
        return jm_BigInteger_valueOf($val);
    }
    var$7 = $rt_compare($thisLen, $divisorLen);
    $cmp = !var$7 ? jm_Elementary_compareArrays($this.$digits, $divisor.$digits, $thisLen) : var$7 <= 0 ? (-1) : 1;
    if (!$cmp)
        return $thisSign != $divisorSign ? jm_BigInteger_MINUS_ONE : jm_BigInteger_ONE;
    if ($cmp == (-1))
        return jm_BigInteger_ZERO;
    $resLength = ($thisLen - $divisorLen | 0) + 1 | 0;
    $resDigits = $rt_createIntArray($resLength);
    $resSign = $thisSign != $divisorSign ? (-1) : 1;
    if ($divisorLen != 1)
        jm_Division_divide($resDigits, $resLength, $this.$digits, $thisLen, $divisor.$digits, $divisorLen);
    else
        jm_Division_divideArrayByInt($resDigits, $this.$digits, $thisLen, $divisor.$digits.data[0]);
    $result = jm_BigInteger__init_($resSign, $resLength, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
}
function jm_BigInteger_cutOffLeadingZeroes($this) {
    var var$1, var$2, var$3;
    while ($this.$numberLength > 0) {
        var$1 = $this.$digits.data;
        var$2 = $this.$numberLength - 1 | 0;
        $this.$numberLength = var$2;
        if (var$1[var$2])
            break;
    }
    var$1 = $this.$digits.data;
    var$3 = $this.$numberLength;
    $this.$numberLength = var$3 + 1 | 0;
    if (!var$1[var$3])
        $this.$sign1 = 0;
}
function jm_BigInteger_isOne($this) {
    return $this.$numberLength == 1 && $this.$digits.data[0] == 1 ? 1 : 0;
}
function jm_BigInteger_getFirstNonzeroDigit($this) {
    var $i;
    if ($this.$firstNonzeroDigit == (-2)) {
        if (!$this.$sign1)
            $i = (-1);
        else {
            $i = 0;
            while (!$this.$digits.data[$i]) {
                $i = $i + 1 | 0;
            }
        }
        $this.$firstNonzeroDigit = $i;
    }
    return $this.$firstNonzeroDigit;
}
function jm_BigInteger_getPowerOfTwo($exp) {
    var $intCount, $bitN, var$4, $resDigits, var$6;
    jm_BigInteger_$callClinit();
    if ($exp < jm_BigInteger_TWO_POWS.data.length)
        return jm_BigInteger_TWO_POWS.data[$exp];
    $intCount = $exp >> 5;
    $bitN = $exp & 31;
    var$4 = $intCount + 1 | 0;
    $resDigits = $rt_createIntArray(var$4);
    var$6 = $resDigits.data;
    var$6[$intCount] = 1 << $bitN;
    return jm_BigInteger__init_(1, var$4, $resDigits);
}
function jm_BigInteger__clinit_() {
    var $i;
    jm_BigInteger_ZERO = jm_BigInteger__init_0(0, 0);
    jm_BigInteger_ONE = jm_BigInteger__init_0(1, 1);
    jm_BigInteger_TEN = jm_BigInteger__init_0(1, 10);
    jm_BigInteger_MINUS_ONE = jm_BigInteger__init_0((-1), 1);
    jm_BigInteger_SMALL_VALUES = $rt_createArrayFromData(jm_BigInteger, [jm_BigInteger_ZERO, jm_BigInteger_ONE, jm_BigInteger__init_0(1, 2), jm_BigInteger__init_0(1, 3), jm_BigInteger__init_0(1, 4), jm_BigInteger__init_0(1, 5), jm_BigInteger__init_0(1, 6), jm_BigInteger__init_0(1, 7), jm_BigInteger__init_0(1, 8), jm_BigInteger__init_0(1, 9), jm_BigInteger_TEN]);
    jm_BigInteger_TWO_POWS = $rt_createArray(jm_BigInteger, 32);
    $i = 0;
    while ($i < jm_BigInteger_TWO_POWS.data.length) {
        jm_BigInteger_TWO_POWS.data[$i] = jm_BigInteger_valueOf(Long_shl(Long_fromInt(1), $i));
        $i = $i + 1 | 0;
    }
}
var jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit);
function jur_AbstractCharClass$LazyNonDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonDigit__init_0($this) {
    jur_AbstractCharClass$LazyDigit__init_0($this);
}
function jur_AbstractCharClass$LazyNonDigit_computeValue($this) {
    var $chCl;
    $chCl = (jur_AbstractCharClass$LazyDigit_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function cbguv_Viewport() {
    var a = this; jl_Object.call(a);
    a.$camera = null;
    a.$worldWidth = 0.0;
    a.$worldHeight = 0.0;
    a.$screenX = 0;
    a.$screenY = 0;
    a.$screenWidth = 0;
    a.$screenHeight = 0;
    a.$tmp = null;
}
function cbguv_Viewport__init_($this) {
    jl_Object__init_0($this);
    $this.$tmp = cbgm_Vector3__init_();
}
function cbguv_Viewport_apply($this, $centerCamera) {
    cbggg_HdpiUtils_glViewport($this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight);
    $this.$camera.$viewportWidth = $this.$worldWidth;
    $this.$camera.$viewportHeight = $this.$worldHeight;
    if ($centerCamera)
        $this.$camera.$position6.$set0($this.$worldWidth / 2.0, $this.$worldHeight / 2.0, 0.0);
    $this.$camera.$update();
}
function cbguv_Viewport_getCamera($this) {
    return $this.$camera;
}
function cbguv_Viewport_setCamera($this, $camera) {
    $this.$camera = $camera;
}
function cbguv_Viewport_setWorldSize($this, $worldWidth, $worldHeight) {
    $this.$worldWidth = $worldWidth;
    $this.$worldHeight = $worldHeight;
}
function cbguv_Viewport_setScreenBounds($this, $screenX, $screenY, $screenWidth, $screenHeight) {
    $this.$screenX = $screenX;
    $this.$screenY = $screenY;
    $this.$screenWidth = $screenWidth;
    $this.$screenHeight = $screenHeight;
}
function cbguv_ScreenViewport() {
    cbguv_Viewport.call(this);
    this.$unitsPerPixel = 0.0;
}
function cbguv_ScreenViewport__init_() {
    var var_0 = new cbguv_ScreenViewport();
    cbguv_ScreenViewport__init_0(var_0);
    return var_0;
}
function cbguv_ScreenViewport__init_1(var_0) {
    var var_1 = new cbguv_ScreenViewport();
    cbguv_ScreenViewport__init_2(var_1, var_0);
    return var_1;
}
function cbguv_ScreenViewport__init_0($this) {
    cbguv_ScreenViewport__init_2($this, cbgg_OrthographicCamera__init_());
}
function cbguv_ScreenViewport__init_2($this, $camera) {
    cbguv_Viewport__init_($this);
    $this.$unitsPerPixel = 1.0;
    $this.$setCamera($camera);
}
function cbguv_ScreenViewport_update($this, $screenWidth, $screenHeight, $centerCamera) {
    $this.$setScreenBounds(0, 0, $screenWidth, $screenHeight);
    $this.$setWorldSize($screenWidth * $this.$unitsPerPixel, $screenHeight * $this.$unitsPerPixel);
    $this.$apply($centerCamera);
}
function cbggg_BitmapFont() {
    var a = this; jl_Object.call(a);
    a.$data2 = null;
    a.$regions = null;
    a.$cache = null;
    a.$flipped = 0;
    a.$integer = 0;
    a.$ownsTexture = 0;
}
function cbggg_BitmapFont__init_(var_0) {
    var var_1 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_0(var_1, var_0);
    return var_1;
}
function cbggg_BitmapFont__init_1(var_0, var_1) {
    var var_2 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbggg_BitmapFont__init_3(var_0, var_1, var_2) {
    var var_3 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_4(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_BitmapFont__init_5(var_0, var_1, var_2) {
    var var_3 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_6(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_BitmapFont__init_0($this, $fontFile) {
    cbggg_BitmapFont__init_2($this, $fontFile, 0);
}
function cbggg_BitmapFont__init_2($this, $fontFile, $flip) {
    cbggg_BitmapFont__init_4($this, cbggg_BitmapFont$BitmapFontData__init_($fontFile, $flip), null, 1);
}
function cbggg_BitmapFont__init_4($this, $data, $region, $integer) {
    var var$4, var$5;
    if ($region === null)
        var$4 = null;
    else {
        var$5 = $rt_createArray(cbggg_TextureRegion, 1);
        var$5.data[0] = $region;
        var$4 = cbgu_Array_with(var$5);
    }
    cbggg_BitmapFont__init_6($this, $data, var$4, $integer);
}
function cbggg_BitmapFont__init_6($this, $data, $pageRegions, $integer) {
    var $n, $i, $file;
    jl_Object__init_0($this);
    $this.$flipped = $data.$flipped0;
    $this.$data2 = $data;
    $this.$integer = $integer;
    if ($pageRegions !== null && $pageRegions.$size) {
        $this.$regions = $pageRegions;
        $this.$ownsTexture = 0;
    } else {
        if ($data.$imagePaths === null)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(399)));
        $n = $data.$imagePaths.data.length;
        $this.$regions = cbgu_Array__init_2($n);
        $i = 0;
        while ($i < $n) {
            $file = $data.$fontFile === null ? cbg_Gdx_files.$internal($data.$imagePaths.data[$i]) : cbg_Gdx_files.$getFileHandle($data.$imagePaths.data[$i], $data.$fontFile.$type3());
            $this.$regions.$add3(cbggg_TextureRegion__init_(cbgg_Texture__init_($file, 0)));
            $i = $i + 1 | 0;
        }
        $this.$ownsTexture = 1;
    }
    $this.$cache = $this.$newFontCache();
    $this.$load0($data);
}
function cbggg_BitmapFont_load($this, $data) {
    var var$2, var$3, var$4, $page, var$6, var$7, var$8, $glyph;
    var$2 = $data.$glyphs.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        a: {
            $page = var$2[var$4];
            if ($page !== null) {
                var$6 = $page.data;
                var$7 = var$6.length;
                var$8 = 0;
                while (true) {
                    if (var$8 >= var$7)
                        break a;
                    $glyph = var$6[var$8];
                    if ($glyph !== null)
                        $data.$setGlyphRegion($glyph, $this.$regions.$get3($glyph.$page));
                    var$8 = var$8 + 1 | 0;
                }
            }
        }
        var$4 = var$4 + 1 | 0;
    }
    if ($data.$missingGlyph !== null)
        $data.$setGlyphRegion($data.$missingGlyph, $this.$regions.$get3($data.$missingGlyph.$page));
}
function cbggg_BitmapFont_draw($this, $batch, $str, $x, $y, $targetWidth, $halign, $wrap) {
    var $layout;
    $this.$cache.$clear8();
    $layout = $this.$cache.$addText($str, $x, $y, $targetWidth, $halign, $wrap);
    $this.$cache.$draw0($batch);
    return $layout;
}
function cbggg_BitmapFont_setColor($this, $color) {
    ($this.$cache.$getColor()).$set5($color);
}
function cbggg_BitmapFont_getRegions($this) {
    return $this.$regions;
}
function cbggg_BitmapFont_newFontCache($this) {
    return cbggg_BitmapFontCache__init_($this, $this.$integer);
}
var cbgggm_NodePart = $rt_classWithoutFields();
function jur_CIBackReferenceSet() {
    var a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter0 = 0;
}
function jur_CIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_JointSet__init_0($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter0 = $consCounter;
}
function jur_CIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter0, $group.$length());
                return $this.$next.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = $group.$charAt($i);
            var$7 = $stringIndex + $i | 0;
            if (var$6 != $testString.$charAt(var$7) && jur_Pattern_getSupplement($group.$charAt($i)) != $testString.$charAt(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_CIBackReferenceSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_CIBackReferenceSet_getString($this, $matchResult) {
    var $res;
    $res = $matchResult.$getGroupNoCheck($this.$referencedGroup);
    return $res;
}
function jur_CIBackReferenceSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$groupIndex0;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(400)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_CIBackReferenceSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter0) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter0, (-1));
    return $res;
}
function jur_AbstractCharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$018 = null;
}
function jur_AbstractCharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$1();
    jur_AbstractCharClass$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$1__init_0($this, $this$0, var$2) {
    $this.$this$018 = $this$0;
    $this.$val$lHS = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$1_contains($this, $ch) {
    var $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS.$get9($index) : 0;
}
function jur_AbstractCharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$019 = null;
}
function jur_AbstractCharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AbstractCharClass$2();
    jur_AbstractCharClass$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AbstractCharClass$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$019 = $this$0;
    $this.$val$lHS0 = var$2;
    $this.$val$thisClass = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$2_contains($this, $ch) {
    var $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS0.$get9($index) : 0;
    return $this.$val$thisClass.$contains0($ch) && !$containslHS ? 1 : 0;
}
function cgt_NormalAlternateScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist3 = null;
    a.$batch6 = null;
    a.$renderer5 = null;
    a.$amounts5 = null;
    a.$iterations5 = Long_ZERO;
    a.$font6 = null;
    a.$viewport5 = null;
    a.$mode1 = 0;
    a.$mainGame5 = null;
}
function cgt_NormalAlternateScreen__init_(var_0) {
    var var_1 = new cgt_NormalAlternateScreen();
    cgt_NormalAlternateScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_NormalAlternateScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font6 = $this.$mainGame5.$font0;
    a: {
        try {
            var$1 = new cgtrd_NormalDistribution;
            var$2 = $this.$mainGame5.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_NormalDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist3 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist3 = cgtrd_NormalDistribution__init_0($this.$mainGame5.$random0, 0.0, 1.0);
    }
    $this.$batch6 = $this.$mainGame5.$batch0;
    $this.$viewport5 = cbguv_ScreenViewport__init_();
    $this.$renderer5 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts5, Long_ZERO);
    $this.$iterations5 = Long_ZERO;
}
function cgt_NormalAlternateScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts5 = $rt_createLongArray(512);
    $this.$iterations5 = Long_ZERO;
    $this.$mode1 = 0;
    $this.$mainGame5 = $main;
}
function cgt_NormalAlternateScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, var$7, var$8, var$9, var$10, var$11, $x, $color, var$14, $j, var$16, var$17, var$18;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame5.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame5.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(38)) {
        $this.$mode1 = ($this.$mode1 + 9 | 0) % 10 | 0;
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(39)) {
        $this.$mode1 = ($this.$mode1 + 1 | 0) % 10 | 0;
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame5.$nextScreen();
        $this.$mainGame5.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport5.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts5, Long_ZERO);
        $this.$iterations5 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts5, Long_ZERO);
        $this.$iterations5 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts5, Long_ZERO);
        $this.$iterations5 = Long_ZERO;
    }
    a: {
        b: {
            c: {
                $this.$iterations5 = Long_add($this.$iterations5, Long_fromInt(4));
                var$3 = $this.$dist3;
                cgt_DistributorDemo_$callClinit();
                var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
                switch ($this.$mode1) {
                    case 0:
                        break;
                    case 1:
                        $i = 0;
                        while ($i < 262144) {
                            $m = ($this.$dist3.$getMu() + $this.$dist3.$getSigma() * $this.$pop0()) * 128.0 + 256.0 | 0;
                            if ($m >= 0 && $m < 512) {
                                var$6 = $this.$amounts5.data;
                                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                            }
                            $i = $i + 1 | 0;
                        }
                        break a;
                    case 2:
                        $i = 0;
                        while ($i < 262144) {
                            $m = ($this.$dist3.$getMu() + $this.$dist3.$getSigma() * cgtr_EnhancedRandom_probit($this.$dist3.$generator.$nextExclusiveDouble())) * 128.0 + 256.0 | 0;
                            if ($m >= 0 && $m < 512) {
                                var$6 = $this.$amounts5.data;
                                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                            }
                            $i = $i + 1 | 0;
                        }
                        break a;
                    case 3:
                        $i = 0;
                        while ($i < 262144) {
                            $m = $this.$simons($this.$dist3.$generator.$nextExclusiveDouble(), $this.$dist3.$getMu(), $this.$dist3.$getSigma()) * 128.0 + 256.0 | 0;
                            if ($m >= 0 && $m < 512) {
                                var$6 = $this.$amounts5.data;
                                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                            }
                            $i = $i + 1 | 0;
                        }
                        break a;
                    case 4:
                        $i = 0;
                        while ($i < 262144) {
                            $m = ($this.$dist3.$getMu() + $this.$dist3.$getSigma() * cgt_NormalAlternateScreen_winitzki($this.$dist3.$generator.$nextExclusiveDouble())) * 128.0 + 256.0 | 0;
                            if ($m >= 0 && $m < 512) {
                                var$6 = $this.$amounts5.data;
                                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                            }
                            $i = $i + 1 | 0;
                        }
                        break a;
                    case 5:
                        $i = 0;
                        while ($i < 262144) {
                            $m = ($this.$dist3.$getMu() + $this.$dist3.$getSigma() * $this.$marsagliaPolar()) * 128.0 + 256.0 | 0;
                            if ($m >= 0 && $m < 512) {
                                var$6 = $this.$amounts5.data;
                                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                            }
                            $i = $i + 1 | 0;
                        }
                        break a;
                    case 6:
                        $i = 0;
                        while ($i < 262144) {
                            $m = ($this.$dist3.$getMu() + $this.$dist3.$getSigma() * cgt_Ziggurat_normal($this.$dist3.$generator.$nextLong())) * 128.0 + 256.0 | 0;
                            if ($m >= 0 && $m < 512) {
                                var$6 = $this.$amounts5.data;
                                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                            }
                            $i = $i + 1 | 0;
                        }
                        break a;
                    case 7:
                        break b;
                    case 8:
                        $i = 0;
                        while ($i < 262144) {
                            var$7 = $this.$dist3.$getMu();
                            var$8 = $this.$dist3.$getSigma();
                            var$3 = $this.$dist3.$generator;
                            var$9 = var$3.$nextExclusiveSignedDouble() * (4.0 - 3.6666666666666665 * cgt_DistributorDemo_c);
                            var$10 = cgt_DistributorDemo_c * 0.3333333333333333;
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            var$11 = var$11 + var$3.$nextExclusiveSignedDouble();
                            var$3 = $this.$dist3.$generator;
                            $m = (var$7 + var$8 * (var$9 + var$10 * (var$11 + var$3.$nextExclusiveSignedDouble()))) * 128.0 + 256.0 | 0;
                            if ($m >= 0 && $m < 512) {
                                var$6 = $this.$amounts5.data;
                                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                            }
                            $i = $i + 1 | 0;
                        }
                        break a;
                    case 9:
                        break c;
                    default:
                        break a;
                }
                $i = 0;
                while ($i < 262144) {
                    $m = $this.$dist3.$nextDouble() * 128.0 + 256.0 | 0;
                    if ($m >= 0 && $m < 512) {
                        var$6 = $this.$amounts5.data;
                        var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                    }
                    $i = $i + 1 | 0;
                }
                break a;
            }
            $i = 0;
            while (true) {
                if ($i >= 262144)
                    break a;
                var$9 = $this.$dist3.$getMu();
                var$10 = $this.$dist3.$getSigma();
                var$3 = $this.$dist3.$generator;
                var$7 = var$3.$nextExclusiveSignedDouble() * (1.0 - cgt_DistributorDemo_c);
                var$8 = cgt_DistributorDemo_c;
                var$3 = $this.$dist3.$generator;
                $m = (var$9 + var$10 * (var$7 + var$8 * cgt_Ziggurat_normal(var$3.$nextLong()))) * 128.0 + 256.0 | 0;
                if ($m >= 0 && $m < 512) {
                    var$6 = $this.$amounts5.data;
                    var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < 262144) {
            var$10 = $this.$dist3.$getMu();
            var$7 = $this.$dist3.$getSigma();
            var$3 = $this.$dist3.$generator;
            $m = (var$10 + var$7 * (jl_Long_bitCount(var$3.$nextLong()) - 32.0 + $this.$dist3.$generator.$nextDouble() - $this.$dist3.$generator.$nextDouble()) / 66.0) * 128.0 + 256.0 | 0;
            if ($m >= 0 && $m < 512) {
                var$6 = $this.$amounts5.data;
                var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$renderer5.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer5.$color($color);
        var$3 = $this.$renderer5;
        var$14 = $x;
        var$3.$vertex(var$14, 0.0, 0.0);
        $this.$renderer5.$color($color);
        $this.$renderer5.$vertex(var$14, Long_toNumber(Long_div($this.$amounts5.data[$x], $this.$iterations5)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer5.$color((-6.221923240859403E37));
        var$3 = $this.$renderer5;
        var$16 = $j;
        var$3.$vertex(0.0, var$16, 0.0);
        $this.$renderer5.$color((-6.221923240859403E37));
        $this.$renderer5.$vertex(10.0, var$16, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer5.$end();
    $this.$batch6.$setProjectionMatrix($camera.$combined);
    $this.$batch6.$begin0();
    var$3 = $this.$font6;
    var$17 = $this.$batch6;
    var$6 = $rt_createArray(jl_Object, 6);
    var$18 = var$6.data;
    var$9 = cgt_DistributorDemo_a;
    var$18[0] = jl_Double_valueOf(var$9);
    var$18[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$18[2] = jl_Double_valueOf(cgt_DistributorDemo_c);
    var$18[3] = jl_Double_valueOf($this.$dist3.$getMedian());
    var$18[4] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$18[5] = jl_Integer_valueOf($this.$mode1);
    var$3.$draw(var$17, cgt_Stringf_format($rt_s(401), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font6.$draw($this.$batch6, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font6.$draw($this.$batch6, $rt_s(325), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch6.$end();
}
function cgt_NormalAlternateScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport5.$update0($width, $height, 1);
    $this.$viewport5.$apply(1);
}
function cgt_NormalAlternateScreen_pop($this) {
    var $u0, $bd, $u1, $a, $b, $td, $r;
    $u0 = $this.$dist3.$generator.$nextLong();
    $bd = Long_fromInt(jl_Long_bitCount($u0) - 32 | 0);
    $u1 = $this.$dist3.$generator.$nextLong();
    $a = Long_and($u1, Long_create(4294967295, 0));
    $b = Long_shru($u1, 32);
    $td = Long_sub($a, $b);
    $r = Long_toNumber(Long_add(Long_shl($bd, 32), $td));
    return $r * 5.7691650068303346E-11;
}
function cgt_NormalAlternateScreen_simons($this, $r, $mu, $sigma) {
    var $q, $val, var$6, var$7, var$8;
    if ($r <= 0.0)
        return (-Infinity);
    if ($r >= 1.0)
        return Infinity;
    if ($sigma === 0.0)
        return $mu;
    $q = $r - 0.5;
    if (jl_Math_abs0($q) <= 0.425) {
        $r = 0.180625 - $q * $q;
        $val = $q * ((((((($r * 2509.0809287301227 + 33430.57558358813) * $r + 67265.7709270087) * $r + 45921.95393154987) * $r + 13731.69376550946) * $r + 1971.5909503065513) * $r + 133.14166789178438) * $r + 3.3871328727963665) / ((((((($r * 5226.495278852854 + 28729.085735721943) * $r + 39307.89580009271) * $r + 21213.794301586597) * $r + 5394.196021424751) * $r + 687.1870074920579) * $r + 42.31333070160091) * $r + 1.0);
    } else {
        var$6 = $rt_compare($q, 0.0);
        if (var$6 > 0)
            $r = 1.0 - $r;
        var$7 = jl_Math_sqrt( -jl_Math_log($r));
        if (var$7 > 5.0) {
            var$8 = var$7 - 5.0;
            $val = (((((((var$8 * 2.0103343992922881E-7 + 2.7115555687434876E-5) * var$8 + 0.0012426609473880784) * var$8 + 0.026532189526576124) * var$8 + 0.29656057182850487) * var$8 + 1.7848265399172913) * var$8 + 5.463784911164114) * var$8 + 6.657904643501103) / (((((((var$8 * 2.0442631033899397E-15 + 1.421511758316446E-7) * var$8 + 1.8463183175100548E-5) * var$8 + 7.868691311456133E-4) * var$8 + 0.014875361290850615) * var$8 + 0.1369298809227358) * var$8 + 0.599832206555888) * var$8 + 1.0);
        } else {
            var$7 = var$7 - 1.6;
            $val = (((((((var$7 * 7.745450142783414E-4 + 0.022723844989269184) * var$7 + 0.2417807251774506) * var$7 + 1.2704582524523684) * var$7 + 3.6478483247632045) * var$7 + 5.769497221460691) * var$7 + 4.630337846156546) * var$7 + 1.4234371107496835) / (((((((var$7 * 1.0507500716444169E-9 + 5.475938084995345E-4) * var$7 + 0.015198666563616457) * var$7 + 0.14810397642748008) * var$7 + 0.6897673349851) * var$7 + 1.6763848301838038) * var$7 + 2.053191626637759) * var$7 + 1.0);
        }
        if (var$6 < 0)
            $val =  -$val;
    }
    return $mu + $sigma * $val;
}
function cgt_NormalAlternateScreen_winitzki($x) {
    var var$2, $lg, $big;
    var$2 = $x + $x - 1.0;
    $lg = jl_Math_log(1.0 - var$2 * var$2);
    $big = $lg * 0.5 + 4.54689435453805;
    return 1.4142135623730951 * jl_Math_copySign(jl_Math_sqrt(jl_Math_sqrt($big * $big - $lg * 7.14224495043282) - $big), var$2);
}
function cgt_NormalAlternateScreen_marsagliaPolar($this) {
    var $v1, $v2, $s;
    while (true) {
        while (true) {
            $v1 = $this.$dist3.$generator.$nextExclusiveSignedDouble();
            $v2 = $this.$dist3.$generator.$nextExclusiveSignedDouble();
            $s = $v1 * $v1 + $v2 * $v2;
            if ($s >= 1.0)
                continue;
            else
                break;
        }
        if ($s === 0.0)
            continue;
        else
            break;
    }
    return $v1 * jl_Math_sqrt((-2.0) * jl_Math_log($s) / $s);
}
var jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
function jur_PossessiveCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_PossessiveCompositeQuantifierSet();
    jur_PossessiveCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_PossessiveCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_PossessiveCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, $shift;
    $min = $this.$quantifier.$min3();
    $max = $this.$quantifier.$max2();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
var cgtrd_GammaDistribution = $rt_classWithoutFields(cgtrd_Distribution);
function cgtrd_GammaDistribution_sample($generator, $alpha, $beta) {
    var var$4, $a1, $a2, $x, $v, var$9, $u, var$11;
    var$4 = $alpha >= 1.0 ? $alpha : $alpha + 1.0;
    $a1 = var$4 - 0.3333333333333333;
    $a2 = 1.0 / jl_Math_sqrt(9.0 * $a1);
    while (true) {
        while (true) {
            $x = cgtrd_NormalDistribution_sample($generator, 0.0, 1.0);
            $v = 1.0 + $a2 * $x;
            if ($v <= 0.0)
                continue;
            else
                break;
        }
        var$9 = $v * $v * $v;
        $u = $generator.$nextDouble();
        var$11 = $x * $x;
        if ($u <= 1.0 - 0.331 * cgtd_MathTools_square(var$11))
            break;
        if (jl_Math_log($u) > 0.5 * var$11 + $a1 * (1.0 - var$9 + jl_Math_log(var$9)))
            continue;
        else
            break;
    }
    if (cgtd_MathTools_isEqual(var$4, $alpha, 5.960464477539063E-8))
        return $a1 * var$9 / $beta;
    return jl_Math_pow($generator.$nextExclusiveDouble(), 1.0 / $alpha) * $a1 * var$9 / $beta;
}
var cbgssu_Button = $rt_classWithoutFields(cbgssu_Table);
var otjde_LoadEventTarget = $rt_classWithoutFields(0);
var cbgm_Bresenham2$1 = $rt_classWithoutFields(cbgu_Pool);
var cbgggmd_ModelNodeKeyframe = $rt_classWithoutFields();
function cbggg_BitmapFontCache() {
    var a = this; jl_Object.call(a);
    a.$font7 = null;
    a.$integer0 = 0;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$glyphCount = 0;
    a.$x0 = 0.0;
    a.$y0 = 0.0;
    a.$color1 = null;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
var cbggg_BitmapFontCache_tempColor = null;
function cbggg_BitmapFontCache_$callClinit() {
    cbggg_BitmapFontCache_$callClinit = $rt_eraseClinit(cbggg_BitmapFontCache);
    cbggg_BitmapFontCache__clinit_();
}
function cbggg_BitmapFontCache__init_(var_0, var_1) {
    var var_2 = new cbggg_BitmapFontCache();
    cbggg_BitmapFontCache__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_BitmapFontCache__init_0($this, $font, $integer) {
    var $pageCount, $i, $n;
    cbggg_BitmapFontCache_$callClinit();
    jl_Object__init_0($this);
    $this.$layouts = cbgu_Array__init_();
    $this.$pooledLayouts = cbgu_Array__init_();
    $this.$color1 = cbgg_Color__init_(1.0, 1.0, 1.0, 1.0);
    $this.$font7 = $font;
    $this.$integer0 = $integer;
    $pageCount = $font.$regions.$size;
    if (!$pageCount)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(402)));
    a: {
        $this.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
        $this.$idx0 = $rt_createIntArray($pageCount);
        if ($pageCount > 1) {
            $this.$pageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
            $i = 0;
            $n = $this.$pageGlyphIndices.data.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $this.$pageGlyphIndices.data[$i] = cbgu_IntArray__init_();
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
}
function cbggg_BitmapFontCache_getColor($this) {
    return $this.$color1;
}
function cbggg_BitmapFontCache_draw($this, $spriteBatch) {
    var $regions, $j, $n, $vertices;
    $regions = $this.$font7.$getRegions();
    $j = 0;
    $n = $this.$pageVertices.data.length;
    while ($j < $n) {
        if ($this.$idx0.data[$j] > 0) {
            $vertices = $this.$pageVertices.data[$j];
            $spriteBatch.$draw1(($regions.$get3($j)).$getTexture(), $vertices, 0, $this.$idx0.data[$j]);
        }
        $j = $j + 1 | 0;
    }
}
function cbggg_BitmapFontCache_clear($this) {
    var $i, $n;
    $this.$x0 = 0.0;
    $this.$y0 = 0.0;
    cbgu_Pools_freeAll($this.$pooledLayouts, 1);
    $this.$pooledLayouts.$clear8();
    $this.$layouts.$clear8();
    $i = 0;
    $n = $this.$idx0.data.length;
    while ($i < $n) {
        if ($this.$pageGlyphIndices !== null)
            $this.$pageGlyphIndices.data[$i].$clear8();
        $this.$idx0.data[$i] = 0;
        $i = $i + 1 | 0;
    }
}
function cbggg_BitmapFontCache_requireGlyphs($this, $layout) {
    var $tempGlyphCount, $i, $n, $glyphs, $glyphItems, $ii, $nn, var$9, var$10;
    a: {
        if ($this.$pageVertices.data.length == 1)
            cbggg_BitmapFontCache_requirePageGlyphs($this, 0, $layout.$glyphCount0);
        else {
            $tempGlyphCount = $this.$tempGlyphCount;
            ju_Arrays_fill0($tempGlyphCount, 0);
            $i = 0;
            $n = $layout.$runs.$size;
            while ($i < $n) {
                $glyphs = ($layout.$runs.$get3($i)).$glyphs0;
                $glyphItems = $glyphs.$items;
                $ii = 0;
                $nn = $glyphs.$size;
                while ($ii < $nn) {
                    var$9 = $tempGlyphCount.data;
                    var$10 = $glyphItems.data[$ii].$page;
                    var$9[var$10] = var$9[var$10] + 1 | 0;
                    $ii = $ii + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            var$9 = $tempGlyphCount.data;
            $i = 0;
            $n = var$9.length;
            while (true) {
                if ($i >= $n)
                    break a;
                cbggg_BitmapFontCache_requirePageGlyphs($this, $i, var$9[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_BitmapFontCache_requirePageGlyphs($this, $page, $glyphCount) {
    var $vertexCount, $vertices, $newVertices;
    if ($this.$pageGlyphIndices !== null && $glyphCount > $this.$pageGlyphIndices.data[$page].$items0.data.length)
        $this.$pageGlyphIndices.data[$page].$ensureCapacity0($glyphCount - $this.$pageGlyphIndices.data[$page].$size1 | 0);
    $vertexCount = $this.$idx0.data[$page] + ($glyphCount * 20 | 0) | 0;
    $vertices = $this.$pageVertices.data[$page];
    if ($vertices === null)
        $this.$pageVertices.data[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_arraycopy($vertices, 0, $newVertices, 0, $this.$idx0.data[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
}
function cbggg_BitmapFontCache_setPageCount($this, $pageCount) {
    var $newPageVertices, $newIdx, $newPageGlyphIndices, $i;
    $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
    jl_System_arraycopy($this.$pageVertices, 0, $newPageVertices, 0, $this.$pageVertices.data.length);
    $this.$pageVertices = $newPageVertices;
    $newIdx = $rt_createIntArray($pageCount);
    jl_System_arraycopy($this.$idx0, 0, $newIdx, 0, $this.$idx0.data.length);
    $this.$idx0 = $newIdx;
    $newPageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
    $i = 0;
    if ($this.$pageGlyphIndices !== null) {
        $i = $this.$pageGlyphIndices.data.length;
        jl_System_arraycopy($this.$pageGlyphIndices, 0, $newPageGlyphIndices, 0, $this.$pageGlyphIndices.data.length);
    }
    while ($i < $pageCount) {
        $newPageGlyphIndices.data[$i] = cbgu_IntArray__init_();
        $i = $i + 1 | 0;
    }
    $this.$pageGlyphIndices = $newPageGlyphIndices;
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
}
function cbggg_BitmapFontCache_addToCache($this, $layout, $x, $y) {
    var $runCount, $colors, $colorsIndex, $nextColorGlyphIndex, $glyphIndex, $lastColorFloatBits, $i, $run, $glyphs, $xAdvances, $gx, $gy, $ii, $nn, var$18, var$19, var$20;
    $runCount = $layout.$runs.$size;
    if (!$runCount)
        return;
    if ($this.$pageVertices.data.length < $this.$font7.$regions.$size)
        cbggg_BitmapFontCache_setPageCount($this, $this.$font7.$regions.$size);
    $this.$layouts.$add3($layout);
    cbggg_BitmapFontCache_requireGlyphs($this, $layout);
    $colors = $layout.$colors;
    $colorsIndex = 0;
    $nextColorGlyphIndex = 0;
    $glyphIndex = 0;
    $lastColorFloatBits = 0.0;
    $i = 0;
    while ($i < $runCount) {
        $run = $layout.$runs.$get3($i);
        $glyphs = $run.$glyphs0.$items;
        $xAdvances = $run.$xAdvances.$items1;
        $gx = $x + $run.$x1;
        $gy = $y + $run.$y1;
        $ii = 0;
        $nn = $run.$glyphs0.$size;
        while ($ii < $nn) {
            var$18 = $glyphIndex + 1 | 0;
            if ($glyphIndex == $nextColorGlyphIndex) {
                var$19 = $colorsIndex + 1 | 0;
                $lastColorFloatBits = cbgu_NumberUtils_intToFloatColor($colors.$get11(var$19));
                $colorsIndex = var$19 + 1 | 0;
                $nextColorGlyphIndex = $colorsIndex >= $colors.$size1 ? (-1) : $colors.$get11($colorsIndex);
            }
            var$20 = $glyphs.data;
            $gx = $gx + $xAdvances.data[$ii];
            cbggg_BitmapFontCache_addGlyph($this, var$20[$ii], $gx, $gy, $lastColorFloatBits);
            $ii = $ii + 1 | 0;
            $glyphIndex = var$18;
        }
        $i = $i + 1 | 0;
    }
    cbgg_Color_$callClinit();
    $this.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
}
function cbggg_BitmapFontCache_addGlyph($this, $glyph, $x, $y, $color) {
    var $scaleX, $scaleY, var$7, var$8, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $idx, var$19, var$20, var$21, $vertices, var$23, var$24;
    $scaleX = $this.$font7.$data2.$scaleX;
    $scaleY = $this.$font7.$data2.$scaleY;
    var$7 = $x + $glyph.$xoffset * $scaleX;
    var$8 = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width * $scaleX;
    $height = $glyph.$height * $scaleY;
    $u = $glyph.$u;
    $u2 = $glyph.$u2;
    $v = $glyph.$v;
    $v2 = $glyph.$v2;
    if ($this.$integer0) {
        var$7 = jl_Math_round(var$7);
        var$8 = jl_Math_round(var$8);
        $width = jl_Math_round($width);
        $height = jl_Math_round($height);
    }
    $x2 = var$7 + $width;
    $y2 = var$8 + $height;
    $page = $glyph.$page;
    $idx = $this.$idx0.data[$page];
    var$19 = $this.$idx0.data;
    var$19[$page] = var$19[$page] + 20 | 0;
    if ($this.$pageGlyphIndices !== null) {
        var$20 = $this.$pageGlyphIndices.data[$page];
        var$21 = $this.$glyphCount;
        $this.$glyphCount = var$21 + 1 | 0;
        var$20.$add5(var$21);
    }
    $vertices = $this.$pageVertices.data[$page];
    var$19 = $vertices.data;
    var$23 = $idx + 1 | 0;
    var$19[$idx] = var$7;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = var$8;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $color;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $u;
    var$24 = var$21 + 1 | 0;
    var$19[var$21] = $v;
    var$23 = var$24 + 1 | 0;
    var$19[var$24] = var$7;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $y2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $color;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $u;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $v2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $x2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $y2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $v2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $x2;
    var$24 = var$23 + 1 | 0;
    var$19[var$23] = var$8;
    var$21 = var$24 + 1 | 0;
    var$19[var$24] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$19[var$23] = $v;
}
function cbggg_BitmapFontCache_addText($this, $str, $x, $y, $targetWidth, $halign, $wrap) {
    return $this.$addText0($str, $x, $y, 0, $str.$length(), $targetWidth, $halign, $wrap, null);
}
function cbggg_BitmapFontCache_addText0($this, $str, $x, $y, $start, $end, $targetWidth, $halign, $wrap, $truncate) {
    var $layout;
    $layout = cbgu_Pools_obtain($rt_cls(cbggg_GlyphLayout));
    $this.$pooledLayouts.$add3($layout);
    $layout.$setText($this.$font7, $str, $start, $end, $this.$color1, $targetWidth, $halign, $wrap, $truncate);
    $this.$addText1($layout, $x, $y);
    return $layout;
}
function cbggg_BitmapFontCache_addText1($this, $layout, $x, $y) {
    cbggg_BitmapFontCache_addToCache($this, $layout, $x, $y + $this.$font7.$data2.$ascent);
}
function cbggg_BitmapFontCache__clinit_() {
    cbggg_BitmapFontCache_tempColor = cbgg_Color__init_(1.0, 1.0, 1.0, 1.0);
}
var otci_Base46 = $rt_classWithoutFields();
function otci_Base46_decodeUnsigned($seq) {
    var $number, $pos, var$4, var$5, $digit, $hasMore;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters0.data;
        var$5 = $seq.$pointer;
        $seq.$pointer = var$5 + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[var$5]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
}
function otci_Base46_decode($seq) {
    var $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result | 0;
    return $result;
}
function otci_Base46_decodeDigit($c) {
    if ($c < 34)
        return $c - 32 | 0;
    if ($c >= 92)
        return ($c - 32 | 0) - 2 | 0;
    return ($c - 32 | 0) - 1 | 0;
}
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string1 = null;
}
function jur_UCISequenceSet__init_(var_0) {
    var var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISequenceSet__init_0($this, $substring) {
    var $res, $i;
    jur_LeafSet__init_0($this);
    $res = jl_StringBuilder__init_();
    $i = 0;
    while ($i < $substring.$length()) {
        $res.$append0(jl_Character_toLowerCase0(jl_Character_toUpperCase0($substring.$charAt($i))));
        $i = $i + 1 | 0;
    }
    $this.$string1 = $res.$toString();
    $this.$charCount = $res.$length();
}
function jur_UCISequenceSet_accepts($this, $strIndex, $testString) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= $this.$string1.$length())
            return $this.$string1.$length();
        if ($this.$string1.$charAt($i) != jl_Character_toLowerCase0(jl_Character_toUpperCase0($testString.$charAt($strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
}
function jur_UCISequenceSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$string1;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(403)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$020 = null;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDefined$1();
    jur_AbstractCharClass$LazyJavaDefined$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDefined$1__init_0($this, $this$0) {
    $this.$this$020 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDefined$1_contains($this, $ch) {
    return jl_Character_isDefined($ch);
}
var otjt_Int8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var cbggg_HdpiUtils = $rt_classWithoutFields();
var cbggg_HdpiUtils_mode = null;
function cbggg_HdpiUtils_$callClinit() {
    cbggg_HdpiUtils_$callClinit = $rt_eraseClinit(cbggg_HdpiUtils);
    cbggg_HdpiUtils__clinit_();
}
function cbggg_HdpiUtils_glViewport($x, $y, $width, $height) {
    var var$5;
    cbggg_HdpiUtils_$callClinit();
    a: {
        b: {
            var$5 = cbggg_HdpiUtils_mode;
            cbggg_HdpiMode_$callClinit();
            if (var$5 === cbggg_HdpiMode_Logical) {
                if (cbg_Gdx_graphics.$getWidth() != cbg_Gdx_graphics.$getBackBufferWidth())
                    break b;
                var$5 = cbg_Gdx_graphics;
                if (var$5.$getHeight() != cbg_Gdx_graphics.$getBackBufferHeight())
                    break b;
            }
            cbg_Gdx_gl.$glViewport($x, $y, $width, $height);
            break a;
        }
        cbg_Gdx_gl.$glViewport(cbggg_HdpiUtils_toBackBufferX($x), cbggg_HdpiUtils_toBackBufferY($y), cbggg_HdpiUtils_toBackBufferX($width), cbggg_HdpiUtils_toBackBufferY($height));
    }
}
function cbggg_HdpiUtils_toBackBufferX($logicalX) {
    cbggg_HdpiUtils_$callClinit();
    return $rt_imul($logicalX, cbg_Gdx_graphics.$getBackBufferWidth()) / cbg_Gdx_graphics.$getWidth() | 0;
}
function cbggg_HdpiUtils_toBackBufferY($logicalY) {
    cbggg_HdpiUtils_$callClinit();
    return $rt_imul($logicalY, cbg_Gdx_graphics.$getBackBufferHeight()) / cbg_Gdx_graphics.$getHeight() | 0;
}
function cbggg_HdpiUtils__clinit_() {
    cbggg_HdpiMode_$callClinit();
    cbggg_HdpiUtils_mode = cbggg_HdpiMode_Logical;
}
var cbgssu_SelectBox$SelectBoxScrollPane$2 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_SelectBox$SelectBoxScrollPane$1 = $rt_classWithoutFields(cbgssu_ClickListener);
function jur_CompositeRangeSet() {
    var a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
function jur_CompositeRangeSet__init_(var_0, var_1) {
    var var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CompositeRangeSet__init_0($this, $withoutSurrogates, $withSurrogates) {
    jur_JointSet__init_0($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
}
function jur_CompositeRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$withSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
}
function jur_CompositeRangeSet_setNext($this, $next) {
    $this.$next = $next;
    $this.$withSurrogates.$setNext($next);
    $this.$withoutSurrogates.$setNext($next);
}
function jur_CompositeRangeSet_getName($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$withoutSurrogates;
    var$2 = $this.$withSurrogates;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(404)), var$1), $rt_s(405)), var$2);
    return jl_StringBuilder_toString(var$3);
}
function jur_CompositeRangeSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CompositeRangeSet_first($this, $set) {
    return 1;
}
var ju_Map$Entry = $rt_classWithoutFields(0);
function ju_MapEntry() {
    var a = this; jl_Object.call(a);
    a.$key = null;
    a.$value2 = null;
}
function ju_MapEntry__init_(var_0, var_1) {
    var var_2 = new ju_MapEntry();
    ju_MapEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_MapEntry__init_0($this, $theKey, $theValue) {
    jl_Object__init_0($this);
    $this.$key = $theKey;
    $this.$value2 = $theValue;
}
function ju_Hashtable$Entry() {
    var a = this; ju_MapEntry.call(a);
    a.$next2 = null;
    a.$hashcode = 0;
}
function ju_Hashtable$Entry__init_(var_0, var_1) {
    var var_2 = new ju_Hashtable$Entry();
    ju_Hashtable$Entry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_Hashtable$Entry__init_0($this, $theKey, $theValue) {
    ju_MapEntry__init_0($this, $theKey, $theValue);
    $this.$hashcode = $theKey.$hashCode0();
}
function ju_Hashtable$Entry_getKeyHash($this) {
    return $this.$key.$hashCode0();
}
function ju_Hashtable$Entry_equalsKey($this, $aKey, $hash) {
    return $this.$hashcode == $aKey.$hashCode0() && $this.$key.$equals($aKey) ? 1 : 0;
}
function cgtrd_ZipfianDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha2 = 0.0;
    a.$skew = 0.0;
    a.$zeta = 0.0;
    a.$zetaTwoSkew = 0.0;
}
function cgtrd_ZipfianDistribution__init_(var_0, var_1, var_2) {
    var var_3 = new cgtrd_ZipfianDistribution();
    cgtrd_ZipfianDistribution__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_ZipfianDistribution_getZeta($this) {
    return $this.$zeta;
}
function cgtrd_ZipfianDistribution__init_0($this, $generator, $alpha, $skew) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters(Long_toNumber($alpha), $skew, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(406)));
}
function cgtrd_ZipfianDistribution_harmonic($limit, $skew) {
    var $result, $i;
    $result = 1.0;
    $i = Long_fromInt(2);
    while (Long_le($i, $limit)) {
        $result = $result + jl_Math_pow(1.0 / Long_toNumber($i), $skew);
        $i = Long_add($i, Long_fromInt(1));
    }
    return $result;
}
function cgtrd_ZipfianDistribution_setParameters($this, $a, $b, $c) {
    if ($a >= 1.0 && $b >= 0.0 && $b < 1.0) {
        $this.$alpha2 = Long_toNumber(Long_fromNumber($a));
        $this.$skew = $b;
        if (!($c === $c && $c < 0.0))
            $this.$zeta = cgtrd_ZipfianDistribution_harmonic(Long_fromNumber($this.$alpha2), $this.$skew);
        $this.$zetaTwoSkew = 1.0 + jl_Math_pow(0.5, $this.$skew);
        return 1;
    }
    return 0;
}
function cgtrd_ZipfianDistribution_nextDouble($this) {
    return cgtrd_ZipfianDistribution_sample($this.$generator, $this.$alpha2, $this.$skew, $this.$zeta, $this.$zetaTwoSkew);
}
function cgtrd_ZipfianDistribution_sample($generator, $alpha, $skew, $zeta, $zetaTwoSkew) {
    var var$6, $over, $eta, $u, $uz;
    var$6 = 1.0 - $skew;
    $over = 1.0 / var$6;
    $eta = (1.0 - jl_Math_pow(2.0 / $alpha, var$6)) / (1.0 - $zetaTwoSkew / $zeta);
    $u = $generator.$nextExclusiveDouble();
    $uz = $u * $zeta;
    if ($uz < 1.0)
        return 1.0;
    if ($uz < $zetaTwoSkew)
        return 2.0;
    return 1.0 + $alpha * jl_Math_pow($eta * $u - $eta + 1.0, $over);
}
var cbgssa_IntAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var jur_FinalSet = $rt_classWithoutFields(jur_FSet);
function jur_FinalSet__init_() {
    var var_0 = new jur_FinalSet();
    jur_FinalSet__init_0(var_0);
    return var_0;
}
function jur_FinalSet__init_0($this) {
    jur_FSet__init_0($this, 0);
}
function jur_FinalSet_matches($this, $stringIndex, $testString, $matchResult) {
    if ($matchResult.$mode2() != 1 && $stringIndex != $matchResult.$getRightBound())
        return (-1);
    $matchResult.$setValid();
    $matchResult.$setEnd(0, $stringIndex);
    return $stringIndex;
}
function jur_FinalSet_getName($this) {
    return $rt_s(407);
}
var cbgggpe_Emitter = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
var cbgggpe_RegularEmitter = $rt_classWithoutFields(cbgggpe_Emitter);
var jur_EmptySet = $rt_classWithoutFields(jur_LeafSet);
function jur_EmptySet__init_(var_0) {
    var var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
}
function jur_EmptySet__init_0($this, $next) {
    jur_LeafSet__init_($this, $next);
    $this.$charCount = 0;
}
function jur_EmptySet_accepts($this, $stringIndex, $testString) {
    return 0;
}
function jur_EmptySet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startStr, var$6, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        var$6 = $rt_compare($stringIndex, $strLength);
        if (var$6 > 0)
            return (-1);
        if (var$6 < 0) {
            $low = $testString.$charAt($stringIndex);
            if (jl_Character_isLowSurrogate($low) && $stringIndex > $startStr) {
                $high = $testString.$charAt($stringIndex - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $stringIndex = $stringIndex + 1 | 0;
                    continue;
                }
            }
        }
        if ($this.$next.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
}
function jur_EmptySet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $strLength, $startStr, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength) {
            $low = $testString.$charAt($startSearch);
            if (jl_Character_isLowSurrogate($low) && $startSearch > $startStr) {
                $high = $testString.$charAt($startSearch - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $startSearch = $startSearch + (-1) | 0;
                    continue;
                }
            }
        }
        if ($this.$next.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
}
function jur_EmptySet_getName($this) {
    return $rt_s(408);
}
function jur_EmptySet_hasConsumed($this, $mr) {
    return 0;
}
var cbgssu_TextButton = $rt_classWithoutFields(cbgssu_Button);
var cbgssu_CheckBox = $rt_classWithoutFields(cbgssu_TextButton);
var ju_Enumeration = $rt_classWithoutFields(0);
function ju_StringTokenizer() {
    var a = this; jl_Object.call(a);
    a.$string2 = null;
    a.$delimiters = null;
    a.$returnDelimiters = 0;
    a.$position7 = 0;
}
function ju_StringTokenizer__init_(var_0, var_1) {
    var var_2 = new ju_StringTokenizer();
    ju_StringTokenizer__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_StringTokenizer__init_1(var_0, var_1, var_2) {
    var var_3 = new ju_StringTokenizer();
    ju_StringTokenizer__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_StringTokenizer__init_0($this, $string, $delimiters) {
    ju_StringTokenizer__init_2($this, $string, $delimiters, 0);
}
function ju_StringTokenizer__init_2($this, $string, $delimiters, $returnDelimiters) {
    jl_Object__init_0($this);
    if ($string === null)
        $rt_throw(jl_NullPointerException__init_());
    $this.$string2 = $string;
    $this.$delimiters = $delimiters;
    $this.$returnDelimiters = $returnDelimiters;
    $this.$position7 = 0;
}
function ju_StringTokenizer_hasMoreTokens($this) {
    var $length, $i;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    a: {
        $length = $this.$string2.$length();
        if ($this.$position7 < $length) {
            if ($this.$returnDelimiters)
                return 1;
            $i = $this.$position7;
            while (true) {
                if ($i >= $length)
                    break a;
                if ($this.$delimiters.$indexOf($this.$string2.$charAt($i), 0) == (-1))
                    return 1;
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
}
function ju_StringTokenizer_nextToken($this) {
    var $i, $length, var$3, var$4, var$5;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    $i = $this.$position7;
    $length = $this.$string2.$length();
    if ($i < $length) {
        if ($this.$returnDelimiters) {
            if ($this.$delimiters.$indexOf($this.$string2.$charAt($this.$position7), 0) >= 0) {
                var$3 = $this.$string2;
                var$4 = $this.$position7;
                $this.$position7 = var$4 + 1 | 0;
                return jl_String_valueOf2(var$3.$charAt(var$4));
            }
            $this.$position7 = $this.$position7 + 1 | 0;
            while ($this.$position7 < $length) {
                if ($this.$delimiters.$indexOf($this.$string2.$charAt($this.$position7), 0) >= 0)
                    return $this.$string2.$substring0($i, $this.$position7);
                $this.$position7 = $this.$position7 + 1 | 0;
            }
            return $this.$string2.$substring($i);
        }
        while (true) {
            var$5 = $rt_compare($i, $length);
            if (var$5 >= 0)
                break;
            if ($this.$delimiters.$indexOf($this.$string2.$charAt($i), 0) < 0)
                break;
            $i = $i + 1 | 0;
        }
        $this.$position7 = $i;
        if (var$5 < 0) {
            $this.$position7 = $this.$position7 + 1 | 0;
            while ($this.$position7 < $length) {
                if ($this.$delimiters.$indexOf($this.$string2.$charAt($this.$position7), 0) >= 0)
                    return $this.$string2.$substring0($i, $this.$position7);
                $this.$position7 = $this.$position7 + 1 | 0;
            }
            return $this.$string2.$substring($i);
        }
    }
    $rt_throw(ju_NoSuchElementException__init_());
}
function cbggg_TextureRegion() {
    var a = this; jl_Object.call(a);
    a.$texture = null;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v20 = 0.0;
    a.$regionWidth = 0;
    a.$regionHeight = 0;
}
function cbggg_TextureRegion__init_(var_0) {
    var var_1 = new cbggg_TextureRegion();
    cbggg_TextureRegion__init_0(var_1, var_0);
    return var_1;
}
function cbggg_TextureRegion__init_0($this, $texture) {
    jl_Object__init_0($this);
    if ($texture === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(409)));
    $this.$texture = $texture;
    $this.$setRegion(0, 0, $texture.$getWidth(), $texture.$getHeight());
}
function cbggg_TextureRegion_setRegion($this, $x, $y, $width, $height) {
    var $invTexWidth, $invTexHeight;
    $invTexWidth = 1.0 / $this.$texture.$getWidth();
    $invTexHeight = 1.0 / $this.$texture.$getHeight();
    $this.$setRegion0($x * $invTexWidth, $y * $invTexHeight, ($x + $width | 0) * $invTexWidth, ($y + $height | 0) * $invTexHeight);
    $this.$regionWidth = jl_Math_abs1($width);
    $this.$regionHeight = jl_Math_abs1($height);
}
function cbggg_TextureRegion_setRegion0($this, $u, $v, $u2, $v2) {
    var $texWidth, $texHeight, var$7, var$8, var$9, $adjustX, $adjustY;
    $texWidth = $this.$texture.$getWidth();
    $texHeight = $this.$texture.$getHeight();
    var$7 = jl_Math_abs($u2 - $u);
    var$8 = $texWidth;
    $this.$regionWidth = jl_Math_round(var$7 * var$8);
    var$7 = jl_Math_abs($v2 - $v);
    var$9 = $texHeight;
    $this.$regionHeight = jl_Math_round(var$7 * var$9);
    if ($this.$regionWidth == 1 && $this.$regionHeight == 1) {
        $adjustX = 0.25 / var$8;
        $u = $u + $adjustX;
        $u2 = $u2 - $adjustX;
        $adjustY = 0.25 / var$9;
        $v = $v + $adjustY;
        $v2 = $v2 - $adjustY;
    }
    $this.$u0 = $u;
    $this.$v0 = $v;
    $this.$u20 = $u2;
    $this.$v20 = $v2;
}
function cbggg_TextureRegion_getTexture($this) {
    return $this.$texture;
}
function cbggg_TextureRegion_getRegionWidth($this) {
    return $this.$regionWidth;
}
function cbggg_TextureRegion_getRegionHeight($this) {
    return $this.$regionHeight;
}
function cbggg_TextureAtlas$AtlasRegion() {
    var a = this; cbggg_TextureRegion.call(a);
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$packedHeight = 0;
    a.$originalHeight = 0;
}
var jn_FloatBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
function jn_FloatBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_FloatBufferOverByteBufferBigEndian();
    jn_FloatBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_FloatBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_FloatBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_FloatBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer0.$array0.data;
    var$3 = $this.$start2;
    var$4 = $index * 4 | 0;
    $value = var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer0.$array0.data[($this.$start2 + var$4 | 0) + 1 | 0] & 255) << 8 | ($this.$byteByffer0.$array0.data[($this.$start2 + var$4 | 0) + 2 | 0] & 255) << 16 | ($this.$byteByffer0.$array0.data[($this.$start2 + var$4 | 0) + 3 | 0] & 255) << 24;
    return $rt_intBitsToFloat($value);
}
function jn_FloatBufferOverByteBufferBigEndian_putElement($this, $index, $f) {
    var $value, var$4, var$5, var$6;
    $value = $rt_floatToIntBits($f);
    var$4 = $this.$byteByffer0.$array0.data;
    var$5 = $this.$start2;
    var$6 = $index * 4 | 0;
    var$4[var$5 + var$6 | 0] = $value << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start2 + var$6 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start2 + var$6 | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer0.$array0.data[($this.$start2 + var$6 | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
}
var cbg_Graphics = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics() {
    var a = this; jl_Object.call(a);
    a.$context = null;
    a.$canvas = null;
    a.$config = null;
    a.$gl = null;
    a.$glVersion = null;
    a.$fps = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$time = 0.0;
    a.$frames = 0;
}
function cgxgbt_TeaGraphics__init_(var_0) {
    var var_1 = new cgxgbt_TeaGraphics();
    cgxgbt_TeaGraphics__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaGraphics__init_0($this, $config) {
    var $window, $document, var$4, $elementID, $versionString, $vendorString, $rendererString, $currentWindow, $width, $height, $density;
    jl_Object__init_0($this);
    $this.$fps = 0.0;
    $this.$lastTimeStamp = jl_System_currentTimeMillis();
    $this.$frameId = Long_fromInt(-1);
    $this.$deltaTime = 0.0;
    $this.$time = 0.0;
    $this.$config = $config;
    $window = cgxgbtdi_TeaWindow__init_();
    $document = $window.$getDocument();
    var$4 = $config.$canvasID;
    $elementID = $document.getElementById($rt_ustr(var$4));
    $this.$canvas = $elementID;
    $this.$context = $this.$getGLContext($this.$canvas, $config);
    $this.$gl = !$config.$useDebugGL ? cgxgbt_TeaGL20__init_($this.$context) : cgxgbt_TeaGL20Debug__init_($this.$context);
    $versionString = $this.$gl.$glGetString(7938);
    $vendorString = $this.$gl.$glGetString(7936);
    $rendererString = $this.$gl.$glGetString(7937);
    var$4 = new cbggg_GLVersion;
    cbg_Application$ApplicationType_$callClinit();
    cbggg_GLVersion__init_0(var$4, cbg_Application$ApplicationType_WebGL, $versionString, $vendorString, $rendererString);
    $this.$glVersion = var$4;
    if (!($config.$width0 < 0 && $config.$height0 < 0)) {
        if ($config.$isFixedSizeApplication())
            $this.$setCanvasSize($config.$width0, $config.$height0);
        else {
            $currentWindow = cgxgbtdi_TeaWindow_get();
            $width = $currentWindow.$getClientWidth() - $config.$padHorizontal | 0;
            $height = $currentWindow.$getClientHeight() - $config.$padVertical | 0;
            $density = !$config.$usePhysicalPixels ? 1.0 : $this.$getNativeScreenDensity();
            $this.$setCanvasSize($density * $width | 0, $density * $height | 0);
        }
    }
    cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61($this.$canvas, otji_JS_function(cgxgbt_TeaGraphics$1__init_($this), "fullscreenChanged"));
}
function cgxgbt_TeaGraphics_update($this) {
    var $currTimeStamp;
    $currTimeStamp = jl_System_currentTimeMillis();
    $this.$deltaTime = Long_toNumber(Long_sub($currTimeStamp, $this.$lastTimeStamp)) / 1000.0;
    $this.$lastTimeStamp = $currTimeStamp;
    $this.$time = $this.$time + $this.$deltaTime;
    $this.$frames = $this.$frames + 1 | 0;
    if ($this.$time > 1.0) {
        $this.$fps = $this.$frames;
        $this.$time = 0.0;
        $this.$frames = 0;
    }
}
function cgxgbt_TeaGraphics_getGL20($this) {
    return $this.$gl;
}
function cgxgbt_TeaGraphics_getWidth($this) {
    return $this.$canvas.width;
}
function cgxgbt_TeaGraphics_getHeight($this) {
    return $this.$canvas.height;
}
function cgxgbt_TeaGraphics_getBackBufferWidth($this) {
    return $this.$canvas.width;
}
function cgxgbt_TeaGraphics_getBackBufferHeight($this) {
    return $this.$canvas.height;
}
function cgxgbt_TeaGraphics_getDeltaTime($this) {
    return $this.$deltaTime;
}
function cgxgbt_TeaGraphics_getFramesPerSecond($this) {
    return $this.$fps | 0;
}
function cgxgbt_TeaGraphics_setCanvasSize($this, $width, $height) {
    var var$3, var$4, $density, $style, var$7, var$8, var$9;
    var$3 = $this.$canvas;
    var$4 = $width;
    var$3.width = var$4;
    var$3 = $this.$canvas;
    var$4 = $height;
    var$3.height = var$4;
    if ($this.$config.$usePhysicalPixels) {
        $density = $this.$getNativeScreenDensity();
        $style = $this.$canvas.style;
        var$7 = $width / $density;
        cgxgbtd_StyleWrapper$Unit_$callClinit();
        var$8 = cgxgbtd_StyleWrapper$Unit_PX.$getType3();
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append2(var$4, var$7), var$8);
        var$4 = jl_StringBuilder_toString(var$4);
        $style.setProperty("width", $rt_ustr(var$4));
        var$7 = $height / $density;
        var$9 = cgxgbtd_StyleWrapper$Unit_PX.$getType3();
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append2(var$3, var$7), var$9);
        var$9 = jl_StringBuilder_toString(var$3);
        $style.setProperty("height", $rt_ustr(var$9));
    }
}
function cgxgbt_TeaGraphics_supportsExtension($this, $extensionName) {
    return $this.$context.getExtension($rt_ustr($extensionName)) === null ? 0 : 1;
}
function cgxgbt_TeaGraphics_getNativeScreenDensity($this) {
    return $rt_globals.devicePixelRatio || 1;
}
function cgxgbt_TeaGraphics_getGLContext($this, $canvas, $config) {
    var $attr, var$4, var$5;
    $attr = otjw_WebGLContextAttributes_create$js_body$_13();
    var$4 = !!$config.$alpha3;
    $attr.alpha = var$4;
    var$5 = !!$config.$antialiasing;
    $attr.antialias = var$5;
    var$4 = !!$config.$stencil;
    $attr.stencil = var$4;
    var$4 = !!$config.$premultipliedAlpha;
    $attr.premultipliedAlpha = var$4;
    var$4 = !!$config.$preserveDrawingBuffer;
    $attr.preserveDrawingBuffer = var$4;
    var$4 = $canvas.getContext("webgl", $attr);
    return var$4;
}
function cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61(var$1, var$2) {
    if (var$1.requestFullscreen) {
        $rt_globals.document.addEventListener("fullscreenchange", var$2, false);
    }
    if (var$1.webkitRequestFullScreen) {
        $rt_globals.document.addEventListener("webkitfullscreenchange", var$2, false);
    }
    if (var$1.mozRequestFullScreen) {
        $rt_globals.document.addEventListener("mozfullscreenchange", var$2, false);
    }
    if (var$1.msRequestFullscreen) {
        $rt_globals.document.addEventListener("msfullscreenchange", var$2, false);
    }
}
var jl_NoSuchMethodError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
function jl_NoSuchMethodError__init_(var_0) {
    var var_1 = new jl_NoSuchMethodError();
    jl_NoSuchMethodError__init_0(var_1, var_0);
    return var_1;
}
function jl_NoSuchMethodError__init_0($this, $message) {
    jl_IncompatibleClassChangeError__init_0($this, $message);
}
function ji_InputStreamReader() {
    var a = this; ji_Reader.call(a);
    a.$stream = null;
    a.$decoder = null;
    a.$inData = null;
    a.$inBuffer = null;
    a.$outData = null;
    a.$outBuffer = null;
    a.$streamEof = 0;
    a.$eof0 = 0;
}
function ji_InputStreamReader__init_(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_0(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_1(var_0) {
    var var_1 = new ji_InputStreamReader();
    ji_InputStreamReader__init_2(var_1, var_0);
    return var_1;
}
function ji_InputStreamReader__init_3(var_0, var_1) {
    var var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_4(var_2, var_0, var_1);
    return var_2;
}
function ji_InputStreamReader__init_0($this, $in, $charset) {
    var var$3, var$4;
    var$3 = $charset.$newDecoder();
    jnc_CodingErrorAction_$callClinit();
    var$4 = jnc_CodingErrorAction_REPLACE;
    var$4 = jnc_CharsetDecoder_onMalformedInput(var$3, var$4);
    var$3 = jnc_CodingErrorAction_REPLACE;
    var$4 = jnc_CharsetDecoder_onUnmappableCharacter(var$4, var$3);
    ji_InputStreamReader__init_4($this, $in, var$4);
}
function ji_InputStreamReader__init_2($this, $in) {
    jnci_UTF8Charset_$callClinit();
    ji_InputStreamReader__init_0($this, $in, jnci_UTF8Charset_INSTANCE);
}
function ji_InputStreamReader__init_4($this, $in, $decoder) {
    ji_Reader__init_($this);
    $this.$inData = $rt_createByteArray(8192);
    $this.$inBuffer = jn_ByteBuffer_wrap($this.$inData);
    $this.$outData = $rt_createCharArray(1024);
    $this.$outBuffer = jn_CharBuffer_wrap0($this.$outData);
    $this.$stream = $in;
    $this.$decoder = $decoder;
    $this.$outBuffer.$position(jn_Buffer_limit($this.$outBuffer));
    $this.$inBuffer.$position1(jn_Buffer_limit($this.$inBuffer));
}
function ji_InputStreamReader_close($this) {
    $this.$stream.$close();
}
function ji_InputStreamReader_read($this, $cbuf, $off, $len) {
    var $bytesRead, $sz;
    if ($this.$eof0 && !jn_Buffer_hasRemaining($this.$outBuffer))
        return (-1);
    $bytesRead = 0;
    a: {
        while ($len > 0) {
            $sz = jl_Math_min($len, jn_Buffer_remaining($this.$outBuffer));
            $this.$outBuffer.$get($cbuf, $off + $bytesRead | 0, $sz);
            $len = $len - $sz | 0;
            $bytesRead = $bytesRead + $sz | 0;
            if (!jn_Buffer_hasRemaining($this.$outBuffer) && !ji_InputStreamReader_fillBuffer($this))
                break a;
        }
    }
    return $bytesRead;
}
function ji_InputStreamReader_fillBuffer($this) {
    if ($this.$eof0)
        return 0;
    $this.$outBuffer.$compact();
    a: {
        while (true) {
            if (!jn_Buffer_hasRemaining($this.$inBuffer) && !ji_InputStreamReader_fillReadBuffer($this))
                break a;
            if (!(jnc_CharsetDecoder_decode($this.$decoder, $this.$inBuffer, $this.$outBuffer, $this.$streamEof)).$isOverflow())
                continue;
            else
                break;
        }
    }
    if (!jn_Buffer_hasRemaining($this.$inBuffer) && $this.$streamEof && (jnc_CharsetDecoder_flush($this.$decoder, $this.$outBuffer)).$isUnderflow())
        $this.$eof0 = 1;
    jn_CharBuffer_flip($this.$outBuffer);
    return 1;
}
function ji_InputStreamReader_fillReadBuffer($this) {
    var $bytesRead;
    if ($this.$streamEof)
        return 0;
    $this.$inBuffer.$compact0();
    a: {
        while (true) {
            if (!jn_Buffer_hasRemaining($this.$inBuffer))
                break a;
            $bytesRead = $this.$stream.$read3(jn_ByteBuffer_array($this.$inBuffer), jn_Buffer_position($this.$inBuffer), jn_Buffer_remaining($this.$inBuffer));
            if ($bytesRead == (-1)) {
                $this.$streamEof = 1;
                break a;
            }
            $this.$inBuffer.$position1(jn_Buffer_position($this.$inBuffer) + $bytesRead | 0);
            if (!$bytesRead)
                break;
        }
    }
    jn_ByteBuffer_flip($this.$inBuffer);
    return 1;
}
var cbgm_Intersector$MinimumTranslationVector = $rt_classWithoutFields();
var cbgg_TextureData$Factory = $rt_classWithoutFields();
function cbgg_TextureData$Factory_loadFromFile($file, $format, $useMipMaps) {
    var $fileTextureDataEmu;
    if ($file === null)
        return null;
    $fileTextureDataEmu = cbggg_FileTextureData__init_($file, cbgg_Pixmap__init_0($file), $format, $useMipMaps);
    return $fileTextureDataEmu;
}
var ju_Iterator = $rt_classWithoutFields(0);
function ju_AbstractList$1() {
    var a = this; jl_Object.call(a);
    a.$index2 = 0;
    a.$modCount0 = 0;
    a.$size2 = 0;
    a.$removeIndex0 = 0;
    a.$this$021 = null;
}
function ju_AbstractList$1__init_(var_0) {
    var var_1 = new ju_AbstractList$1();
    ju_AbstractList$1__init_0(var_1, var_0);
    return var_1;
}
function ju_AbstractList$1__init_0($this, $this$0) {
    $this.$this$021 = $this$0;
    jl_Object__init_0($this);
    $this.$modCount0 = $this.$this$021.$modCount1;
    $this.$size2 = $this.$this$021.$size0();
    $this.$removeIndex0 = (-1);
}
function ju_AbstractList$1_hasNext($this) {
    return $this.$index2 >= $this.$size2 ? 0 : 1;
}
function ju_AbstractList$1_next($this) {
    var var$1, var$2;
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$removeIndex0 = $this.$index2;
    var$1 = $this.$this$021;
    var$2 = $this.$index2;
    $this.$index2 = var$2 + 1 | 0;
    return var$1.$get3(var$2);
}
function ju_AbstractList$1_checkConcurrentModification($this) {
    if ($this.$modCount0 >= $this.$this$021.$modCount1)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_());
}
function cgt_GdxSinScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$random3 = null;
    a.$batch7 = null;
    a.$renderer6 = null;
    a.$amounts6 = null;
    a.$iterations6 = Long_ZERO;
    a.$font8 = null;
    a.$viewport6 = null;
    a.$mainGame6 = null;
}
function cgt_GdxSinScreen__init_(var_0) {
    var var_1 = new cgt_GdxSinScreen();
    cgt_GdxSinScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_GdxSinScreen_show($this) {
    $this.$font8 = $this.$mainGame6.$font0;
    $this.$random3 = $this.$mainGame6.$random0;
    $this.$batch7 = $this.$mainGame6.$batch0;
    $this.$viewport6 = cbguv_ScreenViewport__init_();
    $this.$renderer6 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts6, Long_ZERO);
    $this.$iterations6 = Long_ZERO;
}
function cgt_GdxSinScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts6 = $rt_createLongArray(512);
    $this.$iterations6 = Long_ZERO;
    $this.$mainGame6 = $main;
}
function cgt_GdxSinScreen_render($this, $delta) {
    var $camera, $i, $m, var$5, $x, $color, var$8, var$9, $j, var$11, var$12, var$13;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame6.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame6.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport6.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        ju_Arrays_fill($this.$amounts6, Long_ZERO);
        $this.$iterations6 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        ju_Arrays_fill($this.$amounts6, Long_ZERO);
        $this.$iterations6 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        ju_Arrays_fill($this.$amounts6, Long_ZERO);
        $this.$iterations6 = Long_ZERO;
    }
    $this.$iterations6 = Long_add($this.$iterations6, Long_fromInt(1));
    $i = 0;
    while ($i < 262144) {
        $m = cbgm_MathUtils_sin($this.$random3.$nextExclusiveFloat()) * 128.0 + 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$5 = $this.$amounts6.data;
            var$5[$m] = Long_add(var$5[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer6.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer6.$color($color);
        var$8 = $this.$renderer6;
        var$9 = $x;
        var$8.$vertex(var$9, 0.0, 0.0);
        $this.$renderer6.$color($color);
        $this.$renderer6.$vertex(var$9, 0.125 * Long_toNumber($this.$amounts6.data[$x]) / Long_toNumber($this.$iterations6), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer6.$color((-6.221923240859403E37));
        var$8 = $this.$renderer6;
        var$11 = $j;
        var$8.$vertex(0.0, var$11, 0.0);
        $this.$renderer6.$color((-6.221923240859403E37));
        $this.$renderer6.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer6.$end();
    $this.$batch7.$setProjectionMatrix($camera.$combined);
    $this.$batch7.$begin0();
    var$12 = $this.$font8;
    var$13 = $this.$batch7;
    var$5 = $rt_createArray(jl_Object, 1);
    var$5.data[0] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$12.$draw(var$13, cgt_Stringf_format($rt_s(410), var$5), 64.0, 522.0, 384.0, 1, 1);
    $this.$batch7.$end();
}
function cgt_GdxSinScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport6.$update0($width, $height, 1);
    $this.$viewport6.$apply(1);
}
var cbg_Audio = $rt_classWithoutFields(0);
function cgxgbt_TeaAudio() {
    jl_Object.call(this);
    this.$soundManager = null;
}
function cgxgbt_TeaAudio__init_(var_0) {
    var var_1 = new cgxgbt_TeaAudio();
    cgxgbt_TeaAudio__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaAudio__init_0($this, $soundManager) {
    jl_Object__init_0($this);
    $this.$soundManager = $soundManager;
}
var cbgmc_Segment = $rt_classWithoutFields();
var cbgssu_FocusListener$1 = $rt_classWithoutFields();
var cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = null;
function cbgssu_FocusListener$1_$callClinit() {
    cbgssu_FocusListener$1_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$1);
    cbgssu_FocusListener$1__clinit_();
}
function cbgssu_FocusListener$1__clinit_() {
    cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = $rt_createIntArray((cbgssu_FocusListener$FocusEvent$Type_values()).data.length);
    cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type.data[jl_Enum_ordinal(cbgssu_FocusListener$FocusEvent$Type_keyboard)] = 1;
    cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type.data[jl_Enum_ordinal(cbgssu_FocusListener$FocusEvent$Type_scroll)] = 2;
}
var cgxgbtd_EventTargetWrapper = $rt_classWithoutFields(0);
var cbgssu_Window = $rt_classWithoutFields(cbgssu_Table);
var cbgssu_Window_tmpPosition = null;
var cbgssu_Window_tmpSize = null;
function cbgssu_Window_$callClinit() {
    cbgssu_Window_$callClinit = $rt_eraseClinit(cbgssu_Window);
    cbgssu_Window__clinit_();
}
function cbgssu_Window__clinit_() {
    cbgssu_Window_tmpPosition = cbgm_Vector2__init_();
    cbgssu_Window_tmpSize = cbgm_Vector2__init_();
}
var cbgssu_Dialog = $rt_classWithoutFields(cbgssu_Window);
function jnc_CharsetDecoder() {
    var a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement0 = null;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$state2 = 0;
}
function jnc_CharsetDecoder__init_($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
    var var$4, var$5;
    jl_Object__init_0($this);
    $this.$replacement0 = $rt_s(411);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction0 = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction0 = jnc_CodingErrorAction_REPORT;
    if ($averageCharsPerByte <= 0.0) {
        var$4 = new jl_IllegalArgumentException;
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append3(jl_StringBuilder_append(var$5, $rt_s(412)), $averageCharsPerByte);
        jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
        $rt_throw(var$4);
    }
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append3(jl_StringBuilder_append(var$5, $rt_s(413)), $maxCharsPerByte);
    jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
    $rt_throw(var$4);
}
function jnc_CharsetDecoder_onMalformedInput($this, $newAction) {
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(414)));
}
function jnc_CharsetDecoder_implOnMalformedInput($this, $newAction) {}
function jnc_CharsetDecoder_onUnmappableCharacter($this, $newAction) {
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(414)));
}
function jnc_CharsetDecoder_implOnUnmappableCharacter($this, $newAction) {}
function jnc_CharsetDecoder_decode($this, $in, $out, $endOfInput) {
    var $result, $e, var$6, $$je;
    if (!($this.$state2 == 2 && !$endOfInput) && $this.$state2 != 3) {
        $this.$state2 = $endOfInput ? 2 : 1;
        while (true) {
            try {
                $result = $this.$decodeLoop($in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $rt_throw(jnc_CoderMalfunctionError__init_($e));
                } else {
                    throw $$e;
                }
            }
            if ($result.$isOverflow())
                return $result;
            if ($result.$isUnderflow()) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    var$6 = $this.$malformedAction0;
                    jnc_CodingErrorAction_$callClinit();
                    if (var$6 === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    $in.$position1(jn_Buffer_position($in) + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put1($out, $this.$replacement0);
                }
                return $result;
            }
            if ($result.$isMalformed()) {
                var$6 = $this.$malformedAction0;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement0);
                }
                $in.$position1(jn_Buffer_position($in) + $result.$length() | 0);
            } else if ($result.$isUnmappable()) {
                var$6 = $this.$unmappableAction0;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    break;
                if ($this.$unmappableAction0 === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement0.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put1($out, $this.$replacement0);
                }
                $in.$position1(jn_Buffer_position($in) + $result.$length() | 0);
            }
        }
        return $result;
    }
    $rt_throw(jl_IllegalStateException__init_0());
}
function jnc_CharsetDecoder_flush($this, $out) {
    if ($this.$state2 != 3 && $this.$state2 != 2)
        $rt_throw(jl_IllegalStateException__init_0());
    $this.$state2 = 3;
    return $this.$implFlush0($out);
}
function jnc_CharsetDecoder_implFlush($this, $out) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
}
function jnci_BufferedDecoder() {
    var a = this; jnc_CharsetDecoder.call(a);
    a.$inArray0 = null;
    a.$outArray0 = null;
}
function jnci_BufferedDecoder__init_($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
    jnc_CharsetDecoder__init_($this, $cs, $averageCharsPerByte, $maxCharsPerByte);
    $this.$inArray0 = $rt_createByteArray(512);
    $this.$outArray0 = $rt_createCharArray(512);
}
function jnci_BufferedDecoder_decodeLoop($this, $in, $out) {
    var $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, $result, $outPos, $outSize, $controller;
    $inArray = $this.$inArray0;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray0;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get12($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outPos = 0;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedDecoder$Controller__init_($in, $out);
            $result = $this.$arrayDecode($inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if ($result === null && $outPos == $controller.$outPosition0) {
                jnc_CoderResult_$callClinit();
                $result = jnc_CoderResult_UNDERFLOW;
            }
            var$9 = $controller.$outPosition0;
            $out.$put5($outArray, 0, var$9);
            if ($result !== null)
                break;
        }
    }
    $in.$position1(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return $result;
}
var jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder);
function jnci_UTF8Decoder__init_(var_0) {
    var var_1 = new jnci_UTF8Decoder();
    jnci_UTF8Decoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_UTF8Decoder__init_0($this, $cs) {
    jnci_BufferedDecoder__init_($this, $cs, 0.3333333432674408, 0.5);
}
function jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $b, var$12, var$13, $b2, $b3, $c, $b4, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    var$10 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if (var$10 >= $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = var$13 + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        var$10 = var$13;
                    } else if (($b & 240) == 224) {
                        if ((var$10 + 2 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput(3))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$10 = var$13 + 1 | 0;
                        $b3 = var$9[var$13];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = var$10 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = var$10 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if ((var$10 + 3 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput(4))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreOutput0(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$12 = var$13 + 1 | 0;
                        $b3 = var$9[var$13];
                        var$10 = var$12 + 1 | 0;
                        $b4 = var$9[var$12];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        var$13 = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        var$12 = var$13 + 1 | 0;
                        var$9[var$13] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = var$10;
                    $outPos = var$12;
                }
                break a;
            }
            $inPos = var$10 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = var$10 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
}
function jnci_UTF8Decoder_checkMidByte($this, $b) {
    return ($b & 192) != 128 ? 0 : 1;
}
var cbgu_Json = $rt_classWithoutFields();
var otjb_Storage = $rt_classWithoutFields();
function otjb_Storage_getLocalStorage() {
    return $rt_globals.window.localStorage;
}
var jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_PossessiveQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveQuantifierSet();
    jur_PossessiveQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound())
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jnci_BufferedDecoder$Controller() {
    var a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out2 = null;
    a.$inPosition0 = 0;
    a.$outPosition0 = 0;
}
function jnci_BufferedDecoder$Controller__init_(var_0, var_1) {
    var var_2 = new jnci_BufferedDecoder$Controller();
    jnci_BufferedDecoder$Controller__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnci_BufferedDecoder$Controller__init_0($this, $in, $out) {
    jl_Object__init_0($this);
    $this.$in0 = $in;
    $this.$out2 = $out;
}
function jnci_BufferedDecoder$Controller_hasMoreInput($this, $sz) {
    return jn_Buffer_remaining($this.$in0) < $sz ? 0 : 1;
}
function jnci_BufferedDecoder$Controller_hasMoreOutput($this, $sz) {
    return jn_Buffer_remaining($this.$out2) < $sz ? 0 : 1;
}
function jnci_BufferedDecoder$Controller_setInPosition($this, $inPosition) {
    $this.$inPosition0 = $inPosition;
}
function jnci_BufferedDecoder$Controller_setOutPosition($this, $outPosition) {
    $this.$outPosition0 = $outPosition;
}
function cgt_LumpScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist4 = null;
    a.$batch8 = null;
    a.$renderer7 = null;
    a.$amounts7 = null;
    a.$iterations7 = Long_ZERO;
    a.$font9 = null;
    a.$viewport7 = null;
    a.$mainGame7 = null;
}
function cgt_LumpScreen__init_(var_0) {
    var var_1 = new cgt_LumpScreen();
    cgt_LumpScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_LumpScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font9 = $this.$mainGame7.$font0;
    a: {
        try {
            var$1 = new cgtrd_LumpDistribution;
            var$2 = $this.$mainGame7.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_LumpDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist4 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist4 = cgtrd_LumpDistribution__init_0($this.$mainGame7.$random0, 0.0, 0.25);
    }
    $this.$batch8 = $this.$mainGame7.$batch0;
    $this.$viewport7 = cbguv_ScreenViewport__init_();
    $this.$renderer7 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts7, Long_ZERO);
    $this.$iterations7 = Long_ZERO;
}
function cgt_LumpScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts7 = $rt_createLongArray(512);
    $this.$iterations7 = Long_ZERO;
    $this.$mainGame7 = $main;
}
function cgt_LumpScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame7.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame7.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport7.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts7, Long_ZERO);
        $this.$iterations7 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts7, Long_ZERO);
        $this.$iterations7 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts7, Long_ZERO);
        $this.$iterations7 = Long_ZERO;
    }
    $this.$iterations7 = Long_add($this.$iterations7, Long_fromInt(1));
    var$3 = $this.$dist4;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist4.$nextDouble() * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts7.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer7.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer7.$color($color);
        var$3 = $this.$renderer7;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer7.$color($color);
        $this.$renderer7.$vertex(var$9, Long_toNumber(Long_div($this.$amounts7.data[$x], $this.$iterations7)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer7.$color((-6.221923240859403E37));
        var$3 = $this.$renderer7;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer7.$color((-6.221923240859403E37));
        $this.$renderer7.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer7.$end();
    $this.$batch8.$setProjectionMatrix($camera.$combined);
    $this.$batch8.$begin0();
    var$3 = $this.$font9;
    var$12 = $this.$batch8;
    var$6 = $rt_createArray(jl_Object, 3);
    var$13 = var$6.data;
    var$13[0] = jl_Double_valueOf(cgt_DistributorDemo_a);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$14 = cbg_Gdx_graphics;
    var$13[2] = jl_Integer_valueOf(var$14.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(415), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font9.$draw($this.$batch8, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font9.$draw($this.$batch8, $rt_s(52), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch8.$end();
}
function cgt_LumpScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport7.$update0($width, $height, 1);
    $this.$viewport7.$apply(1);
}
var jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0);
var jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields();
function jl_DefaultUncaughtExceptionHandler__init_() {
    var var_0 = new jl_DefaultUncaughtExceptionHandler();
    jl_DefaultUncaughtExceptionHandler__init_0(var_0);
    return var_0;
}
function jl_DefaultUncaughtExceptionHandler__init_0($this) {
    jl_Object__init_0($this);
}
function jl_DefaultUncaughtExceptionHandler_uncaughtException($this, $t, $e) {
    $e.$printStackTrace0();
}
var jl_ReflectiveOperationException = $rt_classWithoutFields(jl_Exception);
function jl_ReflectiveOperationException__init_() {
    var var_0 = new jl_ReflectiveOperationException();
    jl_ReflectiveOperationException__init_0(var_0);
    return var_0;
}
function jl_ReflectiveOperationException__init_0($this) {
    jl_Exception__init_0($this);
}
var jl_InstantiationException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function jl_InstantiationException__init_() {
    var var_0 = new jl_InstantiationException();
    jl_InstantiationException__init_0(var_0);
    return var_0;
}
function jl_InstantiationException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
var cbgggpi_DynamicsModifier$PolarAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$022 = null;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetter$1();
    jur_AbstractCharClass$LazyJavaLetter$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetter$1__init_0($this, $this$0) {
    $this.$this$022 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetter$1_contains($this, $ch) {
    return jl_Character_isLetter($ch);
}
var cgxgbtd_WindowWrapper = $rt_classWithoutFields(0);
function cgxgbtdi_TeaWindow() {
    var a = this; jl_Object.call(a);
    a.$window = null;
    a.$runnable = null;
}
var cgxgbtdi_TeaWindow_TEA_WINDOW = null;
function cgxgbtdi_TeaWindow_$callClinit() {
    cgxgbtdi_TeaWindow_$callClinit = $rt_eraseClinit(cgxgbtdi_TeaWindow);
    cgxgbtdi_TeaWindow__clinit_();
}
function cgxgbtdi_TeaWindow__init_() {
    var var_0 = new cgxgbtdi_TeaWindow();
    cgxgbtdi_TeaWindow__init_0(var_0);
    return var_0;
}
function cgxgbtdi_TeaWindow_get() {
    cgxgbtdi_TeaWindow_$callClinit();
    return cgxgbtdi_TeaWindow_TEA_WINDOW;
}
function cgxgbtdi_TeaWindow__init_0($this) {
    cgxgbtdi_TeaWindow_$callClinit();
    jl_Object__init_0($this);
    $this.$window = $rt_globals.window;
}
function cgxgbtdi_TeaWindow_getDocument($this) {
    var var$1;
    var$1 = $this.$window.document;
    return var$1;
}
function cgxgbtdi_TeaWindow_requestAnimationFrame($this, $runnable) {
    $this.$runnable = $runnable;
    $rt_globals.requestAnimationFrame(otji_JS_function($this, "onAnimationFrame"));
}
function cgxgbtdi_TeaWindow_onAnimationFrame($this, $arg0) {
    var $toRun;
    $toRun = $this.$runnable;
    $this.$runnable = null;
    $toRun.$run();
}
function cgxgbtdi_TeaWindow_getLocation($this) {
    var $location;
    $location = $this.$window.location;
    return $location;
}
function cgxgbtdi_TeaWindow_getClientWidth($this) {
    return $this.$window.document.documentElement.clientWidth;
}
function cgxgbtdi_TeaWindow_getClientHeight($this) {
    return $this.$window.document.documentElement.clientHeight;
}
function cgxgbtdi_TeaWindow_addEventListener($this, $type, $listener) {
    var $eListener;
    $eListener = otji_JS_functionAsObject($listener, "handleEvent");
    $this.$window.addEventListener($rt_ustr($type), otji_JS_function($eListener, "handleEvent"));
}
function cgxgbtdi_TeaWindow__clinit_() {
    cgxgbtdi_TeaWindow_TEA_WINDOW = cgxgbtdi_TeaWindow__init_();
}
function cgxgbtdi_TeaWindow_onAnimationFrame$exported$0(var$0, var$1) {
    var$0.$onAnimationFrame(var$1);
}
var cbg_Net = $rt_classWithoutFields(0);
var cbgssa_EventAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_CountdownEventAction = $rt_classWithoutFields(cbgssa_EventAction);
var cbgggmd_ModelNodeAnimation = $rt_classWithoutFields();
function ju_HashMap$HashEntry() {
    var a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next3 = null;
}
function ju_HashMap$HashEntry__init_(var_0, var_1) {
    var var_2 = new ju_HashMap$HashEntry();
    ju_HashMap$HashEntry__init_0(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap$HashEntry__init_0($this, $theKey, $hash) {
    ju_MapEntry__init_0($this, $theKey, null);
    $this.$origKeyHash = $hash;
}
var cbgm_Shape2D = $rt_classWithoutFields(0);
var cbgggpr_PointSpriteRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
var cbgm_ConvexHull = $rt_classWithoutFields();
var jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyUpper__init_() {
    var var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyUpper__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyUpper_computeValue($this) {
    return (jur_CharClass__init_()).$add0(65, 90);
}
var cbgss_Touchable = $rt_classWithoutFields(jl_Enum);
var cbgss_Touchable_enabled = null;
var cbgss_Touchable_disabled = null;
var cbgss_Touchable_childrenOnly = null;
var cbgss_Touchable_$VALUES = null;
function cbgss_Touchable_$callClinit() {
    cbgss_Touchable_$callClinit = $rt_eraseClinit(cbgss_Touchable);
    cbgss_Touchable__clinit_();
}
function cbgss_Touchable__init_(var_0, var_1) {
    var var_2 = new cbgss_Touchable();
    cbgss_Touchable__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgss_Touchable__init_0($this, var$1, var$2) {
    cbgss_Touchable_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgss_Touchable__clinit_() {
    cbgss_Touchable_enabled = cbgss_Touchable__init_($rt_s(416), 0);
    cbgss_Touchable_disabled = cbgss_Touchable__init_($rt_s(417), 1);
    cbgss_Touchable_childrenOnly = cbgss_Touchable__init_($rt_s(418), 2);
    cbgss_Touchable_$VALUES = $rt_createArrayFromData(cbgss_Touchable, [cbgss_Touchable_enabled, cbgss_Touchable_disabled, cbgss_Touchable_childrenOnly]);
}
var cbgssu_Stack = $rt_classWithoutFields(cbgssu_WidgetGroup);
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt = null;
}
function jur_MultiLineSOLSet__init_(var_0) {
    var var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_MultiLineSOLSet__init_0($this, $lt) {
    jur_AbstractSet__init_($this);
    $this.$lt = $lt;
}
function jur_MultiLineSOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var var$4, var$5;
    a: {
        if ($strIndex != $matchResult.$getRightBound()) {
            if (!$strIndex)
                break a;
            if ($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound())
                break a;
            var$4 = $this.$lt;
            var$5 = $strIndex - 1 | 0;
            if (var$4.$isAfterLineTerminator($testString.$charAt(var$5), $testString.$charAt($strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_MultiLineSOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_MultiLineSOLSet_getName($this) {
    return $rt_s(419);
}
var cbgssa_RunnableAction = $rt_classWithoutFields(cbgss_Action);
function cbggg_VertexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$attributes0 = null;
    a.$buffer4 = null;
    a.$bufferHandle0 = 0;
    a.$isStatic0 = 0;
    a.$usage1 = 0;
    a.$isDirty0 = 0;
    a.$isBound0 = 0;
}
function cbggg_VertexBufferObject__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObject();
    cbggg_VertexBufferObject__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObject__init_0($this, $isStatic, $numVertices, $attributes) {
    jl_Object__init_0($this);
    $this.$isDirty0 = 0;
    $this.$isBound0 = 0;
    $this.$isStatic0 = $isStatic;
    $this.$attributes0 = $attributes;
    $this.$buffer4 = cbgu_BufferUtils_newFloatBuffer($rt_imul($this.$attributes0.$vertexSize / 4 | 0, $numVertices));
    jn_FloatBuffer_flip($this.$buffer4);
    $this.$bufferHandle0 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage1 = !$isStatic ? 35048 : 35044;
}
function cbggg_VertexBufferObject_getAttributes($this) {
    return $this.$attributes0;
}
function cbggg_VertexBufferObject_getNumVertices($this) {
    return jn_Buffer_limit($this.$buffer4) / ($this.$attributes0.$vertexSize / 4 | 0) | 0;
}
function cbggg_VertexBufferObject_bufferChanged($this) {
    if ($this.$isBound0) {
        cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer4), $this.$buffer4, $this.$usage1);
        $this.$isDirty0 = 0;
    }
}
function cbggg_VertexBufferObject_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty0 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer4, $count, $offset);
    $this.$buffer4.$position4(0);
    $this.$buffer4.$limit1($count);
    cbggg_VertexBufferObject_bufferChanged($this);
}
function cbggg_VertexBufferObject_bind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, var$6, $attribute, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle0);
    if ($this.$isDirty0) {
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer4), $this.$buffer4, $this.$usage1);
        $this.$isDirty0 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes0);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes0, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes0.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes0, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes0.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound0 = 1;
}
function cbggg_VertexBufferObject_unbind($this, $shader, $locations) {
    var $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes0);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute((cbgg_VertexAttributes_get($this.$attributes0, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound0 = 0;
}
var cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject);
function cbggg_VertexArray__init_(var_0, var_1) {
    var var_2 = new cbggg_VertexArray();
    cbggg_VertexArray__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_VertexArray__init_0($this, $numVertices, $attributes) {
    cbggg_VertexBufferObject__init_0($this, 0, $numVertices, $attributes);
}
var cbg_ApplicationListener = $rt_classWithoutFields(0);
function cbg_Game() {
    jl_Object.call(this);
    this.$screen = null;
}
function cbg_Game__init_($this) {
    jl_Object__init_0($this);
}
function cbg_Game_dispose($this) {
    if ($this.$screen !== null)
        $this.$screen.$hide();
}
function cbg_Game_pause($this) {
    if ($this.$screen !== null)
        $this.$screen.$pause();
}
function cbg_Game_resume($this) {
    if ($this.$screen !== null)
        $this.$screen.$resume();
}
function cbg_Game_render($this) {
    if ($this.$screen !== null)
        $this.$screen.$render0(cbg_Gdx_graphics.$getDeltaTime());
}
function cbg_Game_resize($this, $width, $height) {
    if ($this.$screen !== null)
        $this.$screen.$resize($width, $height);
}
function cbg_Game_setScreen($this, $screen) {
    if ($this.$screen !== null)
        $this.$screen.$hide();
    $this.$screen = $screen;
    if ($this.$screen !== null) {
        $this.$screen.$show();
        $this.$screen.$resize(cbg_Gdx_graphics.$getWidth(), cbg_Gdx_graphics.$getHeight());
    }
}
var jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyLower__init_() {
    var var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyLower__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyLower_computeValue($this) {
    return (jur_CharClass__init_()).$add0(97, 122);
}
var cbgssu_SelectBox$2 = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgssu_ArraySelection = $rt_classWithoutFields(cbgssu_Selection);
var cbgssu_SelectBox$1 = $rt_classWithoutFields(cbgssu_ArraySelection);
var cbgssu_TextField$KeyRepeatTask = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgssa_ParallelAction = $rt_classWithoutFields(cbgss_Action);
var cbgssa_SequenceAction = $rt_classWithoutFields(cbgssa_ParallelAction);
var jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaTitleCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaTitleCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaTitleCase_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaTitleCase$1__init_($this);
}
function cbggg_IndexBufferObjectSubData() {
    var a = this; jl_Object.call(a);
    a.$buffer5 = null;
    a.$byteBuffer0 = null;
    a.$bufferHandle1 = 0;
    a.$isDirect0 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
    a.$usage2 = 0;
}
function cbggg_IndexBufferObjectSubData__init_(var_0, var_1) {
    var var_2 = new cbggg_IndexBufferObjectSubData();
    cbggg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_IndexBufferObjectSubData__init_0($this, $isStatic, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty1 = 1;
    $this.$isBound1 = 0;
    $this.$byteBuffer0 = cbgu_BufferUtils_newByteBuffer($maxIndices * 2 | 0);
    $this.$isDirect0 = 1;
    $this.$usage2 = !$isStatic ? 35048 : 35044;
    $this.$buffer5 = $this.$byteBuffer0.$asShortBuffer();
    $this.$buffer5.$flip0();
    $this.$byteBuffer0.$flip0();
    $this.$bufferHandle1 = cbggg_IndexBufferObjectSubData_createBufferObject($this);
}
function cbggg_IndexBufferObjectSubData_createBufferObject($this) {
    var $result;
    $result = cbg_Gdx_gl20.$glGenBuffer();
    cbg_Gdx_gl20.$glBindBuffer(34963, $result);
    cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_capacity($this.$byteBuffer0), null, $this.$usage2);
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    return $result;
}
function cbggg_IndexBufferObjectSubData_getNumIndices($this) {
    return jn_Buffer_limit($this.$buffer5);
}
function cbggg_IndexBufferObjectSubData_getNumMaxIndices($this) {
    return jn_Buffer_capacity($this.$buffer5);
}
function cbggg_IndexBufferObjectSubData_setIndices($this, $indices, $offset, $count) {
    $this.$isDirty1 = 1;
    $this.$buffer5.$clear1();
    $this.$buffer5.$put6($indices, $offset, $count);
    $this.$buffer5.$flip0();
    $this.$byteBuffer0.$position3(0);
    $this.$byteBuffer0.$limit0($count << 1);
    if ($this.$isBound1) {
        cbg_Gdx_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0);
        $this.$isDirty1 = 0;
    }
}
function cbggg_IndexBufferObjectSubData_getBuffer($this, $forWriting) {
    $this.$isDirty1 = $this.$isDirty1 | $forWriting;
    return $this.$buffer5;
}
function cbggg_IndexBufferObjectSubData_bind($this) {
    if (!$this.$bufferHandle1)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(420)));
    cbg_Gdx_gl20.$glBindBuffer(34963, $this.$bufferHandle1);
    if ($this.$isDirty1) {
        $this.$byteBuffer0.$limit0(jn_Buffer_limit($this.$buffer5) * 2 | 0);
        cbg_Gdx_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0);
        $this.$isDirty1 = 0;
    }
    $this.$isBound1 = 1;
}
function cbggg_IndexBufferObjectSubData_unbind($this) {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound1 = 0;
}
var jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet);
function jur_PreviousMatch__init_() {
    var var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_0(var_0);
    return var_0;
}
function jur_PreviousMatch__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_PreviousMatch_matches($this, $stringIndex, $testString, $matchResult) {
    if ($stringIndex != $matchResult.$getPreviousMatchEnd())
        return (-1);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_PreviousMatch_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_PreviousMatch_getName($this) {
    return $rt_s(421);
}
var ju_Comparator = $rt_classWithoutFields(0);
function cgt_StudentsTScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist5 = null;
    a.$batch9 = null;
    a.$renderer8 = null;
    a.$amounts8 = null;
    a.$iterations8 = Long_ZERO;
    a.$font10 = null;
    a.$viewport8 = null;
    a.$mainGame8 = null;
}
function cgt_StudentsTScreen__init_(var_0) {
    var var_1 = new cgt_StudentsTScreen();
    cgt_StudentsTScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_StudentsTScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font10 = $this.$mainGame8.$font0;
    a: {
        try {
            var$1 = new cgtrd_StudentsTDistribution;
            var$2 = $this.$mainGame8.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_StudentsTDistribution__init_(var$1, var$2, cgt_DistributorDemo_a | 0);
            $this.$dist5 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist5 = cgtrd_StudentsTDistribution__init_0($this.$mainGame8.$random0, 1.0);
    }
    $this.$batch9 = $this.$mainGame8.$batch0;
    $this.$viewport8 = cbguv_ScreenViewport__init_();
    $this.$renderer8 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts8, Long_ZERO);
    $this.$iterations8 = Long_ZERO;
}
function cgt_StudentsTScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts8 = $rt_createLongArray(512);
    $this.$iterations8 = Long_ZERO;
    $this.$mainGame8 = $main;
}
function cgt_StudentsTScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame8.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame8.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport8.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts8, Long_ZERO);
        $this.$iterations8 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts8, Long_ZERO);
        $this.$iterations8 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts8, Long_ZERO);
        $this.$iterations8 = Long_ZERO;
    }
    $this.$iterations8 = Long_add($this.$iterations8, Long_fromInt(1));
    var$3 = $this.$dist5;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist5.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts8.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer8.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer8.$color($color);
        var$3 = $this.$renderer8;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer8.$color($color);
        $this.$renderer8.$vertex(var$9, Long_toNumber(Long_div($this.$amounts8.data[$x], $this.$iterations8)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer8.$color((-6.221923240859403E37));
        var$3 = $this.$renderer8;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer8.$color((-6.221923240859403E37));
        $this.$renderer8.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer8.$end();
    $this.$batch9.$setProjectionMatrix($camera.$combined);
    $this.$batch9.$begin0();
    var$3 = $this.$font10;
    var$12 = $this.$batch9;
    var$6 = $rt_createArray(jl_Object, 3);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf($this.$dist5.$getMedian());
    var$13[2] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(422), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font10.$draw($this.$batch9, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font10.$draw($this.$batch9, $rt_s(423), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch9.$end();
}
function cgt_StudentsTScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport8.$update0($width, $height, 1);
    $this.$viewport8.$apply(1);
}
var cbgm_DelaunayTriangulator = $rt_classWithoutFields();
var jur_NonCapFSet = $rt_classWithoutFields(jur_FSet);
function jur_NonCapFSet__init_(var_0) {
    var var_1 = new jur_NonCapFSet();
    jur_NonCapFSet__init_0(var_1, var_0);
    return var_1;
}
function jur_NonCapFSet__init_0($this, $groupIndex) {
    jur_FSet__init_0($this, $groupIndex);
}
function jur_NonCapFSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_NonCapFSet_getName($this) {
    return $rt_s(424);
}
function jur_NonCapFSet_hasConsumed($this, $mr) {
    return 0;
}
var cbgssu_ImageButton = $rt_classWithoutFields(cbgssu_Button);
var cbgggpi_ParticleControllerInfluencer$Random = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer);
var cbgggpi_ScaleInfluencer = $rt_classWithoutFields(cbgggpi_SimpleInfluencer);
var cbgm_MathUtils = $rt_classWithoutFields();
var cbgm_MathUtils_random = null;
function cbgm_MathUtils_$callClinit() {
    cbgm_MathUtils_$callClinit = $rt_eraseClinit(cbgm_MathUtils);
    cbgm_MathUtils__clinit_();
}
function cbgm_MathUtils_sin($radians) {
    cbgm_MathUtils_$callClinit();
    cbgm_MathUtils$Sin_$callClinit();
    return cbgm_MathUtils$Sin_table.data[($radians * 2607.594482421875 | 0) & 16383];
}
function cbgm_MathUtils_nextPowerOfTwo($value) {
    var var$2, var$3;
    cbgm_MathUtils_$callClinit();
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function cbgm_MathUtils_isEqual($a, $b, $tolerance) {
    cbgm_MathUtils_$callClinit();
    return jl_Math_abs($a - $b) > $tolerance ? 0 : 1;
}
function cbgm_MathUtils__clinit_() {
    cbgm_MathUtils_random = cbgm_RandomXS128__init_();
}
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
function jur_UCISupplCharSet__init_(var_0) {
    var var_1 = new jur_UCISupplCharSet();
    jur_UCISupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplCharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$charCount = 2;
    $this.$ch0 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
}
function jur_UCISupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$ch0 != jl_Character_toLowerCase(jl_Character_toUpperCase(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
}
function jur_UCISupplCharSet_getName($this) {
    var var$1, var$2;
    var$1 = jl_String__init_(jl_Character_toChars($this.$ch0));
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(425)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function cbggg_BitmapFont$BitmapFontData() {
    var a = this; jl_Object.call(a);
    a.$name4 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped0 = 0;
    a.$padTop = 0.0;
    a.$padRight = 0.0;
    a.$padBottom = 0.0;
    a.$padLeft = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY = 0.0;
    a.$markupEnabled = 0;
    a.$glyphs = null;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
function cbggg_BitmapFont$BitmapFontData__init_(var_0, var_1) {
    var var_2 = new cbggg_BitmapFont$BitmapFontData();
    cbggg_BitmapFont$BitmapFontData__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_BitmapFont$BitmapFontData__init_0($this, $fontFile, $flip) {
    jl_Object__init_0($this);
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX = 1.0;
    $this.$scaleY = 1.0;
    $this.$glyphs = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
    $this.$xHeight = 1.0;
    $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
    $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
    $this.$fontFile = $fontFile;
    $this.$flipped0 = $flip;
    $this.$load1($fontFile, $flip);
}
function cbggg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip) {
    var $reader, $line, var$5, $padding, var$7, $padY, $common, var$10, $baseLine, $pageCount, var$13, $p, $matcher, $id, $pageID, $ex, $fileName, $glyph, $tokens, $ch, $first, $second, $amount, $hasMetricsOverride, $overrideAscent, $overrideDescent, $overrideDown, $overrideCapHeight, $overrideLineHeight, $overrideSpaceXAdvance, $overrideXHeight, $spaceGlyph, $xadvanceGlyph, $xGlyph, var$37, $xChar, $capGlyph, $capChar, $page, var$42, var$43, $$je;
    if ($this.$imagePaths !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(426)));
    $this.$name4 = $fontFile.$nameWithoutExtension();
    $reader = ji_BufferedReader__init_(ji_InputStreamReader__init_1($fontFile.$read4()), 512);
    a: {
        b: {
            try {
                $line = $reader.$readLine();
                if ($line === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(427)));
                var$5 = $line.$substring($line.$indexOf1($rt_s(428)) + 8 | 0);
                $padding = (var$5.$substring0(0, var$5.$indexOf2(32))).$split2($rt_s(429), 4);
                var$7 = $padding.data;
                if (var$7.length != 4)
                    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(430)));
                $this.$padTop = jl_Integer_parseInt0(var$7[0]);
                $this.$padRight = jl_Integer_parseInt0(var$7[1]);
                $this.$padBottom = jl_Integer_parseInt0(var$7[2]);
                $this.$padLeft = jl_Integer_parseInt0(var$7[3]);
                $padY = $this.$padTop + $this.$padBottom;
                var$5 = $reader.$readLine();
                if (var$5 === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(431)));
                $common = var$5.$split2($rt_s(38), 9);
                var$7 = $common.data;
                var$10 = var$7.length;
                if (var$10 < 3)
                    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(432)));
                if (!var$7[1].$startsWith0($rt_s(433)))
                    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(434)));
                $this.$lineHeight = jl_Integer_parseInt0(var$7[1].$substring(11));
                if (!var$7[2].$startsWith0($rt_s(435)))
                    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(436)));
                c: {
                    $baseLine = jl_Integer_parseInt0(var$7[2].$substring(5));
                    $pageCount = 1;
                    if (var$10 < 6)
                        var$13 = $pageCount;
                    else if (var$7[5] === null)
                        var$13 = $pageCount;
                    else if (!var$7[5].$startsWith0($rt_s(437)))
                        var$13 = $pageCount;
                    else {
                        try {
                            var$13 = jl_Math_max(1, jl_Integer_parseInt0(var$7[5].$substring(6)));
                            $pageCount = var$13;
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                            } else {
                                throw $$e;
                            }
                        }
                        var$13 = $pageCount;
                    }
                }
                $this.$imagePaths = $rt_createArray(jl_String, var$13);
                $p = 0;
                d: {
                    e: {
                        f: {
                            while (true) {
                                if ($p >= var$13)
                                    break d;
                                var$5 = $reader.$readLine();
                                if (var$5 === null)
                                    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(438)));
                                g: {
                                    $matcher = jur_Pattern_matcher(jur_Pattern_compile($rt_s(439)), var$5);
                                    if (jur_Matcher_find($matcher)) {
                                        $id = jur_Matcher_group($matcher, 1);
                                        try {
                                            $pageID = jl_Integer_parseInt0($id);
                                            if ($pageID != $p)
                                                break f;
                                            break g;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_NumberFormatException) {
                                                $ex = $$je;
                                                break e;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                }
                                var$5 = jur_Pattern_matcher(jur_Pattern_compile($rt_s(440)), var$5);
                                if (!jur_Matcher_find(var$5))
                                    break;
                                $fileName = jur_Matcher_group(var$5, 1);
                                $this.$imagePaths.data[$p] = ((($fontFile.$parent()).$child($fileName)).$path()).$replaceAll0($rt_s(441), $rt_s(46));
                                $p = $p + 1 | 0;
                            }
                            $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(442)));
                        }
                        try {
                            $rt_throw(cbgu_GdxRuntimeException__init_0((((jl_StringBuilder__init_()).$append1($rt_s(443))).$append1($id)).$toString()));
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                                $ex = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    $rt_throw(cbgu_GdxRuntimeException__init_1((((jl_StringBuilder__init_()).$append1($rt_s(444))).$append1($id)).$toString(), $ex));
                }
                $this.$descent = 0.0;
                h: {
                    while (true) {
                        var$5 = $reader.$readLine();
                        if (var$5 === null)
                            break;
                        if (var$5.$startsWith0($rt_s(445)))
                            break h;
                        if (var$5.$startsWith0($rt_s(446)))
                            break h;
                        if (!var$5.$startsWith0($rt_s(447)))
                            continue;
                        $glyph = cbggg_BitmapFont$Glyph__init_();
                        $tokens = ju_StringTokenizer__init_(var$5, $rt_s(448));
                        $tokens.$nextToken();
                        $tokens.$nextToken();
                        $ch = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($ch <= 0)
                            $this.$missingGlyph = $glyph;
                        else {
                            if ($ch > 65535)
                                continue;
                            $this.$setGlyph($ch, $glyph);
                        }
                        $glyph.$id = $ch;
                        $tokens.$nextToken();
                        $glyph.$srcX = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$srcY = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$width = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$height = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$xoffset = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        if ($flip)
                            $glyph.$yoffset = jl_Integer_parseInt0($tokens.$nextToken());
                        else
                            $glyph.$yoffset =  -($glyph.$height + jl_Integer_parseInt0($tokens.$nextToken()) | 0) | 0;
                        $tokens.$nextToken();
                        $glyph.$xadvance = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($tokens.$hasMoreTokens())
                            $tokens.$nextToken();
                        i: {
                            if ($tokens.$hasMoreTokens())
                                try {
                                    $glyph.$page = jl_Integer_parseInt0($tokens.$nextToken());
                                    break i;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_NumberFormatException) {
                                    } else {
                                        throw $$e;
                                    }
                                }
                        }
                        if ($glyph.$width > 0 && $glyph.$height > 0)
                            $this.$descent = jl_Math_min0($baseLine + $glyph.$yoffset, $this.$descent);
                    }
                }
                $this.$descent = $this.$descent + $this.$padBottom;
                j: {
                    while (true) {
                        var$5 = $reader.$readLine();
                        if (var$5 === null)
                            break;
                        if (!var$5.$startsWith0($rt_s(449)))
                            break j;
                        $tokens = ju_StringTokenizer__init_(var$5, $rt_s(448));
                        $tokens.$nextToken();
                        $tokens.$nextToken();
                        $first = jl_Integer_parseInt0($tokens.$nextToken());
                        $tokens.$nextToken();
                        $second = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($first < 0)
                            continue;
                        if ($first > 65535)
                            continue;
                        if ($second < 0)
                            continue;
                        if ($second > 65535)
                            continue;
                        $glyph = $this.$getGlyph($first & 65535);
                        $tokens.$nextToken();
                        $amount = jl_Integer_parseInt0($tokens.$nextToken());
                        if ($glyph !== null)
                            $glyph.$setKerning($second, $amount);
                    }
                }
                $hasMetricsOverride = 0;
                $overrideAscent = 0.0;
                $overrideDescent = 0.0;
                $overrideDown = 0.0;
                $overrideCapHeight = 0.0;
                $overrideLineHeight = 0.0;
                $overrideSpaceXAdvance = 0.0;
                $overrideXHeight = 0.0;
                if (var$5 !== null && var$5.$startsWith0($rt_s(446))) {
                    $hasMetricsOverride = 1;
                    $tokens = ju_StringTokenizer__init_(var$5, $rt_s(448));
                    $tokens.$nextToken();
                    $tokens.$nextToken();
                    $overrideAscent = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideDescent = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideDown = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideCapHeight = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideLineHeight = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideSpaceXAdvance = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideXHeight = jl_Float_parseFloat($tokens.$nextToken());
                }
                $spaceGlyph = $this.$getGlyph(32);
                if ($spaceGlyph === null) {
                    $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
                    $spaceGlyph.$id = 32;
                    $xadvanceGlyph = $this.$getGlyph(108);
                    if ($xadvanceGlyph === null)
                        $xadvanceGlyph = $this.$getFirstGlyph();
                    $spaceGlyph.$xadvance = $xadvanceGlyph.$xadvance;
                    $this.$setGlyph(32, $spaceGlyph);
                }
                if (!$spaceGlyph.$width) {
                    $spaceGlyph.$width = $this.$padLeft + $spaceGlyph.$xadvance + $this.$padRight | 0;
                    $spaceGlyph.$xoffset =  -$this.$padLeft | 0;
                }
                $this.$spaceXadvance = $spaceGlyph.$xadvance;
                $xGlyph = null;
                var$7 = $this.$xChars.data;
                var$10 = var$7.length;
                var$37 = 0;
                k: {
                    while (var$37 < var$10) {
                        $xChar = var$7[var$37];
                        $xGlyph = $this.$getGlyph($xChar);
                        if ($xGlyph !== null)
                            break k;
                        var$37 = var$37 + 1 | 0;
                    }
                }
                if ($xGlyph === null)
                    $xGlyph = $this.$getFirstGlyph();
                $this.$xHeight = $xGlyph.$height - $padY;
                $capGlyph = null;
                var$7 = $this.$capChars.data;
                var$13 = var$7.length;
                var$10 = 0;
                l: {
                    while (var$10 < var$13) {
                        $capChar = var$7[var$10];
                        $capGlyph = $this.$getGlyph($capChar);
                        if ($capGlyph !== null)
                            break l;
                        var$10 = var$10 + 1 | 0;
                    }
                }
                if ($capGlyph !== null)
                    $this.$capHeight = $capGlyph.$height;
                else {
                    var$7 = $this.$glyphs.data;
                    var$13 = var$7.length;
                    var$10 = 0;
                    while (var$10 < var$13) {
                        m: {
                            $page = var$7[var$10];
                            if ($page !== null) {
                                var$42 = $page.data;
                                var$37 = var$42.length;
                                var$43 = 0;
                                while (true) {
                                    if (var$43 >= var$37)
                                        break m;
                                    $glyph = var$42[var$43];
                                    if ($glyph !== null && $glyph.$height && $glyph.$width)
                                        $this.$capHeight = jl_Math_max0($this.$capHeight, $glyph.$height);
                                    var$43 = var$43 + 1 | 0;
                                }
                            }
                        }
                        var$10 = var$10 + 1 | 0;
                    }
                }
                $this.$capHeight = $this.$capHeight - $padY;
                $this.$ascent = $baseLine - $this.$capHeight;
                $this.$down =  -$this.$lineHeight;
                if ($flip) {
                    $this.$ascent =  -$this.$ascent;
                    $this.$down =  -$this.$down;
                }
                if ($hasMetricsOverride) {
                    $this.$ascent = $overrideAscent;
                    $this.$descent = $overrideDescent;
                    $this.$down = $overrideDown;
                    $this.$capHeight = $overrideCapHeight;
                    $this.$lineHeight = $overrideLineHeight;
                    $this.$spaceXadvance = $overrideSpaceXAdvance;
                    $this.$xHeight = $overrideXHeight;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break b;
                } else{
                    var$5 = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly($reader);
            return;
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_1((((jl_StringBuilder__init_()).$append1($rt_s(450))).$append($fontFile)).$toString(), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($reader);
    $rt_throw(var$5);
}
function cbggg_BitmapFont$BitmapFontData_setGlyphRegion($this, $glyph, $region) {
    var $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, $x, $x2, $y, $y2, var$17, $amount;
    $texture = $region.$getTexture();
    $invTexWidth = 1.0 / $texture.$getWidth();
    $invTexHeight = 1.0 / $texture.$getHeight();
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u0;
    $v = $region.$v0;
    $regionWidth = $region.$getRegionWidth();
    $regionHeight = $region.$getRegionHeight();
    if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX;
        $offsetY = ($atlasRegion.$originalHeight - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY;
    }
    $x = $glyph.$srcX;
    $x2 = $glyph.$srcX + $glyph.$width | 0;
    $y = $glyph.$srcY;
    $y2 = $glyph.$srcY + $glyph.$height | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width = $glyph.$width + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        var$17 = $x2 - $offsetX;
        if (var$17 <= $regionWidth)
            $regionWidth = var$17;
        else
            $glyph.$width = $glyph.$width - (var$17 - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            $glyph.$height = $glyph.$height + $y | 0;
            if ($glyph.$height < 0)
                $glyph.$height = 0;
            $y = 0.0;
        }
        var$17 = $y2 - $offsetY;
        if (var$17 <= $regionHeight)
            $regionHeight = var$17;
        else {
            $amount = var$17 - $regionHeight;
            $glyph.$height = $glyph.$height - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u = $u + $x * $invTexWidth;
    $glyph.$u2 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped0) {
        $glyph.$v2 = $v + $y * $invTexHeight;
        $glyph.$v = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v = $v + $y * $invTexHeight;
        $glyph.$v2 = $v + $regionHeight * $invTexHeight;
    }
}
function cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph) {
    var var$3, var$4, $page;
    var$3 = $this.$glyphs.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$glyphs.data;
        $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
}
function cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this) {
    var var$1, var$2, var$3, $page, var$5, var$6, var$7, $glyph;
    var$1 = $this.$glyphs.data;
    var$2 = var$1.length;
    var$3 = 0;
    a: while (true) {
        if (var$3 >= var$2)
            $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(451)));
        b: {
            $page = var$1[var$3];
            if ($page !== null) {
                var$5 = $page.data;
                var$6 = var$5.length;
                var$7 = 0;
                while (true) {
                    if (var$7 >= var$6)
                        break b;
                    $glyph = var$5[var$7];
                    if ($glyph !== null && $glyph.$height && $glyph.$width)
                        break a;
                    var$7 = var$7 + 1 | 0;
                }
            }
        }
        var$3 = var$3 + 1 | 0;
    }
    return $glyph;
}
function cbggg_BitmapFont$BitmapFontData_getGlyph($this, $ch) {
    var $page;
    $page = $this.$glyphs.data[$ch / 512 | 0];
    if ($page === null)
        return null;
    return $page.data[$ch & 511];
}
function cbggg_BitmapFont$BitmapFontData_getGlyphs($this, $run, $str, $start, $end, $lastGlyph) {
    var $max, $markupEnabled, $scaleX, $glyphs, $xAdvances, var$11, $ch, $glyph, $lastGlyphWidth;
    $max = $end - $start | 0;
    if (!$max)
        return;
    $markupEnabled = $this.$markupEnabled;
    $scaleX = $this.$scaleX;
    $glyphs = $run.$glyphs0;
    $xAdvances = $run.$xAdvances;
    $glyphs.$ensureCapacity1($max);
    $run.$xAdvances.$ensureCapacity2($max + 1 | 0);
    while (true) {
        a: {
            var$11 = $start + 1 | 0;
            $ch = $str.$charAt($start);
            if ($ch != 13) {
                $glyph = $this.$getGlyph($ch);
                if ($glyph === null) {
                    if ($this.$missingGlyph === null)
                        break a;
                    $glyph = $this.$missingGlyph;
                }
                $glyphs.$add3($glyph);
                $xAdvances.$add6($lastGlyph !== null ? ($lastGlyph.$xadvance + $lastGlyph.$getKerning($ch) | 0) * $scaleX : $glyph.$fixedWidth ? 0.0 : ( -$glyph.$xoffset | 0) * $scaleX - $this.$padLeft);
                if (!$markupEnabled)
                    $lastGlyph = $glyph;
                else if ($ch != 91)
                    $lastGlyph = $glyph;
                else if (var$11 >= $end)
                    $lastGlyph = $glyph;
                else if ($str.$charAt(var$11) != 91)
                    $lastGlyph = $glyph;
                else {
                    var$11 = var$11 + 1 | 0;
                    $lastGlyph = $glyph;
                }
            }
        }
        if (var$11 >= $end)
            break;
        $start = var$11;
    }
    if ($lastGlyph !== null) {
        $lastGlyphWidth = $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight;
        $xAdvances.$add6($lastGlyphWidth);
    }
}
function cbggg_BitmapFont$BitmapFontData_getWrapIndex($this, $glyphs, $start) {
    var $i, $glyphsItems, var$5, $ch, var$7;
    $i = $start - 1 | 0;
    $glyphsItems = $glyphs.$items;
    var$5 = $glyphsItems.data;
    $ch = var$5[$i].$id & 65535;
    if ($this.$isWhitespace($ch))
        return $i;
    if ($this.$isBreakChar($ch))
        $i = $i + (-1) | 0;
    a: {
        while ($i > 0) {
            var$7 = var$5[$i].$id & 65535;
            if ($this.$isWhitespace(var$7))
                break a;
            if ($this.$isBreakChar(var$7))
                break a;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
}
function cbggg_BitmapFont$BitmapFontData_isBreakChar($this, $c) {
    var var$2, var$3, var$4, $br;
    if ($this.$breakChars === null)
        return 0;
    var$2 = $this.$breakChars.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $br = var$2[var$4];
        if ($c == $br)
            return 1;
        var$4 = var$4 + 1 | 0;
    }
    return 0;
}
function cbggg_BitmapFont$BitmapFontData_isWhitespace($this, $c) {
    switch ($c) {
        case 9:
        case 10:
        case 13:
        case 32:
            break;
        default:
            return 0;
    }
    return 1;
}
var cbgggpv_RectangleSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
function jur_AbstractCharClass$LazyRange() {
    var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start8 = 0;
    a.$end3 = 0;
}
function jur_AbstractCharClass$LazyRange__init_(var_0, var_1) {
    var var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_AbstractCharClass$LazyRange__init_0($this, $start, $end) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$start8 = $start;
    $this.$end3 = $end;
}
function jur_AbstractCharClass$LazyRange_computeValue($this) {
    var $chCl;
    $chCl = (jur_CharClass__init_()).$add0($this.$start8, $this.$end3);
    return $chCl;
}
var jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_AltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltQuantifierSet();
    jur_AltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    return $shift;
}
function jur_AltQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
var cbgm_Interpolation$ExpIn = $rt_classWithoutFields(cbgm_Interpolation$Exp);
function cbgm_Interpolation$ExpIn__init_(var_0, var_1) {
    var var_2 = new cbgm_Interpolation$ExpIn();
    cbgm_Interpolation$ExpIn__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Interpolation$ExpIn__init_0($this, $value, $power) {
    cbgm_Interpolation$Exp__init_0($this, $value, $power);
}
var cbgssu_DragScrollListener = $rt_classWithoutFields(cbgssu_DragListener);
var cbgssu_DragScrollListener_tmpCoords = null;
function cbgssu_DragScrollListener_$callClinit() {
    cbgssu_DragScrollListener_$callClinit = $rt_eraseClinit(cbgssu_DragScrollListener);
    cbgssu_DragScrollListener__clinit_();
}
function cbgssu_DragScrollListener__clinit_() {
    cbgssu_DragScrollListener_tmpCoords = cbgm_Vector2__init_();
}
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$023 = null;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLowerCase$1();
    jur_AbstractCharClass$LazyJavaLowerCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLowerCase$1__init_0($this, $this$0) {
    $this.$this$023 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLowerCase$1_contains($this, $ch) {
    return jl_Character_isLowerCase($ch);
}
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_00 = null;
}
function jl_Object$monitorExit$lambda$_8_0__init_(var_0) {
    var var_1 = new jl_Object$monitorExit$lambda$_8_0();
    jl_Object$monitorExit$lambda$_8_0__init_0(var_1, var_0);
    return var_1;
}
function jl_Object$monitorExit$lambda$_8_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_00 = var$1;
}
function jl_Object$monitorExit$lambda$_8_0_run(var$0) {
    jl_Object_lambda$monitorExit$2(var$0.$_00);
}
function cgtr_Jsf32Random() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA2 = 0;
    a.$stateB2 = 0;
    a.$stateC0 = 0;
    a.$stateD = 0;
}
function cgtr_Jsf32Random__init_() {
    var var_0 = new cgtr_Jsf32Random();
    cgtr_Jsf32Random__init_0(var_0);
    return var_0;
}
function cgtr_Jsf32Random__init_1(var_0) {
    var var_1 = new cgtr_Jsf32Random();
    cgtr_Jsf32Random__init_2(var_1, var_0);
    return var_1;
}
function cgtr_Jsf32Random__init_0($this) {
    cgtr_Jsf32Random__init_2($this, Long_fromInt(Long_lo((cgtr_EnhancedRandom_seedFromMath()))));
}
function cgtr_Jsf32Random__init_2($this, $seed) {
    cgtr_EnhancedRandom__init_0($this, $seed);
    $this.$setSeed($seed);
}
function cgtr_Jsf32Random_setSeed($this, $seed) {
    var $y, $i, var$4;
    $this.$stateA2 = (-236298515);
    $y = Long_lo($seed);
    if (Long_eq($seed, Long_fromInt($y))) {
        $this.$stateD = $y;
        $this.$stateC0 = $y;
        $this.$stateB2 = $y;
        $i = 0;
        while ($i < 20) {
            $this.$nextInt();
            $i = $i + 1 | 0;
        }
        return;
    }
    var$4 = Long_xor($seed, Long_shru($seed, 27));
    var$4 = Long_mul(var$4, Long_create(732411475, 1014606921));
    var$4 = Long_xor(var$4, Long_shru(var$4, 33));
    var$4 = Long_mul(var$4, Long_create(1254403637, 476689399));
    $this.$stateB2 = Long_lo(Long_xor(var$4, Long_shru(var$4, 27)));
    var$4 = Long_add($seed, Long_create(2135587861, 2654435769));
    var$4 = Long_xor(var$4, Long_shru(var$4, 27));
    var$4 = Long_mul(var$4, Long_create(732411475, 1014606921));
    var$4 = Long_xor(var$4, Long_shru(var$4, 33));
    var$4 = Long_mul(var$4, Long_create(1254403637, 476689399));
    var$4 = Long_xor(var$4, Long_shru(var$4, 27));
    $this.$stateC0 = Long_lo(var$4);
    $this.$stateD = Long_hi(var$4);
}
function cgtr_Jsf32Random_nextLong($this) {
    var $e, var$2, var$3;
    $e = $this.$stateA2 - ($this.$stateB2 << 27 | ($this.$stateB2 >>> 5 | 0)) | 0;
    $this.$stateA2 = $this.$stateB2 ^ ($this.$stateC0 << 17 | ($this.$stateC0 >>> 15 | 0));
    $this.$stateB2 = $this.$stateC0 + $this.$stateD | 0;
    $this.$stateC0 = $this.$stateD + $e | 0;
    var$2 = $e + $this.$stateA2 | 0;
    $this.$stateD = var$2;
    var$3 = $this.$stateA2 - ($this.$stateB2 << 27 | ($this.$stateB2 >>> 5 | 0)) | 0;
    $this.$stateA2 = $this.$stateB2 ^ ($this.$stateC0 << 17 | ($this.$stateC0 >>> 15 | 0));
    $this.$stateB2 = $this.$stateC0 + $this.$stateD | 0;
    $this.$stateC0 = $this.$stateD + var$3 | 0;
    var$3 = var$3 + $this.$stateA2 | 0;
    $this.$stateD = var$3;
    return Long_xor(Long_shl(Long_fromInt(var$2), 32), Long_and(Long_fromInt(var$3), Long_create(4294967295, 0)));
}
function cgtr_Jsf32Random_next($this, $bits) {
    var $e, var$3;
    $e = $this.$stateA2 - ($this.$stateB2 << 27 | ($this.$stateB2 >>> 5 | 0)) | 0;
    $this.$stateA2 = $this.$stateB2 ^ ($this.$stateC0 << 17 | ($this.$stateC0 >>> 15 | 0));
    $this.$stateB2 = $this.$stateC0 + $this.$stateD | 0;
    $this.$stateC0 = $this.$stateD + $e | 0;
    var$3 = $e + $this.$stateA2 | 0;
    $this.$stateD = var$3;
    return var$3 >>> (32 - $bits | 0) | 0;
}
function cgtr_Jsf32Random_nextInt($this) {
    var $e, var$2;
    $e = $this.$stateA2 - ($this.$stateB2 << 27 | ($this.$stateB2 >>> 5 | 0)) | 0;
    $this.$stateA2 = $this.$stateB2 ^ ($this.$stateC0 << 17 | ($this.$stateC0 >>> 15 | 0));
    $this.$stateB2 = $this.$stateC0 + $this.$stateD | 0;
    $this.$stateC0 = $this.$stateD + $e | 0;
    var$2 = $e + $this.$stateA2 | 0;
    $this.$stateD = var$2;
    return var$2;
}
function cgtr_Jsf32Random_nextFloat($this) {
    return ($this.$nextInt() >>> 8 | 0) * 5.960464477539063E-8;
}
var cgxgbts_SoundManagerCallback = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication$4$1() {
    var a = this; jl_Object.call(a);
    a.$val$soundManager = null;
    a.$this$11 = null;
}
function cgxgbt_TeaApplication$4$1__init_(var_0, var_1) {
    var var_2 = new cgxgbt_TeaApplication$4$1();
    cgxgbt_TeaApplication$4$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbt_TeaApplication$4$1__init_0($this, $this$1, var$2) {
    $this.$this$11 = $this$1;
    $this.$val$soundManager = var$2;
    jl_Object__init_0($this);
}
function cgxgbt_TeaApplication$4$1_onready($this) {
    $this.$this$11.$this$024.$audio = cgxgbt_TeaAudio__init_($this.$val$soundManager);
    cbg_Gdx_audio = $this.$this$11.$this$024.$audio;
}
function cgxgbt_TeaApplication$4$1_ontimeout($this) {}
function cgxgbt_TeaApplication$4$1_onready$exported$0(var$0) {
    var$0.$onready();
}
function cgxgbt_TeaApplication$4$1_ontimeout$exported$1(var$0) {
    var$0.$ontimeout();
}
var jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet);
function jur_UCISupplRangeSet__init_(var_0) {
    var var_1 = new jur_UCISupplRangeSet();
    jur_UCISupplRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCISupplRangeSet__init_0($this, $cc) {
    jur_SupplRangeSet__init_0($this, $cc);
}
function jur_UCISupplRangeSet_contains($this, $ch) {
    return $this.$chars0.$contains0(jl_Character_toLowerCase(jl_Character_toUpperCase($ch)));
}
function jur_UCISupplRangeSet_getName($this) {
    var var$1, var$2, var$3;
    var$1 = !$this.$alt1 ? $rt_s(38) : $rt_s(39);
    var$2 = $this.$chars0.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(452)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
}
var cbgu_Clipboard = $rt_classWithoutFields(0);
var cbgssu_FocusListener$FocusEvent$Type = $rt_classWithoutFields(jl_Enum);
var cbgssu_FocusListener$FocusEvent$Type_keyboard = null;
var cbgssu_FocusListener$FocusEvent$Type_scroll = null;
var cbgssu_FocusListener$FocusEvent$Type_$VALUES = null;
function cbgssu_FocusListener$FocusEvent$Type_$callClinit() {
    cbgssu_FocusListener$FocusEvent$Type_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$FocusEvent$Type);
    cbgssu_FocusListener$FocusEvent$Type__clinit_();
}
function cbgssu_FocusListener$FocusEvent$Type__init_(var_0, var_1) {
    var var_2 = new cbgssu_FocusListener$FocusEvent$Type();
    cbgssu_FocusListener$FocusEvent$Type__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgssu_FocusListener$FocusEvent$Type_values() {
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    return cbgssu_FocusListener$FocusEvent$Type_$VALUES.$clone();
}
function cbgssu_FocusListener$FocusEvent$Type__init_0($this, var$1, var$2) {
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgssu_FocusListener$FocusEvent$Type__clinit_() {
    cbgssu_FocusListener$FocusEvent$Type_keyboard = cbgssu_FocusListener$FocusEvent$Type__init_($rt_s(453), 0);
    cbgssu_FocusListener$FocusEvent$Type_scroll = cbgssu_FocusListener$FocusEvent$Type__init_($rt_s(454), 1);
    cbgssu_FocusListener$FocusEvent$Type_$VALUES = $rt_createArrayFromData(cbgssu_FocusListener$FocusEvent$Type, [cbgssu_FocusListener$FocusEvent$Type_keyboard, cbgssu_FocusListener$FocusEvent$Type_scroll]);
}
var jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyPunct__init_() {
    var var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyPunct__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyPunct_computeValue($this) {
    return (((jur_CharClass__init_()).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
}
function cbggg_VertexBufferObjectWithVAO() {
    var a = this; jl_Object.call(a);
    a.$attributes1 = null;
    a.$buffer6 = null;
    a.$bufferHandle2 = 0;
    a.$isStatic1 = 0;
    a.$usage3 = 0;
    a.$isDirty2 = 0;
    a.$isBound2 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
var cbggg_VertexBufferObjectWithVAO_tmpHandle = null;
function cbggg_VertexBufferObjectWithVAO_$callClinit() {
    cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
    cbggg_VertexBufferObjectWithVAO__clinit_();
}
function cbggg_VertexBufferObjectWithVAO__init_(var_0, var_1, var_2) {
    var var_3 = new cbggg_VertexBufferObjectWithVAO();
    cbggg_VertexBufferObjectWithVAO__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_VertexBufferObjectWithVAO__init_0($this, $isStatic, $numVertices, $attributes) {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    jl_Object__init_0($this);
    $this.$isDirty2 = 0;
    $this.$isBound2 = 0;
    $this.$vaoHandle = (-1);
    $this.$cachedLocations = cbgu_IntArray__init_();
    $this.$isStatic1 = $isStatic;
    $this.$attributes1 = $attributes;
    $this.$buffer6 = cbgu_BufferUtils_newFloatBuffer($rt_imul($this.$attributes1.$vertexSize / 4 | 0, $numVertices));
    jn_FloatBuffer_flip($this.$buffer6);
    $this.$bufferHandle2 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage3 = !$isStatic ? 35048 : 35044;
    cbggg_VertexBufferObjectWithVAO_createVAO($this);
}
function cbggg_VertexBufferObjectWithVAO_getAttributes($this) {
    return $this.$attributes1;
}
function cbggg_VertexBufferObjectWithVAO_getNumVertices($this) {
    return (jn_Buffer_limit($this.$buffer6) * 4 | 0) / $this.$attributes1.$vertexSize | 0;
}
function cbggg_VertexBufferObjectWithVAO_bufferChanged($this) {
    if ($this.$isBound2) {
        cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer6), $this.$buffer6, $this.$usage3);
        $this.$isDirty2 = 0;
    }
}
function cbggg_VertexBufferObjectWithVAO_setVertices($this, $vertices, $offset, $count) {
    $this.$isDirty2 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer6, $count, $offset);
    $this.$buffer6.$position4(0);
    $this.$buffer6.$limit1($count);
    cbggg_VertexBufferObjectWithVAO_bufferChanged($this);
}
function cbggg_VertexBufferObjectWithVAO_bind($this, $shader, $locations) {
    var $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations);
    cbggg_VertexBufferObjectWithVAO_bindData($this, $gl);
    $this.$isBound2 = 1;
}
function cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations) {
    var $stillValid, $numAttributes, $i, $attribute, $location, var$8;
    $stillValid = !$this.$cachedLocations.$size1 ? 0 : 1;
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes1);
        if ($stillValid) {
            if ($locations === null) {
                $i = 0;
                while ($stillValid && $i < $numAttributes) {
                    $attribute = cbgg_VertexAttributes_get($this.$attributes1, $i);
                    $location = $shader.$getAttributeLocation($attribute.$alias);
                    $stillValid = $location != $this.$cachedLocations.$get11($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            } else {
                var$8 = $locations.data;
                $stillValid = var$8.length != $this.$cachedLocations.$size1 ? 0 : 1;
                $i = 0;
                while ($stillValid) {
                    if ($i >= $numAttributes)
                        break a;
                    $stillValid = var$8[$i] != $this.$cachedLocations.$get11($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    b: {
        if (!$stillValid) {
            cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle2);
            cbggg_VertexBufferObjectWithVAO_unbindAttributes($this, $shader);
            $this.$cachedLocations.$clear8();
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break b;
                $attribute = cbgg_VertexAttributes_get($this.$attributes1, $i);
                if ($locations !== null) {
                    var$8 = $locations.data;
                    $this.$cachedLocations.$add5(var$8[$i]);
                } else
                    $this.$cachedLocations.$add5($shader.$getAttributeLocation($attribute.$alias));
                $location = $this.$cachedLocations.$get11($i);
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type1, $attribute.$normalized, $this.$attributes1.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_VertexBufferObjectWithVAO_unbindAttributes($this, $shaderProgram) {
    var $numAttributes, $i, $location;
    if (!$this.$cachedLocations.$size1)
        return;
    $numAttributes = cbgg_VertexAttributes_size($this.$attributes1);
    $i = 0;
    while ($i < $numAttributes) {
        $location = $this.$cachedLocations.$get11($i);
        if ($location >= 0)
            $shaderProgram.$disableVertexAttribute0($location);
        $i = $i + 1 | 0;
    }
}
function cbggg_VertexBufferObjectWithVAO_bindData($this, $gl) {
    if ($this.$isDirty2) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle2);
        $this.$buffer6.$limit1(jn_Buffer_limit($this.$buffer6));
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer6), $this.$buffer6, $this.$usage3);
        $this.$isDirty2 = 0;
    }
}
function cbggg_VertexBufferObjectWithVAO_unbind($this, $shader, $locations) {
    var $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray(0);
    $this.$isBound2 = 0;
}
function cbggg_VertexBufferObjectWithVAO_createVAO($this) {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    jn_IntBuffer_clear(cbggg_VertexBufferObjectWithVAO_tmpHandle);
    cbg_Gdx_gl30.$glGenVertexArrays(1, cbggg_VertexBufferObjectWithVAO_tmpHandle);
    $this.$vaoHandle = cbggg_VertexBufferObjectWithVAO_tmpHandle.$get13();
}
function cbggg_VertexBufferObjectWithVAO__clinit_() {
    cbggg_VertexBufferObjectWithVAO_tmpHandle = cbgu_BufferUtils_newIntBuffer(1);
}
var otcic_Console = $rt_classWithoutFields();
function otcic_Console_writeStderr($data, $off, $len) {
    var $i, $b;
    $i = 0;
    while ($i < $len) {
        $b = $data.data[$i + $off | 0];
        $rt_putStderr($b & 255);
        $i = $i + 1 | 0;
    }
}
function otcic_Console_writeStdout($data, $off, $len) {
    var $i, $b;
    $i = 0;
    while ($i < $len) {
        $b = $data.data[$i + $off | 0];
        $rt_putStdout($b & 255);
        $i = $i + 1 | 0;
    }
}
var cbgssa_FloatAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssu_HorizontalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgg_GL20 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL20() {
    var a = this; jl_Object.call(a);
    a.$gl0 = null;
    a.$programs = null;
    a.$nextProgramId = 0;
    a.$shaders = null;
    a.$nextShaderId = 0;
    a.$buffers = null;
    a.$nextBufferId = 0;
    a.$frameBuffers = null;
    a.$nextFrameBufferId = 0;
    a.$renderBuffers = null;
    a.$nextRenderBufferId = 0;
    a.$textures = null;
    a.$nextTextureId = 0;
    a.$uniforms = null;
    a.$nextUniformId = 0;
    a.$currProgram = 0;
    a.$floatBuffer = null;
    a.$intBuffer = null;
    a.$shortBuffer = null;
    a.$byteBuffer1 = null;
}
function cgxgbt_TeaGL20__init_(var_0) {
    var var_1 = new cgxgbt_TeaGL20();
    cgxgbt_TeaGL20__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaGL20__init_0($this, $gl) {
    jl_Object__init_0($this);
    $this.$programs = ju_HashMap__init_();
    $this.$nextProgramId = 1;
    $this.$shaders = ju_HashMap__init_();
    $this.$nextShaderId = 1;
    $this.$buffers = ju_HashMap__init_();
    $this.$nextBufferId = 1;
    $this.$frameBuffers = ju_HashMap__init_();
    $this.$nextFrameBufferId = 1;
    $this.$renderBuffers = ju_HashMap__init_();
    $this.$nextRenderBufferId = 1;
    $this.$textures = ju_HashMap__init_();
    $this.$nextTextureId = 1;
    $this.$uniforms = ju_HashMap__init_();
    $this.$nextUniformId = 1;
    $this.$currProgram = 0;
    $this.$gl0 = $gl;
    $this.$floatBuffer = (cgxgbtdt_TypedArrays_getInstance()).$createFloat32Array(40000);
    $this.$shortBuffer = (cgxgbtdt_TypedArrays_getInstance()).$createInt16Array(12000);
    $this.$intBuffer = (cgxgbtdt_TypedArrays_getInstance()).$createInt32Array(12000);
    $this.$byteBuffer1 = (cgxgbtdt_TypedArrays_getInstance()).$createUint8Array(240000);
    $this.$gl0.pixelStorei(37441, 0);
}
function cgxgbt_TeaGL20_ensureCapacity($this, $buffer) {
    if (jn_Buffer_remaining($buffer) > $this.$floatBuffer.length)
        $this.$floatBuffer = (cgxgbtdt_TypedArrays_getInstance()).$createFloat32Array(jn_Buffer_remaining($buffer));
}
function cgxgbt_TeaGL20_ensureCapacity0($this, $buffer) {
    if (jn_Buffer_remaining($buffer) > $this.$shortBuffer.length)
        $this.$shortBuffer = (cgxgbtdt_TypedArrays_getInstance()).$createInt16Array(jn_Buffer_remaining($buffer));
}
function cgxgbt_TeaGL20_ensureCapacity1($this, $buffer) {
    if (jn_Buffer_remaining($buffer) > $this.$intBuffer.length)
        $this.$intBuffer = (cgxgbtdt_TypedArrays_getInstance()).$createInt32Array(jn_Buffer_remaining($buffer));
}
function cgxgbt_TeaGL20_ensureCapacity2($this, $buffer) {
    if (jn_Buffer_remaining($buffer) > $this.$byteBuffer1.length)
        $this.$byteBuffer1 = (cgxgbtdt_TypedArrays_getInstance()).$createUint8Array(jn_Buffer_remaining($buffer));
}
function cgxgbt_TeaGL20_copy($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    cgxgbt_TeaGL20_ensureCapacity($this, $buffer);
    $i = jn_Buffer_position($buffer);
    $j = 0;
    while ($i < jn_Buffer_limit($buffer)) {
        var$4 = $this.$floatBuffer;
        var$5 = $buffer.$get4($i);
        var$4[$j] = var$5;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$4 = $this.$floatBuffer;
    var$6 = jn_Buffer_remaining($buffer);
    return var$4.subarray(0, var$6);
}
function cgxgbt_TeaGL20_copy0($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    cgxgbt_TeaGL20_ensureCapacity0($this, $buffer);
    $i = jn_Buffer_position($buffer);
    $j = 0;
    while ($i < jn_Buffer_limit($buffer)) {
        var$4 = $this.$shortBuffer;
        var$5 = $buffer.$get14($i);
        var$4[$j] = var$5;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$4 = $this.$shortBuffer;
    var$6 = jn_Buffer_remaining($buffer);
    return var$4.subarray(0, var$6);
}
function cgxgbt_TeaGL20_copy1($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    cgxgbt_TeaGL20_ensureCapacity1($this, $buffer);
    $i = jn_Buffer_position($buffer);
    $j = 0;
    while ($i < jn_Buffer_limit($buffer)) {
        var$4 = $this.$intBuffer;
        var$5 = $buffer.$get11($i);
        var$4[$j] = var$5;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$4 = $this.$intBuffer;
    var$6 = jn_Buffer_remaining($buffer);
    return var$4.subarray(0, var$6);
}
function cgxgbt_TeaGL20_copy2($this, $buffer) {
    var $i, $j, var$4, var$5, var$6;
    cgxgbt_TeaGL20_ensureCapacity2($this, $buffer);
    $i = jn_Buffer_position($buffer);
    $j = 0;
    while ($i < jn_Buffer_limit($buffer)) {
        var$4 = $this.$byteBuffer1;
        var$5 = $buffer.$get7($i);
        var$4[$j] = var$5;
        $i = $i + 1 | 0;
        $j = $j + 1 | 0;
    }
    var$4 = $this.$byteBuffer1;
    var$6 = jn_Buffer_remaining($buffer);
    return var$4.subarray(0, var$6);
}
function cgxgbt_TeaGL20_allocateUniformLocationId($this, $program, $location) {
    var $progUniforms, var$4;
    $progUniforms = $this.$uniforms.$get0(jl_Integer_valueOf($program));
    if ($progUniforms === null) {
        $progUniforms = ju_HashMap__init_();
        $this.$uniforms.$put1(jl_Integer_valueOf($program), $progUniforms);
    }
    var$4 = $this.$nextUniformId;
    $this.$nextUniformId = var$4 + 1 | 0;
    $progUniforms.$put1(jl_Integer_valueOf(var$4), $location);
    return var$4;
}
function cgxgbt_TeaGL20_getUniformLocation($this, $location) {
    return ($this.$uniforms.$get0(jl_Integer_valueOf($this.$currProgram))).$get0(jl_Integer_valueOf($location));
}
function cgxgbt_TeaGL20_allocateShaderId($this, $shader) {
    var var$2;
    var$2 = $this.$nextShaderId;
    $this.$nextShaderId = var$2 + 1 | 0;
    $this.$shaders.$put1(jl_Integer_valueOf(var$2), $shader);
    return var$2;
}
function cgxgbt_TeaGL20_allocateProgramId($this, $program) {
    var var$2;
    var$2 = $this.$nextProgramId;
    $this.$nextProgramId = var$2 + 1 | 0;
    $this.$programs.$put1(jl_Integer_valueOf(var$2), $program);
    return var$2;
}
function cgxgbt_TeaGL20_allocateBufferId($this, $buffer) {
    var var$2;
    var$2 = $this.$nextBufferId;
    $this.$nextBufferId = var$2 + 1 | 0;
    $this.$buffers.$put1(jl_Integer_valueOf(var$2), $buffer);
    return var$2;
}
function cgxgbt_TeaGL20_allocateTextureId($this, $texture) {
    var var$2;
    var$2 = $this.$nextTextureId;
    $this.$nextTextureId = var$2 + 1 | 0;
    $this.$textures.$put1(jl_Integer_valueOf(var$2), $texture);
    return var$2;
}
function cgxgbt_TeaGL20_glBindTexture($this, $target, $texture) {
    var var$3, var$4;
    var$3 = $this.$gl0;
    var$4 = $this.$textures.$get0(jl_Integer_valueOf($texture));
    var$3.bindTexture($target, var$4);
}
function cgxgbt_TeaGL20_glClear($this, $mask) {
    $this.$gl0.clear($mask);
}
function cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha) {
    $this.$gl0.clearColor($red, $green, $blue, $alpha);
}
function cgxgbt_TeaGL20_glDepthMask($this, $flag) {
    $this.$gl0.depthMask(!!$flag);
}
function cgxgbt_TeaGL20_glDisable($this, $cap) {
    $this.$gl0.disable($cap);
}
function cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count) {
    $this.$gl0.drawArrays($mode, $first, $count);
}
function cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices) {
    var var$5, var$6;
    var$5 = $this.$gl0;
    var$6 = jn_Buffer_position($indices);
    var$5.drawElements($mode, $count, $type, var$6);
}
function cgxgbt_TeaGL20_glEnable($this, $cap) {
    $this.$gl0.enable($cap);
}
function cgxgbt_TeaGL20_glGenTexture($this) {
    var $texture;
    $texture = $this.$gl0.createTexture();
    return cgxgbt_TeaGL20_allocateTextureId($this, $texture);
}
function cgxgbt_TeaGL20_glGetString($this, $name) {
    return $rt_str($this.$gl0.getParameter($name));
}
function cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param) {
    $this.$gl0.pixelStorei($pname, $param);
}
function cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    var var$10, var$11, $buffer, $index, $pixmap, var$15, var$16, var$17, var$18;
    if ($pixels === null) {
        var$10 = $this.$gl0;
        var$11 = null;
        var$10.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$11);
    } else if (jn_Buffer_limit($pixels) > 4) {
        $buffer = !($pixels instanceof jn_FloatBuffer) ? $this.$copy0($pixels) : $this.$copy1($pixels);
        $this.$gl0.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $buffer);
    } else {
        $index = $pixels.$getInt(0);
        cbgg_Pixmap_$callClinit();
        $pixmap = cbgg_Pixmap_pixmaps.$get0(jl_Integer_valueOf($index));
        if ($pixmap.$canUsePixmapData()) {
            var$15 = $this.$gl0;
            var$16 = $pixmap.$getPixmapData();
            var$15.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$16);
        } else if ($pixmap.$canUseImageElement()) {
            var$17 = $this.$gl0;
            var$10 = $pixmap.$getImageElement();
            var$17.texImage2D($target, $level, $internalformat, $format, $type, var$10);
        } else if (!$pixmap.$canUseVideoElement()) {
            var$17 = $this.$gl0;
            var$10 = $pixmap.$getCanvasElement();
            var$17.texImage2D($target, $level, $internalformat, $format, $type, var$10);
        } else {
            var$18 = $this.$gl0;
            var$15 = $pixmap.$getVideoElement();
            var$18.texImage2D($target, $level, $internalformat, $format, $type, var$15);
        }
    }
}
function cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param) {
    $this.$gl0.texParameterf($target, $pname, $param);
}
function cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height) {
    $this.$gl0.viewport($x, $y, $width, $height);
}
function cgxgbt_TeaGL20_glAttachShader($this, $program, $shader) {
    var $glProgram, $glShader;
    $glProgram = $this.$programs.$get0(jl_Integer_valueOf($program));
    $glShader = $this.$shaders.$get0(jl_Integer_valueOf($shader));
    $this.$gl0.attachShader($glProgram, $glShader);
}
function cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer) {
    var var$3, var$4;
    var$3 = $this.$gl0;
    var$4 = $this.$buffers.$get0(jl_Integer_valueOf($buffer));
    var$3.bindBuffer($target, var$4);
}
function cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
    $this.$gl0.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
}
function cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage) {
    var var$5, var$6, var$7;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl0;
        var$6 = $this.$copy1($data);
        var$5.bufferData($target, var$6, $usage);
    } else if ($data instanceof jn_ShortBuffer) {
        var$5 = $this.$gl0;
        var$6 = $this.$copy2($data);
        var$5.bufferData($target, var$6, $usage);
    } else if ($data instanceof jn_IntBuffer) {
        var$6 = $this.$gl0;
        var$7 = $this.$copy3($data);
        var$6.bufferData($target, var$7, $usage);
    } else if ($data instanceof jn_ByteBuffer) {
        var$5 = $this.$gl0;
        var$6 = $this.$copy0($data);
        var$5.bufferData($target, var$6, $usage);
    } else {
        if ($data !== null)
            $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(455)));
        $this.$gl0.bufferData($target, $size, $usage);
    }
}
function cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data) {
    var var$5, var$6;
    if ($data instanceof jn_FloatBuffer) {
        var$5 = $this.$gl0;
        var$6 = $this.$copy1($data);
        var$5.bufferSubData($target, $offset, var$6);
    }
}
function cgxgbt_TeaGL20_glCompileShader($this, $shader) {
    var $glShader;
    $glShader = $this.$shaders.$get0(jl_Integer_valueOf($shader));
    $this.$gl0.compileShader($glShader);
}
function cgxgbt_TeaGL20_glCreateProgram($this) {
    var $program;
    $program = $this.$gl0.createProgram();
    return cgxgbt_TeaGL20_allocateProgramId($this, $program);
}
function cgxgbt_TeaGL20_glCreateShader($this, $type) {
    var $shader;
    $shader = $this.$gl0.createShader($type);
    return cgxgbt_TeaGL20_allocateShaderId($this, $shader);
}
function cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index) {
    $this.$gl0.disableVertexAttribArray($index);
}
function cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices) {
    $this.$gl0.drawElements($mode, $count, $type, $indices);
}
function cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index) {
    $this.$gl0.enableVertexAttribArray($index);
}
function cgxgbt_TeaGL20_glGenBuffer($this) {
    var $buffer;
    $buffer = $this.$gl0.createBuffer();
    return cgxgbt_TeaGL20_allocateBufferId($this, $buffer);
}
function cgxgbt_TeaGL20_glGenerateMipmap($this, $target) {
    $this.$gl0.generateMipmap($target);
}
function cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type) {
    var var$5, var$6, $activeAttrib;
    var$5 = $this.$gl0;
    var$6 = $this.$programs.$get0(jl_Integer_valueOf($program));
    $activeAttrib = var$5.getActiveAttrib(var$6, $index);
    $size.$put7($activeAttrib.size);
    $type.$put7($activeAttrib.type);
    return $rt_str($activeAttrib.name);
}
function cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type) {
    var var$5, var$6, $activeUniform;
    var$5 = $this.$gl0;
    var$6 = $this.$programs.$get0(jl_Integer_valueOf($program));
    $activeUniform = var$5.getActiveUniform(var$6, $index);
    $size.$put7($activeUniform.size);
    $type.$put7($activeUniform.type);
    return $rt_str($activeUniform.name);
}
function cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name) {
    var $prog;
    $prog = $this.$programs.$get0(jl_Integer_valueOf($program));
    return $this.$gl0.getAttribLocation($prog, $rt_ustr($name));
}
function cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params) {
    if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(456)));
    $params.$put8(0, $this.$gl0.getParameter($pname));
}
function cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params) {
    var var$4, var$5, var$6, var$7, $result;
    if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
        var$4 = $this.$gl0;
        var$5 = $this.$programs.$get0(jl_Integer_valueOf($program));
        $params.$put7(var$4.getProgramParameter(var$5, $pname));
    } else {
        var$6 = $this.$gl0;
        var$7 = $this.$programs.$get0(jl_Integer_valueOf($program));
        $result = var$6.getProgramParameter(var$7, $pname) ? 1 : 0;
        $params.$put7(!$result ? 0 : 1);
    }
}
function cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl0;
    var$3 = $this.$programs.$get0(jl_Integer_valueOf($program));
    return $rt_str(var$2.getProgramInfoLog(var$3));
}
function cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params) {
    var var$4, var$5, $result, var$7;
    if ($pname != 35713 && $pname != 35712) {
        var$4 = $this.$gl0;
        var$5 = $this.$shaders.$get0(jl_Integer_valueOf($shader));
        $result = var$4.getShaderParameter(var$5, $pname);
        $params.$put7($result);
    } else {
        var$7 = $this.$gl0;
        var$4 = $this.$shaders.$get0(jl_Integer_valueOf($shader));
        $result = var$7.getShaderParameter(var$4, $pname) ? 1 : 0;
        $params.$put7(!$result ? 0 : 1);
    }
}
function cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader) {
    var var$2, var$3;
    var$2 = $this.$gl0;
    var$3 = $this.$shaders.$get0(jl_Integer_valueOf($shader));
    return $rt_str(var$2.getShaderInfoLog(var$3));
}
function cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name) {
    var var$3, var$4, $location;
    var$3 = $this.$gl0;
    var$4 = $this.$programs.$get0(jl_Integer_valueOf($program));
    $location = var$3.getUniformLocation(var$4, $rt_ustr($name));
    if ($location !== null)
        return cgxgbt_TeaGL20_allocateUniformLocationId($this, $program, $location);
    return (-1);
}
function cgxgbt_TeaGL20_glLinkProgram($this, $program) {
    var var$2, var$3;
    var$2 = $this.$gl0;
    var$3 = $this.$programs.$get0(jl_Integer_valueOf($program));
    var$2.linkProgram(var$3);
}
function cgxgbt_TeaGL20_glShaderSource($this, $shader, $source) {
    var var$3, var$4;
    var$3 = $this.$gl0;
    var$4 = $this.$shaders.$get0(jl_Integer_valueOf($shader));
    var$3.shaderSource(var$4, $rt_ustr($source));
}
function cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param) {
    var var$4, var$5;
    var$4 = $this.$gl0;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
}
function cgxgbt_TeaGL20_glUniform1i($this, $location, $x) {
    var $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl0.uniform1i($loc, $x);
}
function cgxgbt_TeaGL20_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
    var $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl0.uniformMatrix4fv($loc, !!$transpose, otji_JS_wrap0($value));
}
function cgxgbt_TeaGL20_glUseProgram($this, $program) {
    var var$2, var$3;
    $this.$currProgram = $program;
    var$2 = $this.$gl0;
    var$3 = $this.$programs.$get0(jl_Integer_valueOf($program));
    var$2.useProgram(var$3);
}
function cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    $this.$gl0.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
}
var cgxgbt_TeaGL20Debug = $rt_classWithoutFields(cgxgbt_TeaGL20);
function cgxgbt_TeaGL20Debug__init_(var_0) {
    var var_1 = new cgxgbt_TeaGL20Debug();
    cgxgbt_TeaGL20Debug__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaGL20Debug__init_0($this, $gl) {
    cgxgbt_TeaGL20__init_0($this, $gl);
}
function cgxgbt_TeaGL20Debug_checkError($this) {
    var var$1, var$2, var$3, var$4;
    var$1 = $this.$gl0.getError();
    if (!var$1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_Integer_toHexString(var$1);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(457)), var$1), $rt_s(312)), var$3);
    cbgu_GdxRuntimeException__init_(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
}
function cgxgbt_TeaGL20Debug_glBindTexture($this, $target, $texture) {
    cgxgbt_TeaGL20_glBindTexture($this, $target, $texture);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glClear($this, $mask) {
    cgxgbt_TeaGL20_glClear($this, $mask);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glClearColor($this, $red, $green, $blue, $alpha) {
    cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glDepthMask($this, $flag) {
    cgxgbt_TeaGL20_glDepthMask($this, $flag);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glDisable($this, $cap) {
    cgxgbt_TeaGL20_glDisable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glDrawArrays($this, $mode, $first, $count) {
    cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glDrawElements($this, $mode, $count, $type, $indices) {
    cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glEnable($this, $cap) {
    cgxgbt_TeaGL20_glEnable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glGetString($this, $name) {
    return cgxgbt_TeaGL20_glGetString($this, $name);
}
function cgxgbt_TeaGL20Debug_glPixelStorei($this, $pname, $param) {
    cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glTexParameterf($this, $target, $pname, $param) {
    cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glViewport($this, $x, $y, $width, $height) {
    cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glAttachShader($this, $program, $shader) {
    cgxgbt_TeaGL20_glAttachShader($this, $program, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glBindBuffer($this, $target, $buffer) {
    cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
    cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glBufferData($this, $target, $size, $data, $usage) {
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glBufferSubData($this, $target, $offset, $size, $data) {
    cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glCompileShader($this, $shader) {
    cgxgbt_TeaGL20_glCompileShader($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glCreateProgram($this) {
    var $program;
    $program = cgxgbt_TeaGL20_glCreateProgram($this);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $program;
}
function cgxgbt_TeaGL20Debug_glCreateShader($this, $type) {
    var $shader;
    $shader = cgxgbt_TeaGL20_glCreateShader($this, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $shader;
}
function cgxgbt_TeaGL20Debug_glDisableVertexAttribArray($this, $index) {
    cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glDrawElements0($this, $mode, $count, $type, $indices) {
    cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glEnableVertexAttribArray($this, $index) {
    cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glGenerateMipmap($this, $target) {
    cgxgbt_TeaGL20_glGenerateMipmap($this, $target);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glGetActiveAttrib($this, $program, $index, $size, $type) {
    var $attrib;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $attrib;
}
function cgxgbt_TeaGL20Debug_glGetActiveUniform($this, $program, $index, $size, $type) {
    var $uniform;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $uniform;
}
function cgxgbt_TeaGL20Debug_glGetAttribLocation($this, $program, $name) {
    var $loc;
    $loc = cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
}
function cgxgbt_TeaGL20Debug_glGetFloatv($this, $pname, $params) {
    cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glGetProgramiv($this, $program, $pname, $params) {
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glGetProgramInfoLog($this, $program) {
    var $info;
    $info = cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
}
function cgxgbt_TeaGL20Debug_glGetShaderiv($this, $shader, $pname, $params) {
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glGetShaderInfoLog($this, $shader) {
    var $info;
    $info = cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
}
function cgxgbt_TeaGL20Debug_glGetUniformLocation($this, $program, $name) {
    var $loc;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
}
function cgxgbt_TeaGL20Debug_glLinkProgram($this, $program) {
    cgxgbt_TeaGL20_glLinkProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glShaderSource($this, $shader, $source) {
    cgxgbt_TeaGL20_glShaderSource($this, $shader, $source);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glTexParameteri($this, $target, $pname, $param) {
    cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glUniform1i($this, $location, $x) {
    cgxgbt_TeaGL20_glUniform1i($this, $location, $x);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glUseProgram($this, $program) {
    cgxgbt_TeaGL20_glUseProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgxgbt_TeaGL20Debug_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
    cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
    cgxgbt_TeaGL20Debug_checkError($this);
}
function cgt_RandomRandom() {
    cgtr_EnhancedRandom.call(this);
    this.$base = null;
}
function cgt_RandomRandom__init_() {
    var var_0 = new cgt_RandomRandom();
    cgt_RandomRandom__init_0(var_0);
    return var_0;
}
function cgt_RandomRandom__init_1(var_0) {
    var var_1 = new cgt_RandomRandom();
    cgt_RandomRandom__init_2(var_1, var_0);
    return var_1;
}
function cgt_RandomRandom__init_0($this) {
    cgt_RandomRandom__init_2($this, cgtr_EnhancedRandom_seedFromMath());
}
function cgt_RandomRandom__init_2($this, $seed) {
    cgtr_EnhancedRandom__init_($this);
    $this.$base = ju_Random__init_();
    $this.$setSeed($seed);
}
function cgt_RandomRandom_setSeed($this, $seed) {
    if ($this.$base !== null)
        $this.$base.$setSeed($seed);
    else
        $this.$base = ju_Random__init_1($seed);
}
function cgt_RandomRandom_nextLong($this) {
    return $this.$base.$nextLong();
}
function cgt_RandomRandom_next($this, $bits) {
    return $this.$base.$nextInt() >>> (32 - $bits | 0) | 0;
}
function cgt_RandomRandom_nextFloat($this) {
    return $this.$base.$nextFloat();
}
function cgt_RandomRandom_nextDouble($this) {
    return $this.$base.$nextDouble();
}
function cgt_RandomRandom_nextGaussian($this) {
    return $this.$base.$nextGaussian0();
}
var cbgssu_Tree$2 = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgssu_Tree$1 = $rt_classWithoutFields(cbgssu_Selection);
function cgxgbtf_StoreLocal() {
    var a = this; jl_Object.call(a);
    a.$storage = null;
    a.$prefix = null;
}
function cgxgbtf_StoreLocal__init_(var_0) {
    var var_1 = new cgxgbtf_StoreLocal();
    cgxgbtf_StoreLocal__init_0(var_1, var_0);
    return var_1;
}
function cgxgbtf_StoreLocal__init_0($this, $prefix) {
    jl_Object__init_0($this);
    $this.$storage = otjb_Storage_getLocalStorage();
    $this.$prefix = $prefix;
}
function cgxgbtf_StoreLocal_getItem($this, $key) {
    var var$2, var$3, var$4;
    var$2 = $this.$storage;
    var$3 = $this.$prefix;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$3), $key);
    var$4 = jl_StringBuilder_toString(var$4);
    return $rt_str(var$2.getItem($rt_ustr(var$4)));
}
function cgxgbtf_StoreLocal_removeItem($this, $key) {
    var var$2, var$3, var$4;
    var$2 = $this.$storage;
    var$3 = $this.$prefix;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$3), $key);
    var$4 = jl_StringBuilder_toString(var$4);
    var$2.removeItem($rt_ustr(var$4));
}
var jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazySpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazySpace_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(9, 13)).$add(32);
}
var cbgggp_ParticleController = $rt_classWithoutFields();
var cbgm_GeometryUtils = $rt_classWithoutFields();
var cbgm_GeometryUtils_tmp1 = null;
var cbgm_GeometryUtils_tmp2 = null;
var cbgm_GeometryUtils_tmp3 = null;
function cbgm_GeometryUtils_$callClinit() {
    cbgm_GeometryUtils_$callClinit = $rt_eraseClinit(cbgm_GeometryUtils);
    cbgm_GeometryUtils__clinit_();
}
function cbgm_GeometryUtils__clinit_() {
    cbgm_GeometryUtils_tmp1 = cbgm_Vector2__init_();
    cbgm_GeometryUtils_tmp2 = cbgm_Vector2__init_();
    cbgm_GeometryUtils_tmp3 = cbgm_Vector2__init_();
}
var cbgssu_Skin = $rt_classWithoutFields();
var cbgssu_Skin_defaultTagClasses = null;
function cbgssu_Skin_$callClinit() {
    cbgssu_Skin_$callClinit = $rt_eraseClinit(cbgssu_Skin);
    cbgssu_Skin__clinit_();
}
function cbgssu_Skin__clinit_() {
    cbgssu_Skin_defaultTagClasses = $rt_createArrayFromData(jl_Class, [$rt_cls(cbggg_BitmapFont), $rt_cls(cbgg_Color), $rt_cls(cbgssu_Skin$TintedDrawable), $rt_cls(cbgssu_NinePatchDrawable), $rt_cls(cbgssu_SpriteDrawable), $rt_cls(cbgssu_TextureRegionDrawable), $rt_cls(cbgssu_TiledDrawable), $rt_cls(cbgssu_Button$ButtonStyle), $rt_cls(cbgssu_CheckBox$CheckBoxStyle), $rt_cls(cbgssu_ImageButton$ImageButtonStyle), $rt_cls(cbgssu_ImageTextButton$ImageTextButtonStyle), $rt_cls(cbgssu_Label$LabelStyle), $rt_cls(cbgssu_List$ListStyle),
    $rt_cls(cbgssu_ProgressBar$ProgressBarStyle), $rt_cls(cbgssu_ScrollPane$ScrollPaneStyle), $rt_cls(cbgssu_SelectBox$SelectBoxStyle), $rt_cls(cbgssu_Slider$SliderStyle), $rt_cls(cbgssu_SplitPane$SplitPaneStyle), $rt_cls(cbgssu_TextButton$TextButtonStyle), $rt_cls(cbgssu_TextField$TextFieldStyle), $rt_cls(cbgssu_TextTooltip$TextTooltipStyle), $rt_cls(cbgssu_Touchpad$TouchpadStyle), $rt_cls(cbgssu_Tree$TreeStyle), $rt_cls(cbgssu_Window$WindowStyle)]);
}
var jm_Elementary = $rt_classWithoutFields();
function jm_Elementary_compareArrays($a, $b, $size) {
    var $i, var$5, var$6, var$7;
    $i = $size - 1 | 0;
    while ($i >= 0) {
        var$5 = $b.data;
        if ($a.data[$i] != var$5[$i])
            break;
        $i = $i + (-1) | 0;
    }
    if ($i < 0)
        var$6 = 0;
    else {
        var$7 = $b.data;
        var$6 = Long_ge(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0))) ? 1 : (-1);
    }
    return var$6;
}
function jm_Elementary_add($op1, $op2) {
    var $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, $res, $valueLo, $valueHi, $resDigits, var$13, $cmp, var$15, $res_0;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op1Sign)
        return $op2;
    if (!$op2Sign)
        return $op1;
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), Long_create(4294967295, 0));
        if ($op1Sign != $op2Sign)
            return jm_BigInteger_valueOf($op1Sign >= 0 ? Long_sub($a, $b) : Long_sub($b, $a));
        $res = Long_add($a, $b);
        $valueLo = Long_lo($res);
        $valueHi = Long_hi($res);
        return !$valueHi ? jm_BigInteger__init_0($op1Sign, $valueLo) : jm_BigInteger__init_($op1Sign, 2, $rt_createIntArrayFromData([$valueLo, $valueHi]));
    }
    if ($op1Sign == $op2Sign)
        $resDigits = $op1Len < $op2Len ? jm_Elementary_add0($op2.$digits, $op2Len, $op1.$digits, $op1Len) : jm_Elementary_add0($op1.$digits, $op1Len, $op2.$digits, $op2Len);
    else {
        var$13 = $rt_compare($op1Len, $op2Len);
        $cmp = !var$13 ? jm_Elementary_compareArrays($op1.$digits, $op2.$digits, $op1Len) : var$13 <= 0 ? (-1) : 1;
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        if ($cmp != 1) {
            $resDigits = jm_Elementary_subtract0($op2.$digits, $op2Len, $op1.$digits, $op1Len);
            $op1Sign = $op2Sign;
        } else
            $resDigits = jm_Elementary_subtract0($op1.$digits, $op1Len, $op2.$digits, $op2Len);
    }
    var$15 = $resDigits.data;
    $res_0 = jm_BigInteger__init_($op1Sign, var$15.length, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($res_0);
    return $res_0;
}
function jm_Elementary_add1($res, $a, $aSize, $b, $bSize) {
    var var$6, var$7, var$8, $carry, var$10, $i, var$12;
    var$6 = $res.data;
    var$7 = $b.data;
    var$8 = $a.data;
    $carry = Long_add(Long_and(Long_fromInt(var$8[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[0]), Long_create(4294967295, 0)));
    var$6[0] = Long_lo($carry);
    var$10 = Long_shr($carry, 32);
    if ($aSize < $bSize) {
        $i = 1;
        while ($i < $aSize) {
            var$12 = Long_add(var$10, Long_add(Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $bSize) {
            var$12 = Long_add(var$10, Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
    } else {
        $i = 1;
        while ($i < $bSize) {
            var$12 = Long_add(var$10, Long_add(Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $aSize) {
            var$12 = Long_add(var$10, Long_and(Long_fromInt(var$8[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo(var$12);
            var$10 = Long_shr(var$12, 32);
            $i = $i + 1 | 0;
        }
    }
    if (Long_ne(var$10, Long_ZERO))
        var$6[$i] = Long_lo(var$10);
}
function jm_Elementary_subtract($op1, $op2) {
    var $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, var$9, $cmp, $resSign, $resDigits, var$13, $res;
    $op1Sign = $op1.$sign1;
    $op2Sign = $op2.$sign1;
    if (!$op2Sign)
        return $op1;
    if (!$op1Sign)
        return $op2.$negate();
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), Long_create(4294967295, 0));
        if ($op1Sign < 0)
            $a = Long_neg($a);
        if ($op2Sign < 0)
            $b = Long_neg($b);
        return jm_BigInteger_valueOf(Long_sub($a, $b));
    }
    var$9 = $rt_compare($op1Len, $op2Len);
    $cmp = !var$9 ? jm_Elementary_compareArrays($op1.$digits, $op2.$digits, $op1Len) : var$9 <= 0 ? (-1) : 1;
    if ($cmp == (-1)) {
        $resSign =  -$op2Sign | 0;
        $resDigits = $op1Sign != $op2Sign ? jm_Elementary_add0($op2.$digits, $op2Len, $op1.$digits, $op1Len) : jm_Elementary_subtract0($op2.$digits, $op2Len, $op1.$digits, $op1Len);
    } else if ($op1Sign != $op2Sign) {
        $resDigits = jm_Elementary_add0($op1.$digits, $op1Len, $op2.$digits, $op2Len);
        $resSign = $op1Sign;
    } else {
        if (!$cmp) {
            jm_BigInteger_$callClinit();
            return jm_BigInteger_ZERO;
        }
        $resDigits = jm_Elementary_subtract0($op1.$digits, $op1Len, $op2.$digits, $op2Len);
        $resSign = $op1Sign;
    }
    var$13 = $resDigits.data;
    $res = jm_BigInteger__init_($resSign, var$13.length, $resDigits);
    jm_BigInteger_cutOffLeadingZeroes($res);
    return $res;
}
function jm_Elementary_subtract1($res, $a, $aSize, $b, $bSize) {
    var $borrow, $i, var$8, var$9, var$10;
    $borrow = Long_ZERO;
    $i = 0;
    while ($i < $bSize) {
        var$8 = $res.data;
        var$9 = $b.data;
        var$10 = Long_add($borrow, Long_sub(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$9[$i]), Long_create(4294967295, 0))));
        var$8[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
    while ($i < $aSize) {
        var$9 = $res.data;
        var$10 = Long_add($borrow, Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)));
        var$9[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
}
function jm_Elementary_add0($a, $aSize, $b, $bSize) {
    var $res;
    $res = $rt_createIntArray($aSize + 1 | 0);
    jm_Elementary_add1($res, $a, $aSize, $b, $bSize);
    return $res;
}
function jm_Elementary_subtract0($a, $aSize, $b, $bSize) {
    var $res;
    $res = $rt_createIntArray($aSize);
    jm_Elementary_subtract1($res, $a, $aSize, $b, $bSize);
    return $res;
}
var otjde_FocusEventTarget = $rt_classWithoutFields(0);
var otjde_MouseEventTarget = $rt_classWithoutFields(0);
var otjde_GamepadEventTarget = $rt_classWithoutFields(0);
var otjb_WindowEventTarget = $rt_classWithoutFields(0);
var cbgggpv_MeshSpawnShapeValue$Triangle = $rt_classWithoutFields();
var ju_RandomAccess = $rt_classWithoutFields(0);
var cbgm_Matrix3 = $rt_classWithoutFields();
function cbgm_Matrix4() {
    jl_Object.call(this);
    this.$val = null;
}
var cbgm_Matrix4_tmp = null;
var cbgm_Matrix4_quat = null;
var cbgm_Matrix4_quat2 = null;
var cbgm_Matrix4_l_vez = null;
var cbgm_Matrix4_l_vex = null;
var cbgm_Matrix4_l_vey = null;
var cbgm_Matrix4_tmpVec = null;
var cbgm_Matrix4_tmpMat = null;
var cbgm_Matrix4_right = null;
var cbgm_Matrix4_tmpForward = null;
var cbgm_Matrix4_tmpUp = null;
function cbgm_Matrix4_$callClinit() {
    cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
    cbgm_Matrix4__clinit_();
}
function cbgm_Matrix4__init_() {
    var var_0 = new cbgm_Matrix4();
    cbgm_Matrix4__init_0(var_0);
    return var_0;
}
function cbgm_Matrix4__init_0($this) {
    cbgm_Matrix4_$callClinit();
    jl_Object__init_0($this);
    $this.$val = $rt_createFloatArray(16);
    $this.$val.data[0] = 1.0;
    $this.$val.data[5] = 1.0;
    $this.$val.data[10] = 1.0;
    $this.$val.data[15] = 1.0;
}
function cbgm_Matrix4_set($this, $matrix) {
    return $this.$set6($matrix.$val);
}
function cbgm_Matrix4_set0($this, $values) {
    var var$2;
    var$2 = $values.data;
    $this.$val.data[0] = var$2[0];
    $this.$val.data[1] = var$2[1];
    $this.$val.data[2] = var$2[2];
    $this.$val.data[3] = var$2[3];
    $this.$val.data[4] = var$2[4];
    $this.$val.data[5] = var$2[5];
    $this.$val.data[6] = var$2[6];
    $this.$val.data[7] = var$2[7];
    $this.$val.data[8] = var$2[8];
    $this.$val.data[9] = var$2[9];
    $this.$val.data[10] = var$2[10];
    $this.$val.data[11] = var$2[11];
    $this.$val.data[12] = var$2[12];
    $this.$val.data[13] = var$2[13];
    $this.$val.data[14] = var$2[14];
    $this.$val.data[15] = var$2[15];
    return $this;
}
function cbgm_Matrix4_mul($this, $matrix) {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_tmp.data[0] = $this.$val.data[0] * $matrix.$val.data[0] + $this.$val.data[4] * $matrix.$val.data[1] + $this.$val.data[8] * $matrix.$val.data[2] + $this.$val.data[12] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[4] = $this.$val.data[0] * $matrix.$val.data[4] + $this.$val.data[4] * $matrix.$val.data[5] + $this.$val.data[8] * $matrix.$val.data[6] + $this.$val.data[12] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[8] = $this.$val.data[0] * $matrix.$val.data[8] + $this.$val.data[4] * $matrix.$val.data[9] + $this.$val.data[8] * $matrix.$val.data[10] + $this.$val.data[12] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[12] = $this.$val.data[0] * $matrix.$val.data[12] + $this.$val.data[4] * $matrix.$val.data[13] + $this.$val.data[8] * $matrix.$val.data[14] + $this.$val.data[12] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[1] = $this.$val.data[1] * $matrix.$val.data[0] + $this.$val.data[5] * $matrix.$val.data[1] + $this.$val.data[9] * $matrix.$val.data[2] + $this.$val.data[13] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[5] = $this.$val.data[1] * $matrix.$val.data[4] + $this.$val.data[5] * $matrix.$val.data[5] + $this.$val.data[9] * $matrix.$val.data[6] + $this.$val.data[13] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[9] = $this.$val.data[1] * $matrix.$val.data[8] + $this.$val.data[5] * $matrix.$val.data[9] + $this.$val.data[9] * $matrix.$val.data[10] + $this.$val.data[13] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[13] = $this.$val.data[1] * $matrix.$val.data[12] + $this.$val.data[5] * $matrix.$val.data[13] + $this.$val.data[9] * $matrix.$val.data[14] + $this.$val.data[13] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[2] = $this.$val.data[2] * $matrix.$val.data[0] + $this.$val.data[6] * $matrix.$val.data[1] + $this.$val.data[10] * $matrix.$val.data[2] + $this.$val.data[14] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[6] = $this.$val.data[2] * $matrix.$val.data[4] + $this.$val.data[6] * $matrix.$val.data[5] + $this.$val.data[10] * $matrix.$val.data[6] + $this.$val.data[14] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[10] = $this.$val.data[2] * $matrix.$val.data[8] + $this.$val.data[6] * $matrix.$val.data[9] + $this.$val.data[10] * $matrix.$val.data[10] + $this.$val.data[14] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[14] = $this.$val.data[2] * $matrix.$val.data[12] + $this.$val.data[6] * $matrix.$val.data[13] + $this.$val.data[10] * $matrix.$val.data[14] + $this.$val.data[14] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[3] = $this.$val.data[3] * $matrix.$val.data[0] + $this.$val.data[7] * $matrix.$val.data[1] + $this.$val.data[11] * $matrix.$val.data[2] + $this.$val.data[15] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[7] = $this.$val.data[3] * $matrix.$val.data[4] + $this.$val.data[7] * $matrix.$val.data[5] + $this.$val.data[11] * $matrix.$val.data[6] + $this.$val.data[15] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[11] = $this.$val.data[3] * $matrix.$val.data[8] + $this.$val.data[7] * $matrix.$val.data[9] + $this.$val.data[11] * $matrix.$val.data[10] + $this.$val.data[15] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[15] = $this.$val.data[3] * $matrix.$val.data[12] + $this.$val.data[7] * $matrix.$val.data[13] + $this.$val.data[11] * $matrix.$val.data[14] + $this.$val.data[15] * $matrix.$val.data[15];
    return $this.$set6(cbgm_Matrix4_tmp);
}
function cbgm_Matrix4_idt($this) {
    $this.$val.data[0] = 1.0;
    $this.$val.data[4] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[12] = 0.0;
    $this.$val.data[1] = 0.0;
    $this.$val.data[5] = 1.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[13] = 0.0;
    $this.$val.data[2] = 0.0;
    $this.$val.data[6] = 0.0;
    $this.$val.data[10] = 1.0;
    $this.$val.data[14] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[11] = 0.0;
    $this.$val.data[15] = 1.0;
    return $this;
}
function cbgm_Matrix4_setToOrtho2D($this, $x, $y, $width, $height) {
    $this.$setToOrtho($x, $x + $width, $y, $y + $height, 0.0, 1.0);
    return $this;
}
function cbgm_Matrix4_setToOrtho($this, $left, $right, $bottom, $top, $near, $far) {
    var var$7, $x_orth, var$9, $y_orth, var$11, $z_orth, $tx, $ty, $tz;
    $this.$idt();
    var$7 = $right - $left;
    $x_orth = 2.0 / var$7;
    var$9 = $top - $bottom;
    $y_orth = 2.0 / var$9;
    var$11 = $far - $near;
    $z_orth = (-2.0) / var$11;
    $tx =  -($right + $left) / var$7;
    $ty =  -($top + $bottom) / var$9;
    $tz =  -($far + $near) / var$11;
    $this.$val.data[0] = $x_orth;
    $this.$val.data[1] = 0.0;
    $this.$val.data[2] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[4] = 0.0;
    $this.$val.data[5] = $y_orth;
    $this.$val.data[6] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[10] = $z_orth;
    $this.$val.data[11] = 0.0;
    $this.$val.data[12] = $tx;
    $this.$val.data[13] = $ty;
    $this.$val.data[14] = $tz;
    $this.$val.data[15] = 1.0;
    return $this;
}
function cbgm_Matrix4_setToTranslation($this, $x, $y, $z) {
    $this.$idt();
    $this.$val.data[12] = $x;
    $this.$val.data[13] = $y;
    $this.$val.data[14] = $z;
    return $this;
}
function cbgm_Matrix4_setToLookAt($this, $direction, $up) {
    cbgm_Matrix4_$callClinit();
    (cbgm_Matrix4_l_vez.$set1($direction)).$nor();
    (cbgm_Matrix4_l_vex.$set1($direction)).$nor();
    (cbgm_Matrix4_l_vex.$crs($up)).$nor();
    ((cbgm_Matrix4_l_vey.$set1(cbgm_Matrix4_l_vex)).$crs(cbgm_Matrix4_l_vez)).$nor();
    $this.$idt();
    $this.$val.data[0] = cbgm_Matrix4_l_vex.$x;
    $this.$val.data[4] = cbgm_Matrix4_l_vex.$y;
    $this.$val.data[8] = cbgm_Matrix4_l_vex.$z;
    $this.$val.data[1] = cbgm_Matrix4_l_vey.$x;
    $this.$val.data[5] = cbgm_Matrix4_l_vey.$y;
    $this.$val.data[9] = cbgm_Matrix4_l_vey.$z;
    $this.$val.data[2] =  -cbgm_Matrix4_l_vez.$x;
    $this.$val.data[6] =  -cbgm_Matrix4_l_vez.$y;
    $this.$val.data[10] =  -cbgm_Matrix4_l_vez.$z;
    return $this;
}
function cbgm_Matrix4_setToLookAt0($this, $position, $target, $up) {
    cbgm_Matrix4_$callClinit();
    (cbgm_Matrix4_tmpVec.$set1($target)).$sub($position);
    $this.$setToLookAt(cbgm_Matrix4_tmpVec, $up);
    $this.$mul(cbgm_Matrix4_tmpMat.$setToTranslation( -$position.$x,  -$position.$y,  -$position.$z));
    return $this;
}
function cbgm_Matrix4_matrix4_mul($mata, $matb) {
    var var$3, var$4, $tmp_0, var$6;
    cbgm_Matrix4_$callClinit();
    var$3 = $matb.data;
    var$4 = $mata.data;
    $tmp_0 = $rt_createFloatArray(16);
    var$6 = $tmp_0.data;
    var$6[0] = var$4[0] * var$3[0] + var$4[4] * var$3[1] + var$4[8] * var$3[2] + var$4[12] * var$3[3];
    var$6[4] = var$4[0] * var$3[4] + var$4[4] * var$3[5] + var$4[8] * var$3[6] + var$4[12] * var$3[7];
    var$6[8] = var$4[0] * var$3[8] + var$4[4] * var$3[9] + var$4[8] * var$3[10] + var$4[12] * var$3[11];
    var$6[12] = var$4[0] * var$3[12] + var$4[4] * var$3[13] + var$4[8] * var$3[14] + var$4[12] * var$3[15];
    var$6[1] = var$4[1] * var$3[0] + var$4[5] * var$3[1] + var$4[9] * var$3[2] + var$4[13] * var$3[3];
    var$6[5] = var$4[1] * var$3[4] + var$4[5] * var$3[5] + var$4[9] * var$3[6] + var$4[13] * var$3[7];
    var$6[9] = var$4[1] * var$3[8] + var$4[5] * var$3[9] + var$4[9] * var$3[10] + var$4[13] * var$3[11];
    var$6[13] = var$4[1] * var$3[12] + var$4[5] * var$3[13] + var$4[9] * var$3[14] + var$4[13] * var$3[15];
    var$6[2] = var$4[2] * var$3[0] + var$4[6] * var$3[1] + var$4[10] * var$3[2] + var$4[14] * var$3[3];
    var$6[6] = var$4[2] * var$3[4] + var$4[6] * var$3[5] + var$4[10] * var$3[6] + var$4[14] * var$3[7];
    var$6[10] = var$4[2] * var$3[8] + var$4[6] * var$3[9] + var$4[10] * var$3[10] + var$4[14] * var$3[11];
    var$6[14] = var$4[2] * var$3[12] + var$4[6] * var$3[13] + var$4[10] * var$3[14] + var$4[14] * var$3[15];
    var$6[3] = var$4[3] * var$3[0] + var$4[7] * var$3[1] + var$4[11] * var$3[2] + var$4[15] * var$3[3];
    var$6[7] = var$4[3] * var$3[4] + var$4[7] * var$3[5] + var$4[11] * var$3[6] + var$4[15] * var$3[7];
    var$6[11] = var$4[3] * var$3[8] + var$4[7] * var$3[9] + var$4[11] * var$3[10] + var$4[15] * var$3[11];
    var$6[15] = var$4[3] * var$3[12] + var$4[7] * var$3[13] + var$4[11] * var$3[14] + var$4[15] * var$3[15];
    jl_System_arraycopy($tmp_0, 0, $mata, 0, 16);
}
function cbgm_Matrix4_matrix4_det($val) {
    var var$2;
    cbgm_Matrix4_$callClinit();
    var$2 = $val.data;
    return var$2[3] * var$2[6] * var$2[9] * var$2[12] - var$2[2] * var$2[7] * var$2[9] * var$2[12] - var$2[3] * var$2[5] * var$2[10] * var$2[12] + var$2[1] * var$2[7] * var$2[10] * var$2[12] + var$2[2] * var$2[5] * var$2[11] * var$2[12] - var$2[1] * var$2[6] * var$2[11] * var$2[12] - var$2[3] * var$2[6] * var$2[8] * var$2[13] + var$2[2] * var$2[7] * var$2[8] * var$2[13] + var$2[3] * var$2[4] * var$2[10] * var$2[13] - var$2[0] * var$2[7] * var$2[10] * var$2[13] - var$2[2] * var$2[4] * var$2[11] * var$2[13] +
    var$2[0] * var$2[6] * var$2[11] * var$2[13] + var$2[3] * var$2[5] * var$2[8] * var$2[14] - var$2[1] * var$2[7] * var$2[8] * var$2[14] - var$2[3] * var$2[4] * var$2[9] * var$2[14] + var$2[0] * var$2[7] * var$2[9] * var$2[14] + var$2[1] * var$2[4] * var$2[11] * var$2[14] - var$2[0] * var$2[5] * var$2[11] * var$2[14] - var$2[2] * var$2[5] * var$2[8] * var$2[15] + var$2[1] * var$2[6] * var$2[8] * var$2[15] + var$2[2] * var$2[4] * var$2[9] * var$2[15] - var$2[0] * var$2[6] * var$2[9] * var$2[15] - var$2[1] *
    var$2[4] * var$2[10] * var$2[15] + var$2[0] * var$2[5] * var$2[10] * var$2[15];
}
function cbgm_Matrix4_matrix4_inv($val) {
    var $tmp_0, $l_det, var$4, var$5, $inv_det;
    cbgm_Matrix4_$callClinit();
    $tmp_0 = $rt_createFloatArray(16);
    $l_det = cbgm_Matrix4_matrix4_det($val);
    if ($l_det === 0.0)
        return 0;
    var$4 = $tmp_0.data;
    var$5 = $val.data;
    var$4[0] = var$5[9] * var$5[14] * var$5[7] - var$5[13] * var$5[10] * var$5[7] + var$5[13] * var$5[6] * var$5[11] - var$5[5] * var$5[14] * var$5[11] - var$5[9] * var$5[6] * var$5[15] + var$5[5] * var$5[10] * var$5[15];
    var$4[4] = var$5[12] * var$5[10] * var$5[7] - var$5[8] * var$5[14] * var$5[7] - var$5[12] * var$5[6] * var$5[11] + var$5[4] * var$5[14] * var$5[11] + var$5[8] * var$5[6] * var$5[15] - var$5[4] * var$5[10] * var$5[15];
    var$4[8] = var$5[8] * var$5[13] * var$5[7] - var$5[12] * var$5[9] * var$5[7] + var$5[12] * var$5[5] * var$5[11] - var$5[4] * var$5[13] * var$5[11] - var$5[8] * var$5[5] * var$5[15] + var$5[4] * var$5[9] * var$5[15];
    var$4[12] = var$5[12] * var$5[9] * var$5[6] - var$5[8] * var$5[13] * var$5[6] - var$5[12] * var$5[5] * var$5[10] + var$5[4] * var$5[13] * var$5[10] + var$5[8] * var$5[5] * var$5[14] - var$5[4] * var$5[9] * var$5[14];
    var$4[1] = var$5[13] * var$5[10] * var$5[3] - var$5[9] * var$5[14] * var$5[3] - var$5[13] * var$5[2] * var$5[11] + var$5[1] * var$5[14] * var$5[11] + var$5[9] * var$5[2] * var$5[15] - var$5[1] * var$5[10] * var$5[15];
    var$4[5] = var$5[8] * var$5[14] * var$5[3] - var$5[12] * var$5[10] * var$5[3] + var$5[12] * var$5[2] * var$5[11] - var$5[0] * var$5[14] * var$5[11] - var$5[8] * var$5[2] * var$5[15] + var$5[0] * var$5[10] * var$5[15];
    var$4[9] = var$5[12] * var$5[9] * var$5[3] - var$5[8] * var$5[13] * var$5[3] - var$5[12] * var$5[1] * var$5[11] + var$5[0] * var$5[13] * var$5[11] + var$5[8] * var$5[1] * var$5[15] - var$5[0] * var$5[9] * var$5[15];
    var$4[13] = var$5[8] * var$5[13] * var$5[2] - var$5[12] * var$5[9] * var$5[2] + var$5[12] * var$5[1] * var$5[10] - var$5[0] * var$5[13] * var$5[10] - var$5[8] * var$5[1] * var$5[14] + var$5[0] * var$5[9] * var$5[14];
    var$4[2] = var$5[5] * var$5[14] * var$5[3] - var$5[13] * var$5[6] * var$5[3] + var$5[13] * var$5[2] * var$5[7] - var$5[1] * var$5[14] * var$5[7] - var$5[5] * var$5[2] * var$5[15] + var$5[1] * var$5[6] * var$5[15];
    var$4[6] = var$5[12] * var$5[6] * var$5[3] - var$5[4] * var$5[14] * var$5[3] - var$5[12] * var$5[2] * var$5[7] + var$5[0] * var$5[14] * var$5[7] + var$5[4] * var$5[2] * var$5[15] - var$5[0] * var$5[6] * var$5[15];
    var$4[10] = var$5[4] * var$5[13] * var$5[3] - var$5[12] * var$5[5] * var$5[3] + var$5[12] * var$5[1] * var$5[7] - var$5[0] * var$5[13] * var$5[7] - var$5[4] * var$5[1] * var$5[15] + var$5[0] * var$5[5] * var$5[15];
    var$4[14] = var$5[12] * var$5[5] * var$5[2] - var$5[4] * var$5[13] * var$5[2] - var$5[12] * var$5[1] * var$5[6] + var$5[0] * var$5[13] * var$5[6] + var$5[4] * var$5[1] * var$5[14] - var$5[0] * var$5[5] * var$5[14];
    var$4[3] = var$5[9] * var$5[6] * var$5[3] - var$5[5] * var$5[10] * var$5[3] - var$5[9] * var$5[2] * var$5[7] + var$5[1] * var$5[10] * var$5[7] + var$5[5] * var$5[2] * var$5[11] - var$5[1] * var$5[6] * var$5[11];
    var$4[7] = var$5[4] * var$5[10] * var$5[3] - var$5[8] * var$5[6] * var$5[3] + var$5[8] * var$5[2] * var$5[7] - var$5[0] * var$5[10] * var$5[7] - var$5[4] * var$5[2] * var$5[11] + var$5[0] * var$5[6] * var$5[11];
    var$4[11] = var$5[8] * var$5[5] * var$5[3] - var$5[4] * var$5[9] * var$5[3] - var$5[8] * var$5[1] * var$5[7] + var$5[0] * var$5[9] * var$5[7] + var$5[4] * var$5[1] * var$5[11] - var$5[0] * var$5[5] * var$5[11];
    var$4[15] = var$5[4] * var$5[9] * var$5[2] - var$5[8] * var$5[5] * var$5[2] + var$5[8] * var$5[1] * var$5[6] - var$5[0] * var$5[9] * var$5[6] - var$5[4] * var$5[1] * var$5[10] + var$5[0] * var$5[5] * var$5[10];
    $inv_det = 1.0 / $l_det;
    var$5[0] = var$4[0] * $inv_det;
    var$5[4] = var$4[4] * $inv_det;
    var$5[8] = var$4[8] * $inv_det;
    var$5[12] = var$4[12] * $inv_det;
    var$5[1] = var$4[1] * $inv_det;
    var$5[5] = var$4[5] * $inv_det;
    var$5[9] = var$4[9] * $inv_det;
    var$5[13] = var$4[13] * $inv_det;
    var$5[2] = var$4[2] * $inv_det;
    var$5[6] = var$4[6] * $inv_det;
    var$5[10] = var$4[10] * $inv_det;
    var$5[14] = var$4[14] * $inv_det;
    var$5[3] = var$4[3] * $inv_det;
    var$5[7] = var$4[7] * $inv_det;
    var$5[11] = var$4[11] * $inv_det;
    var$5[15] = var$4[15] * $inv_det;
    return 1;
}
function cbgm_Matrix4_matrix4_proj($mat, $vec, $offset) {
    var var$4, var$5, var$6, var$7, var$8, var$9, var$10, $inv_w, $x, $y, $z;
    cbgm_Matrix4_$callClinit();
    var$4 = $mat.data;
    var$5 = $vec.data;
    var$6 = $offset + 0 | 0;
    var$7 = var$5[var$6] * var$4[3];
    var$8 = $offset + 1 | 0;
    var$9 = var$7 + var$5[var$8] * var$4[7];
    var$10 = $offset + 2 | 0;
    $inv_w = 1.0 / (var$9 + var$5[var$10] * var$4[11] + var$4[15]);
    $x = (var$5[var$6] * var$4[0] + var$5[var$8] * var$4[4] + var$5[var$10] * var$4[8] + var$4[12]) * $inv_w;
    $y = (var$5[var$6] * var$4[1] + var$5[var$8] * var$4[5] + var$5[var$10] * var$4[9] + var$4[13]) * $inv_w;
    $z = (var$5[var$6] * var$4[2] + var$5[var$8] * var$4[6] + var$5[var$10] * var$4[10] + var$4[14]) * $inv_w;
    var$5[var$6] = $x;
    var$5[var$8] = $y;
    var$5[var$10] = $z;
}
function cbgm_Matrix4_mul0($mata, $matb) {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_matrix4_mul($mata, $matb);
}
function cbgm_Matrix4_prj($mat, $vecs, $offset, $numVecs, $stride) {
    var $i;
    cbgm_Matrix4_$callClinit();
    $i = 0;
    while ($i < $numVecs) {
        cbgm_Matrix4_matrix4_proj($mat, $vecs, $offset);
        $offset = $offset + $stride | 0;
        $i = $i + 1 | 0;
    }
}
function cbgm_Matrix4_inv($values) {
    cbgm_Matrix4_$callClinit();
    return cbgm_Matrix4_matrix4_inv($values);
}
function cbgm_Matrix4__clinit_() {
    cbgm_Matrix4_tmp = $rt_createFloatArray(16);
    cbgm_Matrix4_quat = cbgm_Quaternion__init_();
    cbgm_Matrix4_quat2 = cbgm_Quaternion__init_();
    cbgm_Matrix4_l_vez = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vex = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vey = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpVec = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4_right = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpForward = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpUp = cbgm_Vector3__init_();
}
var cbgss_InputListener$1 = $rt_classWithoutFields();
var cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null;
function cbgss_InputListener$1_$callClinit() {
    cbgss_InputListener$1_$callClinit = $rt_eraseClinit(cbgss_InputListener$1);
    cbgss_InputListener$1__clinit_();
}
function cbgss_InputListener$1__clinit_() {
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = $rt_createIntArray((cbgss_InputEvent$Type_values()).data.length);
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_keyDown)] = 1;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_keyUp)] = 2;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_keyTyped)] = 3;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_touchDown)] = 4;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_touchUp)] = 5;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_touchDragged)] = 6;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_mouseMoved)] = 7;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_scrolled)] = 8;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_enter)] = 9;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_exit)] = 10;
}
var jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException);
function jl_NegativeArraySizeException__init_() {
    var var_0 = new jl_NegativeArraySizeException();
    jl_NegativeArraySizeException__init_0(var_0);
    return var_0;
}
function jl_NegativeArraySizeException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var cbgssa_RemoveActorAction = $rt_classWithoutFields(cbgss_Action);
var cbgm_Interpolation$Bounce = $rt_classWithoutFields(cbgm_Interpolation$BounceOut);
function cbgm_Interpolation$Bounce__init_(var_0) {
    var var_1 = new cbgm_Interpolation$Bounce();
    cbgm_Interpolation$Bounce__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$Bounce__init_0($this, $bounces) {
    cbgm_Interpolation$BounceOut__init_0($this, $bounces);
}
var cbgssa_SizeByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
function cbgm_Interpolation$Swing() {
    cbgm_Interpolation.call(this);
    this.$scale2 = 0.0;
}
function cbgm_Interpolation$Swing__init_(var_0) {
    var var_1 = new cbgm_Interpolation$Swing();
    cbgm_Interpolation$Swing__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$Swing__init_0($this, $scale) {
    cbgm_Interpolation__init_($this);
    $this.$scale2 = $scale * 2.0;
}
function cbgu_Array$ArrayIterable() {
    var a = this; jl_Object.call(a);
    a.$array4 = null;
    a.$allowRemove = 0;
    a.$iterator1 = null;
    a.$iterator2 = null;
}
function cbgu_Array$ArrayIterable__init_(var_0) {
    var var_1 = new cbgu_Array$ArrayIterable();
    cbgu_Array$ArrayIterable__init_0(var_1, var_0);
    return var_1;
}
function cbgu_Array$ArrayIterable__init_1(var_0, var_1) {
    var var_2 = new cbgu_Array$ArrayIterable();
    cbgu_Array$ArrayIterable__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_Array$ArrayIterable__init_0($this, $array) {
    cbgu_Array$ArrayIterable__init_2($this, $array, 1);
}
function cbgu_Array$ArrayIterable__init_2($this, $array, $allowRemove) {
    jl_Object__init_0($this);
    $this.$array4 = $array;
    $this.$allowRemove = $allowRemove;
}
function cbgu_Array$ArrayIterable_iterator($this) {
    if (cbgu_Collections_allocateIterators)
        return cbgu_Array$ArrayIterator__init_($this.$array4, $this.$allowRemove);
    if ($this.$iterator1 === null) {
        $this.$iterator1 = cbgu_Array$ArrayIterator__init_($this.$array4, $this.$allowRemove);
        $this.$iterator2 = cbgu_Array$ArrayIterator__init_($this.$array4, $this.$allowRemove);
    }
    if ($this.$iterator1.$valid0) {
        $this.$iterator2.$index3 = 0;
        $this.$iterator2.$valid0 = 1;
        $this.$iterator1.$valid0 = 0;
        return $this.$iterator2;
    }
    $this.$iterator1.$index3 = 0;
    $this.$iterator1.$valid0 = 1;
    $this.$iterator2.$valid0 = 0;
    return $this.$iterator1;
}
var jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IllegalStateException__init_0() {
    var var_0 = new jl_IllegalStateException();
    jl_IllegalStateException__init_1(var_0);
    return var_0;
}
function jl_IllegalStateException__init_(var_0) {
    var var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_2(var_1, var_0);
    return var_1;
}
function jl_IllegalStateException__init_1($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IllegalStateException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
var cgxgbtd_FileReaderWrapper = $rt_classWithoutFields();
function cgxgbtd_FileReaderWrapper_removeEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function cgxgbtd_FileReaderWrapper_dispatchEvent$exported$1(var$0, var$1) {
    return !!var$0.$dispatchEvent(var$1);
}
function cgxgbtd_FileReaderWrapper_addEventListener$exported$2(var$0, var$1, var$2) {
    var$0.$addEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function cgxgbtd_FileReaderWrapper_addEventListener$exported$3(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function cgxgbtd_FileReaderWrapper_removeEventListener$exported$4(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
var cbgssu_TooltipManager = $rt_classWithoutFields();
function cgtr_GoldenQuasiRandom() {
    cgtr_EnhancedRandom.call(this);
    this.$state3 = Long_ZERO;
}
function cgtr_GoldenQuasiRandom__init_() {
    var var_0 = new cgtr_GoldenQuasiRandom();
    cgtr_GoldenQuasiRandom__init_0(var_0);
    return var_0;
}
function cgtr_GoldenQuasiRandom__init_1(var_0) {
    var var_1 = new cgtr_GoldenQuasiRandom();
    cgtr_GoldenQuasiRandom__init_2(var_1, var_0);
    return var_1;
}
function cgtr_GoldenQuasiRandom__init_0($this) {
    cgtr_GoldenQuasiRandom__init_2($this, cgtr_EnhancedRandom_seedFromMath());
}
function cgtr_GoldenQuasiRandom__init_2($this, $state) {
    cgtr_EnhancedRandom__init_0($this, $state);
    $this.$state3 = $state;
}
function cgtr_GoldenQuasiRandom_nextLong($this) {
    var var$1;
    var$1 = Long_add($this.$state3, Long_create(2135587861, 2654435769));
    $this.$state3 = var$1;
    return var$1;
}
function cgtr_GoldenQuasiRandom_next($this, $bits) {
    var var$2;
    var$2 = Long_add($this.$state3, Long_create(2135587861, 2654435769));
    $this.$state3 = var$2;
    return Long_lo(Long_shru(var$2, 64 - $bits | 0));
}
function cgtr_GoldenQuasiRandom_nextExclusiveDouble($this) {
    var var$1, $n;
    var$1 = Long_add($this.$state3, Long_create(2135587861, 2654435769));
    $this.$state3 = var$1;
    $n = Long_toNumber(Long_shru(var$1, 11)) * 1.1102230246251565E-16;
    if ($n === 0.0)
        $n = 5.551115123125783E-17;
    return $n;
}
function cgtr_GoldenQuasiRandom_nextExclusiveSignedDouble($this) {
    var var$1, $n;
    var$1 = Long_add($this.$state3, Long_create(2135587861, 2654435769));
    $this.$state3 = var$1;
    $n = Long_toNumber(Long_shru(var$1, 11)) * 1.1102230246251565E-16;
    if ($n === 0.0)
        $n = 5.551115123125783E-17;
    return jl_Math_copySign($n, Long_toNumber(Long_shl(var$1, 54)));
}
function cgtr_GoldenQuasiRandom_nextExclusiveFloat($this) {
    var var$1, $n;
    var$1 = Long_add($this.$state3, Long_create(2135587861, 2654435769));
    $this.$state3 = var$1;
    $n = Long_toNumber(Long_shru(var$1, 40)) * 5.960464477539063E-8;
    if ($n === 0.0)
        $n = 2.9802322387695312E-8;
    return $n;
}
function cgtr_GoldenQuasiRandom_nextGaussian($this) {
    var var$1;
    var$1 = Long_add($this.$state3, Long_create(2135587861, 2654435769));
    $this.$state3 = var$1;
    return cgtr_Ziggurat_normal(cgtd_Hasher_randomize3(var$1));
}
var ju_AbstractCollection = $rt_classWithoutFields();
function ju_AbstractCollection__init_($this) {
    jl_Object__init_0($this);
}
function ju_AbstractCollection_toArray($this, $a) {
    var var$2, $i, var$4, $iter;
    var$2 = $a.data;
    $i = $this.$size0();
    var$4 = var$2.length;
    if (var$4 < $i)
        $a = jlr_Array_newInstance((jl_Object_getClass($a)).$getComponentType(), $i);
    else
        while ($i < var$4) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    $i = 0;
    $iter = $this.$iterator();
    while ($iter.$hasNext()) {
        var$2 = $a.data;
        var$4 = $i + 1 | 0;
        var$2[$i] = $iter.$next0();
        $i = var$4;
    }
    return $a;
}
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount1 = 0;
}
function ju_AbstractList__init_($this) {
    ju_AbstractCollection__init_($this);
}
function ju_AbstractList_iterator($this) {
    return ju_AbstractList$1__init_($this);
}
var jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
function jur_ReluctantCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_ReluctantCompositeQuantifierSet();
    jur_ReluctantCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_ReluctantCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
    jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type);
}
function jur_ReluctantCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $min, $max, $i, var$7, var$8;
    $min = $this.$quantifier.$min3();
    $max = $this.$quantifier.$max2();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$7 = $this.$next.$matches($stringIndex, $testString, $matchResult);
                    if (var$7 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
                        var$7 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$7 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$7 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$7;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$8 < 1)
            break;
        $stringIndex = $stringIndex + var$8 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
}
var cbgmo_CircleMapObject = $rt_classWithoutFields(cbgm_MapObject);
function jn_ByteBuffer() {
    var a = this; jn_Buffer.call(a);
    a.$start9 = 0;
    a.$array0 = null;
    a.$order = null;
}
function jn_ByteBuffer__init_($this, $start, $capacity, $array, $position, $limit) {
    jn_Buffer__init_($this, $capacity);
    jn_ByteOrder_$callClinit();
    $this.$order = jn_ByteOrder_BIG_ENDIAN;
    $this.$start9 = $start;
    $this.$array0 = $array;
    $this.$position2 = $position;
    $this.$limit = $limit;
}
function jn_ByteBuffer_allocateDirect($capacity) {
    var var$2, var$3;
    if ($capacity >= 0)
        return jn_ByteBufferImpl__init_($capacity, 1);
    var$2 = new jl_IllegalArgumentException;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(458)), $capacity);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$3));
    $rt_throw(var$2);
}
function jn_ByteBuffer_allocate($capacity) {
    var var$2, var$3;
    if ($capacity >= 0)
        return jn_ByteBufferImpl__init_($capacity, 0);
    var$2 = new jl_IllegalArgumentException;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(458)), $capacity);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$3));
    $rt_throw(var$2);
}
function jn_ByteBuffer_wrap0($array, $offset, $length) {
    return jn_ByteBufferImpl__init_0(0, $array.data.length, $array, $offset, $offset + $length | 0, 0, 0);
}
function jn_ByteBuffer_wrap($array) {
    return jn_ByteBuffer_wrap0($array, 0, $array.data.length);
}
function jn_ByteBuffer_get($this, $dst, $offset, $length) {
    var var$4, var$5, var$6, var$7, var$8, var$9, $pos, $i, var$12;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(459)), var$6), $rt_s(280)), var$5);
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            if (jn_Buffer_remaining($this) < $length)
                $rt_throw(jn_BufferUnderflowException__init_());
            if ($length < 0) {
                var$9 = new jl_IndexOutOfBoundsException;
                var$7 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(281)), $length), $rt_s(282));
                jl_IndexOutOfBoundsException__init_1(var$9, jl_StringBuilder_toString(var$7));
                $rt_throw(var$9);
            }
            $pos = $this.$position2 + $this.$start9 | 0;
            $i = 0;
            while ($i < $length) {
                var$6 = $offset + 1 | 0;
                var$12 = $this.$array0.data;
                var$5 = $pos + 1 | 0;
                var$4[$offset] = var$12[$pos];
                $i = $i + 1 | 0;
                $offset = var$6;
                $pos = var$5;
            }
            $this.$position2 = $this.$position2 + $length | 0;
            return $this;
        }
    }
    var$4 = $dst.data;
    var$9 = new jl_IndexOutOfBoundsException;
    var$5 = var$4.length;
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$7, $rt_s(283)), $offset), $rt_s(54)), var$5), 41);
    jl_IndexOutOfBoundsException__init_1(var$9, jl_StringBuilder_toString(var$7));
    $rt_throw(var$9);
}
function jn_ByteBuffer_get0($this, $dst) {
    return $this.$get12($dst, 0, $dst.data.length);
}
function jn_ByteBuffer_put0($this, $src, $offset, $length) {
    var var$4, var$5, var$6, var$7, var$8, $pos, $i, var$11;
    if (!$length)
        return $this;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($offset >= 0) {
        var$4 = $src.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            var$6 = $offset + $length | 0;
            if (var$6 > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(460)), var$6), $rt_s(280)), var$5);
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            if ($length < 0) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(281)), $length), $rt_s(282));
                jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
                $rt_throw(var$7);
            }
            $pos = $this.$position2 + $this.$start9 | 0;
            $i = 0;
            while ($i < $length) {
                var$11 = $this.$array0.data;
                var$6 = $pos + 1 | 0;
                var$5 = $offset + 1 | 0;
                var$11[$pos] = var$4[$offset];
                $i = $i + 1 | 0;
                $pos = var$6;
                $offset = var$5;
            }
            $this.$position2 = $this.$position2 + $length | 0;
            return $this;
        }
    }
    var$4 = $src.data;
    var$7 = new jl_IndexOutOfBoundsException;
    var$5 = var$4.length;
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(283)), $offset), $rt_s(54)), var$5), 41);
    jl_IndexOutOfBoundsException__init_1(var$7, jl_StringBuilder_toString(var$8));
    $rt_throw(var$7);
}
function jn_ByteBuffer_put($this, $src) {
    return $this.$put0($src, 0, $src.data.length);
}
function jn_ByteBuffer_hasArray($this) {
    return 1;
}
function jn_ByteBuffer_array($this) {
    return $this.$array0;
}
function jn_ByteBuffer_order($this, $bo) {
    $this.$order = $bo;
    return $this;
}
function jn_ByteBuffer_clear($this) {
    jn_Buffer_clear($this);
    return $this;
}
function jn_ByteBuffer_flip($this) {
    jn_Buffer_flip($this);
    return $this;
}
function jn_ByteBuffer_limit($this, $newLimit) {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
}
function jn_ByteBuffer_position($this, $newPosition) {
    jn_Buffer_position0($this, $newPosition);
    return $this;
}
function jn_ByteBuffer_flip0($this) {
    return jn_ByteBuffer_flip($this);
}
function jn_ByteBuffer_limit0($this, var$1) {
    return $this.$limit4(var$1);
}
function jn_ByteBuffer_position0($this, var$1) {
    return $this.$position1(var$1);
}
var jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet);
function jur_SOLSet__init_() {
    var var_0 = new jur_SOLSet();
    jur_SOLSet__init_0(var_0);
    return var_0;
}
function jur_SOLSet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_SOLSet_matches($this, $strIndex, $testString, $matchResult) {
    if ($strIndex && !($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound()))
        return (-1);
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_SOLSet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_SOLSet_getName($this) {
    return $rt_s(461);
}
function cbgm_Vector3() {
    var a = this; jl_Object.call(a);
    a.$x = 0.0;
    a.$y = 0.0;
    a.$z = 0.0;
}
var cbgm_Vector3_X = null;
var cbgm_Vector3_Y = null;
var cbgm_Vector3_Z = null;
var cbgm_Vector3_Zero = null;
var cbgm_Vector3_tmpMat = null;
function cbgm_Vector3_$callClinit() {
    cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
    cbgm_Vector3__clinit_();
}
function cbgm_Vector3__init_() {
    var var_0 = new cbgm_Vector3();
    cbgm_Vector3__init_0(var_0);
    return var_0;
}
function cbgm_Vector3__init_1(var_0, var_1, var_2) {
    var var_3 = new cbgm_Vector3();
    cbgm_Vector3__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgm_Vector3__init_0($this) {
    cbgm_Vector3_$callClinit();
    jl_Object__init_0($this);
}
function cbgm_Vector3__init_2($this, $x, $y, $z) {
    cbgm_Vector3_$callClinit();
    jl_Object__init_0($this);
    $this.$set0($x, $y, $z);
}
function cbgm_Vector3_set($this, $x, $y, $z) {
    $this.$x = $x;
    $this.$y = $y;
    $this.$z = $z;
    return $this;
}
function cbgm_Vector3_set0($this, $vector) {
    return $this.$set0($vector.$x, $vector.$y, $vector.$z);
}
function cbgm_Vector3_add($this, $vector) {
    return $this.$add9($vector.$x, $vector.$y, $vector.$z);
}
function cbgm_Vector3_add0($this, $x, $y, $z) {
    return $this.$set0($this.$x + $x, $this.$y + $y, $this.$z + $z);
}
function cbgm_Vector3_sub($this, $a_vec) {
    return $this.$sub0($a_vec.$x, $a_vec.$y, $a_vec.$z);
}
function cbgm_Vector3_sub0($this, $x, $y, $z) {
    return $this.$set0($this.$x - $x, $this.$y - $y, $this.$z - $z);
}
function cbgm_Vector3_scl($this, $scalar) {
    return $this.$set0($this.$x * $scalar, $this.$y * $scalar, $this.$z * $scalar);
}
function cbgm_Vector3_len2($this) {
    return $this.$x * $this.$x + $this.$y * $this.$y + $this.$z * $this.$z;
}
function cbgm_Vector3_nor($this) {
    var $len2;
    $len2 = $this.$len2();
    if ($len2 !== 0.0 && $len2 !== 1.0)
        return $this.$scl(1.0 / jl_Math_sqrt($len2));
    return $this;
}
function cbgm_Vector3_dot($this, $vector) {
    return $this.$x * $vector.$x + $this.$y * $vector.$y + $this.$z * $vector.$z;
}
function cbgm_Vector3_crs($this, $vector) {
    return $this.$set0($this.$y * $vector.$z - $this.$z * $vector.$y, $this.$z * $vector.$x - $this.$x * $vector.$z, $this.$x * $vector.$y - $this.$y * $vector.$x);
}
function cbgm_Vector3_crs0($this, $x, $y, $z) {
    return $this.$set0($this.$y * $z - $this.$z * $y, $this.$z * $x - $this.$x * $z, $this.$x * $y - $this.$y * $x);
}
function cbgm_Vector3__clinit_() {
    cbgm_Vector3_X = cbgm_Vector3__init_1(1.0, 0.0, 0.0);
    cbgm_Vector3_Y = cbgm_Vector3__init_1(0.0, 1.0, 0.0);
    cbgm_Vector3_Z = cbgm_Vector3__init_1(0.0, 0.0, 1.0);
    cbgm_Vector3_Zero = cbgm_Vector3__init_1(0.0, 0.0, 0.0);
    cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
}
function cbgm_Vector2() {
    var a = this; jl_Object.call(a);
    a.$x2 = 0.0;
    a.$y2 = 0.0;
}
var cbgm_Vector2_X = null;
var cbgm_Vector2_Y = null;
var cbgm_Vector2_Zero = null;
function cbgm_Vector2_$callClinit() {
    cbgm_Vector2_$callClinit = $rt_eraseClinit(cbgm_Vector2);
    cbgm_Vector2__clinit_();
}
function cbgm_Vector2__init_() {
    var var_0 = new cbgm_Vector2();
    cbgm_Vector2__init_0(var_0);
    return var_0;
}
function cbgm_Vector2__init_1(var_0, var_1) {
    var var_2 = new cbgm_Vector2();
    cbgm_Vector2__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Vector2__init_0($this) {
    cbgm_Vector2_$callClinit();
    jl_Object__init_0($this);
}
function cbgm_Vector2__init_2($this, $x, $y) {
    cbgm_Vector2_$callClinit();
    jl_Object__init_0($this);
    $this.$x2 = $x;
    $this.$y2 = $y;
}
function cbgm_Vector2__clinit_() {
    cbgm_Vector2_X = cbgm_Vector2__init_1(1.0, 0.0);
    cbgm_Vector2_Y = cbgm_Vector2__init_1(0.0, 1.0);
    cbgm_Vector2_Zero = cbgm_Vector2__init_1(0.0, 0.0);
}
var jl_ThreadInterruptHandler = $rt_classWithoutFields(0);
function cbgm_Vector4() {
    var a = this; jl_Object.call(a);
    a.$x3 = 0.0;
    a.$y3 = 0.0;
    a.$z0 = 0.0;
    a.$w = 0.0;
}
var cbgm_Vector4_X = null;
var cbgm_Vector4_Y = null;
var cbgm_Vector4_Z = null;
var cbgm_Vector4_W = null;
var cbgm_Vector4_Zero = null;
function cbgm_Vector4_$callClinit() {
    cbgm_Vector4_$callClinit = $rt_eraseClinit(cbgm_Vector4);
    cbgm_Vector4__clinit_();
}
function cbgm_Vector4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Vector4();
    cbgm_Vector4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Vector4__init_0($this, $x, $y, $z, $w) {
    cbgm_Vector4_$callClinit();
    jl_Object__init_0($this);
    $this.$set7($x, $y, $z, $w);
}
function cbgm_Vector4_set($this, $x, $y, $z, $w) {
    $this.$x3 = $x;
    $this.$y3 = $y;
    $this.$z0 = $z;
    $this.$w = $w;
    return $this;
}
function cbgm_Vector4__clinit_() {
    cbgm_Vector4_X = cbgm_Vector4__init_(1.0, 0.0, 0.0, 0.0);
    cbgm_Vector4_Y = cbgm_Vector4__init_(0.0, 1.0, 0.0, 0.0);
    cbgm_Vector4_Z = cbgm_Vector4__init_(0.0, 0.0, 1.0, 0.0);
    cbgm_Vector4_W = cbgm_Vector4__init_(0.0, 0.0, 0.0, 1.0);
    cbgm_Vector4_Zero = cbgm_Vector4__init_(0.0, 0.0, 0.0, 0.0);
}
var cbgggpi_DynamicsInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
function cgtrd_ChiSquareDistribution() {
    cgtrd_Distribution.call(this);
    this.$alpha4 = 0;
}
function cgtrd_ChiSquareDistribution__init_(var_0, var_1) {
    var var_2 = new cgtrd_ChiSquareDistribution();
    cgtrd_ChiSquareDistribution__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgtrd_ChiSquareDistribution__init_0($this, $generator, $alpha) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, 0.0, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(462)));
}
function cgtrd_ChiSquareDistribution_getMean($this) {
    return $this.$alpha4;
}
function cgtrd_ChiSquareDistribution_setParameters($this, $a, $b, $c) {
    if ($a < 1.0)
        return 0;
    $this.$alpha4 = $a | 0;
    return 1;
}
function cgtrd_ChiSquareDistribution_nextDouble($this) {
    return cgtrd_ChiSquareDistribution_sample($this.$generator, $this.$alpha4);
}
function cgtrd_ChiSquareDistribution_sample($generator, $alpha) {
    var $sum, $i;
    $sum = 0.0;
    $i = 0;
    while ($i < $alpha) {
        $sum = $sum + cgtd_MathTools_square($generator.$nextGaussian0());
        $i = $i + 1 | 0;
    }
    return $sum;
}
var cbgssa_RepeatAction = $rt_classWithoutFields(cbgssa_DelegateAction);
function cgtr_ScruffRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA3 = Long_ZERO;
    a.$stateB3 = Long_ZERO;
    a.$stateC1 = Long_ZERO;
    a.$stateD0 = Long_ZERO;
}
function cgtr_ScruffRandom__init_() {
    var var_0 = new cgtr_ScruffRandom();
    cgtr_ScruffRandom__init_0(var_0);
    return var_0;
}
function cgtr_ScruffRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$stateA3 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateB3 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateC1 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateD0 = cgtr_EnhancedRandom_seedFromMath();
}
function cgtr_ScruffRandom_nextLong($this) {
    var $fa, $fb, $fc, $fd;
    $fa = $this.$stateA3;
    $fb = $this.$stateB3;
    $fc = $this.$stateC1;
    $fd = $this.$stateD0;
    $this.$stateA3 = Long_add($fa, Long_create(2135587861, 2654435769));
    $this.$stateB3 = Long_mul($fd, Long_create(3733122965, 3509855555));
    $this.$stateC1 = Long_xor($fa, $fb);
    $this.$stateD0 = Long_or(Long_shl($fc, 21), Long_shru($fc, 43));
    return Long_sub($fd, $fc);
}
function cgtr_ScruffRandom_next($this, $bits) {
    var $fa, $fb, $fc, $fd;
    $fa = $this.$stateA3;
    $fb = $this.$stateB3;
    $fc = $this.$stateC1;
    $fd = $this.$stateD0;
    $this.$stateA3 = Long_add($fa, Long_create(2135587861, 2654435769));
    $this.$stateB3 = Long_mul($fd, Long_create(3733122965, 3509855555));
    $this.$stateC1 = Long_xor($fa, $fb);
    $this.$stateD0 = Long_or(Long_shl($fc, 21), Long_shru($fc, 43));
    return Long_lo(Long_sub($fd, $fc)) >>> (32 - $bits | 0) | 0;
}
function cbgur_Constructor() {
    jl_Object.call(this);
    this.$constructor0 = null;
}
function cbgur_Constructor__init_(var_0) {
    var var_1 = new cbgur_Constructor();
    cbgur_Constructor__init_0(var_1, var_0);
    return var_1;
}
function cbgur_Constructor__init_0($this, $constructor) {
    jl_Object__init_0($this);
    $this.$constructor0 = $constructor;
}
function cbgur_Constructor_getDeclaringClass($this) {
    return $this.$constructor0.$getDeclaringClass();
}
function cbgur_Constructor_setAccessible($this, $accessible) {
    $this.$constructor0.$setAccessible($accessible);
}
function cbgur_Constructor_newInstance($this, $args) {
    var var$2, $e, var$4, var$5, $$je;
    if ($args === null)
        $args = $rt_createArray(jl_Object, 0);
    a: {
        b: {
            c: {
                try {
                    var$2 = $this.$constructor0.$newInstance0($args);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_IllegalArgumentException) {
                        $e = $$je;
                        break c;
                    } else if ($$je instanceof jl_InstantiationException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jl_IllegalAccessException) {
                        $e = $$je;
                        break b;
                    } else if ($$je instanceof jlr_InvocationTargetException) {
                        $e = $$je;
                        var$2 = new cbgur_ReflectionException;
                        var$4 = (cbgur_Constructor_getDeclaringClass($this)).$getName();
                        var$5 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(463)), var$4);
                        cbgur_ReflectionException__init_(var$2, jl_StringBuilder_toString(var$5), $e);
                        $rt_throw(var$2);
                    } else {
                        throw $$e;
                    }
                }
                return var$2;
            }
            var$2 = new cbgur_ReflectionException;
            var$4 = (cbgur_Constructor_getDeclaringClass($this)).$getName();
            var$5 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(464)), var$4);
            cbgur_ReflectionException__init_(var$2, jl_StringBuilder_toString(var$5), $e);
            $rt_throw(var$2);
        }
        var$2 = new cbgur_ReflectionException;
        var$4 = (cbgur_Constructor_getDeclaringClass($this)).$getName();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(465)), var$4);
        cbgur_ReflectionException__init_(var$2, jl_StringBuilder_toString(var$5), $e);
        $rt_throw(var$2);
    }
    var$2 = new cbgur_ReflectionException;
    var$4 = (cbgur_Constructor_getDeclaringClass($this)).$getName();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(465)), var$4);
    cbgur_ReflectionException__init_(var$2, jl_StringBuilder_toString(var$5), $e);
    $rt_throw(var$2);
}
var cbgssu_DragAndDrop$Source = $rt_classWithoutFields();
function cgt_ProductNormalScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist6 = null;
    a.$dists = 0.0;
    a.$batch10 = null;
    a.$renderer9 = null;
    a.$amounts9 = null;
    a.$iterations9 = Long_ZERO;
    a.$font11 = null;
    a.$viewport9 = null;
    a.$mainGame9 = null;
}
function cgt_ProductNormalScreen__init_(var_0) {
    var var_1 = new cgt_ProductNormalScreen();
    cgt_ProductNormalScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ProductNormalScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font11 = $this.$mainGame9.$font0;
    a: {
        try {
            var$1 = new cgtrd_NormalDistribution;
            var$2 = $this.$mainGame9.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_NormalDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist6 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist6 = cgtrd_NormalDistribution__init_0($this.$mainGame9.$random0, 0.0, 1.0);
    }
    $this.$dists = jl_Math_max1(cgt_DistributorDemo_c, 1.0);
    $this.$batch10 = $this.$mainGame9.$batch0;
    $this.$viewport9 = cbguv_ScreenViewport__init_();
    $this.$renderer9 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts9, Long_ZERO);
    $this.$iterations9 = Long_ZERO;
}
function cgt_ProductNormalScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$dists = 1.0;
    $this.$amounts9 = $rt_createLongArray(512);
    $this.$iterations9 = Long_ZERO;
    $this.$mainGame9 = $main;
}
function cgt_ProductNormalScreen_render($this, $delta) {
    var $camera, var$3, $i, $md, $j, $m, var$8, $x, $color, var$11, var$12, var$13, var$14, var$15;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame9.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame9.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport9.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts9, Long_ZERO);
        $this.$iterations9 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts9, Long_ZERO);
        $this.$iterations9 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts9, Long_ZERO);
        $this.$iterations9 = Long_ZERO;
        $this.$dists = jl_Math_max1(cgt_DistributorDemo_c, 1.0);
    }
    $this.$iterations9 = Long_add($this.$iterations9, Long_fromInt(1));
    var$3 = $this.$dist6;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $md = $this.$dist6.$nextDouble();
        $j = 1;
        while ($j < $this.$dists) {
            $md = $md * $this.$dist6.$nextDouble();
            $j = $j + 1 | 0;
        }
        $m = $md * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$8 = $this.$amounts9.data;
            var$8[$m] = Long_add(var$8[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer9.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer9.$color($color);
        var$3 = $this.$renderer9;
        var$11 = $x;
        var$3.$vertex(var$11, 0.0, 0.0);
        $this.$renderer9.$color($color);
        $this.$renderer9.$vertex(var$11, Long_toNumber(Long_div($this.$amounts9.data[$x], $this.$iterations9)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer9.$color((-6.221923240859403E37));
        var$3 = $this.$renderer9;
        var$12 = $j;
        var$3.$vertex(0.0, var$12, 0.0);
        $this.$renderer9.$color((-6.221923240859403E37));
        $this.$renderer9.$vertex(10.0, var$12, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer9.$end();
    $this.$batch10.$setProjectionMatrix($camera.$combined);
    $this.$batch10.$begin0();
    var$3 = $this.$font11;
    var$13 = $this.$batch10;
    var$14 = $rt_createArray(jl_Object, 5);
    var$8 = var$14.data;
    var$15 = cgt_DistributorDemo_a;
    var$8[0] = jl_Double_valueOf(var$15);
    var$8[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$8[2] = jl_Double_valueOf(cgt_DistributorDemo_c);
    var$8[3] = jl_Double_valueOf($this.$dist6.$getMedian());
    var$8[4] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$13, cgt_Stringf_format($rt_s(466), var$14), 64.0, 522.0, 384.0, 1, 1);
    $this.$font11.$draw($this.$batch10, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font11.$draw($this.$batch10, $rt_s(467), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch10.$end();
}
function cgt_ProductNormalScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport9.$update0($width, $height, 1);
    $this.$viewport9.$apply(1);
}
var jl_String$_clinit_$lambda$_89_0 = $rt_classWithoutFields();
function jl_String$_clinit_$lambda$_89_0__init_() {
    var var_0 = new jl_String$_clinit_$lambda$_89_0();
    jl_String$_clinit_$lambda$_89_0__init_0(var_0);
    return var_0;
}
function jl_String$_clinit_$lambda$_89_0__init_0(var$0) {
    jl_Object__init_0(var$0);
}
function jn_ShortBufferOverArray() {
    var a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly6 = 0;
    a.$start10 = 0;
    a.$array5 = null;
}
function jn_ShortBufferOverArray__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverArray();
    jn_ShortBufferOverArray__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverArray__init_0($this, $start, $capacity, $array, $position, $limit, $readOnly) {
    jn_ShortBufferImpl__init_($this, $capacity, $position, $limit);
    $this.$start10 = $start;
    $this.$readOnly6 = $readOnly;
    $this.$array5 = $array;
}
function jn_ShortBufferOverArray_getElement($this, $index) {
    return $this.$array5.data[$index + $this.$start10 | 0];
}
function jn_ShortBufferOverArray_putElement($this, $index, $value) {
    $this.$array5.data[$index + $this.$start10 | 0] = $value;
}
function jn_ShortBufferOverArray_readOnly($this) {
    return $this.$readOnly6;
}
var cbgggp_ParticleEffect = $rt_classWithoutFields();
function cgtrd_LumpDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha5 = 0.0;
    a.$beta1 = 0.0;
}
function cgtrd_LumpDistribution__init_0(var_0, var_1, var_2) {
    var var_3 = new cgtrd_LumpDistribution();
    cgtrd_LumpDistribution__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_LumpDistribution__init_($this, $generator, $alpha, $beta) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(395)));
}
function cgtrd_LumpDistribution_setParameters($this, $a, $b, $c) {
    if ($a === $a && $b === $b) {
        $this.$alpha5 = $a;
        $this.$beta1 = $b;
        return 1;
    }
    return 0;
}
function cgtrd_LumpDistribution_nextDouble($this) {
    return cgtrd_LumpDistribution_sample($this.$generator, $this.$alpha5, $this.$beta1);
}
function cgtrd_LumpDistribution_sample($generator, $alpha, $beta) {
    var var$4, var$5;
    var$4 = $generator.$nextGaussian0() - $alpha;
    var$5 = $generator.$nextGaussian0() + $beta;
    return cgtd_TrigTools_atan2Turns(var$4, var$5);
}
var jlr_Modifier = $rt_classWithoutFields();
var jlr_Modifier_modifierNames = null;
var jlr_Modifier_canonicalOrder = null;
function jlr_Modifier_$callClinit() {
    jlr_Modifier_$callClinit = $rt_eraseClinit(jlr_Modifier);
    jlr_Modifier__clinit_();
}
function jlr_Modifier_isPublic($mod) {
    jlr_Modifier_$callClinit();
    return !($mod & 1) ? 0 : 1;
}
function jlr_Modifier_toString($mod) {
    var $sb, $modifierNames, $index, var$5, var$6, var$7, $modifier;
    jlr_Modifier_$callClinit();
    $sb = jl_StringBuilder__init_();
    $modifierNames = jlr_Modifier_getModifierNames();
    $index = 0;
    var$5 = jlr_Modifier_canonicalOrder.data;
    var$6 = var$5.length;
    var$7 = 0;
    while (var$7 < var$6) {
        $modifier = var$5[var$7];
        if ($mod & $modifier) {
            if ($sb.$length() > 0)
                $sb.$append0(32);
            $sb.$append1($modifierNames.data[$index]);
        }
        $index = $index + 1 | 0;
        var$7 = var$7 + 1 | 0;
    }
    return $sb.$toString();
}
function jlr_Modifier_getModifierNames() {
    jlr_Modifier_$callClinit();
    if (jlr_Modifier_modifierNames === null)
        jlr_Modifier_modifierNames = $rt_createArrayFromData(jl_String, [$rt_s(468), $rt_s(469), $rt_s(470), $rt_s(471), $rt_s(472), $rt_s(473), $rt_s(474), $rt_s(475), $rt_s(476), $rt_s(477), $rt_s(478), $rt_s(479)]);
    return jlr_Modifier_modifierNames;
}
function jlr_Modifier__clinit_() {
    jlr_Modifier_canonicalOrder = $rt_createIntArrayFromData([1, 4, 2, 1024, 8, 16, 128, 64, 32, 256, 2048, 512]);
}
var cbgi_GestureDetector$GestureListener = $rt_classWithoutFields(0);
function cgt_DistributorDemo() {
    var a = this; cbg_Game.call(a);
    a.$screens = null;
    a.$alternateCauchy = null;
    a.$alternateArcsine = null;
    a.$alternateNormal = null;
    a.$alternateTriangular = null;
    a.$screenIndex = 0;
    a.$randoms = null;
    a.$randomIndex = 0;
    a.$random0 = null;
    a.$font0 = null;
    a.$batch0 = null;
}
var cgt_DistributorDemo_a = 0.0;
var cgt_DistributorDemo_b = 0.0;
var cgt_DistributorDemo_c = 0.0;
function cgt_DistributorDemo_$callClinit() {
    cgt_DistributorDemo_$callClinit = $rt_eraseClinit(cgt_DistributorDemo);
    cgt_DistributorDemo__clinit_();
}
function cgt_DistributorDemo__init_() {
    var var_0 = new cgt_DistributorDemo();
    cgt_DistributorDemo__init_0(var_0);
    return var_0;
}
function cgt_DistributorDemo__init_0($this) {
    cgt_DistributorDemo_$callClinit();
    cbg_Game__init_($this);
    $this.$randoms = $rt_createArrayFromData(cgtr_EnhancedRandom, [cgtr_Respite32Random__init_(), cgtr_Jsf32Random__init_(), cgtr_ChopRandom__init_(), cgt_RandomRandom__init_(), cgtr_WhiskerRandom__init_(), cgtr_AceRandom__init_(), cgtr_PouchRandom__init_(), cgtr_ScruffRandom__init_(), cgtr_MizuchiRandom__init_(), cgtr_Xoshiro128PlusPlusRandom__init_(), cgtr_LaserRandom__init_(), cgtr_TrimRandom__init_(), cgtr_DistinctRandom__init_(), cgtr_GoldenQuasiRandom__init_(), cgtr_VanDerCorputQuasiRandom__init_(), cgtr_LowChangeQuasiRandom__init_(),
    cgtr_TupleQuasiRandom__init_(Long_ZERO)]);
    $this.$randomIndex = 0;
    $this.$random0 = $this.$randoms.data[$this.$randomIndex];
}
function cgt_DistributorDemo_create($this) {
    var var$1;
    cbg_Gdx_app.$setLogLevel(1);
    $this.$font0 = cbggg_BitmapFont__init_(cbg_Gdx_files.$internal($rt_s(480)));
    var$1 = $this.$font0;
    cbgg_Color_$callClinit();
    var$1.$setColor(cbgg_Color_BLACK);
    $this.$batch0 = cbggg_SpriteBatch__init_();
    $this.$alternateCauchy = cgt_CauchyAlternateScreen__init_($this);
    $this.$alternateArcsine = cgt_ArcsineAlternateScreen__init_($this);
    $this.$alternateNormal = cgt_NormalAlternateScreen__init_($this);
    $this.$alternateTriangular = cgt_TriangleVariantsScreen__init_($this);
    $this.$screens = $rt_createArrayFromData(cbg_Screen, [cgt_BetaScreen__init_($this), cgt_KumaraswamyScreen__init_($this), cgt_LumpScreen__init_($this), cgt_NormalScreen__init_($this), cgt_RaisedNormalScreen__init_($this), cgt_ProductNormalScreen__init_($this), cgt_CauchyScreen__init_($this), cgt_LogCauchyScreen__init_($this), cgt_ErlangScreen__init_($this), cgt_ExponentialScreen__init_($this), cgt_ParetoScreen__init_($this), cgt_PowerScreen__init_($this), cgt_ChiScreen__init_($this), cgt_ChiSquareScreen__init_($this),
    cgt_StudentsTScreen__init_($this), cgt_ArcsineScreen__init_($this), cgt_BinomialScreen__init_($this), cgt_ZipfianScreen__init_($this), cgt_TriangularScreen__init_($this), cgt_KnobScreen__init_($this), cgt_GdxSinScreen__init_($this), cgt_MathSinScreen__init_($this), cgt_DigitalSinScreen__init_($this), cgt_DigitalSinSmoothScreen__init_($this), cgt_DigitalSinSmootherScreen__init_($this)]);
    $this.$screenIndex = $this.$screens.data.length - 5 | 0;
    $this.$setScreen($this.$screens.data[$this.$screenIndex]);
}
function cgt_DistributorDemo_nextScreen($this) {
    $this.$screenIndex = ($this.$screenIndex + 1 | 0) % $this.$screens.data.length | 0;
    $this.$setScreen($this.$screens.data[$this.$screenIndex]);
}
function cgt_DistributorDemo_previousScreen($this) {
    $this.$screenIndex = (($this.$screenIndex + $this.$screens.data.length | 0) - 1 | 0) % $this.$screens.data.length | 0;
    $this.$setScreen($this.$screens.data[$this.$screenIndex]);
}
function cgt_DistributorDemo_render($this) {
    var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    cbg_Game_render($this);
    if (cbg_Gdx_input.$isKeyPressed(55)) {
        $this.$batch0.$begin0();
        var$1 = $this.$font0;
        var$2 = $this.$batch0;
        var$3 = cbg_Gdx_graphics.$getFramesPerSecond();
        var$4 = jl_String_valueOf0(jl_Object_getClass($this.$random0));
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$5, var$3), $rt_s(481)), var$4);
        var$5 = jl_StringBuilder_toString(var$5);
        var$4 = cbg_Gdx_graphics;
        var$6 = var$4.$getBackBufferHeight() * 0.5;
        var$7 = cbg_Gdx_graphics.$getBackBufferWidth();
        var$1.$draw(var$2, var$5, 0.0, var$6, var$7, 1, 0);
        $this.$batch0.$end();
    } else if (cbg_Gdx_input.$isKeyJustPressed(16)) {
        var$8 = $this.$randoms.data;
        var$3 = (($this.$randomIndex + $this.$randoms.data.length | 0) - 1 | 0) % $this.$randoms.data.length | 0;
        $this.$randomIndex = var$3;
        $this.$random0 = var$8[var$3];
        $this.$setScreen($this.$screens.data[$this.$screenIndex]);
    } else if (cbg_Gdx_input.$isKeyJustPressed(7)) {
        var$8 = $this.$randoms.data;
        var$3 = ($this.$randomIndex + 1 | 0) % $this.$randoms.data.length | 0;
        $this.$randomIndex = var$3;
        $this.$random0 = var$8[var$3];
        $this.$setScreen($this.$screens.data[$this.$screenIndex]);
    }
}
function cgt_DistributorDemo__clinit_() {
    cgt_DistributorDemo_a = 1.0;
    cgt_DistributorDemo_b = 1.0;
    cgt_DistributorDemo_c = 1.0;
}
function cgtd_Base() {
    var a = this; jl_Object.call(a);
    a.$toEncoded = null;
    a.$fromEncoded = null;
    a.$paddingChar = 0;
    a.$positiveSign = 0;
    a.$negativeSign = 0;
    a.$caseInsensitive = 0;
    a.$base0 = 0;
    a.$length1Byte = 0;
    a.$length2Byte = 0;
    a.$length4Byte = 0;
    a.$length8Byte = 0;
    a.$progress = null;
}
var cgtd_Base_BASE2 = null;
var cgtd_Base_BASE8 = null;
var cgtd_Base_BASE10 = null;
var cgtd_Base_BASE16 = null;
var cgtd_Base_BASE36 = null;
var cgtd_Base_BASE64 = null;
var cgtd_Base_URI_SAFE = null;
var cgtd_Base_SIMPLE64 = null;
var cgtd_Base_BASE86 = null;
var cgtd_Base_BASES = null;
var cgtd_Base_long2D = null;
var cgtd_Base_int2D = null;
var cgtd_Base_short2D = null;
var cgtd_Base_byte2D = null;
var cgtd_Base_char2D = null;
var cgtd_Base_double2D = null;
var cgtd_Base_float2D = null;
function cgtd_Base_$callClinit() {
    cgtd_Base_$callClinit = $rt_eraseClinit(cgtd_Base);
    cgtd_Base__clinit_();
}
function cgtd_Base__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cgtd_Base();
    cgtd_Base__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cgtd_Base__init_0($this, $digits, $caseInsensitive, $padding, $positiveSign, $negativeSign) {
    var $i, $to, $logBase;
    cgtd_Base_$callClinit();
    jl_Object__init_0($this);
    $this.$paddingChar = $padding;
    $this.$caseInsensitive = $caseInsensitive;
    $this.$positiveSign = $positiveSign;
    $this.$negativeSign = $negativeSign;
    $this.$toEncoded = $digits.$toCharArray();
    $this.$base0 = $this.$toEncoded.data.length;
    $this.$fromEncoded = $rt_createIntArray(128);
    ju_Arrays_fill0($this.$fromEncoded, (-1));
    $i = 0;
    while ($i < $this.$base0) {
        $to = $this.$toEncoded.data[$i];
        $this.$fromEncoded.data[$to & 127] = $i;
        if ($caseInsensitive)
            $this.$fromEncoded.data[jl_Character_toLowerCase0($to) & 127] = $i;
        $i = $i + 1 | 0;
    }
    $logBase = 1.0 / jl_Math_log($this.$base0);
    $this.$length1Byte = jl_Math_ceil(jl_Math_log(256.0) * $logBase) | 0;
    $this.$length2Byte = jl_Math_ceil(jl_Math_log(65536.0) * $logBase) | 0;
    $this.$length4Byte = jl_Math_ceil(jl_Math_log(4.294967296E9) * $logBase) | 0;
    $this.$length8Byte = jl_Math_ceil(jl_Math_log(1.8446744073709552E19) * $logBase) | 0;
    $this.$progress = $rt_createCharArray(jl_Math_max($this.$length8Byte + 1 | 0, 32));
}
function cgtd_Base_unsigned($this, $number) {
    var $len, $halfBase, $i, $quotient;
    $len = $this.$length8Byte - 1 | 0;
    $halfBase = $this.$base0 >>> 1 | 0;
    $i = 0;
    while ($i <= $len) {
        $quotient = Long_div(Long_shru($number, 1), Long_fromInt($halfBase));
        $this.$progress.data[$len - $i | 0] = $this.$toEncoded.data[Long_lo(Long_sub($number, Long_mul($quotient, Long_fromInt($this.$base0))))];
        $i = $i + 1 | 0;
        $number = $quotient;
    }
    return jl_String_valueOf1($this.$progress, 0, $this.$length8Byte);
}
function cgtd_Base_appendUnsigned($this, $builder, $number) {
    var $len, $halfBase, $i, $quotient;
    $len = $this.$length8Byte - 1 | 0;
    $halfBase = $this.$base0 >>> 1 | 0;
    $i = 0;
    while ($i <= $len) {
        $quotient = Long_div(Long_shru($number, 1), Long_fromInt($halfBase));
        $this.$progress.data[$len - $i | 0] = $this.$toEncoded.data[Long_lo(Long_sub($number, Long_mul($quotient, Long_fromInt($this.$base0))))];
        $i = $i + 1 | 0;
        $number = $quotient;
    }
    return $builder.$append20($this.$progress, 0, $this.$length8Byte);
}
function cgtd_Base_signed($this, $number) {
    var $run, $sign, var$4, var$5;
    $run = $this.$length8Byte;
    $sign = Long_shr($number, (-1));
    var$4 = Long_neg(Long_xor(Long_add($number, $sign), $sign));
    while (true) {
        $this.$progress.data[$run] = $this.$toEncoded.data[Long_lo(Long_neg(Long_rem(var$4, Long_fromInt($this.$base0))))];
        var$4 = Long_div(var$4, Long_fromInt($this.$base0));
        if (Long_eq(var$4, Long_ZERO))
            break;
        $run = $run + (-1) | 0;
    }
    if (Long_ne($sign, Long_ZERO)) {
        var$5 = $this.$progress.data;
        $run = $run + (-1) | 0;
        var$5[$run] = $this.$negativeSign;
    }
    return jl_String_valueOf1($this.$progress, $run, ($this.$length8Byte + 1 | 0) - $run | 0);
}
function cgtd_Base_readInt($this, $cs, $start, $end) {
    var var$4, $c, $h, $lim, $i, var$9, var$10;
    if ($start >= 0 && $end > 0 && ($end - $start | 0) > 0) {
        var$4 = $cs.$length();
        if ((var$4 - $start | 0) > 0 && $end <= var$4) {
            $c = $cs.$charAt($start);
            if ($c == $this.$negativeSign) {
                var$4 = (-1);
                $h = 0;
                $lim = $this.$length4Byte + 1 | 0;
            } else if ($c == $this.$positiveSign) {
                var$4 = 1;
                $h = 0;
                $lim = $this.$length4Byte + 1 | 0;
            } else {
                $h = $this.$fromEncoded.data[$c & 127];
                if ($h < 0)
                    return 0;
                var$4 = 1;
                $lim = $this.$length4Byte;
            }
            $i = $start + 1 | 0;
            while ($i < $end && $i < ($start + $lim | 0)) {
                var$9 = $this.$fromEncoded.data[$cs.$charAt($i) & 127];
                if (var$9 < 0)
                    return $rt_imul($h, var$4);
                var$10 = $rt_imul($h, $this.$base0);
                $h = var$10 + var$9 | 0;
                $i = $i + 1 | 0;
            }
            return $rt_imul($h, var$4);
        }
    }
    return 0;
}
function cgtd_Base_decimal($this, $number) {
    return cgtd_RyuDouble_decimal($number);
}
function cgtd_Base_appendDecimal($this, $builder, $number) {
    return cgtd_RyuDouble_appendDecimal($builder, $number);
}
function cgtd_Base__clinit_() {
    cgtd_Base_BASE2 = cgtd_Base__init_($rt_s(482), 1, 36, 43, 45);
    cgtd_Base_BASE8 = cgtd_Base__init_($rt_s(483), 1, 36, 43, 45);
    cgtd_Base_BASE10 = cgtd_Base__init_($rt_s(484), 1, 36, 43, 45);
    cgtd_Base_BASE16 = cgtd_Base__init_($rt_s(485), 1, 112, 43, 45);
    cgtd_Base_BASE36 = cgtd_Base__init_($rt_s(486), 1, 36, 43, 45);
    cgtd_Base_BASE64 = cgtd_Base__init_($rt_s(487), 0, 61, 42, 45);
    cgtd_Base_URI_SAFE = cgtd_Base__init_($rt_s(488), 0, 36, 42, 33);
    cgtd_Base_SIMPLE64 = cgtd_Base__init_($rt_s(489), 0, 36, 43, 45);
    cgtd_Base_BASE86 = cgtd_Base__init_($rt_s(490), 0, 92, 43, 45);
    cgtd_Base_BASES = ju_Arrays_asList($rt_createArrayFromData(cgtd_Base, [cgtd_Base_BASE2, cgtd_Base_BASE8, cgtd_Base_BASE10, cgtd_Base_BASE16, cgtd_Base_BASE36, cgtd_Base_BASE64, cgtd_Base_URI_SAFE, cgtd_Base_SIMPLE64, cgtd_Base_BASE86]));
    cgtd_Base_long2D = $rt_createLongMultiArray([0, 0]);
    cgtd_Base_int2D = $rt_createIntMultiArray([0, 0]);
    cgtd_Base_short2D = $rt_createShortMultiArray([0, 0]);
    cgtd_Base_byte2D = $rt_createByteMultiArray([0, 0]);
    cgtd_Base_char2D = $rt_createCharMultiArray([0, 0]);
    cgtd_Base_double2D = $rt_createDoubleMultiArray([0, 0]);
    cgtd_Base_float2D = $rt_createFloatMultiArray([0, 0]);
}
var cbgggpv_MeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue);
var cbgggpv_UnweightedMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue);
var jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var ju_AbstractMap = $rt_classWithoutFields();
function ju_AbstractMap__init_($this) {
    jl_Object__init_0($this);
}
function ju_HashMap() {
    var a = this; ju_AbstractMap.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$modCount2 = 0;
    a.$loadFactor0 = 0.0;
    a.$threshold0 = 0;
}
function ju_HashMap__init_() {
    var var_0 = new ju_HashMap();
    ju_HashMap__init_0(var_0);
    return var_0;
}
function ju_HashMap__init_1(var_0) {
    var var_1 = new ju_HashMap();
    ju_HashMap__init_2(var_1, var_0);
    return var_1;
}
function ju_HashMap__init_3(var_0, var_1) {
    var var_2 = new ju_HashMap();
    ju_HashMap__init_4(var_2, var_0, var_1);
    return var_2;
}
function ju_HashMap_newElementArray($this, $s) {
    return $rt_createArray(ju_HashMap$HashEntry, $s);
}
function ju_HashMap__init_0($this) {
    ju_HashMap__init_2($this, 16);
}
function ju_HashMap__init_2($this, $capacity) {
    ju_HashMap__init_4($this, $capacity, 0.75);
}
function ju_HashMap_calculateCapacity($x) {
    var var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
}
function ju_HashMap__init_4($this, $capacity, $loadFactor) {
    var var$3;
    ju_AbstractMap__init_($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = ju_HashMap_calculateCapacity($capacity);
        $this.$elementCount0 = 0;
        $this.$elementData0 = $this.$newElementArray0(var$3);
        $this.$loadFactor0 = $loadFactor;
        ju_HashMap_computeThreshold($this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
}
function ju_HashMap_computeThreshold($this) {
    $this.$threshold0 = $this.$elementData0.data.length * $this.$loadFactor0 | 0;
}
function ju_HashMap_get($this, $key) {
    var $m;
    $m = ju_HashMap_getEntry($this, $key);
    if ($m === null)
        return null;
    return $m.$value2;
}
function ju_HashMap_getEntry($this, $key) {
    var $m, $hash, $index;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData0.data.length - 1 | 0);
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    return $m;
}
function ju_HashMap_findNonNullKeyEntry($this, $key, $index, $keyHash) {
    var $m;
    $m = $this.$elementData0.data[$index];
    while ($m !== null && !($m.$origKeyHash == $keyHash && ju_HashMap_areEqualKeys($key, $m.$key))) {
        $m = $m.$next3;
    }
    return $m;
}
function ju_HashMap_findNullKeyEntry($this) {
    var $m;
    $m = $this.$elementData0.data[0];
    while ($m !== null && $m.$key !== null) {
        $m = $m.$next3;
    }
    return $m;
}
function ju_HashMap_put($this, $key, $value) {
    return $this.$putImpl($key, $value);
}
function ju_HashMap_putImpl($this, $key, $value) {
    var $entry, var$4, $hash, $index, $result;
    if ($key === null) {
        $entry = ju_HashMap_findNullKeyEntry($this);
        if ($entry === null) {
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            $entry = $this.$createHashedEntry(null, 0, 0);
            var$4 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$4;
            if (var$4 > $this.$threshold0)
                $this.$rehash();
        }
    } else {
        $hash = ju_HashMap_computeHashCode($key);
        $index = $hash & ($this.$elementData0.data.length - 1 | 0);
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($entry === null) {
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            $entry = $this.$createHashedEntry($key, $index, $hash);
            var$4 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$4;
            if (var$4 > $this.$threshold0)
                $this.$rehash();
        }
    }
    $result = $entry.$value2;
    $entry.$value2 = $value;
    return $result;
}
function ju_HashMap_createHashedEntry($this, $key, $index, $hash) {
    var $entry;
    $entry = ju_HashMap$HashEntry__init_($key, $hash);
    $entry.$next3 = $this.$elementData0.data[$index];
    $this.$elementData0.data[$index] = $entry;
    return $entry;
}
function ju_HashMap_rehash($this, $capacity) {
    var $length, $newData, $i, $entry, var$6, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $this.$newElementArray0($length);
    $i = 0;
    while ($i < $this.$elementData0.data.length) {
        $entry = $this.$elementData0.data[$i];
        $this.$elementData0.data[$i] = null;
        while ($entry !== null) {
            var$6 = $newData.data;
            $index = $entry.$origKeyHash & ($length - 1 | 0);
            $next = $entry.$next3;
            $entry.$next3 = var$6[$index];
            var$6[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData0 = $newData;
    ju_HashMap_computeThreshold($this);
}
function ju_HashMap_rehash0($this) {
    $this.$rehash0($this.$elementData0.data.length);
}
function ju_HashMap_remove($this, $key) {
    var $entry;
    $entry = ju_HashMap_removeEntry($this, $key);
    if ($entry === null)
        return null;
    return $entry.$value2;
}
function ju_HashMap_removeEntry($this, $key) {
    var $index, $last, $entry, $entry_0, $hash;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData0.data[0];
            while ($entry !== null) {
                if ($entry.$key === null)
                    break a;
                $entry_0 = $entry.$next3;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            $hash = ju_HashMap_computeHashCode($key);
            $index = $hash & ($this.$elementData0.data.length - 1 | 0);
            $entry = $this.$elementData0.data[$index];
            while ($entry !== null && !($entry.$origKeyHash == $hash && ju_HashMap_areEqualKeys($key, $entry.$key))) {
                $entry_0 = $entry.$next3;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next3 = $entry.$next3;
    else
        $this.$elementData0.data[$index] = $entry.$next3;
    $this.$modCount2 = $this.$modCount2 + 1 | 0;
    $this.$elementCount0 = $this.$elementCount0 - 1 | 0;
    return $entry;
}
function ju_HashMap_computeHashCode($key) {
    return $key.$hashCode0();
}
function ju_HashMap_areEqualKeys($key1, $key2) {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
}
function cbgu_FloatArray() {
    var a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size3 = 0;
    a.$ordered0 = 0;
}
function cbgu_FloatArray__init_() {
    var var_0 = new cbgu_FloatArray();
    cbgu_FloatArray__init_0(var_0);
    return var_0;
}
function cbgu_FloatArray__init_1(var_0, var_1) {
    var var_2 = new cbgu_FloatArray();
    cbgu_FloatArray__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_FloatArray__init_0($this) {
    cbgu_FloatArray__init_2($this, 1, 16);
}
function cbgu_FloatArray__init_2($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered0 = $ordered;
    $this.$items1 = $rt_createFloatArray($capacity);
}
function cbgu_FloatArray_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items1;
    var$3 = $items.data;
    if ($this.$size3 == var$3.length)
        $items = $this.$resize1(jl_Math_max(8, $this.$size3 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size3;
    $this.$size3 = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function cbgu_FloatArray_addAll($this, $array) {
    $this.$addAll0($array.$items1, 0, $array.$size3);
}
function cbgu_FloatArray_addAll0($this, $array, $offset, $length) {
    if (($offset + $length | 0) <= $array.$size3) {
        $this.$addAll0($array.$items1, $offset, $length);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((((((jl_StringBuilder__init_()).$append1($rt_s(491))).$append2($offset)).$append1($rt_s(301))).$append2($length)).$append1($rt_s(302))).$append2($array.$size3)).$toString()));
}
function cbgu_FloatArray_addAll1($this, $array, $offset, $length) {
    var $items, var$5, $sizeNeeded;
    $items = $this.$items1;
    var$5 = $items.data;
    $sizeNeeded = $this.$size3 + $length | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize1(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size3 * 1.75 | 0));
    jl_System_arraycopy($array, $offset, $items, $this.$size3, $length);
    $this.$size3 = $this.$size3 + $length | 0;
}
function cbgu_FloatArray_get($this, $index) {
    if ($index < $this.$size3)
        return $this.$items1.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(303))).$append2($index)).$append1($rt_s(304))).$append2($this.$size3)).$toString()));
}
function cbgu_FloatArray_removeRange($this, $start, $end) {
    var $n, $count, $lastIndex, var$6, var$7, $i;
    $n = $this.$size3;
    if ($end >= $n)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(305))).$append2($end)).$append1($rt_s(304))).$append2($this.$size3)).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(306))).$append2($start)).$append1($rt_s(307))).$append2($end)).$toString()));
    $count = ($end - $start | 0) + 1 | 0;
    $lastIndex = $n - $count | 0;
    if ($this.$ordered0) {
        var$6 = $this.$items1;
        var$7 = $start + $count | 0;
        jl_System_arraycopy(var$6, var$7, $this.$items1, $start, $n - var$7 | 0);
    } else {
        $i = jl_Math_max($lastIndex, $end + 1 | 0);
        jl_System_arraycopy($this.$items1, $i, $this.$items1, $start, $n - $i | 0);
    }
    $this.$size3 = $lastIndex;
}
function cbgu_FloatArray_first($this) {
    if (!$this.$size3)
        $rt_throw(jl_IllegalStateException__init_($rt_s(308)));
    return $this.$items1.data[0];
}
function cbgu_FloatArray_notEmpty($this) {
    return $this.$size3 <= 0 ? 0 : 1;
}
function cbgu_FloatArray_clear($this) {
    $this.$size3 = 0;
}
function cbgu_FloatArray_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(309))).$append2($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size3 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items1.data.length)
        $this.$resize1(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size3 * 1.75 | 0));
    return $this.$items1;
}
function cbgu_FloatArray_resize($this, $newSize) {
    var $newItems, var$3, $items;
    $newItems = $rt_createFloatArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items1;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size3, var$3.length));
    $this.$items1 = $newItems;
    return $newItems;
}
function cbgu_FloatArray_truncate($this, $newSize) {
    if ($this.$size3 > $newSize)
        $this.$size3 = $newSize;
}
var cbgssu_TextTooltip = $rt_classWithoutFields(cbgssu_Tooltip);
var cbgssu_ImageTextButton = $rt_classWithoutFields(cbgssu_Button);
var cbgssa_RotateByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
function cgxgbtp_Preloader() {
    var a = this; jl_Object.call(a);
    a.$directories = null;
    a.$images = null;
    a.$audio0 = null;
    a.$texts = null;
    a.$binaries = null;
    a.$assets = null;
    a.$assetTotal = 0;
    a.$baseUrl = null;
}
function cgxgbtp_Preloader__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbtp_Preloader();
    cgxgbtp_Preloader__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbtp_Preloader__init_0($this, $newBaseURL, $canvas, $teaApplication) {
    jl_Object__init_0($this);
    $this.$directories = cbgu_ObjectMap__init_();
    $this.$images = cbgu_ObjectMap__init_();
    $this.$audio0 = cbgu_ObjectMap__init_();
    $this.$texts = cbgu_ObjectMap__init_();
    $this.$binaries = cbgu_ObjectMap__init_();
    $this.$assets = cbgu_Array__init_();
    $this.$assetTotal = (-1);
    $this.$baseUrl = $newBaseURL;
    cgxgbtp_Preloader_setupFileDrop($this, $canvas, $teaApplication);
}
function cgxgbtp_Preloader_setupFileDrop($this, $canvas, $teaApplication) {
    var $config, $document, var$5;
    $config = $teaApplication.$getConfig();
    if ($config.$windowListener !== null) {
        $document = $canvas.ownerDocument;
        var$5 = cgxgbtp_Preloader$1__init_($this);
        $document.addEventListener("dragenter", otji_JS_function(var$5, "handleEvent"), !!0);
        var$5 = cgxgbtp_Preloader$2__init_($this);
        $document.addEventListener("dragover", otji_JS_function(var$5, "handleEvent"), !!0);
        var$5 = cgxgbtp_Preloader$3__init_($this, $teaApplication, $config);
        $document.addEventListener("drop", otji_JS_function(var$5, "handleEvent"));
    }
}
function cgxgbtp_Preloader_getAssetUrl($this) {
    var var$1, var$2;
    var$1 = $this.$baseUrl;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$1), $rt_s(492));
    return jl_StringBuilder_toString(var$2);
}
function cgxgbtp_Preloader_preload($this, $loadAssets, $assetFileUrl) {
    var var$3, var$4, var$5;
    var$3 = cgxgbtp_AssetDownloader_getInstance();
    var$4 = $this.$getAssetUrl();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $assetFileUrl);
    var$3.$loadText(1, jl_StringBuilder_toString(var$5), cgxgbtp_Preloader$4__init_($this, $assetFileUrl, $loadAssets));
}
function cgxgbtp_Preloader_loadSingleAsset($this, $asset) {
    if ($this.$contains1($asset.$url)) {
        $asset.$loaded = $asset.$size4;
        $asset.$succeed = 1;
        $asset.$failed = 0;
        $asset.$isLoading = 0;
        return 0;
    }
    if ($asset.$isLoading)
        return 0;
    $asset.$failed = 0;
    $asset.$succeed = 0;
    $asset.$isLoading = 1;
    $this.$loadAsset(1, $asset.$url, $asset.$type4, $asset.$mimeType, cgxgbtp_Preloader$5__init_($this, $asset));
    return 1;
}
function cgxgbtp_Preloader_loadAsset($this, $async, $url, $type, $mimeType, $listener) {
    var var$6, var$7, var$8;
    var$6 = cgxgbtp_AssetDownloader_getInstance();
    var$7 = $this.$getAssetUrl();
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$8, var$7), $url);
    var$6.$load2($async, jl_StringBuilder_toString(var$8), $type, $mimeType, cgxgbtp_Preloader$7__init_($this, $listener, $type, $url));
}
function cgxgbtp_Preloader_loadScript($this, $async, $url, $listener) {
    var var$4, var$5, var$6;
    var$4 = cgxgbtp_AssetDownloader_getInstance();
    var$5 = $this.$baseUrl;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$5), $url);
    var$4.$loadScript($async, jl_StringBuilder_toString(var$6), $listener);
}
function cgxgbtp_Preloader_putAssetInMap($this, $type, $url, $result) {
    a: {
        cgxgbtp_Preloader$12_$callClinit();
        switch (cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal($type)]) {
            case 1:
                break;
            case 2:
                $this.$images.$put1($url, $result);
                break a;
            case 3:
                $this.$binaries.$put1($url, $result);
                break a;
            case 4:
                $this.$audio0.$put1($url, $result);
                break a;
            case 5:
                $this.$directories.$put1($url, null);
                break a;
            default:
                break a;
        }
        $this.$texts.$put1($url, $result);
    }
}
function cgxgbtp_Preloader_read($this, $url) {
    var var$2, $$je;
    if ($this.$texts.$containsKey($url)) {
        a: {
            try {
                var$2 = ji_ByteArrayInputStream__init_(($this.$texts.$get0($url)).$getBytes0($rt_s(330)));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_UnsupportedEncodingException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$2;
        }
        return null;
    }
    if ($this.$images.$containsKey($url))
        return ji_ByteArrayInputStream__init_($rt_createByteArray(1));
    if ($this.$binaries.$containsKey($url))
        return cgxgbtp_Blob_read($this.$binaries.$get0($url));
    if (!$this.$audio0.$containsKey($url))
        return null;
    return ji_ByteArrayInputStream__init_($rt_createByteArray(1));
}
function cgxgbtp_Preloader_contains($this, $file) {
    var var$2, var$3;
    a: {
        if (!$this.$texts.$containsKey($file) && !$this.$images.$containsKey($file) && !$this.$binaries.$containsKey($file) && !$this.$audio0.$containsKey($file)) {
            var$2 = $this.$directories;
            if (!var$2.$containsKey($file)) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
var otcit_DoubleAnalyzer = $rt_classWithoutFields();
var otcit_DoubleAnalyzer_mantissa10Table = null;
var otcit_DoubleAnalyzer_exp10Table = null;
function otcit_DoubleAnalyzer_$callClinit() {
    otcit_DoubleAnalyzer_$callClinit = $rt_eraseClinit(otcit_DoubleAnalyzer);
    otcit_DoubleAnalyzer__clinit_();
}
function otcit_DoubleAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $binExponentCorrection, $mantissaShift, $decMantissa, var$12, $error, $upError, $downError, $lowerPos, $upperPos;
    otcit_DoubleAnalyzer_$callClinit();
    $bits = $rt_doubleToLongBits($d);
    $result.$sign0 = Long_eq(Long_and($bits, Long_create(0, 2147483648)), Long_ZERO) ? 0 : 1;
    $mantissa = Long_and($bits, Long_create(4294967295, 1048575));
    $exponent = Long_lo(Long_shr($bits, 52)) & 2047;
    if (Long_eq($mantissa, Long_ZERO) && !$exponent) {
        $result.$mantissa0 = Long_ZERO;
        $result.$exponent0 = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        var$7 = Long_or($mantissa, Long_create(0, 1048576));
    else {
        var$7 = Long_shl($mantissa, 1);
        while (Long_eq(Long_and(var$7, Long_create(0, 1048576)), Long_ZERO)) {
            var$7 = Long_shl(var$7, 1);
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_DoubleAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent = ( -$decExponent | 0) - 2 | 0;
    $binExponentCorrection = $exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0;
    $mantissaShift = 12 + $binExponentCorrection | 0;
    $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight(var$7, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    if (Long_ge($decMantissa, Long_create(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        var$12 = $exponent - otcit_DoubleAnalyzer_exp10Table.data[$decExponent] | 0;
        $mantissaShift = 12 + var$12 | 0;
        $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight(var$7, otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], $mantissaShift);
    }
    $error = Long_shru(otcit_DoubleAnalyzer_mantissa10Table.data[$decExponent], (63 - $mantissaShift | 0) - $errorShift | 0);
    $upError = Long_shr(Long_add($error, Long_fromInt(1)), 1);
    $downError = Long_shr($error, 1);
    if (Long_eq(var$7, Long_create(0, 1048576)))
        $downError = Long_shr($downError, 2);
    $lowerPos = otcit_DoubleAnalyzer_findLowerDistanceToZero($decMantissa, $downError);
    $upperPos = otcit_DoubleAnalyzer_findUpperDistanceToZero($decMantissa, $upError);
    var$12 = Long_compare($lowerPos, $upperPos);
    var$7 = var$12 > 0 ? Long_mul(Long_div($decMantissa, $lowerPos), $lowerPos) : var$12 < 0 ? Long_add(Long_mul(Long_div($decMantissa, $upperPos), $upperPos), $upperPos) : Long_mul(Long_div(Long_add($decMantissa, Long_div($upperPos, Long_fromInt(2))), $upperPos), $upperPos);
    if (Long_ge(var$7, Long_create(2808348672, 232830643))) {
        $decExponent = $decExponent + 1 | 0;
        var$7 = Long_div(var$7, Long_fromInt(10));
    } else if (Long_lt(var$7, Long_create(1569325056, 23283064))) {
        $decExponent = $decExponent + (-1) | 0;
        var$7 = Long_mul(var$7, Long_fromInt(10));
    }
    $result.$mantissa0 = var$7;
    $result.$exponent0 = $decExponent - 330 | 0;
}
function otcit_DoubleAnalyzer_findLowerDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_DoubleAnalyzer_$callClinit();
    $pos = Long_fromInt(10);
    while (Long_le($pos, $error)) {
        $pos = Long_mul($pos, Long_fromInt(10));
    }
    $mantissaRight = Long_rem($mantissa, $pos);
    if (Long_ge($mantissaRight, Long_div($error, Long_fromInt(2))))
        $pos = Long_div($pos, Long_fromInt(10));
    return $pos;
}
function otcit_DoubleAnalyzer_findUpperDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_DoubleAnalyzer_$callClinit();
    $pos = Long_fromInt(1);
    while (Long_le($pos, $error)) {
        $pos = Long_mul($pos, Long_fromInt(10));
    }
    $mantissaRight = Long_rem($mantissa, $pos);
    if (Long_gt(Long_sub($pos, $mantissaRight), Long_div($error, Long_fromInt(2))))
        $pos = Long_div($pos, Long_fromInt(10));
    return $pos;
}
function otcit_DoubleAnalyzer_mulAndShiftRight($a, $b, $shift) {
    var $a1, $a2, $a3, $a4, $b1, $b2, $b3, $b4, $cm, $c0, $c1, $c2, $c3, $c, var$18;
    otcit_DoubleAnalyzer_$callClinit();
    $a1 = Long_and($a, Long_fromInt(65535));
    $a2 = Long_and(Long_shru($a, 16), Long_fromInt(65535));
    $a3 = Long_and(Long_shru($a, 32), Long_fromInt(65535));
    $a4 = Long_and(Long_shru($a, 48), Long_fromInt(65535));
    $b1 = Long_and($b, Long_fromInt(65535));
    $b2 = Long_and(Long_shru($b, 16), Long_fromInt(65535));
    $b3 = Long_and(Long_shru($b, 32), Long_fromInt(65535));
    $b4 = Long_and(Long_shru($b, 48), Long_fromInt(65535));
    $cm = Long_add(Long_add(Long_mul($b3, $a1), Long_mul($b2, $a2)), Long_mul($b1, $a3));
    $c0 = Long_add(Long_add(Long_add(Long_mul($b4, $a1), Long_mul($b3, $a2)), Long_mul($b2, $a3)), Long_mul($b1, $a4));
    $c1 = Long_add(Long_add(Long_mul($b4, $a2), Long_mul($b3, $a3)), Long_mul($b2, $a4));
    $c2 = Long_add(Long_mul($b4, $a3), Long_mul($b3, $a4));
    $c3 = Long_mul($b4, $a4);
    $c = Long_add(Long_add(Long_shl($c3, 32 + $shift | 0), Long_shl($c2, 16 + $shift | 0)), Long_shl($c1, $shift));
    var$18 = $shift > 16 ? Long_add($c, Long_shl($c0, $shift - 16 | 0)) : Long_add($c, Long_shru($c0, 16 - $shift | 0));
    var$18 = Long_add(var$18, Long_shru($cm, 32 - $shift | 0));
    return var$18;
}
function otcit_DoubleAnalyzer__clinit_() {
    var $decimalMantissaOne, $exponent, $i, var$4, var$5, var$6, var$7, $maxMantissa, var$9, $shift, $shiftedOffPart;
    otcit_DoubleAnalyzer_mantissa10Table = $rt_createLongArray(660);
    otcit_DoubleAnalyzer_exp10Table = $rt_createIntArray(660);
    $decimalMantissaOne = Long_create(991952896, 1862645149);
    $exponent = 1023;
    $i = 0;
    var$4 = $decimalMantissaOne;
    while ($i < 330) {
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = $i + 330 | 0;
        var$5[var$6] = jl_Long_divideUnsigned(var$4, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = $exponent;
        var$4 = jl_Long_divideUnsigned(var$4, Long_fromInt(10));
        var$7 = jl_Long_remainderUnsigned(var$4, Long_fromInt(10));
        while (Long_le(var$4, $decimalMantissaOne) && Long_eq(Long_and(var$4, Long_create(0, 2147483648)), Long_ZERO)) {
            var$4 = Long_shl(var$4, 1);
            $exponent = $exponent + 1 | 0;
            var$7 = Long_shl(var$7, 1);
        }
        var$4 = Long_add(var$4, Long_div(var$7, Long_fromInt(10)));
        $i = $i + 1 | 0;
    }
    $maxMantissa = Long_create(3435973836, 214748364);
    var$9 = 1023;
    $i = 0;
    while ($i < 330) {
        $shift = 0;
        var$4 = $decimalMantissaOne;
        while (Long_gt(var$4, $maxMantissa)) {
            var$4 = Long_shr(var$4, 1);
            $shift = $shift + 1 | 0;
            var$9 = var$9 + (-1) | 0;
        }
        var$7 = Long_mul(var$4, Long_fromInt(10));
        if ($shift <= 0)
            $decimalMantissaOne = var$7;
        else {
            $shiftedOffPart = Long_and($decimalMantissaOne, Long_fromInt((1 << $shift) - 1 | 0));
            $decimalMantissaOne = Long_add(var$7, Long_shr(Long_mul($shiftedOffPart, Long_fromInt(10)), $shift));
        }
        var$5 = otcit_DoubleAnalyzer_mantissa10Table.data;
        var$6 = (330 - $i | 0) - 1 | 0;
        var$5[var$6] = jl_Long_divideUnsigned($decimalMantissaOne, Long_fromInt(80));
        otcit_DoubleAnalyzer_exp10Table.data[var$6] = var$9;
        $i = $i + 1 | 0;
    }
}
function jnc_CoderResult() {
    var a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length4 = 0;
}
var jnc_CoderResult_UNDERFLOW = null;
var jnc_CoderResult_OVERFLOW = null;
function jnc_CoderResult_$callClinit() {
    jnc_CoderResult_$callClinit = $rt_eraseClinit(jnc_CoderResult);
    jnc_CoderResult__clinit_();
}
function jnc_CoderResult__init_(var_0, var_1) {
    var var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
}
function jnc_CoderResult__init_0($this, $kind, $length) {
    jnc_CoderResult_$callClinit();
    jl_Object__init_0($this);
    $this.$kind = $kind;
    $this.$length4 = $length;
}
function jnc_CoderResult_isUnderflow($this) {
    return $this.$kind ? 0 : 1;
}
function jnc_CoderResult_isOverflow($this) {
    return $this.$kind != 1 ? 0 : 1;
}
function jnc_CoderResult_isError($this) {
    return !$this.$isMalformed() && !$this.$isUnmappable() ? 0 : 1;
}
function jnc_CoderResult_isMalformed($this) {
    return $this.$kind != 2 ? 0 : 1;
}
function jnc_CoderResult_isUnmappable($this) {
    return $this.$kind != 3 ? 0 : 1;
}
function jnc_CoderResult_length($this) {
    if ($this.$isError())
        return $this.$length4;
    $rt_throw(jl_UnsupportedOperationException__init_());
}
function jnc_CoderResult_malformedForLength($length) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(2, $length);
}
function jnc_CoderResult_unmappableForLength($length) {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(3, $length);
}
function jnc_CoderResult_throwException($this) {
    switch ($this.$kind) {
        case 0:
            $rt_throw(jnc_BufferUnderflowException__init_());
        case 1:
            $rt_throw(jnc_BufferOverflowException__init_());
        case 2:
            $rt_throw(jnc_MalformedInputException__init_($this.$length4));
        case 3:
            $rt_throw(jnc_UnmappableCharacterException__init_($this.$length4));
        default:
    }
}
function jnc_CoderResult__clinit_() {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
}
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter1 = 0;
}
function jur_EOLSet__init_(var_0) {
    var var_1 = new jur_EOLSet();
    jur_EOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_EOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter1 = $counter;
}
function jur_EOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, var$5, var$6, $ch;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter1, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2 && $testString.$charAt($strIndex) == 13) {
        var$6 = $strIndex + 1 | 0;
        if ($testString.$charAt(var$6) == 10) {
            $matchResult.$setConsumed($this.$consCounter1, 0);
            return $this.$next.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = $testString.$charAt($strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    $matchResult.$setConsumed($this.$consCounter1, 0);
    return $this.$next.$matches($strIndex, $testString, $matchResult);
}
function jur_EOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter1) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter1, (-1));
    return $res;
}
function jur_EOLSet_getName($this) {
    return $rt_s(493);
}
function cgtrd_BinomialDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha6 = 0.0;
    a.$beta2 = 0;
}
function cgtrd_BinomialDistribution__init_(var_0, var_1, var_2) {
    var var_3 = new cgtrd_BinomialDistribution();
    cgtrd_BinomialDistribution__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_BinomialDistribution__init_0($this, $generator, $alpha, $beta) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(395)));
}
function cgtrd_BinomialDistribution_getMean($this) {
    return $this.$beta2 * $this.$alpha6;
}
function cgtrd_BinomialDistribution_setParameters($this, $a, $b, $c) {
    var var$4;
    if ($a >= 0.0 && $a <= 1.0) {
        var$4 = $b | 0;
        if (var$4 >= 0.0) {
            $this.$alpha6 = $a;
            $this.$beta2 = var$4;
            return 1;
        }
    }
    return 0;
}
function cgtrd_BinomialDistribution_nextDouble($this) {
    return cgtrd_BinomialDistribution_sample($this.$generator, $this.$alpha6, $this.$beta2);
}
function cgtrd_BinomialDistribution_sample($generator, $alpha, $beta) {
    var $successes, $i;
    $successes = 0.0;
    $i = 0;
    while ($i < $beta) {
        if ($generator.$nextExclusiveDouble() < $alpha)
            $successes = $successes + 1.0;
        $i = $i + 1 | 0;
    }
    return $successes;
}
function jur_Lexer() {
    var a = this; jl_Object.call(a);
    a.$pattern = null;
    a.$flags = 0;
    a.$mode3 = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch1 = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index4 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
var jur_Lexer_decompTable = null;
var jur_Lexer_singleDecompTable = null;
var jur_Lexer_singleDecompTableSize = 0;
function jur_Lexer__init_(var_0, var_1) {
    var var_2 = new jur_Lexer();
    jur_Lexer__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Lexer__init_0($this, $pattern, $flags) {
    jl_Object__init_0($this);
    $this.$mode3 = 1;
    $this.$orig = $pattern;
    if (($flags & 16) > 0)
        $pattern = jur_Pattern_quote($pattern);
    else if (($flags & 128) > 0)
        $pattern = jur_Lexer_normalize($pattern);
    $this.$pattern = $rt_createCharArray($pattern.$length() + 2 | 0);
    jl_System_arraycopy($pattern.$toCharArray(), 0, $this.$pattern, 0, $pattern.$length());
    $this.$pattern.data[$this.$pattern.data.length - 1 | 0] = 0;
    $this.$pattern.data[$this.$pattern.data.length - 2 | 0] = 0;
    $this.$patternFullLength = $this.$pattern.data.length;
    $this.$flags = $flags;
    jur_Lexer_movePointer($this);
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peek($this) {
    return $this.$ch1;
}
function jur_Lexer_setMode($this, $mode) {
    if ($mode > 0 && $mode < 3)
        $this.$mode3 = $mode;
    if ($mode == 1)
        jur_Lexer_reread($this);
}
function jur_Lexer_restoreFlags($this, $flags) {
    $this.$flags = $flags;
    $this.$lookAhead = $this.$ch1;
    $this.$lookAheadST = $this.$curST;
    $this.$index4 = $this.$curToc + 1 | 0;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_peekSpecial($this) {
    return $this.$curST;
}
function jur_Lexer_isSpecial($this) {
    return $this.$curST === null ? 0 : 1;
}
function jur_Lexer_isNextSpecial($this) {
    return $this.$lookAheadST === null ? 0 : 1;
}
function jur_Lexer_next($this) {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
}
function jur_Lexer_nextSpecial($this) {
    var $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
}
function jur_Lexer_lookAhead($this) {
    return $this.$lookAhead;
}
function jur_Lexer_back($this) {
    return $this.$lookBack;
}
function jur_Lexer_normalize($input) {
    return $input;
}
function jur_Lexer_reread($this) {
    $this.$lookAhead = $this.$ch1;
    $this.$lookAheadST = $this.$curST;
    $this.$index4 = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
}
function jur_Lexer_movePointer($this) {
    var $reread, $nonCap, $behind, $mod, var$5, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch1;
    $this.$ch1 = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index4;
    while (true) {
        $reread = 0;
        $this.$lookAhead = $this.$index4 >= $this.$pattern.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAheadST = null;
        if ($this.$mode3 == 4) {
            if ($this.$lookAhead != 92)
                return;
            $this.$lookAhead = $this.$index4 >= $this.$pattern.data.length ? 0 : $this.$pattern.data[jur_Lexer_nextIndex($this)];
            switch ($this.$lookAhead) {
                case 69:
                    break;
                default:
                    $this.$lookAhead = 92;
                    $this.$index4 = $this.$prevNW;
                    return;
            }
            $this.$mode3 = $this.$savedMode;
            $this.$lookAhead = $this.$index4 > ($this.$pattern.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            if ($this.$lookAhead != 92) {
                if ($this.$mode3 == 1)
                    switch ($this.$lookAhead) {
                        case 36:
                            $this.$lookAhead = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern.data[$this.$index4] != 63) {
                                $this.$lookAhead = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern.data[$this.$index4];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
                                        }
                                        $this.$lookAhead = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern.data[$this.$index4];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $this.$lookAhead = jur_Lexer_readFlags($this);
                                                if ($this.$lookAhead < 256) {
                                                    $this.$flags = $this.$lookAhead;
                                                    $this.$lookAhead = $this.$lookAhead << 16;
                                                    $this.$lookAhead = (-1073741784) | $this.$lookAhead;
                                                    break b;
                                                }
                                                $this.$lookAhead = $this.$lookAhead & 255;
                                                $this.$flags = $this.$lookAhead;
                                                $this.$lookAhead = $this.$lookAhead << 16;
                                                $this.$lookAhead = (-16777176) | $this.$lookAhead;
                                                break b;
                                        }
                                        $this.$lookAhead = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $mod = $this.$index4 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index4];
                            switch ($mod) {
                                case 43:
                                    $this.$lookAhead = $this.$lookAhead | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead = $this.$lookAhead | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead = $this.$lookAhead | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            $this.$setMode(2);
                            break a;
                        case 93:
                            if ($this.$mode3 != 2)
                                break a;
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $this.$lookAhead);
                            break a;
                        case 124:
                            $this.$lookAhead = (-536870788);
                            break a;
                        default:
                    }
                else if ($this.$mode3 == 2)
                    switch ($this.$lookAhead) {
                        case 38:
                            $this.$lookAhead = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        default:
                    }
            } else {
                var$5 = $this.$index4 >= ($this.$pattern.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead = var$5;
                    switch ($this.$lookAhead) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode3 != 1)
                                break a;
                            $this.$lookAhead = (-2147483648) | $this.$lookAhead;
                            break a;
                        case 65:
                            $this.$lookAhead = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_0($this.$pattern, $this.$prevNW, 1), 0);
                            $this.$lookAhead = 0;
                            break a;
                        case 71:
                            $this.$lookAhead = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode3;
                            $this.$mode3 = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead = 7;
                            break a;
                        case 98:
                            $this.$lookAhead = (-2147483550);
                            break a;
                        case 99:
                            if ($this.$index4 >= ($this.$pattern.data.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
                            $this.$lookAhead = $this.$pattern.data[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead = 27;
                            break a;
                        case 102:
                            $this.$lookAhead = 12;
                            break a;
                        case 110:
                            $this.$lookAhead = 10;
                            break a;
                        case 114:
                            $this.$lookAhead = 13;
                            break a;
                        case 116:
                            $this.$lookAhead = 9;
                            break a;
                        case 117:
                            $this.$lookAhead = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
}
function jur_Lexer_parseCharClassName($this) {
    var $sb, var$2, var$3, $ch, $res;
    $sb = jl_StringBuilder__init_0(10);
    if ($this.$index4 < ($this.$pattern.data.length - 2 | 0)) {
        if ($this.$pattern.data[$this.$index4] != 123) {
            var$2 = jl_String__init_0($this.$pattern, jur_Lexer_nextIndex($this), 1);
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(494)), var$2);
            return jl_StringBuilder_toString(var$3);
        }
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while ($this.$index4 < ($this.$pattern.data.length - 2 | 0)) {
                $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                $sb.$append0($ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
    }
    if (!$sb.$length())
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
    $res = $sb.$toString();
    if ($res.$length() == 1) {
        var$2 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(494)), $res);
        return jl_StringBuilder_toString(var$2);
    }
    b: {
        c: {
            if ($res.$length() > 3) {
                if ($res.$startsWith0($rt_s(494)))
                    break c;
                if ($res.$startsWith0($rt_s(495)))
                    break c;
            }
            break b;
        }
        $res = $res.$substring(2);
    }
    return $res;
}
function jur_Lexer_processQuantifier($this, $ch) {
    var $sb, $min, $max, $mod, $$je;
    $sb = jl_StringBuilder__init_0(4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            if ($this.$index4 >= $this.$pattern.data.length)
                break a;
            $ch = $this.$pattern.data[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt($sb.$toString(), 10);
                    $sb.$delete(0, $sb.$length());
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $sb.$append0($ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
    if ($sb.$length() > 0)
        b: {
            try {
                $max = jl_Integer_parseInt($sb.$toString(), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
    $mod = $this.$index4 >= $this.$pattern.data.length ? 42 : $this.$pattern.data[$this.$index4];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    return jur_Quantifier__init_($min, $max);
}
function jur_Lexer_toString($this) {
    return $this.$orig;
}
function jur_Lexer_isEmpty($this) {
    return !$this.$ch1 && !$this.$lookAhead && $this.$index4 == $this.$patternFullLength && !$this.$isSpecial() ? 1 : 0;
}
function jur_Lexer_isLetter($ch) {
    return $ch < 0 ? 0 : 1;
}
function jur_Lexer_isLetter0($this) {
    return !$this.$isEmpty() && !$this.$isSpecial() && jur_Lexer_isLetter($this.$ch1) ? 1 : 0;
}
function jur_Lexer_isHighSurrogate0($this) {
    return $this.$ch1 <= 56319 && $this.$ch1 >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate0($this) {
    return $this.$ch1 <= 57343 && $this.$ch1 >= 56320 ? 1 : 0;
}
function jur_Lexer_isHighSurrogate($ch) {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
}
function jur_Lexer_isLowSurrogate($ch) {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
}
function jur_Lexer_readHex($this, $max) {
    var $st, $length, $i, var$5, $$je;
    $st = jl_StringBuilder__init_0($max);
    $length = $this.$pattern.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index4 >= $length)
            break;
        $st.$append0($this.$pattern.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                var$5 = jl_Integer_parseInt($st.$toString(), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$5;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
}
function jur_Lexer_readOctals($this) {
    var $max, $i, $length, $res, var$5;
    $max = 3;
    $i = 1;
    $length = $this.$pattern.data.length - 2 | 0;
    $res = jl_Character_digit($this.$pattern.data[$this.$index4], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if ($this.$index4 >= $length)
                        break a;
                    var$5 = jl_Character_digit($this.$pattern.data[$this.$index4], 8);
                    if (var$5 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$5 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
}
function jur_Lexer_readFlags($this) {
    var $pos, $res, $ch;
    $pos = 1;
    $res = $this.$flags;
    a: while (true) {
        if ($this.$index4 >= $this.$pattern.data.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
        b: {
            c: {
                $ch = $this.$pattern.data[$this.$index4];
                switch ($ch) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$toString(), $this.$index4));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
}
function jur_Lexer_nextIndex($this) {
    $this.$prevNW = $this.$index4;
    if ($this.$flags & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index4 = $this.$index4 + 1 | 0;
    return $this.$prevNW;
}
function jur_Lexer_skipComments($this) {
    var $length;
    $length = $this.$pattern.data.length - 2 | 0;
    $this.$index4 = $this.$index4 + 1 | 0;
    a: while (true) {
        if ($this.$index4 < $length && jl_Character_isWhitespace($this.$pattern.data[$this.$index4])) {
            $this.$index4 = $this.$index4 + 1 | 0;
            continue;
        }
        if ($this.$index4 >= $length)
            break;
        if ($this.$pattern.data[$this.$index4] != 35)
            break;
        $this.$index4 = $this.$index4 + 1 | 0;
        while (true) {
            if ($this.$index4 >= $length)
                continue a;
            if (jur_Lexer_isLineSeparator($this, $this.$pattern.data[$this.$index4]))
                continue a;
            $this.$index4 = $this.$index4 + 1 | 0;
        }
    }
    return $this.$index4;
}
function jur_Lexer_isLineSeparator($this, $ch) {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
}
function jur_Lexer_getDecomposition($ch) {
    return jur_Lexer_decompTable.$get15($ch);
}
function jur_Lexer_getHangulDecomposition($ch) {
    var $sIndex, $l, $v, $t, $decomp, var$7;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        if (!$t)
            $decomp = $rt_createIntArrayFromData([$l, $v]);
        else {
            var$7 = 4519 + $t | 0;
            $decomp = $rt_createIntArrayFromData([$l, $v, var$7]);
        }
        return $decomp;
    }
    return null;
}
function jur_Lexer_hasSingleCodepointDecomposition($ch) {
    var $hasSingleDecomp;
    $hasSingleDecomp = jur_Lexer_singleDecompTable.$get11($ch);
    return $hasSingleDecomp == jur_Lexer_singleDecompTableSize ? 0 : 1;
}
function jur_Lexer_hasDecompositionNonNullCanClass($ch) {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
}
function jur_Lexer_nextCodePoint($this) {
    var $high, $lowExpectedIndex, $low;
    $high = $this.$pattern.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        if ($lowExpectedIndex < $this.$pattern.data.length) {
            $low = $this.$pattern.data[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
}
function jur_Lexer_getIndex($this) {
    return $this.$curToc;
}
var jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace);
function jur_AbstractCharClass$LazyNonSpace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyNonSpace__init_0($this) {
    jur_AbstractCharClass$LazySpace__init_0($this);
}
function jur_AbstractCharClass$LazyNonSpace_computeValue($this) {
    var $chCl;
    $chCl = (jur_AbstractCharClass$LazySpace_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var otjt_Int32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var cbgggpi_DynamicsModifier$BrownianAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
var jn_ShortBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
function jn_ShortBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverByteBufferBigEndian();
    jn_ShortBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer1.$array0.data;
    var$3 = $this.$start7;
    var$4 = $index * 2 | 0;
    $value = (var$2[var$3 + var$4 | 0] & 255) << 8 | $this.$byteByffer1.$array0.data[($this.$start7 + var$4 | 0) + 1 | 0] & 255;
    return $value << 16 >> 16;
}
function jn_ShortBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array0.data;
    var$4 = $this.$start7;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start7 + var$5 | 0) + 1 | 0] = $value << 24 >> 24;
}
var cbgssu_NinePatchDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
function cgt_DigitalSinSmootherScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$random4 = null;
    a.$batch11 = null;
    a.$renderer10 = null;
    a.$amounts10 = null;
    a.$iterations10 = Long_ZERO;
    a.$font12 = null;
    a.$viewport10 = null;
    a.$mainGame10 = null;
}
function cgt_DigitalSinSmootherScreen__init_(var_0) {
    var var_1 = new cgt_DigitalSinSmootherScreen();
    cgt_DigitalSinSmootherScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_DigitalSinSmootherScreen_show($this) {
    $this.$font12 = $this.$mainGame10.$font0;
    $this.$random4 = $this.$mainGame10.$random0;
    $this.$batch11 = $this.$mainGame10.$batch0;
    $this.$viewport10 = cbguv_ScreenViewport__init_();
    $this.$renderer10 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts10, Long_ZERO);
    $this.$iterations10 = Long_ZERO;
}
function cgt_DigitalSinSmootherScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts10 = $rt_createLongArray(512);
    $this.$iterations10 = Long_ZERO;
    $this.$mainGame10 = $main;
}
function cgt_DigitalSinSmootherScreen_render($this, $delta) {
    var $camera, $i, $m, var$5, $x, $color, var$8, var$9, $j, var$11, var$12, var$13;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame10.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame10.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport10.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        ju_Arrays_fill($this.$amounts10, Long_ZERO);
        $this.$iterations10 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        ju_Arrays_fill($this.$amounts10, Long_ZERO);
        $this.$iterations10 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        ju_Arrays_fill($this.$amounts10, Long_ZERO);
        $this.$iterations10 = Long_ZERO;
    }
    $this.$iterations10 = Long_add($this.$iterations10, Long_fromInt(1));
    $i = 0;
    while ($i < 262144) {
        $m = cgtd_TrigTools_sinSmoother($this.$random4.$nextExclusiveFloat()) * 128.0 + 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$5 = $this.$amounts10.data;
            var$5[$m] = Long_add(var$5[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer10.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer10.$color($color);
        var$8 = $this.$renderer10;
        var$9 = $x;
        var$8.$vertex(var$9, 0.0, 0.0);
        $this.$renderer10.$color($color);
        $this.$renderer10.$vertex(var$9, 0.125 * Long_toNumber($this.$amounts10.data[$x]) / Long_toNumber($this.$iterations10), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer10.$color((-6.221923240859403E37));
        var$8 = $this.$renderer10;
        var$11 = $j;
        var$8.$vertex(0.0, var$11, 0.0);
        $this.$renderer10.$color((-6.221923240859403E37));
        $this.$renderer10.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer10.$end();
    $this.$batch11.$setProjectionMatrix($camera.$combined);
    $this.$batch11.$begin0();
    var$12 = $this.$font12;
    var$13 = $this.$batch11;
    var$5 = $rt_createArray(jl_Object, 1);
    var$5.data[0] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$12.$draw(var$13, cgt_Stringf_format($rt_s(496), var$5), 64.0, 522.0, 384.0, 1, 1);
    $this.$batch11.$end();
}
function cgt_DigitalSinSmootherScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport10.$update0($width, $height, 1);
    $this.$viewport10.$apply(1);
}
var cbggg_GLVersion$Type = $rt_classWithoutFields(jl_Enum);
var cbggg_GLVersion$Type_OpenGL = null;
var cbggg_GLVersion$Type_GLES = null;
var cbggg_GLVersion$Type_WebGL = null;
var cbggg_GLVersion$Type_NONE = null;
var cbggg_GLVersion$Type_$VALUES = null;
function cbggg_GLVersion$Type_$callClinit() {
    cbggg_GLVersion$Type_$callClinit = $rt_eraseClinit(cbggg_GLVersion$Type);
    cbggg_GLVersion$Type__clinit_();
}
function cbggg_GLVersion$Type__init_(var_0, var_1) {
    var var_2 = new cbggg_GLVersion$Type();
    cbggg_GLVersion$Type__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_GLVersion$Type__init_0($this, var$1, var$2) {
    cbggg_GLVersion$Type_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbggg_GLVersion$Type__clinit_() {
    cbggg_GLVersion$Type_OpenGL = cbggg_GLVersion$Type__init_($rt_s(497), 0);
    cbggg_GLVersion$Type_GLES = cbggg_GLVersion$Type__init_($rt_s(498), 1);
    cbggg_GLVersion$Type_WebGL = cbggg_GLVersion$Type__init_($rt_s(27), 2);
    cbggg_GLVersion$Type_NONE = cbggg_GLVersion$Type__init_($rt_s(499), 3);
    cbggg_GLVersion$Type_$VALUES = $rt_createArrayFromData(cbggg_GLVersion$Type, [cbggg_GLVersion$Type_OpenGL, cbggg_GLVersion$Type_GLES, cbggg_GLVersion$Type_WebGL, cbggg_GLVersion$Type_NONE]);
}
var cgtr_Ziggurat = $rt_classWithoutFields();
var cgtr_Ziggurat_TABLE = null;
function cgtr_Ziggurat_$callClinit() {
    cgtr_Ziggurat_$callClinit = $rt_eraseClinit(cgtr_Ziggurat);
    cgtr_Ziggurat__clinit_();
}
function cgtr_Ziggurat_normal($state) {
    var $idx, $u, var$4, var$5, var$6, $x, $y, $f0, $f1;
    cgtr_Ziggurat_$callClinit();
    a: {
        while (true) {
            $idx = Long_lo(Long_and($state, Long_fromInt(255)));
            $u = Long_toNumber(Long_shru($state, 11)) * 1.1102230246251565E-16 * cgtr_Ziggurat_TABLE.data[$idx];
            var$4 = cgtr_Ziggurat_TABLE.data;
            var$5 = $idx + 1 | 0;
            if ($u < var$4[var$5])
                break;
            if (!$idx) {
                while (true) {
                    var$6 = Long_mul(Long_xor($state, Long_create(778217925, 4046813930)), Long_create(4220496899, 2882110344));
                    $x = jl_Math_log(Long_toNumber(Long_add(Long_shru(var$6, 11), Long_fromInt(1))) * 1.1102230246251565E-16) * 0.2736612373297584;
                    $state = Long_mul(Long_xor(var$6, Long_create(778217925, 4046813930)), Long_create(4220496899, 2882110344));
                    $y = jl_Math_log(Long_toNumber(Long_add(Long_shru($state, 11), Long_fromInt(1))) * 1.1102230246251565E-16);
                    if ( -($y + $y) >= $x * $x)
                        break;
                }
                return Long_ne(Long_and(Long_fromInt(jl_Long_bitCount($state)), Long_fromInt(1)), Long_ZERO) ? 3.654152885361007 - $x : $x - 3.654152885361007;
            }
            $y = $u * $u;
            $f0 = jl_Math_exp((-0.5) * (cgtr_Ziggurat_TABLE.data[$idx] * cgtr_Ziggurat_TABLE.data[$idx] - $y));
            $f1 = jl_Math_exp((-0.5) * (cgtr_Ziggurat_TABLE.data[var$5] * cgtr_Ziggurat_TABLE.data[var$5] - $y));
            $state = Long_mul(Long_xor($state, Long_create(778217925, 4046813930)), Long_create(4220496899, 2882110344));
            if ($f1 + Long_toNumber(Long_shru($state, 11)) * 1.1102230246251565E-16 * ($f0 - $f1) < 1.0)
                break a;
        }
    }
    return jl_Math_copySign($u, Long_toNumber(Long_sub(Long_fromInt(256), Long_and($state, Long_fromInt(512)))));
}
function cgtr_Ziggurat__clinit_() {
    var $f, $i, $xx;
    cgtr_Ziggurat_TABLE = $rt_createDoubleArray(257);
    $f = jl_Math_exp((-6.676416654796086));
    cgtr_Ziggurat_TABLE.data[0] = 0.004928673233974655 / $f;
    cgtr_Ziggurat_TABLE.data[1] = 3.654152885361007;
    $i = 2;
    while ($i < 256) {
        $xx = jl_Math_log(0.004928673233974655 / cgtr_Ziggurat_TABLE.data[$i - 1 | 0] + $f);
        cgtr_Ziggurat_TABLE.data[$i] = jl_Math_sqrt((-2.0) * $xx);
        $f = jl_Math_exp($xx);
        $i = $i + 1 | 0;
    }
    cgtr_Ziggurat_TABLE.data[256] = 0.0;
}
function cgtr_WhiskerRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA4 = Long_ZERO;
    a.$stateB4 = Long_ZERO;
    a.$stateC2 = Long_ZERO;
    a.$stateD1 = Long_ZERO;
}
function cgtr_WhiskerRandom__init_() {
    var var_0 = new cgtr_WhiskerRandom();
    cgtr_WhiskerRandom__init_0(var_0);
    return var_0;
}
function cgtr_WhiskerRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$stateA4 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateB4 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateC2 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateD1 = cgtr_EnhancedRandom_seedFromMath();
}
function cgtr_WhiskerRandom_nextLong($this) {
    var $fa, $fb, $fc, $fd, var$5;
    $fa = $this.$stateA4;
    $fb = $this.$stateB4;
    $fc = $this.$stateC2;
    $fd = $this.$stateD1;
    $this.$stateA4 = Long_mul($fd, Long_create(778217925, 4046813930));
    $this.$stateB4 = Long_or(Long_shl($fa, 44), Long_shru($fa, 20));
    $this.$stateC2 = Long_add($fb, Long_create(2135587861, 2654435769));
    var$5 = Long_xor($fa, $fc);
    $this.$stateD1 = var$5;
    return var$5;
}
function cgtr_WhiskerRandom_next($this, $bits) {
    var $fa, $fb, $fc, $fd, var$6;
    $fa = $this.$stateA4;
    $fb = $this.$stateB4;
    $fc = $this.$stateC2;
    $fd = $this.$stateD1;
    $this.$stateA4 = Long_mul($fd, Long_create(778217925, 4046813930));
    $this.$stateB4 = Long_or(Long_shl($fa, 44), Long_shru($fa, 20));
    $this.$stateC2 = Long_add($fb, Long_create(2135587861, 2654435769));
    var$6 = Long_xor($fa, $fc);
    $this.$stateD1 = var$6;
    return Long_lo(var$6) >>> (32 - $bits | 0) | 0;
}
var jl_AbstractStringBuilder$Constants = $rt_classWithoutFields();
var jl_AbstractStringBuilder$Constants_intPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null;
var jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null;
var jl_AbstractStringBuilder$Constants_floatAnalysisResult = null;
function jl_AbstractStringBuilder$Constants_$callClinit() {
    jl_AbstractStringBuilder$Constants_$callClinit = $rt_eraseClinit(jl_AbstractStringBuilder$Constants);
    jl_AbstractStringBuilder$Constants__clinit_();
}
function jl_AbstractStringBuilder$Constants__clinit_() {
    jl_AbstractStringBuilder$Constants_intPowersOfTen = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
    jl_AbstractStringBuilder$Constants_longPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(1000), Long_fromInt(10000), Long_fromInt(100000), Long_fromInt(1000000), Long_fromInt(10000000), Long_fromInt(100000000), Long_fromInt(1000000000), Long_create(1410065408, 2), Long_create(1215752192, 23), Long_create(3567587328, 232), Long_create(1316134912, 2328), Long_create(276447232, 23283), Long_create(2764472320, 232830), Long_create(1874919424, 2328306),
    Long_create(1569325056, 23283064), Long_create(2808348672, 232830643)]);
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = otcit_DoubleAnalyzer$Result__init_();
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = otcit_FloatAnalyzer$Result__init_();
}
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
function jur_SingleSet__init_(var_0, var_1) {
    var var_2 = new jur_SingleSet();
    jur_SingleSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_SingleSet__init_0($this, $child, $fSet) {
    jur_JointSet__init_0($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex0 = $fSet.$getGroupIndex();
}
function jur_SingleSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $start, $shift;
    $start = $matchResult.$getStart($this.$groupIndex0);
    $matchResult.$setStart($this.$groupIndex0, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $matchResult.$setStart($this.$groupIndex0, $start);
    return (-1);
}
function jur_SingleSet_find($this, $stringIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$find($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_findBack($this, $stringIndex, $lastIndex, $testString, $matchResult) {
    var $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex0, $res);
    return $res;
}
function jur_SingleSet_first($this, $set) {
    return $this.$kid.$first($set);
}
function jur_SingleSet_processBackRefReplacement($this) {
    var $set;
    $set = jur_BackReferencedSingleSet__init_($this);
    $this.$next = $set;
    return $set;
}
function jur_SingleSet_processSecondPass($this) {
    var $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    if ($this.$kid !== null && !$this.$kid.$isSecondPassVisited) {
        $set = $this.$kid.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
}
var cbgssu_Tree$Node = $rt_classWithoutFields();
function cgt_NormalScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist7 = null;
    a.$batch12 = null;
    a.$renderer11 = null;
    a.$amounts11 = null;
    a.$iterations11 = Long_ZERO;
    a.$font13 = null;
    a.$viewport11 = null;
    a.$mainGame11 = null;
}
function cgt_NormalScreen__init_(var_0) {
    var var_1 = new cgt_NormalScreen();
    cgt_NormalScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_NormalScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font13 = $this.$mainGame11.$font0;
    a: {
        try {
            var$1 = new cgtrd_NormalDistribution;
            var$2 = $this.$mainGame11.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_NormalDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist7 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist7 = cgtrd_NormalDistribution__init_0($this.$mainGame11.$random0, 0.0, 1.0);
    }
    $this.$batch12 = $this.$mainGame11.$batch0;
    $this.$viewport11 = cbguv_ScreenViewport__init_();
    $this.$renderer11 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts11, Long_ZERO);
    $this.$iterations11 = Long_ZERO;
}
function cgt_NormalScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts11 = $rt_createLongArray(512);
    $this.$iterations11 = Long_ZERO;
    $this.$mainGame11 = $main;
}
function cgt_NormalScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame11.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame11.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame11.$setScreen($this.$mainGame11.$alternateNormal);
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport11.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts11, Long_ZERO);
        $this.$iterations11 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts11, Long_ZERO);
        $this.$iterations11 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts11, Long_ZERO);
        $this.$iterations11 = Long_ZERO;
    }
    $this.$iterations11 = Long_add($this.$iterations11, Long_fromInt(1));
    var$3 = $this.$dist7;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist7.$nextDouble() * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts11.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer11.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer11.$color($color);
        var$3 = $this.$renderer11;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer11.$color($color);
        $this.$renderer11.$vertex(var$9, Long_toNumber(Long_div($this.$amounts11.data[$x], $this.$iterations11)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer11.$color((-6.221923240859403E37));
        var$3 = $this.$renderer11;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer11.$color((-6.221923240859403E37));
        $this.$renderer11.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer11.$end();
    $this.$batch12.$setProjectionMatrix($camera.$combined);
    $this.$batch12.$begin0();
    var$3 = $this.$font13;
    var$12 = $this.$batch12;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist7.$getMedian());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(500), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font13.$draw($this.$batch12, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font13.$draw($this.$batch12, $rt_s(325), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch12.$end();
}
function cgt_NormalScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport11.$update0($width, $height, 1);
    $this.$viewport11.$apply(1);
}
var jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet);
function jur_BackReferencedSingleSet__init_(var_0) {
    var var_1 = new jur_BackReferencedSingleSet();
    jur_BackReferencedSingleSet__init_0(var_1, var_0);
    return var_1;
}
function jur_BackReferencedSingleSet__init_0($this, $node) {
    jur_SingleSet__init_0($this, $node.$kid, $node.$fSet);
}
function jur_BackReferencedSingleSet_find($this, $startSearch, $testString, $matchResult) {
    var $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex0);
            $matchResult.$setStart($this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
    var $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex0);
            $matchResult.$setStart($this.$groupIndex0, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex0, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
}
function jur_BackReferencedSingleSet_processBackRefReplacement($this) {
    return null;
}
var jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_BufferOverflowException__init_() {
    var var_0 = new jnc_BufferOverflowException();
    jnc_BufferOverflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferOverflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var otp_PlatformQueue = $rt_classWithoutFields();
function otp_PlatformQueue_wrap($obj) {
    return $obj;
}
function otp_PlatformQueue_isEmpty$static($this) {
    return $this.length ? 0 : 1;
}
function otp_PlatformQueue_add$static($this, $e) {
    var var$3;
    var$3 = otp_PlatformQueue_wrap($e);
    $this.push(var$3);
}
function otp_PlatformQueue_remove$static($this) {
    return $this.shift();
}
var cbgggpi_RegionInfluencer$AspectTextureRegion = $rt_classWithoutFields();
function cbgu_IntSet() {
    var a = this; jl_Object.call(a);
    a.$size5 = 0;
    a.$keyTable = null;
    a.$hasZeroValue = 0;
    a.$loadFactor1 = 0.0;
    a.$threshold1 = 0;
    a.$shift0 = 0;
    a.$mask = 0;
}
function cbgu_IntSet__init_() {
    var var_0 = new cbgu_IntSet();
    cbgu_IntSet__init_0(var_0);
    return var_0;
}
function cbgu_IntSet__init_1(var_0, var_1) {
    var var_2 = new cbgu_IntSet();
    cbgu_IntSet__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntSet__init_0($this) {
    cbgu_IntSet__init_2($this, 51, 0.800000011920929);
}
function cbgu_IntSet__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor1 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold1 = $tableSize * $loadFactor | 0;
        $this.$mask = $tableSize - 1 | 0;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask));
        $this.$keyTable = $rt_createIntArray($tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(501))).$append19($loadFactor)).$toString()));
}
function cbgu_IntSet_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift0));
}
function cbgu_IntSet_locateKey($this, $key) {
    var $keyTable, $i, $other;
    $keyTable = $this.$keyTable;
    $i = $this.$place($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask;
    }
    return $i;
}
function cbgu_IntSet_add($this, $key) {
    var $i, var$3;
    if (!$key) {
        if ($this.$hasZeroValue)
            return 0;
        $this.$hasZeroValue = 1;
        $this.$size5 = $this.$size5 + 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i >= 0)
        return 0;
    var$3 =  -($i + 1 | 0) | 0;
    $this.$keyTable.data[var$3] = $key;
    var$3 = $this.$size5 + 1 | 0;
    $this.$size5 = var$3;
    if (var$3 >= $this.$threshold1)
        cbgu_IntSet_resize($this, $this.$keyTable.data.length << 1);
    return 1;
}
function cbgu_IntSet_addResize($this, $key) {
    var $keyTable, $i, var$4;
    $keyTable = $this.$keyTable;
    $i = $this.$place($key);
    while (true) {
        var$4 = $keyTable.data;
        if (!var$4[$i])
            break;
        $i = ($i + 1 | 0) & $this.$mask;
    }
    var$4[$i] = $key;
}
function cbgu_IntSet_remove($this, $key) {
    var $i, $keyTable, $mask, $next, var$6, var$7, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return 0;
        $this.$hasZeroValue = 0;
        $this.$size5 = $this.$size5 - 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i < 0)
        return 0;
    $keyTable = $this.$keyTable;
    $mask = $this.$mask;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$6 = $keyTable.data;
        var$7 = var$6[$next];
        if (!var$7)
            break;
        $placement = $this.$place(var$7);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$6[$i] = var$7;
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$6[$i] = 0;
    $this.$size5 = $this.$size5 - 1 | 0;
    return 1;
}
function cbgu_IntSet_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable.data.length;
        $this.$threshold1 = $newSize * $this.$loadFactor1 | 0;
        $this.$mask = $newSize - 1 | 0;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask));
        $oldKeyTable = $this.$keyTable;
        $this.$keyTable = $rt_createIntArray($newSize);
        if ($this.$size5 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    cbgu_IntSet_addResize($this, $key);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cgtd_Hasher() {
    jl_Object.call(this);
    this.$seed = Long_ZERO;
}
var cgtd_Hasher_alpha = null;
var cgtd_Hasher_beta = null;
var cgtd_Hasher_gamma = null;
var cgtd_Hasher_delta = null;
var cgtd_Hasher_epsilon = null;
var cgtd_Hasher_zeta = null;
var cgtd_Hasher_eta = null;
var cgtd_Hasher_theta = null;
var cgtd_Hasher_iota = null;
var cgtd_Hasher_kappa = null;
var cgtd_Hasher_lambda = null;
var cgtd_Hasher_mu = null;
var cgtd_Hasher_nu = null;
var cgtd_Hasher_xi = null;
var cgtd_Hasher_omicron = null;
var cgtd_Hasher_pi = null;
var cgtd_Hasher_rho = null;
var cgtd_Hasher_sigma = null;
var cgtd_Hasher_tau = null;
var cgtd_Hasher_upsilon = null;
var cgtd_Hasher_phi = null;
var cgtd_Hasher_chi = null;
var cgtd_Hasher_psi = null;
var cgtd_Hasher_omega = null;
var cgtd_Hasher_alpha_ = null;
var cgtd_Hasher_beta_ = null;
var cgtd_Hasher_gamma_ = null;
var cgtd_Hasher_delta_ = null;
var cgtd_Hasher_epsilon_ = null;
var cgtd_Hasher_zeta_ = null;
var cgtd_Hasher_eta_ = null;
var cgtd_Hasher_theta_ = null;
var cgtd_Hasher_iota_ = null;
var cgtd_Hasher_kappa_ = null;
var cgtd_Hasher_lambda_ = null;
var cgtd_Hasher_mu_ = null;
var cgtd_Hasher_nu_ = null;
var cgtd_Hasher_xi_ = null;
var cgtd_Hasher_omicron_ = null;
var cgtd_Hasher_pi_ = null;
var cgtd_Hasher_rho_ = null;
var cgtd_Hasher_sigma_ = null;
var cgtd_Hasher_tau_ = null;
var cgtd_Hasher_upsilon_ = null;
var cgtd_Hasher_phi_ = null;
var cgtd_Hasher_chi_ = null;
var cgtd_Hasher_psi_ = null;
var cgtd_Hasher_omega_ = null;
var cgtd_Hasher_baal = null;
var cgtd_Hasher_agares = null;
var cgtd_Hasher_vassago = null;
var cgtd_Hasher_samigina = null;
var cgtd_Hasher_marbas = null;
var cgtd_Hasher_valefor = null;
var cgtd_Hasher_amon = null;
var cgtd_Hasher_barbatos = null;
var cgtd_Hasher_paimon = null;
var cgtd_Hasher_buer = null;
var cgtd_Hasher_gusion = null;
var cgtd_Hasher_sitri = null;
var cgtd_Hasher_beleth = null;
var cgtd_Hasher_leraje = null;
var cgtd_Hasher_eligos = null;
var cgtd_Hasher_zepar = null;
var cgtd_Hasher_botis = null;
var cgtd_Hasher_bathin = null;
var cgtd_Hasher_sallos = null;
var cgtd_Hasher_purson = null;
var cgtd_Hasher_marax = null;
var cgtd_Hasher_ipos = null;
var cgtd_Hasher_aim = null;
var cgtd_Hasher_naberius = null;
var cgtd_Hasher_glasya_labolas = null;
var cgtd_Hasher_bune = null;
var cgtd_Hasher_ronove = null;
var cgtd_Hasher_berith = null;
var cgtd_Hasher_astaroth = null;
var cgtd_Hasher_forneus = null;
var cgtd_Hasher_foras = null;
var cgtd_Hasher_asmoday = null;
var cgtd_Hasher_gaap = null;
var cgtd_Hasher_furfur = null;
var cgtd_Hasher_marchosias = null;
var cgtd_Hasher_stolas = null;
var cgtd_Hasher_phenex = null;
var cgtd_Hasher_halphas = null;
var cgtd_Hasher_malphas = null;
var cgtd_Hasher_raum = null;
var cgtd_Hasher_focalor = null;
var cgtd_Hasher_vepar = null;
var cgtd_Hasher_sabnock = null;
var cgtd_Hasher_shax = null;
var cgtd_Hasher_vine = null;
var cgtd_Hasher_bifrons = null;
var cgtd_Hasher_vual = null;
var cgtd_Hasher_haagenti = null;
var cgtd_Hasher_crocell = null;
var cgtd_Hasher_furcas = null;
var cgtd_Hasher_balam = null;
var cgtd_Hasher_alloces = null;
var cgtd_Hasher_caim = null;
var cgtd_Hasher_murmur = null;
var cgtd_Hasher_orobas = null;
var cgtd_Hasher_gremory = null;
var cgtd_Hasher_ose = null;
var cgtd_Hasher_amy = null;
var cgtd_Hasher_orias = null;
var cgtd_Hasher_vapula = null;
var cgtd_Hasher_zagan = null;
var cgtd_Hasher_valac = null;
var cgtd_Hasher_andras = null;
var cgtd_Hasher_flauros = null;
var cgtd_Hasher_andrealphus = null;
var cgtd_Hasher_kimaris = null;
var cgtd_Hasher_amdusias = null;
var cgtd_Hasher_belial = null;
var cgtd_Hasher_decarabia = null;
var cgtd_Hasher_seere = null;
var cgtd_Hasher_dantalion = null;
var cgtd_Hasher_andromalius = null;
var cgtd_Hasher_baal_ = null;
var cgtd_Hasher_agares_ = null;
var cgtd_Hasher_vassago_ = null;
var cgtd_Hasher_samigina_ = null;
var cgtd_Hasher_marbas_ = null;
var cgtd_Hasher_valefor_ = null;
var cgtd_Hasher_amon_ = null;
var cgtd_Hasher_barbatos_ = null;
var cgtd_Hasher_paimon_ = null;
var cgtd_Hasher_buer_ = null;
var cgtd_Hasher_gusion_ = null;
var cgtd_Hasher_sitri_ = null;
var cgtd_Hasher_beleth_ = null;
var cgtd_Hasher_leraje_ = null;
var cgtd_Hasher_eligos_ = null;
var cgtd_Hasher_zepar_ = null;
var cgtd_Hasher_botis_ = null;
var cgtd_Hasher_bathin_ = null;
var cgtd_Hasher_sallos_ = null;
var cgtd_Hasher_purson_ = null;
var cgtd_Hasher_marax_ = null;
var cgtd_Hasher_ipos_ = null;
var cgtd_Hasher_aim_ = null;
var cgtd_Hasher_naberius_ = null;
var cgtd_Hasher_glasya_labolas_ = null;
var cgtd_Hasher_bune_ = null;
var cgtd_Hasher_ronove_ = null;
var cgtd_Hasher_berith_ = null;
var cgtd_Hasher_astaroth_ = null;
var cgtd_Hasher_forneus_ = null;
var cgtd_Hasher_foras_ = null;
var cgtd_Hasher_asmoday_ = null;
var cgtd_Hasher_gaap_ = null;
var cgtd_Hasher_furfur_ = null;
var cgtd_Hasher_marchosias_ = null;
var cgtd_Hasher_stolas_ = null;
var cgtd_Hasher_phenex_ = null;
var cgtd_Hasher_halphas_ = null;
var cgtd_Hasher_malphas_ = null;
var cgtd_Hasher_raum_ = null;
var cgtd_Hasher_focalor_ = null;
var cgtd_Hasher_vepar_ = null;
var cgtd_Hasher_sabnock_ = null;
var cgtd_Hasher_shax_ = null;
var cgtd_Hasher_vine_ = null;
var cgtd_Hasher_bifrons_ = null;
var cgtd_Hasher_vual_ = null;
var cgtd_Hasher_haagenti_ = null;
var cgtd_Hasher_crocell_ = null;
var cgtd_Hasher_furcas_ = null;
var cgtd_Hasher_balam_ = null;
var cgtd_Hasher_alloces_ = null;
var cgtd_Hasher_caim_ = null;
var cgtd_Hasher_murmur_ = null;
var cgtd_Hasher_orobas_ = null;
var cgtd_Hasher_gremory_ = null;
var cgtd_Hasher_ose_ = null;
var cgtd_Hasher_amy_ = null;
var cgtd_Hasher_orias_ = null;
var cgtd_Hasher_vapula_ = null;
var cgtd_Hasher_zagan_ = null;
var cgtd_Hasher_valac_ = null;
var cgtd_Hasher_andras_ = null;
var cgtd_Hasher_flauros_ = null;
var cgtd_Hasher_andrealphus_ = null;
var cgtd_Hasher_kimaris_ = null;
var cgtd_Hasher_amdusias_ = null;
var cgtd_Hasher_belial_ = null;
var cgtd_Hasher_decarabia_ = null;
var cgtd_Hasher_seere_ = null;
var cgtd_Hasher_dantalion_ = null;
var cgtd_Hasher_andromalius_ = null;
var cgtd_Hasher_hydrogen = null;
var cgtd_Hasher_helium = null;
var cgtd_Hasher_lithium = null;
var cgtd_Hasher_beryllium = null;
var cgtd_Hasher_boron = null;
var cgtd_Hasher_carbon = null;
var cgtd_Hasher_nitrogen = null;
var cgtd_Hasher_oxygen = null;
var cgtd_Hasher_fluorine = null;
var cgtd_Hasher_neon = null;
var cgtd_Hasher_sodium = null;
var cgtd_Hasher_magnesium = null;
var cgtd_Hasher_aluminium = null;
var cgtd_Hasher_silicon = null;
var cgtd_Hasher_phosphorus = null;
var cgtd_Hasher_sulfur = null;
var cgtd_Hasher_chlorine = null;
var cgtd_Hasher_argon = null;
var cgtd_Hasher_potassium = null;
var cgtd_Hasher_calcium = null;
var cgtd_Hasher_scandium = null;
var cgtd_Hasher_titanium = null;
var cgtd_Hasher_vanadium = null;
var cgtd_Hasher_chromium = null;
var cgtd_Hasher_manganese = null;
var cgtd_Hasher_iron = null;
var cgtd_Hasher_cobalt = null;
var cgtd_Hasher_nickel = null;
var cgtd_Hasher_copper = null;
var cgtd_Hasher_zinc = null;
var cgtd_Hasher_gallium = null;
var cgtd_Hasher_germanium = null;
var cgtd_Hasher_arsenic = null;
var cgtd_Hasher_selenium = null;
var cgtd_Hasher_bromine = null;
var cgtd_Hasher_krypton = null;
var cgtd_Hasher_rubidium = null;
var cgtd_Hasher_strontium = null;
var cgtd_Hasher_yttrium = null;
var cgtd_Hasher_zirconium = null;
var cgtd_Hasher_niobium = null;
var cgtd_Hasher_molybdenum = null;
var cgtd_Hasher_technetium = null;
var cgtd_Hasher_ruthenium = null;
var cgtd_Hasher_rhodium = null;
var cgtd_Hasher_palladium = null;
var cgtd_Hasher_silver = null;
var cgtd_Hasher_cadmium = null;
var cgtd_Hasher_indium = null;
var cgtd_Hasher_tin = null;
var cgtd_Hasher_antimony = null;
var cgtd_Hasher_tellurium = null;
var cgtd_Hasher_iodine = null;
var cgtd_Hasher_xenon = null;
var cgtd_Hasher_caesium = null;
var cgtd_Hasher_barium = null;
var cgtd_Hasher_lanthanum = null;
var cgtd_Hasher_cerium = null;
var cgtd_Hasher_praseodymium = null;
var cgtd_Hasher_neodymium = null;
var cgtd_Hasher_promethium = null;
var cgtd_Hasher_samarium = null;
var cgtd_Hasher_europium = null;
var cgtd_Hasher_gadolinium = null;
var cgtd_Hasher_terbium = null;
var cgtd_Hasher_dysprosium = null;
var cgtd_Hasher_holmium = null;
var cgtd_Hasher_erbium = null;
var cgtd_Hasher_thulium = null;
var cgtd_Hasher_ytterbium = null;
var cgtd_Hasher_lutetium = null;
var cgtd_Hasher_hafnium = null;
var cgtd_Hasher_tantalum = null;
var cgtd_Hasher_tungsten = null;
var cgtd_Hasher_rhenium = null;
var cgtd_Hasher_osmium = null;
var cgtd_Hasher_iridium = null;
var cgtd_Hasher_platinum = null;
var cgtd_Hasher_gold = null;
var cgtd_Hasher_mercury = null;
var cgtd_Hasher_thallium = null;
var cgtd_Hasher_lead = null;
var cgtd_Hasher_bismuth = null;
var cgtd_Hasher_polonium = null;
var cgtd_Hasher_astatine = null;
var cgtd_Hasher_radon = null;
var cgtd_Hasher_francium = null;
var cgtd_Hasher_radium = null;
var cgtd_Hasher_actinium = null;
var cgtd_Hasher_thorium = null;
var cgtd_Hasher_protactinium = null;
var cgtd_Hasher_uranium = null;
var cgtd_Hasher_neptunium = null;
var cgtd_Hasher_plutonium = null;
var cgtd_Hasher_americium = null;
var cgtd_Hasher_curium = null;
var cgtd_Hasher_berkelium = null;
var cgtd_Hasher_californium = null;
var cgtd_Hasher_einsteinium = null;
var cgtd_Hasher_fermium = null;
var cgtd_Hasher_mendelevium = null;
var cgtd_Hasher_nobelium = null;
var cgtd_Hasher_lawrencium = null;
var cgtd_Hasher_rutherfordium = null;
var cgtd_Hasher_dubnium = null;
var cgtd_Hasher_seaborgium = null;
var cgtd_Hasher_bohrium = null;
var cgtd_Hasher_hassium = null;
var cgtd_Hasher_meitnerium = null;
var cgtd_Hasher_darmstadtium = null;
var cgtd_Hasher_roentgenium = null;
var cgtd_Hasher_copernicium = null;
var cgtd_Hasher_nihonium = null;
var cgtd_Hasher_flerovium = null;
var cgtd_Hasher_moscovium = null;
var cgtd_Hasher_livermorium = null;
var cgtd_Hasher_tennessine = null;
var cgtd_Hasher_oganesson = null;
var cgtd_Hasher_hydrogen_ = null;
var cgtd_Hasher_helium_ = null;
var cgtd_Hasher_lithium_ = null;
var cgtd_Hasher_beryllium_ = null;
var cgtd_Hasher_boron_ = null;
var cgtd_Hasher_carbon_ = null;
var cgtd_Hasher_nitrogen_ = null;
var cgtd_Hasher_oxygen_ = null;
var cgtd_Hasher_fluorine_ = null;
var cgtd_Hasher_neon_ = null;
var cgtd_Hasher_sodium_ = null;
var cgtd_Hasher_magnesium_ = null;
var cgtd_Hasher_aluminium_ = null;
var cgtd_Hasher_silicon_ = null;
var cgtd_Hasher_phosphorus_ = null;
var cgtd_Hasher_sulfur_ = null;
var cgtd_Hasher_chlorine_ = null;
var cgtd_Hasher_argon_ = null;
var cgtd_Hasher_potassium_ = null;
var cgtd_Hasher_calcium_ = null;
var cgtd_Hasher_scandium_ = null;
var cgtd_Hasher_titanium_ = null;
var cgtd_Hasher_vanadium_ = null;
var cgtd_Hasher_chromium_ = null;
var cgtd_Hasher_manganese_ = null;
var cgtd_Hasher_iron_ = null;
var cgtd_Hasher_cobalt_ = null;
var cgtd_Hasher_nickel_ = null;
var cgtd_Hasher_copper_ = null;
var cgtd_Hasher_zinc_ = null;
var cgtd_Hasher_gallium_ = null;
var cgtd_Hasher_germanium_ = null;
var cgtd_Hasher_arsenic_ = null;
var cgtd_Hasher_selenium_ = null;
var cgtd_Hasher_bromine_ = null;
var cgtd_Hasher_krypton_ = null;
var cgtd_Hasher_rubidium_ = null;
var cgtd_Hasher_strontium_ = null;
var cgtd_Hasher_yttrium_ = null;
var cgtd_Hasher_zirconium_ = null;
var cgtd_Hasher_niobium_ = null;
var cgtd_Hasher_molybdenum_ = null;
var cgtd_Hasher_technetium_ = null;
var cgtd_Hasher_ruthenium_ = null;
var cgtd_Hasher_rhodium_ = null;
var cgtd_Hasher_palladium_ = null;
var cgtd_Hasher_silver_ = null;
var cgtd_Hasher_cadmium_ = null;
var cgtd_Hasher_indium_ = null;
var cgtd_Hasher_tin_ = null;
var cgtd_Hasher_antimony_ = null;
var cgtd_Hasher_tellurium_ = null;
var cgtd_Hasher_iodine_ = null;
var cgtd_Hasher_xenon_ = null;
var cgtd_Hasher_caesium_ = null;
var cgtd_Hasher_barium_ = null;
var cgtd_Hasher_lanthanum_ = null;
var cgtd_Hasher_cerium_ = null;
var cgtd_Hasher_praseodymium_ = null;
var cgtd_Hasher_neodymium_ = null;
var cgtd_Hasher_promethium_ = null;
var cgtd_Hasher_samarium_ = null;
var cgtd_Hasher_europium_ = null;
var cgtd_Hasher_gadolinium_ = null;
var cgtd_Hasher_terbium_ = null;
var cgtd_Hasher_dysprosium_ = null;
var cgtd_Hasher_holmium_ = null;
var cgtd_Hasher_erbium_ = null;
var cgtd_Hasher_thulium_ = null;
var cgtd_Hasher_ytterbium_ = null;
var cgtd_Hasher_lutetium_ = null;
var cgtd_Hasher_hafnium_ = null;
var cgtd_Hasher_tantalum_ = null;
var cgtd_Hasher_tungsten_ = null;
var cgtd_Hasher_rhenium_ = null;
var cgtd_Hasher_osmium_ = null;
var cgtd_Hasher_iridium_ = null;
var cgtd_Hasher_platinum_ = null;
var cgtd_Hasher_gold_ = null;
var cgtd_Hasher_mercury_ = null;
var cgtd_Hasher_thallium_ = null;
var cgtd_Hasher_lead_ = null;
var cgtd_Hasher_bismuth_ = null;
var cgtd_Hasher_polonium_ = null;
var cgtd_Hasher_astatine_ = null;
var cgtd_Hasher_radon_ = null;
var cgtd_Hasher_francium_ = null;
var cgtd_Hasher_radium_ = null;
var cgtd_Hasher_actinium_ = null;
var cgtd_Hasher_thorium_ = null;
var cgtd_Hasher_protactinium_ = null;
var cgtd_Hasher_uranium_ = null;
var cgtd_Hasher_neptunium_ = null;
var cgtd_Hasher_plutonium_ = null;
var cgtd_Hasher_americium_ = null;
var cgtd_Hasher_curium_ = null;
var cgtd_Hasher_berkelium_ = null;
var cgtd_Hasher_californium_ = null;
var cgtd_Hasher_einsteinium_ = null;
var cgtd_Hasher_fermium_ = null;
var cgtd_Hasher_mendelevium_ = null;
var cgtd_Hasher_nobelium_ = null;
var cgtd_Hasher_lawrencium_ = null;
var cgtd_Hasher_rutherfordium_ = null;
var cgtd_Hasher_dubnium_ = null;
var cgtd_Hasher_seaborgium_ = null;
var cgtd_Hasher_bohrium_ = null;
var cgtd_Hasher_hassium_ = null;
var cgtd_Hasher_meitnerium_ = null;
var cgtd_Hasher_darmstadtium_ = null;
var cgtd_Hasher_roentgenium_ = null;
var cgtd_Hasher_copernicium_ = null;
var cgtd_Hasher_nihonium_ = null;
var cgtd_Hasher_flerovium_ = null;
var cgtd_Hasher_moscovium_ = null;
var cgtd_Hasher_livermorium_ = null;
var cgtd_Hasher_tennessine_ = null;
var cgtd_Hasher_oganesson_ = null;
var cgtd_Hasher_predefined = null;
function cgtd_Hasher_$callClinit() {
    cgtd_Hasher_$callClinit = $rt_eraseClinit(cgtd_Hasher);
    cgtd_Hasher__clinit_();
}
function cgtd_Hasher__init_(var_0) {
    var var_1 = new cgtd_Hasher();
    cgtd_Hasher__init_0(var_1, var_0);
    return var_1;
}
function cgtd_Hasher__init_1(var_0) {
    var var_1 = new cgtd_Hasher();
    cgtd_Hasher__init_2(var_1, var_0);
    return var_1;
}
function cgtd_Hasher__init_0($this, $seed) {
    cgtd_Hasher_$callClinit();
    jl_Object__init_0($this);
    $this.$seed = $seed;
}
function cgtd_Hasher_randomize3($state) {
    var var$2;
    cgtd_Hasher_$callClinit();
    var$2 = Long_xor($state, Long_create(4220496899, 2882110344));
    var$2 = Long_xor(var$2, Long_shru(var$2, 32));
    var$2 = Long_mul(var$2, Long_create(3946075501, 3198297593));
    var$2 = Long_xor(var$2, Long_shru(var$2, 29));
    var$2 = Long_mul(var$2, Long_create(3946075501, 3198297593));
    var$2 = Long_xor(var$2, Long_shru(var$2, 32));
    var$2 = Long_mul(var$2, Long_create(3946075501, 3198297593));
    return Long_xor(var$2, Long_shru(var$2, 29));
}
function cgtd_Hasher__init_2($this, $seed) {
    cgtd_Hasher_$callClinit();
    cgtd_Hasher__init_0($this, cgtd_Hasher_randomize3(cgtd_Hasher_hash64(Long_fromInt(1), $seed)));
}
function cgtd_Hasher_mum($a, $b) {
    var $n;
    cgtd_Hasher_$callClinit();
    $n = Long_mul($a, $b);
    return Long_xor($n, Long_shru($n, 30));
}
function cgtd_Hasher_hash64($seed, $data) {
    cgtd_Hasher_$callClinit();
    if ($data === null)
        return Long_ZERO;
    return cgtd_Hasher_hash640($seed, $data, 0, $data.$length());
}
function cgtd_Hasher_hash640($seed, $data, $start, $length) {
    var $len, $i, var$7, var$8, var$9;
    cgtd_Hasher_$callClinit();
    if ($data !== null && $start >= 0 && $length >= 0 && $start < $length) {
        $len = jl_Math_min($length, $data.$length());
        $i = $start + 3 | 0;
        while ($i < $len) {
            var$7 = $i - 3 | 0;
            var$8 = Long_sub(cgtd_Hasher_mum(Long_xor(Long_fromInt($data.$charAt(var$7)), Long_create(2696161499, 3875765969)), Long_xor(Long_fromInt($data.$charAt($i - 2 | 0)), Long_create(2626209507, 2394712816))), $seed);
            var$7 = $i - 1 | 0;
            var$9 = cgtd_Hasher_mum(Long_xor(Long_fromInt($data.$charAt(var$7)), Long_create(1966558403, 1486448076)), Long_xor(Long_fromInt($data.$charAt($i)), Long_create(3296531023, 495865383)));
            $seed = cgtd_Hasher_mum(var$8, var$9);
            $i = $i + 4 | 0;
        }
        a: {
            switch ($len & 3) {
                case 0:
                    $seed = cgtd_Hasher_mum(Long_sub(Long_create(2696161499, 3875765969), $seed), Long_add(Long_create(3296531023, 495865383), $seed));
                    break a;
                case 1:
                    $seed = cgtd_Hasher_mum(Long_sub(Long_create(3025523045, 3947146442), $seed), Long_xor(Long_create(1966558403, 1486448076), Long_fromInt($data.$charAt(($start + $len | 0) - 1 | 0))));
                    break a;
                case 2:
                    var$7 = $start + $len | 0;
                    $seed = cgtd_Hasher_mum(Long_sub(Long_fromInt($data.$charAt(var$7 - 2 | 0)), $seed), Long_xor(Long_create(2025677871, 2692095332), Long_fromInt($data.$charAt(var$7 - 1 | 0))));
                    break a;
                case 3:
                    var$7 = $start + $len | 0;
                    $seed = Long_add(cgtd_Hasher_mum(Long_sub(Long_fromInt($data.$charAt(var$7 - 3 | 0)), $seed), Long_xor(Long_create(2626209507, 2394712816), Long_fromInt($data.$charAt(var$7 - 2 | 0)))), cgtd_Hasher_mum(Long_xor(Long_create(3025523045, 3947146442), $seed), Long_xor(Long_create(3296531023, 495865383), Long_fromInt($data.$charAt(var$7 - 1 | 0)))));
                    break a;
                default:
            }
        }
        var$8 = Long_mul(Long_xor($seed, Long_fromInt($len)), Long_xor(Long_shl($seed, 16), Long_create(2025677871, 2692095332)));
        return Long_xor(Long_xor(var$8, Long_or(Long_shl(var$8, 33), Long_shru(var$8, 31))), Long_or(Long_shl(var$8, 19), Long_shru(var$8, 45)));
    }
    return Long_ZERO;
}
function cgtd_Hasher__clinit_() {
    cgtd_Hasher_alpha = cgtd_Hasher__init_1($rt_s(502));
    cgtd_Hasher_beta = cgtd_Hasher__init_1($rt_s(503));
    cgtd_Hasher_gamma = cgtd_Hasher__init_1($rt_s(504));
    cgtd_Hasher_delta = cgtd_Hasher__init_1($rt_s(505));
    cgtd_Hasher_epsilon = cgtd_Hasher__init_1($rt_s(506));
    cgtd_Hasher_zeta = cgtd_Hasher__init_1($rt_s(507));
    cgtd_Hasher_eta = cgtd_Hasher__init_1($rt_s(508));
    cgtd_Hasher_theta = cgtd_Hasher__init_1($rt_s(509));
    cgtd_Hasher_iota = cgtd_Hasher__init_1($rt_s(510));
    cgtd_Hasher_kappa = cgtd_Hasher__init_1($rt_s(511));
    cgtd_Hasher_lambda = cgtd_Hasher__init_1($rt_s(512));
    cgtd_Hasher_mu = cgtd_Hasher__init_1($rt_s(513));
    cgtd_Hasher_nu = cgtd_Hasher__init_1($rt_s(514));
    cgtd_Hasher_xi = cgtd_Hasher__init_1($rt_s(515));
    cgtd_Hasher_omicron = cgtd_Hasher__init_1($rt_s(516));
    cgtd_Hasher_pi = cgtd_Hasher__init_1($rt_s(517));
    cgtd_Hasher_rho = cgtd_Hasher__init_1($rt_s(518));
    cgtd_Hasher_sigma = cgtd_Hasher__init_1($rt_s(519));
    cgtd_Hasher_tau = cgtd_Hasher__init_1($rt_s(520));
    cgtd_Hasher_upsilon = cgtd_Hasher__init_1($rt_s(521));
    cgtd_Hasher_phi = cgtd_Hasher__init_1($rt_s(522));
    cgtd_Hasher_chi = cgtd_Hasher__init_1($rt_s(523));
    cgtd_Hasher_psi = cgtd_Hasher__init_1($rt_s(524));
    cgtd_Hasher_omega = cgtd_Hasher__init_1($rt_s(525));
    cgtd_Hasher_alpha_ = cgtd_Hasher__init_1($rt_s(526));
    cgtd_Hasher_beta_ = cgtd_Hasher__init_1($rt_s(527));
    cgtd_Hasher_gamma_ = cgtd_Hasher__init_1($rt_s(528));
    cgtd_Hasher_delta_ = cgtd_Hasher__init_1($rt_s(529));
    cgtd_Hasher_epsilon_ = cgtd_Hasher__init_1($rt_s(530));
    cgtd_Hasher_zeta_ = cgtd_Hasher__init_1($rt_s(531));
    cgtd_Hasher_eta_ = cgtd_Hasher__init_1($rt_s(532));
    cgtd_Hasher_theta_ = cgtd_Hasher__init_1($rt_s(533));
    cgtd_Hasher_iota_ = cgtd_Hasher__init_1($rt_s(534));
    cgtd_Hasher_kappa_ = cgtd_Hasher__init_1($rt_s(535));
    cgtd_Hasher_lambda_ = cgtd_Hasher__init_1($rt_s(536));
    cgtd_Hasher_mu_ = cgtd_Hasher__init_1($rt_s(537));
    cgtd_Hasher_nu_ = cgtd_Hasher__init_1($rt_s(538));
    cgtd_Hasher_xi_ = cgtd_Hasher__init_1($rt_s(539));
    cgtd_Hasher_omicron_ = cgtd_Hasher__init_1($rt_s(540));
    cgtd_Hasher_pi_ = cgtd_Hasher__init_1($rt_s(541));
    cgtd_Hasher_rho_ = cgtd_Hasher__init_1($rt_s(542));
    cgtd_Hasher_sigma_ = cgtd_Hasher__init_1($rt_s(543));
    cgtd_Hasher_tau_ = cgtd_Hasher__init_1($rt_s(544));
    cgtd_Hasher_upsilon_ = cgtd_Hasher__init_1($rt_s(545));
    cgtd_Hasher_phi_ = cgtd_Hasher__init_1($rt_s(546));
    cgtd_Hasher_chi_ = cgtd_Hasher__init_1($rt_s(547));
    cgtd_Hasher_psi_ = cgtd_Hasher__init_1($rt_s(548));
    cgtd_Hasher_omega_ = cgtd_Hasher__init_1($rt_s(549));
    cgtd_Hasher_baal = cgtd_Hasher__init_1($rt_s(550));
    cgtd_Hasher_agares = cgtd_Hasher__init_1($rt_s(551));
    cgtd_Hasher_vassago = cgtd_Hasher__init_1($rt_s(552));
    cgtd_Hasher_samigina = cgtd_Hasher__init_1($rt_s(553));
    cgtd_Hasher_marbas = cgtd_Hasher__init_1($rt_s(554));
    cgtd_Hasher_valefor = cgtd_Hasher__init_1($rt_s(555));
    cgtd_Hasher_amon = cgtd_Hasher__init_1($rt_s(556));
    cgtd_Hasher_barbatos = cgtd_Hasher__init_1($rt_s(557));
    cgtd_Hasher_paimon = cgtd_Hasher__init_1($rt_s(558));
    cgtd_Hasher_buer = cgtd_Hasher__init_1($rt_s(559));
    cgtd_Hasher_gusion = cgtd_Hasher__init_1($rt_s(560));
    cgtd_Hasher_sitri = cgtd_Hasher__init_1($rt_s(561));
    cgtd_Hasher_beleth = cgtd_Hasher__init_1($rt_s(562));
    cgtd_Hasher_leraje = cgtd_Hasher__init_1($rt_s(563));
    cgtd_Hasher_eligos = cgtd_Hasher__init_1($rt_s(564));
    cgtd_Hasher_zepar = cgtd_Hasher__init_1($rt_s(565));
    cgtd_Hasher_botis = cgtd_Hasher__init_1($rt_s(566));
    cgtd_Hasher_bathin = cgtd_Hasher__init_1($rt_s(567));
    cgtd_Hasher_sallos = cgtd_Hasher__init_1($rt_s(568));
    cgtd_Hasher_purson = cgtd_Hasher__init_1($rt_s(569));
    cgtd_Hasher_marax = cgtd_Hasher__init_1($rt_s(570));
    cgtd_Hasher_ipos = cgtd_Hasher__init_1($rt_s(571));
    cgtd_Hasher_aim = cgtd_Hasher__init_1($rt_s(572));
    cgtd_Hasher_naberius = cgtd_Hasher__init_1($rt_s(573));
    cgtd_Hasher_glasya_labolas = cgtd_Hasher__init_1($rt_s(574));
    cgtd_Hasher_bune = cgtd_Hasher__init_1($rt_s(575));
    cgtd_Hasher_ronove = cgtd_Hasher__init_1($rt_s(576));
    cgtd_Hasher_berith = cgtd_Hasher__init_1($rt_s(577));
    cgtd_Hasher_astaroth = cgtd_Hasher__init_1($rt_s(578));
    cgtd_Hasher_forneus = cgtd_Hasher__init_1($rt_s(579));
    cgtd_Hasher_foras = cgtd_Hasher__init_1($rt_s(580));
    cgtd_Hasher_asmoday = cgtd_Hasher__init_1($rt_s(581));
    cgtd_Hasher_gaap = cgtd_Hasher__init_1($rt_s(582));
    cgtd_Hasher_furfur = cgtd_Hasher__init_1($rt_s(583));
    cgtd_Hasher_marchosias = cgtd_Hasher__init_1($rt_s(584));
    cgtd_Hasher_stolas = cgtd_Hasher__init_1($rt_s(585));
    cgtd_Hasher_phenex = cgtd_Hasher__init_1($rt_s(586));
    cgtd_Hasher_halphas = cgtd_Hasher__init_1($rt_s(587));
    cgtd_Hasher_malphas = cgtd_Hasher__init_1($rt_s(588));
    cgtd_Hasher_raum = cgtd_Hasher__init_1($rt_s(589));
    cgtd_Hasher_focalor = cgtd_Hasher__init_1($rt_s(590));
    cgtd_Hasher_vepar = cgtd_Hasher__init_1($rt_s(591));
    cgtd_Hasher_sabnock = cgtd_Hasher__init_1($rt_s(592));
    cgtd_Hasher_shax = cgtd_Hasher__init_1($rt_s(593));
    cgtd_Hasher_vine = cgtd_Hasher__init_1($rt_s(594));
    cgtd_Hasher_bifrons = cgtd_Hasher__init_1($rt_s(595));
    cgtd_Hasher_vual = cgtd_Hasher__init_1($rt_s(596));
    cgtd_Hasher_haagenti = cgtd_Hasher__init_1($rt_s(597));
    cgtd_Hasher_crocell = cgtd_Hasher__init_1($rt_s(598));
    cgtd_Hasher_furcas = cgtd_Hasher__init_1($rt_s(599));
    cgtd_Hasher_balam = cgtd_Hasher__init_1($rt_s(600));
    cgtd_Hasher_alloces = cgtd_Hasher__init_1($rt_s(601));
    cgtd_Hasher_caim = cgtd_Hasher__init_1($rt_s(602));
    cgtd_Hasher_murmur = cgtd_Hasher__init_1($rt_s(603));
    cgtd_Hasher_orobas = cgtd_Hasher__init_1($rt_s(604));
    cgtd_Hasher_gremory = cgtd_Hasher__init_1($rt_s(605));
    cgtd_Hasher_ose = cgtd_Hasher__init_1($rt_s(606));
    cgtd_Hasher_amy = cgtd_Hasher__init_1($rt_s(607));
    cgtd_Hasher_orias = cgtd_Hasher__init_1($rt_s(608));
    cgtd_Hasher_vapula = cgtd_Hasher__init_1($rt_s(609));
    cgtd_Hasher_zagan = cgtd_Hasher__init_1($rt_s(610));
    cgtd_Hasher_valac = cgtd_Hasher__init_1($rt_s(611));
    cgtd_Hasher_andras = cgtd_Hasher__init_1($rt_s(612));
    cgtd_Hasher_flauros = cgtd_Hasher__init_1($rt_s(613));
    cgtd_Hasher_andrealphus = cgtd_Hasher__init_1($rt_s(614));
    cgtd_Hasher_kimaris = cgtd_Hasher__init_1($rt_s(615));
    cgtd_Hasher_amdusias = cgtd_Hasher__init_1($rt_s(616));
    cgtd_Hasher_belial = cgtd_Hasher__init_1($rt_s(617));
    cgtd_Hasher_decarabia = cgtd_Hasher__init_1($rt_s(618));
    cgtd_Hasher_seere = cgtd_Hasher__init_1($rt_s(619));
    cgtd_Hasher_dantalion = cgtd_Hasher__init_1($rt_s(620));
    cgtd_Hasher_andromalius = cgtd_Hasher__init_1($rt_s(621));
    cgtd_Hasher_baal_ = cgtd_Hasher__init_1($rt_s(622));
    cgtd_Hasher_agares_ = cgtd_Hasher__init_1($rt_s(623));
    cgtd_Hasher_vassago_ = cgtd_Hasher__init_1($rt_s(624));
    cgtd_Hasher_samigina_ = cgtd_Hasher__init_1($rt_s(625));
    cgtd_Hasher_marbas_ = cgtd_Hasher__init_1($rt_s(626));
    cgtd_Hasher_valefor_ = cgtd_Hasher__init_1($rt_s(627));
    cgtd_Hasher_amon_ = cgtd_Hasher__init_1($rt_s(628));
    cgtd_Hasher_barbatos_ = cgtd_Hasher__init_1($rt_s(629));
    cgtd_Hasher_paimon_ = cgtd_Hasher__init_1($rt_s(630));
    cgtd_Hasher_buer_ = cgtd_Hasher__init_1($rt_s(631));
    cgtd_Hasher_gusion_ = cgtd_Hasher__init_1($rt_s(632));
    cgtd_Hasher_sitri_ = cgtd_Hasher__init_1($rt_s(633));
    cgtd_Hasher_beleth_ = cgtd_Hasher__init_1($rt_s(634));
    cgtd_Hasher_leraje_ = cgtd_Hasher__init_1($rt_s(635));
    cgtd_Hasher_eligos_ = cgtd_Hasher__init_1($rt_s(636));
    cgtd_Hasher_zepar_ = cgtd_Hasher__init_1($rt_s(637));
    cgtd_Hasher_botis_ = cgtd_Hasher__init_1($rt_s(638));
    cgtd_Hasher_bathin_ = cgtd_Hasher__init_1($rt_s(639));
    cgtd_Hasher_sallos_ = cgtd_Hasher__init_1($rt_s(640));
    cgtd_Hasher_purson_ = cgtd_Hasher__init_1($rt_s(641));
    cgtd_Hasher_marax_ = cgtd_Hasher__init_1($rt_s(642));
    cgtd_Hasher_ipos_ = cgtd_Hasher__init_1($rt_s(643));
    cgtd_Hasher_aim_ = cgtd_Hasher__init_1($rt_s(644));
    cgtd_Hasher_naberius_ = cgtd_Hasher__init_1($rt_s(645));
    cgtd_Hasher_glasya_labolas_ = cgtd_Hasher__init_1($rt_s(646));
    cgtd_Hasher_bune_ = cgtd_Hasher__init_1($rt_s(647));
    cgtd_Hasher_ronove_ = cgtd_Hasher__init_1($rt_s(648));
    cgtd_Hasher_berith_ = cgtd_Hasher__init_1($rt_s(649));
    cgtd_Hasher_astaroth_ = cgtd_Hasher__init_1($rt_s(650));
    cgtd_Hasher_forneus_ = cgtd_Hasher__init_1($rt_s(651));
    cgtd_Hasher_foras_ = cgtd_Hasher__init_1($rt_s(652));
    cgtd_Hasher_asmoday_ = cgtd_Hasher__init_1($rt_s(653));
    cgtd_Hasher_gaap_ = cgtd_Hasher__init_1($rt_s(654));
    cgtd_Hasher_furfur_ = cgtd_Hasher__init_1($rt_s(655));
    cgtd_Hasher_marchosias_ = cgtd_Hasher__init_1($rt_s(656));
    cgtd_Hasher_stolas_ = cgtd_Hasher__init_1($rt_s(657));
    cgtd_Hasher_phenex_ = cgtd_Hasher__init_1($rt_s(658));
    cgtd_Hasher_halphas_ = cgtd_Hasher__init_1($rt_s(659));
    cgtd_Hasher_malphas_ = cgtd_Hasher__init_1($rt_s(660));
    cgtd_Hasher_raum_ = cgtd_Hasher__init_1($rt_s(661));
    cgtd_Hasher_focalor_ = cgtd_Hasher__init_1($rt_s(662));
    cgtd_Hasher_vepar_ = cgtd_Hasher__init_1($rt_s(663));
    cgtd_Hasher_sabnock_ = cgtd_Hasher__init_1($rt_s(664));
    cgtd_Hasher_shax_ = cgtd_Hasher__init_1($rt_s(665));
    cgtd_Hasher_vine_ = cgtd_Hasher__init_1($rt_s(666));
    cgtd_Hasher_bifrons_ = cgtd_Hasher__init_1($rt_s(667));
    cgtd_Hasher_vual_ = cgtd_Hasher__init_1($rt_s(668));
    cgtd_Hasher_haagenti_ = cgtd_Hasher__init_1($rt_s(669));
    cgtd_Hasher_crocell_ = cgtd_Hasher__init_1($rt_s(670));
    cgtd_Hasher_furcas_ = cgtd_Hasher__init_1($rt_s(671));
    cgtd_Hasher_balam_ = cgtd_Hasher__init_1($rt_s(672));
    cgtd_Hasher_alloces_ = cgtd_Hasher__init_1($rt_s(673));
    cgtd_Hasher_caim_ = cgtd_Hasher__init_1($rt_s(674));
    cgtd_Hasher_murmur_ = cgtd_Hasher__init_1($rt_s(675));
    cgtd_Hasher_orobas_ = cgtd_Hasher__init_1($rt_s(676));
    cgtd_Hasher_gremory_ = cgtd_Hasher__init_1($rt_s(677));
    cgtd_Hasher_ose_ = cgtd_Hasher__init_1($rt_s(678));
    cgtd_Hasher_amy_ = cgtd_Hasher__init_1($rt_s(679));
    cgtd_Hasher_orias_ = cgtd_Hasher__init_1($rt_s(680));
    cgtd_Hasher_vapula_ = cgtd_Hasher__init_1($rt_s(681));
    cgtd_Hasher_zagan_ = cgtd_Hasher__init_1($rt_s(682));
    cgtd_Hasher_valac_ = cgtd_Hasher__init_1($rt_s(683));
    cgtd_Hasher_andras_ = cgtd_Hasher__init_1($rt_s(684));
    cgtd_Hasher_flauros_ = cgtd_Hasher__init_1($rt_s(685));
    cgtd_Hasher_andrealphus_ = cgtd_Hasher__init_1($rt_s(686));
    cgtd_Hasher_kimaris_ = cgtd_Hasher__init_1($rt_s(687));
    cgtd_Hasher_amdusias_ = cgtd_Hasher__init_1($rt_s(688));
    cgtd_Hasher_belial_ = cgtd_Hasher__init_1($rt_s(689));
    cgtd_Hasher_decarabia_ = cgtd_Hasher__init_1($rt_s(690));
    cgtd_Hasher_seere_ = cgtd_Hasher__init_1($rt_s(691));
    cgtd_Hasher_dantalion_ = cgtd_Hasher__init_1($rt_s(692));
    cgtd_Hasher_andromalius_ = cgtd_Hasher__init_1($rt_s(693));
    cgtd_Hasher_hydrogen = cgtd_Hasher__init_1($rt_s(694));
    cgtd_Hasher_helium = cgtd_Hasher__init_1($rt_s(695));
    cgtd_Hasher_lithium = cgtd_Hasher__init_1($rt_s(696));
    cgtd_Hasher_beryllium = cgtd_Hasher__init_1($rt_s(697));
    cgtd_Hasher_boron = cgtd_Hasher__init_1($rt_s(698));
    cgtd_Hasher_carbon = cgtd_Hasher__init_1($rt_s(699));
    cgtd_Hasher_nitrogen = cgtd_Hasher__init_1($rt_s(700));
    cgtd_Hasher_oxygen = cgtd_Hasher__init_1($rt_s(701));
    cgtd_Hasher_fluorine = cgtd_Hasher__init_1($rt_s(702));
    cgtd_Hasher_neon = cgtd_Hasher__init_1($rt_s(703));
    cgtd_Hasher_sodium = cgtd_Hasher__init_1($rt_s(704));
    cgtd_Hasher_magnesium = cgtd_Hasher__init_1($rt_s(705));
    cgtd_Hasher_aluminium = cgtd_Hasher__init_1($rt_s(706));
    cgtd_Hasher_silicon = cgtd_Hasher__init_1($rt_s(707));
    cgtd_Hasher_phosphorus = cgtd_Hasher__init_1($rt_s(708));
    cgtd_Hasher_sulfur = cgtd_Hasher__init_1($rt_s(709));
    cgtd_Hasher_chlorine = cgtd_Hasher__init_1($rt_s(710));
    cgtd_Hasher_argon = cgtd_Hasher__init_1($rt_s(711));
    cgtd_Hasher_potassium = cgtd_Hasher__init_1($rt_s(712));
    cgtd_Hasher_calcium = cgtd_Hasher__init_1($rt_s(713));
    cgtd_Hasher_scandium = cgtd_Hasher__init_1($rt_s(714));
    cgtd_Hasher_titanium = cgtd_Hasher__init_1($rt_s(715));
    cgtd_Hasher_vanadium = cgtd_Hasher__init_1($rt_s(716));
    cgtd_Hasher_chromium = cgtd_Hasher__init_1($rt_s(717));
    cgtd_Hasher_manganese = cgtd_Hasher__init_1($rt_s(718));
    cgtd_Hasher_iron = cgtd_Hasher__init_1($rt_s(719));
    cgtd_Hasher_cobalt = cgtd_Hasher__init_1($rt_s(720));
    cgtd_Hasher_nickel = cgtd_Hasher__init_1($rt_s(721));
    cgtd_Hasher_copper = cgtd_Hasher__init_1($rt_s(722));
    cgtd_Hasher_zinc = cgtd_Hasher__init_1($rt_s(723));
    cgtd_Hasher_gallium = cgtd_Hasher__init_1($rt_s(724));
    cgtd_Hasher_germanium = cgtd_Hasher__init_1($rt_s(725));
    cgtd_Hasher_arsenic = cgtd_Hasher__init_1($rt_s(726));
    cgtd_Hasher_selenium = cgtd_Hasher__init_1($rt_s(727));
    cgtd_Hasher_bromine = cgtd_Hasher__init_1($rt_s(728));
    cgtd_Hasher_krypton = cgtd_Hasher__init_1($rt_s(729));
    cgtd_Hasher_rubidium = cgtd_Hasher__init_1($rt_s(730));
    cgtd_Hasher_strontium = cgtd_Hasher__init_1($rt_s(731));
    cgtd_Hasher_yttrium = cgtd_Hasher__init_1($rt_s(732));
    cgtd_Hasher_zirconium = cgtd_Hasher__init_1($rt_s(733));
    cgtd_Hasher_niobium = cgtd_Hasher__init_1($rt_s(734));
    cgtd_Hasher_molybdenum = cgtd_Hasher__init_1($rt_s(735));
    cgtd_Hasher_technetium = cgtd_Hasher__init_1($rt_s(736));
    cgtd_Hasher_ruthenium = cgtd_Hasher__init_1($rt_s(737));
    cgtd_Hasher_rhodium = cgtd_Hasher__init_1($rt_s(738));
    cgtd_Hasher_palladium = cgtd_Hasher__init_1($rt_s(739));
    cgtd_Hasher_silver = cgtd_Hasher__init_1($rt_s(740));
    cgtd_Hasher_cadmium = cgtd_Hasher__init_1($rt_s(741));
    cgtd_Hasher_indium = cgtd_Hasher__init_1($rt_s(742));
    cgtd_Hasher_tin = cgtd_Hasher__init_1($rt_s(743));
    cgtd_Hasher_antimony = cgtd_Hasher__init_1($rt_s(744));
    cgtd_Hasher_tellurium = cgtd_Hasher__init_1($rt_s(745));
    cgtd_Hasher_iodine = cgtd_Hasher__init_1($rt_s(746));
    cgtd_Hasher_xenon = cgtd_Hasher__init_1($rt_s(747));
    cgtd_Hasher_caesium = cgtd_Hasher__init_1($rt_s(748));
    cgtd_Hasher_barium = cgtd_Hasher__init_1($rt_s(749));
    cgtd_Hasher_lanthanum = cgtd_Hasher__init_1($rt_s(750));
    cgtd_Hasher_cerium = cgtd_Hasher__init_1($rt_s(751));
    cgtd_Hasher_praseodymium = cgtd_Hasher__init_1($rt_s(752));
    cgtd_Hasher_neodymium = cgtd_Hasher__init_1($rt_s(753));
    cgtd_Hasher_promethium = cgtd_Hasher__init_1($rt_s(754));
    cgtd_Hasher_samarium = cgtd_Hasher__init_1($rt_s(755));
    cgtd_Hasher_europium = cgtd_Hasher__init_1($rt_s(756));
    cgtd_Hasher_gadolinium = cgtd_Hasher__init_1($rt_s(757));
    cgtd_Hasher_terbium = cgtd_Hasher__init_1($rt_s(758));
    cgtd_Hasher_dysprosium = cgtd_Hasher__init_1($rt_s(759));
    cgtd_Hasher_holmium = cgtd_Hasher__init_1($rt_s(760));
    cgtd_Hasher_erbium = cgtd_Hasher__init_1($rt_s(761));
    cgtd_Hasher_thulium = cgtd_Hasher__init_1($rt_s(762));
    cgtd_Hasher_ytterbium = cgtd_Hasher__init_1($rt_s(763));
    cgtd_Hasher_lutetium = cgtd_Hasher__init_1($rt_s(764));
    cgtd_Hasher_hafnium = cgtd_Hasher__init_1($rt_s(765));
    cgtd_Hasher_tantalum = cgtd_Hasher__init_1($rt_s(766));
    cgtd_Hasher_tungsten = cgtd_Hasher__init_1($rt_s(767));
    cgtd_Hasher_rhenium = cgtd_Hasher__init_1($rt_s(768));
    cgtd_Hasher_osmium = cgtd_Hasher__init_1($rt_s(769));
    cgtd_Hasher_iridium = cgtd_Hasher__init_1($rt_s(770));
    cgtd_Hasher_platinum = cgtd_Hasher__init_1($rt_s(771));
    cgtd_Hasher_gold = cgtd_Hasher__init_1($rt_s(772));
    cgtd_Hasher_mercury = cgtd_Hasher__init_1($rt_s(773));
    cgtd_Hasher_thallium = cgtd_Hasher__init_1($rt_s(774));
    cgtd_Hasher_lead = cgtd_Hasher__init_1($rt_s(775));
    cgtd_Hasher_bismuth = cgtd_Hasher__init_1($rt_s(776));
    cgtd_Hasher_polonium = cgtd_Hasher__init_1($rt_s(777));
    cgtd_Hasher_astatine = cgtd_Hasher__init_1($rt_s(778));
    cgtd_Hasher_radon = cgtd_Hasher__init_1($rt_s(779));
    cgtd_Hasher_francium = cgtd_Hasher__init_1($rt_s(780));
    cgtd_Hasher_radium = cgtd_Hasher__init_1($rt_s(781));
    cgtd_Hasher_actinium = cgtd_Hasher__init_1($rt_s(782));
    cgtd_Hasher_thorium = cgtd_Hasher__init_1($rt_s(783));
    cgtd_Hasher_protactinium = cgtd_Hasher__init_1($rt_s(784));
    cgtd_Hasher_uranium = cgtd_Hasher__init_1($rt_s(785));
    cgtd_Hasher_neptunium = cgtd_Hasher__init_1($rt_s(786));
    cgtd_Hasher_plutonium = cgtd_Hasher__init_1($rt_s(787));
    cgtd_Hasher_americium = cgtd_Hasher__init_1($rt_s(788));
    cgtd_Hasher_curium = cgtd_Hasher__init_1($rt_s(789));
    cgtd_Hasher_berkelium = cgtd_Hasher__init_1($rt_s(790));
    cgtd_Hasher_californium = cgtd_Hasher__init_1($rt_s(791));
    cgtd_Hasher_einsteinium = cgtd_Hasher__init_1($rt_s(792));
    cgtd_Hasher_fermium = cgtd_Hasher__init_1($rt_s(793));
    cgtd_Hasher_mendelevium = cgtd_Hasher__init_1($rt_s(794));
    cgtd_Hasher_nobelium = cgtd_Hasher__init_1($rt_s(795));
    cgtd_Hasher_lawrencium = cgtd_Hasher__init_1($rt_s(796));
    cgtd_Hasher_rutherfordium = cgtd_Hasher__init_1($rt_s(797));
    cgtd_Hasher_dubnium = cgtd_Hasher__init_1($rt_s(798));
    cgtd_Hasher_seaborgium = cgtd_Hasher__init_1($rt_s(799));
    cgtd_Hasher_bohrium = cgtd_Hasher__init_1($rt_s(800));
    cgtd_Hasher_hassium = cgtd_Hasher__init_1($rt_s(801));
    cgtd_Hasher_meitnerium = cgtd_Hasher__init_1($rt_s(802));
    cgtd_Hasher_darmstadtium = cgtd_Hasher__init_1($rt_s(803));
    cgtd_Hasher_roentgenium = cgtd_Hasher__init_1($rt_s(804));
    cgtd_Hasher_copernicium = cgtd_Hasher__init_1($rt_s(805));
    cgtd_Hasher_nihonium = cgtd_Hasher__init_1($rt_s(806));
    cgtd_Hasher_flerovium = cgtd_Hasher__init_1($rt_s(807));
    cgtd_Hasher_moscovium = cgtd_Hasher__init_1($rt_s(808));
    cgtd_Hasher_livermorium = cgtd_Hasher__init_1($rt_s(809));
    cgtd_Hasher_tennessine = cgtd_Hasher__init_1($rt_s(810));
    cgtd_Hasher_oganesson = cgtd_Hasher__init_1($rt_s(811));
    cgtd_Hasher_hydrogen_ = cgtd_Hasher__init_1($rt_s(812));
    cgtd_Hasher_helium_ = cgtd_Hasher__init_1($rt_s(813));
    cgtd_Hasher_lithium_ = cgtd_Hasher__init_1($rt_s(814));
    cgtd_Hasher_beryllium_ = cgtd_Hasher__init_1($rt_s(815));
    cgtd_Hasher_boron_ = cgtd_Hasher__init_1($rt_s(816));
    cgtd_Hasher_carbon_ = cgtd_Hasher__init_1($rt_s(817));
    cgtd_Hasher_nitrogen_ = cgtd_Hasher__init_1($rt_s(818));
    cgtd_Hasher_oxygen_ = cgtd_Hasher__init_1($rt_s(819));
    cgtd_Hasher_fluorine_ = cgtd_Hasher__init_1($rt_s(820));
    cgtd_Hasher_neon_ = cgtd_Hasher__init_1($rt_s(821));
    cgtd_Hasher_sodium_ = cgtd_Hasher__init_1($rt_s(822));
    cgtd_Hasher_magnesium_ = cgtd_Hasher__init_1($rt_s(823));
    cgtd_Hasher_aluminium_ = cgtd_Hasher__init_1($rt_s(824));
    cgtd_Hasher_silicon_ = cgtd_Hasher__init_1($rt_s(825));
    cgtd_Hasher_phosphorus_ = cgtd_Hasher__init_1($rt_s(826));
    cgtd_Hasher_sulfur_ = cgtd_Hasher__init_1($rt_s(827));
    cgtd_Hasher_chlorine_ = cgtd_Hasher__init_1($rt_s(828));
    cgtd_Hasher_argon_ = cgtd_Hasher__init_1($rt_s(829));
    cgtd_Hasher_potassium_ = cgtd_Hasher__init_1($rt_s(830));
    cgtd_Hasher_calcium_ = cgtd_Hasher__init_1($rt_s(831));
    cgtd_Hasher_scandium_ = cgtd_Hasher__init_1($rt_s(832));
    cgtd_Hasher_titanium_ = cgtd_Hasher__init_1($rt_s(833));
    cgtd_Hasher_vanadium_ = cgtd_Hasher__init_1($rt_s(834));
    cgtd_Hasher_chromium_ = cgtd_Hasher__init_1($rt_s(835));
    cgtd_Hasher_manganese_ = cgtd_Hasher__init_1($rt_s(836));
    cgtd_Hasher_iron_ = cgtd_Hasher__init_1($rt_s(837));
    cgtd_Hasher_cobalt_ = cgtd_Hasher__init_1($rt_s(838));
    cgtd_Hasher_nickel_ = cgtd_Hasher__init_1($rt_s(839));
    cgtd_Hasher_copper_ = cgtd_Hasher__init_1($rt_s(840));
    cgtd_Hasher_zinc_ = cgtd_Hasher__init_1($rt_s(841));
    cgtd_Hasher_gallium_ = cgtd_Hasher__init_1($rt_s(842));
    cgtd_Hasher_germanium_ = cgtd_Hasher__init_1($rt_s(843));
    cgtd_Hasher_arsenic_ = cgtd_Hasher__init_1($rt_s(844));
    cgtd_Hasher_selenium_ = cgtd_Hasher__init_1($rt_s(845));
    cgtd_Hasher_bromine_ = cgtd_Hasher__init_1($rt_s(846));
    cgtd_Hasher_krypton_ = cgtd_Hasher__init_1($rt_s(847));
    cgtd_Hasher_rubidium_ = cgtd_Hasher__init_1($rt_s(848));
    cgtd_Hasher_strontium_ = cgtd_Hasher__init_1($rt_s(849));
    cgtd_Hasher_yttrium_ = cgtd_Hasher__init_1($rt_s(850));
    cgtd_Hasher_zirconium_ = cgtd_Hasher__init_1($rt_s(851));
    cgtd_Hasher_niobium_ = cgtd_Hasher__init_1($rt_s(852));
    cgtd_Hasher_molybdenum_ = cgtd_Hasher__init_1($rt_s(853));
    cgtd_Hasher_technetium_ = cgtd_Hasher__init_1($rt_s(854));
    cgtd_Hasher_ruthenium_ = cgtd_Hasher__init_1($rt_s(855));
    cgtd_Hasher_rhodium_ = cgtd_Hasher__init_1($rt_s(856));
    cgtd_Hasher_palladium_ = cgtd_Hasher__init_1($rt_s(857));
    cgtd_Hasher_silver_ = cgtd_Hasher__init_1($rt_s(858));
    cgtd_Hasher_cadmium_ = cgtd_Hasher__init_1($rt_s(859));
    cgtd_Hasher_indium_ = cgtd_Hasher__init_1($rt_s(860));
    cgtd_Hasher_tin_ = cgtd_Hasher__init_1($rt_s(861));
    cgtd_Hasher_antimony_ = cgtd_Hasher__init_1($rt_s(862));
    cgtd_Hasher_tellurium_ = cgtd_Hasher__init_1($rt_s(863));
    cgtd_Hasher_iodine_ = cgtd_Hasher__init_1($rt_s(864));
    cgtd_Hasher_xenon_ = cgtd_Hasher__init_1($rt_s(865));
    cgtd_Hasher_caesium_ = cgtd_Hasher__init_1($rt_s(866));
    cgtd_Hasher_barium_ = cgtd_Hasher__init_1($rt_s(867));
    cgtd_Hasher_lanthanum_ = cgtd_Hasher__init_1($rt_s(868));
    cgtd_Hasher_cerium_ = cgtd_Hasher__init_1($rt_s(869));
    cgtd_Hasher_praseodymium_ = cgtd_Hasher__init_1($rt_s(870));
    cgtd_Hasher_neodymium_ = cgtd_Hasher__init_1($rt_s(871));
    cgtd_Hasher_promethium_ = cgtd_Hasher__init_1($rt_s(872));
    cgtd_Hasher_samarium_ = cgtd_Hasher__init_1($rt_s(873));
    cgtd_Hasher_europium_ = cgtd_Hasher__init_1($rt_s(874));
    cgtd_Hasher_gadolinium_ = cgtd_Hasher__init_1($rt_s(875));
    cgtd_Hasher_terbium_ = cgtd_Hasher__init_1($rt_s(876));
    cgtd_Hasher_dysprosium_ = cgtd_Hasher__init_1($rt_s(877));
    cgtd_Hasher_holmium_ = cgtd_Hasher__init_1($rt_s(878));
    cgtd_Hasher_erbium_ = cgtd_Hasher__init_1($rt_s(879));
    cgtd_Hasher_thulium_ = cgtd_Hasher__init_1($rt_s(880));
    cgtd_Hasher_ytterbium_ = cgtd_Hasher__init_1($rt_s(881));
    cgtd_Hasher_lutetium_ = cgtd_Hasher__init_1($rt_s(882));
    cgtd_Hasher_hafnium_ = cgtd_Hasher__init_1($rt_s(883));
    cgtd_Hasher_tantalum_ = cgtd_Hasher__init_1($rt_s(884));
    cgtd_Hasher_tungsten_ = cgtd_Hasher__init_1($rt_s(885));
    cgtd_Hasher_rhenium_ = cgtd_Hasher__init_1($rt_s(886));
    cgtd_Hasher_osmium_ = cgtd_Hasher__init_1($rt_s(887));
    cgtd_Hasher_iridium_ = cgtd_Hasher__init_1($rt_s(888));
    cgtd_Hasher_platinum_ = cgtd_Hasher__init_1($rt_s(889));
    cgtd_Hasher_gold_ = cgtd_Hasher__init_1($rt_s(890));
    cgtd_Hasher_mercury_ = cgtd_Hasher__init_1($rt_s(891));
    cgtd_Hasher_thallium_ = cgtd_Hasher__init_1($rt_s(892));
    cgtd_Hasher_lead_ = cgtd_Hasher__init_1($rt_s(893));
    cgtd_Hasher_bismuth_ = cgtd_Hasher__init_1($rt_s(894));
    cgtd_Hasher_polonium_ = cgtd_Hasher__init_1($rt_s(895));
    cgtd_Hasher_astatine_ = cgtd_Hasher__init_1($rt_s(896));
    cgtd_Hasher_radon_ = cgtd_Hasher__init_1($rt_s(897));
    cgtd_Hasher_francium_ = cgtd_Hasher__init_1($rt_s(898));
    cgtd_Hasher_radium_ = cgtd_Hasher__init_1($rt_s(899));
    cgtd_Hasher_actinium_ = cgtd_Hasher__init_1($rt_s(900));
    cgtd_Hasher_thorium_ = cgtd_Hasher__init_1($rt_s(901));
    cgtd_Hasher_protactinium_ = cgtd_Hasher__init_1($rt_s(902));
    cgtd_Hasher_uranium_ = cgtd_Hasher__init_1($rt_s(903));
    cgtd_Hasher_neptunium_ = cgtd_Hasher__init_1($rt_s(904));
    cgtd_Hasher_plutonium_ = cgtd_Hasher__init_1($rt_s(905));
    cgtd_Hasher_americium_ = cgtd_Hasher__init_1($rt_s(906));
    cgtd_Hasher_curium_ = cgtd_Hasher__init_1($rt_s(907));
    cgtd_Hasher_berkelium_ = cgtd_Hasher__init_1($rt_s(908));
    cgtd_Hasher_californium_ = cgtd_Hasher__init_1($rt_s(909));
    cgtd_Hasher_einsteinium_ = cgtd_Hasher__init_1($rt_s(910));
    cgtd_Hasher_fermium_ = cgtd_Hasher__init_1($rt_s(911));
    cgtd_Hasher_mendelevium_ = cgtd_Hasher__init_1($rt_s(912));
    cgtd_Hasher_nobelium_ = cgtd_Hasher__init_1($rt_s(913));
    cgtd_Hasher_lawrencium_ = cgtd_Hasher__init_1($rt_s(914));
    cgtd_Hasher_rutherfordium_ = cgtd_Hasher__init_1($rt_s(915));
    cgtd_Hasher_dubnium_ = cgtd_Hasher__init_1($rt_s(916));
    cgtd_Hasher_seaborgium_ = cgtd_Hasher__init_1($rt_s(917));
    cgtd_Hasher_bohrium_ = cgtd_Hasher__init_1($rt_s(918));
    cgtd_Hasher_hassium_ = cgtd_Hasher__init_1($rt_s(919));
    cgtd_Hasher_meitnerium_ = cgtd_Hasher__init_1($rt_s(920));
    cgtd_Hasher_darmstadtium_ = cgtd_Hasher__init_1($rt_s(921));
    cgtd_Hasher_roentgenium_ = cgtd_Hasher__init_1($rt_s(922));
    cgtd_Hasher_copernicium_ = cgtd_Hasher__init_1($rt_s(923));
    cgtd_Hasher_nihonium_ = cgtd_Hasher__init_1($rt_s(924));
    cgtd_Hasher_flerovium_ = cgtd_Hasher__init_1($rt_s(925));
    cgtd_Hasher_moscovium_ = cgtd_Hasher__init_1($rt_s(926));
    cgtd_Hasher_livermorium_ = cgtd_Hasher__init_1($rt_s(927));
    cgtd_Hasher_tennessine_ = cgtd_Hasher__init_1($rt_s(928));
    cgtd_Hasher_oganesson_ = cgtd_Hasher__init_1($rt_s(929));
    cgtd_Hasher_predefined = $rt_createArrayFromData(cgtd_Hasher, [cgtd_Hasher_alpha, cgtd_Hasher_beta, cgtd_Hasher_gamma, cgtd_Hasher_delta, cgtd_Hasher_epsilon, cgtd_Hasher_zeta, cgtd_Hasher_eta, cgtd_Hasher_theta, cgtd_Hasher_iota, cgtd_Hasher_kappa, cgtd_Hasher_lambda, cgtd_Hasher_mu, cgtd_Hasher_nu, cgtd_Hasher_xi, cgtd_Hasher_omicron, cgtd_Hasher_pi, cgtd_Hasher_rho, cgtd_Hasher_sigma, cgtd_Hasher_tau, cgtd_Hasher_upsilon, cgtd_Hasher_phi, cgtd_Hasher_chi, cgtd_Hasher_psi, cgtd_Hasher_omega, cgtd_Hasher_alpha_,
    cgtd_Hasher_beta_, cgtd_Hasher_gamma_, cgtd_Hasher_delta_, cgtd_Hasher_epsilon_, cgtd_Hasher_zeta_, cgtd_Hasher_eta_, cgtd_Hasher_theta_, cgtd_Hasher_iota_, cgtd_Hasher_kappa_, cgtd_Hasher_lambda_, cgtd_Hasher_mu_, cgtd_Hasher_nu_, cgtd_Hasher_xi_, cgtd_Hasher_omicron_, cgtd_Hasher_pi_, cgtd_Hasher_rho_, cgtd_Hasher_sigma_, cgtd_Hasher_tau_, cgtd_Hasher_upsilon_, cgtd_Hasher_phi_, cgtd_Hasher_chi_, cgtd_Hasher_psi_, cgtd_Hasher_omega_, cgtd_Hasher_baal, cgtd_Hasher_agares, cgtd_Hasher_vassago, cgtd_Hasher_samigina,
    cgtd_Hasher_marbas, cgtd_Hasher_valefor, cgtd_Hasher_amon, cgtd_Hasher_barbatos, cgtd_Hasher_paimon, cgtd_Hasher_buer, cgtd_Hasher_gusion, cgtd_Hasher_sitri, cgtd_Hasher_beleth, cgtd_Hasher_leraje, cgtd_Hasher_eligos, cgtd_Hasher_zepar, cgtd_Hasher_botis, cgtd_Hasher_bathin, cgtd_Hasher_sallos, cgtd_Hasher_purson, cgtd_Hasher_marax, cgtd_Hasher_ipos, cgtd_Hasher_aim, cgtd_Hasher_naberius, cgtd_Hasher_glasya_labolas, cgtd_Hasher_bune, cgtd_Hasher_ronove, cgtd_Hasher_berith, cgtd_Hasher_astaroth, cgtd_Hasher_forneus,
    cgtd_Hasher_foras, cgtd_Hasher_asmoday, cgtd_Hasher_gaap, cgtd_Hasher_furfur, cgtd_Hasher_marchosias, cgtd_Hasher_stolas, cgtd_Hasher_phenex, cgtd_Hasher_halphas, cgtd_Hasher_malphas, cgtd_Hasher_raum, cgtd_Hasher_focalor, cgtd_Hasher_vepar, cgtd_Hasher_sabnock, cgtd_Hasher_shax, cgtd_Hasher_vine, cgtd_Hasher_bifrons, cgtd_Hasher_vual, cgtd_Hasher_haagenti, cgtd_Hasher_crocell, cgtd_Hasher_furcas, cgtd_Hasher_balam, cgtd_Hasher_alloces, cgtd_Hasher_caim, cgtd_Hasher_murmur, cgtd_Hasher_orobas, cgtd_Hasher_gremory,
    cgtd_Hasher_ose, cgtd_Hasher_amy, cgtd_Hasher_orias, cgtd_Hasher_vapula, cgtd_Hasher_zagan, cgtd_Hasher_valac, cgtd_Hasher_andras, cgtd_Hasher_flauros, cgtd_Hasher_andrealphus, cgtd_Hasher_kimaris, cgtd_Hasher_amdusias, cgtd_Hasher_belial, cgtd_Hasher_decarabia, cgtd_Hasher_seere, cgtd_Hasher_dantalion, cgtd_Hasher_andromalius, cgtd_Hasher_baal_, cgtd_Hasher_agares_, cgtd_Hasher_vassago_, cgtd_Hasher_samigina_, cgtd_Hasher_marbas_, cgtd_Hasher_valefor_, cgtd_Hasher_amon_, cgtd_Hasher_barbatos_, cgtd_Hasher_paimon_,
    cgtd_Hasher_buer_, cgtd_Hasher_gusion_, cgtd_Hasher_sitri_, cgtd_Hasher_beleth_, cgtd_Hasher_leraje_, cgtd_Hasher_eligos_, cgtd_Hasher_zepar_, cgtd_Hasher_botis_, cgtd_Hasher_bathin_, cgtd_Hasher_sallos_, cgtd_Hasher_purson_, cgtd_Hasher_marax_, cgtd_Hasher_ipos_, cgtd_Hasher_aim_, cgtd_Hasher_naberius_, cgtd_Hasher_glasya_labolas_, cgtd_Hasher_bune_, cgtd_Hasher_ronove_, cgtd_Hasher_berith_, cgtd_Hasher_astaroth_, cgtd_Hasher_forneus_, cgtd_Hasher_foras_, cgtd_Hasher_asmoday_, cgtd_Hasher_gaap_, cgtd_Hasher_furfur_,
    cgtd_Hasher_marchosias_, cgtd_Hasher_stolas_, cgtd_Hasher_phenex_, cgtd_Hasher_halphas_, cgtd_Hasher_malphas_, cgtd_Hasher_raum_, cgtd_Hasher_focalor_, cgtd_Hasher_vepar_, cgtd_Hasher_sabnock_, cgtd_Hasher_shax_, cgtd_Hasher_vine_, cgtd_Hasher_bifrons_, cgtd_Hasher_vual_, cgtd_Hasher_haagenti_, cgtd_Hasher_crocell_, cgtd_Hasher_furcas_, cgtd_Hasher_balam_, cgtd_Hasher_alloces_, cgtd_Hasher_caim_, cgtd_Hasher_murmur_, cgtd_Hasher_orobas_, cgtd_Hasher_gremory_, cgtd_Hasher_ose_, cgtd_Hasher_amy_, cgtd_Hasher_orias_,
    cgtd_Hasher_vapula_, cgtd_Hasher_zagan_, cgtd_Hasher_valac_, cgtd_Hasher_andras_, cgtd_Hasher_flauros_, cgtd_Hasher_andrealphus_, cgtd_Hasher_kimaris_, cgtd_Hasher_amdusias_, cgtd_Hasher_belial_, cgtd_Hasher_decarabia_, cgtd_Hasher_seere_, cgtd_Hasher_dantalion_, cgtd_Hasher_andromalius_, cgtd_Hasher_hydrogen, cgtd_Hasher_helium, cgtd_Hasher_lithium, cgtd_Hasher_beryllium, cgtd_Hasher_boron, cgtd_Hasher_carbon, cgtd_Hasher_nitrogen, cgtd_Hasher_oxygen, cgtd_Hasher_fluorine, cgtd_Hasher_neon, cgtd_Hasher_sodium,
    cgtd_Hasher_magnesium, cgtd_Hasher_aluminium, cgtd_Hasher_silicon, cgtd_Hasher_phosphorus, cgtd_Hasher_sulfur, cgtd_Hasher_chlorine, cgtd_Hasher_argon, cgtd_Hasher_potassium, cgtd_Hasher_calcium, cgtd_Hasher_scandium, cgtd_Hasher_titanium, cgtd_Hasher_vanadium, cgtd_Hasher_chromium, cgtd_Hasher_manganese, cgtd_Hasher_iron, cgtd_Hasher_cobalt, cgtd_Hasher_nickel, cgtd_Hasher_copper, cgtd_Hasher_zinc, cgtd_Hasher_gallium, cgtd_Hasher_germanium, cgtd_Hasher_arsenic, cgtd_Hasher_selenium, cgtd_Hasher_bromine,
    cgtd_Hasher_krypton, cgtd_Hasher_rubidium, cgtd_Hasher_strontium, cgtd_Hasher_yttrium, cgtd_Hasher_zirconium, cgtd_Hasher_niobium, cgtd_Hasher_molybdenum, cgtd_Hasher_technetium, cgtd_Hasher_ruthenium, cgtd_Hasher_rhodium, cgtd_Hasher_palladium, cgtd_Hasher_silver, cgtd_Hasher_cadmium, cgtd_Hasher_indium, cgtd_Hasher_tin, cgtd_Hasher_antimony, cgtd_Hasher_tellurium, cgtd_Hasher_iodine, cgtd_Hasher_xenon, cgtd_Hasher_caesium, cgtd_Hasher_barium, cgtd_Hasher_lanthanum, cgtd_Hasher_cerium, cgtd_Hasher_praseodymium,
    cgtd_Hasher_neodymium, cgtd_Hasher_promethium, cgtd_Hasher_samarium, cgtd_Hasher_europium, cgtd_Hasher_gadolinium, cgtd_Hasher_terbium, cgtd_Hasher_dysprosium, cgtd_Hasher_holmium, cgtd_Hasher_erbium, cgtd_Hasher_thulium, cgtd_Hasher_ytterbium, cgtd_Hasher_lutetium, cgtd_Hasher_hafnium, cgtd_Hasher_tantalum, cgtd_Hasher_tungsten, cgtd_Hasher_rhenium, cgtd_Hasher_osmium, cgtd_Hasher_iridium, cgtd_Hasher_platinum, cgtd_Hasher_gold, cgtd_Hasher_mercury, cgtd_Hasher_thallium, cgtd_Hasher_lead, cgtd_Hasher_bismuth,
    cgtd_Hasher_polonium, cgtd_Hasher_astatine, cgtd_Hasher_radon, cgtd_Hasher_francium, cgtd_Hasher_radium, cgtd_Hasher_actinium, cgtd_Hasher_thorium, cgtd_Hasher_protactinium, cgtd_Hasher_uranium, cgtd_Hasher_neptunium, cgtd_Hasher_plutonium, cgtd_Hasher_americium, cgtd_Hasher_curium, cgtd_Hasher_berkelium, cgtd_Hasher_californium, cgtd_Hasher_einsteinium, cgtd_Hasher_fermium, cgtd_Hasher_mendelevium, cgtd_Hasher_nobelium, cgtd_Hasher_lawrencium, cgtd_Hasher_rutherfordium, cgtd_Hasher_dubnium, cgtd_Hasher_seaborgium,
    cgtd_Hasher_bohrium, cgtd_Hasher_hassium, cgtd_Hasher_meitnerium, cgtd_Hasher_darmstadtium, cgtd_Hasher_roentgenium, cgtd_Hasher_copernicium, cgtd_Hasher_nihonium, cgtd_Hasher_flerovium, cgtd_Hasher_moscovium, cgtd_Hasher_livermorium, cgtd_Hasher_tennessine, cgtd_Hasher_oganesson, cgtd_Hasher_hydrogen_, cgtd_Hasher_helium_, cgtd_Hasher_lithium_, cgtd_Hasher_beryllium_, cgtd_Hasher_boron_, cgtd_Hasher_carbon_, cgtd_Hasher_nitrogen_, cgtd_Hasher_oxygen_, cgtd_Hasher_fluorine_, cgtd_Hasher_neon_, cgtd_Hasher_sodium_,
    cgtd_Hasher_magnesium_, cgtd_Hasher_aluminium_, cgtd_Hasher_silicon_, cgtd_Hasher_phosphorus_, cgtd_Hasher_sulfur_, cgtd_Hasher_chlorine_, cgtd_Hasher_argon_, cgtd_Hasher_potassium_, cgtd_Hasher_calcium_, cgtd_Hasher_scandium_, cgtd_Hasher_titanium_, cgtd_Hasher_vanadium_, cgtd_Hasher_chromium_, cgtd_Hasher_manganese_, cgtd_Hasher_iron_, cgtd_Hasher_cobalt_, cgtd_Hasher_nickel_, cgtd_Hasher_copper_, cgtd_Hasher_zinc_, cgtd_Hasher_gallium_, cgtd_Hasher_germanium_, cgtd_Hasher_arsenic_, cgtd_Hasher_selenium_,
    cgtd_Hasher_bromine_, cgtd_Hasher_krypton_, cgtd_Hasher_rubidium_, cgtd_Hasher_strontium_, cgtd_Hasher_yttrium_, cgtd_Hasher_zirconium_, cgtd_Hasher_niobium_, cgtd_Hasher_molybdenum_, cgtd_Hasher_technetium_, cgtd_Hasher_ruthenium_, cgtd_Hasher_rhodium_, cgtd_Hasher_palladium_, cgtd_Hasher_silver_, cgtd_Hasher_cadmium_, cgtd_Hasher_indium_, cgtd_Hasher_tin_, cgtd_Hasher_antimony_, cgtd_Hasher_tellurium_, cgtd_Hasher_iodine_, cgtd_Hasher_xenon_, cgtd_Hasher_caesium_, cgtd_Hasher_barium_, cgtd_Hasher_lanthanum_,
    cgtd_Hasher_cerium_, cgtd_Hasher_praseodymium_, cgtd_Hasher_neodymium_, cgtd_Hasher_promethium_, cgtd_Hasher_samarium_, cgtd_Hasher_europium_, cgtd_Hasher_gadolinium_, cgtd_Hasher_terbium_, cgtd_Hasher_dysprosium_, cgtd_Hasher_holmium_, cgtd_Hasher_erbium_, cgtd_Hasher_thulium_, cgtd_Hasher_ytterbium_, cgtd_Hasher_lutetium_, cgtd_Hasher_hafnium_, cgtd_Hasher_tantalum_, cgtd_Hasher_tungsten_, cgtd_Hasher_rhenium_, cgtd_Hasher_osmium_, cgtd_Hasher_iridium_, cgtd_Hasher_platinum_, cgtd_Hasher_gold_, cgtd_Hasher_mercury_,
    cgtd_Hasher_thallium_, cgtd_Hasher_lead_, cgtd_Hasher_bismuth_, cgtd_Hasher_polonium_, cgtd_Hasher_astatine_, cgtd_Hasher_radon_, cgtd_Hasher_francium_, cgtd_Hasher_radium_, cgtd_Hasher_actinium_, cgtd_Hasher_thorium_, cgtd_Hasher_protactinium_, cgtd_Hasher_uranium_, cgtd_Hasher_neptunium_, cgtd_Hasher_plutonium_, cgtd_Hasher_americium_, cgtd_Hasher_curium_, cgtd_Hasher_berkelium_, cgtd_Hasher_californium_, cgtd_Hasher_einsteinium_, cgtd_Hasher_fermium_, cgtd_Hasher_mendelevium_, cgtd_Hasher_nobelium_, cgtd_Hasher_lawrencium_,
    cgtd_Hasher_rutherfordium_, cgtd_Hasher_dubnium_, cgtd_Hasher_seaborgium_, cgtd_Hasher_bohrium_, cgtd_Hasher_hassium_, cgtd_Hasher_meitnerium_, cgtd_Hasher_darmstadtium_, cgtd_Hasher_roentgenium_, cgtd_Hasher_copernicium_, cgtd_Hasher_nihonium_, cgtd_Hasher_flerovium_, cgtd_Hasher_moscovium_, cgtd_Hasher_livermorium_, cgtd_Hasher_tennessine_, cgtd_Hasher_oganesson_]);
}
function ju_MissingResourceException() {
    var a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key0 = null;
}
function ju_MissingResourceException__init_(var_0, var_1, var_2) {
    var var_3 = new ju_MissingResourceException();
    ju_MissingResourceException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function ju_MissingResourceException__init_0($this, $s, $className, $key) {
    jl_RuntimeException__init_4($this, $s);
    $this.$className = $className;
    $this.$key0 = $key;
}
var jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IndexOutOfBoundsException__init_() {
    var var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_2(var_0);
    return var_0;
}
function jl_IndexOutOfBoundsException__init_0(var_0) {
    var var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_1(var_1, var_0);
    return var_1;
}
function jl_IndexOutOfBoundsException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
function jl_IndexOutOfBoundsException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
var jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException);
function jl_StringIndexOutOfBoundsException__init_() {
    var var_0 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_0(var_0);
    return var_0;
}
function jl_StringIndexOutOfBoundsException__init_0($this) {
    jl_IndexOutOfBoundsException__init_2($this);
}
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
function jur_UCIBackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_UCIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter0, $group.$length());
                return $this.$next.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($group.$charAt($i)));
            var$7 = $stringIndex + $i | 0;
            var$7 = jl_Character_toUpperCase0($testString.$charAt(var$7));
            if (var$6 != jl_Character_toLowerCase0(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
}
function jur_UCIBackReferenceSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$groupIndex1;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(930)), var$1);
    return jl_StringBuilder_toString(var$2);
}
var cbgu_StreamUtils = $rt_classWithoutFields();
var cbgu_StreamUtils_EMPTY_BYTES = null;
function cbgu_StreamUtils_$callClinit() {
    cbgu_StreamUtils_$callClinit = $rt_eraseClinit(cbgu_StreamUtils);
    cbgu_StreamUtils__clinit_();
}
function cbgu_StreamUtils_closeQuietly($c) {
    var $$je;
    cbgu_StreamUtils_$callClinit();
    a: {
        if ($c !== null)
            try {
                $c.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
    }
}
function cbgu_StreamUtils__clinit_() {
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
}
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name5 = null;
}
var jn_ByteOrder_BIG_ENDIAN = null;
var jn_ByteOrder_LITTLE_ENDIAN = null;
function jn_ByteOrder_$callClinit() {
    jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
    jn_ByteOrder__clinit_();
}
function jn_ByteOrder__init_(var_0) {
    var var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
}
function jn_ByteOrder__init_0($this, $name) {
    jn_ByteOrder_$callClinit();
    jl_Object__init_0($this);
    $this.$name5 = $name;
}
function jn_ByteOrder_nativeOrder() {
    jn_ByteOrder_$callClinit();
    return jn_ByteOrder_BIG_ENDIAN;
}
function jn_ByteOrder__clinit_() {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(931));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(932));
}
var cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum);
var cbgg_TextureData$TextureDataType_Pixmap = null;
var cbgg_TextureData$TextureDataType_Custom = null;
var cbgg_TextureData$TextureDataType_$VALUES = null;
function cbgg_TextureData$TextureDataType_$callClinit() {
    cbgg_TextureData$TextureDataType_$callClinit = $rt_eraseClinit(cbgg_TextureData$TextureDataType);
    cbgg_TextureData$TextureDataType__clinit_();
}
function cbgg_TextureData$TextureDataType__init_(var_0, var_1) {
    var var_2 = new cbgg_TextureData$TextureDataType();
    cbgg_TextureData$TextureDataType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_TextureData$TextureDataType__init_0($this, var$1, var$2) {
    cbgg_TextureData$TextureDataType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_TextureData$TextureDataType__clinit_() {
    cbgg_TextureData$TextureDataType_Pixmap = cbgg_TextureData$TextureDataType__init_($rt_s(933), 0);
    cbgg_TextureData$TextureDataType_Custom = cbgg_TextureData$TextureDataType__init_($rt_s(934), 1);
    cbgg_TextureData$TextureDataType_$VALUES = $rt_createArrayFromData(cbgg_TextureData$TextureDataType, [cbgg_TextureData$TextureDataType_Pixmap, cbgg_TextureData$TextureDataType_Custom]);
}
function cgtrd_NormalDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$mu0 = 0.0;
    a.$sigma0 = 0.0;
}
function cgtrd_NormalDistribution__init_0(var_0, var_1, var_2) {
    var var_3 = new cgtrd_NormalDistribution();
    cgtrd_NormalDistribution__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_NormalDistribution_getMu($this) {
    return $this.$mu0;
}
function cgtrd_NormalDistribution_getSigma($this) {
    return $this.$sigma0;
}
function cgtrd_NormalDistribution__init_($this, $generator, $mu, $sigma) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($mu, $sigma, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(935)));
}
function cgtrd_NormalDistribution_getMedian($this) {
    return $this.$mu0;
}
function cgtrd_NormalDistribution_setParameters($this, $a, $b, $c) {
    if (!($rt_globals.isNaN($a) ? 1 : 0) && $b > 0.0) {
        $this.$mu0 = $a;
        $this.$sigma0 = $b;
        return 1;
    }
    return 0;
}
function cgtrd_NormalDistribution_nextDouble($this) {
    return cgtrd_NormalDistribution_sample($this.$generator, $this.$mu0, $this.$sigma0);
}
function cgtrd_NormalDistribution_sample($generator, $mu, $sigma) {
    return $generator.$nextGaussian($mu, $sigma);
}
function cgxgbtp_Preloader$3$1() {
    var a = this; jl_Object.call(a);
    a.$val$type0 = null;
    a.$val$name = null;
    a.$val$droppedFiles = null;
    a.$val$length = 0;
    a.$this$1 = null;
}
function cgxgbtp_Preloader$3$1__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cgxgbtp_Preloader$3$1();
    cgxgbtp_Preloader$3$1__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cgxgbtp_Preloader$3$1__init_0($this, $this$1, var$2, var$3, var$4, var$5) {
    $this.$this$1 = $this$1;
    $this.$val$type0 = var$2;
    $this.$val$name = var$3;
    $this.$val$droppedFiles = var$4;
    $this.$val$length = var$5;
    jl_Object__init_0($this);
}
function cgxgbtp_Preloader$3$1_handleEvent($this, $evt) {
    var var$2, $blob, var$4, $baseUrl, var$6, $arrayBuffer, $data;
    var$2 = $evt.target;
    $blob = null;
    var$4 = $this.$val$type0;
    cgxgbtp_AssetType_$callClinit();
    if (var$4 !== cgxgbtp_AssetType_Binary && $this.$val$type0 !== cgxgbtp_AssetType_Audio) {
        if ($this.$val$type0 === cgxgbtp_AssetType_Image) {
            var$4 = $rt_globals.window.document;
            var$4 = var$4.createElement("img");
            $baseUrl = $rt_str(var$2.result);
            var$6 = $rt_ustr($baseUrl);
            var$4.src = var$6;
            $arrayBuffer = var$2.result;
            $data = (cgxgbtdt_TypedArrays_getInstance()).$createInt8Array($arrayBuffer);
            $blob = cgxgbtp_Blob__init_($arrayBuffer, $data);
            cgxgbtp_Blob_setImage($blob, var$4);
        } else if ($this.$val$type0 === cgxgbtp_AssetType_Text)
            $blob = $rt_str(var$2.result);
    } else {
        $arrayBuffer = var$2.result;
        $data = (cgxgbtdt_TypedArrays_getInstance()).$createInt8Array($arrayBuffer);
        $blob = cgxgbtp_Blob__init_($arrayBuffer, $data);
    }
    if ($blob !== null) {
        $this.$this$1.$this$06.$putAssetInMap($this.$val$type0, $this.$val$name, $blob);
        $this.$val$droppedFiles.$add3($this.$val$name);
        if ($this.$val$droppedFiles.$size == $this.$val$length)
            $this.$this$1.$val$teaApplication.$postRunnable(cgxgbtp_Preloader$3$1$1__init_($this));
    }
}
function cgxgbtp_Preloader$3$1_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var otcic_StdoutOutputStream = $rt_classWithoutFields(otcic_ConsoleOutputStream);
var otcic_StdoutOutputStream_INSTANCE = null;
function otcic_StdoutOutputStream_$callClinit() {
    otcic_StdoutOutputStream_$callClinit = $rt_eraseClinit(otcic_StdoutOutputStream);
    otcic_StdoutOutputStream__clinit_();
}
function otcic_StdoutOutputStream__init_() {
    var var_0 = new otcic_StdoutOutputStream();
    otcic_StdoutOutputStream__init_0(var_0);
    return var_0;
}
function otcic_StdoutOutputStream__init_0($this) {
    otcic_StdoutOutputStream_$callClinit();
    otcic_ConsoleOutputStream__init_($this);
}
function otcic_StdoutOutputStream_write($this, $b, $off, $len) {
    otcic_Console_writeStdout($b, $off, $len);
}
function otcic_StdoutOutputStream__clinit_() {
    otcic_StdoutOutputStream_INSTANCE = otcic_StdoutOutputStream__init_();
}
var jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
function jur_DotAllQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_DotAllQuantifierSet();
    jur_DotAllQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_DotAllQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
}
function jur_DotAllQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($strLength > $stringIndex)
        return $this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotAllQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
}
function jur_DotAllQuantifierSet_getName($this) {
    return $rt_s(936);
}
var cbgggmd_ModelMaterial$MaterialType = $rt_classWithoutFields(jl_Enum);
var cbgggmd_ModelMaterial$MaterialType_Lambert = null;
var cbgggmd_ModelMaterial$MaterialType_Phong = null;
var cbgggmd_ModelMaterial$MaterialType_$VALUES = null;
function cbgggmd_ModelMaterial$MaterialType_$callClinit() {
    cbgggmd_ModelMaterial$MaterialType_$callClinit = $rt_eraseClinit(cbgggmd_ModelMaterial$MaterialType);
    cbgggmd_ModelMaterial$MaterialType__clinit_();
}
function cbgggmd_ModelMaterial$MaterialType__init_(var_0, var_1) {
    var var_2 = new cbgggmd_ModelMaterial$MaterialType();
    cbgggmd_ModelMaterial$MaterialType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgggmd_ModelMaterial$MaterialType__init_0($this, var$1, var$2) {
    cbgggmd_ModelMaterial$MaterialType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgggmd_ModelMaterial$MaterialType__clinit_() {
    cbgggmd_ModelMaterial$MaterialType_Lambert = cbgggmd_ModelMaterial$MaterialType__init_($rt_s(937), 0);
    cbgggmd_ModelMaterial$MaterialType_Phong = cbgggmd_ModelMaterial$MaterialType__init_($rt_s(938), 1);
    cbgggmd_ModelMaterial$MaterialType_$VALUES = $rt_createArrayFromData(cbgggmd_ModelMaterial$MaterialType, [cbgggmd_ModelMaterial$MaterialType_Lambert, cbgggmd_ModelMaterial$MaterialType_Phong]);
}
var jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_ReluctantGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantGroupQuantifierSet();
    jur_ReluctantGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
var cbgggpi_ColorInfluencer$Single = $rt_classWithoutFields(cbgggpi_ColorInfluencer);
var cbg_Application = $rt_classWithoutFields(0);
var jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error);
function jnc_CoderMalfunctionError__init_(var_0) {
    var var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_0(var_1, var_0);
    return var_1;
}
function jnc_CoderMalfunctionError__init_0($this, $cause) {
    jl_Error__init_4($this, $cause);
}
function cbgssu_Value$Fixed() {
    cbgssu_Value.call(this);
    this.$value4 = 0.0;
}
var cbgssu_Value$Fixed_cache = null;
function cbgssu_Value$Fixed_$callClinit() {
    cbgssu_Value$Fixed_$callClinit = $rt_eraseClinit(cbgssu_Value$Fixed);
    cbgssu_Value$Fixed__clinit_();
}
function cbgssu_Value$Fixed__init_(var_0) {
    var var_1 = new cbgssu_Value$Fixed();
    cbgssu_Value$Fixed__init_0(var_1, var_0);
    return var_1;
}
function cbgssu_Value$Fixed__init_0($this, $value) {
    cbgssu_Value$Fixed_$callClinit();
    cbgssu_Value__init_($this);
    $this.$value4 = $value;
}
function cbgssu_Value$Fixed__clinit_() {
    cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
}
function cgtrd_PowerDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha7 = 0.0;
    a.$beta3 = 0.0;
}
function cgtrd_PowerDistribution__init_(var_0, var_1, var_2) {
    var var_3 = new cgtrd_PowerDistribution();
    cgtrd_PowerDistribution__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_PowerDistribution__init_0($this, $generator, $alpha, $beta) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(395)));
}
function cgtrd_PowerDistribution_getMean($this) {
    var $a;
    $a = 1.0 / $this.$alpha7;
    return $a * $this.$beta3 / ($a + 1.0);
}
function cgtrd_PowerDistribution_setParameters($this, $a, $b, $c) {
    if ($a > 0.0 && $b > 0.0) {
        $this.$alpha7 = 1.0 / $a;
        $this.$beta3 = 1.0 / $b;
        return 1;
    }
    return 0;
}
function cgtrd_PowerDistribution_nextDouble($this) {
    return cgtrd_PowerDistribution_sample($this.$generator, $this.$alpha7, $this.$beta3);
}
function cgtrd_PowerDistribution_sample($generator, $inverseAlpha, $inverseBeta) {
    return jl_Math_pow($generator.$nextExclusiveDouble(), $inverseAlpha) * $inverseBeta;
}
var cbgg_Colors = $rt_classWithoutFields();
var cbgg_Colors_map = null;
function cbgg_Colors_$callClinit() {
    cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
    cbgg_Colors__clinit_();
}
function cbgg_Colors_get($name) {
    cbgg_Colors_$callClinit();
    return cbgg_Colors_map.$get0($name);
}
function cbgg_Colors_reset() {
    var var$1;
    cbgg_Colors_$callClinit();
    cbgg_Colors_map.$clear8();
    var$1 = cbgg_Colors_map;
    cbgg_Color_$callClinit();
    var$1.$put1($rt_s(939), cbgg_Color_CLEAR);
    cbgg_Colors_map.$put1($rt_s(940), cbgg_Color_BLACK);
    cbgg_Colors_map.$put1($rt_s(941), cbgg_Color_WHITE);
    cbgg_Colors_map.$put1($rt_s(942), cbgg_Color_LIGHT_GRAY);
    cbgg_Colors_map.$put1($rt_s(943), cbgg_Color_GRAY);
    cbgg_Colors_map.$put1($rt_s(944), cbgg_Color_DARK_GRAY);
    cbgg_Colors_map.$put1($rt_s(945), cbgg_Color_BLUE);
    cbgg_Colors_map.$put1($rt_s(946), cbgg_Color_NAVY);
    cbgg_Colors_map.$put1($rt_s(947), cbgg_Color_ROYAL);
    cbgg_Colors_map.$put1($rt_s(948), cbgg_Color_SLATE);
    cbgg_Colors_map.$put1($rt_s(949), cbgg_Color_SKY);
    cbgg_Colors_map.$put1($rt_s(950), cbgg_Color_CYAN);
    cbgg_Colors_map.$put1($rt_s(951), cbgg_Color_TEAL);
    cbgg_Colors_map.$put1($rt_s(952), cbgg_Color_GREEN);
    cbgg_Colors_map.$put1($rt_s(953), cbgg_Color_CHARTREUSE);
    cbgg_Colors_map.$put1($rt_s(954), cbgg_Color_LIME);
    cbgg_Colors_map.$put1($rt_s(955), cbgg_Color_FOREST);
    cbgg_Colors_map.$put1($rt_s(956), cbgg_Color_OLIVE);
    cbgg_Colors_map.$put1($rt_s(957), cbgg_Color_YELLOW);
    cbgg_Colors_map.$put1($rt_s(890), cbgg_Color_GOLD);
    cbgg_Colors_map.$put1($rt_s(958), cbgg_Color_GOLDENROD);
    cbgg_Colors_map.$put1($rt_s(959), cbgg_Color_ORANGE);
    cbgg_Colors_map.$put1($rt_s(960), cbgg_Color_BROWN);
    cbgg_Colors_map.$put1($rt_s(961), cbgg_Color_TAN);
    cbgg_Colors_map.$put1($rt_s(962), cbgg_Color_FIREBRICK);
    cbgg_Colors_map.$put1($rt_s(963), cbgg_Color_RED);
    cbgg_Colors_map.$put1($rt_s(964), cbgg_Color_SCARLET);
    cbgg_Colors_map.$put1($rt_s(965), cbgg_Color_CORAL);
    cbgg_Colors_map.$put1($rt_s(966), cbgg_Color_SALMON);
    cbgg_Colors_map.$put1($rt_s(967), cbgg_Color_PINK);
    cbgg_Colors_map.$put1($rt_s(968), cbgg_Color_MAGENTA);
    cbgg_Colors_map.$put1($rt_s(969), cbgg_Color_PURPLE);
    cbgg_Colors_map.$put1($rt_s(970), cbgg_Color_VIOLET);
    cbgg_Colors_map.$put1($rt_s(971), cbgg_Color_MAROON);
}
function cbgg_Colors__clinit_() {
    cbgg_Colors_map = cbgu_ObjectMap__init_();
    cbgg_Colors_reset();
}
var jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
function jur_CIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_CIDecomposedCharSet();
    jur_CIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
function cgt_CauchyScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist8 = null;
    a.$batch13 = null;
    a.$renderer12 = null;
    a.$amounts12 = null;
    a.$iterations12 = Long_ZERO;
    a.$font14 = null;
    a.$viewport12 = null;
    a.$mainGame12 = null;
}
function cgt_CauchyScreen__init_(var_0) {
    var var_1 = new cgt_CauchyScreen();
    cgt_CauchyScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_CauchyScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font14 = $this.$mainGame12.$font0;
    a: {
        try {
            var$1 = new cgtrd_CauchyDistribution;
            var$2 = $this.$mainGame12.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_CauchyDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist8 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist8 = cgtrd_CauchyDistribution__init_0($this.$mainGame12.$random0, 0.0, 1.0);
    }
    $this.$batch13 = $this.$mainGame12.$batch0;
    $this.$viewport12 = cbguv_ScreenViewport__init_();
    $this.$renderer12 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts12, Long_ZERO);
    $this.$iterations12 = Long_ZERO;
}
function cgt_CauchyScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts12 = $rt_createLongArray(512);
    $this.$iterations12 = Long_ZERO;
    $this.$mainGame12 = $main;
}
function cgt_CauchyScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame12.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame12.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame12.$setScreen($this.$mainGame12.$alternateCauchy);
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport12.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts12, Long_ZERO);
        $this.$iterations12 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts12, Long_ZERO);
        $this.$iterations12 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts12, Long_ZERO);
        $this.$iterations12 = Long_ZERO;
    }
    $this.$iterations12 = Long_add($this.$iterations12, Long_fromInt(1));
    var$3 = $this.$dist8;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist8.$nextDouble() * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts12.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer12.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer12.$color($color);
        var$3 = $this.$renderer12;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer12.$color($color);
        $this.$renderer12.$vertex(var$9, Long_toNumber(Long_div($this.$amounts12.data[$x], $this.$iterations12)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer12.$color((-6.221923240859403E37));
        var$3 = $this.$renderer12;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer12.$color((-6.221923240859403E37));
        $this.$renderer12.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer12.$end();
    $this.$batch13.$setProjectionMatrix($camera.$combined);
    $this.$batch13.$begin0();
    var$3 = $this.$font14;
    var$12 = $this.$batch13;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist8.$getMedian());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(972), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font14.$draw($this.$batch13, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font14.$draw($this.$batch13, $rt_s(378), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch13.$end();
}
function cgt_CauchyScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport12.$update0($width, $height, 1);
    $this.$viewport12.$apply(1);
}
var otjw_WebGLContextAttributes = $rt_classWithoutFields();
function otjw_WebGLContextAttributes_create$js_body$_13() {
    return {  };
}
var cbgm_Affine2 = $rt_classWithoutFields();
function cgxgbtp_AssetDownloadImpl$4$1() {
    var a = this; jl_Object.call(a);
    a.$val$request0 = null;
    a.$this$12 = null;
}
function cgxgbtp_AssetDownloadImpl$4$1__init_(var_0, var_1) {
    var var_2 = new cgxgbtp_AssetDownloadImpl$4$1();
    cgxgbtp_AssetDownloadImpl$4$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtp_AssetDownloadImpl$4$1__init_0($this, $this$1, var$2) {
    $this.$this$12 = $this$1;
    $this.$val$request0 = var$2;
    jl_Object__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$4$1_handleEvent($this, $evt) {
    var var$2, var$3, var$4, var$5, var$6, $data, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();$data = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$val$request0.readyState == 4) {
            a: {
                if ($this.$val$request0.status != 200) {
                    if ($this.$val$request0.status != 404) {
                        var$2 = $this.$val$request0;
                        if (var$2.status != 403) {
                            try {
                                var$3 = Long_fromInt(100);
                                $ptr = 1;
                                continue main;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                } else {
                                    throw $$e;
                                }
                            }
                            $this.$this$12.$this$014.$loadBinary($this.$this$12.$val$async1, $this.$this$12.$val$url3, $this.$this$12.$val$listener4);
                            break a;
                        }
                    }
                    $this.$this$12.$val$listener4.$onFailure($this.$this$12.$val$url3);
                } else {
                    if ($this.$this$12.$this$014.$showLogs) {
                        var$2 = jl_System_out();
                        var$4 = $this.$this$12.$val$url3;
                        var$5 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(973)), var$4);
                        var$2.$println1(jl_StringBuilder_toString(var$5));
                    }
                    var$6 = $this.$val$request0.response;
                    $data = (cgxgbtdt_TypedArrays_getInstance()).$createInt8Array(var$6);
                    $this.$this$12.$val$listener4.$onSuccess($this.$this$12.$val$url3, cgxgbtp_Blob__init_(var$6, $data));
                }
            }
            $this.$this$12.$this$014.$subtractQueue();
        }
        return;
    case 1:
        b: {
            try {
                jl_Thread_sleep(var$3);
                if ($rt_suspending()) {
                    break main;
                }
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
        }
        $this.$this$12.$this$014.$loadBinary($this.$this$12.$val$async1, $this.$this$12.$val$url3, $this.$this$12.$val$listener4);
        $this.$this$12.$this$014.$subtractQueue();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $evt, var$2, var$3, var$4, var$5, var$6, $data, $ptr);
}
function cgxgbtp_AssetDownloadImpl$4$1_handleEvent$exported$0(var$0, var$1) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        var$0.$handleEvent(var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$0, var$1, $ptr);
}
function cbgg_Pixmap() {
    var a = this; jl_Object.call(a);
    a.$width1 = 0;
    a.$height1 = 0;
    a.$canvas0 = null;
    a.$context0 = null;
    a.$id1 = 0;
    a.$buffer7 = null;
    a.$r0 = 0;
    a.$g0 = 0;
    a.$b0 = 0;
    a.$a0 = 0.0;
    a.$colorStr = null;
    a.$blending = null;
    a.$filter = null;
    a.$pixels = null;
    a.$imageElement = null;
    a.$videoElement = null;
    a.$color2 = 0;
    a.$nativePixmap = null;
    a.$disposed = 0;
}
var cbgg_Pixmap_pixmaps = null;
var cbgg_Pixmap_nextId = 0;
var cbgg_Pixmap_clearColor = null;
function cbgg_Pixmap_$callClinit() {
    cbgg_Pixmap_$callClinit = $rt_eraseClinit(cbgg_Pixmap);
    cbgg_Pixmap__clinit_();
}
function cbgg_Pixmap__init_0(var_0) {
    var var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_1(var_1, var_0);
    return var_1;
}
function cbgg_Pixmap__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Pixmap();
    cbgg_Pixmap__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Pixmap__init_1($this, $file) {
    var $webFileHandler, $path, $object, $app, $config, $response, $bytes, var$9, $htmlImageElement, var$11, var$12, var$13;
    cbgg_Pixmap_$callClinit();
    jl_Object__init_0($this);
    $this.$r0 = 255;
    $this.$g0 = 255;
    $this.$b0 = 255;
    $this.$colorStr = cbgg_Pixmap_make($this.$r0, $this.$g0, $this.$b0, $this.$a0);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color2 = 0;
    $webFileHandler = $file;
    $path = $webFileHandler.$path();
    $object = $webFileHandler.$preloader.$images.$get0($path);
    $app = cbg_Gdx_app;
    $config = $app.$getConfig();
    if ($config.$useNativePixmap) {
        $response = cgxgbtp_Blob_getData($object);
        $bytes = otji_JS_unwrapByteArray($response);
        var$9 = $bytes.data;
        $this.$nativePixmap = cbggg_Gdx2DPixmapEmu__init_($bytes, 0, var$9.length, 0);
        cbgg_Pixmap_initPixmapEmu($this, (-1), (-1), null, null);
    } else {
        $htmlImageElement = cgxgbtp_Blob_getImage($object);
        cbgg_Pixmap_initPixmapEmu($this, (-1), (-1), $htmlImageElement, null);
        if ($this.$imageElement === null) {
            var$11 = new cbgu_GdxRuntimeException;
            var$12 = $file.$path();
            var$13 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$13, $rt_s(974)), var$12), $rt_s(975));
            cbgu_GdxRuntimeException__init_(var$11, jl_StringBuilder_toString(var$13));
            $rt_throw(var$11);
        }
    }
}
function cbgg_Pixmap__init_2($this, $width, $height, $format) {
    cbgg_Pixmap_$callClinit();
    jl_Object__init_0($this);
    $this.$r0 = 255;
    $this.$g0 = 255;
    $this.$b0 = 255;
    $this.$colorStr = cbgg_Pixmap_make($this.$r0, $this.$g0, $this.$b0, $this.$a0);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color2 = 0;
    cbgg_Pixmap_initPixmapEmu($this, $width, $height, null, null);
}
function cbgg_Pixmap_initPixmapEmu($this, $width, $height, $imageElement, $videoElement) {
    var var$5;
    if ($videoElement !== null) {
        $this.$videoElement = $videoElement;
        $this.$width1 = $videoElement.getWidth();
        $this.$height1 = $videoElement.getHeight();
    } else if ($imageElement === null) {
        $this.$width1 = $width;
        $this.$height1 = $height;
    } else {
        $this.$imageElement = $imageElement;
        $this.$width1 = $imageElement.width;
        $this.$height1 = $imageElement.height;
    }
    $this.$buffer7 = cbgu_BufferUtils_newByteBuffer(4);
    cbgg_Pixmap_$callClinit();
    var$5 = cbgg_Pixmap_nextId;
    cbgg_Pixmap_nextId = var$5 + 1 | 0;
    $this.$id1 = var$5;
    $this.$buffer7.$putInt(0, $this.$id1);
    cbgg_Pixmap_pixmaps.$put1(jl_Integer_valueOf($this.$id1), $this);
}
function cbgg_Pixmap_create($this) {
    var $window, $document, $createElement, var$4, var$5;
    $window = cgxgbtdi_TeaWindow_get();
    $document = $window.$getDocument();
    $createElement = $document.createElement("canvas");
    $this.$canvas0 = $createElement;
    var$4 = $this.$canvas0;
    var$5 = $this.$width1;
    var$4.width = var$5;
    var$4 = $this.$canvas0;
    var$5 = $this.$height1;
    var$4.height = var$5;
    $this.$context0 = $this.$canvas0.getContext("2d");
    var$4 = $this.$context0;
    var$5 = $rt_ustr((cbgg_Pixmap_getComposite()).$toString());
    var$4.globalCompositeOperation = var$5;
}
function cbgg_Pixmap_getComposite() {
    cbgg_Pixmap_$callClinit();
    cbgg_Composite_$callClinit();
    return cbgg_Composite_SOURCE_OVER;
}
function cbgg_Pixmap_make($r2, $g2, $b2, $a2) {
    var var$5;
    cbgg_Pixmap_$callClinit();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append3(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(976)), $r2), 44), $g2), 44), $b2), 44), $a2), 41);
    return jl_StringBuilder_toString(var$5);
}
function cbgg_Pixmap_getCanvasElement($this) {
    cbgg_Pixmap_ensureCanvasExists($this);
    return $this.$canvas0;
}
function cbgg_Pixmap_ensureCanvasExists($this) {
    var var$1, var$2;
    if ($this.$canvas0 === null) {
        cbgg_Pixmap_create($this);
        if ($this.$imageElement !== null) {
            var$1 = $this.$context0;
            cbgg_Composite_$callClinit();
            var$2 = $rt_ustr(cbgg_Composite_getValue(cbgg_Composite_COPY));
            var$1.globalCompositeOperation = var$2;
            var$1 = $this.$context0;
            var$2 = $this.$imageElement;
            var$1.drawImage(var$2, 0.0, 0.0);
            var$1 = $this.$context0;
            var$2 = $rt_ustr(cbgg_Composite_getValue(cbgg_Pixmap_getComposite()));
            var$1.globalCompositeOperation = var$2;
        }
        if ($this.$videoElement !== null) {
            var$2 = $this.$context0;
            cbgg_Composite_$callClinit();
            var$1 = $rt_ustr(cbgg_Composite_getValue(cbgg_Composite_COPY));
            var$2.globalCompositeOperation = var$1;
            var$1 = $this.$context0;
            var$2 = $this.$videoElement;
            var$1.drawImage(var$2, 0.0, 0.0);
            var$1 = $this.$context0;
            var$2 = $rt_ustr(cbgg_Composite_getValue(cbgg_Pixmap_getComposite()));
            var$1.globalCompositeOperation = var$2;
        }
    }
}
function cbgg_Pixmap_canUsePixmapData($this) {
    return $this.$canvas0 === null && $this.$nativePixmap !== null ? 1 : 0;
}
function cbgg_Pixmap_getPixmapData($this) {
    return $this.$nativePixmap.$getPixels0();
}
function cbgg_Pixmap_canUseImageElement($this) {
    return $this.$canvas0 === null && $this.$imageElement !== null ? 1 : 0;
}
function cbgg_Pixmap_getImageElement($this) {
    return $this.$imageElement;
}
function cbgg_Pixmap_canUseVideoElement($this) {
    return $this.$canvas0 === null && $this.$videoElement !== null ? 1 : 0;
}
function cbgg_Pixmap_getVideoElement($this) {
    return $this.$videoElement;
}
function cbgg_Pixmap_drawPixmap($this, $pixmap, $x, $y, $srcx, $srcy, $srcWidth, $srcHeight) {
    var $image;
    if ($this.$nativePixmap === null) {
        $image = $pixmap.$getCanvasElement();
        cbgg_Pixmap_image($this, $image, $srcx, $srcy, $srcWidth, $srcHeight, $x, $y, $srcWidth, $srcHeight);
    } else
        $this.$nativePixmap.$drawPixmap1($pixmap.$nativePixmap, $srcx, $srcy, $x, $y, $srcWidth, $srcHeight);
}
function cbgg_Pixmap_drawPixmap0($this, $pixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight) {
    if ($this.$nativePixmap === null)
        cbgg_Pixmap_image($this, $pixmap.$getCanvasElement(), $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
    else
        $this.$nativePixmap.$drawPixmap2($pixmap.$nativePixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
}
function cbgg_Pixmap_getWidth($this) {
    if ($this.$nativePixmap === null)
        return $this.$width1;
    return $this.$nativePixmap.$getWidth();
}
function cbgg_Pixmap_getHeight($this) {
    if ($this.$nativePixmap === null)
        return $this.$height1;
    return $this.$nativePixmap.$getHeight();
}
function cbgg_Pixmap_dispose($this) {
    if ($this.$disposed)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(977)));
    cbgg_Pixmap_$callClinit();
    cbgg_Pixmap_pixmaps.$remove0(jl_Integer_valueOf($this.$id1));
    if ($this.$nativePixmap !== null)
        $this.$nativePixmap.$dispose();
    $this.$disposed = 1;
}
function cbgg_Pixmap_getGLFormat($this) {
    if ($this.$nativePixmap === null)
        return 6408;
    return $this.$nativePixmap.$getGLFormat();
}
function cbgg_Pixmap_getGLInternalFormat($this) {
    if ($this.$nativePixmap === null)
        return 6408;
    return $this.$nativePixmap.$getGLInternalFormat();
}
function cbgg_Pixmap_getGLType($this) {
    if ($this.$nativePixmap === null)
        return 5121;
    return $this.$nativePixmap.$getGLType();
}
function cbgg_Pixmap_getPixels($this) {
    return $this.$buffer7;
}
function cbgg_Pixmap_getFormat($this) {
    if ($this.$nativePixmap === null) {
        cbgg_Pixmap$Format_$callClinit();
        return cbgg_Pixmap$Format_RGBA8888;
    }
    return cbgg_Pixmap$Format_fromGdx2DPixmapFormat($this.$nativePixmap.$getFormat0());
}
function cbgg_Pixmap_setBlending($this, $blending) {
    var var$2, var$3;
    $this.$blending = $blending;
    if ($this.$nativePixmap === null) {
        cbgg_Pixmap_ensureCanvasExists($this);
        var$2 = $this.$context0;
        var$3 = $rt_ustr((cbgg_Pixmap_getComposite()).$toString());
        var$2.globalCompositeOperation = var$3;
    } else {
        var$3 = $this.$nativePixmap;
        cbgg_Pixmap$Blending_$callClinit();
        var$3.$setBlend($blending !== cbgg_Pixmap$Blending_None ? 1 : 0);
    }
}
function cbgg_Pixmap_image($this, $image, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) {
    var var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20;
    cbgg_Pixmap_ensureCanvasExists($this);
    var$10 = $this.$blending;
    cbgg_Pixmap$Blending_$callClinit();
    if (var$10 === cbgg_Pixmap$Blending_None) {
        var$11 = $this.$context0;
        var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
        var$11.fillStyle = var$10;
        var$11 = $this.$context0;
        var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
        var$11.strokeStyle = var$10;
        var$11 = $this.$context0;
        var$10 = "destination-out";
        var$11.globalCompositeOperation = var$10;
        $this.$context0.beginPath();
        var$11 = $this.$context0;
        var$12 = $dstX;
        var$13 = $dstY;
        var$14 = $dstWidth;
        var$15 = $dstHeight;
        var$11.rect(var$12, var$13, var$14, var$15);
        cbgg_PixmapEmu$DrawType_$callClinit();
        cbgg_Pixmap_fillOrStrokePath($this, cbgg_PixmapEmu$DrawType_FILL);
        $this.$context0.closePath();
        var$11 = $this.$context0;
        var$10 = $rt_ustr($this.$colorStr);
        var$11.fillStyle = var$10;
        var$16 = $this.$context0;
        var$11 = $rt_ustr($this.$colorStr);
        var$16.strokeStyle = var$11;
        var$16 = $this.$context0;
        cbgg_Composite_$callClinit();
        var$11 = $rt_ustr(cbgg_Composite_getValue(cbgg_Composite_SOURCE_OVER));
        var$16.globalCompositeOperation = var$11;
    }
    if ($srcWidth && $srcHeight && $dstWidth && $dstHeight) {
        var$11 = $this.$context0;
        var$12 = $srcX;
        var$13 = $srcY;
        var$14 = $srcWidth;
        var$15 = $srcHeight;
        var$17 = $dstX;
        var$18 = $dstY;
        var$19 = $dstWidth;
        var$20 = $dstHeight;
        var$11.drawImage($image, var$12, var$13, var$14, var$15, var$17, var$18, var$19, var$20);
    }
    $this.$pixels = null;
}
function cbgg_Pixmap_fillOrStrokePath($this, $drawType) {
    a: {
        cbgg_Pixmap_ensureCanvasExists($this);
        cbgg_PixmapEmu$2_$callClinit();
        switch (cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType.data[jl_Enum_ordinal($drawType)]) {
            case 1:
                break;
            case 2:
                $this.$context0.stroke();
                break a;
            default:
                break a;
        }
        $this.$context0.fill();
    }
}
function cbgg_Pixmap__clinit_() {
    cbgg_Pixmap_pixmaps = ju_HashMap__init_();
    cbgg_Pixmap_nextId = 0;
    cbgg_Pixmap_clearColor = cbgg_Pixmap_make(255, 255, 255, 1.0);
}
var cbgssu_TextButton$TextButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle);
var cbgm_GridPoint2 = $rt_classWithoutFields();
var cbgm_GridPoint3 = $rt_classWithoutFields();
var cgtd_MathTools = $rt_classWithoutFields();
var cgtd_MathTools_GOLDEN_LONGS = null;
function cgtd_MathTools_$callClinit() {
    cgtd_MathTools_$callClinit = $rt_eraseClinit(cgtd_MathTools);
    cgtd_MathTools__clinit_();
}
function cgtd_MathTools_isEqual($a, $b, $tolerance) {
    cgtd_MathTools_$callClinit();
    return jl_Math_abs0($a - $b) > $tolerance ? 0 : 1;
}
function cgtd_MathTools_gamma($x) {
    cgtd_MathTools_$callClinit();
    return cgtd_MathTools_factorial($x - 1.0);
}
function cgtd_MathTools_factorial($x) {
    var $y, $p, $r;
    cgtd_MathTools_$callClinit();
    $y = $x + 1.0;
    $p = 1.0;
    while ($y < 7.0) {
        $p = $p * $y;
        $y = $y + 1.0;
    }
    $r = jl_Math_exp($y * jl_Math_log($y) - $y + 1.0 / (12.0 * $y + 2.0 / (5.0 * $y + 53.0 / (42.0 * $y))));
    if ($x < 7.0)
        $r = $r / $p;
    return $r * jl_Math_sqrt(6.283185307179586 / $y);
}
function cgtd_MathTools_square($n) {
    cgtd_MathTools_$callClinit();
    return $n * $n;
}
function cgtd_MathTools_lerp($fromValue, $toValue, $progress) {
    cgtd_MathTools_$callClinit();
    return $fromValue + ($toValue - $fromValue) * $progress;
}
function cgtd_MathTools_isZero($value, $tolerance) {
    cgtd_MathTools_$callClinit();
    return jl_Math_abs0($value) > $tolerance ? 0 : 1;
}
function cgtd_MathTools__clinit_() {
    cgtd_MathTools_GOLDEN_LONGS = $rt_createLongArrayFromData([Long_create(2135587861, 2654435769), Long_create(44446351, 3242174889), Long_create(3349052189, 2447445413), Long_create(3516067075, 3518319154), Long_create(4220496899, 2882110344), Long_create(792563159, 2360945575), Long_create(1974346085, 3679390609), Long_create(61104479, 3152041523), Long_create(2717783413, 2700274805), Long_create(2107561609, 2313257605), Long_create(2638399027, 3785032106), Long_create(3977025073, 3335640776), Long_create(4149317051, 2939605022),
    Long_create(922161383, 2590590015), Long_create(865850413, 2283013049), Long_create(726904555, 3859688306), Long_create(3988170991, 3468523225), Long_create(1372588901, 3117001274), Long_create(1871222847, 2801104767), Long_create(3083878267, 2517223198), Long_create(184855323, 2262111973), Long_create(2100658189, 3915259345), Long_create(1060927535, 3569120481), Long_create(1550363685, 3253582939), Long_create(4042125149, 2965941328), Long_create(1456590261, 2703729436), Long_create(219495859, 2464699080),
    Long_create(37979587, 2246800835), Long_create(3624126485, 3958238937), Long_create(281718623, 3647910312), Long_create(2943946197, 3361911661), Long_create(338682123, 3098335500), Long_create(3738725225, 2855423888), Long_create(1072304303, 2631556713), Long_create(2186705523, 2425240876), Long_create(3175444131, 2235100341), Long_create(408298925, 3992473300), Long_create(2286196537, 3711283917), Long_create(540913033, 3449898667), Long_create(1665355779, 3206922746), Long_create(2533377249, 2981059588),
    Long_create(140729735, 2771103944), Long_create(2571838365, 2575935448), Long_create(1165664619, 2394512645), Long_create(3084378565, 2225867426), Long_create(3757080831, 4020386218), Long_create(392431367, 3763359354), Long_create(1075784915, 3522764445), Long_create(3444329293, 3297550982), Long_create(880492101, 3086735617), Long_create(1413668725, 2889397865), Long_create(1497336189, 2704676091), Long_create(2499559823, 2531763744), Long_create(3649628817, 2369905837), Long_create(4183304109, 2218395650),
    Long_create(2465561693, 4043581216), Long_create(2477898943, 3806908860), Long_create(625799731, 3584089028), Long_create(3328636793, 3374310925), Long_create(58454521, 3176811216), Long_create(3622426963, 2990871239), Long_create(2721556363, 2815814401), Long_create(664829645, 2651003707), Long_create(2977524627, 2495839445), Long_create(3578028407, 2349757007), Long_create(4137923419, 2212224830), Long_create(299451247, 4063161590), Long_create(1032047359, 3843866779), Long_create(389361657, 3636407632),
    Long_create(1860991083, 3440145360), Long_create(1800847905, 3254475652), Long_create(3434193803, 3078826811), Long_create(2633028883, 2912657997), Long_create(3784707173, 2755457558), Long_create(781027743, 2606741459), Long_create(1077589413, 2466051786), Long_create(98971483, 2332955342), Long_create(3307641433, 2207042308), Long_create(1655087069, 4079911411), Long_create(45545517, 3875623719), Long_create(1120116171, 3681565038), Long_create(674663173, 3497223186), Long_create(2327313551, 3322111625),
    Long_create(4086785117, 3155768180), Long_create(3381810105, 2997753818), Long_create(2428957597, 2847651488), Long_create(803501563, 2705065022), Long_create(1390395247, 2569618088), Long_create(682613341, 2440953199), Long_create(3707092341, 2318730766), Long_create(1343059315, 2202628207), Long_create(1434366087, 4094403221), Long_create(185610423, 3903204980), Long_create(2035855439, 3720935211), Long_create(2600049117, 3547176978), Long_create(1362659373, 3381532814), Long_create(840279687, 3223623812),
    Long_create(3412489071, 3073088759), Long_create(1600565057, 2929583312), Long_create(920967475, 2792779205), Long_create(3150438117, 2662363502), Long_create(2754988097, 2538037882), Long_create(2334904223, 2419517953), Long_create(1726710761, 2306532604), Long_create(1615445299, 2198823384), Long_create(3594570011, 4107064871), Long_create(4077885187, 3927383073), Long_create(2242692581, 3755562254), Long_create(562667145, 3591258500), Long_create(1599629931, 3434142943), Long_create(2613331269, 3283901104),
    Long_create(2189795893, 3140232262), Long_create(592059733, 3002848852), Long_create(1543671825, 2871475889), Long_create(1906881013, 2745850420), Long_create(3178546077, 2625720995), Long_create(1624404265, 2510847166), Long_create(4264597877, 2400999002), Long_create(2148532489, 2295956635), Long_create(41874743, 2195509813), Long_create(641537289, 4118222524), Long_create(1176590313, 3948751082), Long_create(924495185, 3786253661), Long_create(3716298733, 3630443268), Long_create(1289034163, 3481044723),
    Long_create(3316296111, 3337794166), Long_create(3014326683, 3200438599), Long_create(3637735069, 3068735433), Long_create(3691173299, 2942452063), Long_create(2031528361, 2821365456), Long_create(2564552949, 2705261756), Long_create(2663061279, 2593935909), Long_create(1096383875, 2487191299), Long_create(1249132821, 2384839400), Long_create(2700246253, 2286699445), Long_create(111480555, 2192598107), Long_create(484288485, 4128129171), Long_create(3688565221, 3967771877), Long_create(652319887, 3813643668),
    Long_create(288382903, 3665502573), Long_create(4163732939, 3523116022), Long_create(1707730403, 3386260482), Long_create(565760935, 3254721099), Long_create(3832689765, 3128291366), Long_create(611267689, 3006772801), Long_create(2069237639, 2889974627), Long_create(634983037, 2777713482), Long_create(636115015, 2669813124), Long_create(2475869197, 2566104158), Long_create(2906207805, 2466423770), Long_create(1014548671, 2370615470), Long_create(3905664711, 2278528845), Long_create(357442699, 2190019329),
    Long_create(12130311, 4136984068), Long_create(1150517819, 3984811990), Long_create(1282781127, 3838237309), Long_create(711027869, 3697054134), Long_create(1263716113, 3561064147), Long_create(3833432755, 3430076325), Long_create(2679937791, 3303906673), Long_create(649446999, 3182377962), Long_create(801194933, 3065319482), Long_create(3004119803, 2952566803), Long_create(4056986791, 2843961544), Long_create(4233447393, 2739351149), Long_create(1729952471, 2638588674), Long_create(3788447979, 2541532578),
    Long_create(1708958715, 2448046530), Long_create(3041859429, 2357999210), Long_create(3840355911, 2271264131), Long_create(2939528895, 2187719458), Long_create(3097990875, 4144946282), Long_create(3385274701, 4000165426), Long_create(781118245, 3860441692), Long_create(1022838697, 3725598436), Long_create(1421070371, 3595465186), Long_create(1527281017, 3469877424), Long_create(3183585153, 3348676378), Long_create(3120482551, 3231708823), Long_create(2782433689, 3118826885), Long_create(4264678509, 3009887855),
    Long_create(4231117427, 2904754010), Long_create(2013497133, 2803292437), Long_create(3766623243, 2705374864), Long_create(292377171, 2610877503), Long_create(3551366237, 2519680885), Long_create(3573492563, 2431669719), Long_create(3861151503, 2346732738), Long_create(1349639165, 2264762563), Long_create(355292345, 2185655564), Long_create(1094008353, 4152144342), Long_create(888005365, 4014070760), Long_create(1452672371, 3880588616), Long_create(4221971395, 3751545228), Long_create(2937507469, 3626792993),
    Long_create(1535887035, 3506189214), Long_create(315054121, 3389595940), Long_create(1117350423, 3276879807), Long_create(689331449, 3167911887), Long_create(1533691129, 3062567538), Long_create(874091419, 2960726264), Long_create(4277131405, 2862271574), Long_create(3124799087, 2767090854), Long_create(1182153489, 2675075232), Long_create(3728060647, 2586119456), Long_create(2996935223, 2500121777), Long_create(2289718091, 2416983827), Long_create(872903591, 2336610510), Long_create(3537364441, 2258909891),
    Long_create(2742986603, 2183793095), Long_create(2200172025, 4158683227), Long_create(1875562303, 4026723603), Long_create(1560090639, 3898951204), Long_create(24576567, 3775233165), Long_create(174449861, 3655440836), Long_create(1416889171, 3539449650), Long_create(1669722245, 3427138993), Long_create(4138608545, 3318392077), Long_create(2532545389, 3213095822), Long_create(9891713, 3111140734), Long_create(1200196917, 3012420793), Long_create(2563132405, 2916833345), Long_create(2066991597, 2824278993),
    Long_create(1940207399, 2734661493), Long_create(4034267623, 2647887655), Long_create(1646023827, 2563867248), Long_create(1726343053, 2482512901), Long_create(4041602373, 2403740017), Long_create(1306776767, 2327466685), Long_create(4192203911, 2253613589), Long_create(629295511, 2182103935), Long_create(3150795225, 4164649529), Long_create(616107769, 4038285861), Long_create(510442367, 3915756315), Long_create(3565845011, 3796944556), Long_create(1184999105, 3681737781), Long_create(773250693, 3570026606),
    Long_create(603408307, 3461704968), Long_create(3984139147, 3356670021), Long_create(3601842963, 3254822042), Long_create(62330819, 3156064332), Long_create(2706600599, 3060303124), Long_create(3736389115, 2967447500), Long_create(2595886179, 2877409299), Long_create(2948188283, 2790103034), Long_create(3379998057, 2705445813), Long_create(2978432265, 2623357259), Long_create(4279137901, 2543759433), Long_create(389620833, 2466576763), Long_create(1820610517, 2391735966), Long_create(3948617289, 2319165986),
    Long_create(2200146915, 2248797923), Long_create(3142855687, 2180564965), Long_create(2491132963, 4170115308), Long_create(2584870519, 4048892689), Long_create(2647770133, 3931193935), Long_create(402011561, 3816916610), Long_create(1151499819, 3705961254), Long_create(2484240215, 3598231300), Long_create(2667022533, 3493632988), Long_create(2353478783, 3392075283), Long_create(3595449867, 3293469796), Long_create(1566529015, 3197730709), Long_create(3069964837, 3104774696), Long_create(2832250753, 3014520856),
    Long_create(3210666357, 2926890638), Long_create(4037126377, 2841807775), Long_create(997493705, 2759198218), Long_create(888170537, 2678990068), Long_create(1969452227, 2601113518), Long_create(3606248489, 2525500790), Long_create(2019393645, 2452086077), Long_create(1991813467, 2380805483), Long_create(1365782021, 2311596971), Long_create(3957973285, 2244400306), Long_create(560937993, 2179157007), Long_create(4136114425, 4175141017), Long_create(3221925527, 4058657800), Long_create(2321323915, 3945424375),
    Long_create(2754002575, 3835350075), Long_create(3824727975, 3728346763), Long_create(366782245, 3624328762), Long_create(1626682789, 3523212782), Long_create(2534776209, 3424917860), Long_create(1621642867, 3329365291), Long_create(932856985, 3236478565), Long_create(610278491, 3146183307), Long_create(814099327, 3058407217), Long_create(2190908249, 2973080012), Long_create(393719207, 2890133371), Long_create(230233889, 2809500877), Long_create(2006564411, 2731117967), Long_create(2833204109, 2654921880),
    Long_create(4125529205, 2580851605), Long_create(3651172241, 2508847834), Long_create(2021037329, 2438852913), Long_create(1985806797, 2370810796), Long_create(379181681, 2304667002), Long_create(2618298721, 2240368568), Long_create(3776726313, 2177864011), Long_create(1129286193, 4179777752), Long_create(1798832365, 4067677552), Long_create(1410471819, 3958583841), Long_create(4289362395, 3852415985), Long_create(4234136555, 3749095515), Long_create(1701829311, 3648546065), Long_create(1903860267, 3550693316),
    Long_create(2223826025, 3455464944), Long_create(3142468519, 3362790564), Long_create(3845417439, 3272601679), Long_create(3823398209, 3184831629), Long_create(1714255085, 3099415542), Long_create(4115285739, 3016290284), Long_create(1264003569, 2935394418), Long_create(3928479757, 2856668150), Long_create(3924155761, 2780053294), Long_create(4145724803, 2705493222), Long_create(2013438251, 2632932826), Long_create(3510382807, 2562318474), Long_create(3256917023, 2493597975), Long_create(3510876953, 2426720536),
    Long_create(3251614853, 2361636727), Long_create(178368829, 2298298444), Long_create(1212017309, 2236658871), Long_create(2732644369, 2176672450), Long_create(1792251825, 4184068990), Long_create(776986435, 4076034137), Long_create(1937844025, 3970788800), Long_create(1935301797, 3868260953), Long_create(733219823, 3768380429), Long_create(1512026089, 3671078872), Long_create(3022359941, 3576289692), Long_create(1421539503, 3483948019), Long_create(1458899903, 3393990656), Long_create(2519769491, 3306356039),
    Long_create(2350632009, 3220984194), Long_create(1161762983, 3137816695), Long_create(1691728125, 3056796624), Long_create(821246681, 2977868534), Long_create(2686695727, 2900978408), Long_create(1642109063, 2826073626), Long_create(3680488685, 2753102924), Long_create(309229733, 2682016365), Long_create(2150721381, 2612765297), Long_create(3318647395, 2545302328), Long_create(1026174481, 2479581289), Long_create(1611215051, 2415557201), Long_create(987553, 2353186249), Long_create(1244874237, 2292425747),
    Long_create(2423056981, 2233234113), Long_create(3564543025, 2175570838), Long_create(1697609065, 4188051963), Long_create(3786621833, 4083798091), Long_create(1147592771, 3982139429), Long_create(2520046727, 3883011372), Long_create(203735887, 3786350927), Long_create(4278791809, 3692096665), Long_create(3796554179, 3600188691), Long_create(863419413, 3510568598), Long_create(1549699407, 3423179432), Long_create(2176889629, 3337965659), Long_create(949332969, 3254873127), Long_create(474215407, 3173849031),
    Long_create(1075965763, 3094841881), Long_create(1993339149, 3017801469), Long_create(1779939883, 2942678837), Long_create(2116064789, 2869426245), Long_create(2062046391, 2797997142), Long_create(4145127825, 2728346135), Long_create(2134355001, 2660428963), Long_create(1964360117, 2594202464), Long_create(2716818977, 2529624552), Long_create(2009229175, 2466654189), Long_create(4243173851, 2405251357), Long_create(1576118275, 2345377037), Long_create(561773609, 2286993178), Long_create(4197032737, 2230062677),
    Long_create(849088629, 2174549358), Long_create(1801383609, 4191758744), Long_create(201777275, 4091030306), Long_create(2065086747, 3992722383), Long_create(1938673237, 3896776811), Long_create(1748774399, 3803136822), Long_create(3983004567, 3711747012), Long_create(4044386613, 3622553310), Long_create(3168451603, 3535502943), Long_create(3167401885, 3450544406), Long_create(101861791, 3367627433), Long_create(2572581367, 3286702963), Long_create(1542071589, 3207723118), Long_create(3281559379, 3130641167),
    Long_create(817221985, 3055411505), Long_create(4064526005, 2981989619), Long_create(4028048851, 2910332070), Long_create(4143845933, 2840396460), Long_create(2734931859, 2772141411), Long_create(3825541753, 2705526538), Long_create(417384487, 2640512429), Long_create(3181613435, 2577060615), Long_create(2838105705, 2515133556), Long_create(3603168051, 2454694611), Long_create(3095172281, 2395708021), Long_create(247409709, 2338138886), Long_create(1109628193, 2281953143), Long_create(1010941931, 2227117550),
    Long_create(3162443771, 2173599662), Long_create(3861607787, 4195217112), Long_create(3261875581, 4097783617), Long_create(3162808291, 4002613005), Long_create(2565433391, 3909652721), Long_create(3004751143, 3818851430), Long_create(2759776933, 3730158990), Long_create(2481244349, 3643526423), Long_create(696458821, 3558905889), Long_create(601989949, 3476250658), Long_create(2311740179, 3395515086), Long_create(1974022979, 3316654590), Long_create(1992835977, 3239625621), Long_create(2230164509, 3164385642),
    Long_create(2197049395, 3090893104), Long_create(1292804511, 3019107423), Long_create(1332932737, 2948988957), Long_create(2722650951, 2880498985), Long_create(2814038363, 2813599686), Long_create(691061045, 2748254117), Long_create(4037968789, 2684426191), Long_create(3682939785, 2622080663), Long_create(1669056719, 2561183104), Long_create(2612136361, 2501699884), Long_create(2660058523, 2443598156), Long_create(1779352877, 2386845835), Long_create(671315715, 2331411581), Long_create(3750469985, 2277264781),
    Long_create(2374517703, 2224375536), Long_create(2710200391, 2172714638), Long_create(2065133329, 4198451311), Long_create(2009546815, 4104104222), Long_create(3454144359, 4011877289), Long_create(2548423103, 3921722869), Long_create(2519419243, 3833594388), Long_create(531388197, 3747446320), Long_create(2637411897, 3663234160), Long_create(2346241289, 3580914406), Long_create(62775539, 3500444532), Long_create(3222772241, 3421782966), Long_create(2778078333, 3344889074), Long_create(3294145347, 3269723132),
    Long_create(3534036953, 3196246310), Long_create(497842575, 3124420651), Long_create(3988088061, 3054209048), Long_create(1528094293, 2985575233), Long_create(2439773357, 2918483748), Long_create(2125498741, 2852899935), Long_create(3952363711, 2788789913), Long_create(4209821269, 2726120564), Long_create(231414461, 2664859514), Long_create(167799853, 2604975114), Long_create(14218147, 2546436429), Long_create(870582193, 2489213218), Long_create(1974214291, 2433275920), Long_create(3830309369, 2378595638),
    Long_create(4226371933, 2325144125), Long_create(4277374459, 2272893768), Long_create(2994423619, 2221817575), Long_create(1820121133, 2171889160), Long_create(2072238271, 4201481661), Long_create(1047994417, 4110030865), Long_create(1471085899, 4020570616), Long_create(3808711401, 3933057587), Long_create(225892427, 3847449396), Long_create(2386373531, 3763704579), Long_create(2453034627, 3681782579), Long_create(390032245, 3601643720), Long_create(3036529067, 3523249188), Long_create(3501975517, 3446561017),
    Long_create(973384821, 3371542066), Long_create(766809683, 3298156001), Long_create(3175538029, 3226367280), Long_create(2553241599, 3156141136), Long_create(891238723, 3087443557), Long_create(1495106225, 3020241271), Long_create(4201212749, 2954501731), Long_create(2099655079, 2890193100), Long_create(1205645053, 2827284231), Long_create(2917729819, 2765744656), Long_create(771075939, 2705544572), Long_create(45057921, 2646654822), Long_create(65583087, 2589046885), Long_create(3597289827, 2532692860),
    Long_create(1757278643, 2477565456), Long_create(3141745051, 2423637972), Long_create(4058803409, 2370884291), Long_create(2919819405, 2319278864), Long_create(2928364461, 2268796697), Long_create(3041052847, 2219413341), Long_create(2944886349, 2171104879), Long_create(1012129099, 4204326895), Long_create(248250883, 4115599357), Long_create(2906658199, 4028744312), Long_create(1031880611, 3943722245), Long_create(3668919365, 3860494471), Long_create(4222612087, 3779023125), Long_create(951852541, 3699271140),
    Long_create(1845522809, 3621202229), Long_create(962280615, 3544780874), Long_create(3511353187, 3469972304), Long_create(858510767, 3396742485), Long_create(2800489465, 3325058097), Long_create(2523551609, 3254886527), Long_create(3065580787, 3186195848), Long_create(2173499911, 3118954808), Long_create(4247104443, 3053132813), Long_create(3506950341, 2988699917), Long_create(2783606963, 2925626804), Long_create(3477140309, 2863884777), Long_create(1020501637, 2803445746), Long_create(3001177405, 2744282211),
    Long_create(1196648955, 2686367256), Long_create(578429267, 2629674530), Long_create(2181529863, 2574178239), Long_create(4240440519, 2519853134), Long_create(93852931, 2466674500), Long_create(2900450991, 2414618139), Long_create(2654512491, 2363660369), Long_create(1508699401, 2313778005), Long_create(2828928187, 2264948351), Long_create(1205347841, 2217149192), Long_create(3464019163, 2170358779), Long_create(4272472711, 4207010660), Long_create(3919960541, 4120855289), Long_create(2877607989, 4036464294),
    Long_create(2637004665, 3953801542), Long_create(225520219, 3872831641), Long_create(431271901, 3793519922), Long_create(3591152645, 3715832427), Long_create(3274362349, 3639735895), Long_create(2424640197, 3565197744), Long_create(690368547, 3492186060), Long_create(161535803, 3420669582), Long_create(3718626957, 3350617689), Long_create(1673861563, 3282000390), Long_create(2515245117, 3214788304), Long_create(355636251, 3148952655), Long_create(3617749829, 3084465253), Long_create(378386457, 3021298490),
    Long_create(2083615409, 2959425318), Long_create(2404414357, 2898819247), Long_create(1535327175, 2839454328), Long_create(1426001251, 2781305143), Long_create(1989944487, 2724346795), Long_create(2565456825, 2668554897), Long_create(19199035, 2613905562), Long_create(653066757, 2560375390), Long_create(2945888857, 2507941462), Long_create(2651134833, 2456581329), Long_create(3052716543, 2406273000), Long_create(296437223, 2356994936), Long_create(3909315931, 2308726036), Long_create(2295514803, 2261445636),
    Long_create(2041275857, 2215133491), Long_create(3573642003, 2169769772), Long_create(4247596199, 4209525489), Long_create(177784931, 4125783418), Long_create(2351495163, 4043707266), Long_create(2437715641, 3963263894), Long_create(1933663763, 3884420820), Long_create(3078641715, 3807146208), Long_create(888507393, 3731408857), Long_create(2058271003, 3657178184), Long_create(1991491139, 3584424217), Long_create(1539434213, 3513117579), Long_create(3299466311, 3443229477), Long_create(337008175, 3374731693),
    Long_create(260564241, 3307596567), Long_create(3025686261, 3241796991), Long_create(1167980427, 3177306398), Long_create(2446175527, 3114098746), Long_create(1862203227, 3052148514), Long_create(1824303553, 2991430687), Long_create(3125872233, 2931920748), Long_create(1082271829, 2873594669), Long_create(3988307835, 2816428897), Long_create(865099247, 2760400352), Long_create(3033903455, 2705486408), Long_create(586941873, 2651664894), Long_create(1243108741, 2598914076), Long_create(1249180779, 2547212655),
    Long_create(4275426667, 2496539754), Long_create(2391355065, 2446874914), Long_create(711361227, 2398198080), Long_create(4091565779, 2350489596), Long_create(223541287, 2303730201), Long_create(3535672649, 2257901011), Long_create(974871745, 2212983524), Long_create(1518888051, 2168959601), Long_create(3989249707, 4211904589), Long_create(2833941509, 4130448278), Long_create(1078739019, 4050567295), Long_create(2497221447, 3972231173), Long_create(3135782643, 3895410036), Long_create(2502554183, 3820074585),
    Long_create(2817915801, 3746196087), Long_create(603255767, 3673746366), Long_create(654801651, 3602697789), Long_create(845310379, 3533023259), Long_create(3570929389, 3464696202), Long_create(2286692125, 3397690560), Long_create(3243588195, 3331980776), Long_create(806548879, 3267541790), Long_create(826662581, 3204349024), Long_create(1857649953, 3142378377), Long_create(2920721113, 3081606214), Long_create(3443019255, 3022009357), Long_create(3944819063, 2963565076), Long_create(3166032113, 2906251081),
    Long_create(207753257, 2850045513), Long_create(1674922165, 2794926934), Long_create(3741672305, 2740874323), Long_create(665582511, 2687867066), Long_create(2557828449, 2635884944), Long_create(2266812403, 2584908133), Long_create(3031790661, 2534917190), Long_create(3814897331, 2485893049), Long_create(2428960103, 2437817013), Long_create(3564294427, 2390670745), Long_create(1638023755, 2344436265), Long_create(2878979859, 2299095938), Long_create(737603495, 2254632473), Long_create(3394076595, 2211028910),
    Long_create(1684732815, 2168268621), Long_create(1731062467, 4214124784), Long_create(848059109, 4134803940), Long_create(2685516091, 4056976121), Long_create(177335085, 3980613226), Long_create(3288008199, 3905687679), Long_create(544706441, 3832172428), Long_create(2978655987, 3760040925), Long_create(2956927195, 3689267126), Long_create(2508593691, 3619825475), Long_create(3756493635, 3551690897), Long_create(94987803, 3484838791), Long_create(2459411307, 3419245015), Long_create(1889193779, 3354885886),
    Long_create(1515116223, 3291738164), Long_create(1993324035, 3229779047), Long_create(502624387, 3168986163), Long_create(3292299101, 3109337559), Long_create(228296833, 3050811699), Long_create(109759633, 2993387448), Long_create(2189770901, 2937044071), Long_create(2672738179, 2881761224), Long_create(1817060847, 2827518945), Long_create(3041755025, 2774297647), Long_create(4025857143, 2722078113), Long_create(1264474439, 2670841488), Long_create(3775753367, 2620569269), Long_create(113631879, 2571243306),
    Long_create(3230066759, 2522845785), Long_create(1377878769, 2475359233), Long_create(4022802513, 2428766501), Long_create(2366328315, 2383050767), Long_create(3383523885, 2338195522), Long_create(4222428235, 2294184570), Long_create(1445054275, 2251002020), Long_create(741191701, 2208632278), Long_create(1336307013, 2167060045), Long_create(2071525389, 4216377412), Long_create(509328635, 4139225577), Long_create(1340891587, 4063485476), Long_create(4106985223, 3989131277), Long_create(2676156289, 3916137622),
    Long_create(3931488455, 3844479614), Long_create(4187426187, 3774132814), Long_create(633634713, 3705073230), Long_create(3433947439, 3637277306), Long_create(1223773685, 3570721922), Long_create(253283461, 3505384377), Long_create(4020830943, 3441242386), Long_create(2104752483, 3378274075), Long_create(2542144281, 3316457966), Long_create(369507649, 3255772977), Long_create(2573616617, 3196198409), Long_create(2067892151, 3137713945), Long_create(3763157587, 3080299637), Long_create(3938376143, 3023935904),
    Long_create(210816257, 2968603523), Long_create(2031090459, 2914283620), Long_create(3038757925, 2860957670), Long_create(1168408137, 2808607486), Long_create(2072460297, 2757215212), Long_create(1556624593, 2706763321), Long_create(2853679883, 2657234605), Long_create(7333937, 2608612173), Long_create(372013487, 2560879440), Long_create(320798539, 2514020127), Long_create(52561843, 2468018252), Long_create(1655605093, 2422858125), Long_create(3304709109, 2378524344), Long_create(2468661279, 2335001789),
    Long_create(3825597845, 2292275615), Long_create(1813835603, 2250331251), Long_create(2235286363, 2209154390), Long_create(1299795125, 2168730989), Long_create(3186701265, 4218246553), Long_create(2080518007, 4142896269), Long_create(3515760231, 4068891962), Long_create(2696258787, 3996209590), Long_create(1185600891, 3924825539), Long_create(4021819559, 3854716616), Long_create(240799189, 3785860046), Long_create(4107294747, 3718233455), Long_create(2424415841, 3651814875), Long_create(1184962423, 3586582726),
    Long_create(4050927085, 3522515814), Long_create(4255760109, 3459593326), Long_create(2804691345, 3397794819), Long_create(1424065221, 3337100215), Long_create(315192375, 3277489795), Long_create(703615837, 3218944192), Long_create(3584917731, 3161444385), Long_create(363319417, 3104971695), Long_create(2619092385, 3049507772), Long_create(3622128595, 2995034598), Long_create(432371509, 2941534476), Long_create(3564494737, 2888990022), Long_create(4144034083, 2837384167), Long_create(1626308281, 2786700145),
    Long_create(1876076167, 2736921488), Long_create(2780198629, 2688032024), Long_create(1745578689, 2640015870), Long_create(3600211511, 2592857425), Long_create(3120339871, 2546541369), Long_create(2306185081, 2501052654), Long_create(2269765497, 2456376501), Long_create(4087719245, 2412498395), Long_create(1432562151, 2369404082), Long_create(3630506359, 2327079559), Long_create(3240031097, 2285511077), Long_create(4108975417, 2244685130), Long_create(2529736657, 2204588455), Long_create(3090830845, 2165208024),
    Long_create(2521249667, 4220488434), Long_create(958265935, 4147301108), Long_create(1928615277, 4075382920), Long_create(780434393, 4004711863), Long_create(4206225697, 3935266309), Long_create(1818646631, 3867025009), Long_create(2643711563, 3799967078), Long_create(3378872667, 3734071996), Long_create(76730287, 3669319599), Long_create(296446295, 3605690070), Long_create(1355011629, 3543163938), Long_create(3389875007, 3481722069), Long_create(1390526361, 3421345662), Long_create(3435979503, 3362016239),
    Long_create(2116147659, 3303715646), Long_create(2208895829, 3246426041), Long_create(1526252511, 3190129893), Long_create(2232016477, 3134809974), Long_create(1084099769, 3080449356), Long_create(1544350917, 3027031403), Long_create(504409301, 2974539769), Long_create(1160507441, 2922958390), Long_create(491038975, 2872271482), Long_create(2870039125, 2822463533), Long_create(3975654167, 2773519302), Long_create(821936119, 2725423812), Long_create(2138028521, 2678162343), Long_create(434013511, 2631720434),
    Long_create(236781079, 2586083872), Long_create(3705855751, 2541238691), Long_create(868104789, 2497171170), Long_create(3120416647, 2453867821), Long_create(4030713065, 2411315394), Long_create(575857141, 2369500868), Long_create(1796683527, 2328411445), Long_create(3390076871, 2288034552), Long_create(1247395997, 2248357834), Long_create(984513519, 2209369148), Long_create(1983664809, 2171056563), Long_create(3640336905, 4222455278), Long_create(2164175367, 4151167483), Long_create(1752731263, 4081083241),
    Long_create(4067703825, 4012182232), Long_create(2423209201, 3944444481), Long_create(4154707201, 3877850347), Long_create(1868297653, 3812380524), Long_create(937478285, 3748016029), Long_create(161178251, 3684738201), Long_create(2885625543, 3622528693), Long_create(2748736063, 3561369470), Long_create(4169942857, 3501242799), Long_create(269542369, 3442131249), Long_create(2700436353, 3384017679), Long_create(3126891385, 3326885242), Long_create(3783081879, 3270717373), Long_create(1141216603, 3215497788),
    Long_create(4287646881, 3161210475), Long_create(2101731241, 3107839697), Long_create(3785727887, 3055369978), Long_create(2416177131, 3003786107), Long_create(3245107909, 2953073127), Long_create(781459121, 2903216336), Long_create(3431564011, 2854201277), Long_create(2614174101, 2806013741), Long_create(2308920867, 2758639756), Long_create(1658902085, 2712065587), Long_create(3636792847, 2666277730), Long_create(2524882057, 2621262911), Long_create(1743766813, 2577008078), Long_create(1895369669, 2533500400),
    Long_create(1965239755, 2490727263), Long_create(794603509, 2448676266), Long_create(3112578103, 2407335216), Long_create(59299211, 2366692129), Long_create(1504972711, 2326735219), Long_create(4196405971, 2287452902), Long_create(3100946753, 2248833790), Long_create(2993974275, 2210866685), Long_create(221059471, 2173540580), Long_create(2934728717, 4223377626), Long_create(932263647, 4152981233), Long_create(3258518067, 4083758225), Long_create(4272616403, 4015689045), Long_create(2642498347, 3948754461),
    Long_create(3776259595, 3882935560), Long_create(1167667917, 3818213747), Long_create(1073879781, 3754570734), Long_create(324668277, 3691988540), Long_create(3156238469, 3630449482), Long_create(4049020833, 3569936174), Long_create(987889705, 3510431519), Long_create(484139619, 3451918703), Long_create(1468455521, 3394381194), Long_create(998785435, 3337802736), Long_create(302610793, 3282167343), Long_create(2558105993, 3227459295), Long_create(2408706285, 3173663136), Long_create(1565432763, 3120763666),
    Long_create(3247034487, 3068745938), Long_create(2632605525, 3017595256), Long_create(3386323447, 2967297167), Long_create(119728037, 2917837461), Long_create(4095996403, 2869202161), Long_create(502192285, 2821377529), Long_create(493455489, 2774350050), Long_create(3320826285, 2728106437), Long_create(1682058003, 2682633626), Long_create(226091099, 2637918768), Long_create(4257035947, 2593949228), Long_create(108095755, 2550712586), Long_create(195542001, 2508196623), Long_create(2424627509, 2466389327),
    Long_create(1382202259, 2425278887), Long_create(4067272941, 2384853686), Long_create(2910816061, 2345102304), Long_create(570142589, 2306013509), Long_create(594552143, 2267576256), Long_create(2613131493, 2229779685), Long_create(2040910809, 2192613118), Long_create(2889588627, 2156066053), Long_create(1619766551, 4226268426), Long_create(228881527, 4158668409), Long_create(2851648299, 4092149667), Long_create(4218033251, 4026694906), Long_create(1809575583, 3962287108), Long_create(2624291107, 3898909525),
    Long_create(180792183, 3836545680), Long_create(3361140097, 3775179356), Long_create(1123528293, 3714794600), Long_create(519041945, 3655375710), Long_create(568907623, 3596907237), Long_create(781922271, 3539373979), Long_create(1357902797, 3482760977), Long_create(3662676949, 3427053511), Long_create(2380337475, 3372237098), Long_create(3698224103, 3318297484), Long_create(800951035, 3265220646), Long_create(1158622255, 3212992782), Long_create(2525947451, 3161600313), Long_create(3547597557, 3111029877),
    Long_create(1721216829, 3061268326), Long_create(189048147, 3012302721), Long_create(1879517357, 2964120330), Long_create(3879921899, 2916708626), Long_create(626461755, 2870055283), Long_create(202942555, 2824148169), Long_create(2204964071, 2778975348), Long_create(1590581531, 2734525076), Long_create(1334104881, 2690785795), Long_create(3814854715, 2647746132), Long_create(2412355679, 2605394898), Long_create(3369436365, 2563721080), Long_create(610575239, 2522713844), Long_create(2296543137, 2482362526),
    Long_create(1738013863, 2442656636), Long_create(39229561, 2403585850), Long_create(3159263237, 2365140008), Long_create(1977815553, 2327309116), Long_create(4082073041, 2290083336), Long_create(1307608337, 2253452991), Long_create(1879485393, 2217408555), Long_create(2596707749, 2181940657), Long_create(1243904867, 4227021531), Long_create(3443156135, 4160150658), Long_create(3847620475, 4094337673), Long_create(4049219077, 4029565840), Long_create(293706627, 3965818689), Long_create(4146379137, 3903080007),
    Long_create(3312823001, 3841333843), Long_create(49156653, 3780564495), Long_create(2603282433, 3720756508), Long_create(4042526241, 3661894675), Long_create(2980799, 3603964029), Long_create(2406655659, 3546949836), Long_create(1897636699, 3490837600), Long_create(3547215355, 3435613051), Long_create(2679974891, 3381262147), Long_create(3896085933, 3327771066), Long_create(1681532485, 3275126207), Long_create(4206808561, 3223314181), Long_create(1526059905, 3172321815), Long_create(2727004397, 3122136140),
    Long_create(294051183, 3072744396), Long_create(3414938079, 3024134021), Long_create(2788389413, 2976292656), Long_create(73292281, 2929208135), Long_create(3191710355, 2882868483), Long_create(367258385, 2837261919), Long_create(3089825317, 2792376843), Long_create(3384550695, 2748201843), Long_create(656107, 2704725686), Long_create(3322648459, 2661937314), Long_create(1820906147, 2619825849), Long_create(1707727307, 2578380581), Long_create(2356864847, 2537590971), Long_create(1972854665, 2497446647),
    Long_create(3442438973, 2457937400), Long_create(3185334811, 2419053184), Long_create(1656218299, 2380784111), Long_create(1135395921, 2343120449), Long_create(3690318621, 2306052620), Long_create(715301379, 2269571200), Long_create(1291428583, 2233666910), Long_create(579779521, 2198330621), Long_create(4209514519, 2163553346), Long_create(247308087, 4227359773), Long_create(442178665, 4160816467), Long_create(802336541, 4095320626), Long_create(231937477, 4030855762), Long_create(4263662937, 3967405645),
    Long_create(3216671573, 3904954304), Long_create(2170368657, 3843486016), Long_create(3965397839, 3782985306), Long_create(1062150623, 3723436945), Long_create(2022385299, 3664825940), Long_create(2415496371, 3607137537), Long_create(3224569077, 3550357213), Long_create(3733758715, 3494470674), Long_create(3252780109, 3439463851), Long_create(3084681797, 3385322896), Long_create(143140773, 3332034180), Long_create(2280279593, 3279584286), Long_create(896786421, 3227960012), Long_create(3909901575, 3177148360),
    Long_create(226657621, 3127136541), Long_create(1747723561, 3077911962), Long_create(3984581361, 3029462232), Long_create(2725561277, 2981775155), Long_create(2322853451, 2934838725), Long_create(2712273961, 2888641126), Long_create(3817223245, 2843170728), Long_create(1563816857, 2798416085), Long_create(1273826695, 2754365929), Long_create(1187676631, 2711009171), Long_create(1949000609, 2668334896), Long_create(3393039069, 2626332361), Long_create(1520804599, 2584990993), Long_create(2835961789, 2544300383),
    Long_create(206968245, 2504250289), Long_create(445957129, 2464830627), Long_create(522357807, 2426031474), Long_create(2602823447, 2387843062), Long_create(3490254927, 2350255778), Long_create(1408935345, 2313260160), Long_create(2953289105, 2276846893), Long_create(132918909, 2241006812), Long_create(3410731453, 2205730892), Long_create(1882637787, 2171010255), Long_create(920227769, 2136836159), Long_create(3990647301, 4231470188), Long_create(2923444115, 4168911827), Long_create(3300463109, 4107278333),
    Long_create(3809265703, 4046556033), Long_create(3769367693, 3986731456), Long_create(3181382655, 3927791330), Long_create(2965930113, 3869722579), Long_create(1094535731, 3812512321), Long_create(1789628619, 3756147863), Long_create(3431174297, 3700616701), Long_create(3821966049, 3645906516), Long_create(1334094953, 3592005171), Long_create(523929045, 3538900707), Long_create(738199453, 3486581343), Long_create(2068404181, 3435035472), Long_create(2881235381, 3384251659), Long_create(1807478471, 3334218638),
    Long_create(4186965863, 3284925308), Long_create(2902432659, 3236360735), Long_create(2319404769, 3188514144), Long_create(3725429183, 3141374920), Long_create(3805976489, 3094932606), Long_create(1859804573, 3049176899), Long_create(2866670995, 3004097647), Long_create(3520314207, 2959684850), Long_create(4174230867, 2915928655), Long_create(3748462267, 2872819355), Long_create(3365110895, 2830347386), Long_create(1530665987, 2788503326), Long_create(2337952929, 2747277891), Long_create(2325976375, 2706661936),
    Long_create(3240335089, 2666646450), Long_create(3447634927, 2627222556), Long_create(2361733651, 2588381508), Long_create(700071853, 2550114689), Long_create(863208469, 2512413609), Long_create(3140772131, 2475269904), Long_create(2037001125, 2438675335), Long_create(4188940407, 2402621782), Long_create(3451044383, 2367101248), Long_create(3338782567, 2332105852), Long_create(930211407, 2297627831), Long_create(943323327, 2263659535), Long_create(4152956951, 2230193428), Long_create(210422779, 2197222088),
    Long_create(1624923009, 4233689118), Long_create(1410029961, 4173285223), Long_create(334655011, 4113743137), Long_create(3538935995, 4055050563), Long_create(828278377, 3997195383), Long_create(3167989053, 3940165647), Long_create(2021873871, 3883949580), Long_create(1856465949, 3828535572), Long_create(1254676177, 3773912180), Long_create(4241118247, 3720068123), Long_create(1687470139, 3666992284), Long_create(105217329, 3614673701), Long_create(3334460703, 3563101569), Long_create(2961356475, 3512265240),
    Long_create(3232013063, 3462154215), Long_create(3151482953, 3412758146), Long_create(190436199, 3364066833), Long_create(2712718329, 3316070219), Long_create(3877284055, 3268758394), Long_create(2912011067, 3222121588), Long_create(743134483, 3176150170), Long_create(43283535, 3130834646), Long_create(1106421977, 3086165658), Long_create(2137887969, 3042133982), Long_create(3957819501, 2998730525), Long_create(1936406635, 2955946325), Long_create(3814010807, 2913772545), Long_create(390065485, 2872200478),
    Long_create(748289679, 2831221537), Long_create(3167600249, 2790827260), Long_create(501398415, 2751009307), Long_create(2843811379, 2711759453), Long_create(171949837, 2673069595), Long_create(2401628847, 2634931741), Long_create(2236244817, 2597338017), Long_create(2541266025, 2560280659), Long_create(868711763, 2523752015), Long_create(4144642221, 2487744540), Long_create(503813467, 2452250801), Long_create(4234232849, 2417263465), Long_create(2031561115, 2382775310), Long_create(2425481611, 2348779212),
    Long_create(3693119555, 2315268151), Long_create(517291183, 2282235208), Long_create(3618493157, 2249673559), Long_create(3639888027, 2217576482), Long_create(2619678827, 4234323768), Long_create(3892022395, 4174536507), Long_create(2939395575, 4115593423), Long_create(1932360979, 4057482596), Long_create(32207055, 4000192275), Long_create(364551103, 3943710874), Long_create(4252149531, 3888026971), Long_create(1294815167, 3833129308), Long_create(2539075839, 3779006781), Long_create(771479509, 3725648447),
    Long_create(3962484253, 3673043514), Long_create(125090015, 3621181347), Long_create(3910172411, 3570051455), Long_create(253056473, 3519643502), Long_create(4112820461, 3469947291), Long_create(79312461, 3420952776), Long_create(2364258039, 3372650046), Long_create(3246459913, 3325029335), Long_create(3242877801, 3278081013), Long_create(2744788635, 3231795586), Long_create(2361976015, 3186163694), Long_create(3383346903, 3141176109), Long_create(4057364295, 3096823734), Long_create(280609797, 3053097601),
    Long_create(3577780159, 3009988865), Long_create(3357098487, 2967488811), Long_create(2288605981, 2925588844), Long_create(249751543, 2884280491), Long_create(4146181099, 2843555397), Long_create(3476696361, 2803405329), Long_create(1835229061, 2763822167), Long_create(1269169169, 2724797906), Long_create(3917130483, 2686324654), Long_create(859976699, 2648394633), Long_create(4018296749, 2611000170), Long_create(835878681, 2574133706), Long_create(3546526781, 2537787783), Long_create(4044332751, 2501955053),
    Long_create(1859816121, 2466628270), Long_create(2161427909, 2431800289), Long_create(961014015, 2397464068), Long_create(471656635, 2363612663), Long_create(3077049165, 2330239228), Long_create(1091054237, 2297337016), Long_create(960948287, 2264899372), Long_create(308788693, 2232919737), Long_create(3709080817, 2201391643), Long_create(3395442119, 4237041586), Long_create(2917908047, 4179897114), Long_create(924818739, 4123523343), Long_create(219642807, 4067909878), Long_create(115397311, 4013046465),
    Long_create(1199099951, 3958922988), Long_create(1615806205, 3905529468), Long_create(2050623499, 3852856060), Long_create(2227376099, 3800893052), Long_create(1807385083, 3749630863), Long_create(1391978005, 3699060041), Long_create(3627329241, 3649171261), Long_create(1525349021, 3599955326), Long_create(1243899887, 3551403160), Long_create(2015586105, 3503505811), Long_create(1943267749, 3456254448), Long_create(3891188485, 3409640358), Long_create(4290558389, 3363654947), Long_create(3513025287, 3318289736),
    Long_create(3451041275, 3273536360), Long_create(893820967, 3229386568), Long_create(2467473879, 3185832218), Long_create(1008563919, 3142865281), Long_create(3564220561, 3100477833), Long_create(3643446699, 3058662060), Long_create(797681513, 3017410252), Long_create(3104967677, 2976714801), Long_create(3966662561, 2936568205), Long_create(1935059529, 2896963062), Long_create(3441281551, 2857892068), Long_create(4127398981, 2819348020), Long_create(321312769, 2781323812), Long_create(588580141, 2743812431),
    Long_create(3000406657, 2706806961), Long_create(2541290359, 2670300580), Long_create(2885504353, 2634286556), Long_create(2476650427, 2598758249), Long_create(2153941135, 2563709108), Long_create(4259469655, 2529132670), Long_create(3225510907, 2495022561), Long_create(2000648693, 2461372491), Long_create(2774190387, 2428176255), Long_create(2062721917, 2395427733), Long_create(3042798989, 2363120886), Long_create(2179207827, 2331249758), Long_create(1687521329, 2299808472), Long_create(585440573, 2268791231),
    Long_create(2986769275, 2238192315), Long_create(53119351, 4235893290), Long_create(52254179, 4177631802), Long_create(1859450035, 4120171656), Long_create(1802301491, 4063501831), Long_create(3068439849, 4007611456), Long_create(2455110367, 3952489811), Long_create(3011728725, 3898126322), Long_create(1034115015, 3844510562), Long_create(3243309197, 3791632245), Long_create(1132876115, 3739481230), Long_create(1267322619, 3688047512), Long_create(4155841521, 3637321225), Long_create(419278307, 3587292641),
    Long_create(1428630651, 3537952161), Long_create(1334328033, 3489290322), Long_create(3628761091, 3441297789), Long_create(571415413, 3393965358), Long_create(4259382465, 3347283947), Long_create(492774033, 3301244605), Long_create(1527264519, 3255838498), Long_create(143850451, 3211056918), Long_create(1128090765, 3166891274), Long_create(1308432593, 3123333095), Long_create(4051611049, 3080374025), Long_create(3789274761, 3038005825), Long_create(704058981, 2996220368), Long_create(2624131047, 2955009637),
    Long_create(1240022073, 2914365729), Long_create(4246856837, 2874280846), Long_create(3151648367, 2834747301), Long_create(1298476795, 2795757510), Long_create(3326089613, 2757303993), Long_create(416463277, 2719379376), Long_create(2872751885, 2681976382), Long_create(4061340283, 2645087838), Long_create(270903585, 2608706669), Long_create(2062829895, 2572825894), Long_create(2752149657, 2537438632), Long_create(2802116659, 2502538095), Long_create(4232007103, 2468117588), Long_create(806867843, 2434170510),
    Long_create(2662861543, 2400690347), Long_create(877884843, 2367670679), Long_create(835449407, 2335105171), Long_create(4121726675, 2302987576), Long_create(3379264861, 2271311735), Long_create(3001292937, 2240071571), Long_create(1241128581, 2209261092), Long_create(2455206659, 2178874387), Long_create(3881309801, 4236873756), Long_create(2005241837, 4179565988), Long_create(1675623841, 4123033362), Long_create(566587667, 4067265394), Long_create(4140967207, 4012251740), Long_create(231984093, 3957982200),
    Long_create(2455842971, 3904446706), Long_create(3539939191, 3851635331), Long_create(1773949277, 3799538281), Long_create(1798089639, 3748145893), Long_create(2611998547, 3697448636), Long_create(2867585061, 3647437108), Long_create(1969600447, 3598102034), Long_create(1277510401, 3549434264), Long_create(1112330575, 3501424772), Long_create(2157008345, 3454064654), Long_create(2659082869, 3407345127), Long_create(24242675, 3361257527), Long_create(1094450521, 3315793305), Long_create(2454649885, 3270944030),
    Long_create(896332525, 3226701385), Long_create(3971950451, 3183057163), Long_create(1984237853, 3140003272), Long_create(193478709, 3097531726), Long_create(3867341883, 3055634647), Long_create(3416744419, 3014304267), Long_create(2566252385, 2973532920), Long_create(3658525463, 2933313044), Long_create(1631280481, 2893637181), Long_create(3845526063, 2854497971), Long_create(2749522411, 2815888157), Long_create(161627035, 2777800578), Long_create(1566575477, 2740228169), Long_create(1898975689, 2703163963),
    Long_create(1467678255, 2666601086), Long_create(480385475, 2630532757), Long_create(2232254953, 2594952286), Long_create(3482659463, 2559853075), Long_create(2083885969, 2525228615), Long_create(385962535, 2491072484), Long_create(121684175, 2457378347), Long_create(1655790911, 2424139955), Long_create(3302394957, 2391351144), Long_create(709733905, 2359005834), Long_create(3491208407, 2327098024), Long_create(382329347, 2295621799), Long_create(1771707145, 2264571319), Long_create(691419091, 2233940827),
    Long_create(2589747667, 2203724641), Long_create(3626354885, 2173917158)]);
}
var cbgg_TextureData = $rt_classWithoutFields(0);
function cbggg_FileTextureData() {
    var a = this; jl_Object.call(a);
    a.$file0 = null;
    a.$width2 = 0;
    a.$height2 = 0;
    a.$format0 = null;
    a.$pixmap = null;
    a.$useMipMaps0 = 0;
    a.$isPrepared0 = 0;
}
var cbggg_FileTextureData_copyToPOT = 0;
function cbggg_FileTextureData__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_FileTextureData();
    cbggg_FileTextureData__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_FileTextureData__init_0($this, $file, $preloadedPixmap, $format, $useMipMaps) {
    jl_Object__init_0($this);
    $this.$width2 = 0;
    $this.$height2 = 0;
    $this.$isPrepared0 = 0;
    $this.$file0 = $file;
    $this.$pixmap = $preloadedPixmap;
    $this.$format0 = $format;
    $this.$useMipMaps0 = $useMipMaps;
    if ($this.$pixmap !== null) {
        $this.$pixmap = cbggg_FileTextureData_ensurePot($this, $this.$pixmap);
        $this.$width2 = $this.$pixmap.$getWidth();
        $this.$height2 = $this.$pixmap.$getHeight();
        if ($format === null)
            $this.$format0 = $this.$pixmap.$getFormat();
    }
}
function cbggg_FileTextureData_isPrepared($this) {
    return $this.$isPrepared0;
}
function cbggg_FileTextureData_prepare($this) {
    if ($this.$isPrepared0)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(978)));
    if ($this.$pixmap === null) {
        $this.$pixmap = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_0($this.$file0));
        $this.$width2 = $this.$pixmap.$getWidth();
        $this.$height2 = $this.$pixmap.$getHeight();
        if ($this.$format0 === null)
            $this.$format0 = $this.$pixmap.$getFormat();
    }
    $this.$isPrepared0 = 1;
}
function cbggg_FileTextureData_ensurePot($this, $pixmap) {
    var $pixmapWidth, $pixmapHeight, $potWidth, $potHeight, $tmp_0;
    a: {
        if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
            $pixmapWidth = $pixmap.$getWidth();
            $pixmapHeight = $pixmap.$getHeight();
            $potWidth = cbgm_MathUtils_nextPowerOfTwo($pixmapWidth);
            $potHeight = cbgm_MathUtils_nextPowerOfTwo($pixmapHeight);
            if ($pixmapWidth != $potWidth)
                break a;
            if ($pixmapHeight != $potHeight)
                break a;
        }
        return $pixmap;
    }
    $tmp_0 = cbgg_Pixmap__init_($potWidth, $potHeight, $pixmap.$getFormat());
    $tmp_0.$drawPixmap($pixmap, 0, 0, 0, 0, $pixmapWidth, $pixmapHeight);
    $pixmap.$dispose();
    return $tmp_0;
}
function cbggg_FileTextureData_consumePixmap($this) {
    var $pixmap;
    if (!$this.$isPrepared0)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(979)));
    $this.$isPrepared0 = 0;
    $pixmap = $this.$pixmap;
    $this.$pixmap = null;
    return $pixmap;
}
function cbggg_FileTextureData_disposePixmap($this) {
    return 1;
}
function cbggg_FileTextureData_getWidth($this) {
    return $this.$width2;
}
function cbggg_FileTextureData_getHeight($this) {
    return $this.$height2;
}
function cbggg_FileTextureData_getFormat($this) {
    return $this.$format0;
}
function cbggg_FileTextureData_useMipMaps($this) {
    return $this.$useMipMaps0;
}
function cbggg_FileTextureData_isManaged($this) {
    return 1;
}
function cbggg_FileTextureData_getType($this) {
    cbgg_TextureData$TextureDataType_$callClinit();
    return cbgg_TextureData$TextureDataType_Pixmap;
}
function cbggg_FileTextureData_consumeCustomData($this, $target) {
    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(980)));
}
var cgxgbtu_TeaNavigator = $rt_classWithoutFields();
var cbgssu_TooltipManager$1 = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgssu_TooltipManager$2 = $rt_classWithoutFields(cbgu_Timer$Task);
var cbgm_Interpolation$PowOut = $rt_classWithoutFields(cbgm_Interpolation$Pow);
function cbgm_Interpolation$PowOut__init_(var_0) {
    var var_1 = new cbgm_Interpolation$PowOut();
    cbgm_Interpolation$PowOut__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$PowOut__init_0($this, $power) {
    cbgm_Interpolation$Pow__init_0($this, $power);
}
var cgxgbtp_AssetDownloader = $rt_classWithoutFields();
var cgxgbtp_AssetDownloader_instance = null;
function cgxgbtp_AssetDownloader_getInstance() {
    return cgxgbtp_AssetDownloader_instance;
}
function cgxgbtp_AssetDownloader_setInstance($instance) {
    cgxgbtp_AssetDownloader_instance = $instance;
}
function cgxgbtf_StoreMemory() {
    var a = this; jl_Object.call(a);
    a.$keys = null;
    a.$map = null;
}
function cgxgbtf_StoreMemory__init_() {
    var var_0 = new cgxgbtf_StoreMemory();
    cgxgbtf_StoreMemory__init_0(var_0);
    return var_0;
}
function cgxgbtf_StoreMemory__init_0($this) {
    jl_Object__init_0($this);
    $this.$keys = cbgu_Array__init_2(16);
    $this.$map = cbgu_ObjectMap__init_0(16);
}
function cgxgbtf_StoreMemory_getItem($this, $key) {
    return $this.$map.$get0($key);
}
function cgxgbtf_StoreMemory_removeItem($this, $key) {
    $this.$keys.$removeValue($key, 0);
    $this.$map.$remove0($key);
}
function otcit_DoubleAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa0 = Long_ZERO;
    a.$exponent0 = 0;
    a.$sign0 = 0;
}
function otcit_DoubleAnalyzer$Result__init_() {
    var var_0 = new otcit_DoubleAnalyzer$Result();
    otcit_DoubleAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_DoubleAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
function cgtrd_BetaDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha8 = 0.0;
    a.$beta4 = 0.0;
}
function cgtrd_BetaDistribution__init_0(var_0, var_1, var_2) {
    var var_3 = new cgtrd_BetaDistribution();
    cgtrd_BetaDistribution__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_BetaDistribution__init_($this, $generator, $alpha, $beta) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(395)));
}
function cgtrd_BetaDistribution_getMean($this) {
    return $this.$alpha8 / ($this.$alpha8 + $this.$beta4);
}
function cgtrd_BetaDistribution_setParameters($this, $a, $b, $c) {
    if ($a > 0.0 && $b > 0.0) {
        $this.$alpha8 = $a;
        $this.$beta4 = $b;
        return 1;
    }
    return 0;
}
function cgtrd_BetaDistribution_nextDouble($this) {
    return cgtrd_BetaDistribution_sample($this.$generator, $this.$alpha8, $this.$beta4);
}
function cgtrd_BetaDistribution_sample($generator, $alpha, $beta) {
    var $x, $t;
    $x = cgtrd_GammaDistribution_sample($generator, $alpha, 1.0);
    while (true) {
        $t = $x + cgtrd_GammaDistribution_sample($generator, $beta, 1.0);
        if (cgtd_MathTools_isZero($t, 1.3552527156068805E-20))
            continue;
        else
            break;
    }
    return $x / $t;
}
var cbggg_ImmediateModeRenderer = $rt_classWithoutFields(0);
function cbggg_ImmediateModeRenderer20() {
    var a = this; jl_Object.call(a);
    a.$primitiveType = 0;
    a.$vertexIdx = 0;
    a.$numSetTexCoords = 0;
    a.$maxVertices = 0;
    a.$numVertices = 0;
    a.$mesh0 = null;
    a.$shader0 = null;
    a.$ownsShader0 = 0;
    a.$numTexCoords = 0;
    a.$vertexSize0 = 0;
    a.$normalOffset = 0;
    a.$colorOffset = 0;
    a.$texCoordOffset = 0;
    a.$projModelView = null;
    a.$vertices0 = null;
    a.$shaderUniformNames = null;
}
function cbggg_ImmediateModeRenderer20__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_ImmediateModeRenderer20();
    cbggg_ImmediateModeRenderer20__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_ImmediateModeRenderer20__init_1(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbggg_ImmediateModeRenderer20();
    cbggg_ImmediateModeRenderer20__init_2(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbggg_ImmediateModeRenderer20__init_0($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords) {
    cbggg_ImmediateModeRenderer20__init_2($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, cbggg_ImmediateModeRenderer20_createDefaultShader($hasNormals, $hasColors, $numTexCoords));
    $this.$ownsShader0 = 1;
}
function cbggg_ImmediateModeRenderer20__init_2($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, $shader) {
    var $attribs, var$7, $i;
    jl_Object__init_0($this);
    $this.$projModelView = cbgm_Matrix4__init_();
    $this.$maxVertices = $maxVertices;
    $this.$numTexCoords = $numTexCoords;
    $this.$shader0 = $shader;
    $attribs = cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColors, $numTexCoords);
    $this.$mesh0 = cbgg_Mesh__init_0(0, $maxVertices, 0, $attribs);
    $this.$vertices0 = $rt_createFloatArray($rt_imul($maxVertices, ($this.$mesh0.$getVertexAttributes()).$vertexSize / 4 | 0));
    $this.$vertexSize0 = ($this.$mesh0.$getVertexAttributes()).$vertexSize / 4 | 0;
    $this.$normalOffset = $this.$mesh0.$getVertexAttribute(8) === null ? 0 : ($this.$mesh0.$getVertexAttribute(8)).$offset / 4 | 0;
    var$7 = $this.$mesh0.$getVertexAttribute(4) === null ? 0 : ($this.$mesh0.$getVertexAttribute(4)).$offset / 4 | 0;
    $this.$colorOffset = var$7;
    var$7 = $this.$mesh0.$getVertexAttribute(16) === null ? 0 : ($this.$mesh0.$getVertexAttribute(16)).$offset / 4 | 0;
    $this.$texCoordOffset = var$7;
    $this.$shaderUniformNames = $rt_createArray(jl_String, $numTexCoords);
    $i = 0;
    while ($i < $numTexCoords) {
        $this.$shaderUniformNames.data[$i] = (((jl_StringBuilder__init_()).$append1($rt_s(981))).$append2($i)).$toString();
        $i = $i + 1 | 0;
    }
}
function cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColor, $numTexCoords) {
    var $attribs, $i, $array;
    $attribs = cbgu_Array__init_();
    $attribs.$add3(cbgg_VertexAttribute__init_(1, 3, $rt_s(380)));
    if ($hasNormals)
        $attribs.$add3(cbgg_VertexAttribute__init_(8, 3, $rt_s(982)));
    if ($hasColor)
        $attribs.$add3(cbgg_VertexAttribute__init_(4, 4, $rt_s(381)));
    $i = 0;
    while ($i < $numTexCoords) {
        $attribs.$add3(cbgg_VertexAttribute__init_(16, 2, (((jl_StringBuilder__init_()).$append1($rt_s(983))).$append2($i)).$toString()));
        $i = $i + 1 | 0;
    }
    $array = $rt_createArray(cbgg_VertexAttribute, $attribs.$size);
    $i = 0;
    while ($i < $attribs.$size) {
        $array.data[$i] = $attribs.$get3($i);
        $i = $i + 1 | 0;
    }
    return $array;
}
function cbggg_ImmediateModeRenderer20_begin($this, $projModelView, $primitiveType) {
    $this.$projModelView.$set3($projModelView);
    $this.$primitiveType = $primitiveType;
}
function cbggg_ImmediateModeRenderer20_color($this, $colorBits) {
    $this.$vertices0.data[$this.$vertexIdx + $this.$colorOffset | 0] = $colorBits;
}
function cbggg_ImmediateModeRenderer20_vertex($this, $x, $y, $z) {
    var $idx;
    $idx = $this.$vertexIdx;
    $this.$vertices0.data[$idx] = $x;
    $this.$vertices0.data[$idx + 1 | 0] = $y;
    $this.$vertices0.data[$idx + 2 | 0] = $z;
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = $this.$vertexIdx + $this.$vertexSize0 | 0;
    $this.$numVertices = $this.$numVertices + 1 | 0;
}
function cbggg_ImmediateModeRenderer20_flush($this) {
    var $i;
    if (!$this.$numVertices)
        return;
    $this.$shader0.$bind();
    $this.$shader0.$setUniformMatrix($rt_s(984), $this.$projModelView);
    $i = 0;
    while ($i < $this.$numTexCoords) {
        $this.$shader0.$setUniformi($this.$shaderUniformNames.data[$i], $i);
        $i = $i + 1 | 0;
    }
    $this.$mesh0.$setVertices($this.$vertices0, 0, $this.$vertexIdx);
    $this.$mesh0.$render2($this.$shader0, $this.$primitiveType);
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = 0;
    $this.$numVertices = 0;
}
function cbggg_ImmediateModeRenderer20_end($this) {
    $this.$flush0();
}
function cbggg_ImmediateModeRenderer20_createVertexShader($hasNormals, $hasColors, $numTexCoords) {
    var var$4, $shader, $i;
    var$4 = (jl_StringBuilder__init_()).$append1($rt_s(985));
    var$4 = var$4.$append1(!$hasNormals ? $rt_s(45) : $rt_s(986));
    $shader = (var$4.$append1(!$hasColors ? $rt_s(45) : $rt_s(987))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        $shader = (((((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(988))).$append2($i)).$append1($rt_s(989))).$toString();
        $i = $i + 1 | 0;
    }
    var$4 = ((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(990));
    var$4 = (var$4.$append1(!$hasColors ? $rt_s(45) : $rt_s(991))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$4 = (((((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(992))).$append2($i)).$append1($rt_s(989))).$toString();
        $i = $i + 1 | 0;
    }
    var$4 = (((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(993))).$toString();
    if ($hasColors)
        var$4 = (((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(994))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$4 = ((((((((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(995))).$append2($i)).$append1($rt_s(996))).$append1($rt_s(983))).$append2($i)).$append1($rt_s(989))).$toString();
        $i = $i + 1 | 0;
    }
    var$4 = (((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(997))).$toString();
    return var$4;
}
function cbggg_ImmediateModeRenderer20_createFragmentShader($hasNormals, $hasColors, $numTexCoords) {
    var $shader, $i, var$6, var$7;
    $shader = $rt_s(998);
    if ($hasColors)
        $shader = (((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(991))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$6 = (((((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(992))).$append2($i)).$append1($rt_s(989))).$toString();
        $shader = (((((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(999))).$append2($i)).$append1($rt_s(989))).$toString();
        $i = $i + 1 | 0;
    }
    var$6 = ((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(1000));
    var$7 = !$hasColors ? $rt_s(1001) : $rt_s(1002);
    var$6 = (var$6.$append1(var$7)).$toString();
    if ($numTexCoords > 0)
        var$6 = (((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(1003))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$6 = $i != ($numTexCoords - 1 | 0) ? (((((((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(1004))).$append2($i)).$append1($rt_s(1005))).$append2($i)).$append1($rt_s(1006))).$toString() : (((((((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(1004))).$append2($i)).$append1($rt_s(1005))).$append2($i)).$append1($rt_s(1007))).$toString();
        $i = $i + 1 | 0;
    }
    var$6 = (((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(1008))).$toString();
    return var$6;
}
function cbggg_ImmediateModeRenderer20_createDefaultShader($hasNormals, $hasColors, $numTexCoords) {
    var $vertexShader, $fragmentShader, $program;
    $vertexShader = cbggg_ImmediateModeRenderer20_createVertexShader($hasNormals, $hasColors, $numTexCoords);
    $fragmentShader = cbggg_ImmediateModeRenderer20_createFragmentShader($hasNormals, $hasColors, $numTexCoords);
    $program = cbggg_ShaderProgram__init_($vertexShader, $fragmentShader);
    if ($program.$isCompiled())
        return $program;
    $rt_throw(cbgu_GdxRuntimeException__init_0((((jl_StringBuilder__init_()).$append1($rt_s(385))).$append1($program.$getLog())).$toString()));
}
var cbgssu_Label = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_Label_tempColor = null;
var cbgssu_Label_prefSizeLayout = null;
function cbgssu_Label_$callClinit() {
    cbgssu_Label_$callClinit = $rt_eraseClinit(cbgssu_Label);
    cbgssu_Label__clinit_();
}
function cbgssu_Label__clinit_() {
    cbgssu_Label_tempColor = cbgg_Color__init_0();
    cbgssu_Label_prefSizeLayout = cbggg_GlyphLayout__init_3();
}
function ji_ByteArrayInputStream() {
    var a = this; ji_InputStream.call(a);
    a.$buf = null;
    a.$pos0 = 0;
    a.$mark1 = 0;
    a.$count1 = 0;
}
function ji_ByteArrayInputStream__init_0(var_0, var_1, var_2) {
    var var_3 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_1(var_3, var_0, var_1, var_2);
    return var_3;
}
function ji_ByteArrayInputStream__init_(var_0) {
    var var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_2(var_1, var_0);
    return var_1;
}
function ji_ByteArrayInputStream__init_1($this, $buf, $offset, $length) {
    ji_InputStream__init_($this);
    $this.$buf = $buf;
    $this.$pos0 = $offset;
    $this.$mark1 = $offset;
    $this.$count1 = $offset + $length | 0;
}
function ji_ByteArrayInputStream__init_2($this, $buf) {
    ji_ByteArrayInputStream__init_1($this, $buf, 0, $buf.data.length);
}
function ji_ByteArrayInputStream_read($this) {
    var var$1, var$2, var$3;
    if ($this.$pos0 >= $this.$count1)
        var$1 = (-1);
    else {
        var$2 = $this.$buf.data;
        var$3 = $this.$pos0;
        $this.$pos0 = var$3 + 1 | 0;
        var$1 = var$2[var$3] & 255;
    }
    return var$1;
}
function ji_ByteArrayInputStream_read0($this, $b, $off, $len) {
    var $bytesToRead, $i, var$6, var$7, var$8, var$9;
    $bytesToRead = jl_Math_min($len, $this.$count1 - $this.$pos0 | 0);
    $i = 0;
    while ($i < $bytesToRead) {
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$8 = $this.$buf.data;
        var$9 = $this.$pos0;
        $this.$pos0 = var$9 + 1 | 0;
        var$6[$off] = var$8[var$9];
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($bytesToRead <= 0)
        $bytesToRead = (-1);
    return $bytesToRead;
}
function ji_ByteArrayInputStream_close($this) {}
var otci_IntegerUtil = $rt_classWithoutFields();
function otci_IntegerUtil_toUnsignedLogRadixString($value, $radixLog2) {
    var $radix, $mask, $sz, $chars, $pos, $target, var$9, $target_0;
    if (!$value)
        return $rt_s(273);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz);
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        var$9 = $chars.data;
        $target_0 = $target + 1 | 0;
        var$9[$target] = jl_Character_forDigit(($value >>> $pos | 0) & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    return jl_String__init_($chars);
}
var jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
function jur_PossessiveAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveAltQuantifierSet();
    jur_PossessiveAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_PossessiveAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
var cbgssa_Actions = $rt_classWithoutFields();
var jl_SecurityException = $rt_classWithoutFields(jl_RuntimeException);
var cbgggpi_ModelInfluencer$Single = $rt_classWithoutFields(cbgggpi_ModelInfluencer);
var cbgssu_ScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener);
function cgxgbtf_FileDBManager() {
    var a = this; cgxgbtf_FileDB.call(a);
    a.$localStorage = null;
    a.$memory = null;
}
function cgxgbtf_FileDBManager__init_() {
    var var_0 = new cgxgbtf_FileDBManager();
    cgxgbtf_FileDBManager__init_0(var_0);
    return var_0;
}
function cgxgbtf_FileDBManager__init_0($this) {
    cgxgbtf_FileDB__init_($this);
    $this.$localStorage = cgxgbtf_FileDBStorage__init_(cgxgbtf_StoreLocal__init_((cbg_Gdx_app.$getConfig()).$storagePrefix));
    $this.$memory = cgxgbtf_FileDBStorage__init_(cgxgbtf_StoreMemory__init_());
}
function cgxgbtf_FileDBManager_read($this, $file) {
    if (!cgxgbtf_FileDBStorage_exists($this.$memory, $file))
        return cgxgbtf_FileDBStorage_read($this.$localStorage, $file);
    return cgxgbtf_FileDBStorage_read($this.$memory, $file);
}
var cbgssu_ScrollPane$2 = $rt_classWithoutFields(cbgssu_ActorGestureListener);
function cbgm_Interpolation$SwingIn() {
    cbgm_Interpolation.call(this);
    this.$scale3 = 0.0;
}
function cbgm_Interpolation$SwingIn__init_(var_0) {
    var var_1 = new cbgm_Interpolation$SwingIn();
    cbgm_Interpolation$SwingIn__init_0(var_1, var_0);
    return var_1;
}
function cbgm_Interpolation$SwingIn__init_0($this, $scale) {
    cbgm_Interpolation__init_($this);
    $this.$scale3 = $scale;
}
var cbgssu_ScrollPane$1 = $rt_classWithoutFields(cbgss_InputListener);
var ju_Objects = $rt_classWithoutFields();
function ju_Objects_equals($a, $b) {
    if ($a === $b)
        return 1;
    return $a !== null ? $a.$equals($b) : $b !== null ? 0 : 1;
}
function ju_Objects_requireNonNull($obj) {
    return ju_Objects_requireNonNull0($obj, $rt_s(45));
}
function ju_Objects_requireNonNull0($obj, $message) {
    if ($obj !== null)
        return $obj;
    $rt_throw(jl_NullPointerException__init_0($message));
}
var cbgssu_TextField$TextFieldFilter = $rt_classWithoutFields(0);
function jur_SequenceSet() {
    var a = this; jur_LeafSet.call(a);
    a.$string3 = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
function jur_SequenceSet__init_(var_0) {
    var var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet__init_0($this, $substring) {
    var $j;
    jur_LeafSet__init_0($this);
    $this.$string3 = $substring.$toString();
    $this.$charCount = $substring.$length();
    $this.$leftToRight = jur_SequenceSet$IntHash__init_($this.$charCount);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount);
    $j = 0;
    while ($j < ($this.$charCount - 1 | 0)) {
        $this.$leftToRight.$put9($this.$string3.$charAt($j), ($this.$charCount - $j | 0) - 1 | 0);
        $this.$rightToLeft.$put9($this.$string3.$charAt(($this.$charCount - $j | 0) - 1 | 0), ($this.$charCount - $j | 0) - 1 | 0);
        $j = $j + 1 | 0;
    }
}
function jur_SequenceSet_accepts($this, $strIndex, $testString) {
    return !$this.$startsWith1($testString, $strIndex) ? (-1) : $this.$charCount;
}
function jur_SequenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $strLength, var$5;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = $this.$indexOf3($testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
}
function jur_SequenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var var$5;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$5 = $this.$lastIndexOf3($testString, $strIndex, $lastIndex);
        if (var$5 < 0)
            return (-1);
        if ($this.$next.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = var$5 + (-1) | 0;
    }
    return var$5;
}
function jur_SequenceSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$string3;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1009)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_SequenceSet_first($this, $set) {
    var var$2, var$3, var$4, var$5, var$6;
    if ($set instanceof jur_CharSet)
        return $set.$getChar() != $this.$string3.$charAt(0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return $set.$accepts(0, $this.$string3.$substring0(0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            if ($this.$string3.$length() > 1) {
                var$2 = $set;
                var$3 = var$2.$getCodePoint();
                var$4 = $this.$string3.$charAt(0);
                var$2 = $this.$string3;
                var$5 = var$2.$charAt(1);
                if (var$3 == jl_Character_toCodePoint(var$4, var$5)) {
                    var$4 = 1;
                    break a;
                }
            }
            var$4 = 0;
        }
        return var$4;
    }
    b: {
        c: {
            var$2 = $set;
            if (!var$2.$contains0($this.$string3.$charAt(0))) {
                var$6 = $this.$string3;
                if (var$6.$length() <= 1)
                    break c;
                var$6 = $this.$string3;
                var$4 = jl_Character_toCodePoint(var$6.$charAt(0), $this.$string3.$charAt(1));
                if (!var$2.$contains0(var$4))
                    break c;
            }
            var$4 = 1;
            break b;
        }
        var$4 = 0;
    }
    return var$4;
}
function jur_SequenceSet_indexOf($this, $str, $i, $to) {
    var $last, $ch;
    $last = $this.$string3.$charAt($this.$charCount - 1 | 0);
    while (true) {
        if ($i > ($to - $this.$charCount | 0))
            return (-1);
        $ch = $str.$charAt(($i + $this.$charCount | 0) - 1 | 0);
        if ($ch == $last && $this.$startsWith1($str, $i))
            break;
        $i = $i + $this.$leftToRight.$get11($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_lastIndexOf($this, $str, $to, $i) {
    var $first, $size, $delta, $ch;
    $first = $this.$string3.$charAt(0);
    $size = $str.$length();
    $delta = ($size - $i | 0) - $this.$charCount | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    while (true) {
        if ($i < $to)
            return (-1);
        $ch = $str.$charAt($i);
        if ($ch == $first && $this.$startsWith1($str, $i))
            break;
        $i = $i - $this.$rightToLeft.$get11($ch) | 0;
    }
    return $i;
}
function jur_SequenceSet_startsWith($this, $str, $from) {
    var $i;
    $i = 0;
    while ($i < $this.$charCount) {
        if ($str.$charAt($i + $from | 0) != $this.$string3.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
var cbgssu_ScrollPane = $rt_classWithoutFields(cbgssu_WidgetGroup);
var cbgssu_SelectBox$SelectBoxScrollPane = $rt_classWithoutFields(cbgssu_ScrollPane);
var cbgur_ReflectionException = $rt_classWithoutFields(jl_Exception);
function cbgur_ReflectionException__init_0(var_0, var_1) {
    var var_2 = new cbgur_ReflectionException();
    cbgur_ReflectionException__init_(var_2, var_0, var_1);
    return var_2;
}
function cbgur_ReflectionException__init_($this, $message, $cause) {
    jl_Exception__init_2($this, $message, $cause);
}
var jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_AltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_AltGroupQuantifierSet();
    jur_AltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_AltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_AltGroupQuantifierSet_setNext($this, $next) {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
}
var cbgggpr_ModelInstanceRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
function jur_UCIRangeSet() {
    var a = this; jur_LeafSet.call(a);
    a.$chars2 = null;
    a.$alt3 = 0;
}
function jur_UCIRangeSet__init_(var_0) {
    var var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCIRangeSet__init_0($this, $cc) {
    jur_LeafSet__init_0($this);
    $this.$chars2 = $cc.$getInstance();
    $this.$alt3 = $cc.$alt0;
}
function jur_UCIRangeSet_accepts($this, $strIndex, $testString) {
    var var$3, var$4;
    var$3 = $this.$chars2;
    var$4 = jl_Character_toUpperCase0($testString.$charAt($strIndex));
    return !var$3.$contains0(jl_Character_toLowerCase0(var$4)) ? (-1) : 1;
}
function jur_UCIRangeSet_getName($this) {
    var var$1, var$2, var$3;
    var$1 = !$this.$alt3 ? $rt_s(38) : $rt_s(39);
    var$2 = $this.$chars2.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(452)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
}
var cbgssu_TextField$DefaultOnscreenKeyboard = $rt_classWithoutFields();
var cbgm_CatmullRomSpline = $rt_classWithoutFields();
var cbgm_Circle = $rt_classWithoutFields();
var cbgssa_AlphaAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var cbgssu_SpriteDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
var cbgssu_List$2 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_List$1 = $rt_classWithoutFields(cbgss_InputListener);
var otp_Platform = $rt_classWithoutFields();
function otp_Platform_clone(var$1) {
    var copy = new var$1.constructor();
    for (var field in var$1) {
        if (!var$1.hasOwnProperty(field)) {
            continue;
        }
        copy[field] = var$1[field];
    }
    return copy;
}
function otp_Platform_isInstance($obj, $cls) {
    return $obj !== null && !(typeof $obj.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($obj.constructor, $cls) ? 1 : 0;
}
function otp_Platform_isAssignable($from, $to) {
    var $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
}
function otp_Platform_startThread(var$1) {
    return setTimeout(function() {
        $rt_threadStarter(otp_Platform_launchThread)(var$1);
    }, 0);
}
function otp_Platform_launchThread($runnable) {
    $runnable.$run();
}
function otp_Platform_postpone($runnable) {
    otp_Platform_schedule($runnable, 0);
}
function otp_Platform_schedule(var$1, var$2) {
    return setTimeout(function() {
        otp_Platform_launchThread(var$1);
    }, var$2);
}
function otp_Platform_createQueue() {
    return otp_Platform_createQueueJs$js_body$_30();
}
function otp_Platform_isPrimitive($cls) {
    return $cls.$meta.primitive ? 1 : 0;
}
function otp_Platform_getArrayItem($cls) {
    return $cls.$meta.item;
}
function otp_Platform_getName($cls) {
    return $rt_str($cls.$meta.name);
}
function otp_Platform_createQueueJs$js_body$_30() {
    return [];
}
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name6 = null;
}
var jnc_CodingErrorAction_IGNORE = null;
var jnc_CodingErrorAction_REPLACE = null;
var jnc_CodingErrorAction_REPORT = null;
function jnc_CodingErrorAction_$callClinit() {
    jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
    jnc_CodingErrorAction__clinit_();
}
function jnc_CodingErrorAction__init_(var_0) {
    var var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
}
function jnc_CodingErrorAction__init_0($this, $name) {
    jnc_CodingErrorAction_$callClinit();
    jl_Object__init_0($this);
    $this.$name6 = $name;
}
function jnc_CodingErrorAction__clinit_() {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(1010));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(1011));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(1012));
}
function jl_Boolean() {
    jl_Object.call(this);
    this.$value5 = 0;
}
var jl_Boolean_TRUE = null;
var jl_Boolean_FALSE = null;
var jl_Boolean_TYPE = null;
function jl_Boolean_$callClinit() {
    jl_Boolean_$callClinit = $rt_eraseClinit(jl_Boolean);
    jl_Boolean__clinit_();
}
function jl_Boolean__init_(var_0) {
    var var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
}
function jl_Boolean__init_0($this, $value) {
    jl_Boolean_$callClinit();
    jl_Object__init_0($this);
    $this.$value5 = $value;
}
function jl_Boolean_booleanValue($this) {
    return $this.$value5;
}
function jl_Boolean__clinit_() {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls());
}
var cbgm_Bresenham2 = $rt_classWithoutFields();
var ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException);
function ju_NoSuchElementException__init_() {
    var var_0 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_0(var_0);
    return var_0;
}
function ju_NoSuchElementException__init_1(var_0) {
    var var_1 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_2(var_1, var_0);
    return var_1;
}
function ju_NoSuchElementException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function ju_NoSuchElementException__init_2($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
var cgxgbtf_HEXCoder = $rt_classWithoutFields();
var cgxgbtf_HEXCoder_HEX_CHARS = null;
var cgxgbtf_HEXCoder_HEX_BYTES = null;
function cgxgbtf_HEXCoder_$callClinit() {
    cgxgbtf_HEXCoder_$callClinit = $rt_eraseClinit(cgxgbtf_HEXCoder);
    cgxgbtf_HEXCoder__clinit_();
}
function cgxgbtf_HEXCoder_decode($string) {
    var $bytes, $i, var$4, var$5, $c0, $c1;
    cgxgbtf_HEXCoder_$callClinit();
    $bytes = $rt_createByteArray($string.$length() / 2 | 0);
    $i = 0;
    while (true) {
        var$4 = $bytes.data;
        if ($i >= var$4.length)
            break;
        var$5 = $i * 2 | 0;
        $c0 = $string.$charAt(var$5);
        $c1 = $string.$charAt(var$5 + 1 | 0);
        var$4[$i] = ((cgxgbtf_HEXCoder_HEX_BYTES.data[$c0] << 4) + cgxgbtf_HEXCoder_HEX_BYTES.data[$c1] | 0) << 24 >> 24;
        $i = $i + 1 | 0;
    }
    return $bytes;
}
function cgxgbtf_HEXCoder__clinit_() {
    var $i;
    cgxgbtf_HEXCoder_HEX_CHARS = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70]);
    cgxgbtf_HEXCoder_HEX_BYTES = $rt_createIntArray(128);
    $i = 0;
    while ($i < cgxgbtf_HEXCoder_HEX_CHARS.data.length) {
        cgxgbtf_HEXCoder_HEX_BYTES.data[cgxgbtf_HEXCoder_HEX_CHARS.data[$i]] = $i;
        if (cgxgbtf_HEXCoder_HEX_CHARS.data[$i] >= 65)
            cgxgbtf_HEXCoder_HEX_BYTES.data[(cgxgbtf_HEXCoder_HEX_CHARS.data[$i] - 65 | 0) + 97 | 0] = $i;
        $i = $i + 1 | 0;
    }
}
var cbgssa_ScaleToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
function cgtr_VanDerCorputQuasiRandom() {
    cgtr_EnhancedRandom.call(this);
    this.$state4 = Long_ZERO;
}
function cgtr_VanDerCorputQuasiRandom__init_() {
    var var_0 = new cgtr_VanDerCorputQuasiRandom();
    cgtr_VanDerCorputQuasiRandom__init_0(var_0);
    return var_0;
}
function cgtr_VanDerCorputQuasiRandom__init_1(var_0) {
    var var_1 = new cgtr_VanDerCorputQuasiRandom();
    cgtr_VanDerCorputQuasiRandom__init_2(var_1, var_0);
    return var_1;
}
function cgtr_VanDerCorputQuasiRandom__init_0($this) {
    cgtr_VanDerCorputQuasiRandom__init_2($this, cgtr_EnhancedRandom_seedFromMath());
}
function cgtr_VanDerCorputQuasiRandom__init_2($this, $state) {
    cgtr_EnhancedRandom__init_0($this, $state);
    $this.$state4 = $state;
}
function cgtr_VanDerCorputQuasiRandom_nextLong($this) {
    var var$1;
    var$1 = Long_add($this.$state4, Long_fromInt(1));
    $this.$state4 = var$1;
    return jl_Long_reverse(var$1);
}
function cgtr_VanDerCorputQuasiRandom_next($this, $bits) {
    var var$2;
    var$2 = Long_add($this.$state4, Long_fromInt(1));
    $this.$state4 = var$2;
    return Long_lo(Long_shru(jl_Long_reverse(var$2), 64 - $bits | 0));
}
function cgtr_VanDerCorputQuasiRandom_nextExclusiveDouble($this) {
    var var$1, $n;
    var$1 = Long_add($this.$state4, Long_fromInt(1));
    $this.$state4 = var$1;
    $n = Long_toNumber(Long_shru(jl_Long_reverse(var$1), 11)) * 1.1102230246251565E-16;
    if ($n === 0.0)
        $n = 5.551115123125783E-17;
    return $n;
}
function cgtr_VanDerCorputQuasiRandom_nextExclusiveSignedDouble($this) {
    var var$1, $bits, $n;
    var$1 = Long_add($this.$state4, Long_fromInt(1));
    $this.$state4 = var$1;
    $bits = jl_Long_reverse(var$1);
    $n = Long_toNumber(Long_shru($bits, 11)) * 1.1102230246251565E-16;
    if ($n === 0.0)
        $n = 5.551115123125783E-17;
    return jl_Math_copySign($n, Long_toNumber(Long_shl($bits, 54)));
}
function cgtr_VanDerCorputQuasiRandom_nextExclusiveFloat($this) {
    var var$1, $n;
    var$1 = Long_add($this.$state4, Long_fromInt(1));
    $this.$state4 = var$1;
    $n = Long_toNumber(Long_shru(jl_Long_reverse(var$1), 40)) * 5.960464477539063E-8;
    if ($n === 0.0)
        $n = 2.9802322387695312E-8;
    return $n;
}
function cgtr_VanDerCorputQuasiRandom_nextGaussian($this) {
    var var$1;
    var$1 = Long_add($this.$state4, Long_fromInt(1));
    $this.$state4 = var$1;
    return cgtr_Ziggurat_normal(cgtd_Hasher_randomize3(var$1));
}
var cbgm_Octree$Collider = $rt_classWithoutFields(0);
var jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet);
function jur_BackReferenceSet__init_(var_0, var_1) {
    var var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_BackReferenceSet__init_0($this, $groupIndex, $consCounter) {
    jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter);
}
function jur_BackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $group, $shift;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $shift = !($testString.$toString()).$startsWith($group, $stringIndex) ? (-1) : $group.$length();
        if ($shift < 0)
            return (-1);
        $matchResult.$setConsumed($this.$consCounter0, $shift);
        return $this.$next.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_BackReferenceSet_find($this, $strIndex, $testString, $matchResult) {
    var $group, $strLength, $testStr, var$7;
    $group = $this.$getString($matchResult);
    $strLength = $matchResult.$getLeftBound();
    if ($group !== null && ($strIndex + $group.$length() | 0) <= $strLength) {
        $testStr = $testString.$toString();
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            var$7 = $testStr.$indexOf0($group, $strIndex);
            if (var$7 < 0)
                return (-1);
            if ($this.$next.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = var$7 + 1 | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $group, $testStr, var$7;
    $group = $this.$getString($matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString.$toString();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf2($group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_BackReferenceSet_first($this, $set) {
    return 1;
}
function jur_BackReferenceSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$groupIndex0;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(1013)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt0 = null;
}
function jur_DotQuantifierSet__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_DotQuantifierSet();
    jur_DotQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_DotQuantifierSet__init_0($this, $innerSet, $next, $type, $lt) {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$lt0 = $lt;
}
function jur_DotQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $startSearch;
    $strLength = $matchResult.$getRightBound();
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_DotQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
    var $strLength, $res, $nextSearch, var$7, $leftBound;
    $strLength = $matchResult.$getRightBound();
    $res = $this.$next.$find($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$7 = $this.$next.$findBack($res, $strLength, $testString, $matchResult);
    var$7 = jl_Math_max($res, var$7);
    $leftBound = var$7 > 0 ? jur_DotQuantifierSet_findBackLineTerminator($this, $stringIndex, var$7 - 1 | 0, $testString) : var$7 ? (-1) : 0;
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= var$7 ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
}
function jur_DotQuantifierSet_findLineTerminator($this, $i, $to, $testString) {
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt0.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function jur_DotQuantifierSet_findBackLineTerminator($this, $from, $i, $testString) {
    while (true) {
        if ($i < $from)
            return (-1);
        if ($this.$lt0.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + (-1) | 0;
    }
    return $i;
}
function jur_DotQuantifierSet_getName($this) {
    return $rt_s(1014);
}
var cbgggpv_WeightMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue);
var otcit_FloatAnalyzer = $rt_classWithoutFields();
var otcit_FloatAnalyzer_mantissa10Table = null;
var otcit_FloatAnalyzer_exp10Table = null;
function otcit_FloatAnalyzer_$callClinit() {
    otcit_FloatAnalyzer_$callClinit = $rt_eraseClinit(otcit_FloatAnalyzer);
    otcit_FloatAnalyzer__clinit_();
}
function otcit_FloatAnalyzer_analyze($d, $result) {
    var $bits, $mantissa, $exponent, $errorShift, var$7, $decExponent, $binExponentCorrection, $mantissaShift, var$11, $decMantissa, var$13, $error, $upError, $downError, $lowerPos, $upperPos;
    otcit_FloatAnalyzer_$callClinit();
    $bits = $rt_floatToIntBits($d);
    $result.$sign = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    $errorShift = 0;
    if ($exponent)
        var$7 = $mantissa | 8388608;
    else {
        var$7 = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt(var$7), Long_fromInt(8388608)), Long_ZERO)) {
            var$7 = var$7 << 1;
            $exponent = $exponent + (-1) | 0;
            $errorShift = $errorShift + 1 | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_FloatAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent = ( -$decExponent | 0) - 2 | 0;
    $binExponentCorrection = $exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
    $mantissaShift = 9 + $binExponentCorrection | 0;
    var$11 = Long_fromInt(var$7);
    $decMantissa = Long_lo(Long_shru(Long_mul(var$11, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0));
    if ($decMantissa >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$13 = $exponent - otcit_FloatAnalyzer_exp10Table.data[$decExponent] | 0;
        $mantissaShift = 9 + var$13 | 0;
        $decMantissa = Long_lo(Long_shru(Long_mul(var$11, Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$decExponent])), 32 - $mantissaShift | 0));
    }
    var$13 = (31 - $mantissaShift | 0) - $errorShift | 0;
    $error = var$13 >= 0 ? otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] >>> var$13 | 0 : otcit_FloatAnalyzer_mantissa10Table.data[$decExponent] << ( -var$13 | 0);
    $upError = ($error + 1 | 0) >> 1;
    $downError = $error >> 1;
    if (var$7 == 4194304)
        $downError = $downError >> 2;
    $lowerPos = otcit_FloatAnalyzer_findLowerDistanceToZero($decMantissa, $downError);
    $upperPos = otcit_FloatAnalyzer_findUpperDistanceToZero($decMantissa, $upError);
    var$7 = $rt_compare($lowerPos, $upperPos);
    var$7 = var$7 > 0 ? $rt_imul($decMantissa / $lowerPos | 0, $lowerPos) : var$7 < 0 ? $rt_imul($decMantissa / $upperPos | 0, $upperPos) + $upperPos | 0 : $rt_imul(($decMantissa + ($upperPos / 2 | 0) | 0) / $upperPos | 0, $upperPos);
    if (var$7 >= 1000000000) {
        $decExponent = $decExponent + 1 | 0;
        var$7 = var$7 / 10 | 0;
    } else if (var$7 < 100000000) {
        $decExponent = $decExponent + (-1) | 0;
        var$7 = var$7 * 10 | 0;
    }
    $result.$mantissa = var$7;
    $result.$exponent = $decExponent - 50 | 0;
}
function otcit_FloatAnalyzer_findLowerDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if ($mantissaRight >= ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
}
function otcit_FloatAnalyzer_findUpperDistanceToZero($mantissa, $error) {
    var $pos, $mantissaRight;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 10;
    while ($pos <= $error) {
        $pos = $pos * 10 | 0;
    }
    $mantissaRight = $mantissa % $pos | 0;
    if (($pos - $mantissaRight | 0) > ($error / 2 | 0))
        $pos = $pos / 10 | 0;
    return $pos;
}
function otcit_FloatAnalyzer__clinit_() {
    var $decMantissaOne, $exponent, $i, var$4, var$5, var$6, $remainder, $maxMantissa, $shift, var$10, $shiftedOffPart;
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArray(100);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArray(100);
    $decMantissaOne = 2000000000;
    $exponent = 127;
    $i = 0;
    var$4 = $decMantissaOne;
    while ($i < 50) {
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$6 = $i + 50 | 0;
        var$5[var$6] = $rt_udiv(var$4, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$6] = $exponent;
        var$6 = $rt_udiv(var$4, 10);
        $remainder = $rt_umod(var$6, 10);
        while (var$6 <= $decMantissaOne && !(var$6 & (-2147483648))) {
            var$6 = var$6 << 1;
            $exponent = $exponent + 1 | 0;
            $remainder = $remainder << 1;
        }
        var$4 = var$6 + ($remainder / 10 | 0) | 0;
        $i = $i + 1 | 0;
    }
    $maxMantissa = 214748364;
    var$4 = 127;
    $i = 0;
    while ($i < 50) {
        $shift = 0;
        var$10 = $decMantissaOne;
        while (var$10 > $maxMantissa) {
            var$10 = var$10 >> 1;
            $shift = $shift + 1 | 0;
            var$4 = var$4 + (-1) | 0;
        }
        var$10 = var$10 * 10 | 0;
        if ($shift <= 0)
            $decMantissaOne = var$10;
        else {
            $shiftedOffPart = Long_fromInt($decMantissaOne & ((1 << $shift) - 1 | 0));
            $decMantissaOne = Long_lo(Long_add(Long_fromInt(var$10), Long_shr(Long_mul($shiftedOffPart, Long_fromInt(10)), $shift)));
        }
        var$5 = otcit_FloatAnalyzer_mantissa10Table.data;
        var$10 = (50 - $i | 0) - 1 | 0;
        var$5[var$10] = $rt_udiv($decMantissaOne, 20);
        otcit_FloatAnalyzer_exp10Table.data[var$10] = var$4;
        $i = $i + 1 | 0;
    }
}
function cbgg_Composite() {
    jl_Enum.call(this);
    this.$value6 = null;
}
var cbgg_Composite_COPY = null;
var cbgg_Composite_DESTINATION_ATOP = null;
var cbgg_Composite_DESTINATION_IN = null;
var cbgg_Composite_DESTINATION_OUT = null;
var cbgg_Composite_DESTINATION_OVER = null;
var cbgg_Composite_LIGHTER = null;
var cbgg_Composite_SOURCE_ATOP = null;
var cbgg_Composite_SOURCE_IN = null;
var cbgg_Composite_SOURCE_OUT = null;
var cbgg_Composite_SOURCE_OVER = null;
var cbgg_Composite_XOR = null;
var cbgg_Composite_$VALUES = null;
function cbgg_Composite_$callClinit() {
    cbgg_Composite_$callClinit = $rt_eraseClinit(cbgg_Composite);
    cbgg_Composite__clinit_();
}
function cbgg_Composite__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Composite();
    cbgg_Composite__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Composite__init_0($this, var$1, var$2, $value) {
    cbgg_Composite_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value6 = $value;
}
function cbgg_Composite_getValue($this) {
    return $this.$value6;
}
function cbgg_Composite__clinit_() {
    cbgg_Composite_COPY = cbgg_Composite__init_($rt_s(1015), 0, $rt_s(1016));
    cbgg_Composite_DESTINATION_ATOP = cbgg_Composite__init_($rt_s(1017), 1, $rt_s(1018));
    cbgg_Composite_DESTINATION_IN = cbgg_Composite__init_($rt_s(1019), 2, $rt_s(1020));
    cbgg_Composite_DESTINATION_OUT = cbgg_Composite__init_($rt_s(1021), 3, $rt_s(1022));
    cbgg_Composite_DESTINATION_OVER = cbgg_Composite__init_($rt_s(1023), 4, $rt_s(1024));
    cbgg_Composite_LIGHTER = cbgg_Composite__init_($rt_s(1025), 5, $rt_s(1026));
    cbgg_Composite_SOURCE_ATOP = cbgg_Composite__init_($rt_s(1027), 6, $rt_s(1028));
    cbgg_Composite_SOURCE_IN = cbgg_Composite__init_($rt_s(1029), 7, $rt_s(1030));
    cbgg_Composite_SOURCE_OUT = cbgg_Composite__init_($rt_s(1031), 8, $rt_s(1032));
    cbgg_Composite_SOURCE_OVER = cbgg_Composite__init_($rt_s(1033), 9, $rt_s(1034));
    cbgg_Composite_XOR = cbgg_Composite__init_($rt_s(1035), 10, $rt_s(1036));
    cbgg_Composite_$VALUES = $rt_createArrayFromData(cbgg_Composite, [cbgg_Composite_COPY, cbgg_Composite_DESTINATION_ATOP, cbgg_Composite_DESTINATION_IN, cbgg_Composite_DESTINATION_OUT, cbgg_Composite_DESTINATION_OVER, cbgg_Composite_LIGHTER, cbgg_Composite_SOURCE_ATOP, cbgg_Composite_SOURCE_IN, cbgg_Composite_SOURCE_OUT, cbgg_Composite_SOURCE_OVER, cbgg_Composite_XOR]);
}
var cbgm_CumulativeDistribution = $rt_classWithoutFields();
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide = $rt_classWithoutFields(jl_Enum);
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = null;
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = null;
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = null;
var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = null;
function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit() {
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit = $rt_eraseClinit(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide);
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__clinit_();
}
function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__init_(var_0, var_1) {
    var var_2 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide();
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__init_0($this, var$1, var$2) {
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__clinit_() {
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__init_($rt_s(1037), 0);
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__init_($rt_s(1038), 1);
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__init_($rt_s(1039), 2);
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = $rt_createArrayFromData(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, [cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both, cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top, cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom]);
}
var cbgggpi_DynamicsModifier$FaceDirection = $rt_classWithoutFields(cbgggpi_DynamicsModifier);
function cbggg_ShaderProgram() {
    var a = this; jl_Object.call(a);
    a.$log1 = null;
    a.$isCompiled0 = 0;
    a.$uniforms0 = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$uniformNames = null;
    a.$attributes2 = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$attributeNames = null;
    a.$program = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$matrix = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$invalidated = 0;
    a.$refCount = 0;
    a.$params = null;
    a.$type5 = null;
}
var cbggg_ShaderProgram_pedantic = 0;
var cbggg_ShaderProgram_prependVertexCode = null;
var cbggg_ShaderProgram_prependFragmentCode = null;
var cbggg_ShaderProgram_shaders = null;
var cbggg_ShaderProgram_intbuf = null;
function cbggg_ShaderProgram_$callClinit() {
    cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
    cbggg_ShaderProgram__clinit_();
}
function cbggg_ShaderProgram__init_(var_0, var_1) {
    var var_2 = new cbggg_ShaderProgram();
    cbggg_ShaderProgram__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_ShaderProgram__init_0($this, $vertexShader, $fragmentShader) {
    cbggg_ShaderProgram_$callClinit();
    jl_Object__init_0($this);
    $this.$log1 = $rt_s(45);
    $this.$uniforms0 = cbgu_ObjectIntMap__init_();
    $this.$uniformTypes = cbgu_ObjectIntMap__init_();
    $this.$uniformSizes = cbgu_ObjectIntMap__init_();
    $this.$attributes2 = cbgu_ObjectIntMap__init_();
    $this.$attributeTypes = cbgu_ObjectIntMap__init_();
    $this.$attributeSizes = cbgu_ObjectIntMap__init_();
    $this.$refCount = 0;
    $this.$params = cbgu_BufferUtils_newIntBuffer(1);
    $this.$type5 = cbgu_BufferUtils_newIntBuffer(1);
    if ($vertexShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1040)));
    if ($fragmentShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1041)));
    if (cbggg_ShaderProgram_prependVertexCode !== null && cbggg_ShaderProgram_prependVertexCode.$length() > 0)
        $vertexShader = (((jl_StringBuilder__init_()).$append1(cbggg_ShaderProgram_prependVertexCode)).$append1($vertexShader)).$toString();
    if (cbggg_ShaderProgram_prependFragmentCode !== null && cbggg_ShaderProgram_prependFragmentCode.$length() > 0)
        $fragmentShader = (((jl_StringBuilder__init_()).$append1(cbggg_ShaderProgram_prependFragmentCode)).$append1($fragmentShader)).$toString();
    $this.$vertexShaderSource = $vertexShader;
    $this.$fragmentShaderSource = $fragmentShader;
    $this.$matrix = cbgu_BufferUtils_newFloatBuffer(16);
    cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader);
    if ($this.$isCompiled()) {
        cbggg_ShaderProgram_fetchAttributes($this);
        cbggg_ShaderProgram_fetchUniforms($this);
        cbggg_ShaderProgram_addManagedShader($this, cbg_Gdx_app, $this);
    }
}
function cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader) {
    $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
    $this.$fragmentShaderHandle = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
    if ($this.$vertexShaderHandle != (-1) && $this.$fragmentShaderHandle != (-1)) {
        $this.$program = cbggg_ShaderProgram_linkProgram($this, $this.$createProgram());
        if ($this.$program != (-1)) {
            $this.$isCompiled0 = 1;
            return;
        }
        $this.$isCompiled0 = 0;
        return;
    }
    $this.$isCompiled0 = 0;
}
function cbggg_ShaderProgram_loadShader($this, $type, $source) {
    var $gl, $intbuf, $shader, $compiled, $infoLog;
    $gl = cbg_Gdx_gl20;
    $intbuf = cbgu_BufferUtils_newIntBuffer(1);
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    $compiled = $intbuf.$get11(0);
    if ($compiled)
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $this.$log1 = (((jl_StringBuilder__init_()).$append1($this.$log1)).$append1($type != 35633 ? $rt_s(1042) : $rt_s(1043))).$toString();
    $this.$log1 = (((jl_StringBuilder__init_()).$append1($this.$log1)).$append1($infoLog)).$toString();
    return (-1);
}
function cbggg_ShaderProgram_createProgram($this) {
    var $gl, $program;
    $gl = cbg_Gdx_gl20;
    $program = $gl.$glCreateProgram();
    if (!$program)
        $program = (-1);
    return $program;
}
function cbggg_ShaderProgram_linkProgram($this, $program) {
    var $gl, $tmp_0, $intbuf, $linked;
    $gl = cbg_Gdx_gl20;
    if ($program == (-1))
        return (-1);
    $gl.$glAttachShader($program, $this.$vertexShaderHandle);
    $gl.$glAttachShader($program, $this.$fragmentShaderHandle);
    $gl.$glLinkProgram($program);
    $tmp_0 = jn_ByteBuffer_allocateDirect(4);
    jn_ByteBuffer_order($tmp_0, jn_ByteOrder_nativeOrder());
    $intbuf = $tmp_0.$asIntBuffer();
    $gl.$glGetProgramiv($program, 35714, $intbuf);
    $linked = $intbuf.$get11(0);
    if ($linked)
        return $program;
    $this.$log1 = cbg_Gdx_gl20.$glGetProgramInfoLog($program);
    return (-1);
}
function cbggg_ShaderProgram_getLog($this) {
    if (!$this.$isCompiled0)
        return $this.$log1;
    $this.$log1 = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program);
    return $this.$log1;
}
function cbggg_ShaderProgram_isCompiled($this) {
    return $this.$isCompiled0;
}
function cbggg_ShaderProgram_fetchAttributeLocation($this, $name) {
    var $gl, var$3;
    $gl = cbg_Gdx_gl20;
    var$3 = $this.$attributes2.$get16($name, (-2));
    if (var$3 == (-2)) {
        var$3 = $gl.$glGetAttribLocation($this.$program, $name);
        $this.$attributes2.$put10($name, var$3);
    }
    return var$3;
}
function cbggg_ShaderProgram_fetchUniformLocation($this, $name) {
    cbggg_ShaderProgram_$callClinit();
    return $this.$fetchUniformLocation($name, cbggg_ShaderProgram_pedantic);
}
function cbggg_ShaderProgram_fetchUniformLocation0($this, $name, $pedantic) {
    var var$3;
    var$3 = $this.$uniforms0.$get16($name, (-2));
    if (var$3 == (-2)) {
        var$3 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        if (var$3 == (-1) && $pedantic) {
            if (!$this.$isCompiled0)
                $rt_throw(jl_IllegalStateException__init_((((jl_StringBuilder__init_()).$append1($rt_s(1044))).$append1($this.$getLog())).$toString()));
            $rt_throw(jl_IllegalArgumentException__init_(((((jl_StringBuilder__init_()).$append1($rt_s(1045))).$append1($name)).$append1($rt_s(1046))).$toString()));
        }
        $this.$uniforms0.$put10($name, var$3);
    }
    return var$3;
}
function cbggg_ShaderProgram_setUniformi($this, $name, $value) {
    var $gl, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $location = cbggg_ShaderProgram_fetchUniformLocation($this, $name);
    $gl.$glUniform1i($location, $value);
}
function cbggg_ShaderProgram_setUniformMatrix($this, $name, $matrix) {
    $this.$setUniformMatrix0($name, $matrix, 0);
}
function cbggg_ShaderProgram_setUniformMatrix0($this, $name, $matrix, $transpose) {
    $this.$setUniformMatrix1(cbggg_ShaderProgram_fetchUniformLocation($this, $name), $matrix, $transpose);
}
function cbggg_ShaderProgram_setUniformMatrix1($this, $location, $matrix, $transpose) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniformMatrix4fv($location, 1, $transpose, $matrix.$val, 0);
}
function cbggg_ShaderProgram_setVertexAttribute($this, $location, $size, $type, $normalize, $stride, $offset) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glVertexAttribPointer($location, $size, $type, $normalize, $stride, $offset);
}
function cbggg_ShaderProgram_bind($this) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUseProgram($this.$program);
}
function cbggg_ShaderProgram_disableVertexAttribute($this, $name) {
    var $gl, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $location = cbggg_ShaderProgram_fetchAttributeLocation($this, $name);
    if ($location == (-1))
        return;
    $gl.$glDisableVertexAttribArray($location);
}
function cbggg_ShaderProgram_disableVertexAttribute0($this, $location) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glDisableVertexAttribArray($location);
}
function cbggg_ShaderProgram_enableVertexAttribute($this, $location) {
    var $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glEnableVertexAttribArray($location);
}
function cbggg_ShaderProgram_checkManaged($this) {
    if ($this.$invalidated) {
        cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
}
function cbggg_ShaderProgram_addManagedShader($this, $app, $shaderProgram) {
    var $managedResources;
    cbggg_ShaderProgram_$callClinit();
    $managedResources = cbggg_ShaderProgram_shaders.$get0($app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    $managedResources.$add3($shaderProgram);
    cbggg_ShaderProgram_shaders.$put1($app, $managedResources);
}
function cbggg_ShaderProgram_fetchUniforms($this) {
    var $numUniforms, $i, $name, $location;
    $this.$params.$clear1();
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35718, $this.$params);
    $numUniforms = $this.$params.$get11(0);
    $this.$uniformNames = $rt_createArray(jl_String, $numUniforms);
    $i = 0;
    while ($i < $numUniforms) {
        $this.$params.$clear1();
        $this.$params.$put11(0, 1);
        $this.$type5.$clear1();
        $name = cbg_Gdx_gl20.$glGetActiveUniform($this.$program, $i, $this.$params, $this.$type5);
        $location = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        $this.$uniforms0.$put10($name, $location);
        $this.$uniformTypes.$put10($name, $this.$type5.$get11(0));
        $this.$uniformSizes.$put10($name, $this.$params.$get11(0));
        $this.$uniformNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function cbggg_ShaderProgram_fetchAttributes($this) {
    var $numAttributes, $i, $name, $location;
    $this.$params.$clear1();
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35721, $this.$params);
    $numAttributes = $this.$params.$get11(0);
    $this.$attributeNames = $rt_createArray(jl_String, $numAttributes);
    $i = 0;
    while ($i < $numAttributes) {
        $this.$params.$clear1();
        $this.$params.$put11(0, 1);
        $this.$type5.$clear1();
        $name = cbg_Gdx_gl20.$glGetActiveAttrib($this.$program, $i, $this.$params, $this.$type5);
        $location = cbg_Gdx_gl20.$glGetAttribLocation($this.$program, $name);
        $this.$attributes2.$put10($name, $location);
        $this.$attributeTypes.$put10($name, $this.$type5.$get11(0));
        $this.$attributeSizes.$put10($name, $this.$params.$get11(0));
        $this.$attributeNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
}
function cbggg_ShaderProgram_getAttributeLocation($this, $name) {
    return $this.$attributes2.$get16($name, (-1));
}
function cbggg_ShaderProgram__clinit_() {
    cbggg_ShaderProgram_pedantic = 1;
    cbggg_ShaderProgram_prependVertexCode = $rt_s(45);
    cbggg_ShaderProgram_prependFragmentCode = $rt_s(45);
    cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_();
    cbggg_ShaderProgram_intbuf = cbgu_BufferUtils_newIntBuffer(1);
}
var cbg_Files$FileType = $rt_classWithoutFields(jl_Enum);
var cbg_Files$FileType_Classpath = null;
var cbg_Files$FileType_Internal = null;
var cbg_Files$FileType_External = null;
var cbg_Files$FileType_Absolute = null;
var cbg_Files$FileType_Local = null;
var cbg_Files$FileType_$VALUES = null;
function cbg_Files$FileType_$callClinit() {
    cbg_Files$FileType_$callClinit = $rt_eraseClinit(cbg_Files$FileType);
    cbg_Files$FileType__clinit_();
}
function cbg_Files$FileType__init_(var_0, var_1) {
    var var_2 = new cbg_Files$FileType();
    cbg_Files$FileType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbg_Files$FileType__init_0($this, var$1, var$2) {
    cbg_Files$FileType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbg_Files$FileType__clinit_() {
    cbg_Files$FileType_Classpath = cbg_Files$FileType__init_($rt_s(1047), 0);
    cbg_Files$FileType_Internal = cbg_Files$FileType__init_($rt_s(1048), 1);
    cbg_Files$FileType_External = cbg_Files$FileType__init_($rt_s(1049), 2);
    cbg_Files$FileType_Absolute = cbg_Files$FileType__init_($rt_s(1050), 3);
    cbg_Files$FileType_Local = cbg_Files$FileType__init_($rt_s(1051), 4);
    cbg_Files$FileType_$VALUES = $rt_createArrayFromData(cbg_Files$FileType, [cbg_Files$FileType_Classpath, cbg_Files$FileType_Internal, cbg_Files$FileType_External, cbg_Files$FileType_Absolute, cbg_Files$FileType_Local]);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$025 = null;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0($this, $this$0) {
    $this.$this$025 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains($this, $ch) {
    return jl_Character_isJavaIdentifierStart($ch);
}
function cbggg_IndexBufferObject() {
    var a = this; jl_Object.call(a);
    a.$buffer8 = null;
    a.$bufferHandle3 = 0;
    a.$isDirect1 = 0;
    a.$isDirty3 = 0;
    a.$isBound3 = 0;
    a.$usage4 = 0;
}
function cbggg_IndexBufferObject__init_(var_0, var_1) {
    var var_2 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_IndexBufferObject__init_1(var_0) {
    var var_1 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_2(var_1, var_0);
    return var_1;
}
function cbggg_IndexBufferObject__init_0($this, $isStatic, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty3 = 1;
    $this.$isBound3 = 0;
    $this.$isDirect1 = 1;
    $this.$buffer8 = cbgu_BufferUtils_newShortBuffer($maxIndices);
    jn_ShortBuffer_flip($this.$buffer8);
    $this.$bufferHandle3 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage4 = !$isStatic ? 35048 : 35044;
}
function cbggg_IndexBufferObject__init_2($this, $maxIndices) {
    jl_Object__init_0($this);
    $this.$isDirty3 = 1;
    $this.$isBound3 = 0;
    $this.$isDirect1 = 1;
    $this.$buffer8 = cbgu_BufferUtils_newShortBuffer($maxIndices);
    jn_ShortBuffer_flip($this.$buffer8);
    $this.$bufferHandle3 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage4 = 35044;
}
function cbggg_IndexBufferObject_getNumIndices($this) {
    return jn_Buffer_limit($this.$buffer8);
}
function cbggg_IndexBufferObject_getNumMaxIndices($this) {
    return jn_Buffer_capacity($this.$buffer8);
}
function cbggg_IndexBufferObject_setIndices($this, $indices, $offset, $count) {
    $this.$isDirty3 = 1;
    jn_ShortBuffer_clear($this.$buffer8);
    $this.$buffer8.$put6($indices, $offset, $count);
    jn_ShortBuffer_flip($this.$buffer8);
    if ($this.$isBound3) {
        cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer8), $this.$buffer8, $this.$usage4);
        $this.$isDirty3 = 0;
    }
}
function cbggg_IndexBufferObject_getBuffer($this, $forWriting) {
    $this.$isDirty3 = $this.$isDirty3 | $forWriting;
    return $this.$buffer8;
}
function cbggg_IndexBufferObject_bind($this) {
    if (!$this.$bufferHandle3)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(1052)));
    cbg_Gdx_gl20.$glBindBuffer(34963, $this.$bufferHandle3);
    if ($this.$isDirty3) {
        cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer8), $this.$buffer8, $this.$usage4);
        $this.$isDirty3 = 0;
    }
    $this.$isBound3 = 1;
}
function cbggg_IndexBufferObject_unbind($this) {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound3 = 0;
}
var cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject);
function cbggg_IndexArray__init_(var_0) {
    var var_1 = new cbggg_IndexArray();
    cbggg_IndexArray__init_0(var_1, var_0);
    return var_1;
}
function cbggg_IndexArray__init_0($this, $maxIndices) {
    cbggg_IndexBufferObject__init_2($this, $maxIndices);
}
function cbgg_Camera() {
    var a = this; jl_Object.call(a);
    a.$position6 = null;
    a.$direction = null;
    a.$up = null;
    a.$projection = null;
    a.$view = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$frustum = null;
    a.$tmpVec = null;
    a.$ray = null;
}
function cbgg_Camera__init_($this) {
    jl_Object__init_0($this);
    $this.$position6 = cbgm_Vector3__init_();
    $this.$direction = cbgm_Vector3__init_1(0.0, 0.0, (-1.0));
    $this.$up = cbgm_Vector3__init_1(0.0, 1.0, 0.0);
    $this.$projection = cbgm_Matrix4__init_();
    $this.$view = cbgm_Matrix4__init_();
    $this.$combined = cbgm_Matrix4__init_();
    $this.$invProjectionView = cbgm_Matrix4__init_();
    $this.$near = 1.0;
    $this.$far = 100.0;
    $this.$viewportWidth = 0.0;
    $this.$viewportHeight = 0.0;
    $this.$frustum = cbgm_Frustum__init_();
    $this.$tmpVec = cbgm_Vector3__init_();
    $this.$ray = cbgmc_Ray__init_(cbgm_Vector3__init_(), cbgm_Vector3__init_());
}
function cbgg_OrthographicCamera() {
    var a = this; cbgg_Camera.call(a);
    a.$zoom = 0.0;
    a.$tmp0 = null;
}
function cbgg_OrthographicCamera__init_() {
    var var_0 = new cbgg_OrthographicCamera();
    cbgg_OrthographicCamera__init_0(var_0);
    return var_0;
}
function cbgg_OrthographicCamera__init_0($this) {
    cbgg_Camera__init_($this);
    $this.$zoom = 1.0;
    $this.$tmp0 = cbgm_Vector3__init_();
    $this.$near = 0.0;
}
function cbgg_OrthographicCamera_update($this) {
    $this.$update1(1);
}
function cbgg_OrthographicCamera_update0($this, $updateFrustum) {
    $this.$projection.$setToOrtho($this.$zoom *  -$this.$viewportWidth / 2.0, $this.$zoom * $this.$viewportWidth / 2.0, $this.$zoom *  -($this.$viewportHeight / 2.0), $this.$zoom * $this.$viewportHeight / 2.0, $this.$near, $this.$far);
    $this.$view.$setToLookAt0($this.$position6, ($this.$tmp0.$set1($this.$position6)).$add2($this.$direction), $this.$up);
    $this.$combined.$set3($this.$projection);
    cbgm_Matrix4_mul0($this.$combined.$val, $this.$view.$val);
    if ($updateFrustum) {
        $this.$invProjectionView.$set3($this.$combined);
        cbgm_Matrix4_inv($this.$invProjectionView.$val);
        $this.$frustum.$update2($this.$invProjectionView);
    }
}
var cbgggpi_SpawnInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
var ju_Arrays = $rt_classWithoutFields();
function ju_Arrays_copyOf0($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createCharArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createByteArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf2($array, $length) {
    var var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createIntArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_copyOf1($original, $newLength) {
    var var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance((jl_Object_getClass($original)).$getComponentType(), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
}
function ju_Arrays_fill2($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill($a, $val) {
    ju_Arrays_fill2($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill3($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill0($a, $val) {
    ju_Arrays_fill3($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill4($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill5($a, $val) {
    ju_Arrays_fill4($a, 0, $a.data.length, $val);
}
function ju_Arrays_fill1($a, $fromIndex, $toIndex, $val) {
    var var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
}
function ju_Arrays_fill6($a, $val) {
    ju_Arrays_fill1($a, 0, $a.data.length, $val);
}
function ju_Arrays_binarySearch($a, $key) {
    return ju_Arrays_binarySearch0($a, 0, $a.data.length, $key);
}
function ju_Arrays_binarySearch0($a, $fromIndex, $toIndex, $key) {
    var var$5, $u, var$7, $i, $e;
    var$5 = $rt_compare($fromIndex, $toIndex);
    if (var$5 > 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    if (!var$5)
        return (-1);
    $u = $toIndex - 1 | 0;
    while (true) {
        var$7 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$7[$i];
        if ($e == $key)
            break;
        if ($key >= $e) {
            $fromIndex = $i + 1 | 0;
            if ($fromIndex > $u)
                return ( -$i | 0) - 2 | 0;
        } else {
            $u = $i - 1 | 0;
            if ($u < $fromIndex)
                return ( -$i | 0) - 1 | 0;
        }
    }
    return $i;
}
function ju_Arrays_equals($a, $a2) {
    var var$3, var$4, var$5, $i;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        var$3 = $a2.data;
        var$4 = $a.data;
        var$5 = var$4.length;
        if (var$5 == var$3.length) {
            $i = 0;
            while ($i < var$5) {
                if (!ju_Objects_equals(var$4[$i], var$3[$i]))
                    return 0;
                $i = $i + 1 | 0;
            }
            return 1;
        }
    }
    return 0;
}
function ju_Arrays_asList($a) {
    ju_Objects_requireNonNull($a);
    return ju_Arrays$ArrayAsList__init_($a);
}
function jur_CharClass$3() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc = null;
    a.$this$026 = null;
}
function jur_CharClass$3__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$3();
    jur_CharClass$3__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$3__init_0($this, $this$0, var$2, var$3) {
    $this.$this$026 = $this$0;
    $this.$val$curAlt = var$2;
    $this.$val$cc = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$3_contains($this, $ch) {
    return !($this.$val$curAlt ^ $this.$this$026.$bits.$get9($ch)) && !($this.$val$curAlt ^ $this.$this$026.$inverted ^ $this.$val$cc.$contains0($ch)) ? 0 : 1;
}
function jur_CharClass$4() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$nb = null;
    a.$val$cc0 = null;
    a.$this$027 = null;
}
function jur_CharClass$4__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$4();
    jur_CharClass$4__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$4__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$027 = $this$0;
    $this.$val$curAlt0 = var$2;
    $this.$val$nb = var$3;
    $this.$val$cc0 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$4_contains($this, $ch) {
    return $this.$val$curAlt0 ^ (!$this.$val$nb.$contains0($ch) && !$this.$val$cc0.$contains0($ch) ? 0 : 1) ? 0 : 1;
}
function jur_CharClass$1() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$028 = null;
}
function jur_CharClass$1__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$1();
    jur_CharClass$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$1__init_0($this, $this$0, var$2) {
    $this.$this$028 = $this$0;
    $this.$val$cc1 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$1_contains($this, $ch) {
    return $this.$val$cc1.$contains0($ch);
}
function jur_CharClass$2() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$cc2 = null;
    a.$this$029 = null;
}
function jur_CharClass$2__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$2();
    jur_CharClass$2__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$2__init_0($this, $this$0, var$2, var$3) {
    $this.$this$029 = $this$0;
    $this.$val$curAlt1 = var$2;
    $this.$val$cc2 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$2_contains($this, $ch) {
    return !($this.$val$curAlt1 ^ $this.$this$029.$bits.$get9($ch)) && !($this.$val$curAlt1 ^ $this.$this$029.$inverted ^ $this.$val$cc2.$contains0($ch)) ? 1 : 0;
}
function jur_CharClass$7() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz = null;
    a.$this$030 = null;
}
function jur_CharClass$7__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$7();
    jur_CharClass$7__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$7__init_0($this, $this$0, var$2) {
    $this.$this$030 = $this$0;
    $this.$val$clazz = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$7_contains($this, $ch) {
    return $this.$val$clazz.$contains0($ch);
}
var cbgssu_ScrollPane$ScrollPaneStyle = $rt_classWithoutFields();
function jur_CharClass$8() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$val$curAlt2 = 0;
    a.$this$031 = null;
}
function jur_CharClass$8__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$8();
    jur_CharClass$8__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$8__init_0($this, $this$0, var$2, var$3) {
    $this.$this$031 = $this$0;
    $this.$val$clazz0 = var$2;
    $this.$val$curAlt2 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$8_contains($this, $ch) {
    return !$this.$val$clazz0.$contains0($ch) && !($this.$val$curAlt2 ^ $this.$this$031.$bits.$get9($ch)) ? 1 : 0;
}
function jur_CharClass$5() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb0 = null;
    a.$val$cc3 = null;
    a.$this$032 = null;
}
function jur_CharClass$5__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$5();
    jur_CharClass$5__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$5__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$032 = $this$0;
    $this.$val$curAlt3 = var$2;
    $this.$val$nb0 = var$3;
    $this.$val$cc3 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$5_contains($this, $ch) {
    return $this.$val$curAlt3 ^ (!$this.$val$nb0.$contains0($ch) && !$this.$val$cc3.$contains0($ch) ? 0 : 1);
}
function jur_CharClass$6() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$033 = null;
}
function jur_CharClass$6__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$6();
    jur_CharClass$6__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$6__init_0($this, $this$0, var$2) {
    $this.$this$033 = $this$0;
    $this.$val$clazz1 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$6_contains($this, $ch) {
    return $this.$val$clazz1.$contains0($ch) ? 0 : 1;
}
var cgxgbt_TeaGraphics$FullscreenChanged = $rt_classWithoutFields(0);
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt1 = null;
}
function jur_DotSet__init_(var_0) {
    var var_1 = new jur_DotSet();
    jur_DotSet__init_0(var_1, var_0);
    return var_1;
}
function jur_DotSet__init_0($this, $lt) {
    jur_JointSet__init_0($this);
    $this.$lt1 = $lt;
}
function jur_DotSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt1.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$lt1.$isLineTerminator($high) ? (-1) : $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_DotSet_getName($this) {
    return $rt_s(1053);
}
function jur_DotSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DotSet_getType($this) {
    return (-2147483602);
}
function jur_DotSet_hasConsumed($this, $matchResult) {
    return 1;
}
function jur_CharClass$9() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz2 = null;
    a.$val$curAlt4 = 0;
    a.$this$034 = null;
}
function jur_CharClass$9__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$9();
    jur_CharClass$9__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$9__init_0($this, $this$0, var$2, var$3) {
    $this.$this$034 = $this$0;
    $this.$val$clazz2 = var$2;
    $this.$val$curAlt4 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$9_contains($this, $ch) {
    return !$this.$val$clazz2.$contains0($ch) && !($this.$val$curAlt4 ^ $this.$this$034.$bits.$get9($ch)) ? 0 : 1;
}
var jl_Character = $rt_classWithoutFields();
var jl_Character_TYPE = null;
var jl_Character_digitMapping = null;
var jl_Character_upperCaseMapping = null;
var jl_Character_lowerCaseMapping = null;
var jl_Character_classMapping = null;
var jl_Character_characterCache = null;
var jl_Character_$$metadata$$0 = null;
var jl_Character_$$metadata$$1 = null;
var jl_Character_$$metadata$$3 = null;
var jl_Character_$$metadata$$4 = null;
function jl_Character_$callClinit() {
    jl_Character_$callClinit = $rt_eraseClinit(jl_Character);
    jl_Character__clinit_();
}
function jl_Character_toString($c) {
    var var$2, var$3;
    jl_Character_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_3(var$2, var$3);
    return var$2;
}
function jl_Character_isBmpCodePoint($codePoint) {
    jl_Character_$callClinit();
    return $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
}
function jl_Character_isSupplementaryCodePoint($codePoint) {
    jl_Character_$callClinit();
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
}
function jl_Character_isHighSurrogate($ch) {
    jl_Character_$callClinit();
    return ($ch & 64512) != 55296 ? 0 : 1;
}
function jl_Character_isLowSurrogate($ch) {
    jl_Character_$callClinit();
    return ($ch & 64512) != 56320 ? 0 : 1;
}
function jl_Character_isSurrogate($ch) {
    jl_Character_$callClinit();
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
}
function jl_Character_isSurrogatePair($high, $low) {
    jl_Character_$callClinit();
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
}
function jl_Character_toCodePoint($high, $low) {
    jl_Character_$callClinit();
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
}
function jl_Character_codePointAt($a, $index) {
    jl_Character_$callClinit();
    return jl_Character_codePointAt0($a, $index, $a.data.length);
}
function jl_Character_codePointAt0($a, $index, $limit) {
    var var$4, var$5;
    jl_Character_$callClinit();
    if ($index < ($limit - 1 | 0)) {
        var$4 = $a.data;
        if (jl_Character_isHighSurrogate(var$4[$index])) {
            var$5 = $index + 1 | 0;
            if (jl_Character_isLowSurrogate(var$4[var$5]))
                return jl_Character_toCodePoint(var$4[$index], var$4[var$5]);
        }
    }
    return $a.data[$index];
}
function jl_Character_highSurrogate($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    var$2 = $codePoint - 65536 | 0;
    return (55296 | var$2 >> 10 & 1023) & 65535;
}
function jl_Character_lowSurrogate($codePoint) {
    jl_Character_$callClinit();
    return (56320 | $codePoint & 1023) & 65535;
}
function jl_Character_toLowerCase0($ch) {
    jl_Character_$callClinit();
    return jl_Character_toLowerCase($ch) & 65535;
}
function jl_Character_toLowerCase($ch) {
    jl_Character_$callClinit();
    return jl_Character_mapChar(jl_Character_getLowerCaseMapping(), $ch);
}
function jl_Character_getLowerCaseMapping() {
    jl_Character_$callClinit();
    if (jl_Character_lowerCaseMapping === null)
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_decodeCaseMapping(((jl_Character_acquireLowerCaseMapping()).value !== null ? $rt_str((jl_Character_acquireLowerCaseMapping()).value) : null));
    return jl_Character_lowerCaseMapping;
}
function jl_Character_acquireLowerCaseMapping() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$0 === null)
        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
    return jl_Character_$$metadata$$0;
}
function jl_Character_toUpperCase0($ch) {
    jl_Character_$callClinit();
    return jl_Character_toUpperCase($ch) & 65535;
}
function jl_Character_toUpperCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_mapChar(jl_Character_getUpperCaseMapping(), $codePoint);
}
function jl_Character_getUpperCaseMapping() {
    jl_Character_$callClinit();
    if (jl_Character_upperCaseMapping === null)
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_decodeCaseMapping(((jl_Character_acquireUpperCaseMapping()).value !== null ? $rt_str((jl_Character_acquireUpperCaseMapping()).value) : null));
    return jl_Character_upperCaseMapping;
}
function jl_Character_acquireUpperCaseMapping() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$1 === null)
        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
    return jl_Character_$$metadata$$1;
}
function jl_Character_mapChar($table, $codePoint) {
    var $index, var$4;
    jl_Character_$callClinit();
    $index = jl_Character_binarySearchTable($table, $codePoint);
    if ($index >= 0) {
        var$4 = $table.data;
        if ($index < (var$4.length / 2 | 0))
            return $codePoint + var$4[($index * 2 | 0) + 1 | 0] | 0;
    }
    return 0;
}
function jl_Character_binarySearchTable($data, $key) {
    var var$3, $l, $u, $i, $e, var$8;
    jl_Character_$callClinit();
    var$3 = $data.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while (true) {
        $i = ($l + $u | 0) / 2 | 0;
        $e = var$3[$i * 2 | 0];
        var$8 = $rt_compare($e, $key);
        if (!var$8)
            break;
        if (var$8 <= 0) {
            $l = $i + 1 | 0;
            if ($l > $u)
                return $i;
        } else {
            $u = $i - 1 | 0;
            if ($u < $l)
                return $u;
        }
    }
    return $i;
}
function jl_Character_digit($ch, $radix) {
    jl_Character_$callClinit();
    return jl_Character_digit0($ch, $radix);
}
function jl_Character_digit0($codePoint, $radix) {
    var $d;
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        $d = jl_Character_getNumericValue0($codePoint);
        if ($d >= $radix)
            $d = (-1);
        return $d;
    }
    return (-1);
}
function jl_Character_getNumericValue($ch) {
    jl_Character_$callClinit();
    return jl_Character_getNumericValue0($ch);
}
function jl_Character_getNumericValue0($codePoint) {
    var $digitMapping, var$3, $l, $u, $idx, var$7, $val, var$9;
    jl_Character_$callClinit();
    $digitMapping = jl_Character_getDigitMapping();
    var$3 = $digitMapping.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$7 = $idx * 2 | 0;
        $val = var$3[var$7];
        var$9 = $rt_compare($codePoint, $val);
        if (var$9 > 0)
            $l = $idx + 1 | 0;
        else {
            if (var$9 >= 0)
                return var$3[var$7 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
}
function jl_Character_forDigit($digit, $radix) {
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
}
function jl_Character_isDigit($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 9 ? 0 : 1;
}
function jl_Character_getDigitMapping() {
    jl_Character_$callClinit();
    if (jl_Character_digitMapping === null)
        jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntPairsDiff(((jl_Character_obtainDigitMapping()).value !== null ? $rt_str((jl_Character_obtainDigitMapping()).value) : null));
    return jl_Character_digitMapping;
}
function jl_Character_obtainDigitMapping() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$3 === null)
        jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
    return jl_Character_$$metadata$$3;
}
function jl_Character_getClasses() {
    jl_Character_$callClinit();
    if (jl_Character_classMapping === null)
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle(((jl_Character_obtainClasses()).value !== null ? $rt_str((jl_Character_obtainClasses()).value) : null));
    return jl_Character_classMapping;
}
function jl_Character_obtainClasses() {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$4 === null)
        jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
    return jl_Character_$$metadata$$4;
}
function jl_Character_toChars($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    if ($codePoint < 65536) {
        var$2 = $rt_createCharArray(1);
        var$2.data[0] = $codePoint & 65535;
        return var$2;
    }
    return $rt_createCharArrayFromData([jl_Character_highSurrogate($codePoint), jl_Character_lowSurrogate($codePoint)]);
}
function jl_Character_isISOControl($codePoint) {
    var var$2;
    jl_Character_$callClinit();
    a: {
        b: {
            if (!($codePoint >= 0 && $codePoint <= 31)) {
                if ($codePoint < 127)
                    break b;
                if ($codePoint > 159)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
}
function jl_Character_getType0($c) {
    jl_Character_$callClinit();
    return jl_Character_getType($c);
}
function jl_Character_getType($codePoint) {
    var $classes, var$3, $l, $u, $i, $range;
    jl_Character_$callClinit();
    if (jl_Character_isBmpCodePoint($codePoint) && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    $classes = jl_Character_getClasses();
    var$3 = $classes.data;
    $l = 0;
    $u = var$3.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = var$3[$i];
        if ($codePoint >= $range.$end2)
            $l = $i + 1 | 0;
        else {
            if ($codePoint >= $range.$start6)
                return $range.$data1.data[$codePoint - $range.$start6 | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
}
function jl_Character_isLowerCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 2 ? 0 : 1;
}
function jl_Character_isUpperCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 1 ? 0 : 1;
}
function jl_Character_isTitleCase($codePoint) {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 3 ? 0 : 1;
}
function jl_Character_isDefined($codePoint) {
    jl_Character_$callClinit();
    return !jl_Character_getType($codePoint) ? 0 : 1;
}
function jl_Character_isLetter($codePoint) {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isLetterOrDigit($ch) {
    jl_Character_$callClinit();
    return jl_Character_isLetterOrDigit0($ch);
}
function jl_Character_isLetterOrDigit0($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
}
function jl_Character_isJavaIdentifierStart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
            case 23:
            case 26:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isJavaIdentifierPart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
            case 26:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierStart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isUnicodeIdentifierPart($codePoint) {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
}
function jl_Character_isIdentifierIgnorable($codePoint) {
    jl_Character_$callClinit();
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
}
function jl_Character_isSpaceChar($codePoint) {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
}
function jl_Character_isWhitespace($ch) {
    jl_Character_$callClinit();
    return jl_Character_isWhitespace0($ch);
}
function jl_Character_isWhitespace0($codePoint) {
    jl_Character_$callClinit();
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
}
function jl_Character__clinit_() {
    jl_Character_TYPE = $rt_cls($rt_charcls());
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
}
function jl_Character_acquireLowerCaseMapping$$create() {
    return {"value" : ">W  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
    + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 o$#mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
    + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%# #%"
    + "# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# -%# +%# #%# Y%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# *J#F#b o@5F#b Jo=N#f "};
}
function jl_Character_acquireUpperCaseMapping$$create() {
    return {"value" : "<Y  ,%H#U :#>b# v
    + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3# #:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# "
    + "#\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d1 (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
    + "\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# +X%# +\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#A1 1A1 1A1 1A1 1A1 3A# #A# #A# #A% /A1 16\'%g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'# #\'# #\'# -"
    + "\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
    + " #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'- #\'% )\'# #\'S )\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#<% Vlm%:# RH#H#b o@5H#b No=P#f "};
}
function jl_Character_obtainDigitMapping$$create() {
    return {"value" : "&C*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%BhG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%!dG%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%*0EG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%28UG%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%"
    + "%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%>&#G%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
}
function jl_Character_obtainClasses$$create() {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A\'G)FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"

    + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F)A$J+Y(^+G*^*Y# G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
    + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*A(BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0G."
    + "H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^gA:^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?67676767Y"
    + "&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^-A%-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^EA-F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#A&!# # #!#!#A9E$!#&E##F(\'F"
    + "$\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F\'A#F\'A#"
    + "F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#Aeb&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+b G% L@ FK G#5A#F#AmG$F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+"
    + "A\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&b ,# FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+AWF<A#G$I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W$ F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF("
    + " F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+b 7! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0b K` b&(* b Z\'#b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q+ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AK&A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =*!GOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) "
    + "B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b G, F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^#Apb=5& A"
    + "-^/A#^.A$^*A(^O ^(A)^/A%^*A(^*A(b=4#  ^XAFJ+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&b @Q b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
}
function jur_CICharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$ch2 = 0;
    a.$supplement = 0;
}
function jur_CICharSet__init_(var_0) {
    var var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_CICharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$ch2 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
}
function jur_CICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch2 != $testString.$charAt($strIndex) && $this.$supplement != $testString.$charAt($strIndex) ? (-1) : 1;
}
function jur_CICharSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$ch2;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(1054)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_SupplCharSet() {
    var a = this; jur_LeafSet.call(a);
    a.$high = 0;
    a.$low0 = 0;
    a.$ch3 = 0;
}
function jur_SupplCharSet__init_(var_0) {
    var var_1 = new jur_SupplCharSet();
    jur_SupplCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_SupplCharSet__init_0($this, $ch) {
    var $chUTF16, var$3;
    jur_LeafSet__init_0($this);
    $this.$charCount = 2;
    $this.$ch3 = $ch;
    $chUTF16 = jl_Character_toChars($ch);
    var$3 = $chUTF16.data;
    $this.$high = var$3[0];
    $this.$low0 = var$3[1];
}
function jur_SupplCharSet_accepts($this, $strIndex, $testString) {
    var var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$high == $high && $this.$low0 == $low ? 2 : (-1);
}
function jur_SupplCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while ($strIndex < $strLength) {
        var$6 = $testStr.$indexOf($this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = $testStr.$charAt($strIndex);
        if ($this.$low0 == $ch && $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
}
function jur_SupplCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf1($this.$low0, $lastIndex);
            var$7 = var$6 + (-1) | 0;
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$high == $testStr.$charAt(var$7) && $this.$next.$matches(var$7 + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_SupplCharSet_getName($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$high;
    var$2 = $this.$low0;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append0(var$3, var$1), var$2);
    return jl_StringBuilder_toString(var$3);
}
function jur_SupplCharSet_getCodePoint($this) {
    return $this.$ch3;
}
function jur_SupplCharSet_first($this, $set) {
    if ($set instanceof jur_SupplCharSet)
        return $set.$getCodePoint() != $this.$ch3 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains0($this.$ch3);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
}
var otjc_JSNumber = $rt_classWithoutFields();
function otjc_JSNumber_byteValue$static($this) {
    return $this;
}
var cbgssa_ColorAction = $rt_classWithoutFields(cbgssa_TemporalAction);
var jl_StrictMath = $rt_classWithoutFields();
function jl_StrictMath_log($a) {
    return jl_Math_log($a);
}
function jl_StrictMath_sqrt($a) {
    return jl_Math_sqrt($a);
}
var cbgggm_NodeAnimation = $rt_classWithoutFields();
var cbgu_Queue = $rt_classWithoutFields();
var cbgm_Ellipse = $rt_classWithoutFields();
var cbgg_PixmapEmu$2 = $rt_classWithoutFields();
var cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType = null;
function cbgg_PixmapEmu$2_$callClinit() {
    cbgg_PixmapEmu$2_$callClinit = $rt_eraseClinit(cbgg_PixmapEmu$2);
    cbgg_PixmapEmu$2__clinit_();
}
function cbgg_PixmapEmu$2__clinit_() {
    cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType = $rt_createIntArray((cbgg_PixmapEmu$DrawType_values()).data.length);
    cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType.data[jl_Enum_ordinal(cbgg_PixmapEmu$DrawType_FILL)] = 1;
    cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType.data[jl_Enum_ordinal(cbgg_PixmapEmu$DrawType_STROKE)] = 2;
}
function cbgu_IntMap() {
    var a = this; jl_Object.call(a);
    a.$size6 = 0;
    a.$keyTable0 = null;
    a.$valueTable = null;
    a.$zeroValue = null;
    a.$hasZeroValue0 = 0;
    a.$loadFactor2 = 0.0;
    a.$threshold2 = 0;
    a.$shift1 = 0;
    a.$mask0 = 0;
}
function cbgu_IntMap__init_(var_0) {
    var var_1 = new cbgu_IntMap();
    cbgu_IntMap__init_0(var_1, var_0);
    return var_1;
}
function cbgu_IntMap__init_1(var_0, var_1) {
    var var_2 = new cbgu_IntMap();
    cbgu_IntMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntMap__init_0($this, $initialCapacity) {
    cbgu_IntMap__init_2($this, $initialCapacity, 0.800000011920929);
}
function cbgu_IntMap__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor2 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold2 = $tableSize * $loadFactor | 0;
        $this.$mask0 = $tableSize - 1 | 0;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask0));
        $this.$keyTable0 = $rt_createIntArray($tableSize);
        $this.$valueTable = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(501))).$append19($loadFactor)).$toString()));
}
function cbgu_IntMap_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift1));
}
function cbgu_IntMap_locateKey($this, $key) {
    var $keyTable, $i, $other;
    $keyTable = $this.$keyTable0;
    $i = $this.$place($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask0;
    }
    return $i;
}
function cbgu_IntMap_put($this, $key, $value) {
    var $oldValue, $i, var$5;
    if (!$key) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue0) {
            $this.$hasZeroValue0 = 1;
            $this.$size6 = $this.$size6 + 1 | 0;
        }
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable.data[$i];
        $this.$valueTable.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable0.data[var$5] = $key;
    $this.$valueTable.data[var$5] = $value;
    var$5 = $this.$size6 + 1 | 0;
    $this.$size6 = var$5;
    if (var$5 >= $this.$threshold2)
        cbgu_IntMap_resize($this, $this.$keyTable0.data.length << 1);
    return null;
}
function cbgu_IntMap_putResize($this, $key, $value) {
    var $keyTable, $i, var$5;
    $keyTable = $this.$keyTable0;
    $i = $this.$place($key);
    while (true) {
        var$5 = $keyTable.data;
        if (!var$5[$i])
            break;
        $i = ($i + 1 | 0) & $this.$mask0;
    }
    var$5[$i] = $key;
    $this.$valueTable.data[$i] = $value;
}
function cbgu_IntMap_get($this, $key) {
    var $i;
    if (!$key)
        return !$this.$hasZeroValue0 ? null : $this.$zeroValue;
    $i = cbgu_IntMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable.data[$i];
}
function cbgu_IntMap_remove($this, $key) {
    var $oldValue, $i, $keyTable, $valueTable, var$6, $mask, $next, var$9, var$10, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue0)
            return null;
        $this.$hasZeroValue0 = 0;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$size6 = $this.$size6 - 1 | 0;
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable0;
    $valueTable = $this.$valueTable;
    var$6 = $valueTable.data;
    $oldValue = var$6[$i];
    $mask = $this.$mask0;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        var$10 = var$9[$next];
        if (!var$10)
            break;
        $placement = $this.$place(var$10);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = var$10;
            var$6[$i] = var$6[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = 0;
    var$6[$i] = null;
    $this.$size6 = $this.$size6 - 1 | 0;
    return $oldValue;
}
function cbgu_IntMap_containsValue($this, $value, $identity) {
    var $valueTable, var$4, $keyTable, $i;
    a: {
        $valueTable = $this.$valueTable;
        if ($value === null) {
            if ($this.$hasZeroValue0 && $this.$zeroValue === null)
                return 1;
            var$4 = $valueTable.data;
            $keyTable = $this.$keyTable0;
            $i = var$4.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if ($keyTable.data[$i] && var$4[$i] === null)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($identity) {
            if ($value === $this.$zeroValue)
                return 1;
            var$4 = $valueTable.data;
            $i = var$4.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if (var$4[$i] === $value)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($this.$hasZeroValue0 && $value.$equals($this.$zeroValue))
            return 1;
        var$4 = $valueTable.data;
        $i = var$4.length - 1 | 0;
        while (true) {
            if ($i < 0)
                break a;
            if ($value.$equals(var$4[$i]))
                return 1;
            $i = $i + (-1) | 0;
        }
    }
    return 0;
}
function cbgu_IntMap_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable0.data.length;
        $this.$threshold2 = $newSize * $this.$loadFactor2 | 0;
        $this.$mask0 = $newSize - 1 | 0;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask0));
        $oldKeyTable = $this.$keyTable0;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable0 = $rt_createIntArray($newSize);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize);
        if ($this.$size6 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    cbgu_IntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
var jnci_Iso8859Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
function jnci_Iso8859Encoder__init_(var_0) {
    var var_1 = new jnci_Iso8859Encoder();
    jnci_Iso8859Encoder__init_0(var_1, var_0);
    return var_1;
}
function jnci_Iso8859Encoder__init_0($this, $cs) {
    jnci_BufferedEncoder__init_($this, $cs, 1.0, 1.0);
}
function jnci_Iso8859Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
    var $result, var$9, var$10, $c, $next, var$13;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $c = var$10[$inPos];
            if (jl_Character_isHighSurrogate($c)) {
                if (var$9 == $inSize) {
                    if ($controller.$hasMoreInput(2)) {
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $next = var$10[var$9];
                if (!jl_Character_isLowSurrogate($next)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(2);
                break a;
            }
            if (jl_Character_isLowSurrogate($c))
                $result = jnc_CoderResult_malformedForLength(1);
            if ($c >= 256) {
                var$9 = var$9 + (-1) | 0;
                $result = jnc_CoderResult_unmappableForLength(1);
                break a;
            }
            var$10 = $outArray.data;
            var$13 = $outPos + 1 | 0;
            var$10[$outPos] = $c << 24 >> 24;
            $inPos = var$9;
            $outPos = var$13;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
}
function cbgm_Quaternion() {
    var a = this; jl_Object.call(a);
    a.$x4 = 0.0;
    a.$y4 = 0.0;
    a.$z1 = 0.0;
    a.$w0 = 0.0;
}
var cbgm_Quaternion_tmp1 = null;
var cbgm_Quaternion_tmp2 = null;
function cbgm_Quaternion_$callClinit() {
    cbgm_Quaternion_$callClinit = $rt_eraseClinit(cbgm_Quaternion);
    cbgm_Quaternion__clinit_();
}
function cbgm_Quaternion__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Quaternion();
    cbgm_Quaternion__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Quaternion__init_() {
    var var_0 = new cbgm_Quaternion();
    cbgm_Quaternion__init_2(var_0);
    return var_0;
}
function cbgm_Quaternion__init_1($this, $x, $y, $z, $w) {
    cbgm_Quaternion_$callClinit();
    jl_Object__init_0($this);
    $this.$set8($x, $y, $z, $w);
}
function cbgm_Quaternion__init_2($this) {
    cbgm_Quaternion_$callClinit();
    jl_Object__init_0($this);
    $this.$idt0();
}
function cbgm_Quaternion_set($this, $x, $y, $z, $w) {
    $this.$x4 = $x;
    $this.$y4 = $y;
    $this.$z1 = $z;
    $this.$w0 = $w;
    return $this;
}
function cbgm_Quaternion_idt($this) {
    return $this.$set8(0.0, 0.0, 0.0, 1.0);
}
function cbgm_Quaternion__clinit_() {
    cbgm_Quaternion_tmp1 = cbgm_Quaternion__init_0(0.0, 0.0, 0.0, 0.0);
    cbgm_Quaternion_tmp2 = cbgm_Quaternion__init_0(0.0, 0.0, 0.0, 0.0);
}
var cbgggpv_GradientColorValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
var cbgggpv_GradientColorValue_temp = null;
function cbgggpv_GradientColorValue_$callClinit() {
    cbgggpv_GradientColorValue_$callClinit = $rt_eraseClinit(cbgggpv_GradientColorValue);
    cbgggpv_GradientColorValue__clinit_();
}
function cbgggpv_GradientColorValue__clinit_() {
    cbgggpv_GradientColorValue_temp = $rt_createFloatArray(3);
}
var cbgggpi_RegionInfluencer$Animated = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
function cgtrd_CauchyDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha9 = 0.0;
    a.$gamma1 = 0.0;
}
function cgtrd_CauchyDistribution__init_0(var_0, var_1, var_2) {
    var var_3 = new cgtrd_CauchyDistribution();
    cgtrd_CauchyDistribution__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_CauchyDistribution__init_($this, $generator, $alpha, $gamma) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $gamma, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1055)));
}
function cgtrd_CauchyDistribution_getMedian($this) {
    return $this.$alpha9;
}
function cgtrd_CauchyDistribution_setParameters($this, $a, $b, $c) {
    if (!($rt_globals.isNaN($a) ? 1 : 0) && $b > 0.0) {
        $this.$alpha9 = $a;
        $this.$gamma1 = $b;
        return 1;
    }
    return 0;
}
function cgtrd_CauchyDistribution_nextDouble($this) {
    return cgtrd_CauchyDistribution_sample($this.$generator, $this.$alpha9, $this.$gamma1);
}
function cgtrd_CauchyDistribution_sample($generator, $alpha, $gamma) {
    var $bits;
    $bits = $generator.$nextLong();
    return $alpha + $gamma * cgtd_TrigTools_tanSmootherTurns(cgtd_BitConversion_longBitsToDouble(Long_or(Long_shl(Long_sub(Long_fromInt(1021), Long_fromInt(cgtd_BitConversion_countLeadingZeros($bits))), 52), Long_and($bits, Long_create(4294967295, 1048575)))) - 0.25);
}
var jnc_StandardCharsets = $rt_classWithoutFields();
var jnc_StandardCharsets_UTF_8 = null;
var jnc_StandardCharsets_US_ASCII = null;
var jnc_StandardCharsets_ISO_8859_1 = null;
var jnc_StandardCharsets_UTF_16 = null;
var jnc_StandardCharsets_UTF_16BE = null;
var jnc_StandardCharsets_UTF_16LE = null;
function jnc_StandardCharsets_$callClinit() {
    jnc_StandardCharsets_$callClinit = $rt_eraseClinit(jnc_StandardCharsets);
    jnc_StandardCharsets__clinit_();
}
function jnc_StandardCharsets__clinit_() {
    jnci_UTF8Charset_$callClinit();
    jnc_StandardCharsets_UTF_8 = jnci_UTF8Charset_INSTANCE;
    jnc_StandardCharsets_US_ASCII = jnci_AsciiCharset__init_();
    jnc_StandardCharsets_ISO_8859_1 = jnci_Iso8859Charset__init_();
    jnc_StandardCharsets_UTF_16 = jnci_UTF16Charset__init_($rt_s(1056), 1, 0);
    jnc_StandardCharsets_UTF_16BE = jnci_UTF16Charset__init_($rt_s(1057), 0, 0);
    jnc_StandardCharsets_UTF_16LE = jnci_UTF16Charset__init_($rt_s(1058), 0, 1);
}
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$035 = null;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaMirrored$1();
    jur_AbstractCharClass$LazyJavaMirrored$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaMirrored$1__init_0($this, $this$0) {
    $this.$this$035 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaMirrored$1_contains($this, $ch) {
    return 0;
}
var jn_ShortBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
function jn_ShortBufferOverByteBufferLittleEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_ShortBufferOverByteBufferLittleEndian();
    jn_ShortBufferOverByteBufferLittleEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_ShortBufferOverByteBufferLittleEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_ShortBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_ShortBufferOverByteBufferLittleEndian_getElement($this, $index) {
    var var$2, var$3, var$4, $value;
    var$2 = $this.$byteByffer1.$array0.data;
    var$3 = $this.$start7;
    var$4 = $index * 2 | 0;
    $value = var$2[var$3 + var$4 | 0] & 255 | ($this.$byteByffer1.$array0.data[($this.$start7 + var$4 | 0) + 1 | 0] & 255) << 8;
    return $value << 16 >> 16;
}
function jn_ShortBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array0.data;
    var$4 = $this.$start7;
    var$5 = $index * 2 | 0;
    var$3[var$4 + var$5 | 0] = $value << 24 >> 24;
    $this.$byteByffer1.$array0.data[($this.$start7 + var$5 | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
}
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
function jur_UEOLSet__init_(var_0) {
    var var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter2 = $counter;
}
function jur_UEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter2, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && $testString.$charAt($strIndex) == 10) {
        $matchResult.$setConsumed($this.$consCounter2, 1);
        return $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
}
function jur_UEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter2) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter2, (-1));
    return $res;
}
function jur_UEOLSet_getName($this) {
    return $rt_s(493);
}
function cgt_RaisedNormalScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist9 = null;
    a.$power2 = 0.0;
    a.$batch14 = null;
    a.$renderer13 = null;
    a.$amounts13 = null;
    a.$iterations13 = Long_ZERO;
    a.$font15 = null;
    a.$viewport13 = null;
    a.$mainGame13 = null;
}
function cgt_RaisedNormalScreen__init_(var_0) {
    var var_1 = new cgt_RaisedNormalScreen();
    cgt_RaisedNormalScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_RaisedNormalScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font15 = $this.$mainGame13.$font0;
    a: {
        try {
            var$1 = new cgtrd_NormalDistribution;
            var$2 = $this.$mainGame13.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_NormalDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist9 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist9 = cgtrd_NormalDistribution__init_0($this.$mainGame13.$random0, 0.0, 1.0);
    }
    $this.$power2 = Long_toNumber(jl_Math_round0(cgt_DistributorDemo_c));
    $this.$batch14 = $this.$mainGame13.$batch0;
    $this.$viewport13 = cbguv_ScreenViewport__init_();
    $this.$renderer13 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts13, Long_ZERO);
    $this.$iterations13 = Long_ZERO;
}
function cgt_RaisedNormalScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$power2 = 1.0;
    $this.$amounts13 = $rt_createLongArray(512);
    $this.$iterations13 = Long_ZERO;
    $this.$mainGame13 = $main;
}
function cgt_RaisedNormalScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame13.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame13.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport13.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts13, Long_ZERO);
        $this.$iterations13 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts13, Long_ZERO);
        $this.$iterations13 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts13, Long_ZERO);
        $this.$iterations13 = Long_ZERO;
        $this.$power2 = Long_toNumber(jl_Math_round0(cgt_DistributorDemo_c));
    }
    $this.$iterations13 = Long_add($this.$iterations13, Long_fromInt(1));
    var$3 = $this.$dist9;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = jl_Math_pow($this.$dist9.$nextDouble(), $this.$power2) * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts13.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer13.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer13.$color($color);
        var$3 = $this.$renderer13;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer13.$color($color);
        $this.$renderer13.$vertex(var$9, Long_toNumber(Long_div($this.$amounts13.data[$x], $this.$iterations13)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer13.$color((-6.221923240859403E37));
        var$3 = $this.$renderer13;
        var$9 = $j;
        var$3.$vertex(0.0, var$9, 0.0);
        $this.$renderer13.$color((-6.221923240859403E37));
        $this.$renderer13.$vertex(10.0, var$9, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer13.$end();
    $this.$batch14.$setProjectionMatrix($camera.$combined);
    $this.$batch14.$begin0();
    var$3 = $this.$font15;
    var$11 = $this.$batch14;
    var$6 = $rt_createArray(jl_Object, 5);
    var$12 = var$6.data;
    var$13 = cgt_DistributorDemo_a;
    var$12[0] = jl_Double_valueOf(var$13);
    var$12[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$12[2] = jl_Double_valueOf(cgt_DistributorDemo_c);
    var$12[3] = jl_Double_valueOf($this.$dist9.$getMedian());
    var$12[4] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$11, cgt_Stringf_format($rt_s(1059), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font15.$draw($this.$batch14, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font15.$draw($this.$batch14, $rt_s(1060), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch14.$end();
}
function cgt_RaisedNormalScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport13.$update0($width, $height, 1);
    $this.$viewport13.$apply(1);
}
function cgxgbtp_AssetType() {
    jl_Enum.call(this);
    this.$code = null;
}
var cgxgbtp_AssetType_Image = null;
var cgxgbtp_AssetType_Audio = null;
var cgxgbtp_AssetType_Text = null;
var cgxgbtp_AssetType_Binary = null;
var cgxgbtp_AssetType_Directory = null;
var cgxgbtp_AssetType_$VALUES = null;
function cgxgbtp_AssetType_$callClinit() {
    cgxgbtp_AssetType_$callClinit = $rt_eraseClinit(cgxgbtp_AssetType);
    cgxgbtp_AssetType__clinit_();
}
function cgxgbtp_AssetType__init_(var_0, var_1, var_2) {
    var var_3 = new cgxgbtp_AssetType();
    cgxgbtp_AssetType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgxgbtp_AssetType_values() {
    cgxgbtp_AssetType_$callClinit();
    return cgxgbtp_AssetType_$VALUES.$clone();
}
function cgxgbtp_AssetType__init_0($this, var$1, var$2, $code) {
    cgxgbtp_AssetType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$code = $code;
}
function cgxgbtp_AssetType__clinit_() {
    cgxgbtp_AssetType_Image = cgxgbtp_AssetType__init_($rt_s(1061), 0, $rt_s(268));
    cgxgbtp_AssetType_Audio = cgxgbtp_AssetType__init_($rt_s(1062), 1, $rt_s(270));
    cgxgbtp_AssetType_Text = cgxgbtp_AssetType__init_($rt_s(1063), 2, $rt_s(1064));
    cgxgbtp_AssetType_Binary = cgxgbtp_AssetType__init_($rt_s(1065), 3, $rt_s(269));
    cgxgbtp_AssetType_Directory = cgxgbtp_AssetType__init_($rt_s(1066), 4, $rt_s(90));
    cgxgbtp_AssetType_$VALUES = $rt_createArrayFromData(cgxgbtp_AssetType, [cgxgbtp_AssetType_Image, cgxgbtp_AssetType_Audio, cgxgbtp_AssetType_Text, cgxgbtp_AssetType_Binary, cgxgbtp_AssetType_Directory]);
}
var cbgssu_ActorGestureListener$2 = $rt_classWithoutFields();
var cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null;
function cbgssu_ActorGestureListener$2_$callClinit() {
    cbgssu_ActorGestureListener$2_$callClinit = $rt_eraseClinit(cbgssu_ActorGestureListener$2);
    cbgssu_ActorGestureListener$2__clinit_();
}
function cbgssu_ActorGestureListener$2__clinit_() {
    cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = $rt_createIntArray((cbgss_InputEvent$Type_values()).data.length);
    cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_touchDown)] = 1;
    cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_touchUp)] = 2;
    cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type.data[jl_Enum_ordinal(cbgss_InputEvent$Type_touchDragged)] = 3;
}
var cbgssa_RemoveAction = $rt_classWithoutFields(cbgss_Action);
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch4 = 0;
}
function jur_UCICharSet__init_(var_0) {
    var var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UCICharSet__init_0($this, $ch) {
    jur_LeafSet__init_0($this);
    $this.$ch4 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
}
function jur_UCICharSet_accepts($this, $strIndex, $testString) {
    return $this.$ch4 != jl_Character_toLowerCase0(jl_Character_toUpperCase0($testString.$charAt($strIndex))) ? (-1) : 1;
}
function jur_UCICharSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$ch4;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(425)), var$1);
    return jl_StringBuilder_toString(var$2);
}
var cbgi_GestureDetector$GestureAdapter = $rt_classWithoutFields();
var cbgssu_ActorGestureListener$1 = $rt_classWithoutFields(cbgi_GestureDetector$GestureAdapter);
var jnci_Iso8859Charset = $rt_classWithoutFields(jnc_Charset);
function jnci_Iso8859Charset__init_() {
    var var_0 = new jnci_Iso8859Charset();
    jnci_Iso8859Charset__init_0(var_0);
    return var_0;
}
function jnci_Iso8859Charset__init_0($this) {
    jnc_Charset__init_($this, $rt_s(1067), $rt_createArray(jl_String, 0));
}
function jnci_Iso8859Charset_newEncoder($this) {
    return jnci_Iso8859Encoder__init_($this);
}
function cbgg_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
var cbgg_Texture$TextureWrap_MirroredRepeat = null;
var cbgg_Texture$TextureWrap_ClampToEdge = null;
var cbgg_Texture$TextureWrap_Repeat = null;
var cbgg_Texture$TextureWrap_$VALUES = null;
function cbgg_Texture$TextureWrap_$callClinit() {
    cbgg_Texture$TextureWrap_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureWrap);
    cbgg_Texture$TextureWrap__clinit_();
}
function cbgg_Texture$TextureWrap__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture$TextureWrap();
    cbgg_Texture$TextureWrap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture$TextureWrap__init_0($this, var$1, var$2, $glEnum) {
    cbgg_Texture$TextureWrap_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum = $glEnum;
}
function cbgg_Texture$TextureWrap_getGLEnum($this) {
    return $this.$glEnum;
}
function cbgg_Texture$TextureWrap__clinit_() {
    cbgg_Texture$TextureWrap_MirroredRepeat = cbgg_Texture$TextureWrap__init_($rt_s(1068), 0, 33648);
    cbgg_Texture$TextureWrap_ClampToEdge = cbgg_Texture$TextureWrap__init_($rt_s(1069), 1, 33071);
    cbgg_Texture$TextureWrap_Repeat = cbgg_Texture$TextureWrap__init_($rt_s(1070), 2, 10497);
    cbgg_Texture$TextureWrap_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureWrap, [cbgg_Texture$TextureWrap_MirroredRepeat, cbgg_Texture$TextureWrap_ClampToEdge, cbgg_Texture$TextureWrap_Repeat]);
}
var cbgssu_Slider = $rt_classWithoutFields(cbgssu_ProgressBar);
function jur_CompositeGroupQuantifierSet() {
    var a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier0 = null;
    a.$setCounter = 0;
}
function jur_CompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
    $this.$setCounter = $setCounter;
}
function jur_CompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, var$5, var$6, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max2())
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    var$6 = $enterCounter + 1 | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $nextIndex;
    }
    var$5 = $this.$setCounter;
    var$6 = var$6 + (-1) | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    if (var$6 >= $this.$quantifier0.$min3())
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $matchResult.$setEnterCounter($this.$setCounter, 0);
    return (-1);
}
function jur_CompositeGroupQuantifierSet_getName($this) {
    return $this.$quantifier0.$toString();
}
var jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
function jur_RelCompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_RelCompositeGroupQuantifierSet();
    jur_RelCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_RelCompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
}
function jur_RelCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $enterCounter, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier0.$max2()) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < $this.$quantifier0.$min3()) {
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $matchResult.$setEnterCounter($this.$setCounter, 0);
            return $nextIndex;
        }
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
}
var cgtd_BitConversion = $rt_classWithoutFields();
function cgtd_BitConversion_doubleToLongBits($value) {
    return $rt_doubleToLongBits($value);
}
function cgtd_BitConversion_longBitsToDouble($bits) {
    return $rt_longBitsToDouble($bits);
}
function cgtd_BitConversion_intBitsToFloat($bits) {
    return $rt_intBitsToFloat($bits);
}
function cgtd_BitConversion_imul($left, $right) {
    return $rt_imul($left, $right);
}
function cgtd_BitConversion_countLeadingZeros($n) {
    return jl_Long_numberOfLeadingZeros($n);
}
function ju_ArrayList() {
    var a = this; ju_AbstractList.call(a);
    a.$array6 = null;
    a.$size7 = 0;
}
function ju_ArrayList__init_() {
    var var_0 = new ju_ArrayList();
    ju_ArrayList__init_0(var_0);
    return var_0;
}
function ju_ArrayList__init_1(var_0) {
    var var_1 = new ju_ArrayList();
    ju_ArrayList__init_2(var_1, var_0);
    return var_1;
}
function ju_ArrayList__init_0($this) {
    ju_ArrayList__init_2($this, 10);
}
function ju_ArrayList__init_2($this, $initialCapacity) {
    ju_AbstractList__init_($this);
    $this.$array6 = $rt_createArray(jl_Object, $initialCapacity);
}
function ju_ArrayList_ensureCapacity($this, $minCapacity) {
    var $newLength;
    if ($this.$array6.data.length < $minCapacity) {
        $newLength = $this.$array6.data.length >= 1073741823 ? 2147483647 : jl_Math_max($minCapacity, jl_Math_max($this.$array6.data.length * 2 | 0, 5));
        $this.$array6 = ju_Arrays_copyOf1($this.$array6, $newLength);
    }
}
function ju_ArrayList_get($this, $index) {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array6.data[$index];
}
function ju_ArrayList_size($this) {
    return $this.$size7;
}
function ju_ArrayList_add($this, $element) {
    var var$2, var$3;
    $this.$ensureCapacity($this.$size7 + 1 | 0);
    var$2 = $this.$array6.data;
    var$3 = $this.$size7;
    $this.$size7 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount1 = $this.$modCount1 + 1 | 0;
    return 1;
}
function ju_ArrayList_add0($this, $index, $element) {
    var $i;
    ju_ArrayList_checkIndexForAdd($this, $index);
    $this.$ensureCapacity($this.$size7 + 1 | 0);
    $i = $this.$size7;
    while ($i > $index) {
        $this.$array6.data[$i] = $this.$array6.data[$i - 1 | 0];
        $i = $i + (-1) | 0;
    }
    $this.$array6.data[$index] = $element;
    $this.$size7 = $this.$size7 + 1 | 0;
    $this.$modCount1 = $this.$modCount1 + 1 | 0;
}
function ju_ArrayList_remove($this, $i) {
    var $old, var$3, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    $old = $this.$array6.data[$i];
    $this.$size7 = $this.$size7 - 1 | 0;
    while ($i < $this.$size7) {
        var$3 = $this.$array6.data;
        var$4 = $this.$array6.data;
        $i_0 = $i + 1 | 0;
        var$3[$i] = var$4[$i_0];
        $i = $i_0;
    }
    $this.$array6.data[$this.$size7] = null;
    $this.$modCount1 = $this.$modCount1 + 1 | 0;
    return $old;
}
function ju_ArrayList_checkIndex($this, $index) {
    if ($index >= 0 && $index < $this.$size7)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function ju_ArrayList_checkIndexForAdd($this, $index) {
    if ($index >= 0 && $index <= $this.$size7)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
}
function cgxgbt_TeaApplication$4() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$024 = null;
}
function cgxgbt_TeaApplication$4__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$4();
    cgxgbt_TeaApplication$4__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$4__init_0($this, $this$0) {
    $this.$this$024 = $this$0;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbt_TeaApplication$4_onSuccess($this, $url, $result) {
    var $soundManager;
    $soundManager = cgxgbts_TeaSoundManager__init_();
    $soundManager.$setup($this.$this$024.$hostPageBaseURL, cgxgbt_TeaApplication$4$1__init_($this, $soundManager));
    return 1;
}
var jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException);
function jl_IllegalMonitorStateException__init_() {
    var var_0 = new jl_IllegalMonitorStateException();
    jl_IllegalMonitorStateException__init_0(var_0);
    return var_0;
}
function jl_IllegalMonitorStateException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
function cgxgbt_TeaApplication$5() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$036 = null;
}
function cgxgbt_TeaApplication$5__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$5();
    cgxgbt_TeaApplication$5__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$5__init_0($this, $this$0) {
    $this.$this$036 = $this$0;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbt_TeaApplication$5_onSuccess($this, $url, $result) {
    return 1;
}
function cgxgbt_TeaApplication$5_onFailure($this, $url) {}
function cgxgbt_TeaApplication$6() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$037 = null;
}
function cgxgbt_TeaApplication$6__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$6();
    cgxgbt_TeaApplication$6__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$6__init_0($this, $this$0) {
    $this.$this$037 = $this$0;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbt_TeaApplication$6_onSuccess($this, $url, $result) {
    return 1;
}
function cgxgbt_TeaApplication$6_onFailure($this, $url) {}
function cgxgbt_TeaApplication$7() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$038 = null;
}
function cgxgbt_TeaApplication$7__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$7();
    cgxgbt_TeaApplication$7__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$7__init_0($this, $this$0) {
    $this.$this$038 = $this$0;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbt_TeaApplication$7_onSuccess($this, $url, $result) {
    return 1;
}
function cgxgbt_TeaApplication$7_onFailure($this, $url) {}
var cbgssu_Value$9 = $rt_classWithoutFields(cbgssu_Value);
function cgxgbt_TeaApplication$1() {
    jl_Object.call(this);
    this.$this$039 = null;
}
function cgxgbt_TeaApplication$1__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$1();
    cgxgbt_TeaApplication$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$1__init_0($this, $this$0) {
    $this.$this$039 = $this$0;
    jl_Object__init_0($this);
}
function cgxgbt_TeaApplication$1_handleEvent($this, $evt) {
    var $state, var$3, var$4, $listener, $$je;
    $state = $rt_str(($this.$this$039.$window0.$getDocument()).visibilityState);
    if (!$rt_s(1071).$equals($state)) {
        var$3 = $this.$this$039.$lifecycleListeners;
        jl_Object_monitorEnterSync(var$3);
        a: {
            try {
                var$4 = $this.$this$039.$lifecycleListeners.$iterator0();
                while (var$4.$hasNext()) {
                    $listener = var$4.$next0();
                    $listener.$resume();
                }
                jl_Object_monitorExitSync(var$3);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$4 = $$je;

            }
            jl_Object_monitorExitSync(var$3);
            $rt_throw(var$4);
        }
        $this.$this$039.$appListener.$resume();
    } else {
        var$3 = $this.$this$039.$lifecycleListeners;
        jl_Object_monitorEnterSync(var$3);
        b: {
            try {
                var$4 = $this.$this$039.$lifecycleListeners.$iterator0();
                while (var$4.$hasNext()) {
                    $listener = var$4.$next0();
                    $listener.$pause();
                }
                jl_Object_monitorExitSync(var$3);
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$4 = $$je;

            }
            jl_Object_monitorExitSync(var$3);
            $rt_throw(var$4);
        }
        $this.$this$039.$appListener.$pause();
    }
}
function cgxgbt_TeaApplication$1_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
function cgxgbt_TeaApplication$2() {
    jl_Object.call(this);
    this.$this$040 = null;
}
function cgxgbt_TeaApplication$2__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$2();
    cgxgbt_TeaApplication$2__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$2__init_0($this, $this$0) {
    $this.$this$040 = $this$0;
    jl_Object__init_0($this);
}
function cgxgbt_TeaApplication$2_handleEvent($this, $evt) {
    var $width, $height, $density;
    $width = $this.$this$040.$window0.$getClientWidth() - $this.$this$040.$config0.$padHorizontal | 0;
    $height = $this.$this$040.$window0.$getClientHeight() - $this.$this$040.$config0.$padVertical | 0;
    if ($width > 0 && $height > 0) {
        if ($this.$this$040.$graphics !== null) {
            if ($this.$this$040.$config0.$usePhysicalPixels) {
                $density = $this.$this$040.$graphics.$getNativeScreenDensity();
                $width = $width * $density | 0;
                $height = $height * $density | 0;
            }
            $this.$this$040.$graphics.$setCanvasSize($width, $height);
        }
        return;
    }
}
function cgxgbt_TeaApplication$2_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var cgxgbtdt_TypedArrays = $rt_classWithoutFields();
var cgxgbtdt_TypedArrays_instance = null;
function cgxgbtdt_TypedArrays__init_($this) {
    jl_Object__init_0($this);
}
function cgxgbtdt_TypedArrays_getInstance() {
    return cgxgbtdt_TypedArrays_instance;
}
function cgxgbtdt_TypedArrays_setInstance($instance) {
    cgxgbtdt_TypedArrays_instance = $instance;
}
function cgxgbt_TeaApplication$3() {
    cgxgbt_AssetLoaderListener.call(this);
    this.$this$041 = null;
}
function cgxgbt_TeaApplication$3__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplication$3();
    cgxgbt_TeaApplication$3__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplication$3__init_0($this, $this$0) {
    $this.$this$041 = $this$0;
    cgxgbt_AssetLoaderListener__init_0($this);
}
function cgxgbt_TeaApplication$3_onSuccess($this, $url, $result) {
    return 1;
}
var jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
function jur_RelAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_RelAltGroupQuantifierSet();
    jur_RelAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_RelAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_RelAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
}
var cbgssu_Value$6 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Value$6__init_() {
    var var_0 = new cbgssu_Value$6();
    cbgssu_Value$6__init_0(var_0);
    return var_0;
}
function cbgssu_Value$6__init_0($this) {
    cbgssu_Value__init_($this);
}
var otcir_Flags = $rt_classWithoutFields();
function otcir_Flags_getModifiers($flags, $access) {
    var $modifiers, var$4, var$5;
    a: {
        $modifiers = 0;
        switch ($access) {
            case 1:
                $modifiers = 2;
                break a;
            case 2:
                $modifiers = 4;
                break a;
            case 3:
                $modifiers = 1;
                break a;
            default:
        }
    }
    var$4 = $flags >>> 6 | 0;
    var$5 = $modifiers | var$4 & 8;
    var$5 = var$5 | $flags << 2 & 16;
    var$4 = var$5 | var$4 & 32;
    var$4 = var$4 | ($flags >>> 8 | 0) & 64;
    var$4 = var$4 | ($flags >>> 5 | 0) & 128;
    var$4 = var$4 | $flags & 256;
    var$4 = var$4 | $flags << 8 & 512;
    var$4 = var$4 | $flags << 10 & 1024;
    var$4 = var$4 | $flags << 1 & 2048;
    return var$4;
}
var cbgssu_Value$5 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Value$5__init_() {
    var var_0 = new cbgssu_Value$5();
    cbgssu_Value$5__init_0(var_0);
    return var_0;
}
function cbgssu_Value$5__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbgssu_Value$8 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Value$7 = $rt_classWithoutFields(cbgssu_Value);
var cbgssu_Value$2 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Value$2__init_() {
    var var_0 = new cbgssu_Value$2();
    cbgssu_Value$2__init_0(var_0);
    return var_0;
}
function cbgssu_Value$2__init_0($this) {
    cbgssu_Value__init_($this);
}
var cgxgbt_TeaApplication$8 = $rt_classWithoutFields();
var cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = null;
function cgxgbt_TeaApplication$8_$callClinit() {
    cgxgbt_TeaApplication$8_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$8);
    cgxgbt_TeaApplication$8__clinit_();
}
function cgxgbt_TeaApplication$8__clinit_() {
    cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = $rt_createIntArray((cgxgbt_TeaApplication$AppState_values()).data.length);
    cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal(cgxgbt_TeaApplication$AppState_LOAD_ASSETS)] = 1;
    cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal(cgxgbt_TeaApplication$AppState_APP_LOOP)] = 2;
}
var cbgssu_Value$1 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Value$1__init_() {
    var var_0 = new cbgssu_Value$1();
    cbgssu_Value$1__init_0(var_0);
    return var_0;
}
function cbgssu_Value$1__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbgggpv_CylinderSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var jnc_Charset$Charsets = $rt_classWithoutFields();
var jnc_Charset$Charsets_value = null;
function jnc_Charset$Charsets_$callClinit() {
    jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    jnc_Charset$Charsets__clinit_();
}
function jnc_Charset$Charsets__clinit_() {
    var $charsets, var$2, var$3, var$4, $charset;
    jnc_Charset$Charsets_value = ju_HashMap__init_();
    $charsets = $rt_createArray(jnc_Charset, 6);
    var$2 = $charsets.data;
    jnc_StandardCharsets_$callClinit();
    var$2[0] = jnc_StandardCharsets_UTF_8;
    var$2[1] = jnc_StandardCharsets_US_ASCII;
    var$2[2] = jnc_StandardCharsets_ISO_8859_1;
    var$2[3] = jnc_StandardCharsets_UTF_16;
    var$2[4] = jnc_StandardCharsets_UTF_16BE;
    var$2[5] = jnc_StandardCharsets_UTF_16LE;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $charset = var$2[var$4];
        jnc_Charset$Charsets_value.$put1(jnc_Charset_name($charset), $charset);
        var$4 = var$4 + 1 | 0;
    }
}
var cbgssu_Value$4 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Value$4__init_() {
    var var_0 = new cbgssu_Value$4();
    cbgssu_Value$4__init_0(var_0);
    return var_0;
}
function cbgssu_Value$4__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbgssu_Value$3 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Value$3__init_() {
    var var_0 = new cbgssu_Value$3();
    cbgssu_Value$3__init_0(var_0);
    return var_0;
}
function cbgssu_Value$3__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbg_ApplicationLogger = $rt_classWithoutFields(0);
var cgxgbt_TeaApplicationLogger = $rt_classWithoutFields();
function cgxgbt_TeaApplicationLogger__init_() {
    var var_0 = new cgxgbt_TeaApplicationLogger();
    cgxgbt_TeaApplicationLogger__init_0(var_0);
    return var_0;
}
function cgxgbt_TeaApplicationLogger__init_0($this) {
    jl_Object__init_0($this);
}
function cgxgbt_TeaApplicationLogger_log($this, $tag, $message) {
    var var$3, var$4;
    var$3 = jl_System_out();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(10)), $message);
    var$3.$println1(jl_StringBuilder_toString(var$4));
}
function cgxgbt_TeaApplicationLogger_error($this, $tag, $message) {
    var var$3, var$4;
    var$3 = jl_System_err();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(10)), $message);
    var$3.$println1(jl_StringBuilder_toString(var$4));
}
var jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet);
function jur_FSet$PossessiveFSet__init_() {
    var var_0 = new jur_FSet$PossessiveFSet();
    jur_FSet$PossessiveFSet__init_0(var_0);
    return var_0;
}
function jur_FSet$PossessiveFSet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_FSet$PossessiveFSet_matches($this, $stringIndex, $testString, $matchResult) {
    return $stringIndex;
}
function jur_FSet$PossessiveFSet_getName($this) {
    return $rt_s(1072);
}
function jur_FSet$PossessiveFSet_hasConsumed($this, $mr) {
    return 0;
}
var cbgm_Interpolation$ExpOut = $rt_classWithoutFields(cbgm_Interpolation$Exp);
function cbgm_Interpolation$ExpOut__init_(var_0, var_1) {
    var var_2 = new cbgm_Interpolation$ExpOut();
    cbgm_Interpolation$ExpOut__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Interpolation$ExpOut__init_0($this, $value, $power) {
    cbgm_Interpolation$Exp__init_0($this, $value, $power);
}
var jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
function jur_PosCompositeGroupQuantifierSet__init_(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new jur_PosCompositeGroupQuantifierSet();
    jur_PosCompositeGroupQuantifierSet__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function jur_PosCompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter) {
    jur_CompositeGroupQuantifierSet__init_0($this, $quant, $innerSet, $next, $type, $setCounter);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier0.$max2();
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier0.$min3())
        return (-1);
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
var cbgssu_FocusListener$FocusEvent = $rt_classWithoutFields(cbgss_Event);
function cbgg_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
var cbgg_Texture$TextureFilter_Nearest = null;
var cbgg_Texture$TextureFilter_Linear = null;
var cbgg_Texture$TextureFilter_MipMap = null;
var cbgg_Texture$TextureFilter_MipMapNearestNearest = null;
var cbgg_Texture$TextureFilter_MipMapLinearNearest = null;
var cbgg_Texture$TextureFilter_MipMapNearestLinear = null;
var cbgg_Texture$TextureFilter_MipMapLinearLinear = null;
var cbgg_Texture$TextureFilter_$VALUES = null;
function cbgg_Texture$TextureFilter_$callClinit() {
    cbgg_Texture$TextureFilter_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureFilter);
    cbgg_Texture$TextureFilter__clinit_();
}
function cbgg_Texture$TextureFilter__init_(var_0, var_1, var_2) {
    var var_3 = new cbgg_Texture$TextureFilter();
    cbgg_Texture$TextureFilter__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbgg_Texture$TextureFilter__init_0($this, var$1, var$2, $glEnum) {
    cbgg_Texture$TextureFilter_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum0 = $glEnum;
}
function cbgg_Texture$TextureFilter_getGLEnum($this) {
    return $this.$glEnum0;
}
function cbgg_Texture$TextureFilter__clinit_() {
    cbgg_Texture$TextureFilter_Nearest = cbgg_Texture$TextureFilter__init_($rt_s(1073), 0, 9728);
    cbgg_Texture$TextureFilter_Linear = cbgg_Texture$TextureFilter__init_($rt_s(1074), 1, 9729);
    cbgg_Texture$TextureFilter_MipMap = cbgg_Texture$TextureFilter__init_($rt_s(1075), 2, 9987);
    cbgg_Texture$TextureFilter_MipMapNearestNearest = cbgg_Texture$TextureFilter__init_($rt_s(1076), 3, 9984);
    cbgg_Texture$TextureFilter_MipMapLinearNearest = cbgg_Texture$TextureFilter__init_($rt_s(1077), 4, 9985);
    cbgg_Texture$TextureFilter_MipMapNearestLinear = cbgg_Texture$TextureFilter__init_($rt_s(1078), 5, 9986);
    cbgg_Texture$TextureFilter_MipMapLinearLinear = cbgg_Texture$TextureFilter__init_($rt_s(1079), 6, 9987);
    cbgg_Texture$TextureFilter_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureFilter, [cbgg_Texture$TextureFilter_Nearest, cbgg_Texture$TextureFilter_Linear, cbgg_Texture$TextureFilter_MipMap, cbgg_Texture$TextureFilter_MipMapNearestNearest, cbgg_Texture$TextureFilter_MipMapLinearNearest, cbgg_Texture$TextureFilter_MipMapNearestLinear, cbgg_Texture$TextureFilter_MipMapLinearLinear]);
}
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$042 = null;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaDigit$1();
    jur_AbstractCharClass$LazyJavaDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaDigit$1__init_0($this, $this$0) {
    $this.$this$042 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDigit$1_contains($this, $ch) {
    return jl_Character_isDigit($ch);
}
var cbgss_InputEvent = $rt_classWithoutFields(cbgss_Event);
var jl_NoSuchMethodException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function jl_NoSuchMethodException__init_() {
    var var_0 = new jl_NoSuchMethodException();
    jl_NoSuchMethodException__init_0(var_0);
    return var_0;
}
function jl_NoSuchMethodException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
var jn_IntBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
function jn_IntBufferOverByteBufferBigEndian__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new jn_IntBufferOverByteBufferBigEndian();
    jn_IntBufferOverByteBufferBigEndian__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function jn_IntBufferOverByteBufferBigEndian__init_0($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly) {
    jn_IntBufferOverByteBuffer__init_($this, $start, $capacity, $byteBuffer, $position, $limit, $readOnly);
}
function jn_IntBufferOverByteBufferBigEndian_getElement($this, $index) {
    var var$2, var$3, var$4;
    var$2 = $this.$byteByffer.$array0.data;
    var$3 = $this.$start0;
    var$4 = $index * 4 | 0;
    return (var$2[var$3 + var$4 | 0] & 255) << 24 | ($this.$byteByffer.$array0.data[($this.$start0 + var$4 | 0) + 1 | 0] & 255) << 16 | ($this.$byteByffer.$array0.data[($this.$start0 + var$4 | 0) + 2 | 0] & 255) << 8 | $this.$byteByffer.$array0.data[($this.$start0 + var$4 | 0) + 3 | 0] & 255;
}
function jn_IntBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
    var var$3, var$4, var$5;
    var$3 = $this.$byteByffer.$array0.data;
    var$4 = $this.$start0;
    var$5 = $index * 4 | 0;
    var$3[var$4 + var$5 | 0] = $value >> 24 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start0 + var$5 | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start0 + var$5 | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
    $this.$byteByffer.$array0.data[($this.$start0 + var$5 | 0) + 3 | 0] = $value << 24 >> 24;
}
var jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException);
function jl_NullPointerException__init_0(var_0) {
    var var_1 = new jl_NullPointerException();
    jl_NullPointerException__init_1(var_1, var_0);
    return var_1;
}
function jl_NullPointerException__init_() {
    var var_0 = new jl_NullPointerException();
    jl_NullPointerException__init_2(var_0);
    return var_0;
}
function jl_NullPointerException__init_1($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
function jl_NullPointerException__init_2($this) {
    jl_RuntimeException__init_1($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$043 = null;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1();
    jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0($this, $this$0) {
    $this.$this$043 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaSpaceChar$1_contains($this, $ch) {
    return jl_Character_isSpaceChar($ch);
}
var cbgssu_ImageButton$ImageButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle);
var otr_EventQueue$Event = $rt_classWithoutFields(0);
var jl_Math = $rt_classWithoutFields();
function jl_Math_sin(var$1) {
    return Math.sin(var$1);
}
function jl_Math_cos(var$1) {
    return Math.cos(var$1);
}
function jl_Math_tan(var$1) {
    return Math.tan(var$1);
}
function jl_Math_exp(var$1) {
    return Math.exp(var$1);
}
function jl_Math_log(var$1) {
    return Math.log(var$1);
}
function jl_Math_sqrt(var$1) {
    return Math.sqrt(var$1);
}
function jl_Math_ceil(var$1) {
    return Math.ceil(var$1);
}
function jl_Math_floor(var$1) {
    return Math.floor(var$1);
}
function jl_Math_pow($x, $y) {
    return jl_Math_powImpl($x, $y);
}
function jl_Math_powImpl(var$1, var$2) {
    return Math.pow(var$1, var$2);
}
function jl_Math_round($a) {
    return $a + jl_Math_signum0($a) * 0.5 | 0;
}
function jl_Math_round0($a) {
    return Long_fromNumber($a + jl_Math_signum($a) * 0.5);
}
function jl_Math_random() {
    return jl_Math_randomImpl();
}
function jl_Math_randomImpl() {
    return Math.random();
}
function jl_Math_min($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_max1($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_min0($a, $b) {
    if ($a < $b)
        $b = $a;
    return $b;
}
function jl_Math_max0($a, $b) {
    if ($a > $b)
        $b = $a;
    return $b;
}
function jl_Math_abs1($n) {
    if ($n <= 0)
        $n =  -$n | 0;
    return $n;
}
function jl_Math_abs($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function jl_Math_abs0($n) {
    if ($n <= 0.0)
        $n =  -$n;
    return $n;
}
function jl_Math_signum($d) {
    var var$2;
    var$2 = $rt_compare($d, 0.0);
    if (var$2 > 0)
        $d = 1.0;
    else if (var$2 < 0)
        $d = (-1.0);
    return $d;
}
function jl_Math_signum0($d) {
    var var$2;
    var$2 = $rt_compare($d, 0.0);
    if (var$2 > 0)
        $d = 1.0;
    else if (var$2 < 0)
        $d = (-1.0);
    return $d;
}
function jl_Math_copySign($magnitude, $sign) {
    var var$3;
    var$3 = $rt_compare($sign, 0.0);
    if (var$3 && var$3) {
        if ((var$3 <= 0 ? 0 : 1) != ($magnitude <= 0.0 ? 0 : 1))
            $magnitude =  -$magnitude;
        return $magnitude;
    }
    return $sign;
}
function cgtr_Xoshiro128PlusPlusRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA5 = 0;
    a.$stateB5 = 0;
    a.$stateC3 = 0;
    a.$stateD2 = 0;
}
function cgtr_Xoshiro128PlusPlusRandom__init_() {
    var var_0 = new cgtr_Xoshiro128PlusPlusRandom();
    cgtr_Xoshiro128PlusPlusRandom__init_0(var_0);
    return var_0;
}
function cgtr_Xoshiro128PlusPlusRandom__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new cgtr_Xoshiro128PlusPlusRandom();
    cgtr_Xoshiro128PlusPlusRandom__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgtr_Xoshiro128PlusPlusRandom__init_0($this) {
    cgtr_Xoshiro128PlusPlusRandom__init_2($this, Long_lo((cgtr_EnhancedRandom_seedFromMath())), Long_lo((cgtr_EnhancedRandom_seedFromMath())), Long_lo((cgtr_EnhancedRandom_seedFromMath())), Long_lo((cgtr_EnhancedRandom_seedFromMath())));
}
function cgtr_Xoshiro128PlusPlusRandom__init_2($this, $stateA, $stateB, $stateC, $stateD) {
    cgtr_EnhancedRandom__init_0($this, Long_fromInt($stateA));
    $this.$stateA5 = $stateA;
    $this.$stateB5 = $stateB;
    $this.$stateC3 = $stateC;
    if (!($stateA | $stateB | $stateC | $stateD))
        $stateD = 1;
    $this.$stateD2 = $stateD;
}
function cgtr_Xoshiro128PlusPlusRandom_nextLong($this) {
    var $h, var$2, $l, var$4, $t;
    $h = $this.$stateA5 + $this.$stateD2 | 0;
    var$2 = ($h << 7 | ($h >>> 25 | 0)) + $this.$stateA5 | 0;
    $l = $this.$stateC3 - $this.$stateB5 | 0;
    var$4 = ($l << 13 | ($l >>> 19 | 0)) + $this.$stateC3 | 0;
    $t = $this.$stateB5 << 9;
    $this.$stateC3 = $this.$stateC3 ^ $this.$stateA5;
    $this.$stateD2 = $this.$stateD2 ^ $this.$stateB5;
    $this.$stateB5 = $this.$stateB5 ^ $this.$stateC3;
    $this.$stateA5 = $this.$stateA5 ^ $this.$stateD2;
    $this.$stateC3 = $this.$stateC3 ^ $t;
    $this.$stateD2 = $this.$stateD2 << 11 | ($this.$stateD2 >>> 21 | 0);
    return Long_xor(Long_shl(Long_fromInt(var$2), 32), Long_and(Long_fromInt(var$4), Long_create(4294967295, 0)));
}
function cgtr_Xoshiro128PlusPlusRandom_next($this, $bits) {
    var $result, var$3, $t;
    $result = $this.$stateA5 + $this.$stateD2 | 0;
    var$3 = ($result << 7 | ($result >>> 25 | 0)) + $this.$stateA5 | 0;
    $t = $this.$stateB5 << 9;
    $this.$stateC3 = $this.$stateC3 ^ $this.$stateA5;
    $this.$stateD2 = $this.$stateD2 ^ $this.$stateB5;
    $this.$stateB5 = $this.$stateB5 ^ $this.$stateC3;
    $this.$stateA5 = $this.$stateA5 ^ $this.$stateD2;
    $this.$stateC3 = $this.$stateC3 ^ $t;
    $this.$stateD2 = $this.$stateD2 << 11 | ($this.$stateD2 >>> 21 | 0);
    return var$3 >>> (32 - $bits | 0) | 0;
}
function cgtr_Xoshiro128PlusPlusRandom_nextInt($this) {
    var $result, var$2, $t;
    $result = $this.$stateA5 + $this.$stateD2 | 0;
    var$2 = ($result << 7 | ($result >>> 25 | 0)) + $this.$stateA5 | 0;
    $t = $this.$stateB5 << 9;
    $this.$stateC3 = $this.$stateC3 ^ $this.$stateA5;
    $this.$stateD2 = $this.$stateD2 ^ $this.$stateB5;
    $this.$stateB5 = $this.$stateB5 ^ $this.$stateC3;
    $this.$stateA5 = $this.$stateA5 ^ $this.$stateD2;
    $this.$stateC3 = $this.$stateC3 ^ $t;
    $this.$stateD2 = $this.$stateD2 << 11 | ($this.$stateD2 >>> 21 | 0);
    return var$2;
}
function cgtr_Xoshiro128PlusPlusRandom_nextFloat($this) {
    return ($this.$nextInt() >>> 8 | 0) * 5.960464477539063E-8;
}
var jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_PatternSyntaxException() {
    var a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern0 = null;
    a.$index5 = 0;
}
function jur_PatternSyntaxException__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PatternSyntaxException__init_0($this, $description, $pattern, $index) {
    jl_IllegalArgumentException__init_2($this);
    $this.$index5 = (-1);
    $this.$desc = $description;
    $this.$pattern0 = $pattern;
    $this.$index5 = $index;
}
function jur_PatternSyntaxException_getMessage($this) {
    var $filler, $temp, var$3, var$4, var$5, var$6;
    $filler = $rt_s(45);
    if ($this.$index5 >= 1) {
        $temp = $rt_createCharArray($this.$index5);
        ju_Arrays_fill5($temp, 32);
        $filler = jl_String__init_($temp);
    }
    var$3 = $this.$desc;
    if ($this.$pattern0 !== null && $this.$pattern0.$length()) {
        var$4 = $this.$index5;
        var$5 = $this.$pattern0;
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$6, var$4), $rt_s(312)), var$5), $rt_s(312)), $filler);
        var$5 = jl_StringBuilder_toString(var$6);
    } else
        var$5 = $rt_s(45);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$3), var$5);
    return jl_StringBuilder_toString(var$6);
}
function cgt_TriangularScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist10 = null;
    a.$batch15 = null;
    a.$renderer14 = null;
    a.$amounts14 = null;
    a.$iterations14 = Long_ZERO;
    a.$font16 = null;
    a.$viewport14 = null;
    a.$mainGame14 = null;
}
function cgt_TriangularScreen__init_(var_0) {
    var var_1 = new cgt_TriangularScreen();
    cgt_TriangularScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_TriangularScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font16 = $this.$mainGame14.$font0;
    a: {
        try {
            var$1 = new cgtrd_TriangularDistribution;
            var$2 = $this.$mainGame14.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_TriangularDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
            $this.$dist10 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist10 = cgtrd_TriangularDistribution__init_($this.$mainGame14.$random0, 0.0, 1.0, 0.5);
    }
    $this.$batch15 = $this.$mainGame14.$batch0;
    $this.$viewport14 = cbguv_ScreenViewport__init_();
    $this.$renderer14 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts14, Long_ZERO);
    $this.$iterations14 = Long_ZERO;
}
function cgt_TriangularScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts14 = $rt_createLongArray(512);
    $this.$iterations14 = Long_ZERO;
    $this.$mainGame14 = $main;
}
function cgt_TriangularScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame14.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame14.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame14.$setScreen($this.$mainGame14.$alternateTriangular);
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport14.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts14, Long_ZERO);
        $this.$iterations14 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts14, Long_ZERO);
        $this.$iterations14 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts14, Long_ZERO);
        $this.$iterations14 = Long_ZERO;
    }
    $this.$iterations14 = Long_add($this.$iterations14, Long_fromInt(1));
    var$3 = $this.$dist10;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist10.$nextDouble() * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts14.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer14.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer14.$color($color);
        var$3 = $this.$renderer14;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer14.$color($color);
        $this.$renderer14.$vertex(var$9, Long_toNumber(Long_div($this.$amounts14.data[$x], $this.$iterations14)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer14.$color((-6.221923240859403E37));
        var$3 = $this.$renderer14;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer14.$color((-6.221923240859403E37));
        $this.$renderer14.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer14.$end();
    $this.$batch15.$setProjectionMatrix($camera.$combined);
    $this.$batch15.$begin0();
    var$3 = $this.$font16;
    var$12 = $this.$batch15;
    var$6 = $rt_createArray(jl_Object, 5);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf(cgt_DistributorDemo_c);
    var$13[3] = jl_Double_valueOf($this.$dist10.$getMedian());
    var$13[4] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1080), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font16.$draw($this.$batch15, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font16.$draw($this.$batch15, $rt_s(1081), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch15.$end();
}
function cgt_TriangularScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport14.$update0($width, $height, 1);
    $this.$viewport14.$apply(1);
}
var jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaDefined__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaDefined__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaDefined_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDefined$1__init_($this);
    $chCl.$lowHighSurrogates.$set(0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function cgtrd_LogCauchyDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$mu1 = 0.0;
    a.$sigma1 = 0.0;
}
function cgtrd_LogCauchyDistribution__init_(var_0, var_1, var_2) {
    var var_3 = new cgtrd_LogCauchyDistribution();
    cgtrd_LogCauchyDistribution__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_LogCauchyDistribution__init_0($this, $generator, $mu, $sigma) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($mu, $sigma, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(935)));
}
function cgtrd_LogCauchyDistribution_getMedian($this) {
    return jl_Math_exp($this.$mu1);
}
function cgtrd_LogCauchyDistribution_setParameters($this, $a, $b, $c) {
    if (!($rt_globals.isNaN($a) ? 1 : 0) && $b > 0.0) {
        $this.$mu1 = $a;
        $this.$sigma1 = $b;
        return 1;
    }
    return 0;
}
function cgtrd_LogCauchyDistribution_nextDouble($this) {
    return cgtrd_LogCauchyDistribution_sample($this.$generator, $this.$mu1, $this.$sigma1);
}
function cgtrd_LogCauchyDistribution_sample($generator, $mu, $sigma) {
    return jl_Math_exp(cgtrd_CauchyDistribution_sample($generator, $mu, $sigma));
}
var cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum);
var cbgg_Mesh$VertexDataType_VertexArray = null;
var cbgg_Mesh$VertexDataType_VertexBufferObject = null;
var cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null;
var cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null;
var cbgg_Mesh$VertexDataType_$VALUES = null;
function cbgg_Mesh$VertexDataType_$callClinit() {
    cbgg_Mesh$VertexDataType_$callClinit = $rt_eraseClinit(cbgg_Mesh$VertexDataType);
    cbgg_Mesh$VertexDataType__clinit_();
}
function cbgg_Mesh$VertexDataType__init_(var_0, var_1) {
    var var_2 = new cbgg_Mesh$VertexDataType();
    cbgg_Mesh$VertexDataType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Mesh$VertexDataType_values() {
    cbgg_Mesh$VertexDataType_$callClinit();
    return cbgg_Mesh$VertexDataType_$VALUES.$clone();
}
function cbgg_Mesh$VertexDataType__init_0($this, var$1, var$2) {
    cbgg_Mesh$VertexDataType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Mesh$VertexDataType__clinit_() {
    cbgg_Mesh$VertexDataType_VertexArray = cbgg_Mesh$VertexDataType__init_($rt_s(1082), 0);
    cbgg_Mesh$VertexDataType_VertexBufferObject = cbgg_Mesh$VertexDataType__init_($rt_s(1083), 1);
    cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = cbgg_Mesh$VertexDataType__init_($rt_s(1084), 2);
    cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = cbgg_Mesh$VertexDataType__init_($rt_s(1085), 3);
    cbgg_Mesh$VertexDataType_$VALUES = $rt_createArrayFromData(cbgg_Mesh$VertexDataType, [cbgg_Mesh$VertexDataType_VertexArray, cbgg_Mesh$VertexDataType_VertexBufferObject, cbgg_Mesh$VertexDataType_VertexBufferObjectSubData, cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO]);
}
var cbgssu_TextField$TextFieldStyle = $rt_classWithoutFields();
var cbgggpi_DynamicsModifier$TangentialAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
var cbgggpv_NumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
function cbgu_ObjectMap() {
    var a = this; jl_Object.call(a);
    a.$size8 = 0;
    a.$keyTable1 = null;
    a.$valueTable0 = null;
    a.$loadFactor3 = 0.0;
    a.$threshold3 = 0;
    a.$shift2 = 0;
    a.$mask1 = 0;
}
var cbgu_ObjectMap_dummy = null;
function cbgu_ObjectMap_$callClinit() {
    cbgu_ObjectMap_$callClinit = $rt_eraseClinit(cbgu_ObjectMap);
    cbgu_ObjectMap__clinit_();
}
function cbgu_ObjectMap__init_() {
    var var_0 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_1(var_0);
    return var_0;
}
function cbgu_ObjectMap__init_0(var_0) {
    var var_1 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_2(var_1, var_0);
    return var_1;
}
function cbgu_ObjectMap__init_3(var_0, var_1) {
    var var_2 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_4(var_2, var_0, var_1);
    return var_2;
}
function cbgu_ObjectMap__init_1($this) {
    cbgu_ObjectMap_$callClinit();
    cbgu_ObjectMap__init_4($this, 51, 0.800000011920929);
}
function cbgu_ObjectMap__init_2($this, $initialCapacity) {
    cbgu_ObjectMap_$callClinit();
    cbgu_ObjectMap__init_4($this, $initialCapacity, 0.800000011920929);
}
function cbgu_ObjectMap__init_4($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    cbgu_ObjectMap_$callClinit();
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor3 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold3 = $tableSize * $loadFactor | 0;
        $this.$mask1 = $tableSize - 1 | 0;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask1));
        $this.$keyTable1 = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(501))).$append19($loadFactor)).$toString()));
}
function cbgu_ObjectMap_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode0()), Long_create(2135587861, 2654435769)), $this.$shift2));
}
function cbgu_ObjectMap_locateKey($this, $key) {
    var $keyTable, $i, $other;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1086)));
    $keyTable = $this.$keyTable1;
    $i = $this.$place0($key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask1;
    }
    return $i;
}
function cbgu_ObjectMap_put($this, $key, $value) {
    var $i, $oldValue, var$5;
    $i = $this.$locateKey0($key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable0.data[$i];
        $this.$valueTable0.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable1.data[var$5] = $key;
    $this.$valueTable0.data[var$5] = $value;
    var$5 = $this.$size8 + 1 | 0;
    $this.$size8 = var$5;
    if (var$5 >= $this.$threshold3)
        cbgu_ObjectMap_resize($this, $this.$keyTable1.data.length << 1);
    return null;
}
function cbgu_ObjectMap_putResize($this, $key, $value) {
    var $keyTable, $i, var$5;
    $keyTable = $this.$keyTable1;
    $i = $this.$place0($key);
    while (true) {
        var$5 = $keyTable.data;
        if (var$5[$i] === null)
            break;
        $i = ($i + 1 | 0) & $this.$mask1;
    }
    var$5[$i] = $key;
    $this.$valueTable0.data[$i] = $value;
}
function cbgu_ObjectMap_get($this, $key) {
    var $i;
    $i = $this.$locateKey0($key);
    return $i < 0 ? null : $this.$valueTable0.data[$i];
}
function cbgu_ObjectMap_remove($this, $key) {
    var $i, $keyTable, $valueTable, var$5, $oldValue, $mask, $next, var$9, var$10, $placement;
    $i = $this.$locateKey0($key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable1;
    $valueTable = $this.$valueTable0;
    var$5 = $valueTable.data;
    $oldValue = var$5[$i];
    $mask = $this.$mask1;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        var$10 = var$9[$next];
        if (var$10 === null)
            break;
        $placement = $this.$place0(var$10);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = var$10;
            var$5[$i] = var$5[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = null;
    var$5[$i] = null;
    $this.$size8 = $this.$size8 - 1 | 0;
    return $oldValue;
}
function cbgu_ObjectMap_clear($this) {
    if (!$this.$size8)
        return;
    $this.$size8 = 0;
    ju_Arrays_fill6($this.$keyTable1, null);
    ju_Arrays_fill6($this.$valueTable0, null);
}
function cbgu_ObjectMap_containsKey($this, $key) {
    return $this.$locateKey0($key) < 0 ? 0 : 1;
}
function cbgu_ObjectMap_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable1.data.length;
        $this.$threshold3 = $newSize * $this.$loadFactor3 | 0;
        $this.$mask1 = $newSize - 1 | 0;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask1));
        $oldKeyTable = $this.$keyTable1;
        $oldValueTable = $this.$valueTable0;
        $this.$keyTable1 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $newSize);
        if ($this.$size8 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    cbgu_ObjectMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbgu_ObjectMap__clinit_() {
    cbgu_ObjectMap_dummy = jl_Object__init_();
}
function jur_Pattern() {
    var a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags0 = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start11 = null;
}
function jur_Pattern__init_() {
    var var_0 = new jur_Pattern();
    jur_Pattern__init_0(var_0);
    return var_0;
}
function jur_Pattern_matcher($this, $input) {
    return jur_Matcher__init_($this, $input);
}
function jur_Pattern_split0($this, $inputSeq, $limit) {
    var $res, $mat, $index, $curPos, var$7, var$8;
    $res = ju_ArrayList__init_();
    $mat = jur_Pattern_matcher($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    if (!$inputSeq.$length()) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(45);
        return var$7;
    }
    while (jur_Matcher_find($mat)) {
        var$8 = $index + 1 | 0;
        if (var$8 >= $limit && $limit > 0)
            break;
        $res.$add10(($inputSeq.$subSequence($curPos, jur_Matcher_start($mat))).$toString());
        $curPos = jur_Matcher_end($mat);
        $index = var$8;
    }
    a: {
        $res.$add10(($inputSeq.$subSequence($curPos, $inputSeq.$length())).$toString());
        var$8 = $index + 1 | 0;
        if (!$limit)
            while (true) {
                var$8 = var$8 + (-1) | 0;
                if (var$8 < 0)
                    break;
                if ((($res.$get3(var$8)).$toString()).$length())
                    break a;
                $res.$remove(var$8);
            }
    }
    if (var$8 < 0)
        var$8 = 0;
    return $res.$toArray1($rt_createArray(jl_String, var$8));
}
function jur_Pattern_split($this, $input) {
    return jur_Pattern_split0($this, $input, 0);
}
function jur_Pattern_pattern($this) {
    return $this.$lexemes.$toString();
}
function jur_Pattern_compile0($pattern, $flags) {
    if ($pattern === null)
        $rt_throw(jl_NullPointerException__init_0($rt_s(1087)));
    if ($flags && ($flags | 255) != 255)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(45)));
    jur_AbstractSet_$callClinit();
    jur_AbstractSet_counter = 1;
    return jur_Pattern_compileImpl(jur_Pattern__init_(), $pattern, $flags);
}
function jur_Pattern_compileImpl($this, $pattern, $flags) {
    $this.$lexemes = jur_Lexer__init_($pattern, $flags);
    $this.$flags0 = $flags;
    $this.$start11 = jur_Pattern_processExpression($this, (-1), $this.$flags0, null);
    if ($this.$lexemes.$isEmpty()) {
        jur_Pattern_finalizeCompile($this);
        return $this;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
}
function jur_Pattern_processAlternations($this, $last) {
    var $auxRange, var$3, $rangeSet;
    $auxRange = jur_CharClass__init_1(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    while (!$this.$lexemes.$isEmpty()) {
        var$3 = $this.$lexemes;
        if (!var$3.$isLetter0())
            break;
        var$3 = $this.$lexemes;
        if (var$3.$lookAhead0() && $this.$lexemes.$lookAhead0() != (-536870788)) {
            var$3 = $this.$lexemes;
            if (var$3.$lookAhead0() != (-536870871))
                break;
        }
        $auxRange.$add($this.$lexemes.$next4());
        if ($this.$lexemes.$peek() != (-536870788))
            continue;
        $this.$lexemes.$next4();
    }
    $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processExpression($this, $ch, $newFlags, $last) {
    var $children, $saveFlags, $saveChangedFlags, $fSet, var$8, $child;
    $children = ju_ArrayList__init_();
    $saveFlags = $this.$flags0;
    $saveChangedFlags = 0;
    if ($newFlags != $this.$flags0)
        $this.$flags0 = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_NonCapFSet__init_0($fSet, var$8);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_BehindFSet__init_0($fSet, var$8);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_AtomicFSet__init_0($fSet, var$8);
                break a;
            default:
                $this.$globalGroupIndex = $this.$globalGroupIndex + 1 | 0;
                if ($last !== null)
                    $fSet = jur_FSet__init_($this.$globalGroupIndex);
                else {
                    $fSet = jur_FinalSet__init_();
                    $saveChangedFlags = 1;
                }
                if ($this.$globalGroupIndex <= (-1))
                    break a;
                if ($this.$globalGroupIndex >= 10)
                    break a;
                $this.$backRefs.data[$this.$globalGroupIndex] = $fSet;
                break a;
        }
        $fSet = jur_AheadFSet__init_();
    }
    while (true) {
        if ($this.$lexemes.$isLetter0() && $this.$lexemes.$lookAhead0() == (-536870788))
            $child = jur_Pattern_processAlternations($this, $fSet);
        else if ($this.$lexemes.$peek() == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            $this.$lexemes.$next4();
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            if ($this.$lexemes.$peek() == (-536870788))
                $this.$lexemes.$next4();
        }
        if ($child !== null)
            $children.$add10($child);
        if ($this.$lexemes.$isEmpty())
            break;
        if ($this.$lexemes.$peek() == (-536870871))
            break;
    }
    if ($this.$lexemes.$back() == (-536870788))
        $children.$add10(jur_EmptySet__init_($fSet));
    if ($this.$flags0 != $saveFlags && !$saveChangedFlags) {
        $this.$flags0 = $saveFlags;
        $this.$lexemes.$restoreFlags($this.$flags0);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            return jur_PositiveLookAhead__init_($children, $fSet);
        case -268435416:
            return jur_NegativeLookAhead__init_($children, $fSet);
        case -134217688:
            return jur_PositiveLookBehind__init_($children, $fSet);
        case -67108824:
            return jur_NegativeLookBehind__init_($children, $fSet);
        case -33554392:
            return jur_AtomicJointSet__init_($children, $fSet);
        default:
            switch ($children.$size0()) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_($children.$get3(0), $fSet);
                default:
                    return jur_JointSet__init_1($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    return jur_NonCapJointSet__init_($children, $fSet);
}
function jur_Pattern_processSequence($this) {
    var $substring, var$2, $ch;
    $substring = jl_StringBuffer__init_();
    while (!$this.$lexemes.$isEmpty()) {
        var$2 = $this.$lexemes;
        if (!var$2.$isLetter0())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isHighSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isLowSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (!(!var$2.$isNextSpecial() && !$this.$lexemes.$lookAhead0())) {
            var$2 = $this.$lexemes;
            if (!(!var$2.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead0()))) {
                var$2 = $this.$lexemes;
                if (var$2.$lookAhead0() != (-536870871)) {
                    var$2 = $this.$lexemes;
                    if ((var$2.$lookAhead0() & (-2147418113)) != (-2147483608)) {
                        var$2 = $this.$lexemes;
                        if (var$2.$lookAhead0() != (-536870788)) {
                            var$2 = $this.$lexemes;
                            if (var$2.$lookAhead0() != (-536870876))
                                break;
                        }
                    }
                }
            }
        }
        $ch = $this.$lexemes.$next4();
        if (!jl_Character_isSupplementaryCodePoint($ch))
            $substring.$append21($ch & 65535);
        else
            $substring.$append22(jl_Character_toChars($ch));
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_SequenceSet__init_($substring);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCISequenceSet__init_($substring);
    return jur_CISequenceSet__init_($substring);
}
function jur_Pattern_processDecomposedChar($this) {
    var $codePoints, $readCodePoints, $curSymb, $curSymbIndex, var$5, $codePointsHangul, var$7, var$8, var$9, var$10;
    $codePoints = $rt_createIntArray(4);
    $readCodePoints = 0;
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        $curSymb = $this.$lexemes.$next4();
        var$5[$readCodePoints] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        var$5 = $codePointsHangul.data;
        var$5[$readCodePoints] = $curSymb & 65535;
        var$7 = $this.$lexemes.$peek();
        var$8 = var$7 - 4449 | 0;
        if (var$8 >= 0 && var$8 < 21) {
            var$5[1] = var$7 & 65535;
            $this.$lexemes.$next4();
            var$9 = $this.$lexemes.$peek();
            var$7 = var$9 - 4519 | 0;
            if (var$7 >= 0 && var$7 < 28) {
                var$5[2] = var$9 & 65535;
                $this.$lexemes.$next4();
                return jur_HangulDecomposedCharSet__init_($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_(var$5[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_(var$5[0]);
        return jur_CICharSet__init_(var$5[0]);
    }
    var$10 = 1;
    while (var$10 < 4 && !$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        var$9 = var$10 + 1 | 0;
        var$5[var$10] = $this.$lexemes.$next4();
        var$10 = var$9;
    }
    if (var$10 == 1) {
        var$5 = $codePoints.data;
        if (!jur_Lexer_hasSingleCodepointDecomposition(var$5[0]))
            return jur_Pattern_processCharSet($this, var$5[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_($codePoints, var$10);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCIDecomposedCharSet__init_($codePoints, var$10);
    return jur_CIDecomposedCharSet__init_($codePoints, var$10);
}
function jur_Pattern_processSubExpression($this, $last) {
    var $cur, $term, var$4, $next;
    if ($this.$lexemes.$isLetter0() && !$this.$lexemes.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead0())) {
        if (!jur_Pattern_hasFlag($this, 128)) {
            if (!$this.$lexemes.$isHighSurrogate1() && !$this.$lexemes.$isLowSurrogate1())
                $cur = jur_Pattern_processSequence($this);
            else {
                $term = jur_Pattern_processTerminal($this, $last);
                $cur = jur_Pattern_processQuantifier($this, $last, $term);
            }
        } else {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!$this.$lexemes.$isEmpty()) {
                var$4 = $this.$lexemes;
                if (!(var$4.$peek() == (-536870871) && !($last instanceof jur_FinalSet))) {
                    var$4 = $this.$lexemes;
                    if (var$4.$peek() != (-536870788) && !$this.$lexemes.$isLetter0())
                        $cur = jur_Pattern_processQuantifier($this, $last, $cur);
                }
            }
        }
    } else if ($this.$lexemes.$peek() != (-536870871)) {
        $term = jur_Pattern_processTerminal($this, $last);
        $cur = jur_Pattern_processQuantifier($this, $last, $term);
    } else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
        $cur = jur_EmptySet__init_($last);
    }
    a: {
        if (!$this.$lexemes.$isEmpty()) {
            var$4 = $this.$lexemes;
            if (!(var$4.$peek() == (-536870871) && !($last instanceof jur_FinalSet))) {
                var$4 = $this.$lexemes;
                if (var$4.$peek() != (-536870788)) {
                    $next = jur_Pattern_processSubExpression($this, $last);
                    if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                        var$4 = $cur;
                        if (!$next.$first(var$4.$getInnerSet()))
                            $cur = jur_UnifiedQuantifierSet__init_(var$4);
                    }
                    if (($next.$getType1() & 65535) != 43)
                        $cur.$setNext($next);
                    else
                        $cur.$setNext($next.$getInnerSet());
                    break a;
                }
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType1() & 65535) != 43)
        return $cur;
    return $cur.$getInnerSet();
}
function jur_Pattern_processQuantifier($this, $last, $term) {
    var $quant, var$4, var$5, var$6, $q, var$8, $leaf;
    $quant = $this.$lexemes.$peek();
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                $this.$lexemes.$next4();
                return jur_PossessiveGroupQuantifierSet__init_($term, $last, $quant);
            case -2147483605:
                $this.$lexemes.$next4();
                return jur_PosPlusGroupQuantifierSet__init_($term, $last, (-2147483606));
            case -2147483585:
                $this.$lexemes.$next4();
                return jur_PosAltGroupQuantifierSet__init_($term, $last, (-536870849));
            case -2147483525:
                var$4 = new jur_PosCompositeGroupQuantifierSet;
                var$5 = $this.$lexemes.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_PosCompositeGroupQuantifierSet__init_0(var$4, var$5, $term, $last, (-536870849), var$6);
                return var$4;
            case -1073741782:
            case -1073741781:
                $this.$lexemes.$next4();
                $q = jur_ReluctantGroupQuantifierSet__init_($term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                $this.$lexemes.$next4();
                $q = jur_RelAltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q = new jur_RelCompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$8 = $this.$compCount + 1 | 0;
                $this.$compCount = var$8;
                jur_RelCompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$8);
                $term.$setNext($q);
                return $q;
            case -536870870:
            case -536870869:
                $this.$lexemes.$next4();
                $q = $term.$getType1() != (-2147483602) ? jur_GroupQuantifierSet__init_($term, $last, $quant) : jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_($term, $last, $quant) : jur_DotQuantifierSet__init_($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags0));
                $term.$setNext($q);
                return $q;
            case -536870849:
                $this.$lexemes.$next4();
                $q = jur_AltGroupQuantifierSet__init_($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q = new jur_CompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_0($q, var$4, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            $this.$lexemes.$next4();
            $q = jur_PossessiveQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -2147483585:
            $this.$lexemes.$next4();
            return jur_PossessiveAltQuantifierSet__init_($leaf, $last, (-2147483585));
        case -2147483525:
            return jur_PossessiveCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-2147483525));
        case -1073741782:
        case -1073741781:
            $this.$lexemes.$next4();
            $q = jur_ReluctantQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -1073741761:
            $this.$lexemes.$next4();
            return jur_ReluctantAltQuantifierSet__init_($leaf, $last, (-1073741761));
        case -1073741701:
            return jur_ReluctantCompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-1073741701));
        case -536870870:
        case -536870869:
            $this.$lexemes.$next4();
            $q = jur_LeafQuantifierSet__init_($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -536870849:
            $this.$lexemes.$next4();
            return jur_AltQuantifierSet__init_($leaf, $last, (-536870849));
        case -536870789:
            return jur_CompositeQuantifierSet__init_($this.$lexemes.$nextSpecial(), $leaf, $last, (-536870789));
        default:
    }
    return $term;
}
function jur_Pattern_processTerminal($this, $last) {
    var $term, $ch, $newFlags, var$5, $negative, $cc, $number, var$9, var$10, var$11;
    $term = null;
    while (true) {
        a: {
            $ch = $this.$lexemes.$peek();
            if (($ch & (-2147418113)) == (-2147483608)) {
                $this.$lexemes.$next4();
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags0 = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags0;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    if ($this.$lexemes.$peek() != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next4();
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                break c;
                            case -2147483583:
                                break;
                            case -2147483582:
                                $this.$lexemes.$next4();
                                $term = jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                $this.$lexemes.$next4();
                                $term = jur_PreviousMatch__init_();
                                break a;
                            case -2147483558:
                                $this.$lexemes.$next4();
                                $term = new jur_EOLSet;
                                var$5 = $this.$consCount + 1 | 0;
                                $this.$consCount = var$5;
                                jur_EOLSet__init_0($term, var$5);
                                break a;
                            case -2147483550:
                                $this.$lexemes.$next4();
                                $term = jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                $this.$lexemes.$next4();
                                $term = jur_EOISet__init_();
                                break a;
                            case -536870876:
                                $this.$lexemes.$next4();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (jur_Pattern_hasFlag($this, 8)) {
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                                        break a;
                                    }
                                    $term = jur_MultiLineEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                if (jur_Pattern_hasFlag($this, 1)) {
                                    $term = jur_UEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                $term = jur_EOLSet__init_($this.$consCount);
                                break a;
                            case -536870866:
                                $this.$lexemes.$next4();
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_();
                                    break a;
                                }
                                $term = jur_DotSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags0));
                                break a;
                            case -536870821:
                                $this.$lexemes.$next4();
                                $negative = 0;
                                if ($this.$lexemes.$peek() == (-536870818)) {
                                    $negative = 1;
                                    $this.$lexemes.$next4();
                                }
                                $term = jur_Pattern_processRange($this, $negative, $last);
                                if ($this.$lexemes.$peek() != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$setMode(1);
                                $this.$lexemes.$next4();
                                break a;
                            case -536870818:
                                $this.$lexemes.$next4();
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags0));
                                break a;
                            case 0:
                                $cc = $this.$lexemes.$peekSpecial();
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if ($this.$lexemes.$isEmpty()) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                $this.$lexemes.$next4();
                                break a;
                            default:
                                break b;
                        }
                        $this.$lexemes.$next4();
                        $term = jur_SOLSet__init_();
                        break a;
                    }
                    $number = ($ch & 2147483647) - 48 | 0;
                    if ($this.$globalGroupIndex < $number)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next4();
                    $this.$consCount = $this.$consCount + 1 | 0;
                    $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_($number, $this.$consCount) : jur_CIBackReferenceSet__init_($number, $this.$consCount);
                    $this.$backRefs.data[$number].$isBackReferenced = 1;
                    $this.$needsBackRefReplacement = 1;
                    break a;
                }
                if ($ch >= 0 && !$this.$lexemes.$isSpecial()) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    $this.$lexemes.$next4();
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        var$9 = new jur_PatternSyntaxException;
                        var$10 = !$this.$lexemes.$isSpecial() ? jl_Character_toString($ch & 65535) : ($this.$lexemes.$peekSpecial()).$toString();
                        var$11 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0(var$9, var$10, var$11.$toString(), $this.$lexemes.$getIndex());
                        $rt_throw(var$9);
                    }
                    if ($last instanceof jur_FinalSet)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
}
function jur_Pattern_processRange($this, $negative, $last) {
    var $res, $rangeSet;
    $res = jur_Pattern_processRangeExpression($this, $negative);
    $rangeSet = jur_Pattern_processRangeSet($this, $res);
    $rangeSet.$setNext($last);
    return $rangeSet;
}
function jur_Pattern_processRangeExpression($this, $alt) {
    var $res, $buffer, $intersection, $notClosed, $firstInClass, var$7, $cur, $negative, $cs, $$je;
    $res = jur_CharClass__init_3($alt, jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if ($this.$lexemes.$isEmpty())
                    break a;
                $notClosed = $this.$lexemes.$peek() == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($this.$lexemes.$peek()) {
                        case -536870874:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = $this.$lexemes.$next4();
                            if ($this.$lexemes.$peek() != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($this.$lexemes.$lookAhead0() == (-536870821)) {
                                $this.$lexemes.$next4();
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            $this.$lexemes.$next4();
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$peek() == (-536870819))
                                break d;
                            $res.$intersection(jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && $this.$lexemes.$lookAhead0() != (-536870819)) {
                                var$7 = $this.$lexemes;
                                if (var$7.$lookAhead0() != (-536870821) && $buffer >= 0) {
                                    $this.$lexemes.$next4();
                                    $cur = $this.$lexemes.$peek();
                                    if ($this.$lexemes.$isSpecial())
                                        break c;
                                    if ($cur < 0) {
                                        var$7 = $this.$lexemes;
                                        if (var$7.$lookAhead0() != (-536870819)) {
                                            var$7 = $this.$lexemes;
                                            if (var$7.$lookAhead0() != (-536870821) && $buffer >= 0)
                                                break c;
                                        }
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        $res.$add0($buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    $this.$lexemes.$next4();
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 45;
                            $this.$lexemes.$next4();
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                $res.$add($buffer);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next4();
                            $negative = 0;
                            if ($this.$lexemes.$peek() == (-536870818)) {
                                $this.$lexemes.$next4();
                                $negative = 1;
                            }
                            if (!$intersection)
                                $res.$union(jur_Pattern_processRangeExpression($this, $negative));
                            else
                                $res.$intersection(jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            $this.$lexemes.$next4();
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 93;
                            $this.$lexemes.$next4();
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 94;
                            $this.$lexemes.$next4();
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $cs = $this.$lexemes.$peekSpecial();
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                $res.$add11($cs);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next4();
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        $res.$add($buffer);
                    $buffer = $this.$lexemes.$next4();
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            $res.$add($buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Pattern_pattern($this), $this.$lexemes.$getIndex() - 1 | 0));
}
function jur_Pattern_processCharSet($this, $ch) {
    var $isSupplCodePoint;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint)
                return jur_UCISupplCharSet__init_($ch);
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_($ch & 65535);
            return jur_HighSurrogateCharSet__init_($ch & 65535);
        }
    }
    if ($isSupplCodePoint)
        return jur_SupplCharSet__init_($ch);
    if (jur_Lexer_isLowSurrogate($ch))
        return jur_LowSurrogateCharSet__init_($ch & 65535);
    if (!jur_Lexer_isHighSurrogate($ch))
        return jur_CharSet__init_($ch & 65535);
    return jur_HighSurrogateCharSet__init_($ch & 65535);
}
function jur_Pattern_processRangeSet($this, $charClass) {
    var $surrogates, $lowHighSurrRangeSet;
    if (!$charClass.$hasLowHighSurrogates()) {
        if (!$charClass.$mayContainSupplCodepoints2()) {
            if ($charClass.$hasUCI0())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if ($charClass.$hasUCI0())
            return jur_UCISupplRangeSet__init_($charClass);
        return jur_SupplRangeSet__init_($charClass);
    }
    $surrogates = $charClass.$getSurrogates();
    $lowHighSurrRangeSet = jur_LowHighSurrogateRangeSet__init_($surrogates);
    if (!$charClass.$mayContainSupplCodepoints2()) {
        if ($charClass.$hasUCI0())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    }
    if ($charClass.$hasUCI0())
        return jur_CompositeRangeSet__init_(jur_UCISupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
}
function jur_Pattern_compile($pattern) {
    return jur_Pattern_compile0($pattern, 0);
}
function jur_Pattern_finalizeCompile($this) {
    if ($this.$needsBackRefReplacement)
        $this.$start11.$processSecondPass();
}
function jur_Pattern_quote($s) {
    var $sb, $apos, var$4, $apos_0;
    $sb = (jl_StringBuilder__init_()).$append1($rt_s(1088));
    $apos = 0;
    while (true) {
        var$4 = $s.$indexOf0($rt_s(1089), $apos);
        if (var$4 < 0)
            break;
        $apos_0 = var$4 + 2 | 0;
        ($sb.$append1($s.$substring0($apos, $apos_0))).$append1($rt_s(1090));
        $apos = $apos_0;
    }
    return (($sb.$append1($s.$substring($apos))).$append1($rt_s(1089))).$toString();
}
function jur_Pattern_groupCount($this) {
    return $this.$globalGroupIndex;
}
function jur_Pattern_compCount($this) {
    return $this.$compCount + 1 | 0;
}
function jur_Pattern_consCount($this) {
    return $this.$consCount + 1 | 0;
}
function jur_Pattern_getSupplement($ch) {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
}
function jur_Pattern_hasFlag($this, $flag) {
    return ($this.$flags0 & $flag) != $flag ? 0 : 1;
}
function jur_Pattern__init_0($this) {
    jl_Object__init_0($this);
    $this.$backRefs = $rt_createArray(jur_FSet, 10);
    $this.$globalGroupIndex = (-1);
    $this.$compCount = (-1);
    $this.$consCount = (-1);
}
function cgtrd_ParetoDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha10 = 0.0;
    a.$beta5 = 0.0;
}
function cgtrd_ParetoDistribution__init_(var_0, var_1, var_2) {
    var var_3 = new cgtrd_ParetoDistribution();
    cgtrd_ParetoDistribution__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_ParetoDistribution__init_0($this, $generator, $alpha, $beta) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(395)));
}
function cgtrd_ParetoDistribution_getMedian($this) {
    return $this.$alpha10 * jl_Math_pow(2.0, $this.$beta5);
}
function cgtrd_ParetoDistribution_setParameters($this, $a, $b, $c) {
    if ($a > 0.0 && $b > 0.0) {
        $this.$alpha10 = $a;
        $this.$beta5 = 1.0 / $b;
        return 1;
    }
    return 0;
}
function cgtrd_ParetoDistribution_nextDouble($this) {
    return cgtrd_ParetoDistribution_sample($this.$generator, $this.$alpha10, $this.$beta5);
}
function cgtrd_ParetoDistribution_sample($generator, $alpha, $inverseBeta) {
    return $alpha / jl_Math_pow($generator.$nextExclusiveDouble(), $inverseBeta);
}
var ji_UnsupportedEncodingException = $rt_classWithoutFields(ji_IOException);
var jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
function jur_PosAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PosAltGroupQuantifierSet();
    jur_PosAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PosAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PosAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next.$matches($nextIndex, $testString, $matchResult);
}
function jur_PosAltGroupQuantifierSet_setNext($this, $next) {
    $this.$next = $next;
}
var cbgm_Interpolation$12 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$12__init_() {
    var var_0 = new cbgm_Interpolation$12();
    cbgm_Interpolation$12__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$12__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgssu_Touchpad$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgm_Interpolation$13 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$13__init_() {
    var var_0 = new cbgm_Interpolation$13();
    cbgm_Interpolation$13__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$13__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgm_Rectangle = $rt_classWithoutFields();
var cbgm_Rectangle_tmp = null;
var cbgm_Rectangle_tmp2 = null;
function cbgm_Rectangle_$callClinit() {
    cbgm_Rectangle_$callClinit = $rt_eraseClinit(cbgm_Rectangle);
    cbgm_Rectangle__clinit_();
}
function cbgm_Rectangle__init_() {
    var var_0 = new cbgm_Rectangle();
    cbgm_Rectangle__init_0(var_0);
    return var_0;
}
function cbgm_Rectangle__init_0($this) {
    cbgm_Rectangle_$callClinit();
    jl_Object__init_0($this);
}
function cbgm_Rectangle__clinit_() {
    cbgm_Rectangle_tmp = cbgm_Rectangle__init_();
    cbgm_Rectangle_tmp2 = cbgm_Rectangle__init_();
}
var cbgm_Interpolation$14 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$14__init_() {
    var var_0 = new cbgm_Interpolation$14();
    cbgm_Interpolation$14__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$14__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgm_Interpolation$10 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$10__init_() {
    var var_0 = new cbgm_Interpolation$10();
    cbgm_Interpolation$10__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$10__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgm_Interpolation$11 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$11__init_() {
    var var_0 = new cbgm_Interpolation$11();
    cbgm_Interpolation$11__init_0(var_0);
    return var_0;
}
function cbgm_Interpolation$11__init_0($this) {
    cbgm_Interpolation__init_($this);
}
var cbgggp_ParallelArray = $rt_classWithoutFields();
function cgxgbt_TeaGraphics$1() {
    jl_Object.call(this);
    this.$this$044 = null;
}
function cgxgbt_TeaGraphics$1__init_(var_0) {
    var var_1 = new cgxgbt_TeaGraphics$1();
    cgxgbt_TeaGraphics$1__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaGraphics$1__init_0($this, $this$0) {
    $this.$this$044 = $this$0;
    jl_Object__init_0($this);
}
function cgxgbt_TeaGraphics$1_fullscreenChanged($this) {}
function cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0(var$0) {
    var$0.$fullscreenChanged();
}
var cbgm_Polygon = $rt_classWithoutFields();
var cbgggmd_ModelAnimation = $rt_classWithoutFields();
var cbgu_Collections = $rt_classWithoutFields();
var cbgu_Collections_allocateIterators = 0;
var cbgssu_ParticleEffectActor = $rt_classWithoutFields(cbgss_Actor);
var cbgggpi_ParticleControllerInfluencer$Single = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer);
var cbg_InputAdapter = $rt_classWithoutFields();
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category1 = 0;
}
function jur_UnicodeCategory__init_(var_0) {
    var var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_0(var_1, var_0);
    return var_1;
}
function jur_UnicodeCategory__init_0($this, $category) {
    jur_AbstractCharClass__init_($this);
    $this.$category1 = $category;
}
function jur_UnicodeCategory_contains($this, $ch) {
    return $this.$alt0 ^ ($this.$category1 != jl_Character_getType0($ch & 65535) ? 0 : 1);
}
var jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory);
function jur_UnicodeCategoryScope__init_(var_0) {
    var var_1 = new jur_UnicodeCategoryScope();
    jur_UnicodeCategoryScope__init_0(var_1, var_0);
    return var_1;
}
function jur_UnicodeCategoryScope__init_0($this, $category) {
    jur_UnicodeCategory__init_0($this, $category);
}
function jur_UnicodeCategoryScope_contains($this, $ch) {
    return $this.$alt0 ^ (!($this.$category1 >> jl_Character_getType0($ch & 65535) & 1) ? 0 : 1);
}
function cgxgbtp_Blob() {
    var a = this; jl_Object.call(a);
    a.$response = null;
    a.$data3 = null;
    a.$image0 = null;
}
function cgxgbtp_Blob__init_(var_0, var_1) {
    var var_2 = new cgxgbtp_Blob();
    cgxgbtp_Blob__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtp_Blob__init_0($this, $response, $data) {
    jl_Object__init_0($this);
    $this.$data3 = $data;
    $this.$response = $response;
}
function cgxgbtp_Blob_getData($this) {
    return $this.$data3;
}
function cgxgbtp_Blob_getImage($this) {
    return $this.$image0;
}
function cgxgbtp_Blob_setImage($this, $image) {
    $this.$image0 = $image;
}
function cgxgbtp_Blob_length($this) {
    return $this.$data3.length;
}
function cgxgbtp_Blob_get($this, $i) {
    return $this.$data3[$i];
}
function cgxgbtp_Blob_read($this) {
    return cgxgbtp_Blob$1__init_($this);
}
function cgxgbtp_Blob_toBase64($this) {
    var $length, $base64code, $encoded, $i, var$5, $j;
    $length = $this.$data3.length;
    $base64code = $rt_s(487);
    $encoded = jl_StringBuilder__init_0((($length * 4 | 0) / 3 | 0) + 2 | 0);
    $i = 0;
    while ($i < $length) {
        var$5 = $length - $i | 0;
        if (var$5 >= 3) {
            $j = ((($this.$data3[$i] & 255) << 16) + (($this.$data3[$i + 1 | 0] & 255) << 8) | 0) + ($this.$data3[$i + 2 | 0] & 255) | 0;
            $encoded.$append0($base64code.$charAt($j >> 18 & 63));
            $encoded.$append0($base64code.$charAt($j >> 12 & 63));
            $encoded.$append0($base64code.$charAt($j >> 6 & 63));
            $encoded.$append0($base64code.$charAt($j & 63));
        } else if (var$5 < 2) {
            $j = ($this.$data3[$i] & 255) << 16;
            $encoded.$append0($base64code.$charAt($j >> 18 & 63));
            $encoded.$append0($base64code.$charAt($j >> 12 & 63));
            $encoded.$append1($rt_s(1091));
        } else {
            $j = (($this.$data3[$i] & 255) << 16) + (($this.$data3[$i + 1 | 0] & 255) << 8) | 0;
            $encoded.$append0($base64code.$charAt($j >> 18 & 63));
            $encoded.$append0($base64code.$charAt($j >> 12 & 63));
            $encoded.$append0($base64code.$charAt($j >> 6 & 63));
            $encoded.$append1($rt_s(1092));
        }
        $i = $i + 3 | 0;
    }
    return $encoded.$toString();
}
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length5 = 0;
}
function jnc_UnmappableCharacterException__init_(var_0) {
    var var_1 = new jnc_UnmappableCharacterException();
    jnc_UnmappableCharacterException__init_0(var_1, var_0);
    return var_1;
}
function jnc_UnmappableCharacterException__init_0($this, $length) {
    jnc_CharacterCodingException__init_0($this);
    $this.$length5 = $length;
}
function jnc_UnmappableCharacterException_getMessage($this) {
    var var$1, var$2;
    var$1 = $this.$length5;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(1093)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function otcit_FloatAnalyzer$Result() {
    var a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign = 0;
}
function otcit_FloatAnalyzer$Result__init_() {
    var var_0 = new otcit_FloatAnalyzer$Result();
    otcit_FloatAnalyzer$Result__init_0(var_0);
    return var_0;
}
function otcit_FloatAnalyzer$Result__init_0($this) {
    jl_Object__init_0($this);
}
var jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
function jur_UCIDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_UCIDecomposedCharSet();
    jur_UCIDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_UCIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
    jur_DecomposedCharSet__init_0($this, $decomp, $decomposedCharLength);
}
var cbgssu_TiledDrawable = $rt_classWithoutFields(cbgssu_TextureRegionDrawable);
var cbgggpi_DynamicsModifier$CentripetalAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$045 = null;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaWhitespace$1();
    jur_AbstractCharClass$LazyJavaWhitespace$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaWhitespace$1__init_0($this, $this$0) {
    $this.$this$045 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaWhitespace$1_contains($this, $ch) {
    return jl_Character_isWhitespace0($ch);
}
var jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Blending_None = null;
var cbgg_Pixmap$Blending_SourceOver = null;
var cbgg_Pixmap$Blending_$VALUES = null;
function cbgg_Pixmap$Blending_$callClinit() {
    cbgg_Pixmap$Blending_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Blending);
    cbgg_Pixmap$Blending__clinit_();
}
function cbgg_Pixmap$Blending__init_(var_0, var_1) {
    var var_2 = new cbgg_Pixmap$Blending();
    cbgg_Pixmap$Blending__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Pixmap$Blending__init_0($this, var$1, var$2) {
    cbgg_Pixmap$Blending_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Pixmap$Blending__clinit_() {
    cbgg_Pixmap$Blending_None = cbgg_Pixmap$Blending__init_($rt_s(1094), 0);
    cbgg_Pixmap$Blending_SourceOver = cbgg_Pixmap$Blending__init_($rt_s(1095), 1);
    cbgg_Pixmap$Blending_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Blending, [cbgg_Pixmap$Blending_None, cbgg_Pixmap$Blending_SourceOver]);
}
var cgxgbt_TeaApplication$AppState = $rt_classWithoutFields(jl_Enum);
var cgxgbt_TeaApplication$AppState_LOAD_ASSETS = null;
var cgxgbt_TeaApplication$AppState_APP_CREATE = null;
var cgxgbt_TeaApplication$AppState_APP_LOOP = null;
var cgxgbt_TeaApplication$AppState_$VALUES = null;
function cgxgbt_TeaApplication$AppState_$callClinit() {
    cgxgbt_TeaApplication$AppState_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$AppState);
    cgxgbt_TeaApplication$AppState__clinit_();
}
function cgxgbt_TeaApplication$AppState__init_(var_0, var_1) {
    var var_2 = new cgxgbt_TeaApplication$AppState();
    cgxgbt_TeaApplication$AppState__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbt_TeaApplication$AppState_values() {
    cgxgbt_TeaApplication$AppState_$callClinit();
    return cgxgbt_TeaApplication$AppState_$VALUES.$clone();
}
function cgxgbt_TeaApplication$AppState__init_0($this, var$1, var$2) {
    cgxgbt_TeaApplication$AppState_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cgxgbt_TeaApplication$AppState__clinit_() {
    cgxgbt_TeaApplication$AppState_LOAD_ASSETS = cgxgbt_TeaApplication$AppState__init_($rt_s(1096), 0);
    cgxgbt_TeaApplication$AppState_APP_CREATE = cgxgbt_TeaApplication$AppState__init_($rt_s(1097), 1);
    cgxgbt_TeaApplication$AppState_APP_LOOP = cgxgbt_TeaApplication$AppState__init_($rt_s(1098), 2);
    cgxgbt_TeaApplication$AppState_$VALUES = $rt_createArrayFromData(cgxgbt_TeaApplication$AppState, [cgxgbt_TeaApplication$AppState_LOAD_ASSETS, cgxgbt_TeaApplication$AppState_APP_CREATE, cgxgbt_TeaApplication$AppState_APP_LOOP]);
}
var otjt_Uint8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
var cgtt_TeaVMLauncher = $rt_classWithoutFields();
function cgtt_TeaVMLauncher_main($args) {
    var $config;
    $config = cgxgbt_TeaApplicationConfiguration__init_($rt_s(1099));
    $config.$width0 = 512;
    $config.$height0 = 520;
    cgxgbt_TeaApplication__init_(new cgxgbt_TeaApplication, cgt_DistributorDemo__init_(), $config);
}
var jl_Long = $rt_classWithoutFields(jl_Number);
var jl_Long_TYPE = null;
function jl_Long_$callClinit() {
    jl_Long_$callClinit = $rt_eraseClinit(jl_Long);
    jl_Long__clinit_();
}
function jl_Long_parseLong0($s, $radix) {
    jl_Long_$callClinit();
    if ($s !== null)
        return jl_Long_parseLongImpl($s, 0, $s.$length(), $radix);
    $rt_throw(jl_NumberFormatException__init_($rt_s(6)));
}
function jl_Long_parseLongImpl($s, $beginIndex, $endIndex, $radix) {
    var $negative, var$6, $value, var$8, $digit, var$10, var$11, var$12, var$13;
    jl_Long_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        if ($beginIndex == $endIndex)
            $rt_throw(jl_NumberFormatException__init_($rt_s(7)));
        a: {
            $negative = 0;
            switch ($s.$charAt($beginIndex)) {
                case 43:
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                case 45:
                    $negative = 1;
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                default:
            }
            var$6 = $beginIndex;
        }
        $value = Long_ZERO;
        while (var$6 < $endIndex) {
            var$8 = var$6 + 1 | 0;
            $digit = jl_Character_getNumericValue($s.$charAt(var$6));
            if ($digit < 0) {
                var$10 = new jl_NumberFormatException;
                var$11 = $s.$subSequence($beginIndex, $endIndex);
                var$12 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(8)), var$11);
                jl_NumberFormatException__init_1(var$10, jl_StringBuilder_toString(var$12));
                $rt_throw(var$10);
            }
            if ($digit >= $radix) {
                var$12 = new jl_NumberFormatException;
                var$13 = $s.$subSequence($beginIndex, $endIndex);
                var$10 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$10, $rt_s(9)), $radix), $rt_s(10)), var$13);
                jl_NumberFormatException__init_1(var$12, jl_StringBuilder_toString(var$10));
                $rt_throw(var$12);
            }
            $value = Long_add(Long_mul(Long_fromInt($radix), $value), Long_fromInt($digit));
            if (Long_lt($value, Long_ZERO)) {
                if (var$8 == $endIndex && Long_eq($value, Long_create(0, 2147483648)) && $negative)
                    return Long_create(0, 2147483648);
                var$10 = new jl_NumberFormatException;
                var$11 = $s.$subSequence($beginIndex, $endIndex);
                var$12 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(11)), var$11);
                jl_NumberFormatException__init_1(var$10, jl_StringBuilder_toString(var$12));
                $rt_throw(var$10);
            }
            var$6 = var$8;
        }
        if ($negative)
            $value = Long_neg($value);
        return $value;
    }
    var$10 = new jl_NumberFormatException;
    var$11 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$11, $rt_s(12)), $radix);
    jl_NumberFormatException__init_1(var$10, jl_StringBuilder_toString(var$11));
    $rt_throw(var$10);
}
function jl_Long_parseLong($s) {
    jl_Long_$callClinit();
    return jl_Long_parseLong0($s, 10);
}
function jl_Long_numberOfLeadingZeros($i) {
    var $n, var$3, var$4;
    jl_Long_$callClinit();
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    var$4 = Long_shru(var$3, 16);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru(var$4, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 8;
    var$4 = Long_shru(var$3, 4);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru(var$4, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
}
function jl_Long_bitCount($i) {
    var var$2;
    jl_Long_$callClinit();
    var$2 = Long_add(Long_shru(Long_and($i, Long_create(2863311530, 2863311530)), 1), Long_and($i, Long_create(1431655765, 1431655765)));
    var$2 = Long_add(Long_shru(Long_and(var$2, Long_create(3435973836, 3435973836)), 2), Long_and(var$2, Long_create(858993459, 858993459)));
    var$2 = Long_add(Long_shru(Long_and(var$2, Long_create(1886417008, 1886417008)), 4), Long_and(var$2, Long_create(117901063, 117901063)));
    var$2 = Long_add(Long_shru(Long_and(var$2, Long_create(251662080, 251662080)), 8), Long_and(var$2, Long_create(983055, 983055)));
    var$2 = Long_add(Long_shru(Long_and(var$2, Long_create(2031616, 2031616)), 16), Long_and(var$2, Long_create(31, 31)));
    var$2 = Long_add(Long_shru(Long_and(var$2, Long_create(0, 63)), 32), Long_and(var$2, Long_fromInt(63)));
    return Long_lo(var$2);
}
function jl_Long_reverse($i) {
    var var$2;
    jl_Long_$callClinit();
    var$2 = Long_or(Long_shru(Long_and($i, Long_create(2863311530, 2863311530)), 1), Long_shl(Long_and($i, Long_create(1431655765, 1431655765)), 1));
    var$2 = Long_or(Long_shru(Long_and(var$2, Long_create(3435973836, 3435973836)), 2), Long_shl(Long_and(var$2, Long_create(858993459, 858993459)), 2));
    var$2 = Long_or(Long_shru(Long_and(var$2, Long_create(4042322160, 4042322160)), 4), Long_shl(Long_and(var$2, Long_create(252645135, 252645135)), 4));
    var$2 = Long_or(Long_shru(Long_and(var$2, Long_create(4278255360, 4278255360)), 8), Long_shl(Long_and(var$2, Long_create(16711935, 16711935)), 8));
    var$2 = Long_or(Long_shru(Long_and(var$2, Long_create(4294901760, 4294901760)), 16), Long_shl(Long_and(var$2, Long_create(65535, 65535)), 16));
    var$2 = Long_or(Long_shru(Long_and(var$2, Long_create(0, 4294967295)), 32), Long_shl(Long_and(var$2, Long_create(4294967295, 0)), 32));
    return var$2;
}
function jl_Long_divideUnsigned(var$1, var$2) {
    return Long_udiv(var$1, var$2);
}
function jl_Long_remainderUnsigned(var$1, var$2) {
    return Long_urem(var$1, var$2);
}
function jl_Long_compareUnsigned(var$1, var$2) {
    return Long_ucompare(var$1, var$2);
}
function jl_Long__clinit_() {
    jl_Long_TYPE = $rt_cls($rt_longcls());
}
function cgt_ChiSquareScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist11 = null;
    a.$batch16 = null;
    a.$renderer15 = null;
    a.$amounts15 = null;
    a.$iterations15 = Long_ZERO;
    a.$font17 = null;
    a.$viewport15 = null;
    a.$mainGame15 = null;
}
function cgt_ChiSquareScreen__init_(var_0) {
    var var_1 = new cgt_ChiSquareScreen();
    cgt_ChiSquareScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ChiSquareScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font17 = $this.$mainGame15.$font0;
    a: {
        try {
            var$1 = new cgtrd_ChiSquareDistribution;
            var$2 = $this.$mainGame15.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ChiSquareDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a | 0);
            $this.$dist11 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist11 = cgtrd_ChiSquareDistribution__init_($this.$mainGame15.$random0, 1);
    }
    $this.$batch16 = $this.$mainGame15.$batch0;
    $this.$viewport15 = cbguv_ScreenViewport__init_();
    $this.$renderer15 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts15, Long_ZERO);
    $this.$iterations15 = Long_ZERO;
}
function cgt_ChiSquareScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts15 = $rt_createLongArray(512);
    $this.$iterations15 = Long_ZERO;
    $this.$mainGame15 = $main;
}
function cgt_ChiSquareScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame15.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame15.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport15.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts15, Long_ZERO);
        $this.$iterations15 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts15, Long_ZERO);
        $this.$iterations15 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts15, Long_ZERO);
        $this.$iterations15 = Long_ZERO;
    }
    $this.$iterations15 = Long_add($this.$iterations15, Long_fromInt(1));
    var$3 = $this.$dist11;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist11.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts15.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer15.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer15.$color($color);
        var$3 = $this.$renderer15;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer15.$color($color);
        $this.$renderer15.$vertex(var$9, Long_toNumber(Long_div($this.$amounts15.data[$x], $this.$iterations15)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer15.$color((-6.221923240859403E37));
        var$3 = $this.$renderer15;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer15.$color((-6.221923240859403E37));
        $this.$renderer15.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer15.$end();
    $this.$batch16.$setProjectionMatrix($camera.$combined);
    $this.$batch16.$begin0();
    var$3 = $this.$font17;
    var$12 = $this.$batch16;
    var$6 = $rt_createArray(jl_Object, 3);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf($this.$dist11.$getMean());
    var$13[2] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1100), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font17.$draw($this.$batch16, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font17.$draw($this.$batch16, $rt_s(1101), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch16.$end();
}
function cgt_ChiSquareScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport15.$update0($width, $height, 1);
    $this.$viewport15.$apply(1);
}
function jur_SequenceSet$IntHash() {
    var a = this; jl_Object.call(a);
    a.$table = null;
    a.$values5 = null;
    a.$mask2 = 0;
    a.$size9 = 0;
}
function jur_SequenceSet$IntHash__init_(var_0) {
    var var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
}
function jur_SequenceSet$IntHash__init_0($this, $size) {
    jl_Object__init_0($this);
    while ($size >= $this.$mask2) {
        $this.$mask2 = $this.$mask2 << 1 | 1;
    }
    $this.$mask2 = $this.$mask2 << 1 | 1;
    $this.$table = $rt_createIntArray($this.$mask2 + 1 | 0);
    $this.$values5 = $rt_createIntArray($this.$mask2 + 1 | 0);
    $this.$size9 = $size;
}
function jur_SequenceSet$IntHash_put($this, $key, $value) {
    var $i, $hashCode, var$5;
    $i = 0;
    $hashCode = $key & $this.$mask2;
    while ($this.$table.data[$hashCode] && $this.$table.data[$hashCode] != $key) {
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask2;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask2;
    }
    $this.$table.data[$hashCode] = $key;
    $this.$values5.data[$hashCode] = $value;
}
function jur_SequenceSet$IntHash_get($this, $key) {
    var $hashCode, $i, $storedKey, var$5;
    $hashCode = $key & $this.$mask2;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values5.data[$hashCode];
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask2;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask2;
    }
    return $this.$size9;
}
var jl_ArithmeticException = $rt_classWithoutFields(jl_RuntimeException);
function jl_ArithmeticException__init_(var_0) {
    var var_1 = new jl_ArithmeticException();
    jl_ArithmeticException__init_0(var_1, var_0);
    return var_1;
}
function jl_ArithmeticException__init_0($this, $message) {
    jl_RuntimeException__init_4($this, $message);
}
var cbgssu_Image = $rt_classWithoutFields(cbgssu_Widget);
var jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaLowerCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaLowerCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLowerCase_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLowerCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
var cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum);
var cbgg_Pixmap$Format_Alpha = null;
var cbgg_Pixmap$Format_Intensity = null;
var cbgg_Pixmap$Format_LuminanceAlpha = null;
var cbgg_Pixmap$Format_RGB565 = null;
var cbgg_Pixmap$Format_RGBA4444 = null;
var cbgg_Pixmap$Format_RGB888 = null;
var cbgg_Pixmap$Format_RGBA8888 = null;
var cbgg_Pixmap$Format_$VALUES = null;
function cbgg_Pixmap$Format_$callClinit() {
    cbgg_Pixmap$Format_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Format);
    cbgg_Pixmap$Format__clinit_();
}
function cbgg_Pixmap$Format__init_(var_0, var_1) {
    var var_2 = new cbgg_Pixmap$Format();
    cbgg_Pixmap$Format__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_Pixmap$Format__init_0($this, var$1, var$2) {
    cbgg_Pixmap$Format_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_Pixmap$Format_fromGdx2DPixmapFormat($format) {
    var var$2, var$3;
    cbgg_Pixmap$Format_$callClinit();
    if ($format == 1)
        return cbgg_Pixmap$Format_Alpha;
    if ($format == 2)
        return cbgg_Pixmap$Format_LuminanceAlpha;
    if ($format == 5)
        return cbgg_Pixmap$Format_RGB565;
    if ($format == 6)
        return cbgg_Pixmap$Format_RGBA4444;
    if ($format == 3)
        return cbgg_Pixmap$Format_RGB888;
    if ($format == 4)
        return cbgg_Pixmap$Format_RGBA8888;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(1102)), $format);
    cbgu_GdxRuntimeException__init_(var$2, jl_StringBuilder_toString(var$3));
    $rt_throw(var$2);
}
function cbgg_Pixmap$Format__clinit_() {
    cbgg_Pixmap$Format_Alpha = cbgg_Pixmap$Format__init_($rt_s(60), 0);
    cbgg_Pixmap$Format_Intensity = cbgg_Pixmap$Format__init_($rt_s(1103), 1);
    cbgg_Pixmap$Format_LuminanceAlpha = cbgg_Pixmap$Format__init_($rt_s(1104), 2);
    cbgg_Pixmap$Format_RGB565 = cbgg_Pixmap$Format__init_($rt_s(1105), 3);
    cbgg_Pixmap$Format_RGBA4444 = cbgg_Pixmap$Format__init_($rt_s(1106), 4);
    cbgg_Pixmap$Format_RGB888 = cbgg_Pixmap$Format__init_($rt_s(1107), 5);
    cbgg_Pixmap$Format_RGBA8888 = cbgg_Pixmap$Format__init_($rt_s(1108), 6);
    cbgg_Pixmap$Format_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Format, [cbgg_Pixmap$Format_Alpha, cbgg_Pixmap$Format_Intensity, cbgg_Pixmap$Format_LuminanceAlpha, cbgg_Pixmap$Format_RGB565, cbgg_Pixmap$Format_RGBA4444, cbgg_Pixmap$Format_RGB888, cbgg_Pixmap$Format_RGBA8888]);
}
var cbgggpi_RegionInfluencer$Random = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
function cgxgbt_TeaApplicationConfiguration() {
    var a = this; jl_Object.call(a);
    a.$useNativePixmap = 0;
    a.$windowListener = null;
    a.$preloadAssets = 0;
    a.$storagePrefix = null;
    a.$showDownloadLogs = 0;
    a.$canvasID = null;
    a.$width0 = 0;
    a.$height0 = 0;
    a.$padHorizontal = 0;
    a.$padVertical = 0;
    a.$stencil = 0;
    a.$antialiasing = 0;
    a.$alpha3 = 0;
    a.$premultipliedAlpha = 0;
    a.$preserveDrawingBuffer = 0;
    a.$useDebugGL = 0;
    a.$usePhysicalPixels = 0;
}
function cgxgbt_TeaApplicationConfiguration__init_(var_0) {
    var var_1 = new cgxgbt_TeaApplicationConfiguration();
    cgxgbt_TeaApplicationConfiguration__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaApplicationConfiguration_isFixedSizeApplication($this) {
    return $this.$width0 && $this.$height0 ? 1 : 0;
}
function cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication($this) {
    return !$this.$width0 && !$this.$height0 ? 1 : 0;
}
function cgxgbt_TeaApplicationConfiguration__init_0($this, $canvasID) {
    jl_Object__init_0($this);
    $this.$useNativePixmap = 0;
    $this.$preloadAssets = 1;
    $this.$storagePrefix = $rt_s(45);
    $this.$showDownloadLogs = 0;
    $this.$width0 = (-1);
    $this.$height0 = (-1);
    $this.$padHorizontal = 0;
    $this.$padVertical = 0;
    $this.$stencil = 0;
    $this.$antialiasing = 0;
    $this.$alpha3 = 0;
    $this.$premultipliedAlpha = 0;
    $this.$preserveDrawingBuffer = 0;
    $this.$useDebugGL = 0;
    $this.$canvasID = $canvasID;
    cgxgbtd_TeaTypedArrays__init_(new cgxgbtd_TeaTypedArrays);
}
function cgt_ZipfianScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist12 = null;
    a.$batch17 = null;
    a.$renderer16 = null;
    a.$amounts16 = null;
    a.$iterations16 = Long_ZERO;
    a.$font18 = null;
    a.$viewport16 = null;
    a.$mainGame16 = null;
}
function cgt_ZipfianScreen__init_(var_0) {
    var var_1 = new cgt_ZipfianScreen();
    cgt_ZipfianScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ZipfianScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font18 = $this.$mainGame16.$font0;
    a: {
        try {
            var$1 = new cgtrd_ZipfianDistribution;
            var$2 = $this.$mainGame16.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ZipfianDistribution__init_0(var$1, var$2, Long_fromNumber(cgt_DistributorDemo_a), cgt_DistributorDemo_b);
            $this.$dist12 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist12 = cgtrd_ZipfianDistribution__init_($this.$mainGame16.$random0, Long_fromInt(16), 0.5);
    }
    $this.$batch17 = $this.$mainGame16.$batch0;
    $this.$viewport16 = cbguv_ScreenViewport__init_();
    $this.$renderer16 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts16, Long_ZERO);
    $this.$iterations16 = Long_ZERO;
}
function cgt_ZipfianScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts16 = $rt_createLongArray(512);
    $this.$iterations16 = Long_ZERO;
    $this.$mainGame16 = $main;
}
function cgt_ZipfianScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame16.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame16.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport16.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-2.5) : 2.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts16, Long_ZERO);
        $this.$iterations16 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts16, Long_ZERO);
        $this.$iterations16 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts16, Long_ZERO);
        $this.$iterations16 = Long_ZERO;
    }
    $this.$iterations16 = Long_add($this.$iterations16, Long_fromInt(1));
    var$3 = $this.$dist12;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, 0.0);
    $i = 0;
    while ($i < 4096) {
        $m = $this.$dist12.$nextDouble() | 0;
        if ($m >= 0 && $m < 32) {
            var$6 = $this.$amounts16.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer16.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer16.$color($color);
        var$3 = $this.$renderer16;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer16.$color($color);
        $this.$renderer16.$vertex(var$9, Long_toNumber(Long_div($this.$amounts16.data[$x >> 4], $this.$iterations16)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer16.$color((-6.221923240859403E37));
        var$3 = $this.$renderer16;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer16.$color((-6.221923240859403E37));
        $this.$renderer16.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer16.$end();
    $this.$batch17.$setProjectionMatrix($camera.$combined);
    $this.$batch17.$begin0();
    var$3 = $this.$font18;
    var$12 = $this.$batch17;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist12.$getZeta());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1109), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font18.$draw($this.$batch17, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font18.$draw($this.$batch17, $rt_s(1110), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch17.$end();
}
function cgt_ZipfianScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport16.$update0($width, $height, 1);
    $this.$viewport16.$apply(1);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$046 = null;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1();
    jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0($this, $this$0) {
    $this.$this$046 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains($this, $ch) {
    return jl_Character_isLetterOrDigit0($ch);
}
function jur_CharClass$18() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$047 = null;
}
function jur_CharClass$18__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$18();
    jur_CharClass$18__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$18__init_0($this, $this$0, var$2) {
    $this.$this$047 = $this$0;
    $this.$val$bs = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$18_contains($this, $ch) {
    return $this.$alt0 ^ $this.$val$bs.$get9($ch);
}
function jur_CharClass$18_toString($this) {
    var $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$val$bs.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append15(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$val$bs.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
}
var jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
function jur_PossessiveGroupQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_PossessiveGroupQuantifierSet();
    jur_PossessiveGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_PossessiveGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
}
function jur_PossessiveGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
var cbgmo_RectangleMapObject = $rt_classWithoutFields(cbgm_MapObject);
function jur_CharClass$13() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$this$048 = null;
}
function jur_CharClass$13__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$13();
    jur_CharClass$13__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$13__init_0($this, $this$0, var$2) {
    $this.$this$048 = $this$0;
    $this.$val$clazz3 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$13_contains($this, $ch) {
    return $this.$val$clazz3.$contains0($ch);
}
function jur_CharClass$12() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$this$049 = null;
}
function jur_CharClass$12__init_(var_0, var_1) {
    var var_2 = new jur_CharClass$12();
    jur_CharClass$12__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_CharClass$12__init_0($this, $this$0, var$2) {
    $this.$this$049 = $this$0;
    $this.$val$clazz4 = var$2;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$12_contains($this, $ch) {
    return $this.$val$clazz4.$contains0($ch) ? 0 : 1;
}
function jur_CharClass$11() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt5 = 0;
    a.$val$nb1 = null;
    a.$val$clazz5 = null;
    a.$this$050 = null;
}
function jur_CharClass$11__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$11();
    jur_CharClass$11__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$11__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$050 = $this$0;
    $this.$val$curAlt5 = var$2;
    $this.$val$nb1 = var$3;
    $this.$val$clazz5 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$11_contains($this, $ch) {
    return !($this.$val$curAlt5 ^ $this.$val$nb1.$contains0($ch)) && !$this.$val$clazz5.$contains0($ch) ? 0 : 1;
}
function jur_CharClass$10() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt6 = 0;
    a.$val$nb2 = null;
    a.$val$clazz6 = null;
    a.$this$051 = null;
}
function jur_CharClass$10__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$10();
    jur_CharClass$10__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$10__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$051 = $this$0;
    $this.$val$curAlt6 = var$2;
    $this.$val$nb2 = var$3;
    $this.$val$clazz6 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$10_contains($this, $ch) {
    return !($this.$val$curAlt6 ^ $this.$val$nb2.$contains0($ch)) && !$this.$val$clazz6.$contains0($ch) ? 1 : 0;
}
function cgt_DigitalSinScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$random5 = null;
    a.$batch18 = null;
    a.$renderer17 = null;
    a.$amounts17 = null;
    a.$iterations17 = Long_ZERO;
    a.$font19 = null;
    a.$viewport17 = null;
    a.$mainGame17 = null;
}
function cgt_DigitalSinScreen__init_(var_0) {
    var var_1 = new cgt_DigitalSinScreen();
    cgt_DigitalSinScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_DigitalSinScreen_show($this) {
    $this.$font19 = $this.$mainGame17.$font0;
    $this.$random5 = $this.$mainGame17.$random0;
    $this.$batch18 = $this.$mainGame17.$batch0;
    $this.$viewport17 = cbguv_ScreenViewport__init_();
    $this.$renderer17 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts17, Long_ZERO);
    $this.$iterations17 = Long_ZERO;
}
function cgt_DigitalSinScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts17 = $rt_createLongArray(512);
    $this.$iterations17 = Long_ZERO;
    $this.$mainGame17 = $main;
}
function cgt_DigitalSinScreen_render($this, $delta) {
    var $camera, $i, $m, var$5, $x, $color, var$8, var$9, $j, var$11, var$12, var$13;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame17.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame17.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport17.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        ju_Arrays_fill($this.$amounts17, Long_ZERO);
        $this.$iterations17 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        ju_Arrays_fill($this.$amounts17, Long_ZERO);
        $this.$iterations17 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        ju_Arrays_fill($this.$amounts17, Long_ZERO);
        $this.$iterations17 = Long_ZERO;
    }
    $this.$iterations17 = Long_add($this.$iterations17, Long_fromInt(1));
    $i = 0;
    while ($i < 262144) {
        $m = cgtd_TrigTools_sin($this.$random5.$nextExclusiveFloat()) * 128.0 + 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$5 = $this.$amounts17.data;
            var$5[$m] = Long_add(var$5[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer17.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer17.$color($color);
        var$8 = $this.$renderer17;
        var$9 = $x;
        var$8.$vertex(var$9, 0.0, 0.0);
        $this.$renderer17.$color($color);
        $this.$renderer17.$vertex(var$9, 0.125 * Long_toNumber($this.$amounts17.data[$x]) / Long_toNumber($this.$iterations17), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer17.$color((-6.221923240859403E37));
        var$8 = $this.$renderer17;
        var$11 = $j;
        var$8.$vertex(0.0, var$11, 0.0);
        $this.$renderer17.$color((-6.221923240859403E37));
        $this.$renderer17.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer17.$end();
    $this.$batch18.$setProjectionMatrix($camera.$combined);
    $this.$batch18.$begin0();
    var$12 = $this.$font19;
    var$13 = $this.$batch18;
    var$5 = $rt_createArray(jl_Object, 1);
    var$5.data[0] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$12.$draw(var$13, cgt_Stringf_format($rt_s(1111), var$5), 64.0, 522.0, 384.0, 1, 1);
    $this.$batch18.$end();
}
function cgt_DigitalSinScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport17.$update0($width, $height, 1);
    $this.$viewport17.$apply(1);
}
function jur_CharClass$17() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb3 = null;
    a.$val$clazz7 = null;
    a.$this$052 = null;
}
function jur_CharClass$17__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$17();
    jur_CharClass$17__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$17__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$052 = $this$0;
    $this.$val$curAlt7 = var$2;
    $this.$val$nb3 = var$3;
    $this.$val$clazz7 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$17_contains($this, $ch) {
    return $this.$val$curAlt7 ^ $this.$val$nb3.$contains0($ch) && $this.$val$clazz7.$contains0($ch) ? 1 : 0;
}
function jur_CharClass$16() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb4 = null;
    a.$val$clazz8 = null;
    a.$this$053 = null;
}
function jur_CharClass$16__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new jur_CharClass$16();
    jur_CharClass$16__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function jur_CharClass$16__init_0($this, $this$0, var$2, var$3, var$4) {
    $this.$this$053 = $this$0;
    $this.$val$curAlt8 = var$2;
    $this.$val$nb4 = var$3;
    $this.$val$clazz8 = var$4;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$16_contains($this, $ch) {
    return $this.$val$curAlt8 ^ $this.$val$nb4.$contains0($ch) && $this.$val$clazz8.$contains0($ch) ? 0 : 1;
}
function jur_CharClass$15() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$val$curAlt9 = 0;
    a.$this$054 = null;
}
function jur_CharClass$15__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$15();
    jur_CharClass$15__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$15__init_0($this, $this$0, var$2, var$3) {
    $this.$this$054 = $this$0;
    $this.$val$clazz9 = var$2;
    $this.$val$curAlt9 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$15_contains($this, $ch) {
    return $this.$val$clazz9.$contains0($ch) && $this.$val$curAlt9 ^ $this.$this$054.$bits.$get9($ch) ? 1 : 0;
}
function jur_CharClass$14() {
    var a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt10 = 0;
    a.$this$055 = null;
}
function jur_CharClass$14__init_(var_0, var_1, var_2) {
    var var_3 = new jur_CharClass$14();
    jur_CharClass$14__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_CharClass$14__init_0($this, $this$0, var$2, var$3) {
    $this.$this$055 = $this$0;
    $this.$val$clazz10 = var$2;
    $this.$val$curAlt10 = var$3;
    jur_AbstractCharClass__init_($this);
}
function jur_CharClass$14_contains($this, $ch) {
    return $this.$val$clazz10.$contains0($ch) && $this.$val$curAlt10 ^ $this.$this$055.$bits.$get9($ch) ? 0 : 1;
}
var cbgssu_CheckBox$CheckBoxStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle);
var jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder);
function jl_StringBuilder__init_0(var_0) {
    var var_1 = new jl_StringBuilder();
    jl_StringBuilder__init_1(var_1, var_0);
    return var_1;
}
function jl_StringBuilder__init_() {
    var var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_2(var_0);
    return var_0;
}
function jl_StringBuilder__init_1($this, $capacity) {
    jl_AbstractStringBuilder__init_2($this, $capacity);
}
function jl_StringBuilder__init_2($this) {
    jl_AbstractStringBuilder__init_1($this);
}
function jl_StringBuilder_append($this, $obj) {
    jl_AbstractStringBuilder_append($this, $obj);
    return $this;
}
function jl_StringBuilder_append4($this, $string) {
    jl_AbstractStringBuilder_append0($this, $string);
    return $this;
}
function jl_StringBuilder_append1($this, $value) {
    jl_AbstractStringBuilder_append1($this, $value);
    return $this;
}
function jl_StringBuilder_append5($this, $value) {
    jl_AbstractStringBuilder_append3($this, $value);
    return $this;
}
function jl_StringBuilder_append3($this, $value) {
    jl_AbstractStringBuilder_append4($this, $value);
    return $this;
}
function jl_StringBuilder_append2($this, $value) {
    jl_AbstractStringBuilder_append5($this, $value);
    return $this;
}
function jl_StringBuilder_append0($this, $c) {
    jl_AbstractStringBuilder_append6($this, $c);
    return $this;
}
function jl_StringBuilder_append6($this, $chars, $offset, $len) {
    jl_AbstractStringBuilder_append9($this, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_append7($this, $chars) {
    jl_AbstractStringBuilder_append10($this, $chars);
    return $this;
}
function jl_StringBuilder_insert($this, $target, $value) {
    jl_AbstractStringBuilder_insert1($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert0($this, $target, $value) {
    jl_AbstractStringBuilder_insert3($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert1($this, $target, $value) {
    jl_AbstractStringBuilder_insert4($this, $target, $value);
    return $this;
}
function jl_StringBuilder_insert2($this, $index, $chars, $offset, $len) {
    jl_AbstractStringBuilder_insert8($this, $index, $chars, $offset, $len);
    return $this;
}
function jl_StringBuilder_insert3($this, $index, $obj) {
    jl_AbstractStringBuilder_insert6($this, $index, $obj);
    return $this;
}
function jl_StringBuilder_insert4($this, $index, $c) {
    jl_AbstractStringBuilder_insert5($this, $index, $c);
    return $this;
}
function jl_StringBuilder_delete($this, $start, $end) {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
}
function jl_StringBuilder_deleteCharAt($this, $index) {
    jl_AbstractStringBuilder_deleteCharAt($this, $index);
    return $this;
}
function jl_StringBuilder_insert5($this, $index, $string) {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
}
function jl_StringBuilder_substring($this, var$1, var$2) {
    return jl_AbstractStringBuilder_substring($this, var$1, var$2);
}
function jl_StringBuilder_setLength($this, var$1) {
    jl_AbstractStringBuilder_setLength($this, var$1);
}
function jl_StringBuilder_getChars($this, var$1, var$2, var$3, var$4) {
    jl_AbstractStringBuilder_getChars($this, var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_subSequence($this, var$1, var$2) {
    return jl_AbstractStringBuilder_subSequence($this, var$1, var$2);
}
function jl_StringBuilder_insert6($this, var$1, var$2, var$3, var$4) {
    return $this.$insert13(var$1, var$2, var$3, var$4);
}
function jl_StringBuilder_append8($this, var$1, var$2, var$3) {
    return $this.$append20(var$1, var$2, var$3);
}
function jl_StringBuilder_length($this) {
    return jl_AbstractStringBuilder_length($this);
}
function jl_StringBuilder_toString($this) {
    return jl_AbstractStringBuilder_toString($this);
}
function jl_StringBuilder_ensureCapacity($this, var$1) {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
}
function jl_StringBuilder_insert7($this, var$1, var$2) {
    return $this.$insert14(var$1, var$2);
}
function jl_StringBuilder_insert8($this, var$1, var$2) {
    return $this.$insert15(var$1, var$2);
}
function jl_StringBuilder_insert9($this, var$1, var$2) {
    return $this.$insert16(var$1, var$2);
}
function jl_StringBuilder_insert10($this, var$1, var$2) {
    return $this.$insert17(var$1, var$2);
}
function jl_StringBuilder_insert11($this, var$1, var$2) {
    return $this.$insert18(var$1, var$2);
}
function jl_StringBuilder_insert12($this, var$1, var$2) {
    return $this.$insert19(var$1, var$2);
}
var ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException);
function ju_ConcurrentModificationException__init_() {
    var var_0 = new ju_ConcurrentModificationException();
    ju_ConcurrentModificationException__init_0(var_0);
    return var_0;
}
function ju_ConcurrentModificationException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var ju_Hashtable$1 = $rt_classWithoutFields();
function ju_Hashtable$1__init_() {
    var var_0 = new ju_Hashtable$1();
    ju_Hashtable$1__init_0(var_0);
    return var_0;
}
function ju_Hashtable$1__init_0($this) {
    jl_Object__init_0($this);
}
var cbgggpr_BillboardControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
var ju_Hashtable$2 = $rt_classWithoutFields();
function ju_Hashtable$2__init_() {
    var var_0 = new ju_Hashtable$2();
    ju_Hashtable$2__init_0(var_0);
    return var_0;
}
function ju_Hashtable$2__init_0($this) {
    jl_Object__init_0($this);
}
function cgxgbt_TeaNet() {
    jl_Object.call(this);
    this.$httpResponseListeners = null;
}
function cgxgbt_TeaNet__init_() {
    var var_0 = new cgxgbt_TeaNet();
    cgxgbt_TeaNet__init_0(var_0);
    return var_0;
}
function cgxgbt_TeaNet__init_0($this) {
    jl_Object__init_0($this);
    $this.$httpResponseListeners = ju_HashMap__init_1(16);
}
var cbgggpv_ScaledNumericValue = $rt_classWithoutFields(cbgggpv_RangedNumericValue);
var cbgssa_VisibleAction = $rt_classWithoutFields(cbgss_Action);
var cbgggpi_ColorInfluencer$Random = $rt_classWithoutFields(cbgggpi_ColorInfluencer);
function cbgg_VertexAttributes() {
    var a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$vertexSize = 0;
    a.$mask3 = Long_ZERO;
    a.$boneWeightUnits = 0;
    a.$textureCoordinates = 0;
}
function cbgg_VertexAttributes__init_(var_0) {
    var var_1 = new cbgg_VertexAttributes();
    cbgg_VertexAttributes__init_0(var_1, var_0);
    return var_1;
}
function cbgg_VertexAttributes__init_0($this, $attributes) {
    var var$2, var$3, $list, $i;
    var$2 = $attributes.data;
    jl_Object__init_0($this);
    $this.$mask3 = Long_fromInt(-1);
    $this.$boneWeightUnits = (-1);
    $this.$textureCoordinates = (-1);
    var$3 = var$2.length;
    if (!var$3)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1112)));
    $list = $rt_createArray(cbgg_VertexAttribute, var$3);
    $i = 0;
    while ($i < var$3) {
        $list.data[$i] = var$2[$i];
        $i = $i + 1 | 0;
    }
    $this.$attributes3 = $list;
    $this.$vertexSize = cbgg_VertexAttributes_calculateOffsets($this);
}
function cbgg_VertexAttributes_calculateOffsets($this) {
    var $count, $i, $attribute;
    $count = 0;
    $i = 0;
    while ($i < $this.$attributes3.data.length) {
        $attribute = $this.$attributes3.data[$i];
        $attribute.$offset = $count;
        $count = $count + cbgg_VertexAttribute_getSizeInBytes($attribute) | 0;
        $i = $i + 1 | 0;
    }
    return $count;
}
function cbgg_VertexAttributes_size($this) {
    return $this.$attributes3.data.length;
}
function cbgg_VertexAttributes_get($this, $index) {
    return $this.$attributes3.data[$index];
}
var cbgm_CumulativeDistribution$CumulativeValue = $rt_classWithoutFields();
function cgt_PowerScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist13 = null;
    a.$batch19 = null;
    a.$renderer18 = null;
    a.$amounts18 = null;
    a.$iterations18 = Long_ZERO;
    a.$font20 = null;
    a.$viewport18 = null;
    a.$mainGame18 = null;
}
function cgt_PowerScreen__init_(var_0) {
    var var_1 = new cgt_PowerScreen();
    cgt_PowerScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_PowerScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font20 = $this.$mainGame18.$font0;
    a: {
        try {
            var$1 = new cgtrd_PowerDistribution;
            var$2 = $this.$mainGame18.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_PowerDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist13 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist13 = cgtrd_PowerDistribution__init_($this.$mainGame18.$random0, 1.0, 1.0);
    }
    $this.$batch19 = $this.$mainGame18.$batch0;
    $this.$viewport18 = cbguv_ScreenViewport__init_();
    $this.$renderer18 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts18, Long_ZERO);
    $this.$iterations18 = Long_ZERO;
}
function cgt_PowerScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts18 = $rt_createLongArray(512);
    $this.$iterations18 = Long_ZERO;
    $this.$mainGame18 = $main;
}
function cgt_PowerScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame18.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame18.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport18.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts18, Long_ZERO);
        $this.$iterations18 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts18, Long_ZERO);
        $this.$iterations18 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts18, Long_ZERO);
        $this.$iterations18 = Long_ZERO;
    }
    $this.$iterations18 = Long_add($this.$iterations18, Long_fromInt(1));
    var$3 = $this.$dist13;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist13.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts18.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer18.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer18.$color($color);
        var$3 = $this.$renderer18;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer18.$color($color);
        $this.$renderer18.$vertex(var$9, Long_toNumber(Long_div($this.$amounts18.data[$x], $this.$iterations18)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer18.$color((-6.221923240859403E37));
        var$3 = $this.$renderer18;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer18.$color((-6.221923240859403E37));
        $this.$renderer18.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer18.$end();
    $this.$batch19.$setProjectionMatrix($camera.$combined);
    $this.$batch19.$begin0();
    var$3 = $this.$font20;
    var$12 = $this.$batch19;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist13.$getMean());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1113), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font20.$draw($this.$batch19, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font20.$draw($this.$batch19, $rt_s(52), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch19.$end();
}
function cgt_PowerScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport18.$update0($width, $height, 1);
    $this.$viewport18.$apply(1);
}
var cbgmc_Sphere = $rt_classWithoutFields();
var cbgssu_SelectBox$SelectBoxStyle = $rt_classWithoutFields();
var cgt_Ziggurat = $rt_classWithoutFields();
var cgt_Ziggurat_TABLE = null;
function cgt_Ziggurat_$callClinit() {
    cgt_Ziggurat_$callClinit = $rt_eraseClinit(cgt_Ziggurat);
    cgt_Ziggurat__clinit_();
}
function cgt_Ziggurat_normal($state) {
    var $idx, var$3, $u, var$5, var$6, $x, $y, $f0, $f1;
    cgt_Ziggurat_$callClinit();
    a: {
        while (true) {
            $idx = Long_lo(Long_and($state, Long_fromInt(255)));
            var$3 = Long_shru($state, 11);
            $u = Long_toNumber(var$3) * 1.1102230246251565E-16 * cgt_Ziggurat_TABLE.data[$idx];
            var$5 = cgt_Ziggurat_TABLE.data;
            var$6 = $idx + 1 | 0;
            if ($u < var$5[var$6])
                break;
            if (!$idx) {
                while (true) {
                    var$3 = Long_add(Long_xor($state, Long_shru($state, 11)), Long_create(2135587861, 2654435769));
                    $x = jl_Math_log(Long_toNumber(Long_add(Long_and(var$3, Long_create(4294967295, 2097151)), Long_fromInt(1))) * 1.1102230246251565E-16) * 0.2736612373297584;
                    $state = Long_add(Long_xor(var$3, Long_shru(var$3, 11)), Long_create(2135587861, 2654435769));
                    $y = jl_Math_log(Long_toNumber(Long_add(Long_and($state, Long_create(4294967295, 2097151)), Long_fromInt(1))) * 1.1102230246251565E-16);
                    if ( -($y + $y) >= $x * $x)
                        break;
                }
                return Long_ne(Long_and(Long_fromInt(jl_Long_bitCount($state)), Long_fromInt(1)), Long_ZERO) ? 3.654152885361007 - $x : $x - 3.654152885361007;
            }
            $y = $u * $u;
            $f0 = jl_Math_exp((-0.5) * (cgt_Ziggurat_TABLE.data[$idx] * cgt_Ziggurat_TABLE.data[$idx] - $y));
            $f1 = jl_Math_exp((-0.5) * (cgt_Ziggurat_TABLE.data[var$6] * cgt_Ziggurat_TABLE.data[var$6] - $y));
            $state = Long_add(Long_xor($state, var$3), Long_create(2135587861, 2654435769));
            if ($f1 + Long_toNumber(Long_and($state, Long_create(4294967295, 2097151))) * 1.1102230246251565E-16 * ($f0 - $f1) < 1.0)
                break a;
        }
    }
    return jl_Math_copySign($u, Long_toNumber(Long_sub(Long_fromInt(256), Long_and($state, Long_fromInt(512)))));
}
function cgt_Ziggurat__clinit_() {
    var $f, $i, $xx;
    cgt_Ziggurat_TABLE = $rt_createDoubleArray(257);
    $f = jl_Math_exp((-6.676416654796086));
    cgt_Ziggurat_TABLE.data[0] = 0.004928673233974655 / $f;
    cgt_Ziggurat_TABLE.data[1] = 3.654152885361007;
    $i = 2;
    while ($i < 256) {
        $xx = jl_Math_log(0.004928673233974655 / cgt_Ziggurat_TABLE.data[$i - 1 | 0] + $f);
        cgt_Ziggurat_TABLE.data[$i] = jl_Math_sqrt((-2.0) * $xx);
        $f = jl_Math_exp($xx);
        $i = $i + 1 | 0;
    }
    cgt_Ziggurat_TABLE.data[256] = 0.0;
}
var jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyASCII__init_() {
    var var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyASCII__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyASCII_computeValue($this) {
    return (jur_CharClass__init_()).$add0(0, 127);
}
function cbggg_GlyphLayout() {
    var a = this; jl_Object.call(a);
    a.$runs = null;
    a.$colors = null;
    a.$glyphCount0 = 0;
    a.$width3 = 0.0;
    a.$height3 = 0.0;
}
var cbggg_GlyphLayout_glyphRunPool = null;
var cbggg_GlyphLayout_colorStack = null;
function cbggg_GlyphLayout_$callClinit() {
    cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
    cbggg_GlyphLayout__clinit_();
}
function cbggg_GlyphLayout__init_3() {
    var var_0 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_(var_0);
    return var_0;
}
function cbggg_GlyphLayout__init_4(var_0, var_1) {
    var var_2 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_GlyphLayout__init_5(var_0, var_1, var_2, var_3, var_4, var_5) {
    var var_6 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_1(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
}
function cbggg_GlyphLayout__init_6(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
    var var_9 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_2(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
}
function cbggg_GlyphLayout__init_($this) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_2(1);
    $this.$colors = cbgu_IntArray__init_0(2);
}
function cbggg_GlyphLayout__init_0($this, $font, $str) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_2(1);
    $this.$colors = cbgu_IntArray__init_0(2);
    $this.$setText0($font, $str);
}
function cbggg_GlyphLayout__init_1($this, $font, $str, $color, $targetWidth, $halign, $wrap) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_2(1);
    $this.$colors = cbgu_IntArray__init_0(2);
    $this.$setText1($font, $str, $color, $targetWidth, $halign, $wrap);
}
function cbggg_GlyphLayout__init_2($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_0($this);
    $this.$runs = cbgu_Array__init_2(1);
    $this.$colors = cbgu_IntArray__init_0(2);
    $this.$setText($font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate);
}
function cbggg_GlyphLayout_setText($this, $font, $str) {
    $this.$setText($font, $str, 0, $str.$length(), $font.$getColor(), 0.0, 8, 0, null);
}
function cbggg_GlyphLayout_setText0($this, $font, $str, $color, $targetWidth, $halign, $wrap) {
    $this.$setText($font, $str, 0, $str.$length(), $color, $targetWidth, $halign, $wrap, null);
}
function cbggg_GlyphLayout_setText1($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
    var $fontData, $wrapOrTruncate, $currentColor, $markupEnabled, $isLastRun, $y, $down, $lineRun, $lastGlyph, var$19, $runStart, $newline, $runEnd, var$23, $length, $run, $runWidth, $i, var$28, var$29, $glyph, $glyphWidth, $wrapIndex;
    $this.$reset2();
    $fontData = $font.$data2;
    if ($start == $end) {
        $this.$height3 = $fontData.$capHeight;
        return;
    }
    if ($wrap)
        $targetWidth = jl_Math_max0($targetWidth, $fontData.$spaceXadvance * 3.0);
    $wrapOrTruncate = !$wrap && $truncate === null ? 0 : 1;
    $currentColor = $color.$toIntBits();
    $this.$colors.$add12(0, $currentColor);
    $markupEnabled = $fontData.$markupEnabled;
    if ($markupEnabled)
        cbggg_GlyphLayout_colorStack.$add5($currentColor);
    $isLastRun = 0;
    $y = 0.0;
    $down = $fontData.$down;
    $lineRun = null;
    $lastGlyph = null;
    var$19 = $currentColor;
    $runStart = $start;
    a: {
        b: while (true) {
            c: {
                $newline = 0;
                if ($start == $end) {
                    if ($runStart == $end)
                        break b;
                    $isLastRun = 1;
                    $runEnd = $end;
                } else {
                    d: {
                        var$23 = $start + 1 | 0;
                        switch ($str.$charAt($start)) {
                            case 10:
                                $runEnd = var$23 - 1 | 0;
                                $newline = 1;
                                $start = var$23;
                                break c;
                            case 91:
                                if (!$markupEnabled) {
                                    $start = var$23;
                                    break d;
                                }
                                $length = cbggg_GlyphLayout_parseColorMarkup($this, $str, var$23, $end);
                                if ($length >= 0) {
                                    $runEnd = var$23 - 1 | 0;
                                    $start = var$23 + ($length + 1 | 0) | 0;
                                    if ($start == $end) {
                                        $isLastRun = 1;
                                        break c;
                                    }
                                    $currentColor = cbggg_GlyphLayout_colorStack.$peek();
                                    break c;
                                }
                                if ($length != (-2)) {
                                    $start = var$23;
                                    break d;
                                }
                                $start = var$23 + 1 | 0;
                                break d;
                            default:
                        }
                        $start = var$23;
                    }
                    continue b;
                }
            }
            $run = cbggg_GlyphLayout_glyphRunPool.$obtain();
            $run.$x1 = 0.0;
            $run.$y1 = $y;
            $fontData.$getGlyphs($run, $str, $runStart, $runEnd, $lastGlyph);
            $this.$glyphCount0 = $this.$glyphCount0 + $run.$glyphs0.$size | 0;
            if ($currentColor != var$19) {
                if ($this.$colors.$get11($this.$colors.$size1 - 2 | 0) != $this.$glyphCount0) {
                    $this.$colors.$add5($this.$glyphCount0);
                    $this.$colors.$add5($currentColor);
                } else
                    $this.$colors.$set($this.$colors.$size1 - 1 | 0, $currentColor);
                var$19 = $currentColor;
            }
            e: {
                if (!$run.$glyphs0.$size) {
                    cbggg_GlyphLayout_glyphRunPool.$free($run);
                    if ($lineRun === null)
                        break e;
                } else if ($lineRun !== null) {
                    $lineRun.$appendRun($run);
                    cbggg_GlyphLayout_glyphRunPool.$free($run);
                } else {
                    $this.$runs.$add3($run);
                    $lineRun = $run;
                }
                if (!$newline && !$isLastRun)
                    $lastGlyph = $lineRun.$glyphs0.$peek0();
                else {
                    cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $lineRun);
                    $lastGlyph = null;
                }
                if ($wrapOrTruncate && $lineRun.$glyphs0.$size && !(!$newline && !$isLastRun)) {
                    $runWidth = $lineRun.$xAdvances.$first0() + $lineRun.$xAdvances.$get4(1);
                    $i = 2;
                    while ($i < $lineRun.$xAdvances.$size3) {
                        var$28 = $lineRun.$glyphs0;
                        var$29 = $i - 1 | 0;
                        $glyph = var$28.$get3(var$29);
                        $glyphWidth = cbggg_GlyphLayout_getGlyphWidth($this, $glyph, $fontData);
                        if ($runWidth + $glyphWidth - 9.999999747378752E-5 <= $targetWidth)
                            $runWidth = $runWidth + $lineRun.$xAdvances.$items1.data[$i];
                        else {
                            if ($truncate !== null) {
                                cbggg_GlyphLayout_truncate($this, $fontData, $lineRun, $targetWidth, $truncate);
                                break a;
                            }
                            $wrapIndex = $fontData.$getWrapIndex($lineRun.$glyphs0, $i);
                            if (!(!$wrapIndex && $lineRun.$x1 === 0.0) && $wrapIndex < $lineRun.$glyphs0.$size)
                                var$29 = $wrapIndex;
                            $lineRun = cbggg_GlyphLayout_wrap($this, $fontData, $lineRun, var$29);
                            if ($lineRun === null)
                                break e;
                            $this.$runs.$add3($lineRun);
                            $y = $y + $down;
                            $lineRun.$x1 = 0.0;
                            $lineRun.$y1 = $y;
                            $runWidth = $lineRun.$xAdvances.$first0() + $lineRun.$xAdvances.$get4(1);
                            $i = 1;
                        }
                        $i = $i + 1 | 0;
                    }
                }
            }
            if ($newline) {
                $lineRun = null;
                $lastGlyph = null;
                $y = $runEnd != $runStart ? $y + $down : $y + $down * $fontData.$blankLineScale;
            }
            $runStart = $start;
        }
    }
    $this.$height3 = $fontData.$capHeight + jl_Math_abs($y);
    cbggg_GlyphLayout_calculateWidths($this, $fontData);
    cbggg_GlyphLayout_alignRuns($this, $targetWidth, $halign);
    if ($markupEnabled)
        cbggg_GlyphLayout_colorStack.$clear8();
}
function cbggg_GlyphLayout_calculateWidths($this, $fontData) {
    var $width, $runsItems, $i, $n, $run, $xAdvances, var$8, $runWidth, $max, $glyphs, $ii, $nn, $glyph, $glyphWidth;
    $width = 0.0;
    $runsItems = $this.$runs.$items;
    $i = 0;
    $n = $this.$runs.$size;
    while ($i < $n) {
        $run = $runsItems.data[$i];
        $xAdvances = $run.$xAdvances.$items1;
        var$8 = $xAdvances.data;
        $runWidth = $run.$x1 + var$8[0];
        $max = 0.0;
        $glyphs = $run.$glyphs0.$items;
        $ii = 0;
        $nn = $run.$glyphs0.$size;
        while ($ii < $nn) {
            $glyph = $glyphs.data[$ii];
            $glyphWidth = cbggg_GlyphLayout_getGlyphWidth($this, $glyph, $fontData);
            $max = jl_Math_max0($max, $runWidth + $glyphWidth);
            $ii = $ii + 1 | 0;
            $runWidth = $runWidth + var$8[$ii];
        }
        $run.$width4 = jl_Math_max0($runWidth, $max) - $run.$x1;
        $width = jl_Math_max0($width, $run.$x1 + $run.$width4);
        $i = $i + 1 | 0;
    }
    $this.$width3 = $width;
}
function cbggg_GlyphLayout_alignRuns($this, $targetWidth, $halign) {
    var $center, $runsItems, $i, $n, $run;
    a: {
        if (!($halign & 8)) {
            $center = !($halign & 1) ? 0 : 1;
            $runsItems = $this.$runs.$items;
            $i = 0;
            $n = $this.$runs.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                $run = $runsItems.data[$i];
                $run.$x1 = $run.$x1 + (!$center ? $targetWidth - $run.$width4 : 0.5 * ($targetWidth - $run.$width4));
                $i = $i + 1 | 0;
            }
        }
    }
}
function cbggg_GlyphLayout_truncate($this, $fontData, $run, $targetWidth, $truncate) {
    var $glyphCount, $truncateRun, $truncateWidth, $xAdvances, $i, $n, var$11, $count, $width, $xAdvance, $droppedGlyphCount, var$16;
    $glyphCount = $run.$glyphs0.$size;
    cbggg_GlyphLayout_$callClinit();
    $truncateRun = cbggg_GlyphLayout_glyphRunPool.$obtain();
    $fontData.$getGlyphs($truncateRun, $truncate, 0, $truncate.$length(), null);
    $truncateWidth = 0.0;
    if ($truncateRun.$xAdvances.$size3 > 0) {
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $truncateRun);
        $xAdvances = $truncateRun.$xAdvances.$items1;
        $i = 1;
        $n = $truncateRun.$xAdvances.$size3;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $xAdvances.data[$i];
            $i = $i + 1 | 0;
        }
    }
    var$11 = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x1;
    $xAdvances = $run.$xAdvances.$items1;
    a: {
        while (true) {
            if ($count >= $run.$xAdvances.$size3)
                break a;
            $xAdvance = $xAdvances.data[$count];
            $width = $width + $xAdvance;
            if ($width > var$11)
                break;
            $count = $count + 1 | 0;
        }
    }
    if ($count <= 1) {
        $run.$glyphs0.$clear8();
        $run.$xAdvances.$clear8();
        $run.$xAdvances.$addAll1($truncateRun.$xAdvances);
    } else {
        $run.$glyphs0.$truncate0($count - 1 | 0);
        $run.$xAdvances.$truncate0($count);
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run);
        if ($truncateRun.$xAdvances.$size3 > 0)
            $run.$xAdvances.$addAll2($truncateRun.$xAdvances, 1, $truncateRun.$xAdvances.$size3 - 1 | 0);
    }
    b: {
        $droppedGlyphCount = $glyphCount - $run.$glyphs0.$size | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount0 = $this.$glyphCount0 - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled)
                while (true) {
                    if ($this.$colors.$size1 <= 2)
                        break b;
                    if ($this.$colors.$get11($this.$colors.$size1 - 2 | 0) < $this.$glyphCount0)
                        break b;
                    var$16 = $this.$colors;
                    var$16.$size1 = var$16.$size1 - 2 | 0;
                }
        }
    }
    $run.$glyphs0.$addAll3($truncateRun.$glyphs0);
    $this.$glyphCount0 = $this.$glyphCount0 + $truncate.$length() | 0;
    cbggg_GlyphLayout_glyphRunPool.$free($truncateRun);
}
function cbggg_GlyphLayout_wrap($this, $fontData, $first, $secondStart) {
    var $glyphs2, $glyphCount, $xAdvances2, $firstEnd, var$8, $second, $droppedGlyphCount, $lastColor, var$12, $glyphs1, $xAdvances1, $firstGlyphCount, $secondGlyphCount, $reductionThreshold, $i, $colorChangeIndex;
    $glyphs2 = $first.$glyphs0;
    $glyphCount = $first.$glyphs0.$size;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            if (!$fontData.$isWhitespace(($glyphs2.$get3($firstEnd - 1 | 0)).$id & 65535))
                break;
            $firstEnd = $firstEnd + (-1) | 0;
        }
    }
    b: {
        while (true) {
            var$8 = $rt_compare($secondStart, $glyphCount);
            if (var$8 >= 0)
                break b;
            if (!$fontData.$isWhitespace(($glyphs2.$get3($secondStart)).$id & 65535))
                break;
            $secondStart = $secondStart + 1 | 0;
        }
    }
    $second = null;
    if (var$8 >= 0) {
        $glyphs2.$truncate0($firstEnd);
        $xAdvances2.$truncate0($firstEnd + 1 | 0);
        $droppedGlyphCount = $secondStart - $firstEnd | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount0 = $this.$glyphCount0 - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled && $this.$colors.$get11($this.$colors.$size1 - 2 | 0) > $this.$glyphCount0) {
                $lastColor = $this.$colors.$peek();
                while ($this.$colors.$get11($this.$colors.$size1 - 2 | 0) > $this.$glyphCount0) {
                    var$12 = $this.$colors;
                    var$12.$size1 = var$12.$size1 - 2 | 0;
                }
                $this.$colors.$set($this.$colors.$size1 - 2 | 0, $this.$glyphCount0);
                $this.$colors.$set($this.$colors.$size1 - 1 | 0, $lastColor);
            }
        }
    } else
        c: {
            cbggg_GlyphLayout_$callClinit();
            $second = cbggg_GlyphLayout_glyphRunPool.$obtain();
            $glyphs1 = $second.$glyphs0;
            $glyphs1.$addAll4($glyphs2, 0, $firstEnd);
            $glyphs2.$removeRange(0, $secondStart - 1 | 0);
            $first.$glyphs0 = $glyphs1;
            $second.$glyphs0 = $glyphs2;
            $xAdvances1 = $second.$xAdvances;
            $xAdvances1.$addAll2($xAdvances2, 0, $firstEnd + 1 | 0);
            $xAdvances2.$removeRange(1, $secondStart);
            $xAdvances2.$items1.data[0] = cbggg_GlyphLayout_getLineOffset($this, $glyphs2, $fontData);
            $first.$xAdvances = $xAdvances1;
            $second.$xAdvances = $xAdvances2;
            $firstGlyphCount = $first.$glyphs0.$size;
            $secondGlyphCount = $second.$glyphs0.$size;
            $droppedGlyphCount = ($glyphCount - $firstGlyphCount | 0) - $secondGlyphCount | 0;
            $this.$glyphCount0 = $this.$glyphCount0 - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled && $droppedGlyphCount > 0) {
                $reductionThreshold = $this.$glyphCount0 - $secondGlyphCount | 0;
                $i = $this.$colors.$size1 - 2 | 0;
                while (true) {
                    if ($i < 2)
                        break c;
                    $colorChangeIndex = $this.$colors.$get11($i);
                    if ($colorChangeIndex <= $reductionThreshold)
                        break;
                    $this.$colors.$set($i, $colorChangeIndex - $droppedGlyphCount | 0);
                    $i = $i + (-2) | 0;
                }
            }
        }
    if ($firstEnd)
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $first);
    else {
        cbggg_GlyphLayout_$callClinit();
        cbggg_GlyphLayout_glyphRunPool.$free($first);
        $this.$runs.$pop();
    }
    return $second;
}
function cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run) {
    var $last;
    $last = $run.$glyphs0.$peek0();
    if (!$last.$fixedWidth)
        $run.$xAdvances.$items1.data[$run.$xAdvances.$size3 - 1 | 0] = cbggg_GlyphLayout_getGlyphWidth($this, $last, $fontData);
}
function cbggg_GlyphLayout_getGlyphWidth($this, $glyph, $fontData) {
    return ($glyph.$width + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
}
function cbggg_GlyphLayout_getLineOffset($this, $glyphs, $fontData) {
    return ( -($glyphs.$first1()).$xoffset | 0) * $fontData.$scaleX - $fontData.$padLeft;
}
function cbggg_GlyphLayout_parseColorMarkup($this, $str, $start, $end) {
    var $color, $i, $ch, var$7, var$8, $color_0;
    if ($start == $end)
        return (-1);
    switch ($str.$charAt($start)) {
        case 35:
            $color = 0;
            $i = $start + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $end)
                        break a;
                    $ch = $str.$charAt($i);
                    if ($ch == 93)
                        break;
                    var$7 = ($color << 4) + $ch | 0;
                    if ($ch >= 48 && $ch <= 57)
                        $color = var$7 + (-48) | 0;
                    else if ($ch >= 65 && $ch <= 70)
                        $color = var$7 + (-55) | 0;
                    else {
                        if ($ch < 97)
                            break a;
                        if ($ch > 102)
                            break a;
                        $color = var$7 + (-87) | 0;
                    }
                    $i = $i + 1 | 0;
                }
                if ($i >= ($start + 2 | 0) && $i <= ($start + 9 | 0)) {
                    var$8 = $i - $start | 0;
                    if (var$8 < 8)
                        $color = $color << ((9 - var$8 | 0) << 2) | 255;
                    cbggg_GlyphLayout_$callClinit();
                    cbggg_GlyphLayout_colorStack.$add5(jl_Integer_reverseBytes($color));
                    return var$8;
                }
            }
            return (-1);
        case 91:
            break;
        case 93:
            cbggg_GlyphLayout_$callClinit();
            if (cbggg_GlyphLayout_colorStack.$size1 > 1)
                cbggg_GlyphLayout_colorStack.$pop1();
            return 0;
        default:
            $i = $start + 1 | 0;
            while ($i < $end) {
                $ch = $str.$charAt($i);
                if ($ch == 93) {
                    $color_0 = cbgg_Colors_get(($str.$subSequence($start, $i)).$toString());
                    if ($color_0 === null)
                        return (-1);
                    cbggg_GlyphLayout_$callClinit();
                    cbggg_GlyphLayout_colorStack.$add5($color_0.$toIntBits());
                    return $i - $start | 0;
                }
                $i = $i + 1 | 0;
            }
            return (-1);
    }
    return (-2);
}
function cbggg_GlyphLayout_reset($this) {
    cbggg_GlyphLayout_$callClinit();
    cbggg_GlyphLayout_glyphRunPool.$freeAll0($this.$runs);
    $this.$runs.$clear8();
    $this.$colors.$clear8();
    $this.$glyphCount0 = 0;
    $this.$width3 = 0.0;
    $this.$height3 = 0.0;
}
function cbggg_GlyphLayout_toString($this) {
    var $buffer, $i, $n;
    if (!$this.$runs.$size)
        return $rt_s(45);
    $buffer = jl_StringBuilder__init_0(128);
    $buffer.$append19($this.$width3);
    $buffer.$append0(120);
    $buffer.$append19($this.$height3);
    $buffer.$append0(10);
    $i = 0;
    $n = $this.$runs.$size;
    while ($i < $n) {
        $buffer.$append1(($this.$runs.$get3($i)).$toString());
        $buffer.$append0(10);
        $i = $i + 1 | 0;
    }
    $buffer.$setLength($buffer.$length() - 1 | 0);
    return $buffer.$toString();
}
function cbggg_GlyphLayout__clinit_() {
    cbggg_GlyphLayout_glyphRunPool = cbgu_Pools_get0($rt_cls(cbggg_GlyphLayout$GlyphRun));
    cbggg_GlyphLayout_colorStack = cbgu_IntArray__init_0(4);
}
var cgt_Stringf = $rt_classWithoutFields();
function cgt_Stringf_formatBuilder($fmt, $args) {
    var $len, $arg, $sb, $i, $curr, var$8, var$9, $d, var$11, $length, $num, $precision, var$15;
    $len = $fmt.$length();
    $arg = 0;
    $sb = jl_StringBuilder__init_0($len);
    $i = 0;
    while ($i < $len) {
        a: {
            $curr = $fmt.$charAt($i);
            if ($curr != 37) {
                $sb.$append0($curr);
                break a;
            }
            $i = $i + 1 | 0;
            var$8 = $fmt.$charAt($i);
            if (var$8 == 37) {
                $sb.$append0(37);
                break a;
            }
            if (var$8 == 115) {
                var$9 = $args.data;
                var$8 = $arg + 1 | 0;
                $sb.$append1(var$9[$arg].$toString());
                $arg = var$8;
                break a;
            }
            if (var$8 == 100) {
                var$9 = $args.data;
                var$8 = $arg + 1 | 0;
                $sb.$append28(var$9[$arg].$longValue());
                $arg = var$8;
                break a;
            }
            if (var$8 == 102) {
                var$9 = $args.data;
                var$8 = $arg + 1 | 0;
                $d = var$9[$arg].$doubleValue();
                cgtd_Base_$callClinit();
                $sb.$append1(cgtd_TextTools_safeSubstring(cgtd_Base_BASE10.$decimal($d), 0, $d >= 0.0 ? 5 : 6));
                $arg = var$8;
                break a;
            }
            if (var$8 == 48) {
                $i = $i + 1 | 0;
                var$8 = $fmt.$charAt($i);
                if (var$8 == 88) {
                    var$9 = $args.data;
                    cgtd_Base_$callClinit();
                    var$11 = cgtd_Base_BASE16;
                    var$8 = $arg + 1 | 0;
                    var$11.$appendUnsigned($sb, var$9[$arg].$longValue());
                    $arg = var$8;
                    break a;
                }
                cgtd_Base_$callClinit();
                $length = cgtd_Base_BASE10.$readInt($fmt, $i, $len);
                while (true) {
                    $i = $i + 1 | 0;
                    var$8 = $fmt.$charAt($i);
                    if (var$8 < 48)
                        break;
                    if (var$8 > 57)
                        break;
                }
                if (var$8 == 88) {
                    var$9 = $args.data;
                    var$11 = cgtd_Base_BASE16;
                    var$8 = $arg + 1 | 0;
                    $sb.$append1(cgtd_TextTools_safeSubstring(var$11.$unsigned(var$9[$arg].$longValue()), 16 - $length | 0, 16));
                } else if (var$8 != 100)
                    var$8 = $arg;
                else {
                    var$9 = $args.data;
                    var$11 = cgtd_Base_BASE10;
                    var$8 = $arg + 1 | 0;
                    $num = var$11.$unsigned(var$9[$arg].$longValue());
                    $sb.$append1(cgtd_TextTools_safeSubstring($num, $num.$length() - $length | 0, $num.$length()));
                }
                $arg = var$8;
                break a;
            }
            if (var$8 == 46) {
                $i = $i + 1 | 0;
                var$8 = $fmt.$charAt($i);
                if (var$8 == 102) {
                    var$9 = $args.data;
                    cgtd_Base_$callClinit();
                    var$11 = cgtd_Base_BASE10;
                    var$8 = $arg + 1 | 0;
                    var$11.$appendDecimal($sb, var$9[$arg].$doubleValue());
                    $arg = var$8;
                    break a;
                }
                cgtd_Base_$callClinit();
                $precision = cgtd_Base_BASE10.$readInt($fmt, $i, $len) + 2 | 0;
                while (true) {
                    $i = $i + 1 | 0;
                    var$15 = $fmt.$charAt($i);
                    if (var$15 < 48)
                        break;
                    if (var$15 > 57)
                        break;
                }
                if (var$15 == 102) {
                    var$9 = $args.data;
                    var$15 = $arg + 1 | 0;
                    $d = var$9[$arg].$doubleValue();
                    $num = cgtd_Base_BASE10.$decimal($d);
                    if ($d < 0.0)
                        $precision = $precision + 1 | 0;
                    $sb.$append1(cgtd_TextTools_safeSubstring($num, 0, $precision));
                    $arg = var$15;
                }
                break a;
            }
            if (var$8 < 49)
                break a;
            if (var$8 > 57)
                break a;
            cgtd_Base_$callClinit();
            $length = cgtd_Base_BASE10.$readInt($fmt, $i, $len);
            while (true) {
                $i = $i + 1 | 0;
                var$8 = $fmt.$charAt($i);
                if (var$8 < 48)
                    break;
                if (var$8 > 57)
                    break;
            }
            if (var$8 == 88) {
                var$9 = $args.data;
                var$11 = cgtd_Base_BASE16;
                var$8 = $arg + 1 | 0;
                $num = var$11.$signed(var$9[$arg].$longValue());
                $sb.$append1(cgtd_TextTools_safeSubstring($num, $num.$length() - $length | 0, $num.$length()));
            } else if (var$8 != 100)
                var$8 = $arg;
            else {
                var$9 = $args.data;
                var$11 = cgtd_Base_BASE10;
                var$8 = $arg + 1 | 0;
                $num = var$11.$signed(var$9[$arg].$longValue());
                $sb.$append1(cgtd_TextTools_safeSubstring($num, $num.$length() - $length | 0, $num.$length()));
            }
            $arg = var$8;
        }
        $i = $i + 1 | 0;
    }
    return $sb;
}
function cgt_Stringf_format($fmt, $args) {
    return (cgt_Stringf_formatBuilder($fmt, $args)).$toString();
}
var cbggg_HdpiMode = $rt_classWithoutFields(jl_Enum);
var cbggg_HdpiMode_Logical = null;
var cbggg_HdpiMode_Pixels = null;
var cbggg_HdpiMode_$VALUES = null;
function cbggg_HdpiMode_$callClinit() {
    cbggg_HdpiMode_$callClinit = $rt_eraseClinit(cbggg_HdpiMode);
    cbggg_HdpiMode__clinit_();
}
function cbggg_HdpiMode__init_(var_0, var_1) {
    var var_2 = new cbggg_HdpiMode();
    cbggg_HdpiMode__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbggg_HdpiMode__init_0($this, var$1, var$2) {
    cbggg_HdpiMode_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbggg_HdpiMode__clinit_() {
    cbggg_HdpiMode_Logical = cbggg_HdpiMode__init_($rt_s(1114), 0);
    cbggg_HdpiMode_Pixels = cbggg_HdpiMode__init_($rt_s(1115), 1);
    cbggg_HdpiMode_$VALUES = $rt_createArrayFromData(cbggg_HdpiMode, [cbggg_HdpiMode_Logical, cbggg_HdpiMode_Pixels]);
}
var cbgssu_DragAndDrop$1 = $rt_classWithoutFields(cbgssu_DragListener);
var cbgssu_Label$LabelStyle = $rt_classWithoutFields();
function cgt_LogCauchyScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist14 = null;
    a.$batch20 = null;
    a.$renderer19 = null;
    a.$amounts19 = null;
    a.$iterations19 = Long_ZERO;
    a.$font21 = null;
    a.$viewport19 = null;
    a.$mainGame19 = null;
}
function cgt_LogCauchyScreen__init_(var_0) {
    var var_1 = new cgt_LogCauchyScreen();
    cgt_LogCauchyScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_LogCauchyScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font21 = $this.$mainGame19.$font0;
    a: {
        try {
            var$1 = new cgtrd_LogCauchyDistribution;
            var$2 = $this.$mainGame19.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_LogCauchyDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist14 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist14 = cgtrd_LogCauchyDistribution__init_($this.$mainGame19.$random0, 0.0, 1.0);
    }
    $this.$batch20 = $this.$mainGame19.$batch0;
    $this.$viewport19 = cbguv_ScreenViewport__init_();
    $this.$renderer19 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts19, Long_ZERO);
    $this.$iterations19 = Long_ZERO;
}
function cgt_LogCauchyScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts19 = $rt_createLongArray(512);
    $this.$iterations19 = Long_ZERO;
    $this.$mainGame19 = $main;
}
function cgt_LogCauchyScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame19.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame19.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport19.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts19, Long_ZERO);
        $this.$iterations19 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts19, Long_ZERO);
        $this.$iterations19 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts19, Long_ZERO);
        $this.$iterations19 = Long_ZERO;
    }
    $this.$iterations19 = Long_add($this.$iterations19, Long_fromInt(1));
    var$3 = $this.$dist14;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist14.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts19.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer19.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer19.$color($color);
        var$3 = $this.$renderer19;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer19.$color($color);
        $this.$renderer19.$vertex(var$9, Long_toNumber(Long_div($this.$amounts19.data[$x], $this.$iterations19)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer19.$color((-6.221923240859403E37));
        var$3 = $this.$renderer19;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer19.$color((-6.221923240859403E37));
        $this.$renderer19.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer19.$end();
    $this.$batch20.$setProjectionMatrix($camera.$combined);
    $this.$batch20.$begin0();
    var$3 = $this.$font21;
    var$12 = $this.$batch20;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist14.$getMedian());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1116), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font21.$draw($this.$batch20, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font21.$draw($this.$batch20, $rt_s(325), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch20.$end();
}
function cgt_LogCauchyScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport19.$update0($width, $height, 1);
    $this.$viewport19.$apply(1);
}
var cbgggm_Node = $rt_classWithoutFields();
var cbgm_Octree$1 = $rt_classWithoutFields(cbgu_Pool);
var cgxgbta_TeaWebAgent = $rt_classWithoutFields();
function cgxgbta_TeaWebAgent_computeAgentInfo() {
    var $jsObj;
    $jsObj = cgxgbta_TeaWebAgent_createAgent$js_body$_1();
    return $jsObj;
}
function cgxgbta_TeaWebAgent_createAgent$js_body$_1() {
    var userAgent = $rt_globals.navigator.userAgent.toLowerCase();
    return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1, userAgent : userAgent };
}
var cbgm_EarClippingTriangulator = $rt_classWithoutFields();
function jur_Quantifier() {
    var a = this; jur_SpecialToken.call(a);
    a.$min4 = 0;
    a.$max5 = 0;
}
function jur_Quantifier__init_(var_0, var_1) {
    var var_2 = new jur_Quantifier();
    jur_Quantifier__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Quantifier__init_0($this, $min, $max) {
    jur_SpecialToken__init_($this);
    $this.$min4 = $min;
    $this.$max5 = $max;
}
function jur_Quantifier_min($this) {
    return $this.$min4;
}
function jur_Quantifier_max($this) {
    return $this.$max5;
}
function jur_Quantifier_toString($this) {
    var var$1, var$2, var$3;
    var$1 = $this.$min4;
    var$2 = $this.$max5 == 2147483647 ? $rt_s(45) : (jl_Integer__init_($this.$max5)).$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(var$3, 123), var$1), 44), var$2), 125);
    return jl_StringBuilder_toString(var$3);
}
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$056 = null;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaUpperCase$1();
    jur_AbstractCharClass$LazyJavaUpperCase$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaUpperCase$1__init_0($this, $this$0) {
    $this.$this$056 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase$1_contains($this, $ch) {
    return jl_Character_isUpperCase($ch);
}
var otpp_ResourceAccessor = $rt_classWithoutFields();
var cbgg_PixmapEmu$DrawType = $rt_classWithoutFields(jl_Enum);
var cbgg_PixmapEmu$DrawType_FILL = null;
var cbgg_PixmapEmu$DrawType_STROKE = null;
var cbgg_PixmapEmu$DrawType_$VALUES = null;
function cbgg_PixmapEmu$DrawType_$callClinit() {
    cbgg_PixmapEmu$DrawType_$callClinit = $rt_eraseClinit(cbgg_PixmapEmu$DrawType);
    cbgg_PixmapEmu$DrawType__clinit_();
}
function cbgg_PixmapEmu$DrawType__init_(var_0, var_1) {
    var var_2 = new cbgg_PixmapEmu$DrawType();
    cbgg_PixmapEmu$DrawType__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgg_PixmapEmu$DrawType_values() {
    cbgg_PixmapEmu$DrawType_$callClinit();
    return cbgg_PixmapEmu$DrawType_$VALUES.$clone();
}
function cbgg_PixmapEmu$DrawType__init_0($this, var$1, var$2) {
    cbgg_PixmapEmu$DrawType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgg_PixmapEmu$DrawType__clinit_() {
    cbgg_PixmapEmu$DrawType_FILL = cbgg_PixmapEmu$DrawType__init_($rt_s(1117), 0);
    cbgg_PixmapEmu$DrawType_STROKE = cbgg_PixmapEmu$DrawType__init_($rt_s(1118), 1);
    cbgg_PixmapEmu$DrawType_$VALUES = $rt_createArrayFromData(cbgg_PixmapEmu$DrawType, [cbgg_PixmapEmu$DrawType_FILL, cbgg_PixmapEmu$DrawType_STROKE]);
}
function cgt_BinomialScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist15 = null;
    a.$batch21 = null;
    a.$renderer20 = null;
    a.$amounts20 = null;
    a.$iterations20 = Long_ZERO;
    a.$font22 = null;
    a.$viewport20 = null;
    a.$mainGame20 = null;
}
function cgt_BinomialScreen__init_(var_0) {
    var var_1 = new cgt_BinomialScreen();
    cgt_BinomialScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_BinomialScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font22 = $this.$mainGame20.$font0;
    a: {
        try {
            var$1 = new cgtrd_BinomialDistribution;
            var$2 = $this.$mainGame20.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_BinomialDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b | 0);
            $this.$dist15 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist15 = cgtrd_BinomialDistribution__init_($this.$mainGame20.$random0, 0.5, 1);
    }
    $this.$batch21 = $this.$mainGame20.$batch0;
    $this.$viewport20 = cbguv_ScreenViewport__init_();
    $this.$renderer20 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts20, Long_ZERO);
    $this.$iterations20 = Long_ZERO;
}
function cgt_BinomialScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts20 = $rt_createLongArray(512);
    $this.$iterations20 = Long_ZERO;
    $this.$mainGame20 = $main;
}
function cgt_BinomialScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame20.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame20.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport20.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts20, Long_ZERO);
        $this.$iterations20 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-2.5) : 2.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts20, Long_ZERO);
        $this.$iterations20 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts20, Long_ZERO);
        $this.$iterations20 = Long_ZERO;
    }
    $this.$iterations20 = Long_add($this.$iterations20, Long_fromInt(1));
    var$3 = $this.$dist15;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 2048) {
        $m = $this.$dist15.$nextDouble() | 0;
        if ($m >= 0 && $m < 16) {
            var$6 = $this.$amounts20.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer20.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer20.$color($color);
        var$3 = $this.$renderer20;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer20.$color($color);
        $this.$renderer20.$vertex(var$9, Long_toNumber(Long_div($this.$amounts20.data[$x >>> 5 | 0], $this.$iterations20)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer20.$color((-6.221923240859403E37));
        var$3 = $this.$renderer20;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer20.$color((-6.221923240859403E37));
        $this.$renderer20.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer20.$end();
    $this.$batch21.$setProjectionMatrix($camera.$combined);
    $this.$batch21.$begin0();
    var$3 = $this.$font22;
    var$12 = $this.$batch21;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist15.$getMean());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1119), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font22.$draw($this.$batch21, $rt_s(1120), 64.0, 494.0, 384.0, 1, 1);
    $this.$font22.$draw($this.$batch21, $rt_s(1121), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch21.$end();
}
function cgt_BinomialScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport20.$update0($width, $height, 1);
    $this.$viewport20.$apply(1);
}
function cgxgbt_TeaApplication() {
    var a = this; jl_Object.call(a);
    a.$graphics = null;
    a.$input = null;
    a.$files = null;
    a.$net = null;
    a.$audio = null;
    a.$config0 = null;
    a.$queueAppListener = null;
    a.$appListener = null;
    a.$lifecycleListeners = null;
    a.$window0 = null;
    a.$initState = null;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$logger = null;
    a.$logLevel = 0;
    a.$preloader1 = null;
    a.$prefs = null;
    a.$clipboard = null;
    a.$runnables = null;
    a.$runnablesHelper = null;
    a.$hostPageBaseURL = null;
}
var cgxgbt_TeaApplication_agentInfo = null;
function cgxgbt_TeaApplication__init_0(var_0, var_1) {
    var var_2 = new cgxgbt_TeaApplication();
    cgxgbt_TeaApplication__init_(var_2, var_0, var_1);
    return var_2;
}
function cgxgbt_TeaApplication_getAgentInfo() {
    return cgxgbt_TeaApplication_agentInfo;
}
function cgxgbt_TeaApplication__init_($this, $appListener, $config) {
    jl_Object__init_0($this);
    $this.$lifecycleListeners = cbgu_Array__init_2(4);
    cgxgbt_TeaApplication$AppState_$callClinit();
    $this.$initState = cgxgbt_TeaApplication$AppState_LOAD_ASSETS;
    $this.$lastWidth = (-1);
    $this.$lastHeight = 1;
    $this.$logLevel = 1;
    $this.$prefs = cbgu_ObjectMap__init_();
    $this.$runnables = cbgu_Array__init_();
    $this.$runnablesHelper = cbgu_Array__init_();
    $this.$window0 = cgxgbtdi_TeaWindow_get();
    $this.$config0 = $config;
    $this.$setApplicationListener($appListener);
    cgxgbt_TeaApplication_init($this);
}
function cgxgbt_TeaApplication_init($this) {
    var $instance, $indexQM, $assetListener, var$4, var$5;
    cgxgbt_TeaApplication_agentInfo = cgxgbta_TeaWebAgent_computeAgentInfo();
    jl_System_setProperty($rt_s(1122), $rt_s(45));
    jl_System_setProperty($rt_s(1123), $rt_str(cgxgbt_TeaApplication_agentInfo.userAgent));
    if (cgxgbt_TeaApplication_agentInfo.windows ? 1 : 0)
        jl_System_setProperty($rt_s(1124), $rt_s(1125));
    else if (cgxgbt_TeaApplication_agentInfo.macOS ? 1 : 0)
        jl_System_setProperty($rt_s(1124), $rt_s(1126));
    else if (!(cgxgbt_TeaApplication_agentInfo.linux ? 1 : 0))
        jl_System_setProperty($rt_s(1124), $rt_s(1127));
    else
        jl_System_setProperty($rt_s(1124), $rt_s(18));
    cgxgbtp_AssetDownloader_setInstance(cgxgbtp_AssetDownloadImpl__init_($this.$config0.$showDownloadLogs));
    $instance = cgxgbtp_AssetDownloader_getInstance();
    $this.$hostPageBaseURL = $instance.$getHostPageBaseURL();
    if ($this.$hostPageBaseURL.$contains($rt_s(1128))) {
        $this.$hostPageBaseURL = $this.$hostPageBaseURL.$replace($rt_s(1129), $rt_s(45));
        $this.$hostPageBaseURL = $this.$hostPageBaseURL.$replace($rt_s(1130), $rt_s(45));
    }
    $indexQM = $this.$hostPageBaseURL.$indexOf2(63);
    if ($indexQM >= 0)
        $this.$hostPageBaseURL = $this.$hostPageBaseURL.$substring0(0, $indexQM);
    $this.$graphics = cgxgbt_TeaGraphics__init_($this.$config0);
    $this.$preloader1 = cgxgbtp_Preloader__init_($this.$hostPageBaseURL, $this.$graphics.$canvas, $this);
    $assetListener = cgxgbt_AssetLoaderListener__init_();
    $this.$preloader1.$preload($this.$config0.$preloadAssets, $rt_s(1131));
    $this.$input = cgxgbt_TeaInput__init_($this.$graphics.$canvas);
    $this.$files = cgxgbt_TeaFiles__init_($this.$preloader1);
    $this.$net = cgxgbt_TeaNet__init_();
    $this.$logger = cgxgbt_TeaApplicationLogger__init_();
    $this.$clipboard = cgxgbt_TeaClipboard__init_();
    if ($this.$config0.$useNativePixmap)
        cgxgbt_TeaApplication_initGdx($this);
    cgxgbt_TeaApplication_initSound($this);
    $this.$initBulletPhysics($this);
    $this.$initBox2dPhysics($this);
    $this.$initImGui($this);
    cbg_Gdx_app = $this;
    cbg_Gdx_graphics = $this.$graphics;
    cbg_Gdx_gl = $this.$graphics.$getGL20();
    cbg_Gdx_gl20 = $this.$graphics.$getGL20();
    cbg_Gdx_input = $this.$input;
    cbg_Gdx_files = $this.$files;
    cbg_Gdx_net = $this.$net;
    var$4 = $this.$window0.$getDocument();
    var$5 = cgxgbt_TeaApplication$1__init_($this);
    var$4.addEventListener("visibilitychange", otji_JS_function(var$5, "handleEvent"));
    $this.$window0.$requestAnimationFrame($this);
    if ($this.$config0.$isAutoSizeApplication())
        $this.$window0.$addEventListener($rt_s(1132), cgxgbt_TeaApplication$2__init_($this));
}
function cgxgbt_TeaApplication_run($this) {
    var $state, $queue, $element, $total, $minPercentage, $percentage, $progressBar, var$8, var$9, var$10, $t, $$je;
    $state = $this.$initState;
    a: {
        try {
            b: {
                cgxgbt_TeaApplication$8_$callClinit();
                switch (cgxgbt_TeaApplication$8_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal($state)]) {
                    case 1:
                        $queue = (cgxgbtp_AssetDownloader_getInstance()).$getQueue();
                        if (!$queue) {
                            cgxgbt_TeaApplication$AppState_$callClinit();
                            $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
                            $element = $rt_globals.window.document.getElementById("progress");
                            if ($element !== null)
                                $element.style.setProperty("display", "none");
                            break b;
                        }
                        $total = $this.$preloader1.$assetTotal;
                        if ($total > 0) {
                            $minPercentage = 25;
                            $percentage = $minPercentage + ((75 * ($total - $queue | 0) | 0) / $total | 0) | 0;
                            $progressBar = $rt_globals.window.document.getElementById("progress-bar");
                            if ($progressBar !== null) {
                                var$8 = $progressBar.style;
                                var$9 = jl_StringBuilder__init_();
                                jl_StringBuilder_append0(jl_StringBuilder_append1(var$9, $percentage), 37);
                                var$10 = jl_StringBuilder_toString(var$9);
                                var$8.setProperty("width", $rt_ustr(var$10));
                            }
                        }
                        break b;
                    case 2:
                        break;
                    default:
                        break b;
                }
                if ($this.$queueAppListener !== null) {
                    if ($this.$appListener !== null) {
                        $this.$appListener.$pause();
                        $this.$appListener.$dispose();
                    }
                    $this.$input.$setInputProcessor(null);
                    $this.$input.$reset2();
                    $this.$runnables.$clear8();
                    $this.$appListener = $this.$queueAppListener;
                    $this.$queueAppListener = null;
                    cgxgbt_TeaApplication$AppState_$callClinit();
                    $this.$initState = cgxgbt_TeaApplication$AppState_APP_CREATE;
                    $this.$graphics.$frameId = Long_ZERO;
                }
                cgxgbt_TeaApplication_step($this, $this.$appListener);
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $t = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        $this.$window0.$requestAnimationFrame($this);
        return;
    }
    $t.$printStackTrace0();
    $rt_throw($t);
}
function cgxgbt_TeaApplication_step($this, $appListener) {
    var $width, $height, $resizeBypass, var$5, $i, var$7;
    $this.$graphics.$update();
    $width = cbg_Gdx_graphics.$getWidth();
    $height = cbg_Gdx_graphics.$getHeight();
    $resizeBypass = 0;
    var$5 = $this.$initState;
    cgxgbt_TeaApplication$AppState_$callClinit();
    if (var$5 === cgxgbt_TeaApplication$AppState_APP_CREATE) {
        $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
        $appListener.$create();
        $appListener.$resume();
        $resizeBypass = 1;
    }
    if (!($width == $this.$lastWidth && $height == $this.$lastHeight && !$resizeBypass)) {
        $this.$lastWidth = $width;
        $this.$lastHeight = $height;
        cbg_Gdx_gl.$glViewport(0, 0, $width, $height);
        $appListener.$resize($width, $height);
    }
    $this.$runnablesHelper.$addAll3($this.$runnables);
    $this.$runnables.$clear8();
    $i = 0;
    while ($i < $this.$runnablesHelper.$size) {
        ($this.$runnablesHelper.$get3($i)).$run();
        $i = $i + 1 | 0;
    }
    $this.$runnablesHelper.$clear8();
    var$7 = $this.$graphics;
    var$7.$frameId = Long_add(var$7.$frameId, Long_fromInt(1));
    if (Long_gt($this.$graphics.$frameId, Long_fromInt(60)))
        $appListener.$render1();
    $this.$input.$reset2();
}
function cgxgbt_TeaApplication_setApplicationListener($this, $applicationListener) {
    $this.$queueAppListener = $applicationListener;
}
function cgxgbt_TeaApplication_getPreloader($this) {
    return $this.$preloader1;
}
function cgxgbt_TeaApplication_getConfig($this) {
    return $this.$config0;
}
function cgxgbt_TeaApplication_log($this, $tag, $message) {
    if ($this.$logLevel >= 2)
        ($this.$getApplicationLogger()).$log0($tag, $message);
}
function cgxgbt_TeaApplication_error($this, $tag, $message) {
    if ($this.$logLevel >= 1)
        ($this.$getApplicationLogger()).$error0($tag, $message);
}
function cgxgbt_TeaApplication_setLogLevel($this, $logLevel) {
    $this.$logLevel = $logLevel;
}
function cgxgbt_TeaApplication_getApplicationLogger($this) {
    return $this.$logger;
}
function cgxgbt_TeaApplication_getType($this) {
    cbg_Application$ApplicationType_$callClinit();
    return cbg_Application$ApplicationType_WebGL;
}
function cgxgbt_TeaApplication_postRunnable($this, $runnable) {
    $this.$runnables.$add3($runnable);
}
function cgxgbt_TeaApplication_exit($this) {}
function cgxgbt_TeaApplication_initGdx($this) {
    $this.$preloader1.$loadScript(1, $rt_s(1133), cgxgbt_TeaApplication$3__init_($this));
}
function cgxgbt_TeaApplication_initSound($this) {
    $this.$preloader1.$loadScript(1, $rt_s(1134), cgxgbt_TeaApplication$4__init_($this));
}
function cgxgbt_TeaApplication_initBulletPhysics($this, $application) {
    var $preloader;
    $preloader = $application.$getPreloader();
    cgxgbt_TeaApplication_initBulletPhysicsWasm($this, $preloader);
}
function cgxgbt_TeaApplication_initBox2dPhysics($this, $application) {
    var $preloader;
    $preloader = $application.$getPreloader();
    cgxgbt_TeaApplication_initBox2DPhysicsWasm($this, $preloader);
}
function cgxgbt_TeaApplication_initImGui($this, $application) {
    var $preloader;
    $preloader = $application.$getPreloader();
    cgxgbt_TeaApplication_initImGuiWasm($this, $preloader);
}
function cgxgbt_TeaApplication_initBulletPhysicsWasm($this, $preloader) {
    $preloader.$loadScript(1, $rt_s(1135), cgxgbt_TeaApplication$5__init_($this));
}
function cgxgbt_TeaApplication_initImGuiWasm($this, $preloader) {
    $preloader.$loadScript(1, $rt_s(1136), cgxgbt_TeaApplication$6__init_($this));
}
function cgxgbt_TeaApplication_initBox2DPhysicsWasm($this, $preloader) {
    $preloader.$loadScript(1, $rt_s(1137), cgxgbt_TeaApplication$7__init_($this));
}
var cbgssa_ScaleByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$057 = null;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_(var_0) {
    var var_1 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0(var_1, var_0);
    return var_1;
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0($this, $this$0) {
    $this.$this$057 = $this$0;
    jur_AbstractCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains($this, $ch) {
    return jl_Character_isIdentifierIgnorable($ch);
}
var cbg_LifecycleListener = $rt_classWithoutFields(0);
var jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
function jur_ReluctantQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantQuantifierSet();
    jur_ReluctantQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var var$4;
    while (true) {
        var$4 = $this.$next.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$getRightBound()) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
}
var cbgggm_Animation = $rt_classWithoutFields();
var cbgur_ArrayReflection = $rt_classWithoutFields();
function cbgur_ArrayReflection_newInstance($c, $size) {
    return jlr_Array_newInstance($c, $size);
}
var cbgm_Polyline = $rt_classWithoutFields();
var cbgggpv_PointSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
function cbgg_Mesh() {
    var a = this; jl_Object.call(a);
    a.$vertices1 = null;
    a.$indices = null;
    a.$autoBind = 0;
    a.$isVertexArray = 0;
    a.$instances = null;
    a.$isInstanced = 0;
    a.$tmpV = null;
}
var cbgg_Mesh_meshes = null;
function cbgg_Mesh_$callClinit() {
    cbgg_Mesh_$callClinit = $rt_eraseClinit(cbgg_Mesh);
    cbgg_Mesh__clinit_();
}
function cbgg_Mesh__init_0(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgg_Mesh();
    cbgg_Mesh__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgg_Mesh__init_2(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbgg_Mesh__init_3(var_0, var_1, var_2, var_3, var_4) {
    var var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_4(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
}
function cbgg_Mesh__init_1($this, $isStatic, $maxVertices, $maxIndices, $attributes) {
    cbgg_Mesh_$callClinit();
    jl_Object__init_0($this);
    $this.$autoBind = 1;
    $this.$isInstanced = 0;
    $this.$tmpV = cbgm_Vector3__init_();
    $this.$vertices1 = cbgg_Mesh_makeVertexBuffer($this, $isStatic, $maxVertices, cbgg_VertexAttributes__init_($attributes));
    $this.$indices = cbggg_IndexBufferObject__init_($isStatic, $maxIndices);
    $this.$isVertexArray = 0;
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
}
function cbgg_Mesh_makeVertexBuffer($this, $isStatic, $maxVertices, $vertexAttributes) {
    if (cbg_Gdx_gl30 === null)
        return cbggg_VertexBufferObject__init_($isStatic, $maxVertices, $vertexAttributes);
    return cbggg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $vertexAttributes);
}
function cbgg_Mesh__init_($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
    cbgg_Mesh_$callClinit();
    cbgg_Mesh__init_4($this, $type, $isStatic, $maxVertices, $maxIndices, cbgg_VertexAttributes__init_($attributes));
}
function cbgg_Mesh__init_4($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
    cbgg_Mesh_$callClinit();
    a: {
        b: {
            jl_Object__init_0($this);
            $this.$autoBind = 1;
            $this.$isInstanced = 0;
            $this.$tmpV = cbgm_Vector3__init_();
            cbgg_Mesh$1_$callClinit();
            switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal($type)]) {
                case 1:
                    break;
                case 2:
                    $this.$vertices1 = cbggg_VertexBufferObjectSubData__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 3:
                    $this.$vertices1 = cbggg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 4:
                    break b;
                default:
                    break b;
            }
            $this.$vertices1 = cbggg_VertexBufferObject__init_($isStatic, $maxVertices, $attributes);
            $this.$indices = cbggg_IndexBufferObject__init_($isStatic, $maxIndices);
            $this.$isVertexArray = 0;
            break a;
        }
        $this.$vertices1 = cbggg_VertexArray__init_($maxVertices, $attributes);
        $this.$indices = cbggg_IndexArray__init_($maxIndices);
        $this.$isVertexArray = 1;
    }
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
}
function cbgg_Mesh_setVertices($this, $vertices, $offset, $count) {
    $this.$vertices1.$setVertices0($vertices, $offset, $count);
    return $this;
}
function cbgg_Mesh_setIndices($this, $indices) {
    var var$2;
    var$2 = $indices.data;
    $this.$indices.$setIndices0($indices, 0, var$2.length);
    return $this;
}
function cbgg_Mesh_getNumIndices($this) {
    return $this.$indices.$getNumIndices();
}
function cbgg_Mesh_getNumVertices($this) {
    return $this.$vertices1.$getNumVertices();
}
function cbgg_Mesh_bind($this, $shader) {
    $this.$bind0($shader, null, null);
}
function cbgg_Mesh_bind0($this, $shader, $locations, $instanceLocations) {
    $this.$vertices1.$bind1($shader, $locations);
    if ($this.$instances !== null && $this.$instances.$getNumInstances() > 0)
        $this.$instances.$bind1($shader, $instanceLocations);
    if ($this.$indices.$getNumIndices() > 0)
        $this.$indices.$bind();
}
function cbgg_Mesh_unbind($this, $shader) {
    $this.$unbind($shader, null, null);
}
function cbgg_Mesh_unbind0($this, $shader, $locations, $instanceLocations) {
    $this.$vertices1.$unbind0($shader, $locations);
    if ($this.$instances !== null && $this.$instances.$getNumInstances() > 0)
        $this.$instances.$unbind0($shader, $instanceLocations);
    if ($this.$indices.$getNumIndices() > 0)
        $this.$indices.$unbind1();
}
function cbgg_Mesh_render($this, $shader, $primitiveType) {
    $this.$render3($shader, $primitiveType, 0, $this.$indices.$getNumMaxIndices() <= 0 ? $this.$getNumVertices() : $this.$getNumIndices(), $this.$autoBind);
}
function cbgg_Mesh_render0($this, $shader, $primitiveType, $offset, $count) {
    $this.$render3($shader, $primitiveType, $offset, $count, $this.$autoBind);
}
function cbgg_Mesh_render1($this, $shader, $primitiveType, $offset, $count, $autoBind) {
    var $buffer, $oldPosition, $numInstances, var$9, var$10, var$11;
    if (!$count)
        return;
    if ($autoBind)
        $this.$bind2($shader);
    if ($this.$isVertexArray) {
        if ($this.$indices.$getNumIndices() <= 0)
            cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        else {
            $buffer = $this.$indices.$getBuffer(0);
            $oldPosition = jn_Buffer_position($buffer);
            jn_Buffer_limit($buffer);
            $buffer.$position3($offset);
            cbg_Gdx_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
            $buffer.$position3($oldPosition);
        }
    } else {
        $numInstances = 0;
        if ($this.$isInstanced)
            $numInstances = $this.$instances.$getNumInstances();
        if ($this.$indices.$getNumIndices() <= 0) {
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawArraysInstanced($primitiveType, $offset, $count, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        } else {
            if (($count + $offset | 0) > $this.$indices.$getNumMaxIndices()) {
                var$9 = new cbgu_GdxRuntimeException;
                var$10 = (((((jl_StringBuilder__init_()).$append1($rt_s(1138))).$append2($count)).$append1($rt_s(1139))).$append2($offset)).$append1($rt_s(1140));
                var$11 = $this.$indices;
                cbgu_GdxRuntimeException__init_(var$9, ((var$10.$append2(var$11.$getNumMaxIndices())).$append1($rt_s(1007))).$toString());
                $rt_throw(var$9);
            }
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawElementsInstanced($primitiveType, $count, 5123, $offset * 2 | 0, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
        }
    }
    if ($autoBind)
        $this.$unbind2($shader);
}
function cbgg_Mesh_getVertexAttribute($this, $usage) {
    var $attributes, $len, $i;
    $attributes = $this.$vertices1.$getAttributes();
    $len = cbgg_VertexAttributes_size($attributes);
    $i = 0;
    while ($i < $len) {
        if ((cbgg_VertexAttributes_get($attributes, $i)).$usage == $usage)
            return cbgg_VertexAttributes_get($attributes, $i);
        $i = $i + 1 | 0;
    }
    return null;
}
function cbgg_Mesh_getVertexAttributes($this) {
    return $this.$vertices1.$getAttributes();
}
function cbgg_Mesh_getIndicesBuffer($this, $forWriting) {
    return $this.$indices.$getBuffer($forWriting);
}
function cbgg_Mesh_addManagedMesh($app, $mesh) {
    var $managedResources;
    cbgg_Mesh_$callClinit();
    $managedResources = cbgg_Mesh_meshes.$get0($app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    $managedResources.$add3($mesh);
    cbgg_Mesh_meshes.$put1($app, $managedResources);
}
function cbgg_Mesh__clinit_() {
    cbgg_Mesh_meshes = ju_HashMap__init_();
}
function cgtr_PouchRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA6 = Long_ZERO;
    a.$stateB6 = Long_ZERO;
    a.$stateC4 = Long_ZERO;
    a.$stateD3 = Long_ZERO;
}
function cgtr_PouchRandom__init_() {
    var var_0 = new cgtr_PouchRandom();
    cgtr_PouchRandom__init_0(var_0);
    return var_0;
}
function cgtr_PouchRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$stateA6 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateB6 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateC4 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateD3 = Long_or(cgtr_EnhancedRandom_seedFromMath(), Long_fromInt(1));
    if (Long_eq(Long_or(Long_or($this.$stateA6, $this.$stateB6), $this.$stateC4), Long_ZERO))
        $this.$stateA6 = Long_fromInt(1);
}
function cgtr_PouchRandom_nextLong($this) {
    var $a, $b, $c, $d;
    $a = $this.$stateA6;
    $b = $this.$stateB6;
    $c = $this.$stateC4;
    $d = $this.$stateD3;
    $this.$stateA6 = Long_mul($c, $d);
    $this.$stateB6 = Long_or(Long_shl($a, 47), Long_shru($a, 17));
    $this.$stateC4 = Long_sub($b, $a);
    $this.$stateD3 = Long_add($d, Long_create(588569818, 3814593898));
    return $c;
}
function cgtr_PouchRandom_next($this, $bits) {
    var $a, $b, $c, $d;
    $a = $this.$stateA6;
    $b = $this.$stateB6;
    $c = $this.$stateC4;
    $d = $this.$stateD3;
    $this.$stateA6 = Long_mul($c, $d);
    $this.$stateB6 = Long_or(Long_shl($a, 47), Long_shru($a, 17));
    $this.$stateC4 = Long_sub($b, $a);
    $this.$stateD3 = Long_add($d, Long_create(588569818, 3814593898));
    return Long_lo($c) >>> (32 - $bits | 0) | 0;
}
var cbgu_ObjectSet = $rt_classWithoutFields();
function cbgu_ObjectSet_tableSize($capacity, $loadFactor) {
    var $tableSize;
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(1141))).$append2($capacity)).$toString()));
    $tableSize = cbgm_MathUtils_nextPowerOfTwo(jl_Math_max(2, jl_Math_ceil($capacity / $loadFactor) | 0));
    if ($tableSize <= 1073741824)
        return $tableSize;
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(1142))).$append2($capacity)).$toString()));
}
var otjb_Performance = $rt_classWithoutFields();
var jur_EOISet = $rt_classWithoutFields(jur_AbstractSet);
function jur_EOISet__init_() {
    var var_0 = new jur_EOISet();
    jur_EOISet__init_0(var_0);
    return var_0;
}
function jur_EOISet__init_0($this) {
    jur_AbstractSet__init_($this);
}
function jur_EOISet_matches($this, $stringIndex, $testString, $matchResult) {
    var $rightBound;
    $rightBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getRightBound() : $testString.$length();
    if ($stringIndex < $rightBound)
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_EOISet_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_EOISet_getName($this) {
    return $rt_s(1143);
}
function cbgu_ObjectIntMap() {
    var a = this; jl_Object.call(a);
    a.$size10 = 0;
    a.$keyTable2 = null;
    a.$valueTable1 = null;
    a.$loadFactor4 = 0.0;
    a.$threshold4 = 0;
    a.$shift3 = 0;
    a.$mask4 = 0;
}
function cbgu_ObjectIntMap__init_() {
    var var_0 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_0(var_0);
    return var_0;
}
function cbgu_ObjectIntMap__init_1(var_0, var_1) {
    var var_2 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_2(var_2, var_0, var_1);
    return var_2;
}
function cbgu_ObjectIntMap__init_0($this) {
    cbgu_ObjectIntMap__init_2($this, 51, 0.800000011920929);
}
function cbgu_ObjectIntMap__init_2($this, $initialCapacity, $loadFactor) {
    var $tableSize;
    jl_Object__init_0($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor4 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold4 = $tableSize * $loadFactor | 0;
        $this.$mask4 = $tableSize - 1 | 0;
        $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask4));
        $this.$keyTable2 = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable1 = $rt_createIntArray($tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(501))).$append19($loadFactor)).$toString()));
}
function cbgu_ObjectIntMap_place($this, $item) {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode0()), Long_create(2135587861, 2654435769)), $this.$shift3));
}
function cbgu_ObjectIntMap_locateKey($this, $key) {
    var $keyTable, $i, $other;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(1086)));
    $keyTable = $this.$keyTable2;
    $i = $this.$place0($key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask4;
    }
    return $i;
}
function cbgu_ObjectIntMap_put($this, $key, $value) {
    var $i, var$4;
    $i = $this.$locateKey0($key);
    if ($i >= 0) {
        $this.$valueTable1.data[$i] = $value;
        return;
    }
    var$4 =  -($i + 1 | 0) | 0;
    $this.$keyTable2.data[var$4] = $key;
    $this.$valueTable1.data[var$4] = $value;
    var$4 = $this.$size10 + 1 | 0;
    $this.$size10 = var$4;
    if (var$4 >= $this.$threshold4)
        cbgu_ObjectIntMap_resize($this, $this.$keyTable2.data.length << 1);
}
function cbgu_ObjectIntMap_putResize($this, $key, $value) {
    var $keyTable, $i, var$5;
    $keyTable = $this.$keyTable2;
    $i = $this.$place0($key);
    while (true) {
        var$5 = $keyTable.data;
        if (var$5[$i] === null)
            break;
        $i = ($i + 1 | 0) & $this.$mask4;
    }
    var$5[$i] = $key;
    $this.$valueTable1.data[$i] = $value;
}
function cbgu_ObjectIntMap_get($this, $key, $defaultValue) {
    var $i;
    $i = $this.$locateKey0($key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable1.data[$i];
    return $defaultValue;
}
function cbgu_ObjectIntMap_resize($this, $newSize) {
    var $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable2.data.length;
        $this.$threshold4 = $newSize * $this.$loadFactor4 | 0;
        $this.$mask4 = $newSize - 1 | 0;
        $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask4));
        $oldKeyTable = $this.$keyTable2;
        $oldValueTable = $this.$valueTable1;
        $this.$keyTable2 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable1 = $rt_createIntArray($newSize);
        if ($this.$size10 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    cbgu_ObjectIntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
}
function cgt_ChiScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist16 = null;
    a.$batch22 = null;
    a.$renderer21 = null;
    a.$amounts21 = null;
    a.$iterations21 = Long_ZERO;
    a.$font23 = null;
    a.$viewport21 = null;
    a.$mainGame21 = null;
}
function cgt_ChiScreen__init_(var_0) {
    var var_1 = new cgt_ChiScreen();
    cgt_ChiScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ChiScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font23 = $this.$mainGame21.$font0;
    a: {
        try {
            var$1 = new cgtrd_ChiDistribution;
            var$2 = $this.$mainGame21.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ChiDistribution__init_(var$1, var$2, cgt_DistributorDemo_a | 0);
            $this.$dist16 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist16 = cgtrd_ChiDistribution__init_0($this.$mainGame21.$random0, 1);
    }
    $this.$batch22 = $this.$mainGame21.$batch0;
    $this.$viewport21 = cbguv_ScreenViewport__init_();
    $this.$renderer21 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts21, Long_ZERO);
    $this.$iterations21 = Long_ZERO;
}
function cgt_ChiScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts21 = $rt_createLongArray(512);
    $this.$iterations21 = Long_ZERO;
    $this.$mainGame21 = $main;
}
function cgt_ChiScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame21.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame21.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport21.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts21, Long_ZERO);
        $this.$iterations21 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts21, Long_ZERO);
        $this.$iterations21 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts21, Long_ZERO);
        $this.$iterations21 = Long_ZERO;
    }
    $this.$iterations21 = Long_add($this.$iterations21, Long_fromInt(1));
    var$3 = $this.$dist16;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist16.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts21.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer21.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer21.$color($color);
        var$3 = $this.$renderer21;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer21.$color($color);
        $this.$renderer21.$vertex(var$9, Long_toNumber(Long_div($this.$amounts21.data[$x], $this.$iterations21)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer21.$color((-6.221923240859403E37));
        var$3 = $this.$renderer21;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer21.$color((-6.221923240859403E37));
        $this.$renderer21.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer21.$end();
    $this.$batch22.$setProjectionMatrix($camera.$combined);
    $this.$batch22.$begin0();
    var$3 = $this.$font23;
    var$12 = $this.$batch22;
    var$6 = $rt_createArray(jl_Object, 3);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf($this.$dist16.$getMean());
    var$13[2] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1144), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font23.$draw($this.$batch22, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font23.$draw($this.$batch22, $rt_s(1101), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch22.$end();
}
function cgt_ChiScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport21.$update0($width, $height, 1);
    $this.$viewport21.$apply(1);
}
function jn_ByteBufferImpl() {
    var a = this; jn_ByteBuffer.call(a);
    a.$direct = 0;
    a.$readOnly7 = 0;
}
function jn_ByteBufferImpl__init_(var_0, var_1) {
    var var_2 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_1(var_2, var_0, var_1);
    return var_2;
}
function jn_ByteBufferImpl__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
    var var_7 = new jn_ByteBufferImpl();
    jn_ByteBufferImpl__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
}
function jn_ByteBufferImpl__init_1($this, $capacity, $direct) {
    jn_ByteBufferImpl__init_2($this, 0, $capacity, $rt_createByteArray($capacity), 0, $capacity, $direct, 0);
}
function jn_ByteBufferImpl__init_2($this, $start, $capacity, $array, $position, $limit, $direct, $readOnly) {
    jn_ByteBuffer__init_($this, $start, $capacity, $array, $position, $limit);
    $this.$direct = $direct;
    $this.$readOnly7 = $readOnly;
}
function jn_ByteBufferImpl_get($this, $index) {
    var var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit)
        return $this.$array0.data[$this.$start9 + $index | 0];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(264)), $index), $rt_s(54)), var$3), 41);
    jl_IndexOutOfBoundsException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
}
function jn_ByteBufferImpl_compact($this) {
    var $sz, $dst, $src, $i, var$5, var$6, var$7, var$8;
    if ($this.$readOnly7)
        $rt_throw(jn_ReadOnlyBufferException__init_());
    a: {
        $sz = jn_Buffer_remaining($this);
        if ($this.$position2 > 0) {
            $dst = $this.$start9;
            $src = $this.$start9 + $this.$position2 | 0;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$5 = $this.$array0.data;
                var$6 = $dst + 1 | 0;
                var$7 = $this.$array0.data;
                var$8 = $src + 1 | 0;
                var$5[$dst] = var$7[$src];
                $i = $i + 1 | 0;
                $dst = var$6;
                $src = var$8;
            }
        }
    }
    $this.$position2 = $sz;
    $this.$limit = $this.$capacity;
    $this.$mark = (-1);
    return $this;
}
function jn_ByteBufferImpl_isReadOnly($this) {
    return $this.$readOnly7;
}
function jn_ByteBufferImpl_asShortBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    var$2 = $this.$order;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_ShortBufferOverByteBufferLittleEndian__init_($this.$start9 + $this.$position2 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_ShortBufferOverByteBufferBigEndian__init_($this.$start9 + $this.$position2 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_getInt($this, $index) {
    var $a, $b, $c, $d, var$6, var$7, var$8;
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        $a = $this.$array0.data[$this.$start9 + $index | 0] & 255;
        $b = $this.$array0.data[($this.$start9 + $index | 0) + 1 | 0] & 255;
        $c = $this.$array0.data[($this.$start9 + $index | 0) + 2 | 0] & 255;
        $d = $this.$array0.data[($this.$start9 + $index | 0) + 3 | 0] & 255;
        var$6 = $this.$order;
        jn_ByteOrder_$callClinit();
        if (var$6 !== jn_ByteOrder_BIG_ENDIAN)
            return $d << 24 | $c << 16 | $b << 8 | $a;
        return $a << 24 | $b << 16 | $c << 8 | $d;
    }
    var$6 = new jl_IndexOutOfBoundsException;
    var$7 = $this.$limit - 3 | 0;
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(264)), $index), $rt_s(54)), var$7), 41);
    jl_IndexOutOfBoundsException__init_1(var$6, jl_StringBuilder_toString(var$8));
    $rt_throw(var$6);
}
function jn_ByteBufferImpl_putInt($this, $index, $value) {
    var var$3, var$4, var$5;
    if ($this.$readOnly7)
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
        var$3 = $this.$order;
        jn_ByteOrder_$callClinit();
        if (var$3 !== jn_ByteOrder_BIG_ENDIAN) {
            $this.$array0.data[$this.$start9 + $index | 0] = $value << 24 >> 24;
            $this.$array0.data[($this.$start9 + $index | 0) + 1 | 0] = $value >> 8 << 24 >> 24;
            $this.$array0.data[($this.$start9 + $index | 0) + 2 | 0] = $value >> 16 << 24 >> 24;
            $this.$array0.data[($this.$start9 + $index | 0) + 3 | 0] = $value >> 24 << 24 >> 24;
        } else {
            $this.$array0.data[$this.$start9 + $index | 0] = $value >> 24 << 24 >> 24;
            $this.$array0.data[($this.$start9 + $index | 0) + 1 | 0] = $value >> 16 << 24 >> 24;
            $this.$array0.data[($this.$start9 + $index | 0) + 2 | 0] = $value >> 8 << 24 >> 24;
            $this.$array0.data[($this.$start9 + $index | 0) + 3 | 0] = $value << 24 >> 24;
        }
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit - 3 | 0;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(264)), $index), $rt_s(54)), var$4), 41);
    jl_IndexOutOfBoundsException__init_1(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
}
function jn_ByteBufferImpl_asIntBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    var$2 = $this.$order;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_BIG_ENDIAN)
        return jn_IntBufferOverByteBufferLittleEndian__init_($this.$start9 + $this.$position2 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_IntBufferOverByteBufferBigEndian__init_($this.$start9 + $this.$position2 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jn_ByteBufferImpl_asFloatBuffer($this) {
    var $sz, var$2;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    var$2 = $this.$order;
    jn_ByteOrder_$callClinit();
    if (var$2 !== jn_ByteOrder_LITTLE_ENDIAN)
        return jn_FloatBufferOverByteBufferLittleEndian__init_($this.$start9 + $this.$position2 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
    return jn_FloatBufferOverByteBufferBigEndian__init_($this.$start9 + $this.$position2 | 0, $sz, $this, 0, $sz, $this.$isReadOnly());
}
function jl_Thread$SleepHandler() {
    var a = this; jl_Object.call(a);
    a.$thread = null;
    a.$callback = null;
    a.$isInterrupted = 0;
    a.$scheduleId = 0;
}
function jl_Thread$SleepHandler__init_(var_0, var_1) {
    var var_2 = new jl_Thread$SleepHandler();
    jl_Thread$SleepHandler__init_0(var_2, var_0, var_1);
    return var_2;
}
function jl_Thread$SleepHandler__init_0($this, $thread_0, $callback) {
    jl_Object__init_0($this);
    $this.$thread = $thread_0;
    $this.$callback = $callback;
}
function jl_Thread$SleepHandler_run($this) {
    if (!$this.$isInterrupted) {
        $this.$thread.$interruptHandler = null;
        jl_Thread_setCurrentThread($this.$thread);
        $this.$callback.$complete(null);
    }
}
function cbgm_Plane() {
    var a = this; jl_Object.call(a);
    a.$normal0 = null;
    a.$d = 0.0;
}
function cbgm_Plane__init_(var_0, var_1) {
    var var_2 = new cbgm_Plane();
    cbgm_Plane__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgm_Plane__init_0($this, $normal, $d) {
    jl_Object__init_0($this);
    $this.$normal0 = cbgm_Vector3__init_();
    $this.$d = 0.0;
    ($this.$normal0.$set1($normal)).$nor();
    $this.$d = $d;
}
function cbgm_Plane_set($this, $point1, $point2, $point3) {
    ((($this.$normal0.$set1($point1)).$sub($point2)).$crs0($point2.$x - $point3.$x, $point2.$y - $point3.$y, $point2.$z - $point3.$z)).$nor();
    $this.$d =  -$point1.$dot($this.$normal0);
}
var cbgu_Json$Serializer = $rt_classWithoutFields(0);
function cbgm_Frustum() {
    var a = this; jl_Object.call(a);
    a.$planes = null;
    a.$planePoints = null;
    a.$planePointsArray = null;
}
var cbgm_Frustum_clipSpacePlanePoints = null;
var cbgm_Frustum_clipSpacePlanePointsArray = null;
var cbgm_Frustum_tmpV = null;
function cbgm_Frustum_$callClinit() {
    cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
    cbgm_Frustum__clinit_();
}
function cbgm_Frustum__init_() {
    var var_0 = new cbgm_Frustum();
    cbgm_Frustum__init_0(var_0);
    return var_0;
}
function cbgm_Frustum__init_0($this) {
    var $i;
    cbgm_Frustum_$callClinit();
    jl_Object__init_0($this);
    $this.$planes = $rt_createArray(cbgm_Plane, 6);
    $this.$planePoints = $rt_createArrayFromData(cbgm_Vector3, [cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_(), cbgm_Vector3__init_()]);
    $this.$planePointsArray = $rt_createFloatArray(24);
    $i = 0;
    while ($i < 6) {
        $this.$planes.data[$i] = cbgm_Plane__init_(cbgm_Vector3__init_(), 0.0);
        $i = $i + 1 | 0;
    }
}
function cbgm_Frustum_update($this, $inverseProjectionView) {
    var $i, $j, $v, var$5, var$6, var$7;
    cbgm_Frustum_$callClinit();
    jl_System_arraycopy(cbgm_Frustum_clipSpacePlanePointsArray, 0, $this.$planePointsArray, 0, cbgm_Frustum_clipSpacePlanePointsArray.data.length);
    cbgm_Matrix4_prj($inverseProjectionView.$val, $this.$planePointsArray, 0, 8, 3);
    $i = 0;
    $j = 0;
    while ($i < 8) {
        $v = $this.$planePoints.data[$i];
        var$5 = $this.$planePointsArray.data;
        var$6 = $j + 1 | 0;
        $v.$x = var$5[$j];
        var$5 = $this.$planePointsArray.data;
        var$7 = var$6 + 1 | 0;
        $v.$y = var$5[var$6];
        var$5 = $this.$planePointsArray.data;
        $j = var$7 + 1 | 0;
        $v.$z = var$5[var$7];
        $i = $i + 1 | 0;
    }
    $this.$planes.data[0].$set9($this.$planePoints.data[1], $this.$planePoints.data[0], $this.$planePoints.data[2]);
    $this.$planes.data[1].$set9($this.$planePoints.data[4], $this.$planePoints.data[5], $this.$planePoints.data[7]);
    $this.$planes.data[2].$set9($this.$planePoints.data[0], $this.$planePoints.data[4], $this.$planePoints.data[3]);
    $this.$planes.data[3].$set9($this.$planePoints.data[5], $this.$planePoints.data[1], $this.$planePoints.data[6]);
    $this.$planes.data[4].$set9($this.$planePoints.data[2], $this.$planePoints.data[3], $this.$planePoints.data[6]);
    $this.$planes.data[5].$set9($this.$planePoints.data[4], $this.$planePoints.data[0], $this.$planePoints.data[1]);
}
function cbgm_Frustum__clinit_() {
    var $j, var$2, var$3, var$4, $v, var$6, var$7, var$8;
    cbgm_Frustum_clipSpacePlanePoints = $rt_createArrayFromData(cbgm_Vector3, [cbgm_Vector3__init_1((-1.0), (-1.0), (-1.0)), cbgm_Vector3__init_1(1.0, (-1.0), (-1.0)), cbgm_Vector3__init_1(1.0, 1.0, (-1.0)), cbgm_Vector3__init_1((-1.0), 1.0, (-1.0)), cbgm_Vector3__init_1((-1.0), (-1.0), 1.0), cbgm_Vector3__init_1(1.0, (-1.0), 1.0), cbgm_Vector3__init_1(1.0, 1.0, 1.0), cbgm_Vector3__init_1((-1.0), 1.0, 1.0)]);
    cbgm_Frustum_clipSpacePlanePointsArray = $rt_createFloatArray(24);
    $j = 0;
    var$2 = cbgm_Frustum_clipSpacePlanePoints.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $v = var$2[var$4];
        var$6 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        var$7 = $j + 1 | 0;
        var$6[$j] = $v.$x;
        var$6 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        var$8 = var$7 + 1 | 0;
        var$6[var$7] = $v.$y;
        var$6 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        $j = var$8 + 1 | 0;
        var$6[var$8] = $v.$z;
        var$4 = var$4 + 1 | 0;
    }
    cbgm_Frustum_tmpV = cbgm_Vector3__init_();
}
function cbgmc_Ray() {
    var a = this; jl_Object.call(a);
    a.$origin = null;
    a.$direction0 = null;
}
var cbgmc_Ray_tmp = null;
function cbgmc_Ray_$callClinit() {
    cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
    cbgmc_Ray__clinit_();
}
function cbgmc_Ray__init_(var_0, var_1) {
    var var_2 = new cbgmc_Ray();
    cbgmc_Ray__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgmc_Ray__init_0($this, $origin, $direction) {
    cbgmc_Ray_$callClinit();
    jl_Object__init_0($this);
    $this.$origin = cbgm_Vector3__init_();
    $this.$direction0 = cbgm_Vector3__init_();
    $this.$origin.$set1($origin);
    ($this.$direction0.$set1($direction)).$nor();
}
function cbgmc_Ray__clinit_() {
    cbgmc_Ray_tmp = cbgm_Vector3__init_();
}
var cbgssu_DragScrollListener$2 = $rt_classWithoutFields(cbgu_Timer$Task);
function cgxgbt_TeaInput() {
    var a = this; jl_Object.call(a);
    a.$canvas1 = null;
    a.$justTouched = 0;
    a.$touchMap = null;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$pressedButtons = null;
    a.$pressedKeyCount = 0;
    a.$pressedKeys = null;
    a.$keyJustPressed = 0;
    a.$justPressedKeys = null;
    a.$justPressedButtons = null;
    a.$keysToCatch = null;
    a.$processor = null;
    a.$currentEventTimeStamp = Long_ZERO;
    a.$hasFocus = 0;
}
function cgxgbt_TeaInput__init_(var_0) {
    var var_1 = new cgxgbt_TeaInput();
    cgxgbt_TeaInput__init_0(var_1, var_0);
    return var_1;
}
function cgxgbt_TeaInput_getMouseWheelVelocity($event) {
    var $agent, $delta, $detail, $wheelDelta, var$6;
    $agent = cgxgbt_TeaApplication_getAgentInfo();
    $delta = 0.0;
    $detail = $event.detail;
    $wheelDelta = $event.wheelDelta;
    if ($agent.firefox ? 1 : 0)
        $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
    else if ($agent.opera ? 1 : 0)
        $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
    else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
        $delta = (-1.0) * $wheelDelta;
        var$6 = $delta / 120.0;
        if (jl_Math_abs(var$6) >= 1.0)
            $delta = var$6;
        else if (!($agent.windows ? 1 : 0))
            $delta = !($agent.macOS ? 1 : 0) ? var$6 : $delta / 3.0;
    }
    return $delta;
}
function cgxgbt_TeaInput__init_0($this, $canvas) {
    jl_Object__init_0($this);
    $this.$justTouched = 0;
    $this.$touchMap = cbgu_IntMap__init_(20);
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$pressedButtons = cbgu_IntSet__init_();
    $this.$pressedKeyCount = 0;
    $this.$pressedKeys = $rt_createBooleanArray(256);
    $this.$keyJustPressed = 0;
    $this.$justPressedKeys = $rt_createBooleanArray(256);
    $this.$justPressedButtons = $rt_createBooleanArray(5);
    $this.$keysToCatch = cbgu_IntSet__init_();
    $this.$hasFocus = 1;
    $this.$canvas1 = $canvas;
    cgxgbt_TeaInput_hookEvents($this);
}
function cgxgbt_TeaInput_hookEvents($this) {
    var $document;
    $document = $this.$canvas1.ownerDocument;
    $document.addEventListener("mousedown", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("mouseup", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("mousemove", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("wheel", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keydown", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keyup", otji_JS_function($this, "handleEvent"), !!0);
    $document.addEventListener("keypress", otji_JS_function($this, "handleEvent"), !!0);
    $this.$canvas1.addEventListener("touchstart", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas1.addEventListener("touchmove", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas1.addEventListener("touchcancel", otji_JS_function($this, "handleEvent"), !!1);
    $this.$canvas1.addEventListener("touchend", otji_JS_function($this, "handleEvent"), !!1);
}
function cgxgbt_TeaInput_handleEvent($this, $e) {
    cgxgbt_TeaInput_handleMouseEvents($this, $e);
    cgxgbt_TeaInput_handleKeyboardEvents($this, $e);
}
function cgxgbt_TeaInput_handleMouseEvents($this, $e) {
    var $type, $mouseEvent, $target, $canvas2, $equals, $button, $relativeX, $relativeY, var$10, $mouseX, $mouseY, $wheel, $wheelDelta, $touchEvent, $touches, $i, $j, $touch, $real, var$21, var$22, $touchId;
    a: {
        $type = $rt_str($e.type);
        if ($type.$equals($rt_s(1145))) {
            $rt_globals.window.focus();
            $mouseEvent = $e;
            $target = $e.target;
            $canvas2 = $this.$canvas1;
            $equals = $target !== $canvas2 ? 0 : 1;
            if ($equals && !$this.$touched.data[0]) {
                $this.$hasFocus = 1;
                $this.$justTouched = 1;
                $this.$touched.data[0] = 1;
                $button = cgxgbtu_KeyCodes_getButton($mouseEvent.button);
                $this.$pressedButtons.$add13($button);
                $this.$justPressedButtons.data[$button] = 1;
                $this.$deltaX.data[0] = 0;
                $this.$deltaY.data[0] = 0;
                if (!$this.$isCursorCatched()) {
                    $relativeX = $this.$getRelativeX($mouseEvent, $this.$canvas1);
                    $relativeY = $this.$getRelativeY($mouseEvent, $this.$canvas1);
                    $this.$touchX.data[0] = $relativeX;
                    $this.$touchY.data[0] = $relativeY;
                } else {
                    var$10 = $this.$touchX.data;
                    var$10[0] = var$10[0] + $mouseEvent.movementX | 0;
                    var$10 = $this.$touchY.data;
                    var$10[0] = var$10[0] + $mouseEvent.movementY | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                if ($this.$processor !== null)
                    $this.$processor.$touchDown($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($mouseEvent.button));
                $e.preventDefault();
                $e.stopPropagation();
                break a;
            }
            $mouseX = $this.$getRelativeX($mouseEvent, $this.$canvas1);
            $mouseY = $this.$getRelativeY($mouseEvent, $this.$canvas1);
            if (!($mouseX >= 0.0 && $mouseX <= cbg_Gdx_graphics.$getWidth() && $mouseY >= 0.0 && $mouseY <= cbg_Gdx_graphics.$getHeight()))
                $this.$hasFocus = 0;
            return;
        }
        if ($type.$equals($rt_s(1146))) {
            $mouseEvent = $e;
            if (!$this.$touched.data[0])
                return;
            $this.$pressedButtons.$remove1(cgxgbtu_KeyCodes_getButton($mouseEvent.button));
            var$10 = $this.$touched;
            var$10.data[0] = $this.$pressedButtons.$size5 <= 0 ? 0 : 1;
            if (!$this.$isCursorCatched()) {
                $this.$setDelta(0, $this.$getRelativeX($mouseEvent, $this.$canvas1) - $this.$touchX.data[0] | 0, $this.$getRelativeY($mouseEvent, $this.$canvas1) - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas1);
                $this.$touchY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas1);
            } else {
                $this.$setDelta(0, $mouseEvent.movementX | 0, $mouseEvent.movementY | 0);
                var$10 = $this.$touchX.data;
                var$10[0] = var$10[0] + $mouseEvent.movementX | 0;
                var$10 = $this.$touchY.data;
                var$10[0] = var$10[0] + $mouseEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $this.$touched.data[0] = 0;
            if ($this.$processor !== null)
                $this.$processor.$touchUp($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($mouseEvent.button));
        } else if (!$type.$equals($rt_s(1147))) {
            if ($type.$equals($rt_s(1148))) {
                $wheel = $e;
                if ($this.$processor !== null) {
                    $wheelDelta = cgxgbt_TeaInput_getMouseWheelVelocity($wheel);
                    $this.$processor.$scrolled(0.0, $wheelDelta | 0);
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            } else if ($type.$equals($rt_s(1149))) {
                $this.$justTouched = 1;
                $touchEvent = $e;
                $touches = $touchEvent.changedTouches;
                $i = 0;
                $j = $touches.length;
                while ($i < $j) {
                    $touch = $touches.item($i);
                    $real = $touch.identifier;
                    var$21 = $this.$touchMap;
                    var$22 = cgxgbt_TeaInput_getAvailablePointer($this);
                    var$21.$put12($real, jl_Integer_valueOf(var$22));
                    $this.$touched.data[var$22] = 1;
                    $this.$touchX.data[var$22] = $this.$getRelativeX0($touch, $this.$canvas1);
                    $this.$touchY.data[var$22] = $this.$getRelativeY0($touch, $this.$canvas1);
                    $this.$deltaX.data[var$22] = 0;
                    $this.$deltaY.data[var$22] = 0;
                    if ($this.$processor !== null)
                        $this.$processor.$touchDown($this.$touchX.data[var$22], $this.$touchY.data[var$22], var$22, 0);
                    $i = $i + 1 | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $e.preventDefault();
            }
        } else {
            $mouseEvent = $e;
            if (!$this.$isCursorCatched()) {
                $relativeX = $this.$getRelativeX($mouseEvent, $this.$canvas1);
                $relativeY = $this.$getRelativeY($mouseEvent, $this.$canvas1);
                $this.$setDelta(0, $relativeX - $this.$touchX.data[0] | 0, $relativeY - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $relativeX;
                $this.$touchY.data[0] = $relativeY;
            } else {
                $this.$setDelta(0, $mouseEvent.movementX | 0, $mouseEvent.movementY | 0);
                var$10 = $this.$touchX.data;
                var$10[0] = var$10[0] + $mouseEvent.movementX | 0;
                var$10 = $this.$touchY.data;
                var$10[0] = var$10[0] + $mouseEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            if ($this.$processor !== null) {
                if (!$this.$touched.data[0])
                    $this.$processor.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
                else
                    $this.$processor.$touchDragged($this.$touchX.data[0], $this.$touchY.data[0], 0);
            }
        }
    }
    if ($type.$equals($rt_s(1150))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = $touches.item($i);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get3($real)).$intValue();
            $this.$setDelta($touchId, $this.$getRelativeX0($touch, $this.$canvas1) - $this.$touchX.data[$touchId] | 0, $this.$getRelativeY0($touch, $this.$canvas1) - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $this.$getRelativeX0($touch, $this.$canvas1);
            $this.$touchY.data[$touchId] = $this.$getRelativeY0($touch, $this.$canvas1);
            if ($this.$processor !== null)
                $this.$processor.$touchDragged($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
    if ($type.$equals($rt_s(1151))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = $touches.item($i);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get3($real)).$intValue();
            $this.$touchMap.$remove($real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = $this.$getRelativeX0($touch, $this.$canvas1);
            $relativeY = $this.$getRelativeY0($touch, $this.$canvas1);
            $this.$setDelta($touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $relativeX;
            $this.$touchY.data[$touchId] = $relativeY;
            if ($this.$processor !== null)
                $this.$processor.$touchUp($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
    if ($type.$equals($rt_s(1152))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = $touches.item($i);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get3($real)).$intValue();
            $this.$touchMap.$remove($real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = $this.$getRelativeX0($touch, $this.$canvas1);
            $relativeY = $this.$getRelativeY0($touch, $this.$canvas1);
            $this.$setDelta($touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $relativeX;
            $this.$touchY.data[$touchId] = $relativeY;
            if ($this.$processor !== null)
                $this.$processor.$touchUp($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
}
function cgxgbt_TeaInput_handleKeyboardEvents($this, $e) {
    var $type, $keyboardEvent, $c, $code, $keyChar;
    $type = $rt_str($e.type);
    if (!($type.$equals($rt_s(1153)) && $this.$hasFocus)) {
        if ($type.$equals($rt_s(1154)) && $this.$hasFocus) {
            $keyboardEvent = $e;
            $c = $keyboardEvent.charCode & 65535;
            if ($this.$processor !== null)
                $this.$processor.$keyTyped($c);
            if ($c == 9) {
                $e.preventDefault();
                $e.stopPropagation();
            }
        } else if ($type.$equals($rt_s(1155)) && $this.$hasFocus) {
            $keyboardEvent = $e;
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            if ($this.$pressedKeys.data[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                $this.$pressedKeys.data[$code] = 0;
            }
            if ($this.$processor !== null)
                $this.$processor.$keyUp($code);
            if ($code == 61) {
                $e.preventDefault();
                $e.stopPropagation();
            }
        }
    } else {
        a: {
            $keyboardEvent = $e;
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            $keyChar = 0;
            switch ($code) {
                case 67:
                    $keyChar = 8;
                    break a;
                case 112:
                    $keyChar = 127;
                    break a;
                default:
            }
        }
        if (!($code != 67 && $code != 112)) {
            $e.preventDefault();
            if ($this.$processor !== null) {
                $this.$processor.$keyDown($code);
                $this.$processor.$keyTyped($keyChar);
            }
        } else if (!$this.$pressedKeys.data[$code]) {
            $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
            $this.$pressedKeys.data[$code] = 1;
            $this.$keyJustPressed = 1;
            $this.$justPressedKeys.data[$code] = 1;
            if ($this.$processor !== null)
                $this.$processor.$keyDown($code);
        }
        if ($code == 61) {
            $e.preventDefault();
            $e.stopPropagation();
        }
    }
}
function cgxgbt_TeaInput_getAvailablePointer($this) {
    var $i;
    $i = 0;
    while (true) {
        if ($i >= 20)
            return (-1);
        if (!$this.$touchMap.$containsValue(jl_Integer_valueOf($i), 0))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
}
function cgxgbt_TeaInput_reset($this) {
    var $i;
    a: {
        if ($this.$justTouched) {
            $this.$justTouched = 0;
            $i = 0;
            while (true) {
                if ($i >= $this.$justPressedButtons.data.length)
                    break a;
                $this.$justPressedButtons.data[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if ($this.$keyJustPressed) {
            $this.$keyJustPressed = 0;
            $i = 0;
            while (true) {
                if ($i >= $this.$justPressedKeys.data.length)
                    break b;
                $this.$justPressedKeys.data[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
}
function cgxgbt_TeaInput_setDelta($this, $touchId, $x, $y) {
    $this.$deltaX.data[$touchId] = $x;
    $this.$deltaY.data[$touchId] = $y;
}
function cgxgbt_TeaInput_getCompatMode($this, $element) {
    var $compatMode, $isComp;
    $compatMode = $rt_str($element.compatMode);
    $isComp = $compatMode.$equals($rt_s(1156));
    if ($isComp)
        $element = $element.documentElement;
    return $element;
}
function cgxgbt_TeaInput_getScrollTop($this, $target) {
    var $val;
    $val = $target.scrollTop;
    return cgxgbt_TeaInput_toInt32($val);
}
function cgxgbt_TeaInput_getScrollTop0($this, $target) {
    var $element;
    $element = cgxgbt_TeaInput_getCompatMode($this, $target);
    return cgxgbt_TeaInput_getScrollTop($this, $element);
}
function cgxgbt_TeaInput_getScrollLeft($this, $target) {
    var $val;
    $val = $target.scrollLeft;
    return cgxgbt_TeaInput_toInt32($val);
}
function cgxgbt_TeaInput_getScrollLeft0($this, $target) {
    var $element;
    $element = cgxgbt_TeaInput_getCompatMode($this, $target);
    return cgxgbt_TeaInput_getScrollLeft($this, $element);
}
function cgxgbt_TeaInput_getRelativeX($this, $target, $touch) {
    var var$3;
    var$3 = ($touch.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft($this, $target) | 0;
    var$3 = var$3 + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0;
    return var$3;
}
function cgxgbt_TeaInput_getRelativeY($this, $target, $touch) {
    var var$3;
    var$3 = ($touch.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop($this, $target) | 0;
    var$3 = var$3 + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0;
    return var$3;
}
function cgxgbt_TeaInput_getRelativeX0($this, $e, $target) {
    var $xScaleRatio, var$4;
    $xScaleRatio = $target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target);
    var$4 = $xScaleRatio * ((($e.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0);
    return jl_Math_round(var$4);
}
function cgxgbt_TeaInput_getRelativeY0($this, $e, $target) {
    var $yScaleRatio, var$4;
    $yScaleRatio = $target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target);
    var$4 = $yScaleRatio * ((($e.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0);
    return jl_Math_round(var$4);
}
function cgxgbt_TeaInput_getRelativeX1($this, $touch, $target) {
    var $xScaleRatio;
    $xScaleRatio = $target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target);
    return jl_Math_round($xScaleRatio * cgxgbt_TeaInput_getRelativeX($this, $target, $touch));
}
function cgxgbt_TeaInput_getRelativeY1($this, $touch, $target) {
    var $yScaleRatio;
    $yScaleRatio = $target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target);
    return jl_Math_round($yScaleRatio * cgxgbt_TeaInput_getRelativeY($this, $target, $touch));
}
function cgxgbt_TeaInput_getClientWidth($this, $target) {
    return $target.clientWidth;
}
function cgxgbt_TeaInput_getClientHeight($this, $target) {
    return $target.clientHeight;
}
function cgxgbt_TeaInput_getAbsoluteTop($this, $target) {
    return cgxgbt_TeaInput_toInt32(cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $target));
}
function cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $elem) {
    var $top, $curr;
    $top = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $top = $top - $curr.scrollTop;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $top = $top + $elem.offsetTop;
        $elem = $curr.offsetParent;
    }
    return $top;
}
function cgxgbt_TeaInput_getAbsoluteLeft($this, $target) {
    return cgxgbt_TeaInput_toInt32(cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $target));
}
function cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $elem) {
    var $left, $curr;
    $left = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $left = $left - $curr.scrollLeft;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $left = $left + $elem.offsetLeft;
        $elem = $curr.offsetParent;
    }
    return $left;
}
function cgxgbt_TeaInput_toInt32($val) {
    return $val | 0;
}
function cgxgbt_TeaInput_isKeyPressed($this, $key) {
    if ($key == (-1))
        return $this.$pressedKeyCount <= 0 ? 0 : 1;
    if ($key >= 0 && $key <= 255)
        return $this.$pressedKeys.data[$key];
    return 0;
}
function cgxgbt_TeaInput_isKeyJustPressed($this, $key) {
    if ($key == (-1))
        return $this.$keyJustPressed;
    if ($key >= 0 && $key <= 255)
        return $this.$justPressedKeys.data[$key];
    return 0;
}
function cgxgbt_TeaInput_setInputProcessor($this, $processor) {
    $this.$processor = $processor;
}
function cgxgbt_TeaInput_isCursorCatched($this) {
    return 0;
}
function cgxgbt_TeaInput_handleEvent$exported$0(var$0, var$1) {
    var$0.$handleEvent(var$1);
}
var cbgssu_DragScrollListener$1 = $rt_classWithoutFields(cbgu_Timer$Task);
var jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_BufferUnderflowException__init_() {
    var var_0 = new jnc_BufferUnderflowException();
    jnc_BufferUnderflowException__init_0(var_0);
    return var_0;
}
function jnc_BufferUnderflowException__init_0($this) {
    jl_RuntimeException__init_1($this);
}
var cbgm_Intersector$SplitTriangle = $rt_classWithoutFields();
var cbgssu_Table$5 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Table$5__init_() {
    var var_0 = new cbgssu_Table$5();
    cbgssu_Table$5__init_0(var_0);
    return var_0;
}
function cbgssu_Table$5__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbgssu_Table$4 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Table$4__init_() {
    var var_0 = new cbgssu_Table$4();
    cbgssu_Table$4__init_0(var_0);
    return var_0;
}
function cbgssu_Table$4__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbgssu_Table$3 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Table$3__init_() {
    var var_0 = new cbgssu_Table$3();
    cbgssu_Table$3__init_0(var_0);
    return var_0;
}
function cbgssu_Table$3__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbgssu_Table$2 = $rt_classWithoutFields(cbgssu_Value);
function cbgssu_Table$2__init_() {
    var var_0 = new cbgssu_Table$2();
    cbgssu_Table$2__init_0(var_0);
    return var_0;
}
function cbgssu_Table$2__init_0($this) {
    cbgssu_Value__init_($this);
}
var cbgssu_SplitPane$1 = $rt_classWithoutFields(cbgss_InputListener);
var cbgssu_Table$1 = $rt_classWithoutFields(cbgu_Pool);
function cbgssu_Table$1__init_() {
    var var_0 = new cbgssu_Table$1();
    cbgssu_Table$1__init_0(var_0);
    return var_0;
}
function cbgssu_Table$1__init_0($this) {
    cbgu_Pool__init_($this);
}
var oti_AsyncCallback = $rt_classWithoutFields(0);
var otja_XMLHttpRequest = $rt_classWithoutFields();
function otja_XMLHttpRequest_addEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$addEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otja_XMLHttpRequest_removeEventListener$exported$1(var$0, var$1, var$2) {
    var$0.$removeEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otja_XMLHttpRequest_removeEventListener$exported$2(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function otja_XMLHttpRequest_dispatchEvent$exported$3(var$0, var$1) {
    return !!var$0.$dispatchEvent0(var$1);
}
function otja_XMLHttpRequest_addEventListener$exported$4(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
var cbgssu_Window$WindowStyle = $rt_classWithoutFields();
function cgt_ErlangScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist17 = null;
    a.$batch23 = null;
    a.$renderer22 = null;
    a.$amounts22 = null;
    a.$iterations22 = Long_ZERO;
    a.$font24 = null;
    a.$viewport22 = null;
    a.$mainGame22 = null;
}
function cgt_ErlangScreen__init_(var_0) {
    var var_1 = new cgt_ErlangScreen();
    cgt_ErlangScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ErlangScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font24 = $this.$mainGame22.$font0;
    a: {
        try {
            var$1 = new cgtrd_ErlangDistribution;
            var$2 = $this.$mainGame22.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ErlangDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a | 0, cgt_DistributorDemo_b);
            $this.$dist17 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist17 = cgtrd_ErlangDistribution__init_($this.$mainGame22.$random0, 1, 1.0);
    }
    $this.$batch23 = $this.$mainGame22.$batch0;
    $this.$viewport22 = cbguv_ScreenViewport__init_();
    $this.$renderer22 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts22, Long_ZERO);
    $this.$iterations22 = Long_ZERO;
}
function cgt_ErlangScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts22 = $rt_createLongArray(512);
    $this.$iterations22 = Long_ZERO;
    $this.$mainGame22 = $main;
}
function cgt_ErlangScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame22.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame22.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport22.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-2.5) : 2.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts22, Long_ZERO);
        $this.$iterations22 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts22, Long_ZERO);
        $this.$iterations22 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts22, Long_ZERO);
        $this.$iterations22 = Long_ZERO;
    }
    $this.$iterations22 = Long_add($this.$iterations22, Long_fromInt(1));
    var$3 = $this.$dist17;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, 0.0);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist17.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts22.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer22.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer22.$color($color);
        var$3 = $this.$renderer22;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer22.$color($color);
        $this.$renderer22.$vertex(var$9, Long_toNumber(Long_div($this.$amounts22.data[$x], $this.$iterations22)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer22.$color((-6.221923240859403E37));
        var$3 = $this.$renderer22;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer22.$color((-6.221923240859403E37));
        $this.$renderer22.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer22.$end();
    $this.$batch23.$setProjectionMatrix($camera.$combined);
    $this.$batch23.$begin0();
    var$3 = $this.$font24;
    var$12 = $this.$batch23;
    var$6 = $rt_createArray(jl_Object, 3);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1157), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font24.$draw($this.$batch23, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font24.$draw($this.$batch23, $rt_s(1158), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch23.$end();
}
function cgt_ErlangScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport22.$update0($width, $height, 1);
    $this.$viewport22.$apply(1);
}
var jl_System = $rt_classWithoutFields();
var jl_System_outCache = null;
var jl_System_errCache = null;
var jl_System_properties = null;
function jl_System_out() {
    var var$1;
    if (jl_System_outCache === null) {
        var$1 = new ji_PrintStream;
        otcic_StdoutOutputStream_$callClinit();
        ji_PrintStream__init_0(var$1, otcic_StdoutOutputStream_INSTANCE, 0);
        jl_System_outCache = var$1;
    }
    return jl_System_outCache;
}
function jl_System_err() {
    var var$1;
    if (jl_System_errCache === null) {
        var$1 = new ji_PrintStream;
        otcic_StderrOutputStream_$callClinit();
        ji_PrintStream__init_0(var$1, otcic_StderrOutputStream_INSTANCE, 0);
        jl_System_errCache = var$1;
    }
    return jl_System_errCache;
}
function jl_System_arraycopy($src, $srcPos, $dest, $destPos, $length) {
    var var$6, $srcType, $targetType, $srcArray, $i, var$11, var$12, $elem;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
            var$6 = $destPos + $length | 0;
            if (var$6 <= jlr_Array_getLength($dest)) {
                a: {
                    b: {
                        if ($src !== $dest) {
                            $srcType = (jl_Object_getClass($src)).$getComponentType();
                            $targetType = (jl_Object_getClass($dest)).$getComponentType();
                            if ($srcType !== null && $targetType !== null) {
                                if ($srcType === $targetType)
                                    break b;
                                if (!$srcType.$isPrimitive() && !$targetType.$isPrimitive()) {
                                    $srcArray = $src;
                                    $i = 0;
                                    var$6 = $srcPos;
                                    while ($i < $length) {
                                        var$11 = $srcArray.data;
                                        var$12 = var$6 + 1 | 0;
                                        $elem = var$11[var$6];
                                        if (!$targetType.$isInstance($elem)) {
                                            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                            $rt_throw(jl_ArrayStoreException__init_());
                                        }
                                        $i = $i + 1 | 0;
                                        var$6 = var$12;
                                    }
                                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                    return;
                                }
                                if (!$srcType.$isPrimitive())
                                    break a;
                                if ($targetType.$isPrimitive())
                                    break b;
                                else
                                    break a;
                            }
                            $rt_throw(jl_ArrayStoreException__init_());
                        }
                    }
                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                    return;
                }
                $rt_throw(jl_ArrayStoreException__init_());
            }
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_NullPointerException__init_0($rt_s(1159)));
}
function jl_System_doArrayCopy(var$1, var$2, var$3, var$4, var$5) {
    if (var$1 !== var$3 || var$4 < var$2) {
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[var$4++] = var$1.data[var$2++];
        }
    } else {
        var$2 = (var$2 + var$5) | 0;
        var$4 = (var$4 + var$5) | 0;
        for (var i = 0; i < var$5; i = (i + 1) | 0) {
            var$3.data[--var$4] = var$1.data[--var$2];
        }
    }
}
function jl_System_currentTimeMillis() {
    return Long_fromNumber(new Date().getTime());
}
function jl_System_initPropertiesIfNeeded() {
    var $defaults;
    if (jl_System_properties === null) {
        $defaults = ju_Properties__init_();
        $defaults.$put1($rt_s(1160), $rt_s(1161));
        $defaults.$put1($rt_s(1124), $rt_s(1162));
        $defaults.$put1($rt_s(1163), $rt_s(46));
        $defaults.$put1($rt_s(1164), $rt_s(267));
        $defaults.$put1($rt_s(1165), jl_System_lineSeparator());
        $defaults.$put1($rt_s(1166), jl_System_getTempDir());
        $defaults.$put1($rt_s(1167), $rt_s(1161));
        $defaults.$put1($rt_s(1168), jl_System_getHomeDir());
        jl_System_properties = ju_Properties__init_1($defaults);
    }
}
function jl_System_getTempDir() {
    return $rt_s(1169);
}
function jl_System_getHomeDir() {
    return $rt_s(46);
}
function jl_System_setProperty($key, $value) {
    jl_System_initPropertiesIfNeeded();
    return jl_System_properties.$put1($key, $value);
}
function jl_System_nanoTime() {
    return Long_fromNumber($rt_globals.performance.now() * 1000000.0);
}
function jl_System_lineSeparator() {
    return $rt_s(266);
}
function cbggg_Gdx2DPixmapEmu() {
    var a = this; jl_Object.call(a);
    a.$basePtr = 0;
    a.$width5 = 0;
    a.$height4 = 0;
    a.$format1 = 0;
    a.$nativeData = null;
    a.$pixelPtr = null;
}
function cbggg_Gdx2DPixmapEmu__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbggg_Gdx2DPixmapEmu();
    cbggg_Gdx2DPixmapEmu__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbggg_Gdx2DPixmapEmu__init_1(var_0, var_1, var_2) {
    var var_3 = new cbggg_Gdx2DPixmapEmu();
    cbggg_Gdx2DPixmapEmu__init_2(var_3, var_0, var_1, var_2);
    return var_3;
}
function cbggg_Gdx2DPixmapEmu_toGlFormat($format) {
    var var$2, var$3;
    switch ($format) {
        case 1:
            break;
        case 2:
            return 6410;
        case 3:
        case 5:
            return 6407;
        case 4:
        case 6:
            return 6408;
        default:
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(1170)), $format);
            cbgu_GdxRuntimeException__init_(var$2, jl_StringBuilder_toString(var$3));
            $rt_throw(var$2);
    }
    return 6406;
}
function cbggg_Gdx2DPixmapEmu_toGlType($format) {
    var var$2, var$3;
    switch ($format) {
        case 1:
        case 2:
        case 3:
        case 4:
            break;
        case 5:
            return 33635;
        case 6:
            return 32819;
        default:
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(1170)), $format);
            cbgu_GdxRuntimeException__init_(var$2, jl_StringBuilder_toString(var$3));
            $rt_throw(var$2);
    }
    return 5121;
}
function cbggg_Gdx2DPixmapEmu__init_0($this, $encodedData, $offset, $len, $requestedFormat) {
    jl_Object__init_0($this);
    $this.$nativeData = $rt_createIntArray(4);
    $this.$pixelPtr = cbggg_Gdx2DPixmapEmu_load$js_body$_33($this.$nativeData.data, otji_JS_wrap($encodedData), $offset, $len);
    $this.$basePtr = $this.$nativeData.data[0];
    $this.$width5 = $this.$nativeData.data[1];
    $this.$height4 = $this.$nativeData.data[2];
    $this.$format1 = $this.$nativeData.data[3];
    if ($requestedFormat && $requestedFormat != $this.$format1)
        cbggg_Gdx2DPixmapEmu_convert($this, $requestedFormat);
}
function cbggg_Gdx2DPixmapEmu__init_2($this, $width, $height, $format) {
    jl_Object__init_0($this);
    $this.$nativeData = $rt_createIntArray(4);
    $this.$pixelPtr = cbggg_Gdx2DPixmapEmu_newPixmap$js_body$_35($this.$nativeData.data, $width, $height, $format);
    $this.$basePtr = $this.$nativeData.data[0];
    $this.$width5 = $this.$nativeData.data[1];
    $this.$height4 = $this.$nativeData.data[2];
    $this.$format1 = $this.$nativeData.data[3];
}
function cbggg_Gdx2DPixmapEmu_convert($this, $requestedFormat) {
    var $pixmap;
    $pixmap = cbggg_Gdx2DPixmapEmu__init_1($this.$width5, $this.$height4, $requestedFormat);
    $pixmap.$setBlend(0);
    $pixmap.$drawPixmap1($this, 0, 0, 0, 0, $this.$width5, $this.$height4);
    $this.$dispose();
    $this.$basePtr = $pixmap.$basePtr;
    $this.$format1 = $pixmap.$format1;
    $this.$height4 = $pixmap.$height4;
    $this.$nativeData = $pixmap.$nativeData;
    $this.$pixelPtr = $pixmap.$pixelPtr;
    $this.$width5 = $pixmap.$width5;
}
function cbggg_Gdx2DPixmapEmu_dispose($this) {
    cbggg_Gdx2DPixmapEmu_free$js_body$_36($this.$basePtr);
}
function cbggg_Gdx2DPixmapEmu_drawPixmap($this, $src, $srcX, $srcY, $dstX, $dstY, $width, $height) {
    var var$8, var$9;
    var$8 = $src.$basePtr;
    var$9 = $this.$basePtr;
    cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$8, var$9, $srcX, $srcY, $width, $height, $dstX, $dstY, $width, $height);
}
function cbggg_Gdx2DPixmapEmu_drawPixmap0($this, $src, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) {
    var var$10, var$11;
    var$10 = $src.$basePtr;
    var$11 = $this.$basePtr;
    cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$10, var$11, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight);
}
function cbggg_Gdx2DPixmapEmu_setBlend($this, $blend) {
    cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47($this.$basePtr, $blend);
}
function cbggg_Gdx2DPixmapEmu_getPixels($this) {
    return $this.$pixelPtr;
}
function cbggg_Gdx2DPixmapEmu_getHeight($this) {
    return $this.$height4;
}
function cbggg_Gdx2DPixmapEmu_getWidth($this) {
    return $this.$width5;
}
function cbggg_Gdx2DPixmapEmu_getFormat($this) {
    return $this.$format1;
}
function cbggg_Gdx2DPixmapEmu_getGLInternalFormat($this) {
    return cbggg_Gdx2DPixmapEmu_toGlFormat($this.$format1);
}
function cbggg_Gdx2DPixmapEmu_getGLFormat($this) {
    return $this.$getGLInternalFormat();
}
function cbggg_Gdx2DPixmapEmu_getGLType($this) {
    return cbggg_Gdx2DPixmapEmu_toGlType($this.$format1);
}
function cbggg_Gdx2DPixmapEmu_load$js_body$_33(var$1, var$2, var$3, var$4) {
    var cBufferSize = var$2.length * $rt_globals.Uint8Array.BYTES_PER_ELEMENT;
    var cBuffer = $rt_globals.Gdx._malloc(cBufferSize);
    $rt_globals.Gdx.writeArrayToMemory(var$2, cBuffer);
    var pixmap = $rt_globals.Gdx.Gdx.prototype.g2d_load(cBuffer, var$3, var$4);
    $rt_globals.Gdx._free(cBuffer);
    var pixels = $rt_globals.Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = $rt_globals.Gdx.getPointer(pixmap);
    var format = pixmap.get_format();
    var width = pixmap.get_width();
    var height = pixmap.get_height();
    var$1[0] = pixmapAddr;
    var$1[1] = width;
    var$1[2] = height;
    var$1[3] = format;
    var bytesPerPixel = $rt_globals.Gdx.Gdx.prototype.g2d_bytes_per_pixel(format);
    var bytesSize = width * height * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var newArray = $rt_globals.Gdx.HEAPU8.slice(startIndex, endIndex);
    return newArray;
}
function cbggg_Gdx2DPixmapEmu_newPixmap$js_body$_35(var$1, var$2, var$3, var$4) {
    var pixmap = $rt_globals.Gdx.Gdx.prototype.g2d_new(var$2, var$3, var$4);
    var pixels = $rt_globals.Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = $rt_globals.Gdx.getPointer(pixmap);
    var var$4 = pixmap.get_format();
    var var$2 = pixmap.get_width();
    var var$3 = pixmap.get_height();
    var$1[0] = pixmapAddr;
    var$1[1] = var$2;
    var$1[2] = var$3;
    var$1[3] = var$4;
    var bytesPerPixel = $rt_globals.Gdx.Gdx.prototype.g2d_bytes_per_pixel(var$4);
    var bytesSize = var$2 * var$3 * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var newArray = $rt_globals.Gdx.HEAPU8.slice(startIndex, endIndex);
    return newArray;
}
function cbggg_Gdx2DPixmapEmu_free$js_body$_36(var$1) {
    var nativeObject = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
    $rt_globals.Gdx.Gdx.prototype.g2d_free(nativeObject);
}
function cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
    var nativeObjectSrc = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
    var nativeObjectDst = $rt_globals.Gdx.wrapPointer(var$2, $rt_globals.Gdx.gdx2d_pixmap);
    $rt_globals.Gdx.Gdx.prototype.g2d_draw_pixmap(nativeObjectSrc, nativeObjectDst, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10);
}
function cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47(var$1, var$2) {
    var nativeObject = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
    $rt_globals.Gdx.Gdx.prototype.g2d_set_blend(nativeObject, var$2);
}
var jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyXDigit__init_() {
    var var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyXDigit__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyXDigit_computeValue($this) {
    return (((jur_CharClass__init_()).$add0(48, 57)).$add0(97, 102)).$add0(65, 70);
}
function jur_Matcher() {
    var a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start13 = null;
    a.$string4 = null;
    a.$matchResult = null;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$appendPos = 0;
    a.$replacement1 = null;
    a.$processedRepl = null;
    a.$replacementParts = null;
}
function jur_Matcher__init_(var_0, var_1) {
    var var_2 = new jur_Matcher();
    jur_Matcher__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Matcher_appendReplacement($this, $buffer, $replacement) {
    $this.$processedRepl = jur_Matcher_processReplacement($this, $replacement);
    $buffer.$append29($this.$string4.$subSequence($this.$appendPos, jur_Matcher_start($this)));
    $buffer.$append30($this.$processedRepl);
    $this.$appendPos = jur_Matcher_end($this);
    return $this;
}
function jur_Matcher_processReplacement($this, $replacement) {
    var $sb, $i, $repl, $res, $index, $replacementPos, $nextBackSlashed, var$9, var$10, var$11, $gr, $group, $$je;
    if ($this.$replacement1 !== null && $this.$replacement1.$equals($replacement)) {
        if ($this.$replacementParts === null)
            return $this.$processedRepl;
        $sb = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$replacementParts.$size0()) {
            $sb.$append($this.$replacementParts.$get3($i));
            $i = $i + 1 | 0;
        }
        return $sb.$toString();
    }
    $this.$replacement1 = $replacement;
    $repl = $replacement.$toCharArray();
    $res = jl_StringBuilder__init_();
    $this.$replacementParts = null;
    $index = 0;
    $replacementPos = 0;
    $nextBackSlashed = 0;
    a: {
        b: while (true) {
            var$9 = $repl.data;
            var$10 = var$9.length;
            if ($index >= var$10) {
                if ($this.$replacementParts !== null && $replacementPos != $res.$length())
                    $this.$replacementParts.$add10($res.$subSequence($replacementPos, $res.$length()));
                return $res.$toString();
            }
            if (var$9[$index] == 92 && !$nextBackSlashed) {
                $nextBackSlashed = 1;
                $index = $index + 1 | 0;
            }
            c: {
                if ($nextBackSlashed) {
                    if ($index >= var$10)
                        break b;
                    $res.$append0(var$9[$index]);
                    $nextBackSlashed = 0;
                } else if (var$9[$index] != 36)
                    $res.$append0(var$9[$index]);
                else {
                    if ($this.$replacementParts === null)
                        $this.$replacementParts = ju_ArrayList__init_();
                    d: {
                        try {
                            var$11 = new jl_String;
                            $index = $index + 1 | 0;
                            jl_String__init_4(var$11, $repl, $index, 1);
                            $gr = jl_Integer_parseInt0(var$11);
                            if ($replacementPos == $res.$length())
                                break d;
                            $this.$replacementParts.$add10($res.$subSequence($replacementPos, $res.$length()));
                            $replacementPos = $res.$length();
                            break d;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        $this.$replacementParts.$add10(jur_Matcher$1__init_($this, $gr));
                        $group = jur_Matcher_group($this, $gr);
                        $replacementPos = $replacementPos + $group.$length() | 0;
                        $res.$append1($group);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                }
            }
            $index = $index + 1 | 0;
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(45)));
}
function jur_Matcher_reset($this) {
    $this.$leftBound0 = 0;
    $this.$rightBound0 = $this.$string4.$length();
    $this.$matchResult.$reset0($this.$string4, $this.$leftBound0, $this.$rightBound0);
    $this.$appendPos = 0;
    $this.$replacement1 = null;
    $this.$matchResult.$previousMatch = (-1);
    return $this;
}
function jur_Matcher_appendTail($this, $buffer) {
    return $buffer.$append29($this.$string4.$subSequence($this.$appendPos, $this.$string4.$length()));
}
function jur_Matcher_replaceAll($this, $replacement) {
    var $sb;
    $sb = jl_StringBuffer__init_();
    jur_Matcher_reset($this);
    while (jur_Matcher_find($this)) {
        jur_Matcher_appendReplacement($this, $sb, $replacement);
    }
    return (jur_Matcher_appendTail($this, $sb)).$toString();
}
function jur_Matcher_group($this, $group) {
    return $this.$matchResult.$group($group);
}
function jur_Matcher_find0($this, $start) {
    var $stringLength, var$3;
    $stringLength = $this.$string4.$length();
    if ($start >= 0 && $start <= $stringLength) {
        var$3 = jur_Matcher_findAt($this, $start);
        if (var$3 >= 0 && $this.$matchResult.$isValid()) {
            $this.$matchResult.$finalizeMatch();
            return 1;
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf($start)));
}
function jur_Matcher_findAt($this, $startIndex) {
    var $foundIndex;
    $this.$matchResult.$reset2();
    $this.$matchResult.$setMode(1);
    $this.$matchResult.$setStartIndex($startIndex);
    $foundIndex = $this.$start13.$find($startIndex, $this.$string4, $this.$matchResult);
    if ($foundIndex == (-1))
        $this.$matchResult.$hitEnd = 1;
    return $foundIndex;
}
function jur_Matcher_find($this) {
    var $length, var$2;
    $length = $this.$string4.$length();
    if (!jur_Matcher_hasTransparentBounds($this))
        $length = $this.$rightBound0;
    if ($this.$matchResult.$startIndex >= 0 && $this.$matchResult.$mode2() == 1) {
        $this.$matchResult.$startIndex = $this.$matchResult.$end1();
        if ($this.$matchResult.$end1() == $this.$matchResult.$start12()) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        return $this.$matchResult.$startIndex <= $length && jur_Matcher_find0($this, $this.$matchResult.$startIndex) ? 1 : 0;
    }
    return jur_Matcher_find0($this, $this.$leftBound0);
}
function jur_Matcher_start0($this, $group) {
    return $this.$matchResult.$start($group);
}
function jur_Matcher_end0($this, $group) {
    return $this.$matchResult.$end0($group);
}
function jur_Matcher_start($this) {
    return jur_Matcher_start0($this, 0);
}
function jur_Matcher_end($this) {
    return jur_Matcher_end0($this, 0);
}
function jur_Matcher_hasTransparentBounds($this) {
    return $this.$matchResult.$hasTransparentBounds();
}
function jur_Matcher__init_0($this, $pat, $cs) {
    var var$3, var$4, var$5, var$6, var$7;
    jl_Object__init_0($this);
    $this.$leftBound0 = (-1);
    $this.$rightBound0 = (-1);
    $this.$pat = $pat;
    $this.$start13 = $pat.$start11;
    $this.$string4 = $cs;
    $this.$leftBound0 = 0;
    $this.$rightBound0 = $this.$string4.$length();
    var$3 = new jur_MatchResultImpl;
    var$4 = $this.$leftBound0;
    var$5 = $this.$rightBound0;
    var$6 = jur_Pattern_groupCount($pat);
    var$7 = jur_Pattern_compCount($pat);
    jur_MatchResultImpl__init_0(var$3, $cs, var$4, var$5, var$6, var$7, jur_Pattern_consCount($pat));
    $this.$matchResult = var$3;
    $this.$matchResult.$useAnchoringBounds(1);
}
var jur_DotAllSet = $rt_classWithoutFields(jur_JointSet);
function jur_DotAllSet__init_() {
    var var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_0(var_0);
    return var_0;
}
function jur_DotAllSet__init_0($this) {
    jur_JointSet__init_0($this);
}
function jur_DotAllSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$next.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_DotAllSet_getName($this) {
    return $rt_s(1171);
}
function jur_DotAllSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_DotAllSet_getType($this) {
    return (-2147483602);
}
function jur_DotAllSet_hasConsumed($this, $matchResult) {
    return 1;
}
var cbgm_BSpline = $rt_classWithoutFields();
var jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaUpperCase__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaUpperCase__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaUpperCase_computeValue($this) {
    var $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUpperCase$1__init_($this);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
}
function jur_HangulDecomposedCharSet() {
    var a = this; jur_JointSet.call(a);
    a.$decomposedChar0 = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength0 = 0;
}
function jur_HangulDecomposedCharSet__init_(var_0, var_1) {
    var var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_HangulDecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
    jur_JointSet__init_0($this);
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
}
function jur_HangulDecomposedCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_HangulDecomposedCharSet_getDecomposedChar($this) {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_($this.$decomposedChar0);
    return $this.$decomposedCharUTF160;
}
function jur_HangulDecomposedCharSet_getName($this) {
    var var$1, var$2;
    var$1 = jur_HangulDecomposedCharSet_getDecomposedChar($this);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(1172)), var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_HangulDecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
    var $rightBound, $syllIndex, $decompSyllable, $vIndex, $tIndex, var$9, $curSymb, $decompCurSymb, var$12, $i, var$14, $lIndex, var$16, var$17;
    $rightBound = $matchResult.$getRightBound();
    $syllIndex = 0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$9 = $strIndex + 1 | 0;
    $curSymb = $testString.$charAt($strIndex);
    $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
    if ($decompCurSymb !== null) {
        var$12 = $decompCurSymb.data;
        $i = 0;
        if (var$12.length != $this.$decomposedCharLength0)
            return (-1);
        while (true) {
            if ($i >= $this.$decomposedCharLength0)
                return $this.$next.$matches(var$9, $testString, $matchResult);
            if (var$12[$i] != $this.$decomposedChar0.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var$14 = $decompSyllable.data;
    var$14[$syllIndex] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$9 < $rightBound) {
            $curSymb = $testString.$charAt(var$9);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            var$16 = var$9 + 1 | 0;
            var$14[1] = $curSymb;
            if (var$16 < $rightBound) {
                $curSymb = $testString.$charAt(var$16);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                var$17 = var$16 + 1 | 0;
                var$14[2] = $curSymb;
                var$17 = $this.$decomposedCharLength0 == 3 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1] && var$14[2] == $this.$decomposedChar0.data[2] ? $this.$next.$matches(var$17, $testString, $matchResult) : (-1);
                return var$17;
            }
            var$17 = $this.$decomposedCharLength0 == 2 && var$14[0] == $this.$decomposedChar0.data[0] && var$14[1] == $this.$decomposedChar0.data[1] ? $this.$next.$matches(var$16, $testString, $matchResult) : (-1);
            return var$17;
        }
        return (-1);
    }
    return (-1);
}
function jur_HangulDecomposedCharSet_first($this, $set) {
    var var$2, var$3;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            var$2 = $set;
            if (!(jur_HangulDecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_HangulDecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
}
function jur_HangulDecomposedCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var cbgssu_Tree$TreeStyle = $rt_classWithoutFields();
var cbgssa_RotateToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
function cgtr_AceRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA7 = Long_ZERO;
    a.$stateB7 = Long_ZERO;
    a.$stateC5 = Long_ZERO;
    a.$stateD4 = Long_ZERO;
    a.$stateE = Long_ZERO;
}
function cgtr_AceRandom__init_() {
    var var_0 = new cgtr_AceRandom();
    cgtr_AceRandom__init_0(var_0);
    return var_0;
}
function cgtr_AceRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$stateA7 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateB7 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateC5 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateD4 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateE = cgtr_EnhancedRandom_seedFromMath();
}
function cgtr_AceRandom_nextLong($this) {
    var $fa, $fb, $fc, $fd, $fe, var$6;
    $fa = $this.$stateA7;
    $fb = $this.$stateB7;
    $fc = $this.$stateC5;
    $fd = $this.$stateD4;
    $fe = $this.$stateE;
    $this.$stateA7 = Long_add($fa, Long_create(2135587861, 2654435769));
    $this.$stateB7 = Long_xor($fa, $fe);
    $this.$stateC5 = Long_add($fb, $fd);
    $this.$stateD4 = Long_or(Long_shl($fc, 52), Long_shru($fc, 12));
    var$6 = Long_sub($fb, $fc);
    $this.$stateE = var$6;
    return var$6;
}
function cgtr_AceRandom_next($this, $bits) {
    var $fa, $fb, $fc, $fd, $fe, var$7;
    $fa = $this.$stateA7;
    $fb = $this.$stateB7;
    $fc = $this.$stateC5;
    $fd = $this.$stateD4;
    $fe = $this.$stateE;
    $this.$stateA7 = Long_add($fa, Long_create(2135587861, 2654435769));
    $this.$stateB7 = Long_xor($fa, $fe);
    $this.$stateC5 = Long_add($fb, $fd);
    $this.$stateD4 = Long_or(Long_shl($fc, 52), Long_shru($fc, 12));
    var$7 = Long_sub($fb, $fc);
    $this.$stateE = var$7;
    return Long_lo(var$7) >>> (32 - $bits | 0) | 0;
}
function cgxgbtp_AssetDownloadImpl$1$1() {
    var a = this; jl_Object.call(a);
    a.$val$request1 = null;
    a.$this$13 = null;
}
function cgxgbtp_AssetDownloadImpl$1$1__init_(var_0, var_1) {
    var var_2 = new cgxgbtp_AssetDownloadImpl$1$1();
    cgxgbtp_AssetDownloadImpl$1$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgxgbtp_AssetDownloadImpl$1$1__init_0($this, $this$1, var$2) {
    $this.$this$13 = $this$1;
    $this.$val$request1 = var$2;
    jl_Object__init_0($this);
}
function cgxgbtp_AssetDownloadImpl$1$1_handleEvent($this, $evt) {
    var var$2, var$3, var$4, var$5, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($this.$val$request1.readyState == 4) {
            a: {
                if ($this.$val$request1.status == 200) {
                    if ($this.$this$13.$this$011.$showLogs) {
                        var$2 = jl_System_out();
                        var$3 = $this.$this$13.$val$url1;
                        var$4 = jl_StringBuilder__init_();
                        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(973)), var$3);
                        var$2.$println1(jl_StringBuilder_toString(var$4));
                    }
                    $this.$this$13.$val$listener1.$onSuccess($this.$this$13.$val$url1, $rt_str($this.$val$request1.responseText));
                } else {
                    if ($this.$val$request1.status != 404) {
                        var$2 = $this.$val$request1;
                        if (var$2.status != 403) {
                            try {
                                var$5 = Long_fromInt(100);
                                $ptr = 1;
                                continue main;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Throwable) {
                                } else {
                                    throw $$e;
                                }
                            }
                            $this.$this$13.$this$011.$loadText($this.$this$13.$val$async, $this.$this$13.$val$url1, $this.$this$13.$val$listener1);
                            break a;
                        }
                    }
                    $this.$this$13.$val$listener1.$onFailure($this.$this$13.$val$url1);
                }
            }
            $this.$this$13.$this$011.$subtractQueue();
        }
        return;
    case 1:
        b: {
            try {
                jl_Thread_sleep(var$5);
                if ($rt_suspending()) {
                    break main;
                }
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
        }
        $this.$this$13.$this$011.$loadText($this.$this$13.$val$async, $this.$this$13.$val$url1, $this.$this$13.$val$listener1);
        $this.$this$13.$this$011.$subtractQueue();
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $evt, var$2, var$3, var$4, var$5, $ptr);
}
function cgxgbtp_AssetDownloadImpl$1$1_handleEvent$exported$0(var$0, var$1) {
    var $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        var $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        var$0.$handleEvent(var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$0, var$1, $ptr);
}
function cbggg_GlyphLayout$GlyphRun() {
    var a = this; jl_Object.call(a);
    a.$glyphs0 = null;
    a.$xAdvances = null;
    a.$x1 = 0.0;
    a.$y1 = 0.0;
    a.$width4 = 0.0;
}
function cbggg_GlyphLayout$GlyphRun__init_0() {
    var var_0 = new cbggg_GlyphLayout$GlyphRun();
    cbggg_GlyphLayout$GlyphRun__init_(var_0);
    return var_0;
}
function cbggg_GlyphLayout$GlyphRun__init_($this) {
    jl_Object__init_0($this);
    $this.$glyphs0 = cbgu_Array__init_();
    $this.$xAdvances = cbgu_FloatArray__init_();
}
function cbggg_GlyphLayout$GlyphRun_appendRun($this, $run) {
    var var$2;
    $this.$glyphs0.$addAll3($run.$glyphs0);
    if ($this.$xAdvances.$notEmpty()) {
        var$2 = $this.$xAdvances;
        var$2.$size3 = var$2.$size3 - 1 | 0;
    }
    $this.$xAdvances.$addAll1($run.$xAdvances);
}
function cbggg_GlyphLayout$GlyphRun_reset($this) {
    $this.$glyphs0.$clear8();
    $this.$xAdvances.$clear8();
}
function cbggg_GlyphLayout$GlyphRun_toString($this) {
    var $buffer, $glyphs, $i, $n, $g;
    $buffer = jl_StringBuilder__init_0($this.$glyphs0.$size + 32 | 0);
    $glyphs = $this.$glyphs0;
    $i = 0;
    $n = $glyphs.$size;
    while ($i < $n) {
        $g = $glyphs.$get3($i);
        $buffer.$append0($g.$id & 65535);
        $i = $i + 1 | 0;
    }
    $buffer.$append1($rt_s(312));
    $buffer.$append19($this.$x1);
    $buffer.$append1($rt_s(312));
    $buffer.$append19($this.$y1);
    $buffer.$append1($rt_s(312));
    $buffer.$append19($this.$width4);
    return $buffer.$toString();
}
var jlr_InvocationTargetException = $rt_classWithoutFields(jl_ReflectiveOperationException);
var cbgssu_ImageTextButton$ImageTextButtonStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle);
var cbgggpe_RegularEmitter$EmissionMode = $rt_classWithoutFields(jl_Enum);
var cbgggpe_RegularEmitter$EmissionMode_Enabled = null;
var cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = null;
var cbgggpe_RegularEmitter$EmissionMode_Disabled = null;
var cbgggpe_RegularEmitter$EmissionMode_$VALUES = null;
function cbgggpe_RegularEmitter$EmissionMode_$callClinit() {
    cbgggpe_RegularEmitter$EmissionMode_$callClinit = $rt_eraseClinit(cbgggpe_RegularEmitter$EmissionMode);
    cbgggpe_RegularEmitter$EmissionMode__clinit_();
}
function cbgggpe_RegularEmitter$EmissionMode__init_(var_0, var_1) {
    var var_2 = new cbgggpe_RegularEmitter$EmissionMode();
    cbgggpe_RegularEmitter$EmissionMode__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgggpe_RegularEmitter$EmissionMode__init_0($this, var$1, var$2) {
    cbgggpe_RegularEmitter$EmissionMode_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
}
function cbgggpe_RegularEmitter$EmissionMode__clinit_() {
    cbgggpe_RegularEmitter$EmissionMode_Enabled = cbgggpe_RegularEmitter$EmissionMode__init_($rt_s(1173), 0);
    cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = cbgggpe_RegularEmitter$EmissionMode__init_($rt_s(1174), 1);
    cbgggpe_RegularEmitter$EmissionMode_Disabled = cbgggpe_RegularEmitter$EmissionMode__init_($rt_s(1175), 2);
    cbgggpe_RegularEmitter$EmissionMode_$VALUES = $rt_createArrayFromData(cbgggpe_RegularEmitter$EmissionMode, [cbgggpe_RegularEmitter$EmissionMode_Enabled, cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd, cbgggpe_RegularEmitter$EmissionMode_Disabled]);
}
var jl_Object$NotifyListener = $rt_classWithoutFields(0);
var jm_Multiplication = $rt_classWithoutFields();
var jm_Multiplication_tenPows = null;
var jm_Multiplication_fivePows = null;
var jm_Multiplication_bigTenPows = null;
var jm_Multiplication_bigFivePows = null;
function jm_Multiplication_$callClinit() {
    jm_Multiplication_$callClinit = $rt_eraseClinit(jm_Multiplication);
    jm_Multiplication__clinit_();
}
function jm_Multiplication_multiply($x, $y) {
    jm_Multiplication_$callClinit();
    return jm_Multiplication_karatsuba($x, $y);
}
function jm_Multiplication_karatsuba($op1, $op2) {
    var var$3, $ndiv2, $upperOp1, $upperOp2, $lowerOp1, $lowerOp2, $upper, $lower, $middle, var$12;
    jm_Multiplication_$callClinit();
    if ($op2.$numberLength <= $op1.$numberLength) {
        var$3 = $op2;
        $op2 = $op1;
        $op1 = var$3;
    }
    if ($op1.$numberLength < 63)
        return jm_Multiplication_multiplyPAP($op2, $op1);
    $ndiv2 = ($op2.$numberLength & (-2)) << 4;
    $upperOp1 = $op2.$shiftRight1($ndiv2);
    $upperOp2 = $op1.$shiftRight1($ndiv2);
    $lowerOp1 = $op2.$subtract2($upperOp1.$shiftLeft1($ndiv2));
    $lowerOp2 = $op1.$subtract2($upperOp2.$shiftLeft1($ndiv2));
    $upper = jm_Multiplication_karatsuba($upperOp1, $upperOp2);
    $lower = jm_Multiplication_karatsuba($lowerOp1, $lowerOp2);
    $middle = jm_Multiplication_karatsuba($upperOp1.$subtract2($lowerOp1), $lowerOp2.$subtract2($upperOp2));
    var$3 = ($middle.$add14($upper)).$add14($lower);
    var$3 = var$3.$shiftLeft1($ndiv2);
    var$12 = $upper.$shiftLeft1($ndiv2 << 1);
    return (var$12.$add14(var$3)).$add14($lower);
}
function jm_Multiplication_multiplyPAP($a, $b) {
    var $aLen, $bLen, $resLength, $resSign, $aDigits, $bDigits, $resDigits, $result, $val, $valueLo, $valueHi;
    jm_Multiplication_$callClinit();
    $aLen = $a.$numberLength;
    $bLen = $b.$numberLength;
    $resLength = $aLen + $bLen | 0;
    $resSign = $a.$sign1 == $b.$sign1 ? 1 : (-1);
    if ($resLength != 2) {
        $aDigits = $a.$digits;
        $bDigits = $b.$digits;
        $resDigits = $rt_createIntArray($resLength);
        jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits);
        $result = jm_BigInteger__init_($resSign, $resLength, $resDigits);
        jm_BigInteger_cutOffLeadingZeroes($result);
        return $result;
    }
    $val = jm_Multiplication_unsignedMultAddAdd($a.$digits.data[0], $b.$digits.data[0], 0, 0);
    $valueLo = Long_lo($val);
    $valueHi = Long_hi($val);
    return !$valueHi ? jm_BigInteger__init_0($resSign, $valueLo) : jm_BigInteger__init_($resSign, 2, $rt_createIntArrayFromData([$valueLo, $valueHi]));
}
function jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits) {
    jm_Multiplication_$callClinit();
    if ($aLen && $bLen) {
        if ($aLen == 1)
            $resDigits.data[$bLen] = jm_Multiplication_multiplyByInt($resDigits, $bDigits, $bLen, $aDigits.data[0]);
        else if ($bLen != 1)
            jm_Multiplication_multPAP($aDigits, $bDigits, $resDigits, $aLen, $bLen);
        else
            $resDigits.data[$aLen] = jm_Multiplication_multiplyByInt($resDigits, $aDigits, $aLen, $bDigits.data[0]);
        return;
    }
}
function jm_Multiplication_multPAP($a, $b, $t, $aLen, $bLen) {
    var $i, var$7, $carry, $aI, $j, var$11, var$12, var$13, var$14;
    jm_Multiplication_$callClinit();
    if ($a === $b && $aLen == $bLen) {
        jm_Multiplication_square($a, $aLen, $t);
        return;
    }
    $i = 0;
    while ($i < $aLen) {
        var$7 = $a.data;
        $carry = Long_ZERO;
        $aI = var$7[$i];
        $j = 0;
        while ($j < $bLen) {
            var$11 = $t.data;
            var$12 = $b.data[$j];
            var$13 = $i + $j | 0;
            var$14 = jm_Multiplication_unsignedMultAddAdd($aI, var$12, var$11[var$13], Long_lo($carry));
            var$11[var$13] = Long_lo(var$14);
            $carry = Long_shru(var$14, 32);
            $j = $j + 1 | 0;
        }
        $t.data[$i + $bLen | 0] = Long_lo($carry);
        $i = $i + 1 | 0;
    }
}
function jm_Multiplication_multiplyByInt($res, $a, $aSize, $factor) {
    var $carry, $i, var$7, var$8;
    jm_Multiplication_$callClinit();
    $carry = Long_ZERO;
    $i = 0;
    while ($i < $aSize) {
        var$7 = $res.data;
        var$8 = jm_Multiplication_unsignedMultAddAdd($a.data[$i], $factor, Long_lo($carry), 0);
        var$7[$i] = Long_lo(var$8);
        $carry = Long_shru(var$8, 32);
        $i = $i + 1 | 0;
    }
    return Long_lo($carry);
}
function jm_Multiplication_pow($acc, $exponent) {
    var $res, $acc_0, var$5;
    jm_Multiplication_$callClinit();
    jm_BigInteger_$callClinit();
    $res = jm_BigInteger_ONE;
    while ($exponent > 1) {
        if ($exponent & 1)
            $res = $res.$multiply0($acc);
        $acc_0 = $acc.$numberLength == 1 ? $acc.$multiply0($acc) : jm_BigInteger__init_5(1, jm_Multiplication_square($acc.$digits, $acc.$numberLength, $rt_createIntArray($acc.$numberLength << 1)));
        $exponent = $exponent >> 1;
        $acc = $acc_0;
    }
    var$5 = $res.$multiply0($acc);
    return var$5;
}
function jm_Multiplication_square($a, $aLen, $res) {
    var $i, $carry, $i_0, $j, var$8, var$9, var$10, var$11, var$12, var$13, $index;
    jm_Multiplication_$callClinit();
    $i = 0;
    while ($i < $aLen) {
        $carry = Long_ZERO;
        $i_0 = $i + 1 | 0;
        $j = $i_0;
        while ($j < $aLen) {
            var$8 = $res.data;
            var$9 = $a.data;
            var$10 = var$9[$i];
            var$11 = var$9[$j];
            var$12 = $i + $j | 0;
            var$13 = jm_Multiplication_unsignedMultAddAdd(var$10, var$11, var$8[var$12], Long_lo($carry));
            var$8[var$12] = Long_lo(var$13);
            $carry = Long_shru(var$13, 32);
            $j = $j + 1 | 0;
        }
        $res.data[$i + $aLen | 0] = Long_lo($carry);
        $i = $i_0;
    }
    jm_BitLevel_shiftLeftOneBit($res, $res, $aLen << 1);
    $carry = Long_ZERO;
    $i = 0;
    $index = 0;
    while ($i < $aLen) {
        var$8 = $res.data;
        var$9 = $a.data;
        var$13 = jm_Multiplication_unsignedMultAddAdd(var$9[$i], var$9[$i], var$8[$index], Long_lo($carry));
        var$8[$index] = Long_lo(var$13);
        var$13 = Long_shru(var$13, 32);
        var$11 = $index + 1 | 0;
        var$13 = Long_add(var$13, Long_and(Long_fromInt(var$8[var$11]), Long_create(4294967295, 0)));
        var$8[var$11] = Long_lo(var$13);
        $carry = Long_shru(var$13, 32);
        $i = $i + 1 | 0;
        $index = var$11 + 1 | 0;
    }
    return $res;
}
function jm_Multiplication_unsignedMultAddAdd($a, $b, $c, $d) {
    jm_Multiplication_$callClinit();
    return Long_add(Long_add(Long_mul(Long_and(Long_fromInt($a), Long_create(4294967295, 0)), Long_and(Long_fromInt($b), Long_create(4294967295, 0))), Long_and(Long_fromInt($c), Long_create(4294967295, 0))), Long_and(Long_fromInt($d), Long_create(4294967295, 0)));
}
function jm_Multiplication__clinit_() {
    var $fivePow, $i, var$3, var$4, var$5;
    jm_Multiplication_tenPows = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
    jm_Multiplication_fivePows = $rt_createIntArrayFromData([1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125]);
    jm_Multiplication_bigTenPows = $rt_createArray(jm_BigInteger, 32);
    jm_Multiplication_bigFivePows = $rt_createArray(jm_BigInteger, 32);
    $fivePow = Long_fromInt(1);
    $i = 0;
    while ($i <= 18) {
        jm_Multiplication_bigFivePows.data[$i] = jm_BigInteger_valueOf($fivePow);
        jm_Multiplication_bigTenPows.data[$i] = jm_BigInteger_valueOf(Long_shl($fivePow, $i));
        $fivePow = Long_mul($fivePow, Long_fromInt(5));
        $i = $i + 1 | 0;
    }
    while ($i < jm_Multiplication_bigTenPows.data.length) {
        var$3 = jm_Multiplication_bigFivePows.data;
        var$4 = jm_Multiplication_bigFivePows.data;
        var$5 = $i - 1 | 0;
        var$3[$i] = var$4[var$5].$multiply0(jm_Multiplication_bigFivePows.data[1]);
        jm_Multiplication_bigTenPows.data[$i] = jm_Multiplication_bigTenPows.data[var$5].$multiply0(jm_BigInteger_TEN);
        $i = $i + 1 | 0;
    }
}
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
function jur_WordBoundary__init_(var_0) {
    var var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
}
function jur_WordBoundary__init_0($this, $positive) {
    jur_AbstractSet__init_($this);
    $this.$positive = $positive;
}
function jur_WordBoundary_matches($this, $stringIndex, $testString, $matchResult) {
    var $ch1, $ch2, $leftBound, $left, $right;
    $ch1 = $stringIndex < $matchResult.$getRightBound() ? $testString.$charAt($stringIndex) : 32;
    $ch2 = !$stringIndex ? 32 : $testString.$charAt($stringIndex - 1 | 0);
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    $left = $ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1;
    $right = $ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1;
    return $left ^ $right ^ $this.$positive ? (-1) : $this.$next.$matches($stringIndex, $testString, $matchResult);
}
function jur_WordBoundary_hasConsumed($this, $matchResult) {
    return 0;
}
function jur_WordBoundary_getName($this) {
    return $rt_s(1176);
}
function jur_WordBoundary_isSpace($this, $ch, $index, $leftBound, $testString) {
    var var$5;
    if (!jl_Character_isLetterOrDigit($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType0($ch) == 6)
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    var$5 = $testString.$charAt($index);
                    if (jl_Character_isLetterOrDigit(var$5))
                        return 0;
                    if (jl_Character_getType0(var$5) != 6)
                        return 1;
                }
        }
        return 1;
    }
    return 0;
}
var cbgssu_Dialog$4$1 = $rt_classWithoutFields();
var cbgu_BufferUtils = $rt_classWithoutFields();
function cbgu_BufferUtils_copy($src, $dst, $numFloats, $offset) {
    var $floatBuffer;
    $floatBuffer = cbgu_BufferUtils_asFloatBuffer($dst);
    jn_FloatBuffer_clear($floatBuffer);
    $dst.$position3(0);
    $floatBuffer.$put3($src, $offset, $numFloats);
    $dst.$position3(0);
    if (!($dst instanceof jn_ByteBuffer))
        $dst.$limit0($numFloats);
    else
        $dst.$limit0($numFloats << 2);
}
function cbgu_BufferUtils_asFloatBuffer($data) {
    var $buffer;
    $buffer = null;
    if ($data instanceof jn_ByteBuffer)
        $buffer = $data.$asFloatBuffer();
    else if ($data instanceof jn_FloatBuffer)
        $buffer = $data;
    if ($buffer !== null)
        return $buffer;
    $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(1177)));
}
function cbgu_BufferUtils_newFloatBuffer($numFloats) {
    var $buffer;
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_FloatBuffer_wrap0($rt_createFloatArray($numFloats));
    $buffer = jn_ByteBuffer_allocateDirect($numFloats * 4 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asFloatBuffer();
}
function cbgu_BufferUtils_newByteBuffer($numBytes) {
    var $buffer;
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_ByteBuffer_wrap($rt_createByteArray($numBytes));
    $buffer = jn_ByteBuffer_allocateDirect($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer;
}
function cbgu_BufferUtils_newShortBuffer($numShorts) {
    var $buffer;
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_ShortBuffer_wrap0($rt_createShortArray($numShorts));
    $buffer = jn_ByteBuffer_allocateDirect($numShorts * 2 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asShortBuffer();
}
function cbgu_BufferUtils_newIntBuffer($numInts) {
    var $buffer;
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_IntBuffer_wrap0($rt_createIntArray($numInts));
    $buffer = jn_ByteBuffer_allocateDirect($numInts * 4 | 0);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer.$asIntBuffer();
}
function jl_Double() {
    jl_Number.call(this);
    this.$value7 = 0.0;
}
var jl_Double_NaN = 0.0;
var jl_Double_TYPE = null;
function jl_Double_$callClinit() {
    jl_Double_$callClinit = $rt_eraseClinit(jl_Double);
    jl_Double__clinit_();
}
function jl_Double__init_(var_0) {
    var var_1 = new jl_Double();
    jl_Double__init_0(var_1, var_0);
    return var_1;
}
function jl_Double__init_0($this, $value) {
    jl_Double_$callClinit();
    jl_Number__init_($this);
    $this.$value7 = $value;
}
function jl_Double_doubleValue($this) {
    return $this.$value7;
}
function jl_Double_longValue($this) {
    return Long_fromNumber($this.$value7);
}
function jl_Double_valueOf($d) {
    jl_Double_$callClinit();
    return jl_Double__init_($d);
}
function jl_Double_toString($d) {
    jl_Double_$callClinit();
    return ((jl_StringBuilder__init_()).$append18($d)).$toString();
}
function jl_Double_toString0($this) {
    return jl_Double_toString($this.$value7);
}
function jl_Double__clinit_() {
    jl_Double_NaN = $rt_globals.NaN;
    jl_Double_TYPE = $rt_cls($rt_doublecls());
}
var cbgu_Json$ReadOnlySerializer = $rt_classWithoutFields();
var cbgssu_Skin$5 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_Skin$1 = $rt_classWithoutFields(cbgu_Json);
var cbgssu_Skin$2 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_Skin$3 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_Skin$4 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
var cbgssu_Slider$1 = $rt_classWithoutFields(cbgss_InputListener);
var otjb_StorageProvider = $rt_classWithoutFields(0);
var otjb_Window = $rt_classWithoutFields();
function otjb_Window_addEventListener$exported$0(var$0, var$1, var$2) {
    var$0.$addEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_removeEventListener$exported$1(var$0, var$1, var$2) {
    var$0.$removeEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
}
function otjb_Window_get$exported$2(var$0, var$1) {
    return var$0.$get10(var$1);
}
function otjb_Window_removeEventListener$exported$3(var$0, var$1, var$2, var$3) {
    var$0.$removeEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function otjb_Window_dispatchEvent$exported$4(var$0, var$1) {
    return !!var$0.$dispatchEvent0(var$1);
}
function otjb_Window_getLength$exported$5(var$0) {
    return var$0.$getLength();
}
function otjb_Window_addEventListener$exported$6(var$0, var$1, var$2, var$3) {
    var$0.$addEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
}
function cgt_CauchyAlternateDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha11 = 0.0;
    a.$gamma2 = 0.0;
}
function cgt_CauchyAlternateDistribution__init_0(var_0, var_1, var_2) {
    var var_3 = new cgt_CauchyAlternateDistribution();
    cgt_CauchyAlternateDistribution__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgt_CauchyAlternateDistribution__init_($this, $generator, $alpha, $gamma) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $gamma, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1055)));
}
function cgt_CauchyAlternateDistribution_getMedian($this) {
    return $this.$alpha11;
}
function cgt_CauchyAlternateDistribution_setParameters($this, $a, $b, $c) {
    if (!($rt_globals.isNaN($a) ? 1 : 0) && $b > 0.0) {
        $this.$alpha11 = $a;
        $this.$gamma2 = $b;
        return 1;
    }
    return 0;
}
function cgt_CauchyAlternateDistribution_nextDouble($this) {
    return cgt_CauchyAlternateDistribution_sample($this.$generator, $this.$alpha11, $this.$gamma2);
}
function cgt_CauchyAlternateDistribution_sample($generator, $alpha, $gamma) {
    return $alpha + $gamma * jl_Math_tan(3.141592653589793 * $generator.$nextExclusiveDouble() - 1.5707963267948966);
}
var cbgssu_Cell = $rt_classWithoutFields();
var cbgssu_Cell_zerof = null;
var cbgssu_Cell_onef = null;
var cbgssu_Cell_zeroi = null;
var cbgssu_Cell_onei = null;
var cbgssu_Cell_centeri = null;
var cbgssu_Cell_topi = null;
var cbgssu_Cell_bottomi = null;
var cbgssu_Cell_lefti = null;
var cbgssu_Cell_righti = null;
function cbgssu_Cell_$callClinit() {
    cbgssu_Cell_$callClinit = $rt_eraseClinit(cbgssu_Cell);
    cbgssu_Cell__clinit_();
}
function cbgssu_Cell__clinit_() {
    cbgssu_Cell_zerof = jl_Float_valueOf(0.0);
    cbgssu_Cell_onef = jl_Float_valueOf(1.0);
    cbgssu_Cell_zeroi = jl_Integer_valueOf(0);
    cbgssu_Cell_onei = jl_Integer_valueOf(1);
    cbgssu_Cell_centeri = cbgssu_Cell_onei;
    cbgssu_Cell_topi = jl_Integer_valueOf(2);
    cbgssu_Cell_bottomi = jl_Integer_valueOf(4);
    cbgssu_Cell_lefti = jl_Integer_valueOf(8);
    cbgssu_Cell_righti = jl_Integer_valueOf(16);
}
var jur_IntHash = $rt_classWithoutFields();
var cbgssa_TouchableAction = $rt_classWithoutFields(cbgss_Action);
var cbgss_Stage = $rt_classWithoutFields(cbg_InputAdapter);
var jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
function jur_ReluctantAltQuantifierSet__init_(var_0, var_1, var_2) {
    var var_3 = new jur_ReluctantAltQuantifierSet();
    jur_ReluctantAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
    return var_3;
}
function jur_ReluctantAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
    jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type);
}
function jur_ReluctantAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $shift;
    $shift = $this.$next.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
}
var jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaWhitespace__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaWhitespace__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaWhitespace_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaWhitespace$1__init_($this);
}
function jur_Matcher$1() {
    var a = this; jl_Object.call(a);
    a.$grN = 0;
    a.$val$gr = 0;
    a.$this$058 = null;
}
function jur_Matcher$1__init_(var_0, var_1) {
    var var_2 = new jur_Matcher$1();
    jur_Matcher$1__init_0(var_2, var_0, var_1);
    return var_2;
}
function jur_Matcher$1__init_0($this, $this$0, var$2) {
    $this.$this$058 = $this$0;
    $this.$val$gr = var$2;
    jl_Object__init_0($this);
    $this.$grN = $this.$val$gr;
}
function jur_Matcher$1_toString($this) {
    return jur_Matcher_group($this.$this$058, $this.$grN);
}
var cbgssu_Tooltip$1 = $rt_classWithoutFields(cbgssu_Container);
var cbgssa_RemoveListenerAction = $rt_classWithoutFields(cbgss_Action);
function cgt_KnobScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist18 = null;
    a.$batch24 = null;
    a.$renderer23 = null;
    a.$amounts23 = null;
    a.$iterations23 = Long_ZERO;
    a.$font25 = null;
    a.$viewport23 = null;
    a.$mainGame23 = null;
}
function cgt_KnobScreen__init_(var_0) {
    var var_1 = new cgt_KnobScreen();
    cgt_KnobScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_KnobScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font25 = $this.$mainGame23.$font0;
    a: {
        try {
            var$1 = new cgtrd_KnobDistribution;
            var$2 = $this.$mainGame23.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_KnobDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
            $this.$dist18 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist18 = cgtrd_KnobDistribution__init_($this.$mainGame23.$random0, 0.0, 1.0, 0.5);
    }
    $this.$batch24 = $this.$mainGame23.$batch0;
    $this.$viewport23 = cbguv_ScreenViewport__init_();
    $this.$renderer23 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts23, Long_ZERO);
    $this.$iterations23 = Long_ZERO;
}
function cgt_KnobScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts23 = $rt_createLongArray(512);
    $this.$iterations23 = Long_ZERO;
    $this.$mainGame23 = $main;
}
function cgt_KnobScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame23.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame23.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport23.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts23, Long_ZERO);
        $this.$iterations23 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts23, Long_ZERO);
        $this.$iterations23 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts23, Long_ZERO);
        $this.$iterations23 = Long_ZERO;
    }
    $this.$iterations23 = Long_add($this.$iterations23, Long_fromInt(1));
    var$3 = $this.$dist18;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist18.$nextDouble() * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts23.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer23.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer23.$color($color);
        var$3 = $this.$renderer23;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer23.$color($color);
        $this.$renderer23.$vertex(var$9, Long_toNumber(Long_div($this.$amounts23.data[$x], $this.$iterations23)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer23.$color((-6.221923240859403E37));
        var$3 = $this.$renderer23;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer23.$color((-6.221923240859403E37));
        $this.$renderer23.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer23.$end();
    $this.$batch24.$setProjectionMatrix($camera.$combined);
    $this.$batch24.$begin0();
    var$3 = $this.$font25;
    var$12 = $this.$batch24;
    var$6 = $rt_createArray(jl_Object, 5);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf(cgt_DistributorDemo_c);
    var$13[3] = jl_Double_valueOf($this.$dist18.$getMedian());
    var$13[4] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1178), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font25.$draw($this.$batch24, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font25.$draw($this.$batch24, $rt_s(1179), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch24.$end();
}
function cgt_KnobScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport23.$update0($width, $height, 1);
    $this.$viewport23.$apply(1);
}
var jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException);
function jl_NumberFormatException__init_0() {
    var var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_2(var_0);
    return var_0;
}
function jl_NumberFormatException__init_(var_0) {
    var var_1 = new jl_NumberFormatException();
    jl_NumberFormatException__init_1(var_1, var_0);
    return var_1;
}
function jl_NumberFormatException__init_2($this) {
    jl_IllegalArgumentException__init_2($this);
}
function jl_NumberFormatException__init_1($this, $message) {
    jl_IllegalArgumentException__init_1($this, $message);
}
function cgtr_TrimRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA8 = Long_ZERO;
    a.$stateB8 = Long_ZERO;
    a.$stateC6 = Long_ZERO;
    a.$stateD5 = Long_ZERO;
}
function cgtr_TrimRandom__init_() {
    var var_0 = new cgtr_TrimRandom();
    cgtr_TrimRandom__init_0(var_0);
    return var_0;
}
function cgtr_TrimRandom__init_0($this) {
    cgtr_EnhancedRandom__init_($this);
    $this.$stateA8 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateB8 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateC6 = cgtr_EnhancedRandom_seedFromMath();
    $this.$stateD5 = cgtr_EnhancedRandom_seedFromMath();
}
function cgtr_TrimRandom_nextLong($this) {
    var $fa, $fb, $fc, $fd, $bc, $cd;
    $fa = $this.$stateA8;
    $fb = $this.$stateB8;
    $fc = $this.$stateC6;
    $fd = $this.$stateD5;
    $bc = Long_xor($fb, $fc);
    $cd = Long_xor($fc, $fd);
    $this.$stateA8 = Long_or(Long_shl($bc, 57), Long_shru($bc, 7));
    $this.$stateB8 = Long_or(Long_shl($cd, 18), Long_shru($cd, 46));
    $this.$stateC6 = Long_add($fa, $bc);
    $this.$stateD5 = Long_add($fd, Long_create(3378872667, 3734071996));
    return $this.$stateC6;
}
function cgtr_TrimRandom_next($this, $bits) {
    var $fa, $fb, $fc, $fd, $bc, $cd;
    $fa = $this.$stateA8;
    $fb = $this.$stateB8;
    $fc = $this.$stateC6;
    $fd = $this.$stateD5;
    $bc = Long_xor($fb, $fc);
    $cd = Long_xor($fc, $fd);
    $this.$stateA8 = Long_or(Long_shl($bc, 57), Long_shru($bc, 7));
    $this.$stateB8 = Long_or(Long_shl($cd, 18), Long_shru($cd, 46));
    $this.$stateC6 = Long_add($fa, $bc);
    $this.$stateD5 = Long_add($fd, Long_create(3378872667, 3734071996));
    return Long_lo($this.$stateC6) >>> (32 - $bits | 0) | 0;
}
function cgxgbtp_Preloader$Asset() {
    var a = this; jl_Object.call(a);
    a.$succeed = 0;
    a.$failed = 0;
    a.$isLoading = 0;
    a.$loaded = Long_ZERO;
    a.$url = null;
    a.$type4 = null;
    a.$size4 = Long_ZERO;
    a.$mimeType = null;
}
function cgxgbtp_Preloader$Asset__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cgxgbtp_Preloader$Asset();
    cgxgbtp_Preloader$Asset__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgxgbtp_Preloader$Asset__init_0($this, $url, $type, $size, $mimeType) {
    jl_Object__init_0($this);
    $this.$url = $url;
    $this.$type4 = $type;
    $this.$size4 = $size;
    $this.$mimeType = $mimeType;
}
function cgxgbt_TeaClipboard() {
    var a = this; jl_Object.call(a);
    a.$requestedWritePermissions = 0;
    a.$hasWritePermissions = 0;
    a.$writeHandler = null;
    a.$content = null;
}
function cgxgbt_TeaClipboard__init_() {
    var var_0 = new cgxgbt_TeaClipboard();
    cgxgbt_TeaClipboard__init_0(var_0);
    return var_0;
}
function cgxgbt_TeaClipboard__init_0($this) {
    jl_Object__init_0($this);
    $this.$requestedWritePermissions = 0;
    $this.$hasWritePermissions = 1;
    $this.$writeHandler = cgxgbt_TeaClipboard$ClipboardWriteHandler__init_($this);
    $this.$content = $rt_s(45);
}
function cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4(var$1) {
    if ("clipboard" in $rt_globals.navigator) {
        $rt_globals.navigator.clipboard.writeText(var$1);
    }
}
var cbgssu_Button$1 = $rt_classWithoutFields(cbgssu_ClickListener);
var cbgssa_SizeToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
function cbgu_Array$ArrayIterator() {
    var a = this; jl_Object.call(a);
    a.$array7 = null;
    a.$allowRemove0 = 0;
    a.$index3 = 0;
    a.$valid0 = 0;
}
function cbgu_Array$ArrayIterator__init_(var_0, var_1) {
    var var_2 = new cbgu_Array$ArrayIterator();
    cbgu_Array$ArrayIterator__init_0(var_2, var_0, var_1);
    return var_2;
}
function cbgu_Array$ArrayIterator__init_0($this, $array, $allowRemove) {
    jl_Object__init_0($this);
    $this.$valid0 = 1;
    $this.$array7 = $array;
    $this.$allowRemove0 = $allowRemove;
}
function cbgu_Array$ArrayIterator_hasNext($this) {
    if (!$this.$valid0)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(1180)));
    return $this.$index3 >= $this.$array7.$size ? 0 : 1;
}
function cbgu_Array$ArrayIterator_next($this) {
    var var$1, var$2;
    if ($this.$index3 >= $this.$array7.$size)
        $rt_throw(ju_NoSuchElementException__init_1(jl_String_valueOf($this.$index3)));
    if (!$this.$valid0)
        $rt_throw(cbgu_GdxRuntimeException__init_0($rt_s(1180)));
    var$1 = $this.$array7.$items.data;
    var$2 = $this.$index3;
    $this.$index3 = var$2 + 1 | 0;
    return var$1[var$2];
}
function cgtrd_ChiDistribution() {
    cgtrd_Distribution.call(this);
    this.$alpha12 = 0;
}
function cgtrd_ChiDistribution__init_0(var_0, var_1) {
    var var_2 = new cgtrd_ChiDistribution();
    cgtrd_ChiDistribution__init_(var_2, var_0, var_1);
    return var_2;
}
function cgtrd_ChiDistribution__init_($this, $generator, $alpha) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, 0.0, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(462)));
}
function cgtrd_ChiDistribution_getMean($this) {
    return 1.4142135623730951 * cgtd_MathTools_gamma(($this.$alpha12 + 1.0) * 0.5) / cgtd_MathTools_gamma($this.$alpha12 * 0.5);
}
function cgtrd_ChiDistribution_setParameters($this, $a, $b, $c) {
    if ($a < 1.0)
        return 0;
    $this.$alpha12 = $a | 0;
    return 1;
}
function cgtrd_ChiDistribution_nextDouble($this) {
    return cgtrd_ChiDistribution_sample($this.$generator, $this.$alpha12);
}
function cgtrd_ChiDistribution_sample($generator, $alpha) {
    return jl_Math_sqrt(cgtrd_ChiSquareDistribution_sample($generator, $alpha));
}
var jur_IntArrHash = $rt_classWithoutFields();
var jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaMirrored__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaMirrored__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaMirrored_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaMirrored$1__init_($this);
}
var jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazyJavaISOControl__init_() {
    var var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazyJavaISOControl__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazyJavaISOControl_computeValue($this) {
    return jur_AbstractCharClass$LazyJavaISOControl$1__init_($this);
}
function cgt_ArcsineScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist19 = null;
    a.$batch25 = null;
    a.$renderer24 = null;
    a.$amounts24 = null;
    a.$iterations24 = Long_ZERO;
    a.$font26 = null;
    a.$viewport24 = null;
    a.$mainGame24 = null;
}
function cgt_ArcsineScreen__init_(var_0) {
    var var_1 = new cgt_ArcsineScreen();
    cgt_ArcsineScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ArcsineScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font26 = $this.$mainGame24.$font0;
    a: {
        try {
            var$1 = new cgtrd_ArcsineDistribution;
            var$2 = $this.$mainGame24.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ArcsineDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist19 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist19 = cgtrd_ArcsineDistribution__init_0($this.$mainGame24.$random0, 0.0, 1.0);
    }
    $this.$batch25 = $this.$mainGame24.$batch0;
    $this.$viewport24 = cbguv_ScreenViewport__init_();
    $this.$renderer24 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts24, Long_ZERO);
    $this.$iterations24 = Long_ZERO;
}
function cgt_ArcsineScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts24 = $rt_createLongArray(512);
    $this.$iterations24 = Long_ZERO;
    $this.$mainGame24 = $main;
}
function cgt_ArcsineScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame24.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame24.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame24.$setScreen($this.$mainGame24.$alternateArcsine);
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport24.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts24, Long_ZERO);
        $this.$iterations24 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts24, Long_ZERO);
        $this.$iterations24 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts24, Long_ZERO);
        $this.$iterations24 = Long_ZERO;
    }
    $this.$iterations24 = Long_add($this.$iterations24, Long_fromInt(1));
    var$3 = $this.$dist19;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist19.$nextDouble() * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts24.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer24.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer24.$color($color);
        var$3 = $this.$renderer24;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer24.$color($color);
        $this.$renderer24.$vertex(var$9, Long_toNumber(Long_div($this.$amounts24.data[$x], $this.$iterations24)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer24.$color((-6.221923240859403E37));
        var$3 = $this.$renderer24;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer24.$color((-6.221923240859403E37));
        $this.$renderer24.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer24.$end();
    $this.$batch25.$setProjectionMatrix($camera.$combined);
    $this.$batch25.$begin0();
    var$3 = $this.$font26;
    var$12 = $this.$batch25;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist19.$getMedian());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1181), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font26.$draw($this.$batch25, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font26.$draw($this.$batch25, $rt_s(1182), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch25.$end();
}
function cgt_ArcsineScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport24.$update0($width, $height, 1);
    $this.$viewport24.$apply(1);
}
var cbgggm_NodeKeyframe = $rt_classWithoutFields();
var cbgggpv_EllipseSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
var cbgggpi_RegionInfluencer$Single = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
var cgxgbtd_TeaTypedArrays = $rt_classWithoutFields(cgxgbtdt_TypedArrays);
function cgxgbtd_TeaTypedArrays__init_0() {
    var var_0 = new cgxgbtd_TeaTypedArrays();
    cgxgbtd_TeaTypedArrays__init_(var_0);
    return var_0;
}
function cgxgbtd_TeaTypedArrays__init_($this) {
    cgxgbtdt_TypedArrays__init_($this);
    cgxgbtdt_TypedArrays_setInstance($this);
}
function cgxgbtd_TeaTypedArrays_createFloat32Array($this, $length) {
    var $create;
    $create = new $rt_globals.Float32Array($length);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createInt32Array($this, $length) {
    var $create;
    $create = new $rt_globals.Int32Array($length);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createInt16Array($this, $length) {
    var $create;
    $create = new $rt_globals.Int16Array($length);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createInt8Array($this, $arrayBuffer) {
    var $create;
    $create = new $rt_globals.Int8Array($arrayBuffer);
    return $create;
}
function cgxgbtd_TeaTypedArrays_createUint8Array($this, $length) {
    var $create;
    $create = new $rt_globals.Uint8Array($length);
    return $create;
}
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high0 = 0;
}
function jur_HighSurrogateCharSet__init_(var_0) {
    var var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
}
function jur_HighSurrogateCharSet__init_0($this, $high) {
    jur_JointSet__init_0($this);
    $this.$high0 = $high;
}
function jur_HighSurrogateCharSet_setNext($this, $next) {
    $this.$next = $next;
}
function jur_HighSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
    var $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    var$6 = $rt_compare(var$5, $strLength);
    if (var$6 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (var$6 < 0) {
        $low = $testString.$charAt(var$5);
        if (jl_Character_isLowSurrogate($low))
            return (-1);
    }
    if ($this.$high0 != $high)
        return (-1);
    return $this.$next.$matches(var$5, $testString, $matchResult);
}
function jur_HighSurrogateCharSet_find($this, $strIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf($this.$high0, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate($testStr.$charAt($strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
}
function jur_HighSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
    var $testStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($this.$high0, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            var$8 = var$7 + 1 | 0;
            if (var$8 < $strLength && jl_Character_isLowSurrogate($testStr.$charAt(var$8))) {
                $lastIndex = var$7 + (-1) | 0;
                continue;
            }
            if ($this.$next.$matches(var$8, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
}
function jur_HighSurrogateCharSet_getName($this) {
    var var$1, var$2;
    var$1 = $this.$high0;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
}
function jur_HighSurrogateCharSet_first($this, $set) {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high0 != $this.$high0 ? 0 : 1;
}
function jur_HighSurrogateCharSet_hasConsumed($this, $matchResult) {
    return 1;
}
var cbgssu_Table$DebugRect = $rt_classWithoutFields(cbgm_Rectangle);
var cbgssu_Table$DebugRect_pool = null;
function cbgssu_Table$DebugRect_$callClinit() {
    cbgssu_Table$DebugRect_$callClinit = $rt_eraseClinit(cbgssu_Table$DebugRect);
    cbgssu_Table$DebugRect__clinit_();
}
function cbgssu_Table$DebugRect__init_0() {
    var var_0 = new cbgssu_Table$DebugRect();
    cbgssu_Table$DebugRect__init_(var_0);
    return var_0;
}
function cbgssu_Table$DebugRect__init_($this) {
    cbgssu_Table$DebugRect_$callClinit();
    cbgm_Rectangle__init_0($this);
}
function cbgssu_Table$DebugRect__clinit_() {
    cbgssu_Table$DebugRect_pool = cbgu_Pools_get0($rt_cls(cbgssu_Table$DebugRect));
}
var cbgm_Interpolation$ElasticIn = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
function cbgm_Interpolation$ElasticIn__init_(var_0, var_1, var_2, var_3) {
    var var_4 = new cbgm_Interpolation$ElasticIn();
    cbgm_Interpolation$ElasticIn__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cbgm_Interpolation$ElasticIn__init_0($this, $value, $power, $bounces, $scale) {
    cbgm_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale);
}
function cgtrd_ExponentialDistribution() {
    cgtrd_Distribution.call(this);
    this.$lambda0 = 0.0;
}
function cgtrd_ExponentialDistribution__init_(var_0, var_1) {
    var var_2 = new cgtrd_ExponentialDistribution();
    cgtrd_ExponentialDistribution__init_0(var_2, var_0, var_1);
    return var_2;
}
function cgtrd_ExponentialDistribution__init_0($this, $generator, $lambda) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($lambda, 0.0, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1183)));
}
function cgtrd_ExponentialDistribution_getMean($this) {
    return $this.$lambda0;
}
function cgtrd_ExponentialDistribution_setParameters($this, $a, $b, $c) {
    if ($a <= 0.0)
        return 0;
    $this.$lambda0 = 1.0 / $a;
    return 1;
}
function cgtrd_ExponentialDistribution_nextDouble($this) {
    return cgtrd_ExponentialDistribution_sample($this.$generator, $this.$lambda0);
}
function cgtrd_ExponentialDistribution_sample($generator, $inverseLambda) {
    return  -jl_Math_log($generator.$nextExclusiveDouble()) * $inverseLambda;
}
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
function otpp_AsyncCallbackWrapper__init_(var_0) {
    var var_1 = new otpp_AsyncCallbackWrapper();
    otpp_AsyncCallbackWrapper__init_0(var_1, var_0);
    return var_1;
}
function otpp_AsyncCallbackWrapper__init_0($this, $realAsyncCallback) {
    jl_Object__init_0($this);
    $this.$realAsyncCallback = $realAsyncCallback;
}
function otpp_AsyncCallbackWrapper_create($realAsyncCallback) {
    return otpp_AsyncCallbackWrapper__init_($realAsyncCallback);
}
function otpp_AsyncCallbackWrapper_complete($this, $result) {
    $this.$realAsyncCallback.$complete($result);
}
function otpp_AsyncCallbackWrapper_error($this, $e) {
    $this.$realAsyncCallback.$error($e);
}
function cbgu_IntArray() {
    var a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$size1 = 0;
    a.$ordered1 = 0;
}
function cbgu_IntArray__init_() {
    var var_0 = new cbgu_IntArray();
    cbgu_IntArray__init_1(var_0);
    return var_0;
}
function cbgu_IntArray__init_0(var_0) {
    var var_1 = new cbgu_IntArray();
    cbgu_IntArray__init_2(var_1, var_0);
    return var_1;
}
function cbgu_IntArray__init_3(var_0, var_1) {
    var var_2 = new cbgu_IntArray();
    cbgu_IntArray__init_4(var_2, var_0, var_1);
    return var_2;
}
function cbgu_IntArray__init_1($this) {
    cbgu_IntArray__init_4($this, 1, 16);
}
function cbgu_IntArray__init_2($this, $capacity) {
    cbgu_IntArray__init_4($this, 1, $capacity);
}
function cbgu_IntArray__init_4($this, $ordered, $capacity) {
    jl_Object__init_0($this);
    $this.$ordered1 = $ordered;
    $this.$items0 = $rt_createIntArray($capacity);
}
function cbgu_IntArray_add($this, $value) {
    var $items, var$3, var$4;
    $items = $this.$items0;
    var$3 = $items.data;
    if ($this.$size1 == var$3.length)
        $items = $this.$resize3(jl_Math_max(8, $this.$size1 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size1;
    $this.$size1 = var$4 + 1 | 0;
    var$3[var$4] = $value;
}
function cbgu_IntArray_add0($this, $value1, $value2) {
    var $items, var$4;
    $items = $this.$items0;
    var$4 = $items.data;
    if (($this.$size1 + 1 | 0) >= var$4.length)
        $items = $this.$resize3(jl_Math_max(8, $this.$size1 * 1.75 | 0));
    var$4 = $items.data;
    var$4[$this.$size1] = $value1;
    var$4[$this.$size1 + 1 | 0] = $value2;
    $this.$size1 = $this.$size1 + 2 | 0;
}
function cbgu_IntArray_get($this, $index) {
    if ($index < $this.$size1)
        return $this.$items0.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(303))).$append2($index)).$append1($rt_s(304))).$append2($this.$size1)).$toString()));
}
function cbgu_IntArray_set($this, $index, $value) {
    if ($index < $this.$size1) {
        $this.$items0.data[$index] = $value;
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(303))).$append2($index)).$append1($rt_s(304))).$append2($this.$size1)).$toString()));
}
function cbgu_IntArray_pop($this) {
    var var$1, var$2;
    var$1 = $this.$items0.data;
    var$2 = $this.$size1 - 1 | 0;
    $this.$size1 = var$2;
    return var$1[var$2];
}
function cbgu_IntArray_peek($this) {
    return $this.$items0.data[$this.$size1 - 1 | 0];
}
function cbgu_IntArray_clear($this) {
    $this.$size1 = 0;
}
function cbgu_IntArray_ensureCapacity($this, $additionalCapacity) {
    var $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(309))).$append2($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size1 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items0.data.length)
        $this.$resize3(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size1 * 1.75 | 0));
    return $this.$items0;
}
function cbgu_IntArray_resize($this, $newSize) {
    var $newItems, var$3, $items;
    $newItems = $rt_createIntArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items0;
    jl_System_arraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size1, var$3.length));
    $this.$items0 = $newItems;
    return $newItems;
}
function cbgu_IntArray_hashCode($this) {
    var $items, $h, $i, $n, var$5;
    if (!$this.$ordered1)
        return jl_Object_hashCode($this);
    $items = $this.$items0;
    $h = 1;
    $i = 0;
    $n = $this.$size1;
    while ($i < $n) {
        var$5 = $items.data;
        $h = ($h * 31 | 0) + var$5[$i] | 0;
        $i = $i + 1 | 0;
    }
    return $h;
}
function cbgu_IntArray_equals($this, $object) {
    var $array, $n, $items1, $items2, $i, var$7;
    if ($object === $this)
        return 1;
    if (!$this.$ordered1)
        return 0;
    if (!($object instanceof cbgu_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered1)
        return 0;
    $n = $this.$size1;
    if ($n != $array.$size1)
        return 0;
    $items1 = $this.$items0;
    $items2 = $array.$items0;
    $i = 0;
    while ($i < $n) {
        var$7 = $items2.data;
        if ($items1.data[$i] != var$7[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
}
function cbgu_IntArray_toString($this) {
    var $items, var$2, $buffer, $i;
    if (!$this.$size1)
        return $rt_s(311);
    $items = $this.$items0;
    var$2 = $items.data;
    $buffer = cbgu_StringBuilder__init_(32);
    $buffer.$append14(91);
    $buffer.$append31(var$2[0]);
    $i = 1;
    while ($i < $this.$size1) {
        $buffer.$append17($rt_s(312));
        $buffer.$append31(var$2[$i]);
        $i = $i + 1 | 0;
    }
    $buffer.$append14(93);
    return $buffer.$toString();
}
var cbgu_OrderedMap = $rt_classWithoutFields(cbgu_ObjectMap);
function cgtrd_ArcsineDistribution() {
    var a = this; cgtrd_Distribution.call(a);
    a.$alpha13 = 0.0;
    a.$beta6 = 0.0;
}
function cgtrd_ArcsineDistribution__init_0(var_0, var_1, var_2) {
    var var_3 = new cgtrd_ArcsineDistribution();
    cgtrd_ArcsineDistribution__init_(var_3, var_0, var_1, var_2);
    return var_3;
}
function cgtrd_ArcsineDistribution_getAlpha($this) {
    return $this.$alpha13;
}
function cgtrd_ArcsineDistribution_getBeta($this) {
    return $this.$beta6;
}
function cgtrd_ArcsineDistribution__init_($this, $generator, $alpha, $beta) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($alpha, $beta, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(395)));
}
function cgtrd_ArcsineDistribution_getMedian($this) {
    return 0.5 * ($this.$alpha13 + $this.$beta6);
}
function cgtrd_ArcsineDistribution_setParameters($this, $a, $b, $c) {
    if ($a >= $b)
        return 0;
    $this.$alpha13 = $a;
    $this.$beta6 = $b;
    return 1;
}
function cgtrd_ArcsineDistribution_nextDouble($this) {
    return cgtrd_ArcsineDistribution_sample($this.$generator, $this.$alpha13, $this.$beta6);
}
function cgtrd_ArcsineDistribution_sample($generator, $alpha, $beta) {
    var $s;
    $s = cgtrd_ArcsineDistribution_sinQuarterTurns($generator.$nextExclusiveDouble());
    return $alpha + ($beta - $alpha) * $s * $s;
}
function cgtrd_ArcsineDistribution_sinQuarterTurns($quarterTurns) {
    var $ceil, var$3, $x2, $x3;
    $ceil = Long_and(Long_fromNumber(jl_Math_ceil($quarterTurns)), Long_fromInt(-2));
    var$3 = $quarterTurns - Long_toNumber($ceil);
    $x2 = var$3 * var$3;
    $x3 = var$3 * $x2;
    return (11.0 * var$3 - 3.0 * $x3) / (7.0 + $x2) * Long_toNumber(Long_sub(Long_fromInt(1), Long_and($ceil, Long_fromInt(2))));
}
var cbgssu_SelectBox = $rt_classWithoutFields(cbgssu_Widget);
var cbgssu_SelectBox_temp = null;
function cbgssu_SelectBox_$callClinit() {
    cbgssu_SelectBox_$callClinit = $rt_eraseClinit(cbgssu_SelectBox);
    cbgssu_SelectBox__clinit_();
}
function cbgssu_SelectBox__clinit_() {
    cbgssu_SelectBox_temp = cbgm_Vector2__init_();
}
var jl_IllegalAccessException = $rt_classWithoutFields(jl_ReflectiveOperationException);
function jl_IllegalAccessException__init_() {
    var var_0 = new jl_IllegalAccessException();
    jl_IllegalAccessException__init_0(var_0);
    return var_0;
}
function jl_IllegalAccessException__init_0($this) {
    jl_ReflectiveOperationException__init_0($this);
}
function cgtr_ChopRandom() {
    var a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA9 = 0;
    a.$stateB9 = 0;
    a.$stateC7 = 0;
    a.$stateD6 = 0;
}
function cgtr_ChopRandom__init_() {
    var var_0 = new cgtr_ChopRandom();
    cgtr_ChopRandom__init_0(var_0);
    return var_0;
}
function cgtr_ChopRandom__init_1(var_0, var_1, var_2, var_3) {
    var var_4 = new cgtr_ChopRandom();
    cgtr_ChopRandom__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
}
function cgtr_ChopRandom__init_0($this) {
    cgtr_ChopRandom__init_2($this, Long_lo((cgtr_EnhancedRandom_seedFromMath())), Long_lo((cgtr_EnhancedRandom_seedFromMath())), Long_lo((cgtr_EnhancedRandom_seedFromMath())), Long_lo((cgtr_EnhancedRandom_seedFromMath())));
}
function cgtr_ChopRandom__init_2($this, $stateA, $stateB, $stateC, $stateD) {
    cgtr_EnhancedRandom__init_0($this, Long_fromInt($stateA));
    $this.$stateA9 = $stateA;
    $this.$stateB9 = $stateB;
    $this.$stateC7 = $stateC;
    $this.$stateD6 = $stateD;
}
function cgtr_ChopRandom_nextLong($this) {
    var $fa, $fb, $fc, $fd, $ga, var$6, $gb, var$8, $gc, $gd, $sa, $sb;
    $fa = $this.$stateA9;
    $fb = $this.$stateB9;
    $fc = $this.$stateC7;
    $fd = $this.$stateD6;
    $ga = $fb ^ $fc;
    var$6 = $ga << 26 | ($ga >>> 6 | 0);
    $gb = $fc ^ $fd;
    var$8 = $gb << 11 | ($gb >>> 21 | 0);
    $gc = $fa ^ ($fb + $fc | 0);
    $gd = $fd + (-1380601499) | 0;
    $sa = var$8 ^ $gc;
    $this.$stateA9 = $sa << 26 | ($sa >>> 6 | 0);
    $sb = $gc ^ $gd;
    $this.$stateB9 = $sb << 11 | ($sb >>> 21 | 0);
    $this.$stateC7 = var$6 ^ (var$8 + $gc | 0);
    $this.$stateD6 = $gd + (-1380601499) | 0;
    return Long_xor(Long_shl(Long_fromInt($fc), 32), Long_fromInt($gc));
}
function cgtr_ChopRandom_next($this, $bits) {
    var $fa, $fb, $fc, $fd, $sa, $sb;
    $fa = $this.$stateA9;
    $fb = $this.$stateB9;
    $fc = $this.$stateC7;
    $fd = $this.$stateD6;
    $sa = $fb ^ $fc;
    $this.$stateA9 = $sa << 26 | ($sa >>> 6 | 0);
    $sb = $fc ^ $fd;
    $this.$stateB9 = $sb << 11 | ($sb >>> 21 | 0);
    $this.$stateC7 = $fa ^ ($fb + $fc | 0);
    $this.$stateD6 = $fd + (-1380601499) | 0;
    return $fc >>> (32 - $bits | 0) | 0;
}
function cgtr_ChopRandom_nextInt($this) {
    var $fa, $fb, $fc, $fd, $sa, $sb;
    $fa = $this.$stateA9;
    $fb = $this.$stateB9;
    $fc = $this.$stateC7;
    $fd = $this.$stateD6;
    $sa = $fb ^ $fc;
    $this.$stateA9 = $sa << 26 | ($sa >>> 6 | 0);
    $sb = $fc ^ $fd;
    $this.$stateB9 = $sb << 11 | ($sb >>> 21 | 0);
    $this.$stateC7 = $fa ^ ($fb + $fc | 0);
    $this.$stateD6 = $fd + (-1380601499) | 0;
    return $fc;
}
function cgtr_ChopRandom_nextFloat($this) {
    return ($this.$nextInt() >>> 8 | 0) * 5.960464477539063E-8;
}
function cgtrd_StudentsTDistribution() {
    cgtrd_Distribution.call(this);
    this.$nu = 0.0;
}
function cgtrd_StudentsTDistribution__init_0(var_0, var_1) {
    var var_2 = new cgtrd_StudentsTDistribution();
    cgtrd_StudentsTDistribution__init_(var_2, var_0, var_1);
    return var_2;
}
function cgtrd_StudentsTDistribution__init_($this, $generator, $nu) {
    cgtrd_Distribution__init_($this);
    $this.$generator = $generator;
    if ($this.$setParameters($nu, 0.0, 0.0))
        return;
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(1184)));
}
function cgtrd_StudentsTDistribution_getMedian($this) {
    return 0.0;
}
function cgtrd_StudentsTDistribution_setParameters($this, $a, $b, $c) {
    if ($a <= 0.0)
        return 0;
    $this.$nu = $a;
    return 1;
}
function cgtrd_StudentsTDistribution_nextDouble($this) {
    return cgtrd_StudentsTDistribution_sample($this.$generator, $this.$nu);
}
function cgtrd_StudentsTDistribution_sample($generator, $nu) {
    var $n, $c;
    $n = $generator.$nextGaussian0();
    $c = cgtrd_ChiSquareDistribution_sample($generator, $nu);
    return $n / jl_Math_sqrt($c / $nu);
}
var cbgggpr_ModelInstanceControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
var cbgssu_Touchpad$TouchpadStyle = $rt_classWithoutFields();
var cgtd_RyuDouble = $rt_classWithoutFields();
var cgtd_RyuDouble_POW5_SPLIT = null;
var cgtd_RyuDouble_POW5_INV_SPLIT = null;
var cgtd_RyuDouble_result = null;
function cgtd_RyuDouble_$callClinit() {
    cgtd_RyuDouble_$callClinit = $rt_eraseClinit(cgtd_RyuDouble);
    cgtd_RyuDouble__clinit_();
}
function cgtd_RyuDouble_decimal($value) {
    cgtd_RyuDouble_$callClinit();
    return (cgtd_RyuDouble_appendDecimal0(jl_StringBuilder__init_(), $value, (-10000))).$toString();
}
function cgtd_RyuDouble_appendDecimal($builder, $value) {
    cgtd_RyuDouble_$callClinit();
    return cgtd_RyuDouble_appendDecimal0($builder, $value, (-10000));
}
function cgtd_RyuDouble_appendDecimal0($builder, $value, $lengthLimit) {
    var $bits, var$5, $ieeeExponent, $m2, $e2, $sign, $even, $mv, $mp, $mmShift, $mm, var$15, $dmIsTrailingZeros, $dvIsTrailingZeros, $q, $k, $i, $dv, $dp, $dm, var$24, $q_0, $j, $vplength, $exp, $removed, $lastRemovedDigit, var$31, $output, $index, $i_0, $current;
    cgtd_RyuDouble_$callClinit();
    if ($rt_globals.isNaN($value) ? 1 : 0)
        return $builder.$append1($rt_s(1185));
    if ($value !== Infinity && $value !== (-Infinity)) {
        $bits = cgtd_BitConversion_doubleToLongBits($value);
        var$5 = Long_compare($bits, Long_ZERO);
        if (!var$5)
            return $builder.$append1($rt_s(1186));
        if (Long_eq($bits, Long_create(0, 2147483648)))
            return $builder.$append1($rt_s(1187));
        $ieeeExponent = Long_lo(Long_and(Long_shru($bits, 52), Long_fromInt(2047)));
        $m2 = Long_and($bits, Long_create(4294967295, 1048575));
        if (!$ieeeExponent)
            $e2 = (-1074);
        else {
            $e2 = ($ieeeExponent - 1023 | 0) - 52 | 0;
            $m2 = Long_or($m2, Long_create(0, 1048576));
        }
        $sign = var$5 >= 0 ? 0 : 1;
        $even = Long_ne(Long_and($m2, Long_fromInt(1)), Long_ZERO) ? 0 : 1;
        $mv = Long_mul(Long_fromInt(4), $m2);
        $mp = Long_add($mv, Long_fromInt(2));
        $mmShift = Long_eq($m2, Long_create(0, 1048576)) && $ieeeExponent != 1 ? 0 : 1;
        $mm = Long_sub(Long_sub($mv, Long_fromInt(1)), Long_fromInt($mmShift));
        var$15 = $e2 + (-2) | 0;
        $dmIsTrailingZeros = 0;
        $dvIsTrailingZeros = 0;
        if (var$15 >= 0) {
            $q = jl_Math_max(0, ((var$15 * 78913 | 0) >>> 18 | 0) - 1 | 0);
            $k = (122 + cgtd_RyuDouble_pow5bits($q) | 0) - 1 | 0;
            $i = (( -var$15 | 0) + $q | 0) + $k | 0;
            $dv = cgtd_RyuDouble_mulPow5InvDivPow2($mv, $q, $i);
            $dp = cgtd_RyuDouble_mulPow5InvDivPow2($mp, $q, $i);
            $dm = cgtd_RyuDouble_mulPow5InvDivPow2($mm, $q, $i);
            if ($q <= 21) {
                if (Long_eq(Long_rem($mv, Long_fromInt(5)), Long_ZERO))
                    $dvIsTrailingZeros = cgtd_RyuDouble_multipleOfPowerOf5($mv, $q);
                else if ($even)
                    $dmIsTrailingZeros = cgtd_RyuDouble_multipleOfPowerOf5($mm, $q);
                else if (cgtd_RyuDouble_multipleOfPowerOf5($mp, $q))
                    $dp = Long_sub($dp, Long_fromInt(1));
            }
        } else {
            var$24 =  -var$15 | 0;
            $q_0 = jl_Math_max(0, ($rt_imul(var$24, 732923) >>> 20 | 0) - 1 | 0);
            $i = var$24 - $q_0 | 0;
            $k = cgtd_RyuDouble_pow5bits($i) - 121 | 0;
            $j = $q_0 - $k | 0;
            $dv = cgtd_RyuDouble_mulPow5divPow2($mv, $i, $j);
            $dp = cgtd_RyuDouble_mulPow5divPow2($mp, $i, $j);
            $dm = cgtd_RyuDouble_mulPow5divPow2($mm, $i, $j);
            $q = $q_0 + var$15 | 0;
            if ($q_0 <= 1) {
                $dvIsTrailingZeros = 1;
                if (!$even)
                    $dp = Long_sub($dp, Long_fromInt(1));
                else
                    $dmIsTrailingZeros = $mmShift != 1 ? 0 : 1;
            } else if ($q_0 < 63)
                $dvIsTrailingZeros = Long_ne(Long_and($mv, Long_sub(Long_shl(Long_fromInt(1), $q_0 - 1 | 0), Long_fromInt(1))), Long_ZERO) ? 0 : 1;
        }
        $vplength = cgtd_RyuDouble_decimalLength($dp);
        $exp = ($q + $vplength | 0) - 1 | 0;
        $removed = 0;
        $lastRemovedDigit = 0;
        if (!$dmIsTrailingZeros && !$dvIsTrailingZeros) {
            while (true) {
                $dp = Long_div($dp, Long_fromInt(10));
                var$31 = Long_div($dm, Long_fromInt(10));
                if (Long_le($dp, var$31))
                    break;
                $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                $dv = Long_div($dv, Long_fromInt(10));
                $removed = $removed + 1 | 0;
                $dm = var$31;
            }
            $output = Long_add($dv, Long_fromInt(Long_ne($dv, $dm) && $lastRemovedDigit < 5 ? 0 : 1));
        } else {
            while (true) {
                $dp = Long_div($dp, Long_fromInt(10));
                var$31 = Long_div($dm, Long_fromInt(10));
                if (Long_le($dp, var$31))
                    break;
                $dmIsTrailingZeros = $dmIsTrailingZeros & (Long_ne(Long_rem($dm, Long_fromInt(10)), Long_ZERO) ? 0 : 1);
                $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                $dv = Long_div($dv, Long_fromInt(10));
                $removed = $removed + 1 | 0;
                $dm = var$31;
            }
            if ($dmIsTrailingZeros)
                while (Long_eq(Long_rem($dm, Long_fromInt(10)), Long_ZERO)) {
                    $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                    $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                    $dv = Long_div($dv, Long_fromInt(10));
                    $dm = Long_div($dm, Long_fromInt(10));
                    $removed = $removed + 1 | 0;
                }
            if ($dvIsTrailingZeros && $lastRemovedDigit == 5 && Long_eq(Long_and($dv, Long_fromInt(1)), Long_ZERO))
                $lastRemovedDigit = 4;
            $output = Long_add($dv, Long_fromInt(!(Long_eq($dv, $dm) && !$dmIsTrailingZeros) && $lastRemovedDigit < 5 ? 0 : 1));
        }
        $i = $vplength - $removed | 0;
        $index = $builder.$length();
        if ($sign)
            $builder.$append0(45);
        a: {
            if ($exp < 0) {
                $builder.$append1($rt_s(1188));
                $i_0 = (-1);
                while ($i_0 > $exp) {
                    $builder.$append0(48);
                    $i_0 = $i_0 + (-1) | 0;
                }
                $current = $builder.$length();
                $i_0 = 0;
                while ($i_0 < $i) {
                    $builder.$insert15($current, Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535);
                    $output = Long_div($output, Long_fromInt(10));
                    $i_0 = $i_0 + 1 | 0;
                }
            } else {
                var$5 = $exp + 1 | 0;
                if (var$5 >= $i) {
                    var$24 = $builder.$length();
                    $i_0 = 0;
                    while ($i_0 < $i) {
                        $builder.$insert15(var$24, Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535);
                        $output = Long_div($output, Long_fromInt(10));
                        $i_0 = $i_0 + 1 | 0;
                    }
                    while ($i < var$5) {
                        $builder.$append0(48);
                        $i = $i + 1 | 0;
                    }
                    $builder.$append1($rt_s(1189));
                } else {
                    $current = $builder.$length();
                    $i_0 = 0;
                    while (true) {
                        if ($i_0 >= $i)
                            break a;
                        if ((($i - $i_0 | 0) - 1 | 0) == $exp)
                            $builder.$insert15($current, 46);
                        $builder.$insert15($current, Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535);
                        $output = Long_div($output, Long_fromInt(10));
                        $i_0 = $i_0 + 1 | 0;
                    }
                }
            }
        }
        if ($lengthLimit != (-10000)) {
            while ($removed >= (-1)) {
                $builder.$append0(48);
                $removed = $removed + (-1) | 0;
            }
            if (Long_lt(Long_add(Long_fromInt($index), Long_fromInt($lengthLimit)), Long_fromInt($builder.$length())))
                $builder.$setLength($index + $lengthLimit | 0);
        }
        return $builder;
    }
    if ($value === (-Infinity))
        $builder.$append0(45);
    return $builder.$append1($rt_s(1190));
}
function cgtd_RyuDouble_pow5bits($e) {
    cgtd_RyuDouble_$callClinit();
    return (cgtd_BitConversion_imul($e, 1217359) >>> 19 | 0) + 1 | 0;
}
function cgtd_RyuDouble_decimalLength($v) {
    cgtd_RyuDouble_$callClinit();
    if (Long_ge($v, Long_create(2808348672, 232830643)))
        return 19;
    if (Long_ge($v, Long_create(1569325056, 23283064)))
        return 18;
    if (Long_ge($v, Long_create(1874919424, 2328306)))
        return 17;
    if (Long_ge($v, Long_create(2764472320, 232830)))
        return 16;
    if (Long_ge($v, Long_create(276447232, 23283)))
        return 15;
    if (Long_ge($v, Long_create(1316134912, 2328)))
        return 14;
    if (Long_ge($v, Long_create(3567587328, 232)))
        return 13;
    if (Long_ge($v, Long_create(1215752192, 23)))
        return 12;
    if (Long_ge($v, Long_create(1410065408, 2)))
        return 11;
    if (Long_ge($v, Long_fromInt(1000000000)))
        return 10;
    if (Long_ge($v, Long_fromInt(100000000)))
        return 9;
    if (Long_ge($v, Long_fromInt(10000000)))
        return 8;
    if (Long_ge($v, Long_fromInt(1000000)))
        return 7;
    if (Long_ge($v, Long_fromInt(100000)))
        return 6;
    if (Long_ge($v, Long_fromInt(10000)))
        return 5;
    if (Long_ge($v, Long_fromInt(1000)))
        return 4;
    if (Long_ge($v, Long_fromInt(100)))
        return 3;
    if (Long_lt($v, Long_fromInt(10)))
        return 1;
    return 2;
}
function cgtd_RyuDouble_multipleOfPowerOf5($value, $q) {
    cgtd_RyuDouble_$callClinit();
    return cgtd_RyuDouble_pow5Factor($value) < $q ? 0 : 1;
}
function cgtd_RyuDouble_pow5Factor($value) {
    var $count, var$3;
    cgtd_RyuDouble_$callClinit();
    if (Long_ne(Long_rem($value, Long_fromInt(5)), Long_ZERO))
        return 0;
    if (Long_ne(Long_rem($value, Long_fromInt(25)), Long_ZERO))
        return 1;
    if (Long_ne(Long_rem($value, Long_fromInt(125)), Long_ZERO))
        return 2;
    if (Long_ne(Long_rem($value, Long_fromInt(625)), Long_ZERO))
        return 3;
    $count = 4;
    var$3 = Long_div($value, Long_fromInt(625));
    while (true) {
        if (Long_le(var$3, Long_ZERO))
            $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(45))).$append28(var$3)).$toString()));
        if (Long_ne(Long_rem(var$3, Long_fromInt(5)), Long_ZERO))
            break;
        var$3 = Long_div(var$3, Long_fromInt(5));
        $count = $count + 1 | 0;
    }
    return $count;
}
function cgtd_RyuDouble_mulPow5divPow2($m, $i, $j) {
    var $mHigh, $mLow, $bits13, $bits03, $bits12, $bits02, $bits11, $bits01, $bits10, $bits00, $actualShift;
    cgtd_RyuDouble_$callClinit();
    $mHigh = Long_shru($m, 31);
    $mLow = Long_and($m, Long_fromInt(2147483647));
    $bits13 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[0]));
    $bits03 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[0]));
    $bits12 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[1]));
    $bits02 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[1]));
    $bits11 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[2]));
    $bits01 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[2]));
    $bits10 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[3]));
    $bits00 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_SPLIT.data[$i].data[3]));
    $actualShift = ($j - 93 | 0) - 21 | 0;
    if ($actualShift < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(45))).$append2($actualShift)).$toString()));
    return Long_shru(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru($bits00, 31), $bits01), $bits10), 31), $bits02), $bits11), 31), $bits03), $bits12), 21), Long_shl($bits13, 10)), $actualShift);
}
function cgtd_RyuDouble_mulPow5InvDivPow2($m, $i, $j) {
    var $mHigh, $mLow, $bits13, $bits03, $bits12, $bits02, $bits11, $bits01, $bits10, $bits00, $actualShift;
    cgtd_RyuDouble_$callClinit();
    $mHigh = Long_shru($m, 31);
    $mLow = Long_and($m, Long_fromInt(2147483647));
    $bits13 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[0]));
    $bits03 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[0]));
    $bits12 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[1]));
    $bits02 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[1]));
    $bits11 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[2]));
    $bits01 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[2]));
    $bits10 = Long_mul($mHigh, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[3]));
    $bits00 = Long_mul($mLow, Long_fromInt(cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[3]));
    $actualShift = ($j - 93 | 0) - 21 | 0;
    if ($actualShift < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(45))).$append2($actualShift)).$toString()));
    return Long_shru(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru($bits00, 31), $bits01), $bits10), 31), $bits02), $bits11), 31), $bits03), $bits12), 21), Long_shl($bits13, 10)), $actualShift);
}
function cgtd_RyuDouble__clinit_() {
    var $mask, $invMask, $i, $pow, $pow5len, $expectedPow5Bits, $j, var$8, var$9, var$10, $inv, $k;
    cgtd_RyuDouble_POW5_SPLIT = $rt_createIntMultiArray([4, 326]);
    cgtd_RyuDouble_POW5_INV_SPLIT = $rt_createIntMultiArray([4, 291]);
    cgtd_RyuDouble_result = $rt_createCharArray(32);
    jm_BigInteger_$callClinit();
    $mask = (jm_BigInteger_ONE.$shiftLeft1(31)).$subtract2(jm_BigInteger_ONE);
    $invMask = (jm_BigInteger_ONE.$shiftLeft1(31)).$subtract2(jm_BigInteger_ONE);
    $i = 0;
    while ($i < 326) {
        $pow = (jm_BigInteger_valueOf(Long_fromInt(5))).$pow1($i);
        $pow5len = $pow.$bitLength0();
        $expectedPow5Bits = cgtd_RyuDouble_pow5bits($i);
        if ($expectedPow5Bits != $pow5len)
            $rt_throw(jl_IllegalStateException__init_(((((jl_StringBuilder__init_()).$append2($pow5len)).$append1($rt_s(1191))).$append2($expectedPow5Bits)).$toString()));
        $j = 0;
        while ($j < 4) {
            var$8 = cgtd_RyuDouble_POW5_SPLIT.data[$i].data;
            var$9 = ($pow5len - 121 | 0) + ((3 - $j | 0) * 31 | 0) | 0;
            var$10 = $pow.$shiftRight1(var$9);
            var$10 = var$10.$and1($mask);
            var$8[$j] = var$10.$intValue();
            $j = $j + 1 | 0;
        }
        a: {
            if ($i < cgtd_RyuDouble_POW5_INV_SPLIT.data.length) {
                $j = ($pow5len - 1 | 0) + 122 | 0;
                $inv = ((jm_BigInteger_ONE.$shiftLeft1($j)).$divide0($pow)).$add14(jm_BigInteger_ONE);
                $k = 0;
                while (true) {
                    if ($k >= 4)
                        break a;
                    if (!$k)
                        cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[$k] = ($inv.$shiftRight1((3 - $k | 0) * 31 | 0)).$intValue();
                    else
                        cgtd_RyuDouble_POW5_INV_SPLIT.data[$i].data[$k] = (($inv.$shiftRight1((3 - $k | 0) * 31 | 0)).$and1($invMask)).$intValue();
                    $k = $k + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
}
var cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool = $rt_classWithoutFields(cbgu_Pool);
var cbgssa_LayoutAction = $rt_classWithoutFields(cbgss_Action);
var cbgssu_TextField$TextFieldListener = $rt_classWithoutFields(0);
var cbggg_Sprite = $rt_classWithoutFields(cbggg_TextureRegion);
var cbgu_NumberUtils = $rt_classWithoutFields();
function cbgu_NumberUtils_floatToIntBits($value) {
    return $rt_floatToIntBits($value);
}
function cbgu_NumberUtils_intToFloatColor($value) {
    return $rt_intBitsToFloat($value & (-16777217));
}
var cbgm_Octree = $rt_classWithoutFields();
var cbgm_Octree_tmp = null;
function cbgm_Octree_$callClinit() {
    cbgm_Octree_$callClinit = $rt_eraseClinit(cbgm_Octree);
    cbgm_Octree__clinit_();
}
function cbgm_Octree__clinit_() {
    cbgm_Octree_tmp = cbgm_Vector3__init_();
}
var cbgssu_ButtonGroup = $rt_classWithoutFields();
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
function jur_UMultiLineEOLSet__init_(var_0) {
    var var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
}
function jur_UMultiLineEOLSet__init_0($this, $counter) {
    jur_AbstractSet__init_($this);
    $this.$consCounter3 = $counter;
}
function jur_UMultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
    var $strDif;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if ($strDif <= 0) {
        $matchResult.$setConsumed($this.$consCounter3, 0);
        return $this.$next.$matches($strIndex, $testString, $matchResult);
    }
    if ($testString.$charAt($strIndex) != 10)
        return (-1);
    $matchResult.$setConsumed($this.$consCounter3, 1);
    return $this.$next.$matches($strIndex + 1 | 0, $testString, $matchResult);
}
function jur_UMultiLineEOLSet_hasConsumed($this, $matchResult) {
    var $res;
    $res = !$matchResult.$getConsumed($this.$consCounter3) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter3, (-1));
    return $res;
}
function jur_UMultiLineEOLSet_getName($this) {
    return $rt_s(1192);
}
function jl_Thread$start$lambda$_4_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
function jl_Thread$start$lambda$_4_0__init_(var_0) {
    var var_1 = new jl_Thread$start$lambda$_4_0();
    jl_Thread$start$lambda$_4_0__init_0(var_1, var_0);
    return var_1;
}
function jl_Thread$start$lambda$_4_0__init_0(var$0, var$1) {
    jl_Object__init_0(var$0);
    var$0.$_01 = var$1;
}
function jl_Thread$start$lambda$_4_0_run(var$0) {
    jl_Thread_runThread(var$0.$_01);
}
var cbgssa_AfterAction = $rt_classWithoutFields(cbgssa_DelegateAction);
var cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter = $rt_classWithoutFields();
var cbgm_Octree$OctreeNode = $rt_classWithoutFields();
var cgxgbtp_Preloader$12 = $rt_classWithoutFields();
var cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = null;
function cgxgbtp_Preloader$12_$callClinit() {
    cgxgbtp_Preloader$12_$callClinit = $rt_eraseClinit(cgxgbtp_Preloader$12);
    cgxgbtp_Preloader$12__clinit_();
}
function cgxgbtp_Preloader$12__clinit_() {
    cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = $rt_createIntArray((cgxgbtp_AssetType_values()).data.length);
    cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Text)] = 1;
    cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Image)] = 2;
    cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Binary)] = 3;
    cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Audio)] = 4;
    cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[jl_Enum_ordinal(cgxgbtp_AssetType_Directory)] = 5;
}
var cbgssa_AddListenerAction = $rt_classWithoutFields(cbgss_Action);
var jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
function jur_AbstractCharClass$LazySpecialsBlock__init_() {
    var var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_0(var_0);
    return var_0;
}
function jur_AbstractCharClass$LazySpecialsBlock__init_0($this) {
    jur_AbstractCharClass$LazyCharClass__init_($this);
}
function jur_AbstractCharClass$LazySpecialsBlock_computeValue($this) {
    return ((jur_CharClass__init_()).$add0(65279, 65279)).$add0(65520, 65533);
}
var cbgss_Stage$TouchFocus = $rt_classWithoutFields();
function cgt_ExponentialScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist20 = null;
    a.$batch26 = null;
    a.$renderer25 = null;
    a.$amounts25 = null;
    a.$iterations25 = Long_ZERO;
    a.$font27 = null;
    a.$viewport25 = null;
    a.$mainGame25 = null;
}
function cgt_ExponentialScreen__init_(var_0) {
    var var_1 = new cgt_ExponentialScreen();
    cgt_ExponentialScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ExponentialScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font27 = $this.$mainGame25.$font0;
    a: {
        try {
            var$1 = new cgtrd_ExponentialDistribution;
            var$2 = $this.$mainGame25.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ExponentialDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a);
            $this.$dist20 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist20 = cgtrd_ExponentialDistribution__init_($this.$mainGame25.$random0, 1.0);
    }
    $this.$batch26 = $this.$mainGame25.$batch0;
    $this.$viewport25 = cbguv_ScreenViewport__init_();
    $this.$renderer25 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts25, Long_ZERO);
    $this.$iterations25 = Long_ZERO;
}
function cgt_ExponentialScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts25 = $rt_createLongArray(512);
    $this.$iterations25 = Long_ZERO;
    $this.$mainGame25 = $main;
}
function cgt_ExponentialScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame25.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame25.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport25.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts25, Long_ZERO);
        $this.$iterations25 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts25, Long_ZERO);
        $this.$iterations25 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts25, Long_ZERO);
        $this.$iterations25 = Long_ZERO;
    }
    $this.$iterations25 = Long_add($this.$iterations25, Long_fromInt(1));
    var$3 = $this.$dist20;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist20.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts25.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer25.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer25.$color($color);
        var$3 = $this.$renderer25;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer25.$color($color);
        $this.$renderer25.$vertex(var$9, Long_toNumber(Long_div($this.$amounts25.data[$x], $this.$iterations25)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer25.$color((-6.221923240859403E37));
        var$3 = $this.$renderer25;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer25.$color((-6.221923240859403E37));
        $this.$renderer25.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer25.$end();
    $this.$batch26.$setProjectionMatrix($camera.$combined);
    $this.$batch26.$begin0();
    var$3 = $this.$font27;
    var$12 = $this.$batch26;
    var$6 = $rt_createArray(jl_Object, 3);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf($this.$dist20.$getMean());
    var$13[2] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1193), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font27.$draw($this.$batch26, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font27.$draw($this.$batch26, $rt_s(1101), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch26.$end();
}
function cgt_ExponentialScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport25.$update0($width, $height, 1);
    $this.$viewport25.$apply(1);
}
var cbgssu_List$ListStyle = $rt_classWithoutFields();
function cgt_ArcsineAlternateScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist21 = null;
    a.$batch27 = null;
    a.$renderer26 = null;
    a.$amounts26 = null;
    a.$altAmounts = null;
    a.$badAmounts = null;
    a.$iterations26 = Long_ZERO;
    a.$font28 = null;
    a.$viewport26 = null;
    a.$mainGame26 = null;
}
function cgt_ArcsineAlternateScreen__init_(var_0) {
    var var_1 = new cgt_ArcsineAlternateScreen();
    cgt_ArcsineAlternateScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ArcsineAlternateScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font28 = $this.$mainGame26.$font0;
    a: {
        try {
            var$1 = new cgtrd_ArcsineDistribution;
            var$2 = $this.$mainGame26.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ArcsineDistribution__init_(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist21 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist21 = cgtrd_ArcsineDistribution__init_0($this.$mainGame26.$random0, 0.0, 1.0);
    }
    $this.$batch27 = $this.$mainGame26.$batch0;
    $this.$viewport26 = cbguv_ScreenViewport__init_();
    $this.$renderer26 = cbggg_ImmediateModeRenderer20__init_(3584, 0, 1, 0);
    ju_Arrays_fill($this.$amounts26, Long_ZERO);
    ju_Arrays_fill($this.$altAmounts, Long_ZERO);
    ju_Arrays_fill($this.$badAmounts, Long_ZERO);
    $this.$iterations26 = Long_ZERO;
}
function cgt_ArcsineAlternateScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts26 = $rt_createLongArray(512);
    $this.$altAmounts = $rt_createLongArray(512);
    $this.$badAmounts = $rt_createLongArray(512);
    $this.$iterations26 = Long_ZERO;
    $this.$mainGame26 = $main;
}
function cgt_ArcsineAlternateScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $s, var$8, var$9, $x, $color, var$12, var$13, $j, var$15, var$16, var$17, var$18;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame26.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame26.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(76)) {
        $this.$mainGame26.$nextScreen();
        $this.$mainGame26.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport26.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts26, Long_ZERO);
        ju_Arrays_fill($this.$altAmounts, Long_ZERO);
        ju_Arrays_fill($this.$badAmounts, Long_ZERO);
        $this.$iterations26 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts26, Long_ZERO);
        ju_Arrays_fill($this.$altAmounts, Long_ZERO);
        ju_Arrays_fill($this.$badAmounts, Long_ZERO);
        $this.$iterations26 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts26, Long_ZERO);
        ju_Arrays_fill($this.$altAmounts, Long_ZERO);
        ju_Arrays_fill($this.$badAmounts, Long_ZERO);
        $this.$iterations26 = Long_ZERO;
    }
    $this.$iterations26 = Long_add($this.$iterations26, Long_fromInt(1));
    var$3 = $this.$dist21;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist21.$nextDouble() * 128.0 + 256.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts26.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $s = jl_Math_sin(1.5707963267948966 * $this.$dist21.$generator.$nextExclusiveDouble());
        var$3 = $this.$dist21;
        var$8 = (var$3.$getAlpha() + ($this.$dist21.$getBeta() - $this.$dist21.$getAlpha()) * $s * $s) * 128.0 + 256.0 | 0;
        if (var$8 >= 0 && var$8 < 512) {
            var$6 = $this.$altAmounts.data;
            var$6[var$8] = Long_add(var$6[var$8], Long_fromInt(1));
        }
        var$9 = cgtd_TrigTools_sin0(1.5707963267948966 * $this.$dist21.$generator.$nextExclusiveDouble());
        var$3 = $this.$dist21;
        var$8 = (var$3.$getAlpha() + ($this.$dist21.$getBeta() - $this.$dist21.$getAlpha()) * var$9 * var$9) * 128.0 + 256.0 | 0;
        if (var$8 >= 0 && var$8 < 512) {
            var$6 = $this.$badAmounts.data;
            var$6[var$8] = Long_add(var$6[var$8], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer26.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        var$8 = $x & 63;
        $color = var$8 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer26.$color($color);
        var$3 = $this.$renderer26;
        var$12 = $x;
        var$3.$vertex(var$12, 0.0, 0.0);
        $this.$renderer26.$color($color);
        $this.$renderer26.$vertex(var$12, Long_toNumber(Long_div($this.$amounts26.data[$x], $this.$iterations26)), 0.0);
        var$13 = var$8 ? (-7.163207052854073E37) : (-6.694328448841655E37);
        $this.$renderer26.$color(var$13);
        $this.$renderer26.$vertex(var$12, Long_toNumber(Long_div($this.$altAmounts.data[$x], $this.$iterations26)) - 0.75, 0.0);
        $this.$renderer26.$color(var$13);
        $this.$renderer26.$vertex(var$12, Long_toNumber(Long_div($this.$altAmounts.data[$x], $this.$iterations26)) + 0.75, 0.0);
        var$13 = var$8 ? (-4.593754331106985E37) : (-4.60022594095127E37);
        $this.$renderer26.$color(var$13);
        $this.$renderer26.$vertex(var$12, Long_toNumber(Long_div($this.$badAmounts.data[$x], $this.$iterations26)) - 0.75, 0.0);
        $this.$renderer26.$color(var$13);
        $this.$renderer26.$vertex(var$12, Long_toNumber(Long_div($this.$badAmounts.data[$x], $this.$iterations26)) + 0.75, 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer26.$color((-6.221923240859403E37));
        var$3 = $this.$renderer26;
        var$15 = $j;
        var$3.$vertex(0.0, var$15, 0.0);
        $this.$renderer26.$color((-6.221923240859403E37));
        $this.$renderer26.$vertex(10.0, var$15, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer26.$end();
    $this.$batch27.$setProjectionMatrix($camera.$combined);
    $this.$batch27.$begin0();
    var$3 = $this.$font28;
    var$16 = $this.$batch27;
    var$6 = $rt_createArray(jl_Object, 4);
    var$17 = var$6.data;
    var$18 = cgt_DistributorDemo_a;
    var$17[0] = jl_Double_valueOf(var$18);
    var$17[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$17[2] = jl_Double_valueOf($this.$dist21.$getMedian());
    var$17[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$16, cgt_Stringf_format($rt_s(1181), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font28.$draw($this.$batch27, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font28.$draw($this.$batch27, $rt_s(1194), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch27.$end();
}
function cgt_ArcsineAlternateScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport26.$update0($width, $height, 1);
    $this.$viewport26.$apply(1);
}
function cgt_ParetoScreen() {
    var a = this; cbg_ScreenAdapter.call(a);
    a.$dist22 = null;
    a.$batch28 = null;
    a.$renderer27 = null;
    a.$amounts27 = null;
    a.$iterations27 = Long_ZERO;
    a.$font29 = null;
    a.$viewport27 = null;
    a.$mainGame27 = null;
}
function cgt_ParetoScreen__init_(var_0) {
    var var_1 = new cgt_ParetoScreen();
    cgt_ParetoScreen__init_0(var_1, var_0);
    return var_1;
}
function cgt_ParetoScreen_show($this) {
    var var$1, var$2, $$je;
    $this.$font29 = $this.$mainGame27.$font0;
    a: {
        try {
            var$1 = new cgtrd_ParetoDistribution;
            var$2 = $this.$mainGame27.$random0;
            cgt_DistributorDemo_$callClinit();
            cgtrd_ParetoDistribution__init_0(var$1, var$2, cgt_DistributorDemo_a, cgt_DistributorDemo_b);
            $this.$dist22 = var$1;
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_IllegalArgumentException) {
            } else {
                throw $$e;
            }
        }
        $this.$dist22 = cgtrd_ParetoDistribution__init_($this.$mainGame27.$random0, 1.0, 1.0);
    }
    $this.$batch28 = $this.$mainGame27.$batch0;
    $this.$viewport27 = cbguv_ScreenViewport__init_();
    $this.$renderer27 = cbggg_ImmediateModeRenderer20__init_(1536, 0, 1, 0);
    ju_Arrays_fill($this.$amounts27, Long_ZERO);
    $this.$iterations27 = Long_ZERO;
}
function cgt_ParetoScreen__init_0($this, $main) {
    cbg_ScreenAdapter__init_0($this);
    $this.$amounts27 = $rt_createLongArray(512);
    $this.$iterations27 = Long_ZERO;
    $this.$mainGame27 = $main;
}
function cgt_ParetoScreen_render($this, $delta) {
    var $camera, var$3, $i, $m, var$6, $x, $color, var$9, $j, var$11, var$12, var$13, var$14;
    if (cbg_Gdx_input.$isKeyJustPressed(71)) {
        $this.$mainGame27.$previousScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(72)) {
        $this.$mainGame27.$nextScreen();
        return;
    }
    if (cbg_Gdx_input.$isKeyJustPressed(111)) {
        cbg_Gdx_app.$exit();
        return;
    }
    cbgu_ScreenUtils_clear(1.0, 1.0, 1.0, 1.0);
    $camera = $this.$viewport27.$getCamera();
    $camera.$update();
    if (cbg_Gdx_input.$isKeyPressed(29)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_a = cgt_DistributorDemo_a + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts27, Long_ZERO);
        $this.$iterations27 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(30)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_b = cgt_DistributorDemo_b + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts27, Long_ZERO);
        $this.$iterations27 = Long_ZERO;
    }
    if (cbg_Gdx_input.$isKeyPressed(31)) {
        cgt_DistributorDemo_$callClinit();
        cgt_DistributorDemo_c = cgt_DistributorDemo_c + (!cbgssu_UIUtils_shift() ? (-0.5) : 0.5) * cbg_Gdx_graphics.$getDeltaTime();
        ju_Arrays_fill($this.$amounts27, Long_ZERO);
        $this.$iterations27 = Long_ZERO;
    }
    $this.$iterations27 = Long_add($this.$iterations27, Long_fromInt(1));
    var$3 = $this.$dist22;
    cgt_DistributorDemo_$callClinit();
    var$3.$setParameters(cgt_DistributorDemo_a, cgt_DistributorDemo_b, cgt_DistributorDemo_c);
    $i = 0;
    while ($i < 65536) {
        $m = $this.$dist22.$nextDouble() * 128.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$6 = $this.$amounts27.data;
            var$6[$m] = Long_add(var$6[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    $this.$renderer27.$begin($camera.$combined, 1);
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        $this.$renderer27.$color($color);
        var$3 = $this.$renderer27;
        var$9 = $x;
        var$3.$vertex(var$9, 0.0, 0.0);
        $this.$renderer27.$color($color);
        $this.$renderer27.$vertex(var$9, Long_toNumber(Long_div($this.$amounts27.data[$x], $this.$iterations27)), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        $this.$renderer27.$color((-6.221923240859403E37));
        var$3 = $this.$renderer27;
        var$11 = $j;
        var$3.$vertex(0.0, var$11, 0.0);
        $this.$renderer27.$color((-6.221923240859403E37));
        $this.$renderer27.$vertex(10.0, var$11, 0.0);
        $j = $j + 32 | 0;
    }
    $this.$renderer27.$end();
    $this.$batch28.$setProjectionMatrix($camera.$combined);
    $this.$batch28.$begin0();
    var$3 = $this.$font29;
    var$12 = $this.$batch28;
    var$6 = $rt_createArray(jl_Object, 4);
    var$13 = var$6.data;
    var$14 = cgt_DistributorDemo_a;
    var$13[0] = jl_Double_valueOf(var$14);
    var$13[1] = jl_Double_valueOf(cgt_DistributorDemo_b);
    var$13[2] = jl_Double_valueOf($this.$dist22.$getMedian());
    var$13[3] = jl_Integer_valueOf(cbg_Gdx_graphics.$getFramesPerSecond());
    var$3.$draw(var$12, cgt_Stringf_format($rt_s(1195), var$6), 64.0, 522.0, 384.0, 1, 1);
    $this.$font29.$draw($this.$batch28, $rt_s(51), 64.0, 494.0, 384.0, 1, 1);
    $this.$font29.$draw($this.$batch28, $rt_s(52), 64.0, 468.0, 384.0, 1, 1);
    $this.$batch28.$end();
}
function cgt_ParetoScreen_resize($this, $width, $height) {
    cbg_ScreenAdapter_resize($this, $width, $height);
    $this.$viewport27.$update0($width, $height, 1);
    $this.$viewport27.$apply(1);
}
function ju_Arrays$ArrayAsList() {
    ju_AbstractList.call(this);
    this.$array8 = null;
}
function ju_Arrays$ArrayAsList__init_(var_0) {
    var var_1 = new ju_Arrays$ArrayAsList();
    ju_Arrays$ArrayAsList__init_0(var_1, var_0);
    return var_1;
}
function ju_Arrays$ArrayAsList__init_0($this, $array) {
    ju_AbstractList__init_($this);
    $this.$array8 = $array;
}
$rt_packages([-1, "com", 0, "github", 1, "tommyettinger", 2, "random", 1, "xpenatan", 4, "gdx", 5, "backends", 6, "teavm", 7, "preloader", 0, "badlogic", 9, "gdx", 10, "utils", 11, "reflect", 10, "scenes", 13, "scene2d", 14, "ui", 10, "graphics", 16, "glutils", 16, "g2d", -1, "java", 19, "util", 20, "regex", 19, "nio", 22, "charset", 19, "io", 19, "lang", 25, "reflect", -1, "org", 27, "teavm", 28, "classlib", 29, "impl", 30, "unicode"
]);
$rt_metadata([jl_Object, "Object", 25, 0, [], 0, 3, 0, 0, ["$isEmptyMonitor", $rt_wrapFunction0(jl_Object_isEmptyMonitor), "$getClass0", $rt_wrapFunction0(jl_Object_getClass), "$hashCode0", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString), "$identity", $rt_wrapFunction0(jl_Object_identity), "$clone", $rt_wrapFunction0(jl_Object_clone), "$notifyAll", $rt_wrapFunction0(jl_Object_notifyAll)],
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCharClass__init_), "$getValue", $rt_wrapFunction1(jur_AbstractCharClass$LazyCharClass_getValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtp_Preloader$3$1$1, "Preloader$3$1$1", 8, jl_Object, [jl_Runnable], 0, 0, 0, 0, ["$_init_134", $rt_wrapFunction1(cgxgbtp_Preloader$3$1$1__init_0), "$run", $rt_wrapFunction0(cgxgbtp_Preloader$3$1$1_run)],
cbgss_Actor, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Cullable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Group, 0, cbgss_Actor, [cbgssu_Cullable], 0, 3, 0, cbgss_Group_$callClinit, 0,
cbgssu_Layout, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_WidgetGroup, 0, cbgss_Group, [cbgssu_Layout], 0, 3, 0, 0, 0,
cbgssu_Table, 0, cbgssu_WidgetGroup, [], 0, 3, 0, cbgssu_Table_$callClinit, 0,
cbgm_Interpolation, 0, jl_Object, [], 1, 3, 0, cbgm_Interpolation_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation__init_)],
cbgm_Interpolation$BounceOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgm_Interpolation$BounceOut__init_0)],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction2(jnci_BufferedEncoder$Controller__init_0), "$hasMoreInput0", $rt_wrapFunction0(jnci_BufferedEncoder$Controller_hasMoreInput), "$hasMoreInput", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_hasMoreInput0), "$hasMoreOutput", $rt_wrapFunction0(jnci_BufferedEncoder$Controller_hasMoreOutput), "$hasMoreOutput0", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_hasMoreOutput0), "$setInPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setInPosition),
"$setOutPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setOutPosition)],
cbgggmd_ModelTexture, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgur_ClassReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgssu_Drawable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_BaseDrawable, 0, jl_Object, [cbgssu_Drawable], 0, 3, 0, 0, 0,
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Number__init_)],
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Integer_$callClinit, ["$_init_4", $rt_wrapFunction1(jl_Integer__init_0), "$intValue", $rt_wrapFunction0(jl_Integer_intValue), "$longValue", $rt_wrapFunction0(jl_Integer_longValue), "$doubleValue", $rt_wrapFunction0(jl_Integer_doubleValue), "$toString", $rt_wrapFunction0(jl_Integer_toString1), "$hashCode0", $rt_wrapFunction0(jl_Integer_hashCode0), "$equals", $rt_wrapFunction1(jl_Integer_equals)],
cbgssu_SplitPane$SplitPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Json$Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ResourceData$Configurable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleControllerComponent, 0, jl_Object, [cbgu_Disposable, cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 1, 3, 0, 0, 0,
cbgggpi_Influencer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_10", $rt_wrapFunction4(jnc_CharsetEncoder__init_), "$_init_12", $rt_wrapFunction3(jnc_CharsetEncoder__init_0), "$onMalformedInput", $rt_wrapFunction1(jnc_CharsetEncoder_onMalformedInput), "$implOnMalformedInput", $rt_wrapFunction1(jnc_CharsetEncoder_implOnMalformedInput), "$onUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetEncoder_onUnmappableCharacter), "$implOnUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetEncoder_implOnUnmappableCharacter),
"$encode", $rt_wrapFunction3(jnc_CharsetEncoder_encode), "$encode0", $rt_wrapFunction1(jnc_CharsetEncoder_encode0), "$flush", $rt_wrapFunction1(jnc_CharsetEncoder_flush), "$implFlush", $rt_wrapFunction1(jnc_CharsetEncoder_implFlush), "$reset", $rt_wrapFunction0(jnc_CharsetEncoder_reset), "$implReset", $rt_wrapFunction0(jnc_CharsetEncoder_implReset)],
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, ["$_init_12", $rt_wrapFunction3(jnci_BufferedEncoder__init_), "$encodeLoop", $rt_wrapFunction2(jnci_BufferedEncoder_encodeLoop)],
jnci_UTF16Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_34", $rt_wrapFunction3(jnci_UTF16Encoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
cbgssu_UIUtils, 0, jl_Object, [], 4, 3, 0, cbgssu_UIUtils_$callClinit, 0,
cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Action, 0, jl_Object, [cbgu_Pool$Poolable], 1, 3, 0, 0, 0,
cbgssa_DelegateAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_TimeScaleAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtd_EventListenerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl$5$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_62", $rt_wrapFunction4(cgxgbtp_AssetDownloadImpl$5$1__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5$1_handleEvent$exported$0)],
jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$_init_14", $rt_wrapFunction2(jl_Enum__init_), "$ordinal0", $rt_wrapFunction0(jl_Enum_ordinal), "$toString", $rt_wrapFunction0(jl_Enum_toString)],
cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, cbg_Application$ApplicationType_$callClinit, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, jur_AbstractSet_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractSet__init_), "$_init_15", $rt_wrapFunction1(jur_AbstractSet__init_0), "$find", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$setType", $rt_wrapFunction1(jur_AbstractSet_setType), "$getType1", $rt_wrapFunction0(jur_AbstractSet_getType), "$getQualifiedName", $rt_wrapFunction0(jur_AbstractSet_getQualifiedName), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString),
"$getNext", $rt_wrapFunction0(jur_AbstractSet_getNext), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_15", $rt_wrapFunction1(jur_LeafSet__init_), "$_init_0", $rt_wrapFunction0(jur_LeafSet__init_0), "$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount0", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_CISequenceSet, "CISequenceSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_152", $rt_wrapFunction1(jur_CISequenceSet__init_0), "$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_CISequenceSet_getName)],
jl_CharSequence, "CharSequence", 25, jl_Object, [], 3, 3, 0, 0, 0]);
$rt_metadata([jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$fillInStackTrace", $rt_wrapFunction0(jl_Throwable_fillInStackTrace), "$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage), "$getLocalizedMessage", $rt_wrapFunction0(jl_Throwable_getLocalizedMessage), "$getCause", $rt_wrapFunction0(jl_Throwable_getCause), "$printStackTrace0", $rt_wrapFunction0(jl_Throwable_printStackTrace), "$printStackTrace", $rt_wrapFunction1(jl_Throwable_printStackTrace0)],
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction2(jl_Error__init_0), "$_init_", $rt_wrapFunction1(jl_Error__init_2), "$_init_11", $rt_wrapFunction1(jl_Error__init_4)],
jl_LinkageError, 0, jl_Error, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_LinkageError__init_0)],
cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
cbgssu_Skin$TintedDrawable, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$SwingOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_7", $rt_wrapFunction1(cbgm_Interpolation$SwingOut__init_0)],
cgtrd_Distribution, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtrd_Distribution__init_)],
cgtrd_TriangularDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_76", $rt_wrapFunction4(cgtrd_TriangularDistribution__init_0), "$getMedian", $rt_wrapFunction0(cgtrd_TriangularDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_TriangularDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_TriangularDistribution_nextDouble)],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_27", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategory__init_0), "$_init_28", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategory__init_2), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
cbgm_Interpolation$Exp, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(cbgm_Interpolation$Exp__init_0)],
cbgm_FloatCounter, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
jur_FSet, "FSet", 21, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$_init_4", $rt_wrapFunction1(jur_FSet__init_0), "$matches", $rt_wrapFunction3(jur_FSet_matches), "$getGroupIndex", $rt_wrapFunction0(jur_FSet_getGroupIndex), "$getName", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_BehindFSet, "BehindFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_BehindFSet__init_0), "$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName", $rt_wrapFunction0(jur_BehindFSet_getName)],
cgtrd_KnobDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_76", $rt_wrapFunction4(cgtrd_KnobDistribution__init_0), "$getMedian", $rt_wrapFunction0(cgtrd_KnobDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_KnobDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_KnobDistribution_nextDouble)],
cbgm_Path, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Bezier, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
jur_JointSet, "JointSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_JointSet__init_0), "$_init_31", $rt_wrapFunction2(jur_JointSet__init_2), "$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName", $rt_wrapFunction0(jur_JointSet_getName), "$first", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_LowHighSurrogateRangeSet, "LowHighSurrogateRangeSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_114", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet__init_0), "$setNext", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet_setNext), "$matches", $rt_wrapFunction3(jur_LowHighSurrogateRangeSet_matches), "$getName", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)],
cbgmc_OrientedBoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_OrientedBoundingBox_$callClinit, 0,
jnci_AsciiEncoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_38", $rt_wrapFunction1(jnci_AsciiEncoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiEncoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cbgssu_TextField$OnscreenKeyboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jlr_AccessibleObject__init_0), "$setAccessible", $rt_wrapFunction1(jlr_AccessibleObject_setAccessible)],
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Constructor, "Constructor", 26, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0, ["$_init_54", function(var_1, var_2, var_3, var_4, var_5, var_6) { jlr_Constructor__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getDeclaringClass", $rt_wrapFunction0(jlr_Constructor_getDeclaringClass), "$getModifiers0", $rt_wrapFunction0(jlr_Constructor_getModifiers), "$getParameterTypes", $rt_wrapFunction0(jlr_Constructor_getParameterTypes), "$toString", $rt_wrapFunction0(jlr_Constructor_toString), "$newInstance0",
$rt_wrapFunction1(jlr_Constructor_newInstance)],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_QuantifierSet__init_), "$getInnerSet", $rt_wrapFunction0(jur_QuantifierSet_getInnerSet), "$first", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_GroupQuantifierSet, "GroupQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_GroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
ju_Random, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Random__init_0), "$_init_18", $rt_wrapFunction1(ju_Random__init_2), "$setSeed", $rt_wrapFunction1(ju_Random_setSeed), "$next1", $rt_wrapFunction1(ju_Random_next), "$nextInt", $rt_wrapFunction0(ju_Random_nextInt), "$nextLong", $rt_wrapFunction0(ju_Random_nextLong), "$nextFloat", $rt_wrapFunction0(ju_Random_nextFloat), "$nextDouble", $rt_wrapFunction0(ju_Random_nextDouble), "$nextGaussian0", $rt_wrapFunction0(ju_Random_nextGaussian)],
cgtr_EnhancedRandom, 0, ju_Random, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_EnhancedRandom__init_), "$_init_18", $rt_wrapFunction1(cgtr_EnhancedRandom__init_0), "$next1", $rt_wrapFunction1(cgtr_EnhancedRandom_next), "$nextFloat", $rt_wrapFunction0(cgtr_EnhancedRandom_nextFloat), "$nextDouble", $rt_wrapFunction0(cgtr_EnhancedRandom_nextDouble), "$nextInclusiveDouble0", $rt_wrapFunction0(cgtr_EnhancedRandom_nextInclusiveDouble), "$nextInclusiveDouble", $rt_wrapFunction2(cgtr_EnhancedRandom_nextInclusiveDouble0),
"$nextExclusiveDouble", $rt_wrapFunction0(cgtr_EnhancedRandom_nextExclusiveDouble), "$nextExclusiveSignedDouble", $rt_wrapFunction0(cgtr_EnhancedRandom_nextExclusiveSignedDouble), "$nextExclusiveFloat", $rt_wrapFunction0(cgtr_EnhancedRandom_nextExclusiveFloat), "$nextGaussian0", $rt_wrapFunction0(cgtr_EnhancedRandom_nextGaussian), "$nextGaussian", $rt_wrapFunction2(cgtr_EnhancedRandom_nextGaussian0), "$nextTriangular0", $rt_wrapFunction2(cgtr_EnhancedRandom_nextTriangular), "$nextTriangular", $rt_wrapFunction3(cgtr_EnhancedRandom_nextTriangular0)],
cgtr_LowChangeQuasiRandom, "LowChangeQuasiRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_LowChangeQuasiRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_LowChangeQuasiRandom_nextLong)],
cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgf_FileHandle__init_0)],
cgxgbt_TeaFileHandle, "TeaFileHandle", 7, cbgf_FileHandle, [], 0, 3, 0, 0, ["$_init_19", $rt_wrapFunction3(cgxgbt_TeaFileHandle__init_0), "$path", $rt_wrapFunction0(cgxgbt_TeaFileHandle_path), "$name1", $rt_wrapFunction0(cgxgbt_TeaFileHandle_name), "$nameWithoutExtension", $rt_wrapFunction0(cgxgbt_TeaFileHandle_nameWithoutExtension), "$type3", $rt_wrapFunction0(cgxgbt_TeaFileHandle_type), "$read4", $rt_wrapFunction0(cgxgbt_TeaFileHandle_read), "$child", $rt_wrapFunction1(cgxgbt_TeaFileHandle_child), "$parent",
$rt_wrapFunction0(cgxgbt_TeaFileHandle_parent), "$toString", $rt_wrapFunction0(cgxgbt_TeaFileHandle_toString)],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_AbstractStringBuilder__init_1), "$_init_4", $rt_wrapFunction1(jl_AbstractStringBuilder__init_2), "$append23", $rt_wrapFunction1(jl_AbstractStringBuilder_append), "$append6", $rt_wrapFunction1(jl_AbstractStringBuilder_append0), "$insert0", $rt_wrapFunction2(jl_AbstractStringBuilder_insert), "$append24", $rt_wrapFunction1(jl_AbstractStringBuilder_append1), "$append3", $rt_wrapFunction2(jl_AbstractStringBuilder_append2),
"$insert1", $rt_wrapFunction3(jl_AbstractStringBuilder_insert0), "$append25", $rt_wrapFunction1(jl_AbstractStringBuilder_append3), "$insert2", $rt_wrapFunction2(jl_AbstractStringBuilder_insert1), "$insert3", $rt_wrapFunction3(jl_AbstractStringBuilder_insert2), "$append26", $rt_wrapFunction1(jl_AbstractStringBuilder_append4), "$insert4", $rt_wrapFunction2(jl_AbstractStringBuilder_insert3), "$append27", $rt_wrapFunction1(jl_AbstractStringBuilder_append5), "$insert5", $rt_wrapFunction2(jl_AbstractStringBuilder_insert4),
"$append7", $rt_wrapFunction1(jl_AbstractStringBuilder_append6), "$insert6", $rt_wrapFunction2(jl_AbstractStringBuilder_insert5), "$insert", $rt_wrapFunction2(jl_AbstractStringBuilder_insert6), "$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString), "$length", $rt_wrapFunction0(jl_AbstractStringBuilder_length), "$charAt", $rt_wrapFunction1(jl_AbstractStringBuilder_charAt), "$append4", $rt_wrapFunction3(jl_AbstractStringBuilder_append7),
"$insert7", $rt_wrapFunction4(jl_AbstractStringBuilder_insert7), "$append9", $rt_wrapFunction1(jl_AbstractStringBuilder_append8), "$append5", $rt_wrapFunction3(jl_AbstractStringBuilder_append9), "$insert8", $rt_wrapFunction4(jl_AbstractStringBuilder_insert8), "$append8", $rt_wrapFunction1(jl_AbstractStringBuilder_append10), "$subSequence", $rt_wrapFunction2(jl_AbstractStringBuilder_subSequence), "$getChars", $rt_wrapFunction4(jl_AbstractStringBuilder_getChars), "$setLength", $rt_wrapFunction1(jl_AbstractStringBuilder_setLength),
"$deleteCharAt0", $rt_wrapFunction1(jl_AbstractStringBuilder_deleteCharAt), "$delete0", $rt_wrapFunction2(jl_AbstractStringBuilder_delete), "$substring0", $rt_wrapFunction2(jl_AbstractStringBuilder_substring)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_StringBuffer__init_0), "$append30", $rt_wrapFunction1(jl_StringBuffer_append), "$append21", $rt_wrapFunction1(jl_StringBuffer_append0), "$append10", $rt_wrapFunction3(jl_StringBuffer_append1), "$append22", $rt_wrapFunction1(jl_StringBuffer_append2), "$append11", $rt_wrapFunction3(jl_StringBuffer_append3), "$append29", $rt_wrapFunction1(jl_StringBuffer_append4), "$insert10", $rt_wrapFunction4(jl_StringBuffer_insert),
"$insert9", $rt_wrapFunction4(jl_StringBuffer_insert0), "$insert11", $rt_wrapFunction2(jl_StringBuffer_insert1), "$insert12", $rt_wrapFunction2(jl_StringBuffer_insert2), "$insert8", $rt_wrapFunction4(jl_StringBuffer_insert3), "$append5", $rt_wrapFunction3(jl_StringBuffer_append5), "$insert7", $rt_wrapFunction4(jl_StringBuffer_insert4), "$append4", $rt_wrapFunction3(jl_StringBuffer_append6), "$charAt", $rt_wrapFunction1(jl_StringBuffer_charAt), "$length", $rt_wrapFunction0(jl_StringBuffer_length), "$toString",
$rt_wrapFunction0(jl_StringBuffer_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert6", $rt_wrapFunction2(jl_StringBuffer_insert5), "$insert0", $rt_wrapFunction2(jl_StringBuffer_insert6)],
cbg_Screen, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_ScreenAdapter, 0, jl_Object, [cbg_Screen], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbg_ScreenAdapter__init_0), "$resize", $rt_wrapFunction2(cbg_ScreenAdapter_resize), "$hide", $rt_wrapFunction0(cbg_ScreenAdapter_hide), "$pause", $rt_wrapFunction0(cbg_ScreenAdapter_pause), "$resume", $rt_wrapFunction0(cbg_ScreenAdapter_resume)],
cgt_KumaraswamyScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_KumaraswamyScreen_show), "$_init_118", $rt_wrapFunction1(cgt_KumaraswamyScreen__init_0), "$render0", $rt_wrapFunction1(cgt_KumaraswamyScreen_render), "$resize", $rt_wrapFunction2(cgt_KumaraswamyScreen_resize)],
cbgssu_DragAndDrop, 0, jl_Object, [], 0, 3, 0, cbgssu_DragAndDrop_$callClinit, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(jn_Buffer__init_), "$capacity0", $rt_wrapFunction0(jn_Buffer_capacity), "$position0", $rt_wrapFunction0(jn_Buffer_position), "$position3", $rt_wrapFunction1(jn_Buffer_position0), "$limit2", $rt_wrapFunction0(jn_Buffer_limit), "$limit0", $rt_wrapFunction1(jn_Buffer_limit0), "$clear1", $rt_wrapFunction0(jn_Buffer_clear), "$flip0", $rt_wrapFunction0(jn_Buffer_flip), "$remaining", $rt_wrapFunction0(jn_Buffer_remaining), "$hasRemaining", $rt_wrapFunction0(jn_Buffer_hasRemaining)],
cbgggmd_ModelData, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgtrd_ErlangDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_175", $rt_wrapFunction3(cgtrd_ErlangDistribution__init_0), "$setParameters", $rt_wrapFunction3(cgtrd_ErlangDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_ErlangDistribution_nextDouble)],
cbgssu_Container, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SpecialToken__init_)],
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, jur_AbstractCharClass_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass__init_), "$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$hasLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_hasLowHighSurrogates), "$mayContainSupplCodepoints2", $rt_wrapFunction0(jur_AbstractCharClass_mayContainSupplCodepoints), "$getInstance", $rt_wrapFunction0(jur_AbstractCharClass_getInstance),
"$getSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getSurrogates), "$getWithoutSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getWithoutSurrogates), "$hasUCI0", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI), "$setNegative", $rt_wrapFunction1(jur_AbstractCharClass_setNegative), "$isNegative", $rt_wrapFunction0(jur_AbstractCharClass_isNegative)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_149", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
cbgggpv_ParticleValue, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggpv_SpawnShapeValue, 0, cbgggpv_ParticleValue, [cbgggp_ResourceData$Configurable, cbgu_Json$Serializable], 1, 3, 0, 0, 0]);
$rt_metadata([cbgggpv_PrimitiveSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, cbgggpv_PrimitiveSpawnShapeValue_$callClinit, 0,
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$PredefinedCharacterClasses__init_0), "$getObject", $rt_wrapFunction1(jur_AbstractCharClass$PredefinedCharacterClasses_getObject)],
cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgmc_BoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_BoundingBox_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgmc_BoundingBox__init_0), "$set2", $rt_wrapFunction2(cbgmc_BoundingBox_set), "$update", $rt_wrapFunction0(cbgmc_BoundingBox_update), "$clr", $rt_wrapFunction0(cbgmc_BoundingBox_clr)],
cgtr_TupleQuasiRandom, "TupleQuasiRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_18", $rt_wrapFunction1(cgtr_TupleQuasiRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_TupleQuasiRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_TupleQuasiRandom_next), "$nextExclusiveDouble", $rt_wrapFunction0(cgtr_TupleQuasiRandom_nextExclusiveDouble), "$nextExclusiveSignedDouble", $rt_wrapFunction0(cgtr_TupleQuasiRandom_nextExclusiveSignedDouble), "$nextExclusiveFloat", $rt_wrapFunction0(cgtr_TupleQuasiRandom_nextExclusiveFloat),
"$nextGaussian0", $rt_wrapFunction0(cgtr_TupleQuasiRandom_nextGaussian)],
cbgggpi_DynamicsModifier, 0, cbgggpi_Influencer, [], 1, 3, 0, cbgggpi_DynamicsModifier_$callClinit, 0,
cbgggpi_DynamicsModifier$Strength, 0, cbgggpi_DynamicsModifier, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Rotational2D, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
cbgm_Intersector, 0, jl_Object, [], 4, 3, 0, cbgm_Intersector_$callClinit, 0,
cgtr_LaserRandom, "LaserRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_LaserRandom__init_0), "$next1", $rt_wrapFunction1(cgtr_LaserRandom_next), "$nextLong", $rt_wrapFunction0(cgtr_LaserRandom_nextLong), "$nextFloat", $rt_wrapFunction0(cgtr_LaserRandom_nextFloat), "$nextDouble", $rt_wrapFunction0(cgtr_LaserRandom_nextDouble), "$nextInclusiveDouble0", $rt_wrapFunction0(cgtr_LaserRandom_nextInclusiveDouble), "$nextInclusiveDouble", $rt_wrapFunction2(cgtr_LaserRandom_nextInclusiveDouble0),
"$nextGaussian0", $rt_wrapFunction0(cgtr_LaserRandom_nextGaussian), "$nextTriangular0", $rt_wrapFunction2(cgtr_LaserRandom_nextTriangular), "$nextTriangular", $rt_wrapFunction3(cgtr_LaserRandom_nextTriangular0)],
cbgm_MapObject, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgmo_PolylineMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$1, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$1__init_0)],
cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Interpolation$2, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$2__init_0)],
cbgggpr_ParticleControllerRenderer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
cbgggpr_BillboardRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgu_Timer$Task, 0, jl_Object, [jl_Runnable], 1, 3, 0, 0, 0,
cbgssu_TextField$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$5, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$5__init_0)],
jur_AheadFSet, "AheadFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AheadFSet__init_0), "$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName", $rt_wrapFunction0(jur_AheadFSet_getName)],
cbgm_Interpolation$Pow, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgm_Interpolation$Pow__init_0)],
cbgm_Interpolation$6, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$6__init_0)],
cbgm_Interpolation$3, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$3__init_0)],
cbgmo_TextureMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmto_TiledMapTileMapObject, 0, cbgmo_TextureMapObject, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$4, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$4__init_0)],
cbgm_Interpolation$9, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$9__init_0)],
cbgm_Interpolation$7, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$7__init_0)],
cbgm_Interpolation$8, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$8__init_0)],
jur_NonCapJointSet, "NonCapJointSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_NonCapJointSet__init_0), "$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, "AtomicJointSet", 21, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_AtomicJointSet__init_0), "$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
jur_PositiveLookAhead, "PositiveLookAhead", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_PositiveLookAhead__init_0), "$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
jur_NegativeLookAhead, "NegativeLookAhead", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_NegativeLookAhead__init_0), "$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookAhead_getName)],
cbgssu_Value, 0, jl_Object, [], 1, 3, 0, cbgssu_Value_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgssu_Value__init_)],
cbgssu_Value$10, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgggpi_DynamicsModifier$Angular, 0, cbgggpi_DynamicsModifier$Strength, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Rotational3D, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Exception__init_0), "$_init_9", $rt_wrapFunction2(jl_Exception__init_2), "$_init_", $rt_wrapFunction1(jl_Exception__init_4)],
jl_RuntimeException, "RuntimeException", 25, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_RuntimeException__init_1), "$_init_9", $rt_wrapFunction2(jl_RuntimeException__init_3), "$_init_", $rt_wrapFunction1(jl_RuntimeException__init_4)],
jl_UnsupportedOperationException, "UnsupportedOperationException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_UnsupportedOperationException__init_0)],
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 22, jl_UnsupportedOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_ReadOnlyBufferException__init_0)],
cgxgbt_TeaPermissions$TeaPermissionResult, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard$ClipboardWriteHandler, 0, jl_Object, [cgxgbt_TeaPermissions$TeaPermissionResult], 0, 0, 0, 0, ["$granted", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted), "$denied", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied), "$prompt", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt), "$granted$exported$0", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0), "$prompt$exported$1", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1),
"$denied$exported$2", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2)],
cbgss_EventListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_InputListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, cbgss_InputListener_$callClinit, 0,
cbgssu_ClickListener, 0, cbgss_InputListener, [], 0, 3, 0, cbgssu_ClickListener_$callClinit, 0,
cbgssu_TextField$TextFieldClickListener, 0, cbgssu_ClickListener, [], 0, 3, 0, 0, 0]);
$rt_metadata([jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgggpv_RangedNumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, ["$_init_123", $rt_wrapFunction1(cgxgbt_TeaFiles__init_0), "$getFileHandle", $rt_wrapFunction2(cgxgbt_TeaFiles_getFileHandle), "$internal", $rt_wrapFunction1(cgxgbt_TeaFiles_internal)],
cbgssu_Widget, 0, cbgss_Actor, [cbgssu_Layout], 0, 3, 0, 0, 0,
cbgssu_Touchpad, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
jl_IncompatibleClassChangeError, 0, jl_LinkageError, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_IncompatibleClassChangeError__init_0)],
jl_NoSuchFieldError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NoSuchFieldError__init_0)],
cbgssu_TransformDrawable, 0, jl_Object, [cbgssu_Drawable], 3, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
cbgssu_TextArea$TextAreaListener, 0, cbgssu_TextField$TextFieldClickListener, [], 0, 3, 0, 0, 0,
cbgssu_Window$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cgtd_TrigTools, 0, jl_Object, [], 4, 3, 0, cgtd_TrigTools_$callClinit, 0,
cbgssu_Window$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Tree, 0, cbgssu_WidgetGroup, [], 0, 3, 0, cbgssu_Tree_$callClinit, 0,
otji_JS, 0, jl_Object, [], 4, 0, 0, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_79", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, ["$_init_33", $rt_wrapFunction2(jnc_Charset__init_), "$name1", $rt_wrapFunction0(jnc_Charset_name), "$encode0", $rt_wrapFunction1(jnc_Charset_encode)],
jnci_UTF16Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$_init_144", $rt_wrapFunction3(jnci_UTF16Charset__init_0), "$newEncoder", $rt_wrapFunction0(jnci_UTF16Charset_newEncoder)],
cbgssu_ProgressBar$ProgressBarStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Slider$SliderStyle, 0, cbgssu_ProgressBar$ProgressBarStyle, [], 0, 3, 0, 0, 0,
cbgssu_Window$1, 0, cbgssu_Table, [], 0, 0, 0, 0, 0,
cbgggpi_RegionInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_1", $rt_wrapFunction4(jl_Object$monitorEnterWait$lambda$_6_0__init_0), "$run", $rt_wrapFunction0(jl_Object$monitorEnterWait$lambda$_6_0_run)],
cbgssu_Dialog$4, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_FocusListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
cbgssu_Dialog$3, 0, cbgssu_FocusListener, [], 0, 0, 0, 0, 0,
cbgssu_ChangeListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
cbgssu_Dialog$2, 0, cbgssu_ChangeListener, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
cbgssu_Dialog$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
jur_PositiveLookBehind, "PositiveLookBehind", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_PositiveLookBehind__init_0), "$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
jnci_AsciiCharset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_AsciiCharset__init_0), "$newEncoder", $rt_wrapFunction0(jnci_AsciiCharset_newEncoder)],
cbgu_StringBuilder, 0, jl_Object, [jl_Appendable, jl_CharSequence], 0, 3, 0, cbgu_StringBuilder_$callClinit, ["$_init_4", $rt_wrapFunction1(cbgu_StringBuilder__init_0), "$appendNull", $rt_wrapFunction0(cbgu_StringBuilder_appendNull), "$append00", $rt_wrapFunction1(cbgu_StringBuilder_append0), "$append01", $rt_wrapFunction1(cbgu_StringBuilder_append00), "$toString", $rt_wrapFunction0(cbgu_StringBuilder_toString), "$append14", $rt_wrapFunction1(cbgu_StringBuilder_append), "$append31", $rt_wrapFunction1(cbgu_StringBuilder_append1),
"$append12", $rt_wrapFunction2(cbgu_StringBuilder_append2), "$append13", $rt_wrapFunction3(cbgu_StringBuilder_append3), "$append16", $rt_wrapFunction1(cbgu_StringBuilder_append4), "$append17", $rt_wrapFunction1(cbgu_StringBuilder_append5)],
cbgggpi_ParticleControllerFinalizerInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
jl_ArrayStoreException, "ArrayStoreException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ArrayStoreException__init_0)],
cbgm_Matrix4Emu, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4Emu_$callClinit, 0,
cbgggpv_LineSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggp_ResourceData, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, ["$_init_179", function(var_1, var_2, var_3, var_4, var_5, var_6) { jur_MatchResultImpl__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setConsumed", $rt_wrapFunction2(jur_MatchResultImpl_setConsumed), "$getConsumed", $rt_wrapFunction1(jur_MatchResultImpl_getConsumed), "$end1", $rt_wrapFunction0(jur_MatchResultImpl_end), "$end0", $rt_wrapFunction1(jur_MatchResultImpl_end0), "$setStart", $rt_wrapFunction2(jur_MatchResultImpl_setStart),
"$setEnd", $rt_wrapFunction2(jur_MatchResultImpl_setEnd), "$getStart", $rt_wrapFunction1(jur_MatchResultImpl_getStart), "$getEnd", $rt_wrapFunction1(jur_MatchResultImpl_getEnd), "$group", $rt_wrapFunction1(jur_MatchResultImpl_group), "$getGroupNoCheck", $rt_wrapFunction1(jur_MatchResultImpl_getGroupNoCheck), "$start12", $rt_wrapFunction0(jur_MatchResultImpl_start), "$start", $rt_wrapFunction1(jur_MatchResultImpl_start0), "$finalizeMatch", $rt_wrapFunction0(jur_MatchResultImpl_finalizeMatch), "$getEnterCounter",
$rt_wrapFunction1(jur_MatchResultImpl_getEnterCounter), "$setEnterCounter", $rt_wrapFunction2(jur_MatchResultImpl_setEnterCounter), "$setValid", $rt_wrapFunction0(jur_MatchResultImpl_setValid), "$isValid", $rt_wrapFunction0(jur_MatchResultImpl_isValid), "$reset0", $rt_wrapFunction3(jur_MatchResultImpl_reset), "$reset2", $rt_wrapFunction0(jur_MatchResultImpl_reset0), "$setStartIndex", $rt_wrapFunction1(jur_MatchResultImpl_setStartIndex), "$getLeftBound", $rt_wrapFunction0(jur_MatchResultImpl_getLeftBound), "$getRightBound",
$rt_wrapFunction0(jur_MatchResultImpl_getRightBound), "$setMode", $rt_wrapFunction1(jur_MatchResultImpl_setMode), "$mode2", $rt_wrapFunction0(jur_MatchResultImpl_mode), "$useAnchoringBounds", $rt_wrapFunction1(jur_MatchResultImpl_useAnchoringBounds), "$hasAnchoringBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasAnchoringBounds), "$hasTransparentBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasTransparentBounds), "$getPreviousMatchEnd", $rt_wrapFunction0(jur_MatchResultImpl_getPreviousMatchEnd)],
cbgssa_EventAction$1, 0, jl_Object, [cbgss_EventListener], 0, 0, 0, 0, 0,
cbgssu_Button$ButtonStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgmo_EllipseMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbggg_BitmapFont$Glyph, "BitmapFont$Glyph", 18, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_BitmapFont$Glyph__init_0), "$getKerning", $rt_wrapFunction1(cbggg_BitmapFont$Glyph_getKerning), "$setKerning", $rt_wrapFunction2(cbggg_BitmapFont$Glyph_setKerning), "$toString", $rt_wrapFunction0(cbggg_BitmapFont$Glyph_toString)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_47", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, cbgg_GLTexture_$callClinit, ["$_init_26", $rt_wrapFunction2(cbgg_GLTexture__init_), "$bind", $rt_wrapFunction0(cbgg_GLTexture_bind), "$unsafeSetWrap", $rt_wrapFunction3(cbgg_GLTexture_unsafeSetWrap), "$unsafeSetFilter", $rt_wrapFunction3(cbgg_GLTexture_unsafeSetFilter), "$unsafeSetAnisotropicFilter", $rt_wrapFunction2(cbgg_GLTexture_unsafeSetAnisotropicFilter)],
cbgg_Texture, "Texture", 16, cbgg_GLTexture, [], 0, 3, 0, cbgg_Texture_$callClinit, ["$_init_93", $rt_wrapFunction2(cbgg_Texture__init_0), "$_init_40", $rt_wrapFunction3(cbgg_Texture__init_2), "$_init_41", $rt_wrapFunction1(cbgg_Texture__init_4), "$_init_42", $rt_wrapFunction3(cbgg_Texture__init_6), "$load", $rt_wrapFunction1(cbgg_Texture_load), "$getWidth", $rt_wrapFunction0(cbgg_Texture_getWidth), "$getHeight", $rt_wrapFunction0(cbgg_Texture_getHeight), "$toString", $rt_wrapFunction0(cbgg_Texture_toString)],
cbgu_GdxRuntimeException, "GdxRuntimeException", 11, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction2(cbgu_GdxRuntimeException__init_2), "$_init_", $rt_wrapFunction1(cbgu_GdxRuntimeException__init_)],
cbgssu_SplitPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
jur_DecomposedCharSet, "DecomposedCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_135", $rt_wrapFunction2(jur_DecomposedCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$codePointAt", $rt_wrapFunction3(jur_DecomposedCharSet_codePointAt), "$first", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
jl_IllegalArgumentException, "IllegalArgumentException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalArgumentException__init_2), "$_init_", $rt_wrapFunction1(jl_IllegalArgumentException__init_1)],
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 23, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_IllegalCharsetNameException__init_0)],
cbgssu_Tooltip, 0, cbgss_InputListener, [], 0, 3, 0, cbgssu_Tooltip_$callClinit, 0,
cbgggmd_ModelNodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_OutputStream__init_)],
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, ["$_init_43", $rt_wrapFunction1(ji_FilterOutputStream__init_0)],
ji_PrintStream, 0, ji_FilterOutputStream, [], 0, 3, 0, 0, ["$_init_176", $rt_wrapFunction2(ji_PrintStream__init_0), "$write", $rt_wrapFunction3(ji_PrintStream_write), "$print1", $rt_wrapFunction1(ji_PrintStream_print0), "$print", $rt_wrapFunction1(ji_PrintStream_print1), "$println1", $rt_wrapFunction1(ji_PrintStream_println), "$println0", $rt_wrapFunction1(ji_PrintStream_println0), "$println", $rt_wrapFunction0(ji_PrintStream_println1)],
jur_NegativeLookBehind, "NegativeLookBehind", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_31", $rt_wrapFunction2(jur_NegativeLookBehind__init_0), "$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_IntBuffer__init_), "$clear2", $rt_wrapFunction0(jn_IntBuffer_clear), "$clear1", $rt_wrapFunction0(jn_IntBuffer_clear0)],
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_IntBufferImpl__init_), "$get13", $rt_wrapFunction0(jn_IntBufferImpl_get), "$put7", $rt_wrapFunction1(jn_IntBufferImpl_put), "$get11", $rt_wrapFunction1(jn_IntBufferImpl_get0), "$put11", $rt_wrapFunction2(jn_IntBufferImpl_put0), "$isReadOnly", $rt_wrapFunction0(jn_IntBufferImpl_isReadOnly)],
jn_IntBufferOverByteBuffer, 0, jn_IntBufferImpl, [], 1, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_IntBufferOverByteBuffer_readOnly)],
jn_IntBufferOverByteBufferLittleEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferLittleEndian_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverByteBufferLittleEndian_putElement)],
cgxgbtp_Preloader$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_123", $rt_wrapFunction1(cgxgbtp_Preloader$1__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbtp_Preloader$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$1_handleEvent$exported$0)],
cgxgbtp_Preloader$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_123", $rt_wrapFunction1(cgxgbtp_Preloader$2__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbtp_Preloader$2_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$2_handleEvent$exported$0)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
cgxgbtp_Preloader$3, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_124", $rt_wrapFunction3(cgxgbtp_Preloader$3__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbtp_Preloader$3_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$3_handleEvent$exported$0)],
cgxgbt_AssetLoaderListener, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_AssetLoaderListener__init_0), "$onProgress", $rt_wrapFunction1(cgxgbt_AssetLoaderListener_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbt_AssetLoaderListener_onFailure)],
cgxgbtp_Preloader$4, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_125", $rt_wrapFunction3(cgxgbtp_Preloader$4__init_0), "$onProgress", $rt_wrapFunction1(cgxgbtp_Preloader$4_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_Preloader$4_onFailure), "$onSuccess0", $rt_wrapFunction2(cgxgbtp_Preloader$4_onSuccess), "$onSuccess", $rt_wrapFunction2(cgxgbtp_Preloader$4_onSuccess0)],
cgt_DigitalSinSmoothScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_DigitalSinSmoothScreen_show), "$_init_118", $rt_wrapFunction1(cgt_DigitalSinSmoothScreen__init_0), "$render0", $rt_wrapFunction1(cgt_DigitalSinSmoothScreen_render), "$resize", $rt_wrapFunction2(cgt_DigitalSinSmoothScreen_resize)],
cgxgbtp_Preloader$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_126", $rt_wrapFunction2(cgxgbtp_Preloader$5__init_0), "$onProgress", $rt_wrapFunction1(cgxgbtp_Preloader$5_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_Preloader$5_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_Preloader$5_onSuccess)],
cbgg_Color, "Color", 16, jl_Object, [], 0, 3, 0, cbgg_Color_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgg_Color__init_1), "$_init_4", $rt_wrapFunction1(cbgg_Color__init_3), "$_init_3", $rt_wrapFunction4(cbgg_Color__init_4), "$set5", $rt_wrapFunction1(cbgg_Color_set), "$clamp", $rt_wrapFunction0(cbgg_Color_clamp), "$equals", $rt_wrapFunction1(cbgg_Color_equals), "$hashCode0", $rt_wrapFunction0(cbgg_Color_hashCode), "$toFloatBits", $rt_wrapFunction0(cbgg_Color_toFloatBits), "$toIntBits", $rt_wrapFunction0(cbgg_Color_toIntBits),
"$toString", $rt_wrapFunction0(cbgg_Color_toString)],
cgxgbtp_Preloader$7, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_127", $rt_wrapFunction4(cgxgbtp_Preloader$7__init_0), "$onProgress", $rt_wrapFunction1(cgxgbtp_Preloader$7_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_Preloader$7_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_Preloader$7_onSuccess)],
cbgggpr_ParticleControllerRenderData, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgggpr_PointSpriteControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
cbgg_VertexAttribute, "VertexAttribute", 16, jl_Object, [], 4, 3, 0, 0, ["$_init_83", $rt_wrapFunction3(cbgg_VertexAttribute__init_0), "$_init_50", $rt_wrapFunction4(cbgg_VertexAttribute__init_2), "$_init_51", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbgg_VertexAttribute__init_4(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$equals", $rt_wrapFunction1(cbgg_VertexAttribute_equals), "$equals0", $rt_wrapFunction1(cbgg_VertexAttribute_equals0), "$getKey", $rt_wrapFunction0(cbgg_VertexAttribute_getKey),
"$getSizeInBytes", $rt_wrapFunction0(cbgg_VertexAttribute_getSizeInBytes), "$hashCode0", $rt_wrapFunction0(cbgg_VertexAttribute_hashCode)],
cbgssu_DragListener, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
jur_LeafQuantifierSet, "LeafQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_52", $rt_wrapFunction3(jur_LeafQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_155", $rt_wrapFunction1(jur_UnifiedQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, "Class", 25, jl_Object, [jlr_AnnotatedElement, jlr_Type], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString), "$getPlatformClass", $rt_wrapFunction0(jl_Class_getPlatformClass), "$isInstance", $rt_wrapFunction1(jl_Class_isInstance), "$getName", $rt_wrapFunction0(jl_Class_getName), "$isPrimitive", $rt_wrapFunction0(jl_Class_isPrimitive), "$isArray", $rt_wrapFunction0(jl_Class_isArray), "$isInterface", $rt_wrapFunction0(jl_Class_isInterface), "$getComponentType", $rt_wrapFunction0(jl_Class_getComponentType),
"$getDeclaredConstructors", $rt_wrapFunction0(jl_Class_getDeclaredConstructors), "$getConstructors", $rt_wrapFunction0(jl_Class_getConstructors), "$getDeclaredConstructor", $rt_wrapFunction1(jl_Class_getDeclaredConstructor), "$getConstructor", $rt_wrapFunction1(jl_Class_getConstructor)],
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjt_Int16Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_BitSet__init_1), "$_init_4", $rt_wrapFunction1(ju_BitSet__init_2), "$set4", $rt_wrapFunction1(ju_BitSet_set), "$set", $rt_wrapFunction2(ju_BitSet_set0), "$clear5", $rt_wrapFunction1(ju_BitSet_clear), "$clear6", $rt_wrapFunction2(ju_BitSet_clear0), "$get9", $rt_wrapFunction1(ju_BitSet_get), "$nextSetBit", $rt_wrapFunction1(ju_BitSet_nextSetBit), "$nextClearBit", $rt_wrapFunction1(ju_BitSet_nextClearBit), "$intersects",
$rt_wrapFunction1(ju_BitSet_intersects), "$and", $rt_wrapFunction1(ju_BitSet_and), "$andNot", $rt_wrapFunction1(ju_BitSet_andNot), "$or", $rt_wrapFunction1(ju_BitSet_or), "$xor", $rt_wrapFunction1(ju_BitSet_xor), "$isEmpty", $rt_wrapFunction0(ju_BitSet_isEmpty)],
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Float_$callClinit, ["$_init_7", $rt_wrapFunction1(jl_Float__init_0), "$floatValue", $rt_wrapFunction0(jl_Float_floatValue)],
jur_CharSet, "CharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_154", $rt_wrapFunction1(jur_CharSet__init_0), "$charCount0", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName", $rt_wrapFunction0(jur_CharSet_getName), "$getChar", $rt_wrapFunction0(jur_CharSet_getChar), "$first", $rt_wrapFunction1(jur_CharSet_first)],
cbgggpi_SimpleInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Pool__init_), "$_init_26", $rt_wrapFunction2(cbgu_Pool__init_0), "$obtain", $rt_wrapFunction0(cbgu_Pool_obtain), "$free", $rt_wrapFunction1(cbgu_Pool_free), "$reset1", $rt_wrapFunction1(cbgu_Pool_reset), "$discard", $rt_wrapFunction1(cbgu_Pool_discard), "$freeAll0", $rt_wrapFunction1(cbgu_Pool_freeAll)],
cbgggpi_ModelInfluencer$Random$ModelInstancePool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0]);
$rt_metadata([cbgm_WindowedMean, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgssa_TemporalAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_MoveToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cgtr_MizuchiRandom, "MizuchiRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_MizuchiRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_MizuchiRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_MizuchiRandom_next)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_27", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategoryScope__init_1), "$_init_28", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategoryScope__init_2), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
cgxgbts_TeaSoundManager, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbts_TeaSoundManager__init_0), "$setup", $rt_wrapFunction2(cgxgbts_TeaSoundManager_setup)],
cbggg_NinePatch, 0, jl_Object, [], 0, 3, 0, cbggg_NinePatch_$callClinit, 0,
cbgssu_Disableable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_TextField, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, cbgssu_TextField_$callClinit, 0,
cbgssu_TextArea, 0, cbgssu_TextField, [], 0, 3, 0, 0, 0,
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_CharBuffer__init_), "$get", $rt_wrapFunction3(jn_CharBuffer_get), "$put5", $rt_wrapFunction3(jn_CharBuffer_put), "$put2", $rt_wrapFunction3(jn_CharBuffer_put0), "$put4", $rt_wrapFunction1(jn_CharBuffer_put1), "$flip3", $rt_wrapFunction0(jn_CharBuffer_flip), "$position", $rt_wrapFunction1(jn_CharBuffer_position)],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_CharBufferImpl__init_), "$compact", $rt_wrapFunction0(jn_CharBufferImpl_compact), "$isReadOnly", $rt_wrapFunction0(jn_CharBufferImpl_isReadOnly)],
jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, 0, ["$_init_56", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_CharBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getChar0", $rt_wrapFunction1(jn_CharBufferOverArray_getChar), "$putChar", $rt_wrapFunction2(jn_CharBufferOverArray_putChar), "$readOnly", $rt_wrapFunction0(jn_CharBufferOverArray_readOnly)],
cbgssu_TextTooltip$TextTooltipStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, cbggg_MipMapGenerator_$callClinit, 0,
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, jl_Thread_$callClinit, ["$_init_0", $rt_wrapFunction0(jl_Thread__init_0), "$_init_", $rt_wrapFunction1(jl_Thread__init_2), "$_init_57", $rt_wrapFunction2(jl_Thread__init_4), "$start3", $rt_wrapFunction0(jl_Thread_start), "$getUncaughtExceptionHandler", $rt_wrapFunction0(jl_Thread_getUncaughtExceptionHandler)],
cgxgbtp_AssetDownloadImpl$1, 0, jl_Thread, [], 0, 0, 0, 0, ["$_init_64", $rt_wrapFunction4(cgxgbtp_AssetDownloadImpl$1__init_0), "$run", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl$1_run)],
cgxgbtd_EventHandlerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl$2, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_65", function(var_1, var_2, var_3, var_4, var_5) { cgxgbtp_AssetDownloadImpl$2__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$handleEvent", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$2_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$2_handleEvent$exported$0)],
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 23, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_UnsupportedCharsetException__init_0)],
cgxgbtp_AssetDownloadImpl$3, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_66", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$3__init_0), "$onProgress", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$3_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$3_onFailure), "$onSuccess1", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$3_onSuccess), "$onSuccess", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$3_onSuccess0)],
cgxgbtp_AssetDownloadImpl$4, 0, jl_Thread, [], 0, 0, 0, 0, ["$_init_64", $rt_wrapFunction4(cgxgbtp_AssetDownloadImpl$4__init_0), "$run", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl$4_run)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_186", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
cgxgbtp_AssetDownloadImpl$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_67", $rt_wrapFunction4(cgxgbtp_AssetDownloadImpl$5__init_0), "$onProgress", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5_onFailure), "$onSuccess1", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$5_onSuccess), "$onSuccess", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$5_onSuccess0)],
cgxgbtp_AssetDownloadImpl$6, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_66", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$6__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$6_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$6_handleEvent$exported$0)],
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_FloatBuffer__init_), "$put3", $rt_wrapFunction3(jn_FloatBuffer_put), "$clear3", $rt_wrapFunction0(jn_FloatBuffer_clear), "$flip1", $rt_wrapFunction0(jn_FloatBuffer_flip), "$limit1", $rt_wrapFunction1(jn_FloatBuffer_limit), "$position4", $rt_wrapFunction1(jn_FloatBuffer_position), "$flip0", $rt_wrapFunction0(jn_FloatBuffer_flip0), "$clear1", $rt_wrapFunction0(jn_FloatBuffer_clear0), "$limit0", $rt_wrapFunction1(jn_FloatBuffer_limit0),
"$position3", $rt_wrapFunction1(jn_FloatBuffer_position0)],
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_FloatBufferImpl__init_), "$get4", $rt_wrapFunction1(jn_FloatBufferImpl_get), "$put8", $rt_wrapFunction2(jn_FloatBufferImpl_put), "$isReadOnly", $rt_wrapFunction0(jn_FloatBufferImpl_isReadOnly)],
jn_FloatBufferOverByteBuffer, 0, jn_FloatBufferImpl, [], 1, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_FloatBufferOverByteBuffer_readOnly)],
cgxgbtp_AssetDownloader$AssetDownload, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl, 0, jl_Object, [cgxgbtp_AssetDownloader$AssetDownload], 0, 3, 0, 0, ["$_init_141", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl__init_0), "$isUseBrowserCache", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl_isUseBrowserCache), "$getHostPageBaseURL", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl_getHostPageBaseURL), "$getQueue", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl_getQueue), "$subtractQueue", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl_subtractQueue), "$addQueue", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl_addQueue),
"$load2", function(var_1, var_2, var_3, var_4, var_5) { cgxgbtp_AssetDownloadImpl_load(this, var_1, var_2, var_3, var_4, var_5); }, "$loadText", $rt_wrapFunction3(cgxgbtp_AssetDownloadImpl_loadText), "$loadScript", $rt_wrapFunction3(cgxgbtp_AssetDownloadImpl_loadScript), "$loadAudio", $rt_wrapFunction3(cgxgbtp_AssetDownloadImpl_loadAudio), "$loadBinary", $rt_wrapFunction3(cgxgbtp_AssetDownloadImpl_loadBinary), "$loadImage", $rt_wrapFunction4(cgxgbtp_AssetDownloadImpl_loadImage), "$loadImage0", function(var_1,
var_2, var_3, var_4, var_5) { cgxgbtp_AssetDownloadImpl_loadImage0(this, var_1, var_2, var_3, var_4, var_5); }],
cgxgbtp_AssetDownloadImpl$7, 0, jl_Object, [], 32, 0, 0, cgxgbtp_AssetDownloadImpl$7_$callClinit, 0,
cbgssa_AddAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgggpi_ModelInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_ModelInfluencer$Random, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$BounceIn, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgm_Interpolation$BounceIn__init_0)],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Array, "Array", 11, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Array__init_1), "$_init_4", $rt_wrapFunction1(cbgu_Array__init_3), "$_init_55", $rt_wrapFunction2(cbgu_Array__init_4), "$_init_69", $rt_wrapFunction3(cbgu_Array__init_6), "$_init_72", $rt_wrapFunction1(cbgu_Array__init_8), "$_init_68", $rt_wrapFunction4(cbgu_Array__init_10), "$add3", $rt_wrapFunction1(cbgu_Array_add), "$addAll3", $rt_wrapFunction1(cbgu_Array_addAll), "$addAll4", $rt_wrapFunction3(cbgu_Array_addAll0),
"$addAll", $rt_wrapFunction3(cbgu_Array_addAll1), "$get3", $rt_wrapFunction1(cbgu_Array_get), "$removeValue", $rt_wrapFunction2(cbgu_Array_removeValue), "$removeIndex", $rt_wrapFunction1(cbgu_Array_removeIndex), "$removeRange", $rt_wrapFunction2(cbgu_Array_removeRange), "$pop", $rt_wrapFunction0(cbgu_Array_pop), "$peek0", $rt_wrapFunction0(cbgu_Array_peek), "$first1", $rt_wrapFunction0(cbgu_Array_first), "$clear8", $rt_wrapFunction0(cbgu_Array_clear), "$ensureCapacity1", $rt_wrapFunction1(cbgu_Array_ensureCapacity),
"$resize0", $rt_wrapFunction1(cbgu_Array_resize), "$iterator0", $rt_wrapFunction0(cbgu_Array_iterator), "$truncate0", $rt_wrapFunction1(cbgu_Array_truncate), "$toArray", $rt_wrapFunction0(cbgu_Array_toArray), "$toArray0", $rt_wrapFunction1(cbgu_Array_toArray0), "$hashCode0", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals", $rt_wrapFunction1(cbgu_Array_equals), "$toString", $rt_wrapFunction0(cbgu_Array_toString)],
jur_AtomicFSet, "AtomicFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_AtomicFSet__init_0), "$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getIndex", $rt_wrapFunction0(jur_AtomicFSet_getIndex), "$getName", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_154", $rt_wrapFunction1(jur_LowSurrogateCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_LowSurrogateCharSet_first),
"$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jl_AssertionError, "AssertionError", 25, jl_Error, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction2(jl_AssertionError__init_0)],
cbgm_MathUtils$Sin, 0, jl_Object, [], 0, 0, 0, cbgm_MathUtils$Sin_$callClinit, 0,
cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_98", $rt_wrapFunction4(jur_CompositeQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
jm_Division, 0, jl_Object, [], 0, 0, 0, 0, 0,
jm_BitLevel, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_SupplRangeSet, "SupplRangeSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_114", $rt_wrapFunction1(jur_SupplRangeSet__init_0), "$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains0", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first", $rt_wrapFunction1(jur_SupplRangeSet_first), "$getChars0", $rt_wrapFunction0(jur_SupplRangeSet_getChars), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
cbgss_Event, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0]);
$rt_metadata([cbgssu_ChangeListener$ChangeEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
jl_String, "String", 25, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, jl_String_$callClinit, ["$_init_0", $rt_wrapFunction0(jl_String__init_2), "$_init_35", $rt_wrapFunction1(jl_String__init_3), "$_init_20", $rt_wrapFunction3(jl_String__init_4), "$_init_74", $rt_wrapFunction3(jl_String__init_6), "$charAt", $rt_wrapFunction1(jl_String_charAt), "$length", $rt_wrapFunction0(jl_String_length), "$isEmpty", $rt_wrapFunction0(jl_String_isEmpty), "$getChars", $rt_wrapFunction4(jl_String_getChars),
"$startsWith", $rt_wrapFunction2(jl_String_startsWith), "$startsWith0", $rt_wrapFunction1(jl_String_startsWith0), "$endsWith", $rt_wrapFunction1(jl_String_endsWith), "$indexOf", $rt_wrapFunction2(jl_String_indexOf), "$indexOf2", $rt_wrapFunction1(jl_String_indexOf0), "$lastIndexOf1", $rt_wrapFunction2(jl_String_lastIndexOf), "$lastIndexOf", $rt_wrapFunction1(jl_String_lastIndexOf0), "$indexOf0", $rt_wrapFunction2(jl_String_indexOf1), "$indexOf1", $rt_wrapFunction1(jl_String_indexOf2), "$lastIndexOf2", $rt_wrapFunction2(jl_String_lastIndexOf1),
"$lastIndexOf0", $rt_wrapFunction1(jl_String_lastIndexOf2), "$substring0", $rt_wrapFunction2(jl_String_substring), "$substring", $rt_wrapFunction1(jl_String_substring0), "$subSequence", $rt_wrapFunction2(jl_String_subSequence), "$contains", $rt_wrapFunction1(jl_String_contains), "$replace", $rt_wrapFunction2(jl_String_replace), "$trim", $rt_wrapFunction0(jl_String_trim), "$toString", $rt_wrapFunction0(jl_String_toString), "$toCharArray", $rt_wrapFunction0(jl_String_toCharArray), "$equals", $rt_wrapFunction1(jl_String_equals),
"$getBytes0", $rt_wrapFunction1(jl_String_getBytes), "$getBytes", $rt_wrapFunction1(jl_String_getBytes0), "$hashCode0", $rt_wrapFunction0(jl_String_hashCode), "$toLowerCase1", $rt_wrapFunction0(jl_String_toLowerCase), "$toUpperCase", $rt_wrapFunction0(jl_String_toUpperCase), "$split", $rt_wrapFunction1(jl_String_split), "$split2", $rt_wrapFunction2(jl_String_split0), "$replaceAll0", $rt_wrapFunction2(jl_String_replaceAll)],
otcic_ConsoleOutputStream, 0, ji_OutputStream, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcic_ConsoleOutputStream__init_)],
otcic_StderrOutputStream, 0, otcic_ConsoleOutputStream, [], 0, 3, 0, otcic_StderrOutputStream_$callClinit, ["$write", $rt_wrapFunction3(otcic_StderrOutputStream_write)],
cbgssu_UIUtilsEmu, 0, jl_Object, [], 0, 3, 0, cbgssu_UIUtilsEmu_$callClinit, 0,
jn_IntBufferOverArray, 0, jn_IntBufferImpl, [], 0, 0, 0, 0, ["$_init_44", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement", $rt_wrapFunction1(jn_IntBufferOverArray_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_IntBufferOverArray_readOnly)],
cbgss_InputEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgss_InputEvent$Type_$callClinit, 0,
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_38", $rt_wrapFunction1(jnci_UTF8Encoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Dictionary__init_)],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, ju_Hashtable_$callClinit, ["$_init_0", $rt_wrapFunction0(ju_Hashtable__init_0), "$_init_4", $rt_wrapFunction1(ju_Hashtable__init_2), "$put1", $rt_wrapFunction2(ju_Hashtable_put), "$rehash", $rt_wrapFunction0(ju_Hashtable_rehash)],
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Properties__init_0), "$_init_177", $rt_wrapFunction1(ju_Properties__init_2)],
jn_FloatBufferOverArray, 0, jn_FloatBufferImpl, [], 0, 0, 0, 0, ["$_init_63", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverArray_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_FloatBufferOverArray_readOnly)],
cbgssu_DragAndDrop$Target, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgggmd_ModelMeshPart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssa_RelativeTemporalAction, 0, cbgssa_TemporalAction, [], 1, 3, 0, 0, 0,
cbgssa_MoveByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_InputStream__init_), "$read3", $rt_wrapFunction3(ji_InputStream_read), "$close", $rt_wrapFunction0(ji_InputStream_close)],
cgxgbtp_Blob$1, 0, ji_InputStream, [], 0, 0, 0, 0, ["$_init_160", $rt_wrapFunction1(cgxgbtp_Blob$1__init_0), "$read1", $rt_wrapFunction0(cgxgbtp_Blob$1_read)],
cgt_TriangleVariantsScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_TriangleVariantsScreen_show), "$_init_118", $rt_wrapFunction1(cgt_TriangleVariantsScreen__init_0), "$render0", $rt_wrapFunction1(cgt_TriangleVariantsScreen_render), "$resize", $rt_wrapFunction2(cgt_TriangleVariantsScreen_resize)],
cbgm_Interpolation$Elastic, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_6", $rt_wrapFunction4(cbgm_Interpolation$Elastic__init_0)],
cbgm_Interpolation$ElasticOut, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, ["$_init_6", $rt_wrapFunction4(cbgm_Interpolation$ElasticOut__init_0)],
cbgssu_Table$Debug, 0, jl_Enum, [], 12, 3, 0, cbgssu_Table$Debug_$callClinit, 0,
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, ["$newDecoder", $rt_wrapFunction0(jnci_UTF8Charset_newDecoder), "$newEncoder", $rt_wrapFunction0(jnci_UTF8Charset_newEncoder)],
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otjde_KeyboardEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
cbgssu_ActorGestureListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, cbgssu_ActorGestureListener_$callClinit, 0,
jur_MultiLineEOLSet, "MultiLineEOLSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_MultiLineEOLSet__init_0), "$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
cbg_InputProcessor, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Reader, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_Reader__init_), "$_init_2", $rt_wrapFunction1(ji_Reader__init_0)],
ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, 0, ["$_init_111", $rt_wrapFunction2(ji_BufferedReader__init_0), "$close", $rt_wrapFunction0(ji_BufferedReader_close), "$readLine", $rt_wrapFunction0(ji_BufferedReader_readLine)],
cbgssa_DelayAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssu_TextureRegionDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cgtr_DistinctRandom, "DistinctRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_DistinctRandom__init_0), "$_init_18", $rt_wrapFunction1(cgtr_DistinctRandom__init_2), "$nextLong", $rt_wrapFunction0(cgtr_DistinctRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_DistinctRandom_next)],
cgxgbtf_Store, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtp_AssetFilter, 0, jl_Object, [], 3, 3, 0, 0, 0,
otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0, 0,
jm_Logical, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgggmd_ModelMaterial, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgmo_PolygonMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Object$Monitor__init_0)],
cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$_init_108", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData__init_0), "$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind1", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind)],
cbgggmd_ModelMesh, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Selection, 0, jl_Object, [cbgssu_Disableable, jl_Iterable], 0, 3, 0, 0, 0,
cbgggmd_ModelNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_ReflectionPool, "ReflectionPool", 11, cbgu_Pool, [], 0, 3, 0, 0, ["$_init_16", $rt_wrapFunction3(cbgu_ReflectionPool__init_0), "$newObject", $rt_wrapFunction0(cbgu_ReflectionPool_newObject)],
cbgssu_ScissorStack, 0, jl_Object, [], 0, 3, 0, cbgssu_ScissorStack_$callClinit, 0,
cbgggm_MeshPart, 0, jl_Object, [], 0, 3, 0, cbgggm_MeshPart_$callClinit, 0,
cgxgbtu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit, 0, jl_Enum, [], 9, 3, 0, cgxgbtd_StyleWrapper$Unit_$callClinit, 0]);
$rt_metadata([cgxgbtd_StyleWrapper$Unit$8, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$9, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
ju_List, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$6, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$7, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cbgm_Plane$PlaneSide, 0, jl_Enum, [], 12, 3, 0, cbgm_Plane$PlaneSide_$callClinit, 0,
cgxgbtd_StyleWrapper$Unit$1, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, ["$getType3", $rt_wrapFunction0(cgxgbtd_StyleWrapper$Unit$1_getType)],
cgxgbtd_StyleWrapper$Unit$4, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$5, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$2, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$3, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbt_TeaTool, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_GLVersion, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_101", $rt_wrapFunction4(cbggg_GLVersion__init_0)],
jn_BufferOverflowException, "BufferOverflowException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferOverflowException__init_0)],
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_ShortBuffer__init_), "$put6", $rt_wrapFunction3(jn_ShortBuffer_put), "$clear4", $rt_wrapFunction0(jn_ShortBuffer_clear), "$flip2", $rt_wrapFunction0(jn_ShortBuffer_flip), "$limit3", $rt_wrapFunction1(jn_ShortBuffer_limit), "$position5", $rt_wrapFunction1(jn_ShortBuffer_position), "$flip0", $rt_wrapFunction0(jn_ShortBuffer_flip0), "$clear1", $rt_wrapFunction0(jn_ShortBuffer_clear0), "$limit0", $rt_wrapFunction1(jn_ShortBuffer_limit0),
"$position3", $rt_wrapFunction1(jn_ShortBuffer_position0)],
cbgggpr_ParticleControllerControllerRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 31, jl_Object, [], 0, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(otciu_UnicodeHelper$Range__init_0)],
cgtr_Respite32Random, "Respite32Random", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_Respite32Random__init_0), "$_init_18", $rt_wrapFunction1(cgtr_Respite32Random__init_2), "$setSeed", $rt_wrapFunction1(cgtr_Respite32Random_setSeed), "$nextLong", $rt_wrapFunction0(cgtr_Respite32Random_nextLong), "$next1", $rt_wrapFunction1(cgtr_Respite32Random_next), "$nextInt", $rt_wrapFunction0(cgtr_Respite32Random_nextInt), "$nextFloat", $rt_wrapFunction0(cgtr_Respite32Random_nextFloat)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator__init_)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$2__init_0), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$1__init_0), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jl_NoClassDefFoundError, 0, jl_LinkageError, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
cgxgbtf_FileDB, 0, jl_Object, [], 1, 3, 0, cgxgbtf_FileDB_$callClinit, ["$_init_0", $rt_wrapFunction0(cgxgbtf_FileDB__init_)],
cgxgbtf_FileDBStorage, 0, cgxgbtf_FileDB, [], 4, 0, 0, cgxgbtf_FileDBStorage_$callClinit, ["$_init_140", $rt_wrapFunction1(cgxgbtf_FileDBStorage__init_0), "$read", $rt_wrapFunction1(cgxgbtf_FileDBStorage_read), "$exists", $rt_wrapFunction1(cgxgbtf_FileDBStorage_exists)],
cgt_MathSinScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_MathSinScreen_show), "$_init_118", $rt_wrapFunction1(cgt_MathSinScreen__init_0), "$render0", $rt_wrapFunction1(cgt_MathSinScreen_render), "$resize", $rt_wrapFunction2(cgt_MathSinScreen_resize)],
cgt_CauchyAlternateScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_CauchyAlternateScreen_show), "$_init_118", $rt_wrapFunction1(cgt_CauchyAlternateScreen__init_0), "$render0", $rt_wrapFunction1(cgt_CauchyAlternateScreen_render), "$resize", $rt_wrapFunction2(cgt_CauchyAlternateScreen_resize)],
cbgssu_ProgressBar, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_35", $rt_wrapFunction1(otci_CharFlow__init_0)],
jur_RangeSet, "RangeSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_114", $rt_wrapFunction1(jur_RangeSet__init_0), "$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName", $rt_wrapFunction0(jur_RangeSet_getName), "$first", $rt_wrapFunction1(jur_RangeSet_first), "$getChars0", $rt_wrapFunction0(jur_RangeSet_getChars)],
cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggg_SpriteBatch__init_0), "$_init_81", $rt_wrapFunction2(cbggg_SpriteBatch__init_2), "$begin0", $rt_wrapFunction0(cbggg_SpriteBatch_begin), "$end", $rt_wrapFunction0(cbggg_SpriteBatch_end), "$draw1", $rt_wrapFunction4(cbggg_SpriteBatch_draw), "$flush0", $rt_wrapFunction0(cbggg_SpriteBatch_flush), "$setProjectionMatrix", $rt_wrapFunction1(cbggg_SpriteBatch_setProjectionMatrix), "$setupMatrices",
$rt_wrapFunction0(cbggg_SpriteBatch_setupMatrices), "$switchTexture", $rt_wrapFunction1(cbggg_SpriteBatch_switchTexture), "$isBlendingEnabled", $rt_wrapFunction0(cbggg_SpriteBatch_isBlendingEnabled)],
cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
otjt_Float32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jur_CharClass, "CharClass", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_CharClass__init_0), "$_init_85", $rt_wrapFunction2(jur_CharClass__init_2), "$_init_158", $rt_wrapFunction3(jur_CharClass__init_4), "$add", $rt_wrapFunction1(jur_CharClass_add), "$add11", $rt_wrapFunction1(jur_CharClass_add0), "$add0", $rt_wrapFunction2(jur_CharClass_add1), "$union", $rt_wrapFunction1(jur_CharClass_union), "$intersection", $rt_wrapFunction1(jur_CharClass_intersection), "$contains0", $rt_wrapFunction1(jur_CharClass_contains),
"$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI0", $rt_wrapFunction0(jur_CharClass_hasUCI)],
jn_BufferUnderflowException, "BufferUnderflowException", 22, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferUnderflowException__init_0)],
cgt_BetaScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_BetaScreen_show), "$_init_118", $rt_wrapFunction1(cgt_BetaScreen__init_0), "$render0", $rt_wrapFunction1(cgt_BetaScreen_render), "$resize", $rt_wrapFunction2(cgt_BetaScreen_resize)],
cgtd_TextTools, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgggpi_ColorInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
jn_FloatBufferOverByteBufferLittleEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferLittleEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverByteBufferLittleEndian_putElement)],
cbgm_Octree$RayCastResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop$Payload, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_List, 0, cbgssu_Widget, [cbgssu_Cullable], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$4, 0, cbgssu_List, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
ji_IOException, "IOException", 24, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_IOException__init_0)],
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_CharacterCodingException__init_0)],
jnc_MalformedInputException, "MalformedInputException", 23, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(jnc_MalformedInputException__init_0), "$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)]]);
$rt_metadata([cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Filter_$callClinit, 0,
cgtrd_KumaraswamyDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgtrd_KumaraswamyDistribution__init_), "$getMean", $rt_wrapFunction0(cgtrd_KumaraswamyDistribution_getMean), "$setParameters", $rt_wrapFunction3(cgtrd_KumaraswamyDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_KumaraswamyDistribution_nextDouble)],
jl_CloneNotSupportedException, "CloneNotSupportedException", 25, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_CloneNotSupportedException__init_0)],
jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, ["$_init_45", $rt_wrapFunction3(jn_ShortBufferImpl__init_), "$get14", $rt_wrapFunction1(jn_ShortBufferImpl_get), "$isReadOnly", $rt_wrapFunction0(jn_ShortBufferImpl_isReadOnly)],
jn_ShortBufferOverByteBuffer, 0, jn_ShortBufferImpl, [], 1, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$readOnly", $rt_wrapFunction0(jn_ShortBufferOverByteBuffer_readOnly)],
cbgu_ScreenUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Interpolation$PowIn, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgm_Interpolation$PowIn__init_0)],
cbgm_RandomXS128, 0, ju_Random, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_RandomXS128__init_0), "$setSeed", $rt_wrapFunction1(cbgm_RandomXS128_setSeed), "$setState", $rt_wrapFunction2(cbgm_RandomXS128_setState)],
otjc_JSArrayReader, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otjc_JSArray, 0, jl_Object, [otjc_JSArrayReader], 1, 3, 0, 0, ["$get$exported$0", $rt_wrapFunction1(otjc_JSArray_get$exported$0), "$getLength$exported$1", $rt_wrapFunction0(otjc_JSArray_getLength$exported$1)],
cbgssu_VerticalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
jm_BigInteger, 0, jl_Number, [jl_Comparable, ji_Serializable], 0, 3, 0, jm_BigInteger_$callClinit, ["$_init_26", $rt_wrapFunction2(jm_BigInteger__init_1), "$_init_73", $rt_wrapFunction3(jm_BigInteger__init_2), "$_init_91", $rt_wrapFunction2(jm_BigInteger__init_4), "$_init_181", $rt_wrapFunction2(jm_BigInteger__init_6), "$negate", $rt_wrapFunction0(jm_BigInteger_negate), "$add14", $rt_wrapFunction1(jm_BigInteger_add), "$subtract2", $rt_wrapFunction1(jm_BigInteger_subtract), "$shiftRight1", $rt_wrapFunction1(jm_BigInteger_shiftRight),
"$shiftLeft1", $rt_wrapFunction1(jm_BigInteger_shiftLeft), "$bitLength0", $rt_wrapFunction0(jm_BigInteger_bitLength), "$testBit", $rt_wrapFunction1(jm_BigInteger_testBit), "$and1", $rt_wrapFunction1(jm_BigInteger_and), "$intValue", $rt_wrapFunction0(jm_BigInteger_intValue), "$equals", $rt_wrapFunction1(jm_BigInteger_equals), "$equalsArrays", $rt_wrapFunction1(jm_BigInteger_equalsArrays), "$multiply0", $rt_wrapFunction1(jm_BigInteger_multiply), "$pow1", $rt_wrapFunction1(jm_BigInteger_pow), "$divide0", $rt_wrapFunction1(jm_BigInteger_divide),
"$cutOffLeadingZeroes", $rt_wrapFunction0(jm_BigInteger_cutOffLeadingZeroes), "$isOne", $rt_wrapFunction0(jm_BigInteger_isOne), "$getFirstNonzeroDigit", $rt_wrapFunction0(jm_BigInteger_getFirstNonzeroDigit)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
cbguv_Viewport, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbguv_Viewport__init_), "$apply", $rt_wrapFunction1(cbguv_Viewport_apply), "$getCamera", $rt_wrapFunction0(cbguv_Viewport_getCamera), "$setCamera", $rt_wrapFunction1(cbguv_Viewport_setCamera), "$setWorldSize", $rt_wrapFunction2(cbguv_Viewport_setWorldSize), "$setScreenBounds", $rt_wrapFunction4(cbguv_Viewport_setScreenBounds)],
cbguv_ScreenViewport, 0, cbguv_Viewport, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbguv_ScreenViewport__init_0), "$_init_92", $rt_wrapFunction1(cbguv_ScreenViewport__init_2), "$update0", $rt_wrapFunction3(cbguv_ScreenViewport_update)],
cbggg_BitmapFont, "BitmapFont", 18, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_106", $rt_wrapFunction1(cbggg_BitmapFont__init_0), "$_init_93", $rt_wrapFunction2(cbggg_BitmapFont__init_2), "$_init_94", $rt_wrapFunction3(cbggg_BitmapFont__init_4), "$_init_95", $rt_wrapFunction3(cbggg_BitmapFont__init_6), "$load0", $rt_wrapFunction1(cbggg_BitmapFont_load), "$draw", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return cbggg_BitmapFont_draw(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7);
}, "$setColor", $rt_wrapFunction1(cbggg_BitmapFont_setColor), "$getRegions", $rt_wrapFunction0(cbggg_BitmapFont_getRegions), "$newFontCache", $rt_wrapFunction0(cbggg_BitmapFont_newFontCache)],
cbgggm_NodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_CIBackReferenceSet, "CIBackReferenceSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction2(jur_CIBackReferenceSet__init_0), "$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getString", $rt_wrapFunction1(jur_CIBackReferenceSet_getString), "$getName", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_AbstractCharClass$1, "AbstractCharClass$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_23", $rt_wrapFunction2(jur_AbstractCharClass$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_24", $rt_wrapFunction3(jur_AbstractCharClass$2__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
cgt_NormalAlternateScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_NormalAlternateScreen_show), "$_init_118", $rt_wrapFunction1(cgt_NormalAlternateScreen__init_0), "$render0", $rt_wrapFunction1(cgt_NormalAlternateScreen_render), "$resize", $rt_wrapFunction2(cgt_NormalAlternateScreen_resize), "$pop0", $rt_wrapFunction0(cgt_NormalAlternateScreen_pop), "$simons", $rt_wrapFunction3(cgt_NormalAlternateScreen_simons), "$marsagliaPolar", $rt_wrapFunction0(cgt_NormalAlternateScreen_marsagliaPolar)],
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 21, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_98", $rt_wrapFunction4(jur_PossessiveCompositeQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
cgtrd_GammaDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, 0,
cbgssu_Button, 0, cbgssu_Table, [cbgssu_Disableable], 0, 3, 0, 0, 0,
otjde_LoadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
cbgm_Bresenham2$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgggmd_ModelNodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, cbggg_BitmapFontCache_$callClinit, ["$_init_97", $rt_wrapFunction2(cbggg_BitmapFontCache__init_0), "$getColor", $rt_wrapFunction0(cbggg_BitmapFontCache_getColor), "$draw0", $rt_wrapFunction1(cbggg_BitmapFontCache_draw), "$clear8", $rt_wrapFunction0(cbggg_BitmapFontCache_clear), "$addText", function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbggg_BitmapFontCache_addText(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$addText0", function(var_1, var_2,
var_3, var_4, var_5, var_6, var_7, var_8, var_9) { return cbggg_BitmapFontCache_addText0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$addText1", $rt_wrapFunction3(cbggg_BitmapFontCache_addText1)],
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_UCISequenceSet, "UCISequenceSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_152", $rt_wrapFunction1(jur_UCISequenceSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_150", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
otjt_Int8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
cbggg_HdpiUtils, 0, jl_Object, [], 0, 3, 0, cbggg_HdpiUtils_$callClinit, 0,
cbgssu_SelectBox$SelectBoxScrollPane$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
jur_CompositeRangeSet, "CompositeRangeSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_159", $rt_wrapFunction2(jur_CompositeRangeSet__init_0), "$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, ["$_init_75", $rt_wrapFunction2(ju_MapEntry__init_0)],
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, ["$_init_75", $rt_wrapFunction2(ju_Hashtable$Entry__init_0), "$getKeyHash", $rt_wrapFunction0(ju_Hashtable$Entry_getKeyHash), "$equalsKey", $rt_wrapFunction2(ju_Hashtable$Entry_equalsKey)],
cgtrd_ZipfianDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$getZeta", $rt_wrapFunction0(cgtrd_ZipfianDistribution_getZeta), "$_init_165", $rt_wrapFunction3(cgtrd_ZipfianDistribution__init_0), "$setParameters", $rt_wrapFunction3(cgtrd_ZipfianDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_ZipfianDistribution_nextDouble)],
cbgssa_IntAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
jur_FinalSet, "FinalSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FinalSet__init_0), "$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName", $rt_wrapFunction0(jur_FinalSet_getName)],
cbgggpe_Emitter, 0, cbgggp_ParticleControllerComponent, [cbgu_Json$Serializable], 1, 3, 0, 0, 0,
cbgggpe_RegularEmitter, 0, cbgggpe_Emitter, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
jur_EmptySet, "EmptySet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_15", $rt_wrapFunction1(jur_EmptySet__init_0), "$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
cbgssu_TextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgssu_CheckBox, 0, cbgssu_TextButton, [], 0, 3, 0, 0, 0,
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, 0, ["$_init_84", $rt_wrapFunction2(ju_StringTokenizer__init_0), "$_init_99", $rt_wrapFunction3(ju_StringTokenizer__init_2), "$hasMoreTokens", $rt_wrapFunction0(ju_StringTokenizer_hasMoreTokens), "$nextToken", $rt_wrapFunction0(ju_StringTokenizer_nextToken)],
cbggg_TextureRegion, "TextureRegion", 18, jl_Object, [], 0, 3, 0, 0, ["$_init_96", $rt_wrapFunction1(cbggg_TextureRegion__init_0), "$setRegion", $rt_wrapFunction4(cbggg_TextureRegion_setRegion), "$setRegion0", $rt_wrapFunction4(cbggg_TextureRegion_setRegion0), "$getTexture", $rt_wrapFunction0(cbggg_TextureRegion_getTexture), "$getRegionWidth", $rt_wrapFunction0(cbggg_TextureRegion_getRegionWidth), "$getRegionHeight", $rt_wrapFunction0(cbggg_TextureRegion_getRegionHeight)]]);
$rt_metadata([cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
jn_FloatBufferOverByteBufferBigEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_FloatBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferBigEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverByteBufferBigEndian_putElement)],
cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, 0, ["$_init_167", $rt_wrapFunction1(cgxgbt_TeaGraphics__init_0), "$update", $rt_wrapFunction0(cgxgbt_TeaGraphics_update), "$getGL20", $rt_wrapFunction0(cgxgbt_TeaGraphics_getGL20), "$getWidth", $rt_wrapFunction0(cgxgbt_TeaGraphics_getWidth), "$getHeight", $rt_wrapFunction0(cgxgbt_TeaGraphics_getHeight), "$getBackBufferWidth", $rt_wrapFunction0(cgxgbt_TeaGraphics_getBackBufferWidth), "$getBackBufferHeight", $rt_wrapFunction0(cgxgbt_TeaGraphics_getBackBufferHeight),
"$getDeltaTime", $rt_wrapFunction0(cgxgbt_TeaGraphics_getDeltaTime), "$getFramesPerSecond", $rt_wrapFunction0(cgxgbt_TeaGraphics_getFramesPerSecond), "$setCanvasSize", $rt_wrapFunction2(cgxgbt_TeaGraphics_setCanvasSize), "$supportsExtension", $rt_wrapFunction1(cgxgbt_TeaGraphics_supportsExtension), "$getNativeScreenDensity", $rt_wrapFunction0(cgxgbt_TeaGraphics_getNativeScreenDensity), "$getGLContext", $rt_wrapFunction2(cgxgbt_TeaGraphics_getGLContext)],
jl_NoSuchMethodError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NoSuchMethodError__init_0)],
ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, 0, ["$_init_104", $rt_wrapFunction2(ji_InputStreamReader__init_0), "$_init_112", $rt_wrapFunction1(ji_InputStreamReader__init_2), "$_init_103", $rt_wrapFunction2(ji_InputStreamReader__init_4), "$close", $rt_wrapFunction0(ji_InputStreamReader_close), "$read2", $rt_wrapFunction3(ji_InputStreamReader_read)],
cbgm_Intersector$MinimumTranslationVector, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_115", $rt_wrapFunction1(ju_AbstractList$1__init_0), "$hasNext", $rt_wrapFunction0(ju_AbstractList$1_hasNext), "$next0", $rt_wrapFunction0(ju_AbstractList$1_next)],
cgt_GdxSinScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_GdxSinScreen_show), "$_init_118", $rt_wrapFunction1(cgt_GdxSinScreen__init_0), "$render0", $rt_wrapFunction1(cgt_GdxSinScreen_render), "$resize", $rt_wrapFunction2(cgt_GdxSinScreen_resize)],
cbg_Audio, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaAudio, 0, jl_Object, [cbg_Audio], 0, 3, 0, 0, ["$_init_113", $rt_wrapFunction1(cgxgbt_TeaAudio__init_0)],
cbgmc_Segment, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgssu_FocusListener$1, 0, jl_Object, [], 32, 0, 0, cbgssu_FocusListener$1_$callClinit, 0,
cgxgbtd_EventTargetWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cbgssu_Window, 0, cbgssu_Table, [], 0, 3, 0, cbgssu_Window_$callClinit, 0,
cbgssu_Dialog, 0, cbgssu_Window, [], 0, 3, 0, 0, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_12", $rt_wrapFunction3(jnc_CharsetDecoder__init_), "$onMalformedInput0", $rt_wrapFunction1(jnc_CharsetDecoder_onMalformedInput), "$implOnMalformedInput", $rt_wrapFunction1(jnc_CharsetDecoder_implOnMalformedInput), "$onUnmappableCharacter0", $rt_wrapFunction1(jnc_CharsetDecoder_onUnmappableCharacter), "$implOnUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetDecoder_implOnUnmappableCharacter), "$decode1", $rt_wrapFunction3(jnc_CharsetDecoder_decode),
"$flush1", $rt_wrapFunction1(jnc_CharsetDecoder_flush), "$implFlush0", $rt_wrapFunction1(jnc_CharsetDecoder_implFlush)],
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, ["$_init_12", $rt_wrapFunction3(jnci_BufferedDecoder__init_), "$decodeLoop", $rt_wrapFunction2(jnci_BufferedDecoder_decodeLoop)],
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_38", $rt_wrapFunction1(jnci_UTF8Decoder__init_0), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cbgu_Json, 0, jl_Object, [], 0, 3, 0, 0, 0,
otjb_Storage, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_52", $rt_wrapFunction3(jur_PossessiveQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_107", $rt_wrapFunction2(jnci_BufferedDecoder$Controller__init_0), "$hasMoreInput", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_hasMoreInput), "$hasMoreOutput0", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_hasMoreOutput), "$setInPosition", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_setInPosition), "$setOutPosition", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_setOutPosition)],
cgt_LumpScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_LumpScreen_show), "$_init_118", $rt_wrapFunction1(cgt_LumpScreen__init_0), "$render0", $rt_wrapFunction1(cgt_LumpScreen_render), "$resize", $rt_wrapFunction2(cgt_LumpScreen_resize)],
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_DefaultUncaughtExceptionHandler__init_0), "$uncaughtException", $rt_wrapFunction2(jl_DefaultUncaughtExceptionHandler_uncaughtException)],
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ReflectiveOperationException__init_0)],
jl_InstantiationException, "InstantiationException", 25, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_InstantiationException__init_0)],
cbgggpi_DynamicsModifier$PolarAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
cgxgbtd_WindowWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtdi_TeaWindow, 0, jl_Object, [cgxgbtd_WindowWrapper, otjb_AnimationFrameCallback], 0, 3, 0, cgxgbtdi_TeaWindow_$callClinit, ["$_init_0", $rt_wrapFunction0(cgxgbtdi_TeaWindow__init_0), "$getDocument", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getDocument), "$requestAnimationFrame", $rt_wrapFunction1(cgxgbtdi_TeaWindow_requestAnimationFrame), "$onAnimationFrame", $rt_wrapFunction1(cgxgbtdi_TeaWindow_onAnimationFrame), "$getLocation", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getLocation), "$getClientWidth", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getClientWidth),
"$getClientHeight", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getClientHeight), "$addEventListener", $rt_wrapFunction2(cgxgbtdi_TeaWindow_addEventListener), "$onAnimationFrame$exported$0", $rt_wrapFunction1(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0)],
cbg_Net, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssa_EventAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_CountdownEventAction, 0, cbgssa_EventAction, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, ["$_init_122", $rt_wrapFunction2(ju_HashMap$HashEntry__init_0)],
cbgm_Shape2D, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggpr_PointSpriteRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgm_ConvexHull, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
cbgss_Touchable, 0, jl_Enum, [], 12, 3, 0, cbgss_Touchable_$callClinit, 0,
cbgssu_Stack, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
jur_MultiLineSOLSet, "MultiLineSOLSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_157", $rt_wrapFunction1(jur_MultiLineSOLSet__init_0), "$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
cbgssa_RunnableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$_init_108", $rt_wrapFunction3(cbggg_VertexBufferObject__init_0), "$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObject_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind1", $rt_wrapFunction2(cbggg_VertexBufferObject_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind)],
cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, ["$_init_173", $rt_wrapFunction2(cbggg_VertexArray__init_0)],
cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0]);
$rt_metadata([cbg_Game, 0, jl_Object, [cbg_ApplicationListener], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbg_Game__init_), "$dispose", $rt_wrapFunction0(cbg_Game_dispose), "$pause", $rt_wrapFunction0(cbg_Game_pause), "$resume", $rt_wrapFunction0(cbg_Game_resume), "$render1", $rt_wrapFunction0(cbg_Game_render), "$resize", $rt_wrapFunction2(cbg_Game_resize), "$setScreen", $rt_wrapFunction1(cbg_Game_setScreen)],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
cbgssu_SelectBox$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_ArraySelection, 0, cbgssu_Selection, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$1, 0, cbgssu_ArraySelection, [], 0, 0, 0, 0, 0,
cbgssu_TextField$KeyRepeatTask, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssa_ParallelAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_SequenceAction, 0, cbgssa_ParallelAction, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$_init_55", $rt_wrapFunction2(cbggg_IndexBufferObjectSubData__init_0), "$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices0", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind),
"$unbind1", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind)],
jur_PreviousMatch, "PreviousMatch", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_PreviousMatch__init_0), "$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName", $rt_wrapFunction0(jur_PreviousMatch_getName)],
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgt_StudentsTScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_StudentsTScreen_show), "$_init_118", $rt_wrapFunction1(cgt_StudentsTScreen__init_0), "$render0", $rt_wrapFunction1(cgt_StudentsTScreen_render), "$resize", $rt_wrapFunction2(cgt_StudentsTScreen_resize)],
cbgm_DelaunayTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_NonCapFSet, "NonCapFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_NonCapFSet__init_0), "$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
cbgssu_ImageButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Random, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ScaleInfluencer, 0, cbgggpi_SimpleInfluencer, [], 0, 3, 0, 0, 0,
cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, cbgm_MathUtils_$callClinit, 0,
jur_UCISupplCharSet, "UCISupplCharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_UCISupplCharSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
cbggg_BitmapFont$BitmapFontData, "BitmapFont$BitmapFontData", 18, jl_Object, [], 0, 3, 0, 0, ["$_init_93", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData__init_0), "$load1", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_load), "$setGlyphRegion", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_setGlyphRegion), "$setGlyph", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_setGlyph), "$getFirstGlyph", $rt_wrapFunction0(cbggg_BitmapFont$BitmapFontData_getFirstGlyph), "$getGlyph", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_getGlyph),
"$getGlyphs", function(var_1, var_2, var_3, var_4, var_5) { cbggg_BitmapFont$BitmapFontData_getGlyphs(this, var_1, var_2, var_3, var_4, var_5); }, "$getWrapIndex", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_getWrapIndex), "$isBreakChar", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_isBreakChar), "$isWhitespace", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_isWhitespace)],
cbgggpv_RectangleSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction2(jur_AbstractCharClass$LazyRange__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AltQuantifierSet, "AltQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_52", $rt_wrapFunction3(jur_AltQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
cbgm_Interpolation$ExpIn, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(cbgm_Interpolation$ExpIn__init_0)],
cbgssu_DragScrollListener, 0, cbgssu_DragListener, [], 0, 3, 0, cbgssu_DragScrollListener_$callClinit, 0,
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_164", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_2", $rt_wrapFunction1(jl_Object$monitorExit$lambda$_8_0__init_0), "$run", $rt_wrapFunction0(jl_Object$monitorExit$lambda$_8_0_run)],
cgtr_Jsf32Random, "Jsf32Random", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_Jsf32Random__init_0), "$_init_18", $rt_wrapFunction1(cgtr_Jsf32Random__init_2), "$setSeed", $rt_wrapFunction1(cgtr_Jsf32Random_setSeed), "$nextLong", $rt_wrapFunction0(cgtr_Jsf32Random_nextLong), "$next1", $rt_wrapFunction1(cgtr_Jsf32Random_next), "$nextInt", $rt_wrapFunction0(cgtr_Jsf32Random_nextInt), "$nextFloat", $rt_wrapFunction0(cgtr_Jsf32Random_nextFloat)],
cgxgbts_SoundManagerCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication$4$1, 0, jl_Object, [cgxgbts_SoundManagerCallback], 0, 0, 0, 0, ["$_init_147", $rt_wrapFunction2(cgxgbt_TeaApplication$4$1__init_0), "$onready", $rt_wrapFunction0(cgxgbt_TeaApplication$4$1_onready), "$ontimeout", $rt_wrapFunction0(cgxgbt_TeaApplication$4$1_ontimeout), "$onready$exported$0", $rt_wrapFunction0(cgxgbt_TeaApplication$4$1_onready$exported$0), "$ontimeout$exported$1", $rt_wrapFunction0(cgxgbt_TeaApplication$4$1_ontimeout$exported$1)],
jur_UCISupplRangeSet, "UCISupplRangeSet", 21, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$_init_114", $rt_wrapFunction1(jur_UCISupplRangeSet__init_0), "$contains0", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
cbgu_Clipboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_FocusListener$FocusEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgssu_FocusListener$FocusEvent$Type_$callClinit, 0,
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$_init_108", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO__init_0), "$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices), "$bind1", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind),
"$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind)],
otcic_Console, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgssa_FloatAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssu_HorizontalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGL20, "TeaGL20", 7, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$_init_100", $rt_wrapFunction1(cgxgbt_TeaGL20__init_0), "$copy1", $rt_wrapFunction1(cgxgbt_TeaGL20_copy), "$copy2", $rt_wrapFunction1(cgxgbt_TeaGL20_copy0), "$copy3", $rt_wrapFunction1(cgxgbt_TeaGL20_copy1), "$copy0", $rt_wrapFunction1(cgxgbt_TeaGL20_copy2), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20_glClearColor),
"$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnable), "$glGenTexture", $rt_wrapFunction0(cgxgbt_TeaGL20_glGenTexture), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20_glPixelStorei), "$glTexImage2D",
function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20_glBlendFuncSeparate),
"$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements0), "$glEnableVertexAttribArray",
$rt_wrapFunction1(cgxgbt_TeaGL20_glEnableVertexAttribArray), "$glGenBuffer", $rt_wrapFunction0(cgxgbt_TeaGL20_glGenBuffer), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetProgramiv),
"$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameteri), "$glUniform1i",
$rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1i), "$glUniformMatrix4fv", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20_glUniformMatrix4fv(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cgxgbt_TeaGL20Debug, "TeaGL20Debug", 7, cgxgbt_TeaGL20, [], 0, 3, 0, 0, ["$_init_100", $rt_wrapFunction1(cgxgbt_TeaGL20Debug__init_0), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glDrawArrays),
"$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnable), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameterf),
"$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCompileShader),
"$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGenerateMipmap), "$glGetActiveAttrib",
$rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetShaderiv),
"$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glUseProgram),
"$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cgt_RandomRandom, "RandomRandom", 2, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgt_RandomRandom__init_0), "$_init_18", $rt_wrapFunction1(cgt_RandomRandom__init_2), "$setSeed", $rt_wrapFunction1(cgt_RandomRandom_setSeed), "$nextLong", $rt_wrapFunction0(cgt_RandomRandom_nextLong), "$next1", $rt_wrapFunction1(cgt_RandomRandom_next), "$nextFloat", $rt_wrapFunction0(cgt_RandomRandom_nextFloat), "$nextDouble", $rt_wrapFunction0(cgt_RandomRandom_nextDouble), "$nextGaussian0", $rt_wrapFunction0(cgt_RandomRandom_nextGaussian)],
cbgssu_Tree$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_Tree$1, 0, cbgssu_Selection, [], 0, 0, 0, 0, 0,
cgxgbtf_StoreLocal, 0, jl_Object, [cgxgbtf_Store], 0, 0, 0, 0, ["$_init_", $rt_wrapFunction1(cgxgbtf_StoreLocal__init_0), "$getItem", $rt_wrapFunction1(cgxgbtf_StoreLocal_getItem), "$removeItem", $rt_wrapFunction1(cgxgbtf_StoreLocal_removeItem)],
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
cbgggp_ParticleController, 0, jl_Object, [cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgm_GeometryUtils, 0, jl_Object, [], 4, 3, 0, cbgm_GeometryUtils_$callClinit, 0,
cbgssu_Skin, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgssu_Skin_$callClinit, 0]);
$rt_metadata([jm_Elementary, 0, jl_Object, [], 0, 0, 0, 0, 0,
otjde_FocusEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjde_MouseEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjde_GamepadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
otjb_WindowEventTarget, 0, jl_Object, [otjde_EventTarget, otjde_FocusEventTarget, otjde_MouseEventTarget, otjde_KeyboardEventTarget, otjde_LoadEventTarget, otjde_GamepadEventTarget], 3, 3, 0, 0, 0,
cbgggpv_MeshSpawnShapeValue$Triangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Matrix3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Matrix4__init_0), "$set3", $rt_wrapFunction1(cbgm_Matrix4_set), "$set6", $rt_wrapFunction1(cbgm_Matrix4_set0), "$mul", $rt_wrapFunction1(cbgm_Matrix4_mul), "$idt", $rt_wrapFunction0(cbgm_Matrix4_idt), "$setToOrtho2D", $rt_wrapFunction4(cbgm_Matrix4_setToOrtho2D), "$setToOrtho", function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbgm_Matrix4_setToOrtho(this, var_1, var_2, var_3, var_4,
var_5, var_6); }, "$setToTranslation", $rt_wrapFunction3(cbgm_Matrix4_setToTranslation), "$setToLookAt", $rt_wrapFunction2(cbgm_Matrix4_setToLookAt), "$setToLookAt0", $rt_wrapFunction3(cbgm_Matrix4_setToLookAt0)],
cbgss_InputListener$1, 0, jl_Object, [], 32, 0, 0, cbgss_InputListener$1_$callClinit, 0,
jl_NegativeArraySizeException, "NegativeArraySizeException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NegativeArraySizeException__init_0)],
cbgssa_RemoveActorAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Bounce, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgm_Interpolation$Bounce__init_0)],
cbgssa_SizeByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Swing, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_7", $rt_wrapFunction1(cbgm_Interpolation$Swing__init_0)],
cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_71", $rt_wrapFunction1(cbgu_Array$ArrayIterable__init_0), "$_init_70", $rt_wrapFunction2(cbgu_Array$ArrayIterable__init_2), "$iterator0", $rt_wrapFunction0(cbgu_Array$ArrayIterable_iterator)],
jl_IllegalStateException, "IllegalStateException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalStateException__init_1), "$_init_", $rt_wrapFunction1(jl_IllegalStateException__init_2)],
cgxgbtd_FileReaderWrapper, 0, jl_Object, [cgxgbtd_EventTargetWrapper, otj_JSObject], 1, 3, 0, 0, ["$removeEventListener$exported$0", $rt_wrapFunction2(cgxgbtd_FileReaderWrapper_removeEventListener$exported$0), "$dispatchEvent$exported$1", $rt_wrapFunction1(cgxgbtd_FileReaderWrapper_dispatchEvent$exported$1), "$addEventListener$exported$2", $rt_wrapFunction2(cgxgbtd_FileReaderWrapper_addEventListener$exported$2), "$addEventListener$exported$3", $rt_wrapFunction3(cgxgbtd_FileReaderWrapper_addEventListener$exported$3),
"$removeEventListener$exported$4", $rt_wrapFunction3(cgxgbtd_FileReaderWrapper_removeEventListener$exported$4)],
cbgssu_TooltipManager, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgtr_GoldenQuasiRandom, "GoldenQuasiRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_GoldenQuasiRandom__init_0), "$_init_18", $rt_wrapFunction1(cgtr_GoldenQuasiRandom__init_2), "$nextLong", $rt_wrapFunction0(cgtr_GoldenQuasiRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_GoldenQuasiRandom_next), "$nextExclusiveDouble", $rt_wrapFunction0(cgtr_GoldenQuasiRandom_nextExclusiveDouble), "$nextExclusiveSignedDouble", $rt_wrapFunction0(cgtr_GoldenQuasiRandom_nextExclusiveSignedDouble),
"$nextExclusiveFloat", $rt_wrapFunction0(cgtr_GoldenQuasiRandom_nextExclusiveFloat), "$nextGaussian0", $rt_wrapFunction0(cgtr_GoldenQuasiRandom_nextGaussian)],
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractCollection__init_), "$toArray1", $rt_wrapFunction1(ju_AbstractCollection_toArray)],
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractList__init_), "$iterator", $rt_wrapFunction0(ju_AbstractList_iterator)],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 21, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_98", $rt_wrapFunction4(jur_ReluctantCompositeQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
cbgmo_CircleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_174", function(var_1, var_2, var_3, var_4, var_5) { jn_ByteBuffer__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$get12", $rt_wrapFunction3(jn_ByteBuffer_get), "$get6", $rt_wrapFunction1(jn_ByteBuffer_get0), "$put0", $rt_wrapFunction3(jn_ByteBuffer_put0), "$put", $rt_wrapFunction1(jn_ByteBuffer_put), "$hasArray", $rt_wrapFunction0(jn_ByteBuffer_hasArray), "$array", $rt_wrapFunction0(jn_ByteBuffer_array), "$order0", $rt_wrapFunction1(jn_ByteBuffer_order),
"$clear0", $rt_wrapFunction0(jn_ByteBuffer_clear), "$flip", $rt_wrapFunction0(jn_ByteBuffer_flip), "$limit4", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position1", $rt_wrapFunction1(jn_ByteBuffer_position), "$flip0", $rt_wrapFunction0(jn_ByteBuffer_flip0), "$limit0", $rt_wrapFunction1(jn_ByteBuffer_limit0), "$position3", $rt_wrapFunction1(jn_ByteBuffer_position0)],
jur_SOLSet, "SOLSet", 21, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SOLSet__init_0), "$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_SOLSet_getName)],
cbgm_Vector3, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Vector3__init_0), "$_init_117", $rt_wrapFunction3(cbgm_Vector3__init_2), "$set0", $rt_wrapFunction3(cbgm_Vector3_set), "$set1", $rt_wrapFunction1(cbgm_Vector3_set0), "$add2", $rt_wrapFunction1(cbgm_Vector3_add), "$add9", $rt_wrapFunction3(cbgm_Vector3_add0), "$sub", $rt_wrapFunction1(cbgm_Vector3_sub), "$sub0", $rt_wrapFunction3(cbgm_Vector3_sub0), "$scl", $rt_wrapFunction1(cbgm_Vector3_scl),
"$len2", $rt_wrapFunction0(cbgm_Vector3_len2), "$nor", $rt_wrapFunction0(cbgm_Vector3_nor), "$dot", $rt_wrapFunction1(cbgm_Vector3_dot), "$crs", $rt_wrapFunction1(cbgm_Vector3_crs), "$crs0", $rt_wrapFunction3(cbgm_Vector3_crs0)],
cbgm_Vector2, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector2_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Vector2__init_0), "$_init_5", $rt_wrapFunction2(cbgm_Vector2__init_2)],
jl_ThreadInterruptHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Vector4, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector4_$callClinit, ["$_init_3", $rt_wrapFunction4(cbgm_Vector4__init_0), "$set7", $rt_wrapFunction4(cbgm_Vector4_set)],
cbgggpi_DynamicsInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
cgtrd_ChiSquareDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_163", $rt_wrapFunction2(cgtrd_ChiSquareDistribution__init_0), "$getMean", $rt_wrapFunction0(cgtrd_ChiSquareDistribution_getMean), "$setParameters", $rt_wrapFunction3(cgtrd_ChiSquareDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_ChiSquareDistribution_nextDouble)],
cbgssa_RepeatAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cgtr_ScruffRandom, "ScruffRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_ScruffRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_ScruffRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_ScruffRandom_next)],
cbgur_Constructor, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_8", $rt_wrapFunction1(cbgur_Constructor__init_0), "$getDeclaringClass", $rt_wrapFunction0(cbgur_Constructor_getDeclaringClass), "$setAccessible", $rt_wrapFunction1(cbgur_Constructor_setAccessible), "$newInstance0", $rt_wrapFunction1(cbgur_Constructor_newInstance)],
cbgssu_DragAndDrop$Source, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgt_ProductNormalScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ProductNormalScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ProductNormalScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ProductNormalScreen_render), "$resize", $rt_wrapFunction2(cgt_ProductNormalScreen_resize)],
jl_String$_clinit_$lambda$_89_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_String$_clinit_$lambda$_89_0__init_0)],
jn_ShortBufferOverArray, 0, jn_ShortBufferImpl, [], 0, 0, 0, 0, ["$_init_77", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverArray__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement1", $rt_wrapFunction1(jn_ShortBufferOverArray_getElement), "$putElement1", $rt_wrapFunction2(jn_ShortBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_ShortBufferOverArray_readOnly)],
cbgggp_ParticleEffect, 0, jl_Object, [cbgu_Disposable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cgtrd_LumpDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgtrd_LumpDistribution__init_), "$setParameters", $rt_wrapFunction3(cgtrd_LumpDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_LumpDistribution_nextDouble)],
jlr_Modifier, 0, jl_Object, [], 0, 3, 0, jlr_Modifier_$callClinit, 0,
cbgi_GestureDetector$GestureListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgt_DistributorDemo, 0, cbg_Game, [], 0, 3, 0, cgt_DistributorDemo_$callClinit, ["$_init_0", $rt_wrapFunction0(cgt_DistributorDemo__init_0), "$create", $rt_wrapFunction0(cgt_DistributorDemo_create), "$nextScreen", $rt_wrapFunction0(cgt_DistributorDemo_nextScreen), "$previousScreen", $rt_wrapFunction0(cgt_DistributorDemo_previousScreen), "$render1", $rt_wrapFunction0(cgt_DistributorDemo_render)],
cgtd_Base, 0, jl_Object, [], 0, 3, 0, cgtd_Base_$callClinit, ["$_init_119", function(var_1, var_2, var_3, var_4, var_5) { cgtd_Base__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$unsigned", $rt_wrapFunction1(cgtd_Base_unsigned), "$appendUnsigned", $rt_wrapFunction2(cgtd_Base_appendUnsigned), "$signed", $rt_wrapFunction1(cgtd_Base_signed), "$readInt", $rt_wrapFunction3(cgtd_Base_readInt), "$decimal", $rt_wrapFunction1(cgtd_Base_decimal), "$appendDecimal", $rt_wrapFunction2(cgtd_Base_appendDecimal)],
cbgggpv_MeshSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, 0, 0,
cbgggpv_UnweightedMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractMap__init_)],
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$newElementArray0", $rt_wrapFunction1(ju_HashMap_newElementArray), "$_init_0", $rt_wrapFunction0(ju_HashMap__init_0), "$_init_4", $rt_wrapFunction1(ju_HashMap__init_2), "$_init_121", $rt_wrapFunction2(ju_HashMap__init_4), "$get0", $rt_wrapFunction1(ju_HashMap_get), "$getEntry", $rt_wrapFunction1(ju_HashMap_getEntry), "$findNonNullKeyEntry", $rt_wrapFunction3(ju_HashMap_findNonNullKeyEntry), "$findNullKeyEntry", $rt_wrapFunction0(ju_HashMap_findNullKeyEntry),
"$put1", $rt_wrapFunction2(ju_HashMap_put), "$putImpl", $rt_wrapFunction2(ju_HashMap_putImpl), "$createHashedEntry", $rt_wrapFunction3(ju_HashMap_createHashedEntry), "$rehash0", $rt_wrapFunction1(ju_HashMap_rehash), "$rehash", $rt_wrapFunction0(ju_HashMap_rehash0), "$remove0", $rt_wrapFunction1(ju_HashMap_remove), "$removeEntry", $rt_wrapFunction1(ju_HashMap_removeEntry)]]);
$rt_metadata([cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_FloatArray__init_0), "$_init_55", $rt_wrapFunction2(cbgu_FloatArray__init_2), "$add6", $rt_wrapFunction1(cbgu_FloatArray_add), "$addAll1", $rt_wrapFunction1(cbgu_FloatArray_addAll), "$addAll2", $rt_wrapFunction3(cbgu_FloatArray_addAll0), "$addAll0", $rt_wrapFunction3(cbgu_FloatArray_addAll1), "$get4", $rt_wrapFunction1(cbgu_FloatArray_get), "$removeRange", $rt_wrapFunction2(cbgu_FloatArray_removeRange), "$first0",
$rt_wrapFunction0(cbgu_FloatArray_first), "$notEmpty", $rt_wrapFunction0(cbgu_FloatArray_notEmpty), "$clear8", $rt_wrapFunction0(cbgu_FloatArray_clear), "$ensureCapacity2", $rt_wrapFunction1(cbgu_FloatArray_ensureCapacity), "$resize1", $rt_wrapFunction1(cbgu_FloatArray_resize), "$truncate0", $rt_wrapFunction1(cbgu_FloatArray_truncate)],
cbgssu_TextTooltip, 0, cbgssu_Tooltip, [], 0, 3, 0, 0, 0,
cbgssu_ImageTextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgssa_RotateByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cgxgbtp_Preloader, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_168", $rt_wrapFunction3(cgxgbtp_Preloader__init_0), "$getAssetUrl", $rt_wrapFunction0(cgxgbtp_Preloader_getAssetUrl), "$preload", $rt_wrapFunction2(cgxgbtp_Preloader_preload), "$loadSingleAsset", $rt_wrapFunction1(cgxgbtp_Preloader_loadSingleAsset), "$loadAsset", function(var_1, var_2, var_3, var_4, var_5) { cgxgbtp_Preloader_loadAsset(this, var_1, var_2, var_3, var_4, var_5); }, "$loadScript", $rt_wrapFunction3(cgxgbtp_Preloader_loadScript), "$putAssetInMap",
$rt_wrapFunction3(cgxgbtp_Preloader_putAssetInMap), "$read0", $rt_wrapFunction1(cgxgbtp_Preloader_read), "$contains1", $rt_wrapFunction1(cgxgbtp_Preloader_contains)],
otcit_DoubleAnalyzer, 0, jl_Object, [], 4, 3, 0, otcit_DoubleAnalyzer_$callClinit, 0,
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, jnc_CoderResult_$callClinit, ["$_init_128", $rt_wrapFunction2(jnc_CoderResult__init_0), "$isUnderflow", $rt_wrapFunction0(jnc_CoderResult_isUnderflow), "$isOverflow", $rt_wrapFunction0(jnc_CoderResult_isOverflow), "$isError", $rt_wrapFunction0(jnc_CoderResult_isError), "$isMalformed", $rt_wrapFunction0(jnc_CoderResult_isMalformed), "$isUnmappable", $rt_wrapFunction0(jnc_CoderResult_isUnmappable), "$length", $rt_wrapFunction0(jnc_CoderResult_length), "$throwException",
$rt_wrapFunction0(jnc_CoderResult_throwException)],
jur_EOLSet, "EOLSet", 21, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_EOLSet__init_0), "$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOLSet_getName)],
cgtrd_BinomialDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_166", $rt_wrapFunction3(cgtrd_BinomialDistribution__init_0), "$getMean", $rt_wrapFunction0(cgtrd_BinomialDistribution_getMean), "$setParameters", $rt_wrapFunction3(cgtrd_BinomialDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_BinomialDistribution_nextDouble)],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_14", $rt_wrapFunction2(jur_Lexer__init_0), "$peek", $rt_wrapFunction0(jur_Lexer_peek), "$setMode", $rt_wrapFunction1(jur_Lexer_setMode), "$restoreFlags", $rt_wrapFunction1(jur_Lexer_restoreFlags), "$peekSpecial", $rt_wrapFunction0(jur_Lexer_peekSpecial), "$isSpecial", $rt_wrapFunction0(jur_Lexer_isSpecial), "$isNextSpecial", $rt_wrapFunction0(jur_Lexer_isNextSpecial), "$next4", $rt_wrapFunction0(jur_Lexer_next), "$nextSpecial", $rt_wrapFunction0(jur_Lexer_nextSpecial),
"$lookAhead0", $rt_wrapFunction0(jur_Lexer_lookAhead), "$back", $rt_wrapFunction0(jur_Lexer_back), "$toString", $rt_wrapFunction0(jur_Lexer_toString), "$isEmpty", $rt_wrapFunction0(jur_Lexer_isEmpty), "$isLetter0", $rt_wrapFunction0(jur_Lexer_isLetter0), "$isHighSurrogate1", $rt_wrapFunction0(jur_Lexer_isHighSurrogate0), "$isLowSurrogate1", $rt_wrapFunction0(jur_Lexer_isLowSurrogate0), "$getIndex", $rt_wrapFunction0(jur_Lexer_getIndex)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
otjt_Int32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$BrownianAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
jn_ShortBufferOverByteBufferBigEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement1", $rt_wrapFunction1(jn_ShortBufferOverByteBufferBigEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_ShortBufferOverByteBufferBigEndian_putElement)],
cbgssu_NinePatchDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cgt_DigitalSinSmootherScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_DigitalSinSmootherScreen_show), "$_init_118", $rt_wrapFunction1(cgt_DigitalSinSmootherScreen__init_0), "$render0", $rt_wrapFunction1(cgt_DigitalSinSmootherScreen_render), "$resize", $rt_wrapFunction2(cgt_DigitalSinSmootherScreen_resize)],
cbggg_GLVersion$Type, 0, jl_Enum, [], 12, 3, 0, cbggg_GLVersion$Type_$callClinit, 0,
cgtr_Ziggurat, 0, jl_Object, [], 0, 3, 0, cgtr_Ziggurat_$callClinit, 0,
cgtr_WhiskerRandom, "WhiskerRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_WhiskerRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_WhiskerRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_WhiskerRandom_next)],
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, jl_AbstractStringBuilder$Constants_$callClinit, 0,
jur_SingleSet, "SingleSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_131", $rt_wrapFunction2(jur_SingleSet__init_0), "$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
cbgssu_Tree$Node, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgt_NormalScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_NormalScreen_show), "$_init_118", $rt_wrapFunction1(cgt_NormalScreen__init_0), "$render0", $rt_wrapFunction1(cgt_NormalScreen_render), "$resize", $rt_wrapFunction2(cgt_NormalScreen_resize)],
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 21, jur_SingleSet, [], 0, 0, 0, 0, ["$_init_130", $rt_wrapFunction1(jur_BackReferencedSingleSet__init_0), "$find", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
jnc_BufferOverflowException, "BufferOverflowException", 23, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferOverflowException__init_0)],
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$AspectTextureRegion, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_IntSet__init_0), "$_init_121", $rt_wrapFunction2(cbgu_IntSet__init_2), "$place", $rt_wrapFunction1(cbgu_IntSet_place), "$add13", $rt_wrapFunction1(cbgu_IntSet_add), "$remove1", $rt_wrapFunction1(cbgu_IntSet_remove)],
cgtd_Hasher, 0, jl_Object, [], 0, 3, 0, cgtd_Hasher_$callClinit, ["$_init_18", $rt_wrapFunction1(cgtd_Hasher__init_0), "$_init_132", $rt_wrapFunction1(cgtd_Hasher__init_2)],
ju_MissingResourceException, "MissingResourceException", 20, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_25", $rt_wrapFunction3(ju_MissingResourceException__init_0)],
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IndexOutOfBoundsException__init_2), "$_init_", $rt_wrapFunction1(jl_IndexOutOfBoundsException__init_1)],
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 25, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_StringIndexOutOfBoundsException__init_0)],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 21, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction2(jur_UCIBackReferenceSet__init_0), "$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, cbgu_StreamUtils_$callClinit, 0,
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, jn_ByteOrder_$callClinit, 0,
cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_TextureData$TextureDataType_$callClinit, 0,
cgtrd_NormalDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$getMu", $rt_wrapFunction0(cgtrd_NormalDistribution_getMu), "$getSigma", $rt_wrapFunction0(cgtrd_NormalDistribution_getSigma), "$_init_21", $rt_wrapFunction3(cgtrd_NormalDistribution__init_), "$getMedian", $rt_wrapFunction0(cgtrd_NormalDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_NormalDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_NormalDistribution_nextDouble)],
cgxgbtp_Preloader$3$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_48", function(var_1, var_2, var_3, var_4, var_5) { cgxgbtp_Preloader$3$1__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$handleEvent", $rt_wrapFunction1(cgxgbtp_Preloader$3$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$3$1_handleEvent$exported$0)],
otcic_StdoutOutputStream, 0, otcic_ConsoleOutputStream, [], 0, 3, 0, otcic_StdoutOutputStream_$callClinit, ["$write", $rt_wrapFunction3(otcic_StdoutOutputStream_write)],
jur_DotAllQuantifierSet, "DotAllQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_DotAllQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
cbgggmd_ModelMaterial$MaterialType, 0, jl_Enum, [], 12, 3, 0, cbgggmd_ModelMaterial$MaterialType_$callClinit, 0,
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
cbgggpi_ColorInfluencer$Single, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
jnc_CoderMalfunctionError, "CoderMalfunctionError", 23, jl_Error, [], 0, 3, 0, 0, ["$_init_11", $rt_wrapFunction1(jnc_CoderMalfunctionError__init_0)],
cbgssu_Value$Fixed, 0, cbgssu_Value, [], 0, 3, 0, cbgssu_Value$Fixed_$callClinit, ["$_init_7", $rt_wrapFunction1(cbgssu_Value$Fixed__init_0)],
cgtrd_PowerDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgtrd_PowerDistribution__init_0), "$getMean", $rt_wrapFunction0(cgtrd_PowerDistribution_getMean), "$setParameters", $rt_wrapFunction3(cgtrd_PowerDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_PowerDistribution_nextDouble)],
cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0,
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 21, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_135", $rt_wrapFunction2(jur_CIDecomposedCharSet__init_0)],
cgt_CauchyScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_CauchyScreen_show), "$_init_118", $rt_wrapFunction1(cgt_CauchyScreen__init_0), "$render0", $rt_wrapFunction1(cgt_CauchyScreen_render), "$resize", $rt_wrapFunction2(cgt_CauchyScreen_resize)]]);
$rt_metadata([otjw_WebGLContextAttributes, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgm_Affine2, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
cgxgbtp_AssetDownloadImpl$4$1, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_61", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$4$1__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$4$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$4$1_handleEvent$exported$0)],
cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Pixmap_$callClinit, ["$_init_106", $rt_wrapFunction1(cbgg_Pixmap__init_1), "$_init_39", $rt_wrapFunction3(cbgg_Pixmap__init_2), "$getCanvasElement", $rt_wrapFunction0(cbgg_Pixmap_getCanvasElement), "$canUsePixmapData", $rt_wrapFunction0(cbgg_Pixmap_canUsePixmapData), "$getPixmapData", $rt_wrapFunction0(cbgg_Pixmap_getPixmapData), "$canUseImageElement", $rt_wrapFunction0(cbgg_Pixmap_canUseImageElement), "$getImageElement", $rt_wrapFunction0(cbgg_Pixmap_getImageElement),
"$canUseVideoElement", $rt_wrapFunction0(cbgg_Pixmap_canUseVideoElement), "$getVideoElement", $rt_wrapFunction0(cbgg_Pixmap_getVideoElement), "$drawPixmap", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbgg_Pixmap_drawPixmap(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$drawPixmap0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbgg_Pixmap_drawPixmap0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$getWidth", $rt_wrapFunction0(cbgg_Pixmap_getWidth),
"$getHeight", $rt_wrapFunction0(cbgg_Pixmap_getHeight), "$dispose", $rt_wrapFunction0(cbgg_Pixmap_dispose), "$getGLFormat", $rt_wrapFunction0(cbgg_Pixmap_getGLFormat), "$getGLInternalFormat", $rt_wrapFunction0(cbgg_Pixmap_getGLInternalFormat), "$getGLType", $rt_wrapFunction0(cbgg_Pixmap_getGLType), "$getPixels", $rt_wrapFunction0(cbgg_Pixmap_getPixels), "$getFormat", $rt_wrapFunction0(cbgg_Pixmap_getFormat), "$setBlending", $rt_wrapFunction1(cbgg_Pixmap_setBlending)],
cbgssu_TextButton$TextButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
cbgm_GridPoint2, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_GridPoint3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cgtd_MathTools, 0, jl_Object, [], 4, 3, 0, cgtd_MathTools_$callClinit, 0,
cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_FileTextureData, "FileTextureData", 17, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$_init_105", $rt_wrapFunction4(cbggg_FileTextureData__init_0), "$isPrepared", $rt_wrapFunction0(cbggg_FileTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_FileTextureData_prepare), "$consumePixmap", $rt_wrapFunction0(cbggg_FileTextureData_consumePixmap), "$disposePixmap", $rt_wrapFunction0(cbggg_FileTextureData_disposePixmap), "$getWidth", $rt_wrapFunction0(cbggg_FileTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_FileTextureData_getHeight),
"$getFormat", $rt_wrapFunction0(cbggg_FileTextureData_getFormat), "$useMipMaps", $rt_wrapFunction0(cbggg_FileTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_FileTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_FileTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_FileTextureData_consumeCustomData)],
cgxgbtu_TeaNavigator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_TooltipManager$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_TooltipManager$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$PowOut, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgm_Interpolation$PowOut__init_0)],
cgxgbtp_AssetDownloader, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtf_StoreMemory, 0, jl_Object, [cgxgbtf_Store], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtf_StoreMemory__init_0), "$getItem", $rt_wrapFunction1(cgxgbtf_StoreMemory_getItem), "$removeItem", $rt_wrapFunction1(cgxgbtf_StoreMemory_removeItem)],
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_DoubleAnalyzer$Result__init_0)],
cgtrd_BetaDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgtrd_BetaDistribution__init_), "$getMean", $rt_wrapFunction0(cgtrd_BetaDistribution_getMean), "$setParameters", $rt_wrapFunction3(cgtrd_BetaDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_BetaDistribution_nextDouble)],
cbggg_ImmediateModeRenderer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer20, 0, jl_Object, [cbggg_ImmediateModeRenderer], 0, 3, 0, 0, ["$_init_22", $rt_wrapFunction4(cbggg_ImmediateModeRenderer20__init_0), "$_init_137", function(var_1, var_2, var_3, var_4, var_5) { cbggg_ImmediateModeRenderer20__init_2(this, var_1, var_2, var_3, var_4, var_5); }, "$begin", $rt_wrapFunction2(cbggg_ImmediateModeRenderer20_begin), "$color", $rt_wrapFunction1(cbggg_ImmediateModeRenderer20_color), "$vertex", $rt_wrapFunction3(cbggg_ImmediateModeRenderer20_vertex), "$flush0",
$rt_wrapFunction0(cbggg_ImmediateModeRenderer20_flush), "$end", $rt_wrapFunction0(cbggg_ImmediateModeRenderer20_end)],
cbgssu_Label, 0, cbgssu_Widget, [], 0, 3, 0, cbgssu_Label_$callClinit, 0,
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$_init_139", $rt_wrapFunction3(ji_ByteArrayInputStream__init_1), "$_init_80", $rt_wrapFunction1(ji_ByteArrayInputStream__init_2), "$read1", $rt_wrapFunction0(ji_ByteArrayInputStream_read), "$read3", $rt_wrapFunction3(ji_ByteArrayInputStream_read0), "$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 21, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_52", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
cbgssa_Actions, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_SecurityException, 0, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbgggpi_ModelInfluencer$Single, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
cbgssu_ScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cgxgbtf_FileDBManager, 0, cgxgbtf_FileDB, [], 4, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtf_FileDBManager__init_0), "$read", $rt_wrapFunction1(cgxgbtf_FileDBManager_read)],
cbgssu_ScrollPane$2, 0, cbgssu_ActorGestureListener, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$SwingIn, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_7", $rt_wrapFunction1(cbgm_Interpolation$SwingIn__init_0)],
cbgssu_ScrollPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgssu_TextField$TextFieldFilter, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_SequenceSet, "SequenceSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_152", $rt_wrapFunction1(jur_SequenceSet__init_0), "$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName", $rt_wrapFunction0(jur_SequenceSet_getName), "$first", $rt_wrapFunction1(jur_SequenceSet_first), "$indexOf3", $rt_wrapFunction3(jur_SequenceSet_indexOf), "$lastIndexOf3", $rt_wrapFunction3(jur_SequenceSet_lastIndexOf),
"$startsWith1", $rt_wrapFunction2(jur_SequenceSet_startsWith)],
cbgssu_ScrollPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane, 0, cbgssu_ScrollPane, [], 0, 3, 0, 0, 0,
cbgur_ReflectionException, "ReflectionException", 12, jl_Exception, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction2(cbgur_ReflectionException__init_)],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_AltGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
cbgggpr_ModelInstanceRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
jur_UCIRangeSet, "UCIRangeSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_114", $rt_wrapFunction1(jur_UCIRangeSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
cbgssu_TextField$DefaultOnscreenKeyboard, 0, jl_Object, [cbgssu_TextField$OnscreenKeyboard], 0, 3, 0, 0, 0,
cbgm_CatmullRomSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
cbgm_Circle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgssa_AlphaAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssu_SpriteDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cbgssu_List$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_List$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, jnc_CodingErrorAction_$callClinit, ["$_init_", $rt_wrapFunction1(jnc_CodingErrorAction__init_0)]]);
$rt_metadata([jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, jl_Boolean_$callClinit, ["$_init_141", $rt_wrapFunction1(jl_Boolean__init_0), "$booleanValue", $rt_wrapFunction0(jl_Boolean_booleanValue)],
cbgm_Bresenham2, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_NoSuchElementException, "NoSuchElementException", 20, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_NoSuchElementException__init_0), "$_init_", $rt_wrapFunction1(ju_NoSuchElementException__init_2)],
cgxgbtf_HEXCoder, 0, jl_Object, [], 0, 3, 0, cgxgbtf_HEXCoder_$callClinit, 0,
cbgssa_ScaleToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cgtr_VanDerCorputQuasiRandom, "VanDerCorputQuasiRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_VanDerCorputQuasiRandom__init_0), "$_init_18", $rt_wrapFunction1(cgtr_VanDerCorputQuasiRandom__init_2), "$nextLong", $rt_wrapFunction0(cgtr_VanDerCorputQuasiRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_VanDerCorputQuasiRandom_next), "$nextExclusiveDouble", $rt_wrapFunction0(cgtr_VanDerCorputQuasiRandom_nextExclusiveDouble), "$nextExclusiveSignedDouble", $rt_wrapFunction0(cgtr_VanDerCorputQuasiRandom_nextExclusiveSignedDouble),
"$nextExclusiveFloat", $rt_wrapFunction0(cgtr_VanDerCorputQuasiRandom_nextExclusiveFloat), "$nextGaussian0", $rt_wrapFunction0(cgtr_VanDerCorputQuasiRandom_nextGaussian)],
cbgm_Octree$Collider, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_BackReferenceSet, "BackReferenceSet", 21, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction2(jur_BackReferenceSet__init_0), "$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
jur_DotQuantifierSet, "DotQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_156", $rt_wrapFunction4(jur_DotQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
cbgggpv_WeightMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, otcit_FloatAnalyzer_$callClinit, 0,
cbgg_Composite, 0, jl_Enum, [], 12, 3, 0, cbgg_Composite_$callClinit, ["$getValue0", $rt_wrapFunction0(cbgg_Composite_getValue)],
cbgm_CumulativeDistribution, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, 0, jl_Enum, [], 12, 3, 0, cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit, 0,
cbgggpi_DynamicsModifier$FaceDirection, 0, cbgggpi_DynamicsModifier, [], 0, 3, 0, 0, 0,
cbggg_ShaderProgram, "ShaderProgram", 17, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, ["$_init_84", $rt_wrapFunction2(cbggg_ShaderProgram__init_0), "$createProgram", $rt_wrapFunction0(cbggg_ShaderProgram_createProgram), "$getLog", $rt_wrapFunction0(cbggg_ShaderProgram_getLog), "$isCompiled", $rt_wrapFunction0(cbggg_ShaderProgram_isCompiled), "$fetchUniformLocation", $rt_wrapFunction2(cbggg_ShaderProgram_fetchUniformLocation0), "$setUniformi", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformi),
"$setUniformMatrix", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformMatrix), "$setUniformMatrix0", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformMatrix0), "$setUniformMatrix1", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformMatrix1), "$setVertexAttribute", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_ShaderProgram_setVertexAttribute(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$bind", $rt_wrapFunction0(cbggg_ShaderProgram_bind), "$disableVertexAttribute", $rt_wrapFunction1(cbggg_ShaderProgram_disableVertexAttribute),
"$disableVertexAttribute0", $rt_wrapFunction1(cbggg_ShaderProgram_disableVertexAttribute0), "$enableVertexAttribute", $rt_wrapFunction1(cbggg_ShaderProgram_enableVertexAttribute), "$getAttributeLocation", $rt_wrapFunction1(cbggg_ShaderProgram_getAttributeLocation)],
cbg_Files$FileType, "Files$FileType", 10, jl_Enum, [], 12, 3, 0, cbg_Files$FileType_$callClinit, 0,
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_161", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$_init_55", $rt_wrapFunction2(cbggg_IndexBufferObject__init_0), "$_init_4", $rt_wrapFunction1(cbggg_IndexBufferObject__init_2), "$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices0", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind),
"$unbind1", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind)],
cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbggg_IndexArray__init_0)],
cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgg_Camera__init_)],
cbgg_OrthographicCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgg_OrthographicCamera__init_0), "$update", $rt_wrapFunction0(cbgg_OrthographicCamera_update), "$update1", $rt_wrapFunction1(cbgg_OrthographicCamera_update0)],
cbgggpi_SpawnInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_88", $rt_wrapFunction3(jur_CharClass$3__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$3_contains)],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_86", $rt_wrapFunction4(jur_CharClass$4__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_87", $rt_wrapFunction2(jur_CharClass$1__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$1_contains)],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_88", $rt_wrapFunction3(jur_CharClass$2__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_87", $rt_wrapFunction2(jur_CharClass$7__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$7_contains)],
cbgssu_ScrollPane$ScrollPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_89", $rt_wrapFunction3(jur_CharClass$8__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$8_contains)],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_86", $rt_wrapFunction4(jur_CharClass$5__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_87", $rt_wrapFunction2(jur_CharClass$6__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$6_contains)],
cgxgbt_TeaGraphics$FullscreenChanged, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
jur_DotSet, "DotSet", 21, jur_JointSet, [], 4, 0, 0, 0, ["$_init_157", $rt_wrapFunction1(jur_DotSet__init_0), "$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType1", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_89", $rt_wrapFunction3(jur_CharClass$9__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$9_contains)],
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, jl_Character_$callClinit, 0,
jur_CICharSet, "CICharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_154", $rt_wrapFunction1(jur_CICharSet__init_0), "$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName", $rt_wrapFunction0(jur_CICharSet_getName)],
jur_SupplCharSet, "SupplCharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_SupplCharSet__init_0), "$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName", $rt_wrapFunction0(jur_SupplCharSet_getName), "$getCodePoint", $rt_wrapFunction0(jur_SupplCharSet_getCodePoint), "$first", $rt_wrapFunction1(jur_SupplCharSet_first)],
otjc_JSNumber, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgssa_ColorAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
jl_StrictMath, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgggm_NodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Queue, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgm_Ellipse, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgg_PixmapEmu$2, 0, jl_Object, [], 32, 0, 0, cbgg_PixmapEmu$2_$callClinit, 0,
cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(cbgu_IntMap__init_0), "$_init_121", $rt_wrapFunction2(cbgu_IntMap__init_2), "$place", $rt_wrapFunction1(cbgu_IntMap_place), "$put12", $rt_wrapFunction2(cbgu_IntMap_put), "$get3", $rt_wrapFunction1(cbgu_IntMap_get), "$remove", $rt_wrapFunction1(cbgu_IntMap_remove), "$containsValue", $rt_wrapFunction2(cbgu_IntMap_containsValue)],
jnci_Iso8859Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_38", $rt_wrapFunction1(jnci_Iso8859Encoder__init_0), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Quaternion_$callClinit, ["$_init_3", $rt_wrapFunction4(cbgm_Quaternion__init_1), "$_init_0", $rt_wrapFunction0(cbgm_Quaternion__init_2), "$set8", $rt_wrapFunction4(cbgm_Quaternion_set), "$idt0", $rt_wrapFunction0(cbgm_Quaternion_idt)],
cbgggpv_GradientColorValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, cbgggpv_GradientColorValue_$callClinit, 0]);
$rt_metadata([cbgggpi_RegionInfluencer$Animated, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cgtrd_CauchyDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgtrd_CauchyDistribution__init_), "$getMedian", $rt_wrapFunction0(cgtrd_CauchyDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_CauchyDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_CauchyDistribution_nextDouble)],
jnc_StandardCharsets, 0, jl_Object, [], 4, 3, 0, jnc_StandardCharsets_$callClinit, 0,
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_185", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
jn_ShortBufferOverByteBufferLittleEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_ShortBufferOverByteBufferLittleEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement1", $rt_wrapFunction1(jn_ShortBufferOverByteBufferLittleEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_ShortBufferOverByteBufferLittleEndian_putElement)],
jur_UEOLSet, "UEOLSet", 21, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_UEOLSet__init_0), "$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UEOLSet_getName)],
cgt_RaisedNormalScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_RaisedNormalScreen_show), "$_init_118", $rt_wrapFunction1(cgt_RaisedNormalScreen__init_0), "$render0", $rt_wrapFunction1(cgt_RaisedNormalScreen_render), "$resize", $rt_wrapFunction2(cgt_RaisedNormalScreen_resize)],
cgxgbtp_AssetType, "AssetType", 8, jl_Enum, [], 12, 3, 0, cgxgbtp_AssetType_$callClinit, 0,
cbgssu_ActorGestureListener$2, 0, jl_Object, [], 32, 0, 0, cbgssu_ActorGestureListener$2_$callClinit, 0,
cbgssa_RemoveAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
jur_UCICharSet, "UCICharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_154", $rt_wrapFunction1(jur_UCICharSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCICharSet_getName)],
cbgi_GestureDetector$GestureAdapter, 0, jl_Object, [cbgi_GestureDetector$GestureListener], 0, 3, 0, 0, 0,
cbgssu_ActorGestureListener$1, 0, cbgi_GestureDetector$GestureAdapter, [], 0, 0, 0, 0, 0,
jnci_Iso8859Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_Iso8859Charset__init_0), "$newEncoder", $rt_wrapFunction0(jnci_Iso8859Charset_newEncoder)],
cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureWrap_$callClinit, ["$getGLEnum", $rt_wrapFunction0(cbgg_Texture$TextureWrap_getGLEnum)],
cbgssu_Slider, 0, cbgssu_ProgressBar, [], 0, 3, 0, 0, 0,
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_146", function(var_1, var_2, var_3, var_4, var_5) { jur_CompositeGroupQuantifierSet__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 21, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_146", function(var_1, var_2, var_3, var_4, var_5) { jur_RelCompositeGroupQuantifierSet__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
cgtd_BitConversion, 0, jl_Object, [], 4, 3, 0, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_ArrayList__init_0), "$_init_4", $rt_wrapFunction1(ju_ArrayList__init_2), "$ensureCapacity", $rt_wrapFunction1(ju_ArrayList_ensureCapacity), "$get3", $rt_wrapFunction1(ju_ArrayList_get), "$size0", $rt_wrapFunction0(ju_ArrayList_size), "$add10", $rt_wrapFunction1(ju_ArrayList_add), "$add1", $rt_wrapFunction2(ju_ArrayList_add0), "$remove", $rt_wrapFunction1(ju_ArrayList_remove)],
cgxgbt_TeaApplication$4, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_170", $rt_wrapFunction1(cgxgbt_TeaApplication$4__init_0), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$4_onSuccess)],
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalMonitorStateException__init_0)],
cgxgbt_TeaApplication$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_170", $rt_wrapFunction1(cgxgbt_TeaApplication$5__init_0), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$5_onSuccess), "$onFailure", $rt_wrapFunction1(cgxgbt_TeaApplication$5_onFailure)],
cgxgbt_TeaApplication$6, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_170", $rt_wrapFunction1(cgxgbt_TeaApplication$6__init_0), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$6_onSuccess), "$onFailure", $rt_wrapFunction1(cgxgbt_TeaApplication$6_onFailure)],
cgxgbt_TeaApplication$7, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_170", $rt_wrapFunction1(cgxgbt_TeaApplication$7__init_0), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$7_onSuccess), "$onFailure", $rt_wrapFunction1(cgxgbt_TeaApplication$7_onFailure)],
cbgssu_Value$9, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cgxgbt_TeaApplication$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_170", $rt_wrapFunction1(cgxgbt_TeaApplication$1__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbt_TeaApplication$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaApplication$1_handleEvent$exported$0)],
cgxgbt_TeaApplication$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$_init_170", $rt_wrapFunction1(cgxgbt_TeaApplication$2__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbt_TeaApplication$2_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaApplication$2_handleEvent$exported$0)],
cgxgbtdt_TypedArrays, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtdt_TypedArrays__init_)],
cgxgbt_TeaApplication$3, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$_init_170", $rt_wrapFunction1(cgxgbt_TeaApplication$3__init_0), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$3_onSuccess)],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 21, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
cbgssu_Value$6, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$6__init_0)],
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgssu_Value$5, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$5__init_0)],
cbgssu_Value$8, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Value$7, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Value$2, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$2__init_0)],
cgxgbt_TeaApplication$8, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaApplication$8_$callClinit, 0,
cbgssu_Value$1, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$1__init_0)],
cbgggpv_CylinderSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, jnc_Charset$Charsets_$callClinit, 0,
cbgssu_Value$4, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$4__init_0)],
cbgssu_Value$3, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$3__init_0)],
cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_TeaApplicationLogger__init_0), "$log0", $rt_wrapFunction2(cgxgbt_TeaApplicationLogger_log), "$error0", $rt_wrapFunction2(cgxgbt_TeaApplicationLogger_error)],
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FSet$PossessiveFSet__init_0), "$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
cbgm_Interpolation$ExpOut, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(cbgm_Interpolation$ExpOut__init_0)],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 21, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_146", function(var_1, var_2, var_3, var_4, var_5) { jur_PosCompositeGroupQuantifierSet__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
cbgssu_FocusListener$FocusEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureFilter_$callClinit, ["$getGLEnum", $rt_wrapFunction0(cbgg_Texture$TextureFilter_getGLEnum)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_32", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
cbgss_InputEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
jl_NoSuchMethodException, "NoSuchMethodException", 25, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NoSuchMethodException__init_0)],
jn_IntBufferOverByteBufferBigEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$_init_46", function(var_1, var_2, var_3, var_4, var_5, var_6) { jn_IntBufferOverByteBufferBigEndian__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferBigEndian_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverByteBufferBigEndian_putElement)],
jl_NullPointerException, "NullPointerException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NullPointerException__init_1), "$_init_0", $rt_wrapFunction0(jl_NullPointerException__init_2)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_37", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
cbgssu_ImageButton$ImageButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
otr_EventQueue$Event, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgtr_Xoshiro128PlusPlusRandom, "Xoshiro128PlusPlusRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_Xoshiro128PlusPlusRandom__init_0), "$_init_148", $rt_wrapFunction4(cgtr_Xoshiro128PlusPlusRandom__init_2), "$nextLong", $rt_wrapFunction0(cgtr_Xoshiro128PlusPlusRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_Xoshiro128PlusPlusRandom_next), "$nextInt", $rt_wrapFunction0(cgtr_Xoshiro128PlusPlusRandom_nextInt), "$nextFloat", $rt_wrapFunction0(cgtr_Xoshiro128PlusPlusRandom_nextFloat)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
jur_PatternSyntaxException, "PatternSyntaxException", 21, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_129", $rt_wrapFunction3(jur_PatternSyntaxException__init_0), "$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
cgt_TriangularScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_TriangularScreen_show), "$_init_118", $rt_wrapFunction1(cgt_TriangularScreen__init_0), "$render0", $rt_wrapFunction1(cgt_TriangularScreen_render), "$resize", $rt_wrapFunction2(cgt_TriangularScreen_resize)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
cgtrd_LogCauchyDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgtrd_LogCauchyDistribution__init_0), "$getMedian", $rt_wrapFunction0(cgtrd_LogCauchyDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_LogCauchyDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_LogCauchyDistribution_nextDouble)],
cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_Mesh$VertexDataType_$callClinit, 0,
cbgssu_TextField$TextFieldStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$TangentialAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
cbgggpv_NumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, cbgu_ObjectMap_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgu_ObjectMap__init_1), "$_init_4", $rt_wrapFunction1(cbgu_ObjectMap__init_2), "$_init_121", $rt_wrapFunction2(cbgu_ObjectMap__init_4), "$place0", $rt_wrapFunction1(cbgu_ObjectMap_place), "$locateKey0", $rt_wrapFunction1(cbgu_ObjectMap_locateKey), "$put1", $rt_wrapFunction2(cbgu_ObjectMap_put), "$get0", $rt_wrapFunction1(cbgu_ObjectMap_get), "$remove0", $rt_wrapFunction1(cbgu_ObjectMap_remove), "$clear8",
$rt_wrapFunction0(cbgu_ObjectMap_clear), "$containsKey", $rt_wrapFunction1(cbgu_ObjectMap_containsKey), "$resize2", $rt_wrapFunction1(cbgu_ObjectMap_resize)],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$matcher", $rt_wrapFunction1(jur_Pattern_matcher), "$split1", $rt_wrapFunction2(jur_Pattern_split0), "$split0", $rt_wrapFunction1(jur_Pattern_split), "$pattern1", $rt_wrapFunction0(jur_Pattern_pattern), "$groupCount0", $rt_wrapFunction0(jur_Pattern_groupCount), "$compCount0", $rt_wrapFunction0(jur_Pattern_compCount), "$consCount0", $rt_wrapFunction0(jur_Pattern_consCount)],
cgtrd_ParetoDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgtrd_ParetoDistribution__init_0), "$getMedian", $rt_wrapFunction0(cgtrd_ParetoDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_ParetoDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_ParetoDistribution_nextDouble)],
ji_UnsupportedEncodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 21, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
cbgm_Interpolation$12, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$12__init_0)],
cbgssu_Touchpad$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$13, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$13__init_0)],
cbgm_Rectangle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, cbgm_Rectangle_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Rectangle__init_0)],
cbgm_Interpolation$14, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$14__init_0)],
cbgm_Interpolation$10, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$10__init_0)],
cbgm_Interpolation$11, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$11__init_0)],
cbgggp_ParallelArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbt_TeaGraphics$1, 0, jl_Object, [cgxgbt_TeaGraphics$FullscreenChanged], 0, 0, 0, 0, ["$_init_102", $rt_wrapFunction1(cgxgbt_TeaGraphics$1__init_0), "$fullscreenChanged", $rt_wrapFunction0(cgxgbt_TeaGraphics$1_fullscreenChanged), "$fullscreenChanged$exported$0", $rt_wrapFunction0(cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0)],
cbgm_Polygon, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgggmd_ModelAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_ParticleEffectActor, 0, cbgss_Actor, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Single, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
cbg_InputAdapter, 0, jl_Object, [cbg_InputProcessor], 0, 3, 0, 0, 0,
jur_UnicodeCategory, "UnicodeCategory", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_UnicodeCategory__init_0), "$contains0", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 21, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_UnicodeCategoryScope__init_0), "$contains0", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
cgxgbtp_Blob, "Blob", 8, jl_Object, [], 4, 3, 0, 0, ["$_init_133", $rt_wrapFunction2(cgxgbtp_Blob__init_0), "$getData", $rt_wrapFunction0(cgxgbtp_Blob_getData), "$getImage", $rt_wrapFunction0(cgxgbtp_Blob_getImage), "$setImage", $rt_wrapFunction1(cgxgbtp_Blob_setImage), "$length", $rt_wrapFunction0(cgxgbtp_Blob_length), "$get7", $rt_wrapFunction1(cgxgbtp_Blob_get), "$read4", $rt_wrapFunction0(cgxgbtp_Blob_read), "$toBase64", $rt_wrapFunction0(cgxgbtp_Blob_toBase64)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 23, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(jnc_UnmappableCharacterException__init_0), "$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_FloatAnalyzer$Result__init_0)],
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 21, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_135", $rt_wrapFunction2(jur_UCIDecomposedCharSet__init_0)],
cbgssu_TiledDrawable, 0, cbgssu_TextureRegionDrawable, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$CentripetalAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_183", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Blending_$callClinit, 0]);
$rt_metadata([cgxgbt_TeaApplication$AppState, 0, jl_Enum, [], 12, 3, 0, cgxgbt_TeaApplication$AppState_$callClinit, 0,
otjt_Uint8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
cgtt_TeaVMLauncher, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Long_$callClinit, 0,
cgt_ChiSquareScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ChiSquareScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ChiSquareScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ChiSquareScreen_render), "$resize", $rt_wrapFunction2(cgt_ChiSquareScreen_resize)],
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_SequenceSet$IntHash__init_0), "$put9", $rt_wrapFunction2(jur_SequenceSet$IntHash_put), "$get11", $rt_wrapFunction1(jur_SequenceSet$IntHash_get)],
jl_ArithmeticException, "ArithmeticException", 25, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_ArithmeticException__init_0)],
cbgssu_Image, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Format_$callClinit, 0,
cbgggpi_RegionInfluencer$Random, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cgxgbt_TeaApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, ["$isFixedSizeApplication", $rt_wrapFunction0(cgxgbt_TeaApplicationConfiguration_isFixedSizeApplication), "$isAutoSizeApplication", $rt_wrapFunction0(cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication), "$_init_", $rt_wrapFunction1(cgxgbt_TeaApplicationConfiguration__init_0)],
cgt_ZipfianScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ZipfianScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ZipfianScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ZipfianScreen_render), "$resize", $rt_wrapFunction2(cgt_ZipfianScreen_resize)],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_78", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
jur_CharClass$18, "CharClass$18", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_90", $rt_wrapFunction2(jur_CharClass$18__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)],
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
cbgmo_RectangleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_87", $rt_wrapFunction2(jur_CharClass$13__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$13_contains)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_87", $rt_wrapFunction2(jur_CharClass$12__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$12_contains)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_86", $rt_wrapFunction4(jur_CharClass$11__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$11_contains)],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_86", $rt_wrapFunction4(jur_CharClass$10__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$10_contains)],
cgt_DigitalSinScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_DigitalSinScreen_show), "$_init_118", $rt_wrapFunction1(cgt_DigitalSinScreen__init_0), "$render0", $rt_wrapFunction1(cgt_DigitalSinScreen_render), "$resize", $rt_wrapFunction2(cgt_DigitalSinScreen_resize)],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_86", $rt_wrapFunction4(jur_CharClass$17__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$17_contains)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_86", $rt_wrapFunction4(jur_CharClass$16__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$16_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_89", $rt_wrapFunction3(jur_CharClass$15__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_89", $rt_wrapFunction3(jur_CharClass$14__init_0), "$contains0", $rt_wrapFunction1(jur_CharClass$14_contains)],
cbgssu_CheckBox$CheckBoxStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_4", $rt_wrapFunction1(jl_StringBuilder__init_1), "$_init_0", $rt_wrapFunction0(jl_StringBuilder__init_2), "$append", $rt_wrapFunction1(jl_StringBuilder_append), "$append1", $rt_wrapFunction1(jl_StringBuilder_append4), "$append2", $rt_wrapFunction1(jl_StringBuilder_append1), "$append28", $rt_wrapFunction1(jl_StringBuilder_append5), "$append19", $rt_wrapFunction1(jl_StringBuilder_append3), "$append18", $rt_wrapFunction1(jl_StringBuilder_append2),
"$append0", $rt_wrapFunction1(jl_StringBuilder_append0), "$append20", $rt_wrapFunction3(jl_StringBuilder_append6), "$append15", $rt_wrapFunction1(jl_StringBuilder_append7), "$insert18", $rt_wrapFunction2(jl_StringBuilder_insert), "$insert17", $rt_wrapFunction2(jl_StringBuilder_insert0), "$insert16", $rt_wrapFunction2(jl_StringBuilder_insert1), "$insert13", $rt_wrapFunction4(jl_StringBuilder_insert2), "$insert14", $rt_wrapFunction2(jl_StringBuilder_insert3), "$insert15", $rt_wrapFunction2(jl_StringBuilder_insert4),
"$delete", $rt_wrapFunction2(jl_StringBuilder_delete), "$deleteCharAt", $rt_wrapFunction1(jl_StringBuilder_deleteCharAt), "$insert19", $rt_wrapFunction2(jl_StringBuilder_insert5), "$substring0", $rt_wrapFunction2(jl_StringBuilder_substring), "$setLength", $rt_wrapFunction1(jl_StringBuilder_setLength), "$getChars", $rt_wrapFunction4(jl_StringBuilder_getChars), "$subSequence", $rt_wrapFunction2(jl_StringBuilder_subSequence), "$insert8", $rt_wrapFunction4(jl_StringBuilder_insert6), "$append5", $rt_wrapFunction3(jl_StringBuilder_append8),
"$length", $rt_wrapFunction0(jl_StringBuilder_length), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert7), "$insert6", $rt_wrapFunction2(jl_StringBuilder_insert8), "$insert5", $rt_wrapFunction2(jl_StringBuilder_insert9), "$insert4", $rt_wrapFunction2(jl_StringBuilder_insert10), "$insert2", $rt_wrapFunction2(jl_StringBuilder_insert11), "$insert0", $rt_wrapFunction2(jl_StringBuilder_insert12)],
ju_ConcurrentModificationException, "ConcurrentModificationException", 20, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_ConcurrentModificationException__init_0)],
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Hashtable$1__init_0)],
cbgggpr_BillboardControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Hashtable$2__init_0)],
cgxgbt_TeaNet, 0, jl_Object, [cbg_Net], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_TeaNet__init_0)],
cbgggpv_ScaledNumericValue, 0, cbgggpv_RangedNumericValue, [], 0, 3, 0, 0, 0,
cbgssa_VisibleAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgggpi_ColorInfluencer$Random, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, ["$_init_171", $rt_wrapFunction1(cbgg_VertexAttributes__init_0), "$size0", $rt_wrapFunction0(cbgg_VertexAttributes_size), "$get8", $rt_wrapFunction1(cbgg_VertexAttributes_get)],
cbgm_CumulativeDistribution$CumulativeValue, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgt_PowerScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_PowerScreen_show), "$_init_118", $rt_wrapFunction1(cgt_PowerScreen__init_0), "$render0", $rt_wrapFunction1(cgt_PowerScreen_render), "$resize", $rt_wrapFunction2(cgt_PowerScreen_resize)],
cbgmc_Sphere, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgt_Ziggurat, 0, jl_Object, [], 0, 3, 0, cgt_Ziggurat_$callClinit, 0,
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
cbggg_GlyphLayout, "GlyphLayout", 18, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggg_GlyphLayout__init_), "$_init_188", $rt_wrapFunction2(cbggg_GlyphLayout__init_0), "$_init_189", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_GlyphLayout__init_1(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$_init_190", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_GlyphLayout__init_2(this, var_1, var_2, var_3,
var_4, var_5, var_6, var_7, var_8, var_9); }, "$setText0", $rt_wrapFunction2(cbggg_GlyphLayout_setText), "$setText1", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_GlyphLayout_setText0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setText", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_GlyphLayout_setText1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$reset2", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)],
cgt_Stringf, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_HdpiMode, 0, jl_Enum, [], 12, 3, 0, cbggg_HdpiMode_$callClinit, 0,
cbgssu_DragAndDrop$1, 0, cbgssu_DragListener, [], 0, 0, 0, 0, 0,
cbgssu_Label$LabelStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgt_LogCauchyScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_LogCauchyScreen_show), "$_init_118", $rt_wrapFunction1(cgt_LogCauchyScreen__init_0), "$render0", $rt_wrapFunction1(cgt_LogCauchyScreen_render), "$resize", $rt_wrapFunction2(cgt_LogCauchyScreen_resize)],
cbgggm_Node, 0, jl_Object, [], 0, 3, 0, 0, 0]);
$rt_metadata([cbgm_Octree$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cgxgbta_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_EarClippingTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_Quantifier, "Quantifier", 21, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$_init_26", $rt_wrapFunction2(jur_Quantifier__init_0), "$min3", $rt_wrapFunction0(jur_Quantifier_min), "$max2", $rt_wrapFunction0(jur_Quantifier_max), "$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_180", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
cbgg_PixmapEmu$DrawType, 0, jl_Enum, [], 12, 0, 0, cbgg_PixmapEmu$DrawType_$callClinit, 0,
cgt_BinomialScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_BinomialScreen_show), "$_init_118", $rt_wrapFunction1(cgt_BinomialScreen__init_0), "$render0", $rt_wrapFunction1(cgt_BinomialScreen_render), "$resize", $rt_wrapFunction2(cgt_BinomialScreen_resize)],
cgxgbt_TeaApplication, "TeaApplication", 7, jl_Object, [cbg_Application, jl_Runnable], 0, 3, 0, 0, ["$_init_162", $rt_wrapFunction2(cgxgbt_TeaApplication__init_), "$run", $rt_wrapFunction0(cgxgbt_TeaApplication_run), "$setApplicationListener", $rt_wrapFunction1(cgxgbt_TeaApplication_setApplicationListener), "$getPreloader", $rt_wrapFunction0(cgxgbt_TeaApplication_getPreloader), "$getConfig", $rt_wrapFunction0(cgxgbt_TeaApplication_getConfig), "$log0", $rt_wrapFunction2(cgxgbt_TeaApplication_log), "$error0",
$rt_wrapFunction2(cgxgbt_TeaApplication_error), "$setLogLevel", $rt_wrapFunction1(cgxgbt_TeaApplication_setLogLevel), "$getApplicationLogger", $rt_wrapFunction0(cgxgbt_TeaApplication_getApplicationLogger), "$getType2", $rt_wrapFunction0(cgxgbt_TeaApplication_getType), "$postRunnable", $rt_wrapFunction1(cgxgbt_TeaApplication_postRunnable), "$exit", $rt_wrapFunction0(cgxgbt_TeaApplication_exit), "$initBulletPhysics", $rt_wrapFunction1(cgxgbt_TeaApplication_initBulletPhysics), "$initBox2dPhysics", $rt_wrapFunction1(cgxgbt_TeaApplication_initBox2dPhysics),
"$initImGui", $rt_wrapFunction1(cgxgbt_TeaApplication_initImGui)],
cbgssa_ScaleByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_120", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0), "$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
cbg_LifecycleListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_52", $rt_wrapFunction3(jur_ReluctantQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
cbgggm_Animation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgur_ArrayReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Polyline, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgggpv_PointSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgg_Mesh, "Mesh", 16, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Mesh_$callClinit, ["$_init_138", $rt_wrapFunction4(cbgg_Mesh__init_1), "$_init_82", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$_init_172", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh__init_4(this, var_1, var_2, var_3, var_4, var_5); }, "$setVertices", $rt_wrapFunction3(cbgg_Mesh_setVertices), "$setIndices", $rt_wrapFunction1(cbgg_Mesh_setIndices), "$getNumIndices",
$rt_wrapFunction0(cbgg_Mesh_getNumIndices), "$getNumVertices", $rt_wrapFunction0(cbgg_Mesh_getNumVertices), "$bind2", $rt_wrapFunction1(cbgg_Mesh_bind), "$bind0", $rt_wrapFunction3(cbgg_Mesh_bind0), "$unbind2", $rt_wrapFunction1(cbgg_Mesh_unbind), "$unbind", $rt_wrapFunction3(cbgg_Mesh_unbind0), "$render2", $rt_wrapFunction2(cbgg_Mesh_render), "$render", $rt_wrapFunction4(cbgg_Mesh_render0), "$render3", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh_render1(this, var_1, var_2, var_3, var_4, var_5);
}, "$getVertexAttribute", $rt_wrapFunction1(cbgg_Mesh_getVertexAttribute), "$getVertexAttributes", $rt_wrapFunction0(cbgg_Mesh_getVertexAttributes), "$getIndicesBuffer", $rt_wrapFunction1(cbgg_Mesh_getIndicesBuffer)],
cgtr_PouchRandom, "PouchRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_PouchRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_PouchRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_PouchRandom_next)],
cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
otjb_Performance, 0, jl_Object, [otj_JSObject], 4, 3, 0, 0, 0,
jur_EOISet, "EOISet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_EOISet__init_0), "$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOISet_getName)],
cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_ObjectIntMap__init_0), "$_init_121", $rt_wrapFunction2(cbgu_ObjectIntMap__init_2), "$place0", $rt_wrapFunction1(cbgu_ObjectIntMap_place), "$locateKey0", $rt_wrapFunction1(cbgu_ObjectIntMap_locateKey), "$put10", $rt_wrapFunction2(cbgu_ObjectIntMap_put), "$get16", $rt_wrapFunction2(cbgu_ObjectIntMap_get), "$resize2", $rt_wrapFunction1(cbgu_ObjectIntMap_resize)],
cgt_ChiScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ChiScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ChiScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ChiScreen_render), "$resize", $rt_wrapFunction2(cgt_ChiScreen_resize)],
jn_ByteBufferImpl, 0, jn_ByteBuffer, [], 0, 0, 0, 0, ["$_init_27", $rt_wrapFunction2(jn_ByteBufferImpl__init_1), "$_init_116", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { jn_ByteBufferImpl__init_2(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$get7", $rt_wrapFunction1(jn_ByteBufferImpl_get), "$compact0", $rt_wrapFunction0(jn_ByteBufferImpl_compact), "$isReadOnly", $rt_wrapFunction0(jn_ByteBufferImpl_isReadOnly), "$asShortBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asShortBuffer),
"$getInt", $rt_wrapFunction1(jn_ByteBufferImpl_getInt), "$putInt", $rt_wrapFunction2(jn_ByteBufferImpl_putInt), "$asIntBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asIntBuffer), "$asFloatBuffer", $rt_wrapFunction0(jn_ByteBufferImpl_asFloatBuffer)],
jl_Thread$SleepHandler, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event, jl_ThreadInterruptHandler], 0, 0, 0, 0, ["$_init_59", $rt_wrapFunction2(jl_Thread$SleepHandler__init_0), "$run", $rt_wrapFunction0(jl_Thread$SleepHandler_run)],
cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_30", $rt_wrapFunction2(cbgm_Plane__init_0), "$set9", $rt_wrapFunction3(cbgm_Plane_set)],
cbgu_Json$Serializer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Frustum__init_0), "$update2", $rt_wrapFunction1(cbgm_Frustum_update)],
cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, ["$_init_143", $rt_wrapFunction2(cbgmc_Ray__init_0)],
cbgssu_DragScrollListener$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cgxgbt_TeaInput, 0, jl_Object, [cbg_Input, cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, ["$_init_169", $rt_wrapFunction1(cgxgbt_TeaInput__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbt_TeaInput_handleEvent), "$reset2", $rt_wrapFunction0(cgxgbt_TeaInput_reset), "$setDelta", $rt_wrapFunction3(cgxgbt_TeaInput_setDelta), "$getRelativeX", $rt_wrapFunction2(cgxgbt_TeaInput_getRelativeX0), "$getRelativeY", $rt_wrapFunction2(cgxgbt_TeaInput_getRelativeY0), "$getRelativeX0", $rt_wrapFunction2(cgxgbt_TeaInput_getRelativeX1),
"$getRelativeY0", $rt_wrapFunction2(cgxgbt_TeaInput_getRelativeY1), "$isKeyPressed", $rt_wrapFunction1(cgxgbt_TeaInput_isKeyPressed), "$isKeyJustPressed", $rt_wrapFunction1(cgxgbt_TeaInput_isKeyJustPressed), "$setInputProcessor", $rt_wrapFunction1(cgxgbt_TeaInput_setInputProcessor), "$isCursorCatched", $rt_wrapFunction0(cgxgbt_TeaInput_isCursorCatched), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaInput_handleEvent$exported$0)],
cbgssu_DragScrollListener$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
jnc_BufferUnderflowException, "BufferUnderflowException", 23, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferUnderflowException__init_0)],
cbgm_Intersector$SplitTriangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Table$5, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$5__init_0)],
cbgssu_Table$4, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$4__init_0)],
cbgssu_Table$3, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$3__init_0)],
cbgssu_Table$2, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$2__init_0)],
cbgssu_SplitPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Table$1, 0, cbgu_Pool, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$1__init_0)],
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 1, 3, 0, 0, ["$addEventListener$exported$0", $rt_wrapFunction2(otja_XMLHttpRequest_addEventListener$exported$0), "$removeEventListener$exported$1", $rt_wrapFunction2(otja_XMLHttpRequest_removeEventListener$exported$1), "$removeEventListener$exported$2", $rt_wrapFunction3(otja_XMLHttpRequest_removeEventListener$exported$2), "$dispatchEvent$exported$3", $rt_wrapFunction1(otja_XMLHttpRequest_dispatchEvent$exported$3), "$addEventListener$exported$4",
$rt_wrapFunction3(otja_XMLHttpRequest_addEventListener$exported$4)],
cbgssu_Window$WindowStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgt_ErlangScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ErlangScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ErlangScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ErlangScreen_render), "$resize", $rt_wrapFunction2(cgt_ErlangScreen_resize)],
jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_Gdx2DPixmapEmu, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_136", $rt_wrapFunction4(cbggg_Gdx2DPixmapEmu__init_0), "$_init_45", $rt_wrapFunction3(cbggg_Gdx2DPixmapEmu__init_2), "$dispose", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_dispose), "$drawPixmap1", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbggg_Gdx2DPixmapEmu_drawPixmap(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$drawPixmap2", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_Gdx2DPixmapEmu_drawPixmap0(this,
var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$setBlend", $rt_wrapFunction1(cbggg_Gdx2DPixmapEmu_setBlend), "$getPixels0", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_getPixels), "$getHeight", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_getHeight), "$getWidth", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_getWidth), "$getFormat0", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_getFormat), "$getGLInternalFormat", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_getGLInternalFormat), "$getGLFormat", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_getGLFormat),
"$getGLType", $rt_wrapFunction0(cbggg_Gdx2DPixmapEmu_getGLType)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, ["$appendReplacement", $rt_wrapFunction2(jur_Matcher_appendReplacement), "$reset3", $rt_wrapFunction0(jur_Matcher_reset), "$appendTail", $rt_wrapFunction1(jur_Matcher_appendTail), "$replaceAll", $rt_wrapFunction1(jur_Matcher_replaceAll), "$group", $rt_wrapFunction1(jur_Matcher_group), "$find1", $rt_wrapFunction1(jur_Matcher_find0), "$find0", $rt_wrapFunction0(jur_Matcher_find), "$start", $rt_wrapFunction1(jur_Matcher_start0), "$end0", $rt_wrapFunction1(jur_Matcher_end0),
"$start12", $rt_wrapFunction0(jur_Matcher_start), "$end1", $rt_wrapFunction0(jur_Matcher_end), "$hasTransparentBounds", $rt_wrapFunction0(jur_Matcher_hasTransparentBounds), "$_init_151", $rt_wrapFunction2(jur_Matcher__init_0)],
jur_DotAllSet, "DotAllSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_DotAllSet__init_0), "$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType1", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)]]);
$rt_metadata([cbgm_BSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_153", $rt_wrapFunction2(jur_HangulDecomposedCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
cbgssu_Tree$TreeStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssa_RotateToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cgtr_AceRandom, "AceRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_AceRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_AceRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_AceRandom_next)],
cgxgbtp_AssetDownloadImpl$1$1, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$_init_60", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$1$1__init_0), "$handleEvent", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$1$1_handleEvent), "$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$1$1_handleEvent$exported$0)],
cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 18, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun__init_), "$appendRun", $rt_wrapFunction1(cbggg_GlyphLayout$GlyphRun_appendRun), "$reset2", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
jlr_InvocationTargetException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
cbgssu_ImageTextButton$ImageTextButtonStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
cbgggpe_RegularEmitter$EmissionMode, 0, jl_Enum, [], 12, 3, 0, cbgggpe_RegularEmitter$EmissionMode_$callClinit, 0,
jl_Object$NotifyListener, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event], 3, 0, 0, 0, 0,
jm_Multiplication, 0, jl_Object, [], 0, 0, 0, jm_Multiplication_$callClinit, 0,
jur_WordBoundary, "WordBoundary", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_141", $rt_wrapFunction1(jur_WordBoundary__init_0), "$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName", $rt_wrapFunction0(jur_WordBoundary_getName)],
cbgssu_Dialog$4$1, 0, jl_Object, [jl_Runnable], 0, 0, 0, 0, 0,
cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Double_$callClinit, ["$_init_182", $rt_wrapFunction1(jl_Double__init_0), "$doubleValue", $rt_wrapFunction0(jl_Double_doubleValue), "$longValue", $rt_wrapFunction0(jl_Double_longValue), "$toString", $rt_wrapFunction0(jl_Double_toString0)],
cbgu_Json$ReadOnlySerializer, 0, jl_Object, [cbgu_Json$Serializer], 1, 3, 0, 0, 0,
cbgssu_Skin$5, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Skin$1, 0, cbgu_Json, [], 0, 0, 0, 0, 0,
cbgssu_Skin$2, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Skin$3, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Skin$4, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Slider$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
otjb_StorageProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjb_Window, 0, jl_Object, [otj_JSObject, otjb_WindowEventTarget, otjb_StorageProvider, otjc_JSArrayReader], 1, 3, 0, 0, ["$addEventListener$exported$0", $rt_wrapFunction2(otjb_Window_addEventListener$exported$0), "$removeEventListener$exported$1", $rt_wrapFunction2(otjb_Window_removeEventListener$exported$1), "$get$exported$2", $rt_wrapFunction1(otjb_Window_get$exported$2), "$removeEventListener$exported$3", $rt_wrapFunction3(otjb_Window_removeEventListener$exported$3), "$dispatchEvent$exported$4", $rt_wrapFunction1(otjb_Window_dispatchEvent$exported$4),
"$getLength$exported$5", $rt_wrapFunction0(otjb_Window_getLength$exported$5), "$addEventListener$exported$6", $rt_wrapFunction3(otjb_Window_addEventListener$exported$6)],
cgt_CauchyAlternateDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_21", $rt_wrapFunction3(cgt_CauchyAlternateDistribution__init_), "$getMedian", $rt_wrapFunction0(cgt_CauchyAlternateDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgt_CauchyAlternateDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgt_CauchyAlternateDistribution_nextDouble)],
cbgssu_Cell, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbgssu_Cell_$callClinit, 0,
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgssa_TouchableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgss_Stage, 0, cbg_InputAdapter, [cbgu_Disposable], 0, 3, 0, 0, 0,
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 21, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_52", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet__init_0), "$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
jur_Matcher$1, "Matcher$1", 21, jl_Object, [], 0, 0, 0, 0, ["$_init_178", $rt_wrapFunction2(jur_Matcher$1__init_0), "$toString", $rt_wrapFunction0(jur_Matcher$1_toString)],
cbgssu_Tooltip$1, 0, cbgssu_Container, [], 0, 0, 0, 0, 0,
cbgssa_RemoveListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cgt_KnobScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_KnobScreen_show), "$_init_118", $rt_wrapFunction1(cgt_KnobScreen__init_0), "$render0", $rt_wrapFunction1(cgt_KnobScreen_render), "$resize", $rt_wrapFunction2(cgt_KnobScreen_resize)],
jl_NumberFormatException, "NumberFormatException", 25, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NumberFormatException__init_2), "$_init_", $rt_wrapFunction1(jl_NumberFormatException__init_1)],
cgtr_TrimRandom, "TrimRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_TrimRandom__init_0), "$nextLong", $rt_wrapFunction0(cgtr_TrimRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_TrimRandom_next)],
cgxgbtp_Preloader$Asset, "Preloader$Asset", 8, jl_Object, [], 0, 3, 0, 0, ["$_init_49", $rt_wrapFunction4(cgxgbtp_Preloader$Asset__init_0)],
cgxgbt_TeaClipboard, 0, jl_Object, [cbgu_Clipboard], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_TeaClipboard__init_0)],
cbgssu_Button$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssa_SizeToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, ["$_init_70", $rt_wrapFunction2(cbgu_Array$ArrayIterator__init_0), "$hasNext", $rt_wrapFunction0(cbgu_Array$ArrayIterator_hasNext), "$next0", $rt_wrapFunction0(cbgu_Array$ArrayIterator_next)],
cgtrd_ChiDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_163", $rt_wrapFunction2(cgtrd_ChiDistribution__init_), "$getMean", $rt_wrapFunction0(cgtrd_ChiDistribution_getMean), "$setParameters", $rt_wrapFunction3(cgtrd_ChiDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_ChiDistribution_nextDouble)],
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
cgt_ArcsineScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ArcsineScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ArcsineScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ArcsineScreen_render), "$resize", $rt_wrapFunction2(cgt_ArcsineScreen_resize)],
cbgggm_NodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0]);
$rt_metadata([cbgggpv_EllipseSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$Single, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cgxgbtd_TeaTypedArrays, 0, cgxgbtdt_TypedArrays, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtd_TeaTypedArrays__init_), "$createFloat32Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createFloat32Array), "$createInt32Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createInt32Array), "$createInt16Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createInt16Array), "$createInt8Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createInt8Array), "$createUint8Array", $rt_wrapFunction1(cgxgbtd_TeaTypedArrays_createUint8Array)],
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$_init_154", $rt_wrapFunction1(jur_HighSurrogateCharSet__init_0), "$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_HighSurrogateCharSet_first),
"$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
cbgssu_Table$DebugRect, "Table$DebugRect", 15, cbgm_Rectangle, [], 0, 3, 0, cbgssu_Table$DebugRect_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$DebugRect__init_)],
cbgm_Interpolation$ElasticIn, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, ["$_init_6", $rt_wrapFunction4(cbgm_Interpolation$ElasticIn__init_0)],
cgtrd_ExponentialDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_110", $rt_wrapFunction2(cgtrd_ExponentialDistribution__init_0), "$getMean", $rt_wrapFunction0(cgtrd_ExponentialDistribution_getMean), "$setParameters", $rt_wrapFunction3(cgtrd_ExponentialDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_ExponentialDistribution_nextDouble)],
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$_init_187", $rt_wrapFunction1(otpp_AsyncCallbackWrapper__init_0), "$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
cbgu_IntArray, "IntArray", 11, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_IntArray__init_1), "$_init_4", $rt_wrapFunction1(cbgu_IntArray__init_2), "$_init_55", $rt_wrapFunction2(cbgu_IntArray__init_4), "$add5", $rt_wrapFunction1(cbgu_IntArray_add), "$add12", $rt_wrapFunction2(cbgu_IntArray_add0), "$get11", $rt_wrapFunction1(cbgu_IntArray_get), "$set", $rt_wrapFunction2(cbgu_IntArray_set), "$pop1", $rt_wrapFunction0(cbgu_IntArray_pop), "$peek", $rt_wrapFunction0(cbgu_IntArray_peek), "$clear8",
$rt_wrapFunction0(cbgu_IntArray_clear), "$ensureCapacity0", $rt_wrapFunction1(cbgu_IntArray_ensureCapacity), "$resize3", $rt_wrapFunction1(cbgu_IntArray_resize), "$hashCode0", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals), "$toString", $rt_wrapFunction0(cbgu_IntArray_toString)],
cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, 0,
cgtrd_ArcsineDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$getAlpha", $rt_wrapFunction0(cgtrd_ArcsineDistribution_getAlpha), "$getBeta", $rt_wrapFunction0(cgtrd_ArcsineDistribution_getBeta), "$_init_21", $rt_wrapFunction3(cgtrd_ArcsineDistribution__init_), "$getMedian", $rt_wrapFunction0(cgtrd_ArcsineDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_ArcsineDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_ArcsineDistribution_nextDouble)],
cbgssu_SelectBox, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, cbgssu_SelectBox_$callClinit, 0,
jl_IllegalAccessException, "IllegalAccessException", 25, jl_ReflectiveOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalAccessException__init_0)],
cgtr_ChopRandom, "ChopRandom", 3, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgtr_ChopRandom__init_0), "$_init_148", $rt_wrapFunction4(cgtr_ChopRandom__init_2), "$nextLong", $rt_wrapFunction0(cgtr_ChopRandom_nextLong), "$next1", $rt_wrapFunction1(cgtr_ChopRandom_next), "$nextInt", $rt_wrapFunction0(cgtr_ChopRandom_nextInt), "$nextFloat", $rt_wrapFunction0(cgtr_ChopRandom_nextFloat)],
cgtrd_StudentsTDistribution, 0, cgtrd_Distribution, [], 0, 3, 0, 0, ["$_init_110", $rt_wrapFunction2(cgtrd_StudentsTDistribution__init_), "$getMedian", $rt_wrapFunction0(cgtrd_StudentsTDistribution_getMedian), "$setParameters", $rt_wrapFunction3(cgtrd_StudentsTDistribution_setParameters), "$nextDouble", $rt_wrapFunction0(cgtrd_StudentsTDistribution_nextDouble)],
cbgggpr_ModelInstanceControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
cbgssu_Touchpad$TouchpadStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgtd_RyuDouble, 0, jl_Object, [], 4, 0, 0, cgtd_RyuDouble_$callClinit, 0,
cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgssa_LayoutAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssu_TextField$TextFieldListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_Sprite, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Octree, 0, jl_Object, [], 0, 3, 0, cbgm_Octree_$callClinit, 0,
cbgssu_ButtonGroup, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_4", $rt_wrapFunction1(jur_UMultiLineEOLSet__init_0), "$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
jl_Thread$start$lambda$_4_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_58", $rt_wrapFunction1(jl_Thread$start$lambda$_4_0__init_0), "$run", $rt_wrapFunction0(jl_Thread$start$lambda$_4_0_run)],
cbgssa_AfterAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter, 0, jl_Object, [cbgssu_TextField$TextFieldFilter], 0, 3, 0, 0, 0,
cbgm_Octree$OctreeNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtp_Preloader$12, 0, jl_Object, [], 32, 0, 0, cgxgbtp_Preloader$12_$callClinit, 0,
cbgssa_AddListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
cbgss_Stage$TouchFocus, 0, jl_Object, [cbgu_Pool$Poolable], 4, 3, 0, 0, 0,
cgt_ExponentialScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ExponentialScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ExponentialScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ExponentialScreen_render), "$resize", $rt_wrapFunction2(cgt_ExponentialScreen_resize)],
cbgssu_List$ListStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgt_ArcsineAlternateScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ArcsineAlternateScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ArcsineAlternateScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ArcsineAlternateScreen_render), "$resize", $rt_wrapFunction2(cgt_ArcsineAlternateScreen_resize)],
cgt_ParetoScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgt_ParetoScreen_show), "$_init_118", $rt_wrapFunction1(cgt_ParetoScreen__init_0), "$render0", $rt_wrapFunction1(cgt_ParetoScreen_render), "$resize", $rt_wrapFunction2(cgt_ParetoScreen_resize)],
ju_Arrays$ArrayAsList, 0, ju_AbstractList, [ju_RandomAccess], 0, 0, 0, 0, ["$_init_72", $rt_wrapFunction1(ju_Arrays$ArrayAsList__init_0)]]);
function $rt_array(cls, data) {
    this.$monitor = null;
    this.$id$ = 0;
    this.type = cls;
    this.data = data;
    this.constructor = $rt_arraycls(cls);
}
$rt_array.prototype = $rt_globals.Object.create(($rt_objcls()).prototype);
$rt_array.prototype.toString = function() {
    var str = "[";
    for (var i = 0;i < this.data.length;++i) {
        if (i > 0) {
            str += ", ";
        }
        str += this.data[i].toString();
    }
    str += "]";
    return str;
};
$rt_setCloneMethod($rt_array.prototype, function() {
    var dataCopy;
    if ('slice' in this.data) {
        dataCopy = this.data.slice();
    } else {
        dataCopy = new this.data.constructor(this.data.length);
        for (var i = 0;i < dataCopy.length;++i) {
            dataCopy[i] = this.data[i];
        }
    }
    return new $rt_array(this.type, dataCopy);
});
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "bounces cannot be < 2 or > 5: ", "Constructor not found for class: ", "Security violation occurred while getting constructor for class: \'", "\'.", "Security violation while getting constructor for class: ", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", ": ", "The value is too big for int type: ", "Illegal radix: ", "Replacement preconditions do not hold", "Action must be non-null",
"Android", "Mac", "Win", "Linux", "FreeBSD", "iPhone", "iPod", "iPad", "error", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", "CI sequence: ", "\tat ", "Caused by: ", "objects cannot be null.", "Given alpha, beta, and/or gamma are invalid.", "fSet", "BehindFSet", "Given mu, sigma and/or iota are invalid.", "JointSet", " ", "^ ", "range:", "<GroupQuant>", "FileType \'", "\' Not supported in web backend", " does not exist", "", "/", "\\", "null", "Index out of bounds", "KumaraswamyDistribution with A=%.3f, B=%.3f; mean=%.3f at %d FPS",
"Lower parameters A/B/C by holding a, b, or c;\nhold Shift and A/B/C to raise.", "a – alpha; should be greater than 0.0\nb – beta; should be greater than 0.0", "New position ", " is outside of range [0;", "New limit ", "Given alpha and/or lambda are invalid.", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart",
"javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil",
"Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts",
"CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows",
"Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters",
"SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC",
"Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "AheadFSet", "NonCapJointSet", "PosLookaheadJointSet", "NegLookaheadJointSet", "charsetName is null", "Should never been thrown", "PosBehindJointSet", "US-ASCII", "-2147483648", "GL_EXT_texture_filter_anisotropic", "New data must have the same managed status as the old data", "decomposed char:", "NegBehindJointSet", "Index ", "ErrorLoading: ", "\n", ":", "i", "b", "a", "Invalid assets description file.", "TrigTools.sinSmooth() at %d FPS",
"0", "<Quant>", "interface ", "class ", "<init>", "object cannot be null.", "The last char in dst ", " is outside of array of size ", "Length ", " must be non-negative", "Offset ", "The last char in src ", " is outside of string of size ", "Start ", " must be before end ", "GL_ARB_framebuffer_object", "GL_EXT_framebuffer_object", "com.badlogic.gdx.backends.lwjgl3.Lwjgl3GLES20", "texture width and height must be square when using mipmapping.", "main", "Script loaded: ", "data:", ";base64,", "The last float in src ",
"Unsupported asset type ", "Loading asset : ", "Loading script : ", "start + count must be <= size: ", " + ", " <= ", "index can\'t be >= size: ", " >= ", "end can\'t be >= size: ", "start can\'t be > end: ", " > ", "Array is empty.", "additionalCapacity must be >= 0: ", "newSize must be >= 0: ", "[]", ", ", "AtomicFSet", "touchDown", "touchUp", "touchDragged", "mouseMoved", "enter", "exit", "scrolled", "keyDown", "keyUp", "keyTyped", "TriangleVariantsScreen with A=%.3f, B=%.3f; median=%.3f at %d FPS, mode %d (J or K to change)",
"a – mu; must not be NaN\nb – sigma; should be greater than 0.0", "none", "table", "cell", "actor", "UTF-8", "<MultiLine $>", "jpg", "jpeg", "png", "bmp", "gif", "json", "xml", "txt", "glsl", "fnt", "pack", "obj", "atlas", "g3dj", "mp3", "ogg", "wav", "Class cannot be created (missing no-arg constructor): ", "Unable to create new instance: ", "PX", "PCT", "EM", "EX", "PT", "PC", "IN", "CM", "MM", "OnPlane", "Back", "Front", "px", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})", "WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})",
"Invalid version string: ", "\\.", "libGDX GL", "Error parsing number: ", ", assuming: ", "The last short in src ", "file-f:", "file-d:", "Math.sin() at %d FPS", "CauchyAlternateDistribution with A=%.3f, B=%.3f; median=%.3f at %d FPS", "a – alpha; must not be NaN\nb – gamma; should be greater than 0.0", "Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n",
"#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}", "Error compiling shader: ", "SpriteBatch.end must be called before begin.", "SpriteBatch.begin must be called before end.", "SpriteBatch.begin must be called before draw.", "u_projTrans", "u_texture", "BetaDistribution with A=%.3f, B=%.3f; mean=%.3f at %d FPS",
"Malformed input of length ", "NearestNeighbour", "BiLinear", "Given alpha and/or beta are invalid.", "Negative bit address", "Negative exponent", "BigInteger divide by zero", "If no regions are specified, the font data must have an images path.", "CI back reference: ", "NormalAlternateDistribution with A=%.3f, B=%.3f; C=%.3f; median=%.3f at %d FPS, mode %d (J or K to change)", "The specified font must contain at least one texture page.", "UCI sequence: ", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ",
"Given alpha and/or skew are invalid.", "FinalSet", "<Empty set>", "texture cannot be null.", "MathUtils.sin() at %d FPS", "�", "averageCharsPerByte must be positive. Actual value is ", "maxCharsPerByte must be positive. Actual value is ", "newAction must be non-null", "LumpDistribution with A=%.3f, B=%.3f at %d FPS", "enabled", "disabled", "childrenOnly", "^", "IndexBufferObject cannot be used after it has been disposed.", "PreviousMatch", "StudentsTDistribution with A=%.3f; median=%.3f at %d FPS", "a – nu; should be greater than 0.0",
"NonCapFSet", "UCI ", "Already loaded.", "File is empty.", "padding=", ",", "Invalid padding.", "Missing common header.", "Invalid common header.", "lineHeight=", "Missing: lineHeight", "base=", "Missing: base", "pages=", "Missing additional page definitions.", ".*id=(\\d+)", ".*file=\"?([^\"]+)\"?", "\\\\", "Missing: file", "Page IDs must be indices starting at 0: ", "Invalid page id: ", "kernings ", "metrics ", "char ", " =", "kerning ", "Error loading font file: ", "No glyphs found.", "UCI range:", "keyboard",
"scroll", "Can only cope with FloatBuffer, ShortBuffer and IntBuffer at the moment", "glGetFloat not supported by WebGL backend", "GL error: ", "Capacity is negative: ", "The last byte in dst ", "The last byte in src ", "<SOL>", "Given alpha is invalid.", "Exception occurred in constructor for class: ", "Illegal argument(s) supplied to constructor for class: ", "Could not instantiate instance of class: ", "Product of NormalDistribution s with A=%.3f, B=%.3f, C=%.3f; median=%.3f at %d FPS", "a – mu; must not be NaN\nb – sigma; should be greater than 0.0\nc - count; will be rounded to an int of at least 1",
"public", "protected", "private", "abstract", "static", "final", "transient", "volatile", "synchronized", "native", "strictfp", "interface", "Cozette.fnt", " FPS using ", "01", "01234567", "0123456789", "0123456789ABCDEF", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!?", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\'/!@#$%^&*()[]{}<>:?;|_=",
"offset + length must be <= size: ", "assets/", "<EOL>", "Is", "In", "TrigTools.sinSmoother() at %d FPS", "OpenGL", "GLES", "NONE", "NormalDistribution with A=%.3f, B=%.3f; median=%.3f at %d FPS", "loadFactor must be > 0 and < 1: ", "alpha", "beta", "gamma", "delta", "epsilon", "zeta", "eta", "theta", "iota", "kappa", "lambda", "mu", "nu", "xi", "omicron", "pi", "rho", "sigma", "tau", "upsilon", "phi", "chi", "psi", "omega", "ALPHA", "BETA", "GAMMA", "DELTA", "EPSILON", "ZETA", "ETA", "THETA", "IOTA", "KAPPA",
"LAMBDA", "MU", "NU", "XI", "OMICRON", "PI", "RHO", "SIGMA", "TAU", "UPSILON", "PHI", "CHI", "PSI", "OMEGA", "baal", "agares", "vassago", "samigina", "marbas", "valefor", "amon", "barbatos", "paimon", "buer", "gusion", "sitri", "beleth", "leraje", "eligos", "zepar", "botis", "bathin", "sallos", "purson", "marax", "ipos", "aim", "naberius", "glasya_labolas", "bune", "ronove", "berith", "astaroth", "forneus", "foras", "asmoday", "gaap", "furfur", "marchosias", "stolas", "phenex", "halphas", "malphas", "raum",
"focalor", "vepar", "sabnock", "shax", "vine", "bifrons", "vual", "haagenti", "crocell", "furcas", "balam", "alloces", "caim", "murmur", "orobas", "gremory", "ose", "amy", "orias", "vapula", "zagan", "valac", "andras", "flauros", "andrealphus", "kimaris", "amdusias", "belial", "decarabia", "seere", "dantalion", "andromalius", "BAAL", "AGARES", "VASSAGO", "SAMIGINA", "MARBAS", "VALEFOR", "AMON", "BARBATOS", "PAIMON", "BUER", "GUSION", "SITRI", "BELETH", "LERAJE", "ELIGOS", "ZEPAR", "BOTIS", "BATHIN", "SALLOS",
"PURSON", "MARAX", "IPOS", "AIM", "NABERIUS", "GLASYA_LABOLAS", "BUNE", "RONOVE", "BERITH", "ASTAROTH", "FORNEUS", "FORAS", "ASMODAY", "GAAP", "FURFUR", "MARCHOSIAS", "STOLAS", "PHENEX", "HALPHAS", "MALPHAS", "RAUM", "FOCALOR", "VEPAR", "SABNOCK", "SHAX", "VINE", "BIFRONS", "VUAL", "HAAGENTI", "CROCELL", "FURCAS", "BALAM", "ALLOCES", "CAIM", "MURMUR", "OROBAS", "GREMORY", "OSE", "AMY", "ORIAS", "VAPULA", "ZAGAN", "VALAC", "ANDRAS", "FLAUROS", "ANDREALPHUS", "KIMARIS", "AMDUSIAS", "BELIAL", "DECARABIA", "SEERE",
"DANTALION", "ANDROMALIUS", "hydrogen", "helium", "lithium", "beryllium", "boron", "carbon", "nitrogen", "oxygen", "fluorine", "neon", "sodium", "magnesium", "aluminium", "silicon", "phosphorus", "sulfur", "chlorine", "argon", "potassium", "calcium", "scandium", "titanium", "vanadium", "chromium", "manganese", "iron", "cobalt", "nickel", "copper", "zinc", "gallium", "germanium", "arsenic", "selenium", "bromine", "krypton", "rubidium", "strontium", "yttrium", "zirconium", "niobium", "molybdenum", "technetium",
"ruthenium", "rhodium", "palladium", "silver", "cadmium", "indium", "tin", "antimony", "tellurium", "iodine", "xenon", "caesium", "barium", "lanthanum", "cerium", "praseodymium", "neodymium", "promethium", "samarium", "europium", "gadolinium", "terbium", "dysprosium", "holmium", "erbium", "thulium", "ytterbium", "lutetium", "hafnium", "tantalum", "tungsten", "rhenium", "osmium", "iridium", "platinum", "gold", "mercury", "thallium", "lead", "bismuth", "polonium", "astatine", "radon", "francium", "radium", "actinium",
"thorium", "protactinium", "uranium", "neptunium", "plutonium", "americium", "curium", "berkelium", "californium", "einsteinium", "fermium", "mendelevium", "nobelium", "lawrencium", "rutherfordium", "dubnium", "seaborgium", "bohrium", "hassium", "meitnerium", "darmstadtium", "roentgenium", "copernicium", "nihonium", "flerovium", "moscovium", "livermorium", "tennessine", "oganesson", "HYDROGEN", "HELIUM", "LITHIUM", "BERYLLIUM", "BORON", "CARBON", "NITROGEN", "OXYGEN", "FLUORINE", "NEON", "SODIUM", "MAGNESIUM",
"ALUMINIUM", "SILICON", "PHOSPHORUS", "SULFUR", "CHLORINE", "ARGON", "POTASSIUM", "CALCIUM", "SCANDIUM", "TITANIUM", "VANADIUM", "CHROMIUM", "MANGANESE", "IRON", "COBALT", "NICKEL", "COPPER", "ZINC", "GALLIUM", "GERMANIUM", "ARSENIC", "SELENIUM", "BROMINE", "KRYPTON", "RUBIDIUM", "STRONTIUM", "YTTRIUM", "ZIRCONIUM", "NIOBIUM", "MOLYBDENUM", "TECHNETIUM", "RUTHENIUM", "RHODIUM", "PALLADIUM", "SILVER", "CADMIUM", "INDIUM", "TIN", "ANTIMONY", "TELLURIUM", "IODINE", "XENON", "CAESIUM", "BARIUM", "LANTHANUM", "CERIUM",
"PRASEODYMIUM", "NEODYMIUM", "PROMETHIUM", "SAMARIUM", "EUROPIUM", "GADOLINIUM", "TERBIUM", "DYSPROSIUM", "HOLMIUM", "ERBIUM", "THULIUM", "YTTERBIUM", "LUTETIUM", "HAFNIUM", "TANTALUM", "TUNGSTEN", "RHENIUM", "OSMIUM", "IRIDIUM", "PLATINUM", "GOLD", "MERCURY", "THALLIUM", "LEAD", "BISMUTH", "POLONIUM", "ASTATINE", "RADON", "FRANCIUM", "RADIUM", "ACTINIUM", "THORIUM", "PROTACTINIUM", "URANIUM", "NEPTUNIUM", "PLUTONIUM", "AMERICIUM", "CURIUM", "BERKELIUM", "CALIFORNIUM", "EINSTEINIUM", "FERMIUM", "MENDELEVIUM",
"NOBELIUM", "LAWRENCIUM", "RUTHERFORDIUM", "DUBNIUM", "SEABORGIUM", "BOHRIUM", "HASSIUM", "MEITNERIUM", "DARMSTADTIUM", "ROENTGENIUM", "COPERNICIUM", "NIHONIUM", "FLEROVIUM", "MOSCOVIUM", "LIVERMORIUM", "TENNESSINE", "OGANESSON", "UCI back reference: ", "BIG_ENDIAN", "LITTLE_ENDIAN", "Pixmap", "Custom", "Given mu and/or sigma are invalid.", "<DotAllQuant>", "Lambert", "Phong", "CLEAR", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE",
"LIME", "FOREST", "OLIVE", "YELLOW", "GOLDENROD", "ORANGE", "BROWN", "TAN", "FIREBRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON", "CauchyDistribution with A=%.3f, B=%.3f; median=%.3f at %d FPS", "Asset loaded: ", "Couldn\'t load image \'", "\', file does not exist", "rgba(", "Pixmap already disposed!", "Already prepared", "Call prepare() before calling getPixmap()", "This TextureData implementation does not upload data itself", "u_sampler", "a_normal", "a_texCoord",
"u_projModelView", "attribute vec4 a_position;\n", "attribute vec3 a_normal;\n", "attribute vec4 a_color;\n", "attribute vec2 a_texCoord", ";\n", "uniform mat4 u_projModelView;\n", "varying vec4 v_col;\n", "varying vec2 v_tex", "void main() {\n   gl_Position = u_projModelView * a_position;\n", "   v_col = a_color;\n   v_col.a *= 255.0 / 254.0;\n", "   v_tex", " = ", "   gl_PointSize = 1.0;\n}\n", "#ifdef GL_ES\nprecision mediump float;\n#endif\n", "uniform sampler2D u_sampler", "void main() {\n   gl_FragColor = ",
"vec4(1, 1, 1, 1)", "v_col", " * ", " texture2D(u_sampler", ",  v_tex", ") *", ")", ";\n}", "sequence: ", "IGNORE", "REPLACE", "REPORT", "back reference: ", "<DotQuant>", "COPY", "copy", "DESTINATION_ATOP", "destination-atop", "DESTINATION_IN", "destination-in", "DESTINATION_OUT", "destination-out", "DESTINATION_OVER", "destination-over", "LIGHTER", "lighter", "SOURCE_ATOP", "source-atop", "SOURCE_IN", "source-in", "SOURCE_OUT", "source-out", "SOURCE_OVER", "source-over", "XOR", "xor", "both", "top", "bottom",
"vertex shader must not be null", "fragment shader must not be null", "Fragment shader:\n", "Vertex shader\n", "An attempted fetch uniform from uncompiled shader \n", "No uniform with name \'", "\' in shader", "Classpath", "Internal", "External", "Absolute", "Local", "No buffer allocated!", ".", "CI ", "Given alpha and/or gamma are invalid.", "UTF-16", "UTF-16BE", "UTF-16LE", "Raised NormalDistribution with A=%.3f, B=%.3f, C=%.3f; median=%.3f at %d FPS", "a – mu; must not be NaN\nb – sigma; should be greater than 0.0\nc - power; will be rounded to an int",
"Image", "Audio", "Text", "t", "Binary", "Directory", "ISO-8859-1", "MirroredRepeat", "ClampToEdge", "Repeat", "hidden", "posFSet", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "TriangularDistribution with A=%.3f, B=%.3f, C=%.3f; median=%.3f at %d FPS", "a – alpha; requires a < b && a <= c\nb – beta; requires b > a && b >= c\nc – gamma; requires c >= a && c <= b", "VertexArray", "VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO",
"key cannot be null.", "Patter is null", "\\Q", "\\E", "\\\\E\\Q", "==", "=", "Unmappable characters of length ", "None", "SourceOver", "LOAD_ASSETS", "APP_CREATE", "APP_LOOP", "canvas", "ChiSquareDistribution with A=%.3f; mean=%.3f at %d FPS", "a – lambda; should be greater than 0.0", "Unknown Gdx2DPixmap Format: ", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "ZipfianDistribution with A=%.3f, B=%.3f, zeta=%.6f; at %d FPS", "a – alpha; should be an int or long greater than 0\nb – skew; should be greater than or equal to 0.0",
"TrigTools.sin() at %d FPS", "attributes must be >= 1", "PowerDistribution with A=%.3f, B=%.3f; mean=%.3f at %d FPS", "Logical", "Pixels", "LogCauchyDistribution with A=%.3f, B=%.3f; median=%.3f at %d FPS", "FILL", "STROKE", "BinomialDistribution with A=%.3f, B=%.3f; mean=%.3f at %d FPS", "Lower parameter A by holding a;\nhold Shift and A to raise.", "a – alpha; should be greater than or equal to 0.0 and less than or equal to 1.0\nb – beta; will be cast to an int, and should be greater or equal to 0", "java.runtime.name",
"userAgent", "os.name", "Windows", "OS X", "no OS", ".html", "index.html", "index-debug.html", "assets.txt", "resize", "gdx.wasm.js", "soundmanager2-jsmin.js", "bullet.wasm.js", "imgui.js", "box2D.wasm.js", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", "capacity must be >= 0: ", "The required capacity is too large: ", "EOI", "ChiDistribution with A=%.3f; mean=%.3f at %d FPS", "mousedown", "mouseup", "mousemove", "wheel", "touchstart", "touchmove", "touchcancel",
"touchend", "keydown", "keypress", "keyup", "CSS1Compat", "ErlangDistribution with A=%.3f, B=%.3f; at %d FPS", "a – alpha; will be cast to an int, and should be greater or equal to 1\nb – lambda; should be greater than 0.0", "Either src or dest is null", "java.version", "1.8", "TeaVM", "file.separator", "path.separator", "line.separator", "java.io.tmpdir", "java.vm.version", "user.home", "/tmp", "unknown format: ", "DotAll", "decomposed Hangul syllable:", "Enabled", "EnabledUntilCycleEnd", "Disabled", "WordBoundary",
"data must be a ByteBuffer or FloatBuffer", "KnobDistribution with A=%.3f, B=%.3f, C=%.3f; median=%.3f at %d FPS", "a mu; must not be NaN\nb sigma; should be greater than 0.0\nc iota; must be between 0.0 and 1.0, both inclusive", "#iterator() cannot be used nested.", "ArcsineDistribution with A=%.3f, B=%.3f; median=%.3f at %d FPS", "a – alpha; must be less than b\nb – beta; must be greater than a", "Given lambda is invalid.", "Given nu is invalid.", "NaN", "0.0", "-0.0", "0.", ".0", "Infinity", " != ", "<Unix MultiLine $>",
"ExponentialDistribution with A=%.3f; mean=%.3f at %d FPS", "a – alpha; must be less than b\nb – beta; must be greater than a\nThe green line is the most accurate.", "ParetoDistribution with A=%.3f, B=%.3f; median=%.3f at %d FPS"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
var Long_eq;
var Long_ne;
var Long_gt;
var Long_ge;
var Long_lt;
var Long_le;
var Long_compare;
var Long_ucompare;
var Long_add;
var Long_sub;
var Long_inc;
var Long_dec;
var Long_mul;
var Long_div;
var Long_rem;
var Long_udiv;
var Long_urem;
var Long_neg;
var Long_and;
var Long_or;
var Long_xor;
var Long_shl;
var Long_shr;
var Long_shru;
var Long_not;
if (typeof $rt_globals.BigInt !== 'function') {
    Long_eq = function(a, b) {
        return a.hi === b.hi && a.lo === b.lo;
    };
    Long_ne = function(a, b) {
        return a.hi !== b.hi || a.lo !== b.lo;
    };
    Long_gt = function(a, b) {
        if (a.hi < b.hi) {
            return false;
        }
        if (a.hi > b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x > y;
        }
        return (a.lo & 1) > (b.lo & 1);
    };
    Long_ge = function(a, b) {
        if (a.hi < b.hi) {
            return false;
        }
        if (a.hi > b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x >= y;
        }
        return (a.lo & 1) >= (b.lo & 1);
    };
    Long_lt = function(a, b) {
        if (a.hi > b.hi) {
            return false;
        }
        if (a.hi < b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x < y;
        }
        return (a.lo & 1) < (b.lo & 1);
    };
    Long_le = function(a, b) {
        if (a.hi > b.hi) {
            return false;
        }
        if (a.hi < b.hi) {
            return true;
        }
        var x = a.lo >>> 1;
        var y = b.lo >>> 1;
        if (x !== y) {
            return x <= y;
        }
        return (a.lo & 1) <= (b.lo & 1);
    };
    Long_add = function(a, b) {
        if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
            return Long_fromNumber(a.lo + b.lo);
        } else if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) + Long_toNumber(b));
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = a_lolo + b_lolo | 0;
        var lohi = a_lohi + b_lohi + (lolo >> 16) | 0;
        var hilo = a_hilo + b_hilo + (lohi >> 16) | 0;
        var hihi = a_hihi + b_hihi + (hilo >> 16) | 0;
        return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
    };
    Long_inc = function(a) {
        var lo = a.lo + 1 | 0;
        var hi = a.hi;
        if (lo === 0) {
            hi = hi + 1 | 0;
        }
        return new Long(lo, hi);
    };
    Long_dec = function(a) {
        var lo = a.lo - 1 | 0;
        var hi = a.hi;
        if (lo ===  -1) {
            hi = hi - 1 | 0;
        }
        return new Long(lo, hi);
    };
    Long_neg = function(a) {
        return Long_inc(new Long(a.lo ^ 0xFFFFFFFF, a.hi ^ 0xFFFFFFFF));
    };
    Long_sub = function(a, b) {
        if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
            return Long_fromNumber(a.lo - b.lo);
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = a_lolo - b_lolo | 0;
        var lohi = a_lohi - b_lohi + (lolo >> 16) | 0;
        var hilo = a_hilo - b_hilo + (lohi >> 16) | 0;
        var hihi = a_hihi - b_hihi + (hilo >> 16) | 0;
        return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
    };
    Long_compare = function(a, b) {
        var r = a.hi - b.hi;
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    };
    Long_ucompare = function(a, b) {
        var r = $rt_ucmp(a.hi, b.hi);
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    };
    Long_mul = function(a, b) {
        var positive = Long_isNegative(a) === Long_isNegative(b);
        if (Long_isNegative(a)) {
            a = Long_neg(a);
        }
        if (Long_isNegative(b)) {
            b = Long_neg(b);
        }
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        var lolo = 0;
        var lohi = 0;
        var hilo = 0;
        var hihi = 0;
        lolo = a_lolo * b_lolo | 0;
        lohi = lolo >>> 16;
        lohi = (lohi & 0xFFFF) + a_lohi * b_lolo | 0;
        hilo = hilo + (lohi >>> 16) | 0;
        lohi = (lohi & 0xFFFF) + a_lolo * b_lohi | 0;
        hilo = hilo + (lohi >>> 16) | 0;
        hihi = hilo >>> 16;
        hilo = (hilo & 0xFFFF) + a_hilo * b_lolo | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hilo = (hilo & 0xFFFF) + a_lohi * b_lohi | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hilo = (hilo & 0xFFFF) + a_lolo * b_hilo | 0;
        hihi = hihi + (hilo >>> 16) | 0;
        hihi = hihi + a_hihi * b_lolo + a_hilo * b_lohi + a_lohi * b_hilo + a_lolo * b_hihi | 0;
        var result = new Long(lolo & 0xFFFF | lohi << 16, hilo & 0xFFFF | hihi << 16);
        return positive ? result : Long_neg(result);
    };
    Long_div = function(a, b) {
        if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_divRem(a, b))[0];
    };
    Long_udiv = function(a, b) {
        if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_udivRem(a, b))[0];
    };
    Long_rem = function(a, b) {
        if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) % Long_toNumber(b));
        }
        return (Long_divRem(a, b))[1];
    };
    Long_urem = function(a, b) {
        if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
            return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
        }
        return (Long_udivRem(a, b))[1];
    };
    function Long_divRem(a, b) {
        if (b.lo === 0 && b.hi === 0) {
            throw new $rt_globals.Error("Division by zero");
        }
        var positive = Long_isNegative(a) === Long_isNegative(b);
        if (Long_isNegative(a)) {
            a = Long_neg(a);
        }
        if (Long_isNegative(b)) {
            b = Long_neg(b);
        }
        a = new LongInt(a.lo, a.hi, 0);
        b = new LongInt(b.lo, b.hi, 0);
        var q = LongInt_div(a, b);
        a = new Long(a.lo, a.hi);
        q = new Long(q.lo, q.hi);
        return positive ? [q, a] : [Long_neg(q), Long_neg(a)];
    }
    function Long_udivRem(a, b) {
        if (b.lo === 0 && b.hi === 0) {
            throw new $rt_globals.Error("Division by zero");
        }
        a = new LongInt(a.lo, a.hi, 0);
        b = new LongInt(b.lo, b.hi, 0);
        var q = LongInt_div(a, b);
        a = new Long(a.lo, a.hi);
        q = new Long(q.lo, q.hi);
        return [q, a];
    }
    function Long_shiftLeft16(a) {
        return new Long(a.lo << 16, a.lo >>> 16 | a.hi << 16);
    }
    function Long_shiftRight16(a) {
        return new Long(a.lo >>> 16 | a.hi << 16, a.hi >>> 16);
    }
    Long_and = function(a, b) {
        return new Long(a.lo & b.lo, a.hi & b.hi);
    };
    Long_or = function(a, b) {
        return new Long(a.lo | b.lo, a.hi | b.hi);
    };
    Long_xor = function(a, b) {
        return new Long(a.lo ^ b.lo, a.hi ^ b.hi);
    };
    Long_shl = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo << b, a.lo >>> 32 - b | a.hi << b);
        } else if (b === 32) {
            return new Long(0, a.lo);
        } else {
            return new Long(0, a.lo << b - 32);
        }
    };
    Long_shr = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >> b);
        } else if (b === 32) {
            return new Long(a.hi, a.hi >> 31);
        } else {
            return new Long(a.hi >> b - 32, a.hi >> 31);
        }
    };
    Long_shru = function(a, b) {
        b &= 63;
        if (b === 0) {
            return a;
        } else if (b < 32) {
            return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >>> b);
        } else if (b === 32) {
            return new Long(a.hi, 0);
        } else {
            return new Long(a.hi >>> b - 32, 0);
        }
    };
    Long_not = function(a) {
        return new Long(~a.hi, ~a.lo);
    };
    function LongInt(lo, hi, sup) {
        this.lo = lo;
        this.hi = hi;
        this.sup = sup;
    }
    function LongInt_mul(a, b) {
        var a_lolo = (a.lo & 0xFFFF) * b | 0;
        var a_lohi = (a.lo >>> 16) * b | 0;
        var a_hilo = (a.hi & 0xFFFF) * b | 0;
        var a_hihi = (a.hi >>> 16) * b | 0;
        var sup = a.sup * b | 0;
        a_lohi = a_lohi + (a_lolo >>> 16) | 0;
        a_hilo = a_hilo + (a_lohi >>> 16) | 0;
        a_hihi = a_hihi + (a_hilo >>> 16) | 0;
        sup = sup + (a_hihi >>> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup & 0xFFFF;
    }
    function LongInt_sub(a, b) {
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        a_lolo = a_lolo - b_lolo | 0;
        a_lohi = a_lohi - b_lohi + (a_lolo >> 16) | 0;
        a_hilo = a_hilo - b_hilo + (a_lohi >> 16) | 0;
        a_hihi = a_hihi - b_hihi + (a_hilo >> 16) | 0;
        var sup = a.sup - b.sup + (a_hihi >> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup;
    }
    function LongInt_add(a, b) {
        var a_lolo = a.lo & 0xFFFF;
        var a_lohi = a.lo >>> 16;
        var a_hilo = a.hi & 0xFFFF;
        var a_hihi = a.hi >>> 16;
        var b_lolo = b.lo & 0xFFFF;
        var b_lohi = b.lo >>> 16;
        var b_hilo = b.hi & 0xFFFF;
        var b_hihi = b.hi >>> 16;
        a_lolo = a_lolo + b_lolo | 0;
        a_lohi = a_lohi + b_lohi + (a_lolo >> 16) | 0;
        a_hilo = a_hilo + b_hilo + (a_lohi >> 16) | 0;
        a_hihi = a_hihi + b_hihi + (a_hilo >> 16) | 0;
        var sup = a.sup + b.sup + (a_hihi >> 16) | 0;
        a.lo = a_lolo & 0xFFFF | a_lohi << 16;
        a.hi = a_hilo & 0xFFFF | a_hihi << 16;
        a.sup = sup;
    }
    function LongInt_inc(a) {
        a.lo = a.lo + 1 | 0;
        if (a.lo === 0) {
            a.hi = a.hi + 1 | 0;
            if (a.hi === 0) {
                a.sup = a.sup + 1 & 0xFFFF;
            }
        }
    }
    function LongInt_dec(a) {
        a.lo = a.lo - 1 | 0;
        if (a.lo ===  -1) {
            a.hi = a.hi - 1 | 0;
            if (a.hi ===  -1) {
                a.sup = a.sup - 1 & 0xFFFF;
            }
        }
    }
    function LongInt_ucompare(a, b) {
        var r = a.sup - b.sup;
        if (r !== 0) {
            return r;
        }
        r = (a.hi >>> 1) - (b.hi >>> 1);
        if (r !== 0) {
            return r;
        }
        r = (a.hi & 1) - (b.hi & 1);
        if (r !== 0) {
            return r;
        }
        r = (a.lo >>> 1) - (b.lo >>> 1);
        if (r !== 0) {
            return r;
        }
        return (a.lo & 1) - (b.lo & 1);
    }
    function LongInt_numOfLeadingZeroBits(a) {
        var n = 0;
        var d = 16;
        while (d > 0) {
            if (a >>> d !== 0) {
                a >>>= d;
                n = n + d | 0;
            }
            d = d / 2 | 0;
        }
        return 31 - n;
    }
    function LongInt_shl(a, b) {
        if (b === 0) {
            return;
        }
        if (b < 32) {
            a.sup = (a.hi >>> 32 - b | a.sup << b) & 0xFFFF;
            a.hi = a.lo >>> 32 - b | a.hi << b;
            a.lo <<= b;
        } else if (b === 32) {
            a.sup = a.hi & 0xFFFF;
            a.hi = a.lo;
            a.lo = 0;
        } else if (b < 64) {
            a.sup = (a.lo >>> 64 - b | a.hi << b - 32) & 0xFFFF;
            a.hi = a.lo << b;
            a.lo = 0;
        } else if (b === 64) {
            a.sup = a.lo & 0xFFFF;
            a.hi = 0;
            a.lo = 0;
        } else {
            a.sup = a.lo << b - 64 & 0xFFFF;
            a.hi = 0;
            a.lo = 0;
        }
    }
    function LongInt_shr(a, b) {
        if (b === 0) {
            return;
        }
        if (b === 32) {
            a.lo = a.hi;
            a.hi = a.sup;
            a.sup = 0;
        } else if (b < 32) {
            a.lo = a.lo >>> b | a.hi << 32 - b;
            a.hi = a.hi >>> b | a.sup << 32 - b;
            a.sup >>>= b;
        } else if (b === 64) {
            a.lo = a.sup;
            a.hi = 0;
            a.sup = 0;
        } else if (b < 64) {
            a.lo = a.hi >>> b - 32 | a.sup << 64 - b;
            a.hi = a.sup >>> b - 32;
            a.sup = 0;
        } else {
            a.lo = a.sup >>> b - 64;
            a.hi = 0;
            a.sup = 0;
        }
    }
    function LongInt_copy(a) {
        return new LongInt(a.lo, a.hi, a.sup);
    }
    function LongInt_div(a, b) {
        var bits = b.hi !== 0 ? LongInt_numOfLeadingZeroBits(b.hi) : LongInt_numOfLeadingZeroBits(b.lo) + 32;
        var sz = 1 + (bits / 16 | 0);
        var dividentBits = bits % 16;
        LongInt_shl(b, bits);
        LongInt_shl(a, dividentBits);
        var q = new LongInt(0, 0, 0);
        while (sz-- > 0) {
            LongInt_shl(q, 16);
            var digitA = (a.hi >>> 16) + 0x10000 * a.sup;
            var digitB = b.hi >>> 16;
            var digit = digitA / digitB | 0;
            var t = LongInt_copy(b);
            LongInt_mul(t, digit);
            if (LongInt_ucompare(t, a) >= 0) {
                while (LongInt_ucompare(t, a) > 0) {
                    LongInt_sub(t, b);
                     --digit;
                }
            } else {
                while (true) {
                    var nextT = LongInt_copy(t);
                    LongInt_add(nextT, b);
                    if (LongInt_ucompare(nextT, a) > 0) {
                        break;
                    }
                    t = nextT;
                    ++digit;
                }
            }
            LongInt_sub(a, t);
            q.lo |= digit;
            LongInt_shl(a, 16);
        }
        LongInt_shr(a, bits + 16);
        return q;
    }
} else {
    Long_eq = function(a, b) {
        return a === b;
    };
    Long_ne = function(a, b) {
        return a !== b;
    };
    Long_gt = function(a, b) {
        return a > b;
    };
    Long_ge = function(a, b) {
        return a >= b;
    };
    Long_lt = function(a, b) {
        return a < b;
    };
    Long_le = function(a, b) {
        return a <= b;
    };
    Long_add = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a + b);
    };
    Long_inc = function(a) {
        return $rt_globals.BigInt.asIntN(64, a + 1);
    };
    Long_dec = function(a) {
        return $rt_globals.BigInt.asIntN(64, a - 1);
    };
    Long_neg = function(a) {
        return $rt_globals.BigInt.asIntN(64,  -a);
    };
    Long_sub = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a - b);
    };
    Long_compare = function(a, b) {
        return a < b ?  -1 : a > b ? 1 : 0;
    };
    Long_ucompare = function(a, b) {
        a = $rt_globals.BigInt.asUintN(64, a);
        b = $rt_globals.BigInt.asUintN(64, b);
        return a < b ?  -1 : a > b ? 1 : 0;
    };
    Long_mul = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a * b);
    };
    Long_div = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a / b);
    };
    Long_udiv = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) / $rt_globals.BigInt.asUintN(64, b));
    };
    Long_rem = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a % b);
    };
    Long_urem = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) % $rt_globals.BigInt.asUintN(64, b));
    };
    Long_and = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a & b);
    };
    Long_or = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a | b);
    };
    Long_xor = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a ^ b);
    };
    Long_shl = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a << $rt_globals.BigInt(b & 63));
    };
    Long_shr = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, a >> $rt_globals.BigInt(b & 63));
    };
    Long_shru = function(a, b) {
        return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) >> $rt_globals.BigInt(b & 63));
    };
    Long_not = function(a) {
        return $rt_globals.BigInt.asIntN(64, ~a);
    };
}
var Long_add = Long_add;

var Long_sub = Long_sub;

var Long_mul = Long_mul;

var Long_div = Long_div;

var Long_rem = Long_rem;

var Long_or = Long_or;

var Long_and = Long_and;

var Long_xor = Long_xor;

var Long_shl = Long_shl;

var Long_shr = Long_shr;

var Long_shru = Long_shru;

var Long_compare = Long_compare;

var Long_eq = Long_eq;

var Long_ne = Long_ne;

var Long_lt = Long_lt;

var Long_le = Long_le;

var Long_gt = Long_gt;

var Long_ge = Long_ge;

var Long_not = Long_not;

var Long_neg = Long_neg;

function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (var i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new $rt_globals.Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new $rt_globals.Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : function(result) {
        if (result instanceof $rt_globals.Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new $rt_globals.Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    var result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        var self = this;
        var callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(function() {
            self.resume();
        });
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
function $rt_suspending() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
}
function $rt_resuming() {
    var thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
}
function $rt_suspend(callback) {
    var nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new $rt_globals.Error("Suspension point reached from non-threading context (perhaps, from native JS method).");
    }
    return nativeThread.suspend(callback);
}
function $rt_startThread(runner, callback) {
    (new TeaVMThread(runner)).start(callback);
}
var $rt_currentNativeThread = null;
function $rt_nativeThread() {
    return $rt_currentNativeThread;
}
function $rt_invalidPointer() {
    throw new $rt_globals.Error("Invalid recorded state");
}
main = $rt_mainStarter(cgtt_TeaVMLauncher_main);
main.javaException = $rt_javaException;
(function() {
    var c;
    c = cgxgbtp_AssetDownloadImpl$5$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbt_TeaClipboard$ClipboardWriteHandler.prototype;
    c.prompt = c.$prompt$exported$1;
    c.granted = c.$granted$exported$0;
    c.denied = c.$denied$exported$2;
    c = cgxgbtp_Preloader$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_Preloader$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_Preloader$3.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_AssetDownloadImpl$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_AssetDownloadImpl$6.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otjc_JSArray.prototype;
    c.getLength = c.$getLength$exported$1;
    c.get = c.$get$exported$0;
    c = cgxgbtdi_TeaWindow.prototype;
    c.onAnimationFrame = c.$onAnimationFrame$exported$0;
    c = cgxgbt_TeaApplication$4$1.prototype;
    c.onready = c.$onready$exported$0;
    c.ontimeout = c.$ontimeout$exported$1;
    c = cgxgbtd_FileReaderWrapper.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$1;
    c.removeEventListener = c.$removeEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$4;
    c.addEventListener = c.$addEventListener$exported$2;
    c.addEventListener = c.$addEventListener$exported$3;
    c = cgxgbtp_Preloader$3$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbtp_AssetDownloadImpl$4$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbt_TeaApplication$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbt_TeaApplication$2.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = cgxgbt_TeaGraphics$1.prototype;
    c.fullscreenChanged = c.$fullscreenChanged$exported$0;
    c = cgxgbt_TeaInput.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otja_XMLHttpRequest.prototype;
    c.addEventListener = c.$addEventListener$exported$0;
    c.dispatchEvent = c.$dispatchEvent$exported$3;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.removeEventListener = c.$removeEventListener$exported$2;
    c.addEventListener = c.$addEventListener$exported$4;
    c = cgxgbtp_AssetDownloadImpl$1$1.prototype;
    c.handleEvent = c.$handleEvent$exported$0;
    c = otjb_Window.prototype;
    c.dispatchEvent = c.$dispatchEvent$exported$4;
    c.addEventListener = c.$addEventListener$exported$0;
    c.removeEventListener = c.$removeEventListener$exported$1;
    c.getLength = c.$getLength$exported$5;
    c.get = c.$get$exported$2;
    c.addEventListener = c.$addEventListener$exported$6;
    c.removeEventListener = c.$removeEventListener$exported$3;
})();
})(this);
