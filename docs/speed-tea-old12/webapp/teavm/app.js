"use strict";
(function(module) {
    if (typeof define === 'function' && define.amd) {
        define(['exports'], function(exports)  {
            module(exports);
        });
    } else if (typeof exports === 'object' && exports !== null && typeof exports.nodeName !== 'string') {
        module(exports);
    } else {
        module(typeof self !== 'undefined' ? self : this);
}
}(function($rt_exports) {
let $rt_seed = 2463534242,
$rt_nextId = () => {
    let x = $rt_seed;
    x ^= x << 13;
    x ^= x >>> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
},
$rt_wrapFunction0 = f => function() {
    return f(this);
},
$rt_wrapFunction1 = f => function(p1) {
    return f(this, p1);
},
$rt_wrapFunction2 = f => function(p1, p2) {
    return f(this, p1, p2);
},
$rt_wrapFunction3 = f => function(p1, p2, p3) {
    return f(this, p1, p2, p3, p3);
},
$rt_wrapFunction4 = f => function(p1, p2, p3, p4) {
    return f(this, p1, p2, p3, p4);
},
$rt_threadStarter = f => function() {
    let args = Array.prototype.slice.apply(arguments);
    $rt_startThread(function() {
        f.apply(this, args);
    });
},
$rt_mainStarter = f => (args, callback) => {
    if (!args) {
        args = [];
    }
    let javaArgs = $rt_createArray($rt_objcls(), args.length);
    for (let i = 0;i < args.length;++i) {
        javaArgs.data[i] = $rt_str(args[i]);
    }
    $rt_startThread(() => {
        f.call(null, javaArgs);
    }, callback);
},
$rt_eraseClinit = target => target.$clinit = () => {
},
$dbg_class = obj => {
    let cls = obj.constructor;
    let arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    let clsName = "";
    if (cls.$meta.primitive) {
        clsName = cls.$meta.name;
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
},
$rt_classWithoutFields = superclass => {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
},
$rt_cls = cls => jl_Class_getClass(cls),
$rt_objcls = () => jl_Object,
$rt_getThread = () => {
    {
        return jl_Thread_currentThread0();
    }
},
$rt_setThread = t => {
    {
        return jl_Thread_setCurrentThread(t);
    }
},
$rt_callWithReceiver = f => function() {
    return f.apply(null, [this].concat(Array.prototype.slice.call(arguments)));
},
$rt_createcls = () => {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
},
$rt_createPrimitiveCls = (name, binaryName) => {
    let cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
},
$rt_booleancls = $rt_createPrimitiveCls("boolean", "Z"),
$rt_charcls = $rt_createPrimitiveCls("char", "C"),
$rt_bytecls = $rt_createPrimitiveCls("byte", "B"),
$rt_shortcls = $rt_createPrimitiveCls("short", "S"),
$rt_intcls = $rt_createPrimitiveCls("int", "I"),
$rt_longcls = $rt_createPrimitiveCls("long", "J"),
$rt_floatcls = $rt_createPrimitiveCls("float", "F"),
$rt_doublecls = $rt_createPrimitiveCls("double", "D"),
$rt_voidcls = $rt_createPrimitiveCls("void", "V"),
$rt_numberConversionBuffer = new ArrayBuffer(16),
$rt_numberConversionView = new DataView($rt_numberConversionBuffer),
$rt_numberConversionFloatArray = new Float32Array($rt_numberConversionBuffer),
$rt_numberConversionDoubleArray = new Float64Array($rt_numberConversionBuffer),
$rt_numberConversionIntArray = new Int32Array($rt_numberConversionBuffer),
$rt_doubleToRawLongBits;
if (typeof BigInt !== 'function') {
    $rt_doubleToRawLongBits = n => {
        $rt_numberConversionView.setFloat64(0, n, true);
        return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
    };
} else if (typeof BigInt64Array !== 'function') {
    $rt_doubleToRawLongBits = n => {
        $rt_numberConversionView.setFloat64(0, n, true);
        let lo = $rt_numberConversionView.getInt32(0, true);
        let hi = $rt_numberConversionView.getInt32(4, true);
        return BigInt.asIntN(64, BigInt.asUintN(32, BigInt(lo)) | BigInt(hi) << BigInt(32));
    };
} else {
    let $rt_numberConversionLongArray = new BigInt64Array($rt_numberConversionBuffer);
    $rt_doubleToRawLongBits = n => {
        $rt_numberConversionDoubleArray[0] = n;
        return $rt_numberConversionLongArray[0];
    };
}
let $rt_floatToRawIntBits = n => {
    $rt_numberConversionFloatArray[0] = n;
    return $rt_numberConversionIntArray[0];
},
$rt_intBitsToFloat = n => {
    $rt_numberConversionIntArray[0] = n;
    return $rt_numberConversionFloatArray[0];
},
$rt_compare = (a, b) => a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1,
$rt_imul = Math.imul || function(a, b) {
    let ah = a >>> 16 & 0xFFFF;
    let al = a & 0xFFFF;
    let bh = b >>> 16 & 0xFFFF;
    let bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
},
$rt_udiv = (a, b) => (a >>> 0) / (b >>> 0) >>> 0,
$rt_umod = (a, b) => (a >>> 0) % (b >>> 0) >>> 0,
$rt_ucmp = (a, b) => {
    a >>>= 0;
    b >>>= 0;
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_ZERO = BigInt(0),
Long_create = (lo, hi) => BigInt.asIntN(64, BigInt.asUintN(64, BigInt(lo)) | BigInt.asUintN(64, BigInt(hi) << BigInt(32))),
Long_fromInt = val => BigInt.asIntN(64, BigInt(val | 0)),
Long_fromNumber = val => BigInt.asIntN(64, BigInt(val >= 0 ? Math.floor(val) : Math.ceil(val))),
Long_toNumber = val => Number(val),
Long_hi = val => Number(BigInt.asIntN(64, val >> BigInt(32))) | 0,
Long_lo = val => Number(BigInt.asIntN(32, val)) | 0,
Long_eq = (a, b) => a === b,
Long_ne = (a, b) => a !== b,
Long_gt = (a, b) => a > b,
Long_ge = (a, b) => a >= b,
Long_lt = (a, b) => a < b,
Long_le = (a, b) => a <= b,
Long_add = (a, b) => BigInt.asIntN(64, a + b),
Long_neg = a => BigInt.asIntN(64,  -a),
Long_sub = (a, b) => BigInt.asIntN(64, a - b),
Long_compare = (a, b) => a < b ?  -1 : a > b ? 1 : 0,
Long_ucompare = (a, b) => {
    a = BigInt.asUintN(64, a);
    b = BigInt.asUintN(64, b);
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_mul = (a, b) => BigInt.asIntN(64, a * b),
Long_div = (a, b) => BigInt.asIntN(64, a / b),
Long_udiv = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) / BigInt.asUintN(64, b)),
Long_rem = (a, b) => BigInt.asIntN(64, a % b),
Long_urem = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) % BigInt.asUintN(64, b)),
Long_and = (a, b) => BigInt.asIntN(64, a & b),
Long_or = (a, b) => BigInt.asIntN(64, a | b),
Long_xor = (a, b) => BigInt.asIntN(64, a ^ b),
Long_shl = (a, b) => BigInt.asIntN(64, a << BigInt(b & 63)),
Long_shr = (a, b) => BigInt.asIntN(64, a >> BigInt(b & 63)),
Long_shru = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) >> BigInt(b & 63)),
$rt_createArray = (cls, sz) => {
    let data = new Array(sz);
    data.fill(null);
    return new ($rt_arraycls(cls))(data);
},
$rt_wrapArray = (cls, data) => new ($rt_arraycls(cls))(data),
$rt_createUnfilledArray = (cls, sz) => new ($rt_arraycls(cls))(new Array(sz)),
$rt_createLongArray,
$rt_createLongArrayFromData;
if (typeof BigInt64Array !== 'function') {
    $rt_createLongArray = sz => {
        let data = new Array(sz);
        let arr = new $rt_longArrayCls(data);
        data.fill(Long_ZERO);
        return arr;
    };
    $rt_createLongArrayFromData = init => new $rt_longArrayCls(init);
} else {
    $rt_createLongArray = sz => new $rt_longArrayCls(new BigInt64Array(sz));
    $rt_createLongArrayFromData = data => {
        let buffer = new BigInt64Array(data.length);
        buffer.set(data);
        return new $rt_longArrayCls(buffer);
    };
}
let $rt_createCharArray = sz => new $rt_charArrayCls(new Uint16Array(sz)),
$rt_createCharArrayFromData = data => {
    let buffer = new Uint16Array(data.length);
    buffer.set(data);
    return new $rt_charArrayCls(buffer);
},
$rt_createByteArray = sz => new $rt_byteArrayCls(new Int8Array(sz)),
$rt_createShortArray = sz => new $rt_shortArrayCls(new Int16Array(sz)),
$rt_createIntArray = sz => new $rt_intArrayCls(new Int32Array(sz)),
$rt_createIntArrayFromData = data => {
    let buffer = new Int32Array(data.length);
    buffer.set(data);
    return new $rt_intArrayCls(buffer);
},
$rt_createBooleanArray = sz => new $rt_booleanArrayCls(new Int8Array(sz)),
$rt_createFloatArray = sz => new $rt_floatArrayCls(new Float32Array(sz)),
$rt_createDoubleArray = sz => new $rt_doubleArrayCls(new Float64Array(sz)),
$rt_arraycls = cls => {
    let result = cls.$array;
    if (result === null) {
        function JavaArray(data) {
            ($rt_objcls()).call(this);
            this.data = data;
        }
        JavaArray.prototype = Object.create(($rt_objcls()).prototype);
        JavaArray.prototype.type = cls;
        JavaArray.prototype.constructor = JavaArray;
        JavaArray.prototype.toString = function() {
            let str = "[";
            for (let i = 0;i < this.data.length;++i) {
                if (i > 0) {
                    str += ", ";
                }
                str += this.data[i].toString();
            }
            str += "]";
            return str;
        };
        JavaArray.prototype.$clone0 = function() {
            let dataCopy;
            if ('slice' in this.data) {
                dataCopy = this.data.slice();
            } else {
                dataCopy = new this.data.constructor(this.data.length);
                for (let i = 0;i < dataCopy.length;++i) {
                    dataCopy[i] = this.data[i];
                }
            }
            return new ($rt_arraycls(this.type))(dataCopy);
        };
        let name = "[" + cls.$meta.binaryName;
        JavaArray.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        JavaArray.classObject = null;
        JavaArray.$array = null;
        result = JavaArray;
        cls.$array = JavaArray;
    }
    return result;
},
$rt_createMultiArray = (cls, dimensions) => {
    let first = 0;
    for (let i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
        if (dimensions[i] === 0) {
            first = i;
            break;
        }
    }
    if (first > 0) {
        for (let i = 0;i < first;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
        }
        if (first === dimensions.length - 1) {
            return $rt_createArray(cls, dimensions[first]);
        }
    }
    let arrays = new Array($rt_primitiveArrayCount(dimensions, first));
    let firstDim = dimensions[first] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createArray(cls, firstDim);
    }
    return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
},
$rt_createByteMultiArray = dimensions => {
    let arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_bytecls, dimensions);
    }
    let firstDim = dimensions[0] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createByteArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_bytecls, arrays, dimensions);
},
$rt_createCharMultiArray = dimensions => {
    let arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_charcls, dimensions);
    }
    let firstDim = dimensions[0] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createCharArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_charcls, arrays, dimensions, 0);
},
$rt_createShortMultiArray = dimensions => {
    let arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_shortcls, dimensions);
    }
    let firstDim = dimensions[0] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createShortArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_shortcls, arrays, dimensions, 0);
},
$rt_createIntMultiArray = dimensions => {
    let arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_intcls, dimensions);
    }
    let firstDim = dimensions[0] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createIntArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_intcls, arrays, dimensions, 0);
},
$rt_createLongMultiArray = dimensions => {
    let arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_longcls, dimensions);
    }
    let firstDim = dimensions[0] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createLongArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_longcls, arrays, dimensions, 0);
},
$rt_createFloatMultiArray = dimensions => {
    let arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_floatcls, dimensions);
    }
    let firstDim = dimensions[0] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createFloatArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_floatcls, arrays, dimensions, 0);
},
$rt_createDoubleMultiArray = dimensions => {
    let arrays = new Array($rt_primitiveArrayCount(dimensions, 0));
    if (arrays.length === 0) {
        return $rt_createMultiArray($rt_doublecls, dimensions);
    }
    let firstDim = dimensions[0] | 0;
    for (let i = 0;i < arrays.length;i = i + 1 | 0) {
        arrays[i] = $rt_createDoubleArray(firstDim);
    }
    return $rt_createMultiArrayImpl($rt_doublecls, arrays, dimensions, 0);
},
$rt_primitiveArrayCount = (dimensions, start) => {
    let val = dimensions[start + 1] | 0;
    for (let i = start + 2;i < dimensions.length;i = i + 1 | 0) {
        val = val * (dimensions[i] | 0) | 0;
        if (val === 0) {
            break;
        }
    }
    return val;
},
$rt_createMultiArrayImpl = (cls, arrays, dimensions, start) => {
    let limit = arrays.length;
    for (let i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
        cls = $rt_arraycls(cls);
        let dim = dimensions[i];
        let index = 0;
        let packedIndex = 0;
        while (index < limit) {
            let arr = $rt_createUnfilledArray(cls, dim);
            for (let j = 0;j < dim;j = j + 1 | 0) {
                arr.data[j] = arrays[index];
                index = index + 1 | 0;
            }
            arrays[packedIndex] = arr;
            packedIndex = packedIndex + 1 | 0;
        }
        limit = packedIndex;
    }
    return arrays[0];
},
$rt_stringPool_instance,
$rt_stringPool = strings => {
    $rt_stringClassInit();
    $rt_stringPool_instance = new Array(strings.length);
    for (let i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
},
$rt_s = index => $rt_stringPool_instance[index],
$rt_charArrayToString = (array, offset, count) => {
    let result = "";
    let limit = offset + count;
    for (let i = offset;i < limit;i = i + 1024 | 0) {
        let next = Math.min(limit, i + 1024 | 0);
        result += String.fromCharCode.apply(null, array.subarray(i, next));
    }
    return result;
},
$rt_fullArrayToString = array => $rt_charArrayToString(array, 0, array.length),
$rt_stringToCharArray = (string, begin, dst, dstBegin, count) => {
    for (let i = 0;i < count;i = i + 1 | 0) {
        dst[dstBegin + i] = string.charCodeAt(begin + i);
    }
},
$rt_fastStringToCharArray = string => {
    let array = new Uint16Array(string.length);
    for (let i = 0;i < array.length;++i) {
        array[i] = string.charCodeAt(i);
    }
    return new $rt_charArrayCls(array);
},
$rt_str = str => str === null ? null : jl_String__init_0(str),
$rt_ustr = str => str === null ? null : str.$nativeString,
$rt_stringClassInit = () => (() => {})(),
$rt_intern;
{
    $rt_intern = str => str;
}
let $rt_isInstance = (obj, cls) => obj instanceof $rt_objcls() && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls),
$rt_isAssignable = (from, to) => {
    if (from === to) {
        return true;
    }
    let map = from.$meta.assignableCache;
    if (typeof map === 'undefined') {
        map = new Map();
        from.$meta.assignableCache = map;
    }
    let cachedResult = map.get(to);
    if (typeof cachedResult !== 'undefined') {
        return cachedResult;
    }
    if (to.$meta.item !== null) {
        let result = from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
        map.set(to, result);
        return result;
    }
    let supertypes = from.$meta.supertypes;
    for (let i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            map.set(to, true);
            return true;
        }
    }
    map.set(to, false);
    return false;
},
$rt_throw = ex => {
    throw $rt_exception(ex);
},
$rt_javaExceptionProp = Symbol("javaException"),
$rt_exception = ex => {
    let err = ex.$jsException;
    if (!err) {
        let javaCause = $rt_throwableCause(ex);
        let jsCause = javaCause !== null ? javaCause.$jsException : void 0;
        let cause = typeof jsCause === "object" ? { cause : jsCause } : void 0;
        err = new JavaError("Java exception thrown", cause);
        if (typeof Error.captureStackTrace === "function") {
            Error.captureStackTrace(err);
        }
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return err;
},
$rt_fillStack = (err, ex) => {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        let stack = $rt_decodeStack(err.stack);
        let javaStack = $rt_createArray($rt_stecls(), stack.length);
        let elem;
        let noStack = false;
        for (let i = 0;i < stack.length;++i) {
            let element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
},
JavaError;
if (typeof Reflect === 'object') {
    let defaultMessage = Symbol("defaultMessage");
    JavaError = function JavaError(message, cause) {
        let self = Reflect.construct(Error, [void 0, cause], JavaError);
        Object.setPrototypeOf(self, JavaError.prototype);
        self[defaultMessage] = message;
        return self;
    }
    ;
    JavaError.prototype = Object.create(Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get() {
        try {
            let javaException = this[$rt_javaExceptionProp];
            if (typeof javaException === 'object') {
                let javaMessage = $rt_throwableMessage(javaException);
                if (typeof javaMessage === "object") {
                    return javaMessage !== null ? javaMessage.toString() : null;
                }
            }
            return this[defaultMessage];
        } catch (e){
            return "Exception occurred trying to extract Java exception message: " + e;
        }
    } } });
} else {
    JavaError = Error;
}
let $rt_javaException = e => e instanceof Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null,
$rt_wrapException = err => {
    let ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
},
$rt_createException = message => jl_RuntimeException__init_1(message),
$rt_throwableMessage = t => jl_Throwable_getMessage(t),
$rt_throwableCause = t => jl_Throwable_getCause(t),
$rt_stecls = () => $rt_objcls(),
$rt_createStackElement = (className, methodName, fileName, lineNumber) => {
    {
        return null;
    }
},
$rt_setStack = (e, stack) => {
},
$rt_createOutputFunction = outputFunction => {
    let buffer = "";
    return msg => {
        let index = 0;
        while (true) {
            let next = msg.indexOf('\n', index);
            if (next < 0) {
                break;
            }
            outputFunction(buffer + msg.substring(index, next));
            buffer = "";
            index = next + 1;
        }
        buffer += msg.substring(index);
    };
},
$rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.info(msg)) : () => {
},
$rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.error(msg)) : () => {
},
$rt_packageData = null,
$rt_packages = data => {
    let i = 0;
    let packages = new Array(data.length);
    for (let j = 0;j < data.length;++j) {
        let prefixIndex = data[i++];
        let prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
},
$rt_metadata = data => {
    let packages = $rt_packageData;
    let i = 0;
    while (i < data.length) {
        let cls = data[i++];
        cls.$meta = {  };
        let m = cls.$meta;
        let className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            let packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        let superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        let flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        let innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            let enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            let declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            let simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        let clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        let virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (let j = 0;j < virtualMethods.length;j += 2) {
                let name = virtualMethods[j];
                let func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (let k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
};
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (let i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : result => {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    let result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        let self = this;
        let callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(() => self.resume());
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
let $rt_suspending = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
},
$rt_resuming = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
},
$rt_startThread = (runner, callback) => (new TeaVMThread(runner)).start(callback),
$rt_currentNativeThread = null,
$rt_nativeThread = () => $rt_currentNativeThread,
$rt_invalidPointer = () => {
    throw new Error("Invalid recorded state");
};
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
let jl_Object_monitorEnterSync = $o => {
    let var$2;
    if ($o.$monitor === null) {
        var$2 = new jl_Object$Monitor;
        var$2.$owner = jl_Thread_currentThread;
        $o.$monitor = var$2;
    }
    $o = $o.$monitor;
    var$2 = $o.$owner;
    if (var$2 === null)
        $o.$owner = jl_Thread_currentThread;
    else if (var$2 !== jl_Thread_currentThread) {
        var$2 = new jl_IllegalStateException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(0);
        $rt_throw(var$2);
    }
    $o.$count = $o.$count + 1 | 0;
},
jl_Object_monitorExitSync = $o => {
    let var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o)) {
        var$2 = $o.$monitor;
        if (var$2.$owner === jl_Thread_currentThread) {
            var$3 = var$2.$count - 1 | 0;
            var$2.$count = var$3;
            if (!var$3)
                var$2.$owner = null;
            jl_Object_isEmptyMonitor($o);
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    $o.$suppressionEnabled = 1;
    $o.$writableStackTrace = 1;
    $rt_throw($o);
},
jl_Object_monitorEnter0 = $o => {
    jl_Object_monitorEnter($o, 1);
},
jl_Object_monitorEnter = ($o, $count) => {
    let var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null) {
            var$3 = new jl_Object$Monitor;
            var$3.$owner = jl_Thread_currentThread;
            $o.$monitor = var$3;
        }
        var$3 = $o.$monitor;
        if (var$3.$owner === null)
            var$3.$owner = jl_Thread_currentThread;
        if (var$3.$owner === jl_Thread_currentThread) {
            var$3.$count = var$3.$count + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait$_asyncCall_$($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, $ptr);
},
jl_Object_monitorEnterWait = ($o, $count, $callback) => {
    let $thread_0, $monitor, var$6;
    $thread_0 = jl_Thread_currentThread;
    $monitor = $o.$monitor;
    if ($monitor === null) {
        $monitor = new jl_Object$Monitor;
        $monitor.$owner = $thread_0;
        $o.$monitor = $monitor;
        if ($thread_0 !== $thread_0)
            jl_Thread_currentThread = $thread_0;
        jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        $callback.$realAsyncCallback.$complete($o);
        return;
    }
    if ($monitor.$owner === null) {
        $monitor.$owner = $thread_0;
        if ($thread_0 !== $thread_0)
            jl_Thread_currentThread = $thread_0;
        jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        $callback.$realAsyncCallback.$complete($o);
        return;
    }
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueueJs$js_body$_30();
    $monitor = $monitor.$enteringThreads;
    var$6 = new jl_Object$monitorEnterWait$lambda$_6_0;
    var$6.$_06 = $thread_0;
    var$6.$_11 = $o;
    var$6.$_20 = $count;
    var$6.$_3 = $callback;
    $callback = var$6;
    $monitor.push($callback);
},
jl_Object_monitorExit0 = $o => {
    jl_Object_monitorExit($o, 1);
},
jl_Object_monitorExit = ($o, $count) => {
    let $monitor;
    if (!jl_Object_isEmptyMonitor($o)) {
        $monitor = $o.$monitor;
        if ($monitor.$owner === jl_Thread_currentThread) {
            $count = $monitor.$count - $count | 0;
            $monitor.$count = $count;
            if ($count > 0)
                return;
            $monitor.$owner = null;
            $monitor = $monitor.$enteringThreads;
            if ($monitor !== null && !($monitor.length ? 0 : 1)) {
                $monitor = new jl_Object$monitorExit$lambda$_8_0;
                $monitor.$_07 = $o;
                otp_Platform_schedule($monitor, 0);
            } else
                jl_Object_isEmptyMonitor($o);
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    $o.$suppressionEnabled = 1;
    $o.$writableStackTrace = 1;
    $rt_throw($o);
},
jl_Object_waitForOtherThreads = $o => {
    let $monitor, $r, var$4;
    if (!jl_Object_isEmptyMonitor($o)) {
        $monitor = $o.$monitor;
        if ($monitor.$owner === null) {
            $o = $monitor.$enteringThreads;
            if ($o !== null && !($o.length ? 0 : 1)) {
                $o = $monitor.$enteringThreads.shift();
                if ($o !== null && !($o instanceof $rt_objcls()))
                    $o = otji_JSWrapper_wrap($o);
                $r = $o;
                $monitor.$enteringThreads = null;
                $o = $r;
                $monitor = $o.$_06;
                $r = $o.$_11;
                var$4 = $o.$_20;
                $o = $o.$_3;
                if (jl_Thread_currentThread !== $monitor)
                    jl_Thread_currentThread = $monitor;
                jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
                $r = $r.$monitor;
                $r.$owner = $monitor;
                $r.$count = $r.$count + var$4 | 0;
                $monitor = null;
                $o.$realAsyncCallback.$complete($monitor);
            }
            return;
        }
    }
},
jl_Object_isEmptyMonitor = $this => {
    let $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        if ($monitor.$owner === null) {
            var$2 = $monitor.$enteringThreads;
            if (!(var$2 !== null && !(var$2.length ? 0 : 1))) {
                $monitor = $monitor.$notifyListeners;
                if ($monitor === null)
                    break a;
                if ($monitor.length ? 0 : 1)
                    break a;
            }
        }
        return 0;
    }
    $this.$monitor = null;
    return 1;
},
jl_Object__init_ = $this => {
    return;
},
jl_Object__init_0 = () => {
    let var_0 = new jl_Object();
    jl_Object__init_(var_0);
    return var_0;
},
jl_Object_getClass = $this => {
    let var$1, var$2;
    var$1 = $this.constructor;
    if (var$1 === null)
        var$2 = null;
    else {
        var$2 = var$1.classObject;
        if (var$2 === null) {
            var$2 = new jl_Class;
            var$2.$platformClass = var$1;
            var$1.classObject = var$2;
        }
    }
    return var$2;
},
jl_Object_hashCode = $this => {
    let var$1;
    var$1 = $this;
    if (!var$1.$id$)
        var$1.$id$ = $rt_nextId();
    return $this.$id$;
},
jl_Object_equals = ($this, $other) => {
    return $this !== $other ? 0 : 1;
},
jl_Object_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.constructor;
    if (var$1 === null)
        var$2 = null;
    else {
        var$2 = var$1.classObject;
        if (var$2 === null) {
            var$2 = new jl_Class;
            var$2.$platformClass = var$1;
            var$1.classObject = var$2;
        }
    }
    if (var$2.$name === null)
        var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
    var$3 = var$2.$name;
    var$1 = $this;
    if (!var$1.$id$)
        var$1.$id$ = $rt_nextId();
    var$2 = otci_IntegerUtil_toUnsignedLogRadixString($this.$id$, 4);
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    var$4 = var$1.$length0;
    var$5 = var$1;
    var$3 = var$3 === null ? $rt_s(1) : var$3;
    var$6 = var$5;
    jl_AbstractStringBuilder_insert(var$6, var$4, var$3);
    var$7 = var$1.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$7, var$7 + 1 | 0);
    var$5.$buffer.data[var$7] = 64;
    jl_AbstractStringBuilder_insert(var$6, var$1.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$5 = new jl_String;
    var$8 = var$1.$buffer;
    var$9 = var$8.data;
    var$7 = var$1.$length0;
    var$10 = var$9.length;
    if (var$7 >= 0 && var$7 <= (var$10 - 0 | 0)) {
        var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, var$7);
        return var$5;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
jl_Object_identity = $this => {
    let $platformThis;
    $platformThis = $this;
    if (!$platformThis.$id$)
        $platformThis.$id$ = $rt_nextId();
    return $this.$id$;
},
jl_Object_clone = $this => {
    let $result;
    if (!$rt_isInstance($this, jl_Cloneable) && $this.constructor.$meta.item === null) {
        $result = new jl_CloneNotSupportedException;
        $result.$suppressionEnabled = 1;
        $result.$writableStackTrace = 1;
        $rt_throw($result);
    }
    $result = otp_Platform_clone($this);
    $result.$id$ = $rt_nextId();
    return $result;
},
jl_Object_notifyAll = $this => {
    let $listeners, $listener;
    $listeners = $this.$monitor;
    if (!($listeners !== null && $listeners.$owner === jl_Thread_currentThread ? 1 : 0)) {
        $listeners = new jl_IllegalMonitorStateException;
        $listeners.$suppressionEnabled = 1;
        $listeners.$writableStackTrace = 1;
        $rt_throw($listeners);
    }
    $listeners = $listeners.$notifyListeners;
    if ($listeners === null)
        return;
    while (!($listeners.length ? 0 : 1)) {
        $listener = $listeners.shift();
        if ($listener !== null && !($listener instanceof $rt_objcls()))
            $listener = otji_JSWrapper_wrap($listener);
        $listener = $listener;
        if (!$listener.$expired())
            otp_Platform_schedule($listener, 0);
    }
    $this.$monitor.$notifyListeners = null;
},
jl_Object_monitorEnterWait$_asyncCall_$ = (var$1, var$2) => {
    let thread = $rt_nativeThread();
    let javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        let result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    let callback = function() {
    };
    callback.$complete = val => {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = e => {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    thread.suspend(() => {
        try {
            jl_Object_monitorEnterWait(var$1, var$2, callback);
            ;
        } catch ($e){
            callback.$error($e);
        }
    });
    return null;
},
cbgssu_UIUtilsEmu = $rt_classWithoutFields(),
cbgssu_UIUtilsEmu_isAndroid = 0,
cbgssu_UIUtilsEmu_isMac = 0,
cbgssu_UIUtilsEmu_isWindows = 0,
cbgssu_UIUtilsEmu_isLinux = 0,
cbgssu_UIUtilsEmu_isIos = 0,
cbgssu_UIUtilsEmu_$callClinit = () => {
    cbgssu_UIUtilsEmu_$callClinit = $rt_eraseClinit(cbgssu_UIUtilsEmu);
    cbgssu_UIUtilsEmu__clinit_();
},
cbgssu_UIUtilsEmu__clinit_ = () => {
    cbgssu_UIUtilsEmu_isAndroid = jl_String_contains($rt_str(navigator.platform), $rt_s(2));
    cbgssu_UIUtilsEmu_isMac = jl_String_contains($rt_str(navigator.platform), $rt_s(3));
    cbgssu_UIUtilsEmu_isWindows = jl_String_contains($rt_str(navigator.platform), $rt_s(4));
    cbgssu_UIUtilsEmu_isLinux = !jl_String_contains($rt_str(navigator.platform), $rt_s(5)) && !jl_String_contains($rt_str(navigator.platform), $rt_s(6)) ? 0 : 1;
    cbgssu_UIUtilsEmu_isIos = !jl_String_contains($rt_str(navigator.platform), $rt_s(7)) && !jl_String_contains($rt_str(navigator.platform), $rt_s(8)) && !jl_String_contains($rt_str(navigator.platform), $rt_s(9)) ? 0 : 1;
},
cbgss_InputListener$1 = $rt_classWithoutFields(),
cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null,
cbgss_InputListener$1_$callClinit = () => {
    cbgss_InputListener$1_$callClinit = $rt_eraseClinit(cbgss_InputListener$1);
    cbgss_InputListener$1__clinit_();
},
cbgss_InputListener$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbgss_InputEvent$Type_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = var$1;
    var$2[cbgss_InputEvent$Type_keyDown.$ordinal0] = 1;
    var$2[cbgss_InputEvent$Type_keyUp.$ordinal0] = 2;
    var$2[cbgss_InputEvent$Type_keyTyped.$ordinal0] = 3;
    var$2[cbgss_InputEvent$Type_touchDown.$ordinal0] = 4;
    var$2[cbgss_InputEvent$Type_touchUp.$ordinal0] = 5;
    var$2[cbgss_InputEvent$Type_touchDragged.$ordinal0] = 6;
    var$2[cbgss_InputEvent$Type_mouseMoved.$ordinal0] = 7;
    var$2[cbgss_InputEvent$Type_scrolled.$ordinal0] = 8;
    var$2[cbgss_InputEvent$Type_enter.$ordinal0] = 9;
    var$2[cbgss_InputEvent$Type_exit.$ordinal0] = 10;
},
jl_Comparable = $rt_classWithoutFields(0),
ji_Serializable = $rt_classWithoutFields(0);
function jl_Enum() {
    let a = this; jl_Object.call(a);
    a.$name0 = null;
    a.$ordinal0 = 0;
}
let jl_Enum_ordinal = $this => {
    return $this.$ordinal0;
},
jl_Enum_toString = $this => {
    return $this.$name0;
},
cbgss_InputEvent$Type = $rt_classWithoutFields(jl_Enum),
cbgss_InputEvent$Type_touchDown = null,
cbgss_InputEvent$Type_touchUp = null,
cbgss_InputEvent$Type_touchDragged = null,
cbgss_InputEvent$Type_mouseMoved = null,
cbgss_InputEvent$Type_enter = null,
cbgss_InputEvent$Type_exit = null,
cbgss_InputEvent$Type_scrolled = null,
cbgss_InputEvent$Type_keyDown = null,
cbgss_InputEvent$Type_keyUp = null,
cbgss_InputEvent$Type_keyTyped = null,
cbgss_InputEvent$Type_$VALUES = null,
cbgss_InputEvent$Type_$values = () => {
    let var$1, var$2;
    var$1 = $rt_createArray(cbgss_InputEvent$Type, 10);
    var$2 = var$1.data;
    var$2[0] = cbgss_InputEvent$Type_touchDown;
    var$2[1] = cbgss_InputEvent$Type_touchUp;
    var$2[2] = cbgss_InputEvent$Type_touchDragged;
    var$2[3] = cbgss_InputEvent$Type_mouseMoved;
    var$2[4] = cbgss_InputEvent$Type_enter;
    var$2[5] = cbgss_InputEvent$Type_exit;
    var$2[6] = cbgss_InputEvent$Type_scrolled;
    var$2[7] = cbgss_InputEvent$Type_keyDown;
    var$2[8] = cbgss_InputEvent$Type_keyUp;
    var$2[9] = cbgss_InputEvent$Type_keyTyped;
    return var$1;
},
cbgss_InputEvent$Type__clinit_ = () => {
    let var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(10);
    var$1.$ordinal0 = 0;
    cbgss_InputEvent$Type_touchDown = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(11);
    var$1.$ordinal0 = 1;
    cbgss_InputEvent$Type_touchUp = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(12);
    var$1.$ordinal0 = 2;
    cbgss_InputEvent$Type_touchDragged = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(13);
    var$1.$ordinal0 = 3;
    cbgss_InputEvent$Type_mouseMoved = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(14);
    var$1.$ordinal0 = 4;
    cbgss_InputEvent$Type_enter = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(15);
    var$1.$ordinal0 = 5;
    cbgss_InputEvent$Type_exit = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(16);
    var$1.$ordinal0 = 6;
    cbgss_InputEvent$Type_scrolled = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(17);
    var$1.$ordinal0 = 7;
    cbgss_InputEvent$Type_keyDown = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(18);
    var$1.$ordinal0 = 8;
    cbgss_InputEvent$Type_keyUp = var$1;
    var$1 = new cbgss_InputEvent$Type;
    var$1.$name0 = $rt_s(19);
    var$1.$ordinal0 = 9;
    cbgss_InputEvent$Type_keyTyped = var$1;
    cbgss_InputEvent$Type_$VALUES = cbgss_InputEvent$Type_$values();
},
cbgu_Pool$Poolable = $rt_classWithoutFields(0),
cbgss_Event = $rt_classWithoutFields(),
cbgss_Action = $rt_classWithoutFields(),
cbgssa_TemporalAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_IntAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_AlphaAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_RotateToAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_FloatAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_RelativeTemporalAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_ScaleByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction),
cbgssa_AddListenerAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_RunnableAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_MoveByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction),
cbgssa_DelegateAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_RemoveAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_RemoveListenerAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_ScaleToAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_Actions = $rt_classWithoutFields(),
cbgssa_RepeatAction = $rt_classWithoutFields(cbgssa_DelegateAction),
cbgss_EventListener = $rt_classWithoutFields(0),
cbgssa_EventAction$1 = $rt_classWithoutFields(),
cbgssa_DelayAction = $rt_classWithoutFields(cbgssa_DelegateAction),
cbgssa_MoveToAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_RemoveActorAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_EventAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_ParallelAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_TouchableAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_AfterAction = $rt_classWithoutFields(cbgssa_DelegateAction),
cbgssa_SequenceAction = $rt_classWithoutFields(cbgssa_ParallelAction),
cbgssa_CountdownEventAction = $rt_classWithoutFields(cbgssa_EventAction),
cbgssa_ColorAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_AddAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_SizeToAction = $rt_classWithoutFields(cbgssa_TemporalAction),
cbgssa_VisibleAction = $rt_classWithoutFields(cbgss_Action);
let cbgssa_SizeByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction),
cbgssa_LayoutAction = $rt_classWithoutFields(cbgss_Action),
cbgssa_TimeScaleAction = $rt_classWithoutFields(cbgssa_DelegateAction),
cbgssa_RotateByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction),
cbgss_Stage$TouchFocus = $rt_classWithoutFields(),
cbgss_Touchable = $rt_classWithoutFields(jl_Enum),
cbgss_Touchable_enabled = null,
cbgss_Touchable_disabled = null,
cbgss_Touchable_childrenOnly = null,
cbgss_Touchable_$VALUES = null,
cbgss_Touchable__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgss_Touchable;
    var$1.$name0 = $rt_s(20);
    var$1.$ordinal0 = 0;
    cbgss_Touchable_enabled = var$1;
    var$2 = new cbgss_Touchable;
    var$2.$name0 = $rt_s(21);
    var$2.$ordinal0 = 1;
    cbgss_Touchable_disabled = var$2;
    var$3 = new cbgss_Touchable;
    var$3.$name0 = $rt_s(22);
    var$3.$ordinal0 = 2;
    cbgss_Touchable_childrenOnly = var$3;
    cbgss_Touchable_$VALUES = $rt_wrapArray(cbgss_Touchable, [var$1, var$2, var$3]);
},
cbgssu_Drawable = $rt_classWithoutFields(0),
cbgssu_BaseDrawable = $rt_classWithoutFields(),
cbgssu_TransformDrawable = $rt_classWithoutFields(0),
cbgssu_TextureRegionDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable),
cbgssu_ChangeListener = $rt_classWithoutFields(),
cbgssu_FocusListener$FocusEvent$Type = $rt_classWithoutFields(jl_Enum),
cbgssu_FocusListener$FocusEvent$Type_keyboard = null,
cbgssu_FocusListener$FocusEvent$Type_scroll = null,
cbgssu_FocusListener$FocusEvent$Type_$VALUES = null,
cbgssu_FocusListener$FocusEvent$Type__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgssu_FocusListener$FocusEvent$Type;
    var$1.$name0 = $rt_s(23);
    var$1.$ordinal0 = 0;
    cbgssu_FocusListener$FocusEvent$Type_keyboard = var$1;
    var$2 = new cbgssu_FocusListener$FocusEvent$Type;
    var$2.$name0 = $rt_s(24);
    var$2.$ordinal0 = 1;
    cbgssu_FocusListener$FocusEvent$Type_scroll = var$2;
    cbgssu_FocusListener$FocusEvent$Type_$VALUES = $rt_wrapArray(cbgssu_FocusListener$FocusEvent$Type, [var$1, var$2]);
},
cbgssu_NinePatchDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable),
cbgssu_ChangeListener$ChangeEvent = $rt_classWithoutFields(cbgss_Event),
jl_Runnable = $rt_classWithoutFields(0),
cbgu_Timer$Task = $rt_classWithoutFields(),
cbgssu_DragScrollListener$1 = $rt_classWithoutFields(cbgu_Timer$Task),
cbgssu_Disableable = $rt_classWithoutFields(0),
cbgssu_DragAndDrop = $rt_classWithoutFields(),
cbgssu_DragAndDrop_tmpVector = null,
cbgssu_DragAndDrop__clinit_ = () => {
    cbgssu_DragAndDrop_tmpVector = new cbgm_Vector2;
},
cbgssu_UIUtils = $rt_classWithoutFields(),
cbgssu_UIUtils_isAndroid = 0,
cbgssu_UIUtils_isMac = 0,
cbgssu_UIUtils_isWindows = 0,
cbgssu_UIUtils_isLinux = 0,
cbgssu_UIUtils_isIos = 0,
cbgssu_UIUtils_$callClinit = () => {
    cbgssu_UIUtils_$callClinit = $rt_eraseClinit(cbgssu_UIUtils);
    cbgssu_UIUtils__clinit_();
},
cbgssu_UIUtils__clinit_ = () => {
    cbgssu_UIUtils_isAndroid = jl_String_contains($rt_str(navigator.platform), $rt_s(2));
    cbgssu_UIUtils_isMac = jl_String_contains($rt_str(navigator.platform), $rt_s(3));
    cbgssu_UIUtils_isWindows = jl_String_contains($rt_str(navigator.platform), $rt_s(4));
    cbgssu_UIUtils_isLinux = !jl_String_contains($rt_str(navigator.platform), $rt_s(5)) && !jl_String_contains($rt_str(navigator.platform), $rt_s(6)) ? 0 : 1;
    cbgssu_UIUtils_isIos = !jl_String_contains($rt_str(navigator.platform), $rt_s(7)) && !jl_String_contains($rt_str(navigator.platform), $rt_s(8)) && !jl_String_contains($rt_str(navigator.platform), $rt_s(9)) ? 0 : 1;
},
cbgssu_FocusListener = $rt_classWithoutFields(),
cbgssu_FocusListener$1 = $rt_classWithoutFields(),
cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = null,
cbgssu_FocusListener$1_$callClinit = () => {
    cbgssu_FocusListener$1_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$1);
    cbgssu_FocusListener$1__clinit_();
},
cbgssu_FocusListener$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbgssu_FocusListener$FocusEvent$Type_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = var$1;
    var$2[cbgssu_FocusListener$FocusEvent$Type_keyboard.$ordinal0] = 1;
    var$2[cbgssu_FocusListener$FocusEvent$Type_scroll.$ordinal0] = 2;
},
jl_Iterable = $rt_classWithoutFields(0),
cbgssu_Selection = $rt_classWithoutFields(),
cbgssu_DragAndDrop$Target = $rt_classWithoutFields(),
cbgssu_ArraySelection = $rt_classWithoutFields(cbgssu_Selection),
cbgssu_FocusListener$FocusEvent = $rt_classWithoutFields(cbgss_Event),
cbgssu_DragScrollListener$2 = $rt_classWithoutFields(cbgu_Timer$Task),
cbgssu_ActorGestureListener = $rt_classWithoutFields();
let cbgssu_ActorGestureListener_tmpCoords = null,
cbgssu_ActorGestureListener_tmpCoords2 = null,
cbgssu_ActorGestureListener__clinit_ = () => {
    cbgssu_ActorGestureListener_tmpCoords = new cbgm_Vector2;
    cbgssu_ActorGestureListener_tmpCoords2 = new cbgm_Vector2;
},
cbgssu_DragAndDrop$Source = $rt_classWithoutFields(),
cbgss_InputListener = $rt_classWithoutFields(),
cbgss_InputListener_tmpCoords = null,
cbgss_InputListener__clinit_ = () => {
    cbgss_InputListener_tmpCoords = new cbgm_Vector2;
},
cbgssu_ClickListener = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_ClickListener_visualPressedDuration = 0.0,
cbgssu_ClickListener__clinit_ = () => {
    cbgssu_ClickListener_visualPressedDuration = 0.10000000149011612;
},
cbgssu_SpriteDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable),
cbgssu_ActorGestureListener$2 = $rt_classWithoutFields(),
cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null,
cbgssu_ActorGestureListener$2_$callClinit = () => {
    cbgssu_ActorGestureListener$2_$callClinit = $rt_eraseClinit(cbgssu_ActorGestureListener$2);
    cbgssu_ActorGestureListener$2__clinit_();
},
cbgssu_ActorGestureListener$2__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbgss_InputEvent$Type_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = var$1;
    var$2[cbgss_InputEvent$Type_touchDown.$ordinal0] = 1;
    var$2[cbgss_InputEvent$Type_touchUp.$ordinal0] = 2;
    var$2[cbgss_InputEvent$Type_touchDragged.$ordinal0] = 3;
},
cbgssu_DragListener = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_DragAndDrop$Payload = $rt_classWithoutFields(),
cbgssu_Cullable = $rt_classWithoutFields(0),
cbgssu_Layout = $rt_classWithoutFields(0),
cbgssu_ScissorStack = $rt_classWithoutFields(),
cbgssu_ScissorStack_scissors = null,
cbgssu_ScissorStack_tmp = null,
cbgssu_ScissorStack_viewport = null,
cbgssu_ScissorStack_$callClinit = () => {
    cbgssu_ScissorStack_$callClinit = $rt_eraseClinit(cbgssu_ScissorStack);
    cbgssu_ScissorStack__clinit_();
},
cbgssu_ScissorStack__clinit_ = () => {
    let var$1;
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 16);
    cbgssu_ScissorStack_scissors = var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgssu_ScissorStack_tmp = var$1;
    cbgssu_ScissorStack_viewport = new cbgm_Rectangle;
},
cbgssu_TiledDrawable = $rt_classWithoutFields(cbgssu_TextureRegionDrawable),
cbgssu_DragScrollListener = $rt_classWithoutFields(cbgssu_DragListener),
cbgssu_DragScrollListener_tmpCoords = null,
cbgssu_DragScrollListener__clinit_ = () => {
    cbgssu_DragScrollListener_tmpCoords = new cbgm_Vector2;
},
cbgssu_DragAndDrop$1 = $rt_classWithoutFields(cbgssu_DragListener),
cbgi_GestureDetector$GestureListener = $rt_classWithoutFields(0),
cbgi_GestureDetector$GestureAdapter = $rt_classWithoutFields(),
cbgssu_ActorGestureListener$1 = $rt_classWithoutFields(cbgi_GestureDetector$GestureAdapter),
cbg_InputProcessor = $rt_classWithoutFields(0),
cbg_InputAdapter = $rt_classWithoutFields(),
cbgu_Disposable = $rt_classWithoutFields(0),
cbgss_Stage = $rt_classWithoutFields(cbg_InputAdapter),
cbgss_InputEvent = $rt_classWithoutFields(cbgss_Event),
cbgssu_SplitPane$SplitPaneStyle = $rt_classWithoutFields(),
cbgssu_Value = $rt_classWithoutFields(),
cbgssu_Value_zero = null,
cbgssu_Value_minWidth = null,
cbgssu_Value_minHeight = null,
cbgssu_Value_prefWidth = null,
cbgssu_Value_prefHeight = null,
cbgssu_Value_maxWidth = null,
cbgssu_Value_maxHeight = null,
cbgssu_Value_$callClinit = () => {
    cbgssu_Value_$callClinit = $rt_eraseClinit(cbgssu_Value);
    cbgssu_Value__clinit_();
},
cbgssu_Value__clinit_ = () => {
    let var$1;
    var$1 = new cbgssu_Value$Fixed;
    cbgssu_Value_$callClinit();
    var$1.$value5 = 0.0;
    cbgssu_Value_zero = var$1;
    cbgssu_Value_minWidth = new cbgssu_Value$1;
    cbgssu_Value_minHeight = new cbgssu_Value$2;
    cbgssu_Value_prefWidth = new cbgssu_Value$3;
    cbgssu_Value_prefHeight = new cbgssu_Value$4;
    cbgssu_Value_maxWidth = new cbgssu_Value$5;
    cbgssu_Value_maxHeight = new cbgssu_Value$6;
},
cbgssu_Value$8 = $rt_classWithoutFields(cbgssu_Value);
let cbgss_Actor = $rt_classWithoutFields(),
cbgss_Group = $rt_classWithoutFields(cbgss_Actor),
cbgss_Group_tmp = null,
cbgss_Group__clinit_ = () => {
    cbgss_Group_tmp = new cbgm_Vector2;
},
cbgssu_WidgetGroup = $rt_classWithoutFields(cbgss_Group),
cbgssu_Table = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_Table_debugTableColor = null,
cbgssu_Table_debugCellColor = null,
cbgssu_Table_debugActorColor = null,
cbgssu_Table_cellPool = null,
cbgssu_Table_backgroundTop = null,
cbgssu_Table_backgroundLeft = null,
cbgssu_Table_backgroundBottom = null,
cbgssu_Table_backgroundRight = null,
cbgssu_Table_$callClinit = () => {
    cbgssu_Table_$callClinit = $rt_eraseClinit(cbgssu_Table);
    cbgssu_Table__clinit_();
},
cbgssu_Table__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgssu_Table_debugTableColor = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 0.0;
    var$1.$b = 0.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgssu_Table_debugCellColor = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 1.0;
    var$1.$b = 0.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgssu_Table_debugActorColor = var$1;
    var$1 = new cbgssu_Table$1;
    var$2 = new cbgu_Array;
    var$2.$ordered = 0;
    var$2.$items = $rt_createArray(jl_Object, 16);
    var$1.$freeObjects = var$2;
    var$1.$max1 = 2147483647;
    cbgssu_Table_cellPool = var$1;
    var$1 = new cbgssu_Table$2;
    cbgssu_Value_$callClinit();
    cbgssu_Table_backgroundTop = var$1;
    cbgssu_Table_backgroundLeft = new cbgssu_Table$3;
    cbgssu_Table_backgroundBottom = new cbgssu_Table$4;
    cbgssu_Table_backgroundRight = new cbgssu_Table$5;
},
cbgssu_Button = $rt_classWithoutFields(cbgssu_Table),
cbgssu_TextButton = $rt_classWithoutFields(cbgssu_Button),
cbgssu_Button$ButtonStyle = $rt_classWithoutFields(),
cbgssu_ImageButton$ImageButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle),
cbgssu_Tooltip = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Tooltip_tmp = null,
cbgssu_Tooltip__clinit_ = () => {
    cbgssu_Tooltip_tmp = new cbgm_Vector2;
},
cbgssu_Window$WindowStyle = $rt_classWithoutFields(),
cbgu_Json$Serializer = $rt_classWithoutFields(0),
cbgu_Json$ReadOnlySerializer = $rt_classWithoutFields(),
cbgssu_Skin$4 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer),
cbgssu_ButtonGroup = $rt_classWithoutFields(),
cbgssu_TextTooltip$TextTooltipStyle = $rt_classWithoutFields(),
cbgssu_Widget = $rt_classWithoutFields(cbgss_Actor),
cbgssu_List = $rt_classWithoutFields(cbgssu_Widget),
cbgssu_SplitPane$1 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Container = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_Tooltip$1 = $rt_classWithoutFields(cbgssu_Container),
cbgssu_TextField = $rt_classWithoutFields(cbgssu_Widget),
cbgssu_TextField_tmp1 = null,
cbgssu_TextField_tmp2 = null,
cbgssu_TextField_tmp3 = null,
cbgssu_TextField_keyRepeatInitialTime = 0.0,
cbgssu_TextField_keyRepeatTime = 0.0,
cbgssu_TextField__clinit_ = () => {
    cbgssu_TextField_tmp1 = new cbgm_Vector2;
    cbgssu_TextField_tmp2 = new cbgm_Vector2;
    cbgssu_TextField_tmp3 = new cbgm_Vector2;
    cbgssu_TextField_keyRepeatInitialTime = 0.4000000059604645;
    cbgssu_TextField_keyRepeatTime = 0.10000000149011612;
},
cbgssu_TextArea = $rt_classWithoutFields(cbgssu_TextField),
cbgssu_Dialog$3 = $rt_classWithoutFields(cbgssu_FocusListener),
cbgssu_SelectBox$SelectBoxScrollPane$2 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_ProgressBar$ProgressBarStyle = $rt_classWithoutFields(),
cbgssu_Slider$SliderStyle = $rt_classWithoutFields(cbgssu_ProgressBar$ProgressBarStyle),
cbgssu_Cell = $rt_classWithoutFields(),
cbgssu_Cell_zerof = null,
cbgssu_Cell_onef = null,
cbgssu_Cell_zeroi = null;
let cbgssu_Cell_onei = null,
cbgssu_Cell_centeri = null,
cbgssu_Cell_topi = null,
cbgssu_Cell_bottomi = null,
cbgssu_Cell_lefti = null,
cbgssu_Cell_righti = null,
cbgssu_Cell_$callClinit = () => {
    cbgssu_Cell_$callClinit = $rt_eraseClinit(cbgssu_Cell);
    cbgssu_Cell__clinit_();
},
cbgssu_Cell__clinit_ = () => {
    let var$1;
    var$1 = new jl_Float;
    var$1.$value3 = 0.0;
    cbgssu_Cell_zerof = var$1;
    var$1 = new jl_Float;
    var$1.$value3 = 1.0;
    cbgssu_Cell_onef = var$1;
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_zeroi = jl_Integer_integerCache.data[128];
    jl_Integer_ensureIntegerCache();
    var$1 = jl_Integer_integerCache.data[129];
    cbgssu_Cell_onei = var$1;
    cbgssu_Cell_centeri = var$1;
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_topi = jl_Integer_integerCache.data[130];
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_bottomi = jl_Integer_integerCache.data[132];
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_lefti = jl_Integer_integerCache.data[136];
    jl_Integer_ensureIntegerCache();
    cbgssu_Cell_righti = jl_Integer_integerCache.data[144];
},
cbgssu_Dialog$2 = $rt_classWithoutFields(cbgssu_ChangeListener),
cbgssu_Label = $rt_classWithoutFields(cbgssu_Widget),
cbgssu_Label_tempColor = null,
cbgssu_Label_prefSizeLayout = null,
cbgssu_Label_$callClinit = () => {
    cbgssu_Label_$callClinit = $rt_eraseClinit(cbgssu_Label);
    cbgssu_Label__clinit_();
},
cbgssu_Label__clinit_ = () => {
    let var$1, var$2;
    cbgssu_Label_tempColor = new cbgg_Color;
    var$1 = new cbggg_GlyphLayout;
    cbggg_GlyphLayout_$callClinit();
    var$2 = new cbgu_Array;
    var$2.$ordered = 1;
    var$2.$items = $rt_createArray(jl_Object, 1);
    var$1.$runs = var$2;
    var$2 = new cbgu_IntArray;
    var$2.$ordered0 = 1;
    var$2.$items0 = $rt_createIntArray(2);
    var$1.$colors = var$2;
    cbgssu_Label_prefSizeLayout = var$1;
},
cbgssu_Table$4 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_ProgressBar = $rt_classWithoutFields(cbgssu_Widget),
cbgssu_Slider = $rt_classWithoutFields(cbgssu_ProgressBar),
cbgssu_TextField$OnscreenKeyboard = $rt_classWithoutFields(0),
cbgssu_Table$3 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_TooltipManager$1 = $rt_classWithoutFields(cbgu_Timer$Task),
cbgssu_Touchpad$TouchpadStyle = $rt_classWithoutFields(),
cbgssu_ScrollPane$2 = $rt_classWithoutFields(cbgssu_ActorGestureListener),
cbgssu_Value$6 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_List$2 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_VerticalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_SplitPane = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_Value$10 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_List$1 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Button$1 = $rt_classWithoutFields(cbgssu_ClickListener),
cbgssu_TextField$TextFieldStyle = $rt_classWithoutFields(),
cbgssu_Value$7 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_TextField$TextFieldFilter = $rt_classWithoutFields(0),
cbgssu_ImageButton = $rt_classWithoutFields(cbgssu_Button),
cbgssu_Table$Debug = $rt_classWithoutFields(jl_Enum),
cbgssu_Table$Debug_none = null,
cbgssu_Table$Debug_all = null,
cbgssu_Table$Debug_table = null,
cbgssu_Table$Debug_cell = null,
cbgssu_Table$Debug_actor = null,
cbgssu_Table$Debug_$VALUES = null,
cbgssu_Table$Debug__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new cbgssu_Table$Debug;
    var$1.$name0 = $rt_s(25);
    var$1.$ordinal0 = 0;
    cbgssu_Table$Debug_none = var$1;
    var$2 = new cbgssu_Table$Debug;
    var$2.$name0 = $rt_s(26);
    var$2.$ordinal0 = 1;
    cbgssu_Table$Debug_all = var$2;
    var$3 = new cbgssu_Table$Debug;
    var$3.$name0 = $rt_s(27);
    var$3.$ordinal0 = 2;
    cbgssu_Table$Debug_table = var$3;
    var$4 = new cbgssu_Table$Debug;
    var$4.$name0 = $rt_s(28);
    var$4.$ordinal0 = 3;
    cbgssu_Table$Debug_cell = var$4;
    var$5 = new cbgssu_Table$Debug;
    var$5.$name0 = $rt_s(29);
    var$5.$ordinal0 = 4;
    cbgssu_Table$Debug_actor = var$5;
    cbgssu_Table$Debug_$VALUES = $rt_wrapArray(cbgssu_Table$Debug, [var$1, var$2, var$3, var$4, var$5]);
},
cbgssu_Value$4 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Tree$TreeStyle = $rt_classWithoutFields(),
cbgssu_Touchpad = $rt_classWithoutFields(cbgssu_Widget),
cbgssu_ScrollPane$1 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_TextField$KeyRepeatTask = $rt_classWithoutFields(cbgu_Timer$Task),
cbgssu_Window = $rt_classWithoutFields(cbgssu_Table),
cbgssu_Window_tmpPosition = null,
cbgssu_Window_tmpSize = null,
cbgssu_Window__clinit_ = () => {
    cbgssu_Window_tmpPosition = new cbgm_Vector2;
    cbgssu_Window_tmpSize = new cbgm_Vector2;
};
let cbgssu_TooltipManager$2 = $rt_classWithoutFields(cbgu_Timer$Task),
cbgssu_ScrollPane = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_SelectBox$SelectBoxScrollPane = $rt_classWithoutFields(cbgssu_ScrollPane),
cbgssu_SelectBox$1 = $rt_classWithoutFields(cbgssu_ArraySelection),
cbgssu_SelectBox$SelectBoxStyle = $rt_classWithoutFields(),
cbgssu_TextTooltip = $rt_classWithoutFields(cbgssu_Tooltip),
cbgssu_Image = $rt_classWithoutFields(cbgssu_Widget),
cbgssu_Window$1 = $rt_classWithoutFields(cbgssu_Table),
cbgssu_Window$3 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Slider$1 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Value$1 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Value$9 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Tree = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_Tree_tmp = null,
cbgssu_Tree__clinit_ = () => {
    cbgssu_Tree_tmp = new cbgm_Vector2;
},
cbgssu_Dialog$4 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_TextButton$TextButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle),
cbgssu_ImageTextButton$ImageTextButtonStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle),
cbgssu_TextField$DefaultOnscreenKeyboard = $rt_classWithoutFields(),
cbgssu_Tree$1 = $rt_classWithoutFields(cbgssu_Selection),
cbgssu_Table$2 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Skin$TintedDrawable = $rt_classWithoutFields(),
cbgssu_SelectBox$SelectBoxScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Skin$2 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer),
cbgssu_Value$3 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_TextField$TextFieldClickListener = $rt_classWithoutFields(cbgssu_ClickListener),
cbgssu_Window$2 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_CheckBox$CheckBoxStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle),
cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter = $rt_classWithoutFields(),
cbgssu_ScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Dialog$4$1 = $rt_classWithoutFields(),
cbgssu_Label$LabelStyle = $rt_classWithoutFields(),
cbgssu_TextArea$TextAreaListener = $rt_classWithoutFields(cbgssu_TextField$TextFieldClickListener),
cbgssu_HorizontalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_TextField$TextFieldListener = $rt_classWithoutFields(0),
cbgssu_TextField$1 = $rt_classWithoutFields(cbgu_Timer$Task),
cbgssu_ParticleEffectActor = $rt_classWithoutFields(cbgss_Actor),
cbgssu_Stack = $rt_classWithoutFields(cbgssu_WidgetGroup),
cbgssu_Value$2 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_SelectBox = $rt_classWithoutFields(cbgssu_Widget),
cbgssu_SelectBox_temp = null,
cbgssu_SelectBox__clinit_ = () => {
    cbgssu_SelectBox_temp = new cbgm_Vector2;
},
cbgssu_Dialog = $rt_classWithoutFields(cbgssu_Window);
function cbgu_Pool() {
    let a = this; jl_Object.call(a);
    a.$max1 = 0;
    a.$peak = 0;
    a.$freeObjects = null;
}
let cbgu_Pool_freeAll = ($this, $objects) => {
    let $freeObjects, $max, $i, $n, $object, var$7, var$8, var$9;
    if ($objects === null) {
        $objects = new jl_IllegalArgumentException;
        $objects.$suppressionEnabled = 1;
        $objects.$writableStackTrace = 1;
        $objects.$message = $rt_s(30);
        $rt_throw($objects);
    }
    $freeObjects = $this.$freeObjects;
    $max = $this.$max1;
    $i = 0;
    $n = $objects.$size;
    while ($i < $n) {
        if ($i >= $objects.$size) {
            $object = new jl_IndexOutOfBoundsException;
            $freeObjects = new jl_StringBuilder;
            $freeObjects.$buffer = $rt_createCharArray(16);
            $max = $freeObjects.$length0;
            var$7 = $freeObjects;
            jl_AbstractStringBuilder_insert(var$7, $max, $rt_s(31));
            jl_AbstractStringBuilder_insert0($freeObjects, $freeObjects.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$7, $freeObjects.$length0, $rt_s(32));
            $max = $objects.$size;
            jl_AbstractStringBuilder_insert0($freeObjects, $freeObjects.$length0, $max, 10);
            $objects = new jl_String;
            var$8 = $freeObjects.$buffer;
            var$9 = var$8.data;
            $i = $freeObjects.$length0;
            $n = var$9.length;
            if ($i >= 0 && $i <= ($n - 0 | 0)) {
                $objects.$nativeString = $rt_charArrayToString(var$8.data, 0, $i);
                $object.$suppressionEnabled = 1;
                $object.$writableStackTrace = 1;
                $object.$message = $objects;
                $rt_throw($object);
            }
            $objects = new jl_IndexOutOfBoundsException;
            $objects.$suppressionEnabled = 1;
            $objects.$writableStackTrace = 1;
            $rt_throw($objects);
        }
        $object = $objects.$items.data[$i];
        if ($object !== null) {
            if ($freeObjects.$size < $max) {
                cbgu_Array_add($freeObjects, $object);
                if ($rt_isInstance($object, cbgu_Pool$Poolable))
                    $object.$reset();
            } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
                $object.$reset();
        }
        $i = $i + 1 | 0;
    }
    $max = $this.$peak;
    $i = $freeObjects.$size;
    if ($max > $i)
        $i = $max;
    $this.$peak = $i;
},
cbgssu_Table$1 = $rt_classWithoutFields(cbgu_Pool),
cbgssu_SelectBox$SelectBoxScrollPane$4 = $rt_classWithoutFields(cbgssu_List),
cbgssu_Skin$3 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer),
cbgssu_Skin$5 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer),
cbgssu_ScrollPane$ScrollPaneStyle = $rt_classWithoutFields(),
cbgssu_Tree$Node = $rt_classWithoutFields(),
cbgssu_Dialog$1 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_SelectBox$2 = $rt_classWithoutFields(cbgssu_ClickListener),
cbgssu_Table$5 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_List$ListStyle = $rt_classWithoutFields(),
cbgssu_Tree$2 = $rt_classWithoutFields(cbgssu_ClickListener),
cbgssu_TooltipManager = $rt_classWithoutFields(),
cbgu_Json = $rt_classWithoutFields(),
cbgssu_Skin$1 = $rt_classWithoutFields(cbgu_Json),
cbgssu_Skin = $rt_classWithoutFields(),
cbgssu_Skin_defaultTagClasses = null,
cbgssu_Skin__clinit_ = () => {
    cbgssu_Skin_defaultTagClasses = $rt_wrapArray(jl_Class, [$rt_cls(cbggg_BitmapFont), $rt_cls(cbgg_Color), $rt_cls(cbgssu_Skin$TintedDrawable), $rt_cls(cbgssu_NinePatchDrawable), $rt_cls(cbgssu_SpriteDrawable), $rt_cls(cbgssu_TextureRegionDrawable), $rt_cls(cbgssu_TiledDrawable), $rt_cls(cbgssu_Button$ButtonStyle), $rt_cls(cbgssu_CheckBox$CheckBoxStyle), $rt_cls(cbgssu_ImageButton$ImageButtonStyle), $rt_cls(cbgssu_ImageTextButton$ImageTextButtonStyle), $rt_cls(cbgssu_Label$LabelStyle), $rt_cls(cbgssu_List$ListStyle),
    $rt_cls(cbgssu_ProgressBar$ProgressBarStyle), $rt_cls(cbgssu_ScrollPane$ScrollPaneStyle), $rt_cls(cbgssu_SelectBox$SelectBoxStyle), $rt_cls(cbgssu_Slider$SliderStyle), $rt_cls(cbgssu_SplitPane$SplitPaneStyle), $rt_cls(cbgssu_TextButton$TextButtonStyle), $rt_cls(cbgssu_TextField$TextFieldStyle), $rt_cls(cbgssu_TextTooltip$TextTooltipStyle), $rt_cls(cbgssu_Touchpad$TouchpadStyle), $rt_cls(cbgssu_Tree$TreeStyle), $rt_cls(cbgssu_Window$WindowStyle)]);
},
cbgm_Shape2D = $rt_classWithoutFields(0),
cbgm_Rectangle = $rt_classWithoutFields(),
cbgm_Rectangle_tmp = null,
cbgm_Rectangle_tmp2 = null,
cbgm_Rectangle__clinit_ = () => {
    cbgm_Rectangle_tmp = new cbgm_Rectangle;
    cbgm_Rectangle_tmp2 = new cbgm_Rectangle;
},
cbgssu_Table$DebugRect = $rt_classWithoutFields(cbgm_Rectangle),
cbgssu_Table$DebugRect_pool = null,
cbgssu_Table$DebugRect_$callClinit = () => {
    cbgssu_Table$DebugRect_$callClinit = $rt_eraseClinit(cbgssu_Table$DebugRect);
    cbgssu_Table$DebugRect__clinit_();
},
cbgssu_Table$DebugRect__init_ = $this => {
    cbgssu_Table$DebugRect_$callClinit();
},
cbgssu_Table$DebugRect__init_0 = () => {
    let var_0 = new cbgssu_Table$DebugRect();
    cbgssu_Table$DebugRect__init_(var_0);
    return var_0;
},
cbgssu_Table$DebugRect__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
    cbgu_Pools_$callClinit();
    var$1 = cbgu_Pools_typePools;
    var$2 = cbgu_ObjectMap_locateKey(var$1, $rt_cls(cbgssu_Table$DebugRect));
    var$1 = var$2 < 0 ? null : var$1.$valueTable.data[var$2];
    if (var$1 === null) {
        var$1 = new cbgu_ReflectionPool;
        var$3 = new cbgu_Array;
        var$3.$ordered = 0;
        var$3.$items = $rt_createArray(jl_Object, 4);
        var$1.$freeObjects = var$3;
        var$1.$max1 = 100;
        a: {
            try {
                var$3 = cbgur_ClassReflection_getConstructor($rt_cls(cbgssu_Table$DebugRect), null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
            try {
                var$3 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbgssu_Table$DebugRect), null);
                cbgur_Constructor_setAccessible(var$3, 1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cbgur_ReflectionException) {
                } else {
                    throw $$e;
                }
            }
            var$3 = null;
        }
        var$1.$constructor = var$3;
        if (var$3 === null) {
            var$1 = new jl_RuntimeException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length0;
            var$5 = var$3;
            jl_AbstractStringBuilder_insert(var$5, var$4, $rt_s(33));
            if ($rt_cls(cbgssu_Table$DebugRect).$name === null)
                $rt_cls(cbgssu_Table$DebugRect).$name = $rt_str($rt_cls(cbgssu_Table$DebugRect).$platformClass.$meta.name);
            var$6 = $rt_cls(cbgssu_Table$DebugRect).$name;
            jl_AbstractStringBuilder_insert(var$5, var$3.$length0, var$6);
            var$6 = new jl_String;
            var$7 = var$3.$buffer;
            var$8 = var$7.data;
            var$2 = var$3.$length0;
            var$9 = var$8.length;
            if (var$2 >= 0 && var$2 <= (var$9 - 0 | 0)) {
                var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$2);
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$message = var$6;
                $rt_throw(var$1);
            }
            var$6 = new jl_IndexOutOfBoundsException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbgssu_Table$DebugRect), var$1);
    }
    cbgssu_Table$DebugRect_pool = var$1;
};
function cbgssu_Value$Fixed() {
    cbgssu_Value.call(this);
    this.$value5 = 0.0;
}
let cbgssu_Value$Fixed_cache = null,
cbgssu_Value$Fixed__clinit_ = () => {
    cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
},
cbgssu_SelectBox$SelectBoxScrollPane$1 = $rt_classWithoutFields(cbgssu_ClickListener),
cbgssu_ImageTextButton = $rt_classWithoutFields(cbgssu_Button),
cbgssu_Touchpad$1 = $rt_classWithoutFields(cbgss_InputListener),
cbgssu_Value$5 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_CheckBox = $rt_classWithoutFields(cbgssu_TextButton),
cbgm_Matrix4Emu = $rt_classWithoutFields(),
cbgm_Matrix4Emu_tmp = null,
cbgm_Matrix4Emu_quat = null,
cbgm_Matrix4Emu_quat2 = null,
cbgm_Matrix4Emu_l_vez = null,
cbgm_Matrix4Emu_l_vex = null,
cbgm_Matrix4Emu_l_vey = null,
cbgm_Matrix4Emu_tmpVec = null,
cbgm_Matrix4Emu_tmpMat = null,
cbgm_Matrix4Emu_right = null,
cbgm_Matrix4Emu_tmpForward = null,
cbgm_Matrix4Emu_tmpUp = null,
cbgm_Matrix4Emu_$callClinit = () => {
    cbgm_Matrix4Emu_$callClinit = $rt_eraseClinit(cbgm_Matrix4Emu);
    cbgm_Matrix4Emu__clinit_();
},
cbgm_Matrix4Emu__clinit_ = () => {
    let var$1;
    cbgm_Matrix4Emu_tmp = $rt_createFloatArray(16);
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4Emu_quat = var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4Emu_quat2 = var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Matrix4Emu_l_vez = var$1;
    cbgm_Matrix4Emu_l_vex = new cbgm_Vector3;
    cbgm_Matrix4Emu_l_vey = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpVec = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4Emu_right = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpForward = new cbgm_Vector3;
    cbgm_Matrix4Emu_tmpUp = new cbgm_Vector3;
},
cbgm_Polygon = $rt_classWithoutFields(),
cbgm_Interpolation = $rt_classWithoutFields(),
cbgm_Interpolation_linear = null,
cbgm_Interpolation_smooth = null,
cbgm_Interpolation_smooth2 = null,
cbgm_Interpolation_smoother = null,
cbgm_Interpolation_fade = null,
cbgm_Interpolation_pow2 = null,
cbgm_Interpolation_pow2In = null,
cbgm_Interpolation_slowFast = null,
cbgm_Interpolation_pow2Out = null,
cbgm_Interpolation_fastSlow = null,
cbgm_Interpolation_pow2InInverse = null,
cbgm_Interpolation_pow2OutInverse = null,
cbgm_Interpolation_pow3 = null,
cbgm_Interpolation_pow3In = null,
cbgm_Interpolation_pow3Out = null,
cbgm_Interpolation_pow3InInverse = null,
cbgm_Interpolation_pow3OutInverse = null,
cbgm_Interpolation_pow4 = null,
cbgm_Interpolation_pow4In = null,
cbgm_Interpolation_pow4Out = null,
cbgm_Interpolation_pow5 = null,
cbgm_Interpolation_pow5In = null,
cbgm_Interpolation_pow5Out = null,
cbgm_Interpolation_sine = null,
cbgm_Interpolation_sineIn = null,
cbgm_Interpolation_sineOut = null,
cbgm_Interpolation_exp10 = null;
let cbgm_Interpolation_exp10In = null,
cbgm_Interpolation_exp10Out = null,
cbgm_Interpolation_exp5 = null,
cbgm_Interpolation_exp5In = null,
cbgm_Interpolation_exp5Out = null,
cbgm_Interpolation_circle = null,
cbgm_Interpolation_circleIn = null,
cbgm_Interpolation_circleOut = null,
cbgm_Interpolation_elastic = null,
cbgm_Interpolation_elasticIn = null,
cbgm_Interpolation_elasticOut = null,
cbgm_Interpolation_swing = null,
cbgm_Interpolation_swingIn = null,
cbgm_Interpolation_swingOut = null,
cbgm_Interpolation_bounce = null,
cbgm_Interpolation_bounceIn = null,
cbgm_Interpolation_bounceOut = null,
cbgm_Interpolation_$callClinit = () => {
    cbgm_Interpolation_$callClinit = $rt_eraseClinit(cbgm_Interpolation);
    cbgm_Interpolation__clinit_();
},
cbgm_Interpolation__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgm_Interpolation$1;
    cbgm_Interpolation_$callClinit();
    cbgm_Interpolation_linear = var$1;
    cbgm_Interpolation_smooth = new cbgm_Interpolation$2;
    cbgm_Interpolation_smooth2 = new cbgm_Interpolation$3;
    var$1 = new cbgm_Interpolation$4;
    cbgm_Interpolation_smoother = var$1;
    cbgm_Interpolation_fade = var$1;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 2;
    cbgm_Interpolation_pow2 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 2;
    cbgm_Interpolation_pow2In = var$1;
    cbgm_Interpolation_slowFast = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 2;
    cbgm_Interpolation_pow2Out = var$1;
    cbgm_Interpolation_fastSlow = var$1;
    cbgm_Interpolation_pow2InInverse = new cbgm_Interpolation$5;
    cbgm_Interpolation_pow2OutInverse = new cbgm_Interpolation$6;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 3;
    cbgm_Interpolation_pow3 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 3;
    cbgm_Interpolation_pow3In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 3;
    cbgm_Interpolation_pow3Out = var$1;
    cbgm_Interpolation_pow3InInverse = new cbgm_Interpolation$7;
    cbgm_Interpolation_pow3OutInverse = new cbgm_Interpolation$8;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 4;
    cbgm_Interpolation_pow4 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 4;
    cbgm_Interpolation_pow4In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 4;
    cbgm_Interpolation_pow4Out = var$1;
    var$1 = new cbgm_Interpolation$Pow;
    var$1.$power = 5;
    cbgm_Interpolation_pow5 = var$1;
    var$1 = new cbgm_Interpolation$PowIn;
    var$1.$power = 5;
    cbgm_Interpolation_pow5In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    var$1.$power = 5;
    cbgm_Interpolation_pow5Out = var$1;
    cbgm_Interpolation_sine = new cbgm_Interpolation$9;
    cbgm_Interpolation_sineIn = new cbgm_Interpolation$10;
    cbgm_Interpolation_sineOut = new cbgm_Interpolation$11;
    var$1 = new cbgm_Interpolation$Exp;
    var$1.$value1 = 2.0;
    var$1.$power0 = 10.0;
    var$2 = jl_Math_powImpl(2.0, (-10.0));
    var$1.$min1 = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp10 = var$1;
    var$1 = new cbgm_Interpolation$ExpIn;
    var$1.$value1 = 2.0;
    var$1.$power0 = 10.0;
    var$2 = jl_Math_powImpl(2.0, (-10.0));
    var$1.$min1 = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp10In = var$1;
    var$1 = new cbgm_Interpolation$ExpOut;
    var$1.$value1 = 2.0;
    var$1.$power0 = 10.0;
    var$2 = jl_Math_powImpl(2.0, (-10.0));
    var$1.$min1 = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp10Out = var$1;
    var$1 = new cbgm_Interpolation$Exp;
    var$1.$value1 = 2.0;
    var$1.$power0 = 5.0;
    var$2 = jl_Math_powImpl(2.0, (-5.0));
    var$1.$min1 = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp5 = var$1;
    var$1 = new cbgm_Interpolation$ExpIn;
    var$1.$value1 = 2.0;
    var$1.$power0 = 5.0;
    var$2 = jl_Math_powImpl(2.0, (-5.0));
    var$1.$min1 = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp5In = var$1;
    var$1 = new cbgm_Interpolation$ExpOut;
    var$1.$value1 = 2.0;
    var$1.$power0 = 5.0;
    var$2 = jl_Math_powImpl(2.0, (-5.0));
    var$1.$min1 = var$2;
    var$1.$scale = 1.0 / (1.0 - var$2);
    cbgm_Interpolation_exp5Out = var$1;
    cbgm_Interpolation_circle = new cbgm_Interpolation$12;
    cbgm_Interpolation_circleIn = new cbgm_Interpolation$13;
    cbgm_Interpolation_circleOut = new cbgm_Interpolation$14;
    var$1 = new cbgm_Interpolation$Elastic;
    var$1.$value4 = 2.0;
    var$1.$power1 = 10.0;
    var$1.$scale0 = 1.0;
    var$1.$bounces = (-21.99114990234375);
    cbgm_Interpolation_elastic = var$1;
    var$1 = new cbgm_Interpolation$ElasticIn;
    var$1.$value4 = 2.0;
    var$1.$power1 = 10.0;
    var$1.$scale0 = 1.0;
    var$1.$bounces = 18.84955596923828;
    cbgm_Interpolation_elasticIn = var$1;
    var$1 = new cbgm_Interpolation$ElasticOut;
    var$1.$value4 = 2.0;
    var$1.$power1 = 10.0;
    var$1.$scale0 = 1.0;
    var$1.$bounces = (-21.99114990234375);
    cbgm_Interpolation_elasticOut = var$1;
    var$1 = new cbgm_Interpolation$Swing;
    var$1.$scale1 = 3.0;
    cbgm_Interpolation_swing = var$1;
    var$1 = new cbgm_Interpolation$SwingIn;
    var$1.$scale3 = 2.0;
    cbgm_Interpolation_swingIn = var$1;
    var$1 = new cbgm_Interpolation$SwingOut;
    var$1.$scale2 = 2.0;
    cbgm_Interpolation_swingOut = var$1;
    var$1 = new cbgm_Interpolation$Bounce;
    cbgm_Interpolation$BounceOut__init_(var$1, 4);
    cbgm_Interpolation_bounce = var$1;
    var$1 = new cbgm_Interpolation$BounceIn;
    cbgm_Interpolation$BounceOut__init_(var$1, 4);
    cbgm_Interpolation_bounceIn = var$1;
    cbgm_Interpolation_bounceOut = cbgm_Interpolation$BounceOut__init_0(4);
};
function cbgm_Interpolation$BounceOut() {
    let a = this; cbgm_Interpolation.call(a);
    a.$widths = null;
    a.$heights = null;
}
let cbgm_Interpolation$BounceOut__init_ = ($this, $bounces) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbgm_Interpolation_$callClinit();
    if ($bounces >= 2 && $bounces <= 5) {
        a: {
            var$2 = $rt_createFloatArray($bounces);
            $this.$widths = var$2;
            var$3 = $rt_createFloatArray($bounces);
            var$4 = var$3.data;
            $this.$heights = var$3;
            var$4[0] = 1.0;
            switch ($bounces) {
                case 2:
                    break;
                case 3:
                    var$3 = var$2.data;
                    var$3[0] = 0.4000000059604645;
                    var$3[1] = 0.4000000059604645;
                    var$3[2] = 0.20000000298023224;
                    var$4[1] = 0.33000001311302185;
                    var$4[2] = 0.10000000149011612;
                    break a;
                case 4:
                    var$3 = var$2.data;
                    var$3[0] = 0.3400000035762787;
                    var$3[1] = 0.3400000035762787;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.15000000596046448;
                    var$4[1] = 0.25999999046325684;
                    var$4[2] = 0.10999999940395355;
                    var$4[3] = 0.029999999329447746;
                    break a;
                case 5:
                    var$3 = var$2.data;
                    var$3[0] = 0.30000001192092896;
                    var$3[1] = 0.30000001192092896;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.10000000149011612;
                    var$3[4] = 0.10000000149011612;
                    var$4[1] = 0.44999998807907104;
                    var$4[2] = 0.30000001192092896;
                    var$4[3] = 0.15000000596046448;
                    var$4[4] = 0.05999999865889549;
                    break a;
                default:
                    break a;
            }
            var$3 = var$2.data;
            var$3[0] = 0.6000000238418579;
            var$3[1] = 0.4000000059604645;
            var$4[1] = 0.33000001311302185;
        }
        var$2 = var$2.data;
        var$2[0] = var$2[0] * 2.0;
        return;
    }
    var$5 = new jl_IllegalArgumentException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$7 = var$6.$length0;
    jl_AbstractStringBuilder_insert(var$6, var$7, $rt_s(34));
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $bounces, 10);
    var$8 = new jl_String;
    var$2 = var$6.$buffer;
    var$3 = var$2.data;
    var$7 = var$6.$length0;
    var$9 = var$3.length;
    if (var$7 >= 0 && var$7 <= (var$9 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$2.data, 0, var$7);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    var$6 = new jl_IndexOutOfBoundsException;
    var$6.$suppressionEnabled = 1;
    var$6.$writableStackTrace = 1;
    $rt_throw(var$6);
},
cbgm_Interpolation$BounceOut__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$BounceOut();
    cbgm_Interpolation$BounceOut__init_(var_1, var_0);
    return var_1;
};
function cbgmc_BoundingBox() {
    let a = this; jl_Object.call(a);
    a.$min2 = null;
    a.$max3 = null;
    a.$cnt = null;
    a.$dim = null;
}
let cbgmc_BoundingBox_tmpVector = null,
cbgmc_BoundingBox_$callClinit = () => {
    cbgmc_BoundingBox_$callClinit = $rt_eraseClinit(cbgmc_BoundingBox);
    cbgmc_BoundingBox__clinit_();
},
cbgmc_BoundingBox_set = ($this, $minimum, $maximum) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = $this.$min2;
    var$4 = $minimum.$x;
    var$5 = $maximum.$x;
    if (var$4 < var$5)
        var$5 = var$4;
    var$4 = $minimum.$y;
    var$6 = $maximum.$y;
    if (var$4 < var$6)
        var$6 = var$4;
    var$4 = $minimum.$z;
    var$7 = $maximum.$z;
    if (var$4 < var$7)
        var$7 = var$4;
    var$3.$x = var$5;
    var$3.$y = var$6;
    var$3.$z = var$7;
    var$8 = $this.$max3;
    var$4 = $minimum.$x;
    var$6 = $maximum.$x;
    if (var$4 > var$6)
        var$6 = var$4;
    var$4 = $minimum.$y;
    var$7 = $maximum.$y;
    if (var$4 > var$7)
        var$7 = var$4;
    var$4 = $minimum.$z;
    var$5 = $maximum.$z;
    if (var$4 > var$5)
        var$5 = var$4;
    var$8.$x = var$6;
    var$8.$y = var$7;
    var$8.$z = var$5;
    $minimum = $this.$cnt;
    var$7 = var$3.$x;
    var$9 = var$3.$y;
    var$10 = var$3.$z;
    $minimum.$x = var$7;
    $minimum.$y = var$9;
    $minimum.$z = var$10;
    var$4 = var$8.$x;
    var$5 = var$8.$y;
    var$6 = var$8.$z;
    var$7 = var$7 + var$4;
    var$9 = var$9 + var$5;
    var$10 = var$10 + var$6;
    $minimum.$x = var$7;
    $minimum.$y = var$9;
    $minimum.$z = var$10;
    var$5 = var$7 * 0.5;
    var$6 = var$9 * 0.5;
    var$4 = var$10 * 0.5;
    $minimum.$x = var$5;
    $minimum.$y = var$6;
    $minimum.$z = var$4;
    $minimum = $this.$dim;
    var$6 = var$8.$x;
    var$7 = var$8.$y;
    var$9 = var$8.$z;
    $minimum.$x = var$6;
    $minimum.$y = var$7;
    $minimum.$z = var$9;
    var$4 = var$3.$x;
    var$5 = var$3.$y;
    var$10 = var$3.$z;
    var$6 = var$6 - var$4;
    var$4 = var$7 - var$5;
    var$5 = var$9 - var$10;
    $minimum.$x = var$6;
    $minimum.$y = var$4;
    $minimum.$z = var$5;
    return $this;
},
cbgmc_BoundingBox__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgmc_BoundingBox_tmpVector = var$1;
},
cbgmc_Sphere = $rt_classWithoutFields();
function cbgmc_Ray() {
    let a = this; jl_Object.call(a);
    a.$origin = null;
    a.$direction0 = null;
}
let cbgmc_Ray_tmp = null,
cbgmc_Ray_$callClinit = () => {
    cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
    cbgmc_Ray__clinit_();
},
cbgmc_Ray__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgmc_Ray_tmp = var$1;
},
cbgmc_OrientedBoundingBox = $rt_classWithoutFields(),
cbgmc_OrientedBoundingBox_tempAxes = null,
cbgmc_OrientedBoundingBox_tempVertices = null,
cbgmc_OrientedBoundingBox_tmpVectors = null,
cbgmc_OrientedBoundingBox_$callClinit = () => {
    cbgmc_OrientedBoundingBox_$callClinit = $rt_eraseClinit(cbgmc_OrientedBoundingBox);
    cbgmc_OrientedBoundingBox__clinit_();
},
cbgmc_OrientedBoundingBox__clinit_ = () => {
    let var$1, var$2, var$3, $i, var$5, var$6;
    cbgmc_OrientedBoundingBox_tempAxes = $rt_createArray(cbgm_Vector3, 15);
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    cbgmc_OrientedBoundingBox_tempVertices = var$1;
    var$2 = $rt_createArray(cbgm_Vector3, 9);
    var$3 = var$2.data;
    cbgmc_OrientedBoundingBox_tmpVectors = var$2;
    $i = 0;
    var$5 = var$3.length;
    while ($i < var$5) {
        var$6 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$3[$i] = var$6;
        $i = $i + 1 | 0;
    }
    var$1 = var$1.data;
    $i = 0;
    var$5 = var$1.length;
    while ($i < var$5) {
        var$6 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$1[$i] = var$6;
        $i = $i + 1 | 0;
    }
},
cbgmc_Segment = $rt_classWithoutFields(),
cbgm_Vector = $rt_classWithoutFields(0);
function cbgm_Vector3() {
    let a = this; jl_Object.call(a);
    a.$x = 0.0;
    a.$y = 0.0;
    a.$z = 0.0;
}
let cbgm_Vector3_X = null,
cbgm_Vector3_Y = null,
cbgm_Vector3_Z = null,
cbgm_Vector3_Zero = null,
cbgm_Vector3_tmpMat = null,
cbgm_Vector3_$callClinit = () => {
    cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
    cbgm_Vector3__clinit_();
},
cbgm_Vector3_crs = ($this, $vector) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = $this.$y;
    var$3 = $vector.$z;
    var$4 = var$2 * var$3;
    var$5 = $this.$z;
    var$6 = $vector.$y;
    var$7 = var$4 - var$5 * var$6;
    var$4 = $vector.$x;
    var$5 = var$5 * var$4;
    var$8 = $this.$x;
    var$3 = var$5 - var$8 * var$3;
    var$2 = var$8 * var$6 - var$2 * var$4;
    $this.$x = var$7;
    $this.$y = var$3;
    $this.$z = var$2;
    return $this;
},
cbgm_Vector3__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$1.$x = 1.0;
    var$1.$y = 0.0;
    var$1.$z = 0.0;
    cbgm_Vector3_X = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x = 0.0;
    var$1.$y = 1.0;
    var$1.$z = 0.0;
    cbgm_Vector3_Y = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x = 0.0;
    var$1.$y = 0.0;
    var$1.$z = 1.0;
    cbgm_Vector3_Z = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x = 0.0;
    var$1.$y = 0.0;
    var$1.$z = 0.0;
    cbgm_Vector3_Zero = var$1;
    cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
},
cbgm_Interpolation$7 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Matrix3 = $rt_classWithoutFields(),
cbgm_Interpolation$10 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Circle = $rt_classWithoutFields(),
cbgm_Interpolation$6 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_GridPoint2 = $rt_classWithoutFields(),
cbgm_Interpolation$3 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Affine2 = $rt_classWithoutFields(),
cbgm_Interpolation$1 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Octree = $rt_classWithoutFields(),
cbgm_Octree_tmp = null,
cbgm_Octree_$callClinit = () => {
    cbgm_Octree_$callClinit = $rt_eraseClinit(cbgm_Octree);
    cbgm_Octree__clinit_();
},
cbgm_Octree__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Octree_tmp = var$1;
},
cbgm_Interpolation$12 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Vector2() {
    let a = this; jl_Object.call(a);
    a.$x2 = 0.0;
    a.$y1 = 0.0;
}
let cbgm_Vector2_X = null,
cbgm_Vector2_Y = null,
cbgm_Vector2_Zero = null,
cbgm_Vector2__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x2 = 1.0;
    var$1.$y1 = 0.0;
    cbgm_Vector2_X = var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x2 = 0.0;
    var$1.$y1 = 1.0;
    cbgm_Vector2_Y = var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x2 = 0.0;
    var$1.$y1 = 0.0;
    cbgm_Vector2_Zero = var$1;
},
cbgm_Interpolation$BounceIn = $rt_classWithoutFields(cbgm_Interpolation$BounceOut);
function cbgm_Vector4() {
    let a = this; jl_Object.call(a);
    a.$x3 = 0.0;
    a.$y2 = 0.0;
    a.$z1 = 0.0;
    a.$w0 = 0.0;
}
let cbgm_Vector4_X = null,
cbgm_Vector4_Y = null,
cbgm_Vector4_Z = null,
cbgm_Vector4_W = null,
cbgm_Vector4_Zero = null,
cbgm_Vector4__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x3 = 1.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = 0.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_X = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x3 = 0.0;
    var$1.$y2 = 1.0;
    var$1.$z1 = 0.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_Y = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x3 = 0.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = 1.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_Z = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x3 = 0.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = 0.0;
    var$1.$w0 = 1.0;
    cbgm_Vector4_W = var$1;
    var$1 = new cbgm_Vector4;
    var$1.$x3 = 0.0;
    var$1.$y2 = 0.0;
    var$1.$z1 = 0.0;
    var$1.$w0 = 0.0;
    cbgm_Vector4_Zero = var$1;
},
cbgm_CumulativeDistribution = $rt_classWithoutFields(),
cbgm_Intersector = $rt_classWithoutFields(),
cbgm_Intersector_v0 = null,
cbgm_Intersector_v1 = null,
cbgm_Intersector_v2 = null,
cbgm_Intersector_floatArray = null,
cbgm_Intersector_floatArray2 = null,
cbgm_Intersector_ip = null,
cbgm_Intersector_ep1 = null,
cbgm_Intersector_ep2 = null,
cbgm_Intersector_s = null,
cbgm_Intersector_e = null,
cbgm_Intersector_v2a = null,
cbgm_Intersector_v2b = null,
cbgm_Intersector_v2c = null,
cbgm_Intersector_v2d = null,
cbgm_Intersector_p = null,
cbgm_Intersector_i = null,
cbgm_Intersector_dir = null,
cbgm_Intersector_start = null,
cbgm_Intersector_best = null,
cbgm_Intersector_tmp = null,
cbgm_Intersector_tmp1 = null,
cbgm_Intersector_tmp2 = null,
cbgm_Intersector_tmp3 = null,
cbgm_Intersector_intersection = null,
cbgm_Intersector_$callClinit = () => {
    cbgm_Intersector_$callClinit = $rt_eraseClinit(cbgm_Intersector);
    cbgm_Intersector__clinit_();
},
cbgm_Intersector__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Intersector_v0 = var$1;
    cbgm_Intersector_v1 = new cbgm_Vector3;
    cbgm_Intersector_v2 = new cbgm_Vector3;
    var$1 = new cbgu_FloatArray;
    var$1.$ordered1 = 1;
    var$1.$items1 = $rt_createFloatArray(16);
    cbgm_Intersector_floatArray = var$1;
    var$1 = new cbgu_FloatArray;
    var$1.$ordered1 = 1;
    var$1.$items1 = $rt_createFloatArray(16);
    cbgm_Intersector_floatArray2 = var$1;
    cbgm_Intersector_ip = new cbgm_Vector2;
    cbgm_Intersector_ep1 = new cbgm_Vector2;
    cbgm_Intersector_ep2 = new cbgm_Vector2;
    cbgm_Intersector_s = new cbgm_Vector2;
    cbgm_Intersector_e = new cbgm_Vector2;
    cbgm_Intersector_v2a = new cbgm_Vector2;
    cbgm_Intersector_v2b = new cbgm_Vector2;
    cbgm_Intersector_v2c = new cbgm_Vector2;
    cbgm_Intersector_v2d = new cbgm_Vector2;
    var$1 = new cbgm_Plane;
    var$2 = new cbgm_Vector3;
    var$1.$normal = var$2;
    var$1.$d = 0.0;
    var$2.$x = 0.0;
    var$2.$y = 0.0;
    var$2.$z = 0.0;
    var$1.$d = 0.0;
    cbgm_Intersector_p = var$1;
    cbgm_Intersector_i = new cbgm_Vector3;
    cbgm_Intersector_dir = new cbgm_Vector3;
    cbgm_Intersector_start = new cbgm_Vector3;
    cbgm_Intersector_best = new cbgm_Vector3;
    cbgm_Intersector_tmp = new cbgm_Vector3;
    cbgm_Intersector_tmp1 = new cbgm_Vector3;
    cbgm_Intersector_tmp2 = new cbgm_Vector3;
    cbgm_Intersector_tmp3 = new cbgm_Vector3;
    cbgm_Intersector_intersection = new cbgm_Vector3;
},
cbgm_Path = $rt_classWithoutFields(0),
cbgm_BSpline = $rt_classWithoutFields();
function cbgm_Matrix4() {
    jl_Object.call(this);
    this.$val = null;
}
let cbgm_Matrix4_tmp = null,
cbgm_Matrix4_quat = null,
cbgm_Matrix4_quat2 = null,
cbgm_Matrix4_l_vez = null,
cbgm_Matrix4_l_vex = null,
cbgm_Matrix4_l_vey = null,
cbgm_Matrix4_tmpVec = null,
cbgm_Matrix4_tmpMat = null,
cbgm_Matrix4_right = null,
cbgm_Matrix4_tmpForward = null,
cbgm_Matrix4_tmpUp = null,
cbgm_Matrix4_$callClinit = () => {
    cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
    cbgm_Matrix4__clinit_();
},
cbgm_Matrix4__init_0 = $this => {
    let var$1, var$2;
    cbgm_Matrix4_$callClinit();
    var$1 = $rt_createFloatArray(16);
    var$2 = var$1.data;
    $this.$val = var$1;
    var$2[0] = 1.0;
    var$2[5] = 1.0;
    var$2[10] = 1.0;
    var$2[15] = 1.0;
},
cbgm_Matrix4__init_ = () => {
    let var_0 = new cbgm_Matrix4();
    cbgm_Matrix4__init_0(var_0);
    return var_0;
},
cbgm_Matrix4_set = ($this, $values) => {
    let var$2;
    var$2 = $values.data;
    $values = $this.$val.data;
    $values[0] = var$2[0];
    $values[1] = var$2[1];
    $values[2] = var$2[2];
    $values[3] = var$2[3];
    $values[4] = var$2[4];
    $values[5] = var$2[5];
    $values[6] = var$2[6];
    $values[7] = var$2[7];
    $values[8] = var$2[8];
    $values[9] = var$2[9];
    $values[10] = var$2[10];
    $values[11] = var$2[11];
    $values[12] = var$2[12];
    $values[13] = var$2[13];
    $values[14] = var$2[14];
    $values[15] = var$2[15];
    return $this;
},
cbgm_Matrix4_mul = ($this, $matrix) => {
    let var$2, var$3, var$4, var$5, var$6;
    cbgm_Matrix4_$callClinit();
    var$2 = cbgm_Matrix4_tmp;
    var$3 = var$2.data;
    var$4 = $this.$val.data;
    var$5 = var$4[0];
    var$6 = $matrix.$val.data;
    var$3[0] = var$5 * var$6[0] + var$4[4] * var$6[1] + var$4[8] * var$6[2] + var$4[12] * var$6[3];
    var$3[4] = var$4[0] * var$6[4] + var$4[4] * var$6[5] + var$4[8] * var$6[6] + var$4[12] * var$6[7];
    var$3[8] = var$4[0] * var$6[8] + var$4[4] * var$6[9] + var$4[8] * var$6[10] + var$4[12] * var$6[11];
    var$3[12] = var$4[0] * var$6[12] + var$4[4] * var$6[13] + var$4[8] * var$6[14] + var$4[12] * var$6[15];
    var$3[1] = var$4[1] * var$6[0] + var$4[5] * var$6[1] + var$4[9] * var$6[2] + var$4[13] * var$6[3];
    var$3[5] = var$4[1] * var$6[4] + var$4[5] * var$6[5] + var$4[9] * var$6[6] + var$4[13] * var$6[7];
    var$3[9] = var$4[1] * var$6[8] + var$4[5] * var$6[9] + var$4[9] * var$6[10] + var$4[13] * var$6[11];
    var$3[13] = var$4[1] * var$6[12] + var$4[5] * var$6[13] + var$4[9] * var$6[14] + var$4[13] * var$6[15];
    var$3[2] = var$4[2] * var$6[0] + var$4[6] * var$6[1] + var$4[10] * var$6[2] + var$4[14] * var$6[3];
    var$3[6] = var$4[2] * var$6[4] + var$4[6] * var$6[5] + var$4[10] * var$6[6] + var$4[14] * var$6[7];
    var$3[10] = var$4[2] * var$6[8] + var$4[6] * var$6[9] + var$4[10] * var$6[10] + var$4[14] * var$6[11];
    var$3[14] = var$4[2] * var$6[12] + var$4[6] * var$6[13] + var$4[10] * var$6[14] + var$4[14] * var$6[15];
    var$3[3] = var$4[3] * var$6[0] + var$4[7] * var$6[1] + var$4[11] * var$6[2] + var$4[15] * var$6[3];
    var$3[7] = var$4[3] * var$6[4] + var$4[7] * var$6[5] + var$4[11] * var$6[6] + var$4[15] * var$6[7];
    var$3[11] = var$4[3] * var$6[8] + var$4[7] * var$6[9] + var$4[11] * var$6[10] + var$4[15] * var$6[11];
    var$3[15] = var$4[3] * var$6[12] + var$4[7] * var$6[13] + var$4[11] * var$6[14] + var$4[15] * var$6[15];
    return cbgm_Matrix4_set($this, var$2);
},
cbgm_Matrix4_idt = $this => {
    let var$1;
    var$1 = $this.$val.data;
    var$1[0] = 1.0;
    var$1[4] = 0.0;
    var$1[8] = 0.0;
    var$1[12] = 0.0;
    var$1[1] = 0.0;
    var$1[5] = 1.0;
    var$1[9] = 0.0;
    var$1[13] = 0.0;
    var$1[2] = 0.0;
    var$1[6] = 0.0;
    var$1[10] = 1.0;
    var$1[14] = 0.0;
    var$1[3] = 0.0;
    var$1[7] = 0.0;
    var$1[11] = 0.0;
    var$1[15] = 1.0;
    return $this;
},
cbgm_Matrix4_setToOrtho = ($this, $left, $right, $bottom, $top, $near, $far) => {
    let $tx, $x_orth, $ty, $y_orth, $tz, $z_orth, var$13;
    cbgm_Matrix4_idt($this);
    $tx = $right - $left;
    $x_orth = 2.0 / $tx;
    $ty = $top - $bottom;
    $y_orth = 2.0 / $ty;
    $tz = $far - $near;
    $z_orth = (-2.0) / $tz;
    $tx =  -($right + $left) / $tx;
    $ty =  -($top + $bottom) / $ty;
    $tz =  -($far + $near) / $tz;
    var$13 = $this.$val.data;
    var$13[0] = $x_orth;
    var$13[1] = 0.0;
    var$13[2] = 0.0;
    var$13[3] = 0.0;
    var$13[4] = 0.0;
    var$13[5] = $y_orth;
    var$13[6] = 0.0;
    var$13[7] = 0.0;
    var$13[8] = 0.0;
    var$13[9] = 0.0;
    var$13[10] = $z_orth;
    var$13[11] = 0.0;
    var$13[12] = $tx;
    var$13[13] = $ty;
    var$13[14] = $tz;
    var$13[15] = 1.0;
    return $this;
},
cbgm_Matrix4_setToLookAt = ($this, $direction, $up) => {
    let var$3, var$4, var$5, var$6, var$7, var$8;
    cbgm_Matrix4_$callClinit();
    var$3 = cbgm_Matrix4_l_vez;
    var$4 = $direction.$x;
    var$5 = $direction.$y;
    var$6 = $direction.$z;
    var$3.$x = var$4;
    var$3.$y = var$5;
    var$3.$z = var$6;
    var$5 = var$4 * var$4 + var$5 * var$5 + var$6 * var$6;
    if (var$5 !== 0.0 && var$5 !== 1.0) {
        var$4 = 1.0 / jl_Math_sqrt(var$5);
        var$5 = var$3.$x * var$4;
        var$6 = var$3.$y * var$4;
        var$4 = var$3.$z * var$4;
        var$3.$x = var$5;
        var$3.$y = var$6;
        var$3.$z = var$4;
    }
    var$3 = cbgm_Matrix4_l_vex;
    var$4 = $direction.$x;
    var$5 = $direction.$y;
    var$6 = $direction.$z;
    var$3.$x = var$4;
    var$3.$y = var$5;
    var$3.$z = var$6;
    var$5 = var$4 * var$4 + var$5 * var$5 + var$6 * var$6;
    if (var$5 !== 0.0 && var$5 !== 1.0) {
        var$4 = 1.0 / jl_Math_sqrt(var$5);
        var$5 = var$3.$x * var$4;
        var$6 = var$3.$y * var$4;
        var$4 = var$3.$z * var$4;
        var$3.$x = var$5;
        var$3.$y = var$6;
        var$3.$z = var$4;
    }
    $direction = cbgm_Vector3_crs(cbgm_Matrix4_l_vex, $up);
    var$4 = $direction.$x;
    var$4 = var$4 * var$4;
    var$5 = $direction.$y;
    var$4 = var$4 + var$5 * var$5;
    var$5 = $direction.$z;
    var$4 = var$4 + var$5 * var$5;
    if (var$4 !== 0.0 && var$4 !== 1.0) {
        var$5 = 1.0 / jl_Math_sqrt(var$4);
        var$6 = $direction.$x * var$5;
        var$7 = $direction.$y * var$5;
        var$4 = $direction.$z * var$5;
        $direction.$x = var$6;
        $direction.$y = var$7;
        $direction.$z = var$4;
    }
    $direction = cbgm_Matrix4_l_vey;
    $up = cbgm_Matrix4_l_vex;
    var$4 = $up.$x;
    var$5 = $up.$y;
    var$6 = $up.$z;
    $direction.$x = var$4;
    $direction.$y = var$5;
    $direction.$z = var$6;
    $direction = cbgm_Vector3_crs($direction, cbgm_Matrix4_l_vez);
    var$4 = $direction.$x;
    var$4 = var$4 * var$4;
    var$5 = $direction.$y;
    var$4 = var$4 + var$5 * var$5;
    var$5 = $direction.$z;
    var$5 = var$4 + var$5 * var$5;
    if (var$5 !== 0.0 && var$5 !== 1.0) {
        var$4 = 1.0 / jl_Math_sqrt(var$5);
        var$5 = $direction.$x * var$4;
        var$6 = $direction.$y * var$4;
        var$4 = $direction.$z * var$4;
        $direction.$x = var$5;
        $direction.$y = var$6;
        $direction.$z = var$4;
    }
    cbgm_Matrix4_idt($this);
    var$8 = $this.$val.data;
    $direction = cbgm_Matrix4_l_vex;
    var$8[0] = $direction.$x;
    var$8[4] = $direction.$y;
    var$8[8] = $direction.$z;
    $direction = cbgm_Matrix4_l_vey;
    var$8[1] = $direction.$x;
    var$8[5] = $direction.$y;
    var$8[9] = $direction.$z;
    $direction = cbgm_Matrix4_l_vez;
    var$8[2] =  -$direction.$x;
    var$8[6] =  -$direction.$y;
    var$8[10] =  -$direction.$z;
    return $this;
},
cbgm_Matrix4_matrix4_mul = ($mata, $matb) => {
    let var$3, $tmp_0, var$5;
    cbgm_Matrix4_$callClinit();
    var$3 = $mata.data;
    $matb = $matb.data;
    $tmp_0 = $rt_createFloatArray(16);
    var$5 = $tmp_0.data;
    var$5[0] = var$3[0] * $matb[0] + var$3[4] * $matb[1] + var$3[8] * $matb[2] + var$3[12] * $matb[3];
    var$5[4] = var$3[0] * $matb[4] + var$3[4] * $matb[5] + var$3[8] * $matb[6] + var$3[12] * $matb[7];
    var$5[8] = var$3[0] * $matb[8] + var$3[4] * $matb[9] + var$3[8] * $matb[10] + var$3[12] * $matb[11];
    var$5[12] = var$3[0] * $matb[12] + var$3[4] * $matb[13] + var$3[8] * $matb[14] + var$3[12] * $matb[15];
    var$5[1] = var$3[1] * $matb[0] + var$3[5] * $matb[1] + var$3[9] * $matb[2] + var$3[13] * $matb[3];
    var$5[5] = var$3[1] * $matb[4] + var$3[5] * $matb[5] + var$3[9] * $matb[6] + var$3[13] * $matb[7];
    var$5[9] = var$3[1] * $matb[8] + var$3[5] * $matb[9] + var$3[9] * $matb[10] + var$3[13] * $matb[11];
    var$5[13] = var$3[1] * $matb[12] + var$3[5] * $matb[13] + var$3[9] * $matb[14] + var$3[13] * $matb[15];
    var$5[2] = var$3[2] * $matb[0] + var$3[6] * $matb[1] + var$3[10] * $matb[2] + var$3[14] * $matb[3];
    var$5[6] = var$3[2] * $matb[4] + var$3[6] * $matb[5] + var$3[10] * $matb[6] + var$3[14] * $matb[7];
    var$5[10] = var$3[2] * $matb[8] + var$3[6] * $matb[9] + var$3[10] * $matb[10] + var$3[14] * $matb[11];
    var$5[14] = var$3[2] * $matb[12] + var$3[6] * $matb[13] + var$3[10] * $matb[14] + var$3[14] * $matb[15];
    var$5[3] = var$3[3] * $matb[0] + var$3[7] * $matb[1] + var$3[11] * $matb[2] + var$3[15] * $matb[3];
    var$5[7] = var$3[3] * $matb[4] + var$3[7] * $matb[5] + var$3[11] * $matb[6] + var$3[15] * $matb[7];
    var$5[11] = var$3[3] * $matb[8] + var$3[7] * $matb[9] + var$3[11] * $matb[10] + var$3[15] * $matb[11];
    var$5[15] = var$3[3] * $matb[12] + var$3[7] * $matb[13] + var$3[11] * $matb[14] + var$3[15] * $matb[15];
    jl_System_fastArraycopy($tmp_0, 0, $mata, 0, 16);
},
cbgm_Matrix4_matrix4_det = $val => {
    cbgm_Matrix4_$callClinit();
    $val = $val.data;
    return $val[3] * $val[6] * $val[9] * $val[12] - $val[2] * $val[7] * $val[9] * $val[12] - $val[3] * $val[5] * $val[10] * $val[12] + $val[1] * $val[7] * $val[10] * $val[12] + $val[2] * $val[5] * $val[11] * $val[12] - $val[1] * $val[6] * $val[11] * $val[12] - $val[3] * $val[6] * $val[8] * $val[13] + $val[2] * $val[7] * $val[8] * $val[13] + $val[3] * $val[4] * $val[10] * $val[13] - $val[0] * $val[7] * $val[10] * $val[13] - $val[2] * $val[4] * $val[11] * $val[13] + $val[0] * $val[6] * $val[11] * $val[13] + $val[3]
    * $val[5] * $val[8] * $val[14] - $val[1] * $val[7] * $val[8] * $val[14] - $val[3] * $val[4] * $val[9] * $val[14] + $val[0] * $val[7] * $val[9] * $val[14] + $val[1] * $val[4] * $val[11] * $val[14] - $val[0] * $val[5] * $val[11] * $val[14] - $val[2] * $val[5] * $val[8] * $val[15] + $val[1] * $val[6] * $val[8] * $val[15] + $val[2] * $val[4] * $val[9] * $val[15] - $val[0] * $val[6] * $val[9] * $val[15] - $val[1] * $val[4] * $val[10] * $val[15] + $val[0] * $val[5] * $val[10] * $val[15];
},
cbgm_Matrix4_matrix4_inv = $val => {
    let $tmp_0, $l_det, $inv_det;
    cbgm_Matrix4_$callClinit();
    $tmp_0 = $rt_createFloatArray(16);
    $l_det = cbgm_Matrix4_matrix4_det($val);
    if ($l_det === 0.0)
        return 0;
    $tmp_0 = $tmp_0.data;
    $val = $val.data;
    $tmp_0[0] = $val[9] * $val[14] * $val[7] - $val[13] * $val[10] * $val[7] + $val[13] * $val[6] * $val[11] - $val[5] * $val[14] * $val[11] - $val[9] * $val[6] * $val[15] + $val[5] * $val[10] * $val[15];
    $tmp_0[4] = $val[12] * $val[10] * $val[7] - $val[8] * $val[14] * $val[7] - $val[12] * $val[6] * $val[11] + $val[4] * $val[14] * $val[11] + $val[8] * $val[6] * $val[15] - $val[4] * $val[10] * $val[15];
    $tmp_0[8] = $val[8] * $val[13] * $val[7] - $val[12] * $val[9] * $val[7] + $val[12] * $val[5] * $val[11] - $val[4] * $val[13] * $val[11] - $val[8] * $val[5] * $val[15] + $val[4] * $val[9] * $val[15];
    $tmp_0[12] = $val[12] * $val[9] * $val[6] - $val[8] * $val[13] * $val[6] - $val[12] * $val[5] * $val[10] + $val[4] * $val[13] * $val[10] + $val[8] * $val[5] * $val[14] - $val[4] * $val[9] * $val[14];
    $tmp_0[1] = $val[13] * $val[10] * $val[3] - $val[9] * $val[14] * $val[3] - $val[13] * $val[2] * $val[11] + $val[1] * $val[14] * $val[11] + $val[9] * $val[2] * $val[15] - $val[1] * $val[10] * $val[15];
    $tmp_0[5] = $val[8] * $val[14] * $val[3] - $val[12] * $val[10] * $val[3] + $val[12] * $val[2] * $val[11] - $val[0] * $val[14] * $val[11] - $val[8] * $val[2] * $val[15] + $val[0] * $val[10] * $val[15];
    $tmp_0[9] = $val[12] * $val[9] * $val[3] - $val[8] * $val[13] * $val[3] - $val[12] * $val[1] * $val[11] + $val[0] * $val[13] * $val[11] + $val[8] * $val[1] * $val[15] - $val[0] * $val[9] * $val[15];
    $tmp_0[13] = $val[8] * $val[13] * $val[2] - $val[12] * $val[9] * $val[2] + $val[12] * $val[1] * $val[10] - $val[0] * $val[13] * $val[10] - $val[8] * $val[1] * $val[14] + $val[0] * $val[9] * $val[14];
    $tmp_0[2] = $val[5] * $val[14] * $val[3] - $val[13] * $val[6] * $val[3] + $val[13] * $val[2] * $val[7] - $val[1] * $val[14] * $val[7] - $val[5] * $val[2] * $val[15] + $val[1] * $val[6] * $val[15];
    $tmp_0[6] = $val[12] * $val[6] * $val[3] - $val[4] * $val[14] * $val[3] - $val[12] * $val[2] * $val[7] + $val[0] * $val[14] * $val[7] + $val[4] * $val[2] * $val[15] - $val[0] * $val[6] * $val[15];
    $tmp_0[10] = $val[4] * $val[13] * $val[3] - $val[12] * $val[5] * $val[3] + $val[12] * $val[1] * $val[7] - $val[0] * $val[13] * $val[7] - $val[4] * $val[1] * $val[15] + $val[0] * $val[5] * $val[15];
    $tmp_0[14] = $val[12] * $val[5] * $val[2] - $val[4] * $val[13] * $val[2] - $val[12] * $val[1] * $val[6] + $val[0] * $val[13] * $val[6] + $val[4] * $val[1] * $val[14] - $val[0] * $val[5] * $val[14];
    $tmp_0[3] = $val[9] * $val[6] * $val[3] - $val[5] * $val[10] * $val[3] - $val[9] * $val[2] * $val[7] + $val[1] * $val[10] * $val[7] + $val[5] * $val[2] * $val[11] - $val[1] * $val[6] * $val[11];
    $tmp_0[7] = $val[4] * $val[10] * $val[3] - $val[8] * $val[6] * $val[3] + $val[8] * $val[2] * $val[7] - $val[0] * $val[10] * $val[7] - $val[4] * $val[2] * $val[11] + $val[0] * $val[6] * $val[11];
    $tmp_0[11] = $val[8] * $val[5] * $val[3] - $val[4] * $val[9] * $val[3] - $val[8] * $val[1] * $val[7] + $val[0] * $val[9] * $val[7] + $val[4] * $val[1] * $val[11] - $val[0] * $val[5] * $val[11];
    $tmp_0[15] = $val[4] * $val[9] * $val[2] - $val[8] * $val[5] * $val[2] + $val[8] * $val[1] * $val[6] - $val[0] * $val[9] * $val[6] - $val[4] * $val[1] * $val[10] + $val[0] * $val[5] * $val[10];
    $inv_det = 1.0 / $l_det;
    $val[0] = $tmp_0[0] * $inv_det;
    $val[4] = $tmp_0[4] * $inv_det;
    $val[8] = $tmp_0[8] * $inv_det;
    $val[12] = $tmp_0[12] * $inv_det;
    $val[1] = $tmp_0[1] * $inv_det;
    $val[5] = $tmp_0[5] * $inv_det;
    $val[9] = $tmp_0[9] * $inv_det;
    $val[13] = $tmp_0[13] * $inv_det;
    $val[2] = $tmp_0[2] * $inv_det;
    $val[6] = $tmp_0[6] * $inv_det;
    $val[10] = $tmp_0[10] * $inv_det;
    $val[14] = $tmp_0[14] * $inv_det;
    $val[3] = $tmp_0[3] * $inv_det;
    $val[7] = $tmp_0[7] * $inv_det;
    $val[11] = $tmp_0[11] * $inv_det;
    $val[15] = $tmp_0[15] * $inv_det;
    return 1;
},
cbgm_Matrix4_matrix4_proj = ($mat, $vec, $offset) => {
    let var$4, $z, var$6, var$7, var$8, $inv_w, $x, $y;
    cbgm_Matrix4_$callClinit();
    $mat = $mat.data;
    $vec = $vec.data;
    var$4 = $offset + 0 | 0;
    $z = $vec[var$4] * $mat[3];
    var$6 = $offset + 1 | 0;
    var$7 = $z + $vec[var$6] * $mat[7];
    var$8 = $offset + 2 | 0;
    $inv_w = 1.0 / (var$7 + $vec[var$8] * $mat[11] + $mat[15]);
    $x = ($vec[var$4] * $mat[0] + $vec[var$6] * $mat[4] + $vec[var$8] * $mat[8] + $mat[12]) * $inv_w;
    $y = ($vec[var$4] * $mat[1] + $vec[var$6] * $mat[5] + $vec[var$8] * $mat[9] + $mat[13]) * $inv_w;
    $z = ($vec[var$4] * $mat[2] + $vec[var$6] * $mat[6] + $vec[var$8] * $mat[10] + $mat[14]) * $inv_w;
    $vec[var$4] = $x;
    $vec[var$6] = $y;
    $vec[var$8] = $z;
},
cbgm_Matrix4_translate = ($this, $x, $y, $z) => {
    let var$4, var$5;
    cbgm_Matrix4_$callClinit();
    var$4 = cbgm_Matrix4_tmp;
    var$5 = var$4.data;
    var$5[0] = 1.0;
    var$5[4] = 0.0;
    var$5[8] = 0.0;
    var$5[12] = $x;
    var$5[1] = 0.0;
    var$5[5] = 1.0;
    var$5[9] = 0.0;
    var$5[13] = $y;
    var$5[2] = 0.0;
    var$5[6] = 0.0;
    var$5[10] = 1.0;
    var$5[14] = $z;
    var$5[3] = 0.0;
    var$5[7] = 0.0;
    var$5[11] = 0.0;
    var$5[15] = 1.0;
    cbgm_Matrix4_matrix4_mul($this.$val, var$4);
    return $this;
},
cbgm_Matrix4__clinit_ = () => {
    let var$1;
    cbgm_Matrix4_tmp = $rt_createFloatArray(16);
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4_quat = var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 1.0;
    cbgm_Matrix4_quat2 = var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgm_Matrix4_l_vez = var$1;
    cbgm_Matrix4_l_vex = new cbgm_Vector3;
    cbgm_Matrix4_l_vey = new cbgm_Vector3;
    cbgm_Matrix4_tmpVec = new cbgm_Vector3;
    cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4_right = new cbgm_Vector3;
    cbgm_Matrix4_tmpForward = new cbgm_Vector3;
    cbgm_Matrix4_tmpUp = new cbgm_Vector3;
};
function cbgm_Interpolation$Elastic() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value4 = 0.0;
    a.$power1 = 0.0;
    a.$scale0 = 0.0;
    a.$bounces = 0.0;
}
let cbgm_Interpolation$ElasticIn = $rt_classWithoutFields(cbgm_Interpolation$Elastic),
cbgm_Intersector$MinimumTranslationVector = $rt_classWithoutFields(),
cbgm_EarClippingTriangulator = $rt_classWithoutFields(),
cbgm_Bresenham2$1 = $rt_classWithoutFields(cbgu_Pool);
function cbgm_Interpolation$Pow() {
    cbgm_Interpolation.call(this);
    this.$power = 0;
}
let cbgm_Ellipse = $rt_classWithoutFields(),
cbgm_Bresenham2 = $rt_classWithoutFields();
function cbgm_Interpolation$Exp() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value1 = 0.0;
    a.$power0 = 0.0;
    a.$min1 = 0.0;
    a.$scale = 0.0;
}
let cbgm_Interpolation$11 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$13 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Octree$RayCastResult = $rt_classWithoutFields(),
cbgm_Interpolation$Bounce = $rt_classWithoutFields(cbgm_Interpolation$BounceOut),
cbgm_Interpolation$4 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$9 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$ElasticOut = $rt_classWithoutFields(cbgm_Interpolation$Elastic),
cbgm_CumulativeDistribution$CumulativeValue = $rt_classWithoutFields(),
cbgm_Interpolation$5 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$SwingIn() {
    cbgm_Interpolation.call(this);
    this.$scale3 = 0.0;
}
let cbgm_MathUtils$Sin = $rt_classWithoutFields(),
cbgm_MathUtils$Sin_table = null,
cbgm_MathUtils$Sin__clinit_ = () => {
    let $i, var$2;
    cbgm_MathUtils$Sin_table = $rt_createFloatArray(16384);
    $i = 0;
    while ($i < 16384) {
        cbgm_MathUtils$Sin_table.data[$i] = jl_Math_sin(($i + 0.5) / 16384.0 * 6.2831854820251465);
        $i = $i + 1 | 0;
    }
    var$2 = cbgm_MathUtils$Sin_table.data;
    var$2[0] = 0.0;
    var$2[4096] = 1.0;
    var$2[8192] = 0.0;
    var$2[12288] = (-1.0);
},
cbgm_Bezier = $rt_classWithoutFields(),
cbgm_Interpolation$PowIn = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_Octree$1 = $rt_classWithoutFields(cbgu_Pool),
cbgm_CatmullRomSpline = $rt_classWithoutFields(),
cbgm_Interpolation$2 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_GridPoint3 = $rt_classWithoutFields(),
cbgm_Interpolation$PowOut = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_WindowedMean = $rt_classWithoutFields(),
cbgm_Octree$OctreeNode = $rt_classWithoutFields(),
jur_RandomGenerator = $rt_classWithoutFields(0),
ju_Random = $rt_classWithoutFields();
function cbgm_RandomXS128() {
    let a = this; ju_Random.call(a);
    a.$seed0 = Long_ZERO;
    a.$seed1 = Long_ZERO;
}
let cbgm_DelaunayTriangulator = $rt_classWithoutFields(),
cbgm_Plane$PlaneSide = $rt_classWithoutFields(jl_Enum),
cbgm_Plane$PlaneSide_OnPlane = null,
cbgm_Plane$PlaneSide_Back = null,
cbgm_Plane$PlaneSide_Front = null,
cbgm_Plane$PlaneSide_$VALUES = null,
cbgm_Plane$PlaneSide__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgm_Plane$PlaneSide;
    var$1.$name0 = $rt_s(35);
    var$1.$ordinal0 = 0;
    cbgm_Plane$PlaneSide_OnPlane = var$1;
    var$2 = new cbgm_Plane$PlaneSide;
    var$2.$name0 = $rt_s(36);
    var$2.$ordinal0 = 1;
    cbgm_Plane$PlaneSide_Back = var$2;
    var$3 = new cbgm_Plane$PlaneSide;
    var$3.$name0 = $rt_s(37);
    var$3.$ordinal0 = 2;
    cbgm_Plane$PlaneSide_Front = var$3;
    cbgm_Plane$PlaneSide_$VALUES = $rt_wrapArray(cbgm_Plane$PlaneSide, [var$1, var$2, var$3]);
};
function cbgm_Interpolation$Swing() {
    cbgm_Interpolation.call(this);
    this.$scale1 = 0.0;
}
function cbgm_Interpolation$SwingOut() {
    cbgm_Interpolation.call(this);
    this.$scale2 = 0.0;
}
function cbgm_Quaternion() {
    let a = this; jl_Object.call(a);
    a.$x1 = 0.0;
    a.$y0 = 0.0;
    a.$z0 = 0.0;
    a.$w = 0.0;
}
let cbgm_Quaternion_tmp1 = null,
cbgm_Quaternion_tmp2 = null,
cbgm_Quaternion__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 0.0;
    cbgm_Quaternion_tmp1 = var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 0.0;
    cbgm_Quaternion_tmp2 = var$1;
},
cbgm_GeometryUtils = $rt_classWithoutFields(),
cbgm_GeometryUtils_tmp1 = null,
cbgm_GeometryUtils_tmp2 = null,
cbgm_GeometryUtils_tmp3 = null,
cbgm_GeometryUtils__clinit_ = () => {
    cbgm_GeometryUtils_tmp1 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp2 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp3 = new cbgm_Vector2;
},
cbgm_Intersector$SplitTriangle = $rt_classWithoutFields();
function cbgm_Plane() {
    let a = this; jl_Object.call(a);
    a.$normal = null;
    a.$d = 0.0;
}
let cbgm_MathUtils = $rt_classWithoutFields(),
cbgm_MathUtils_random = null,
cbgm_MathUtils_nextPowerOfTwo = $value => {
    let var$2;
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    $value = var$2 | var$2 >> 1;
    $value = $value | $value >> 2;
    $value = $value | $value >> 4;
    $value = $value | $value >> 8;
    return ($value | $value >> 16) + 1 | 0;
},
cbgm_MathUtils__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = new cbgm_RandomXS128;
    var$2 = Long_or(Long_shl(Long_fromInt(4.294967296E9 * jl_Math_randomImpl() + (-2.147483648E9) | 0), 32), Long_fromInt(4.294967296E9 * jl_Math_randomImpl() + (-2.147483648E9) | 0));
    if (Long_eq(var$2, Long_ZERO))
        var$2 = Long_create(0, 2147483648);
    var$3 = Long_mul(Long_xor(var$2, Long_shru(var$2, 33)), Long_create(3981806797, 4283543511));
    var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
    var$4 = Long_xor(var$3, Long_shru(var$3, 33));
    var$3 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(3981806797, 4283543511));
    var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
    var$3 = Long_xor(var$3, Long_shru(var$3, 33));
    var$1.$seed0 = var$4;
    var$1.$seed1 = var$3;
    cbgm_MathUtils_random = var$1;
},
cbgm_ConvexHull = $rt_classWithoutFields(),
cbgm_Octree$Collider = $rt_classWithoutFields(0);
function cbgm_Frustum() {
    let a = this; jl_Object.call(a);
    a.$planes = null;
    a.$planePoints = null;
    a.$planePointsArray = null;
}
let cbgm_Frustum_clipSpacePlanePoints = null,
cbgm_Frustum_clipSpacePlanePointsArray = null,
cbgm_Frustum_tmpV = null,
cbgm_Frustum_$callClinit = () => {
    cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
    cbgm_Frustum__clinit_();
},
cbgm_Frustum__init_ = $this => {
    let var$1, var$2, var$3, var$4, $i, var$6;
    cbgm_Frustum_$callClinit();
    var$1 = $rt_createArray(cbgm_Plane, 6);
    var$2 = var$1.data;
    $this.$planes = var$1;
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$3 = var$1.data;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3[0] = var$4;
    var$3[1] = new cbgm_Vector3;
    var$3[2] = new cbgm_Vector3;
    var$3[3] = new cbgm_Vector3;
    var$3[4] = new cbgm_Vector3;
    var$3[5] = new cbgm_Vector3;
    var$3[6] = new cbgm_Vector3;
    var$3[7] = new cbgm_Vector3;
    $this.$planePoints = var$1;
    $this.$planePointsArray = $rt_createFloatArray(24);
    $i = 0;
    while ($i < 6) {
        var$4 = new cbgm_Plane;
        var$6 = new cbgm_Vector3;
        var$4.$normal = var$6;
        var$4.$d = 0.0;
        var$6.$x = 0.0;
        var$6.$y = 0.0;
        var$6.$z = 0.0;
        var$4.$d = 0.0;
        var$2[$i] = var$4;
        $i = $i + 1 | 0;
    }
},
cbgm_Frustum__init_0 = () => {
    let var_0 = new cbgm_Frustum();
    cbgm_Frustum__init_(var_0);
    return var_0;
},
cbgm_Frustum_update = ($this, $inverseProjectionView) => {
    let var$2, var$3, var$4, $i, var$6, $j, $v, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20;
    cbgm_Frustum_$callClinit();
    var$2 = cbgm_Frustum_clipSpacePlanePointsArray;
    var$3 = var$2.data;
    jl_System_fastArraycopy(var$2, 0, $this.$planePointsArray, 0, var$3.length);
    var$2 = $inverseProjectionView.$val;
    var$4 = $this.$planePointsArray;
    $i = 0;
    cbgm_Matrix4_$callClinit();
    var$6 = 0;
    while (var$6 < 8) {
        cbgm_Matrix4_matrix4_proj(var$2, var$4, $i);
        $i = $i + 3 | 0;
        var$6 = var$6 + 1 | 0;
    }
    $i = 0;
    $j = 0;
    while ($i < 8) {
        $v = $this.$planePoints.data[$i];
        var$2 = $this.$planePointsArray.data;
        var$9 = $j + 1 | 0;
        $v.$x = var$2[$j];
        var$6 = var$9 + 1 | 0;
        $v.$y = var$2[var$9];
        $j = var$6 + 1 | 0;
        $v.$z = var$2[var$6];
        $i = $i + 1 | 0;
    }
    $inverseProjectionView = $this.$planes.data[0];
    var$2 = $this.$planePoints.data;
    $v = var$2[1];
    var$10 = var$2[0];
    var$11 = var$2[2];
    var$12 = $inverseProjectionView.$normal;
    var$13 = $v.$x;
    var$14 = $v.$y;
    var$15 = $v.$z;
    var$12.$x = var$13;
    var$12.$y = var$14;
    var$12.$z = var$15;
    var$16 = var$10.$x;
    var$17 = var$10.$y;
    var$18 = var$10.$z;
    var$19 = var$13 - var$16;
    var$20 = var$14 - var$17;
    var$15 = var$15 - var$18;
    var$12.$x = var$19;
    var$12.$y = var$20;
    var$12.$z = var$15;
    var$16 = var$10.$x - var$11.$x;
    var$17 = var$10.$y - var$11.$y;
    var$18 = var$10.$z - var$11.$z;
    var$13 = var$20 * var$18 - var$15 * var$17;
    var$18 = var$15 * var$16 - var$19 * var$18;
    var$14 = var$19 * var$17 - var$20 * var$16;
    var$12.$x = var$13;
    var$12.$y = var$18;
    var$12.$z = var$14;
    var$17 = var$13 * var$13 + var$18 * var$18 + var$14 * var$14;
    if (var$17 !== 0.0 && var$17 !== 1.0) {
        var$16 = 1.0 / jl_Math_sqrt(var$17);
        var$17 = var$12.$x * var$16;
        var$18 = var$12.$y * var$16;
        var$16 = var$12.$z * var$16;
        var$12.$x = var$17;
        var$12.$y = var$18;
        var$12.$z = var$16;
    }
    var$10 = $inverseProjectionView.$normal;
    $inverseProjectionView.$d =  -($v.$x * var$10.$x + $v.$y * var$10.$y + $v.$z * var$10.$z);
    $inverseProjectionView = $this.$planes.data[1];
    var$2 = $this.$planePoints.data;
    $v = var$2[4];
    var$10 = var$2[5];
    var$11 = var$2[7];
    var$12 = $inverseProjectionView.$normal;
    var$13 = $v.$x;
    var$14 = $v.$y;
    var$15 = $v.$z;
    var$12.$x = var$13;
    var$12.$y = var$14;
    var$12.$z = var$15;
    var$16 = var$10.$x;
    var$17 = var$10.$y;
    var$18 = var$10.$z;
    var$19 = var$13 - var$16;
    var$20 = var$14 - var$17;
    var$15 = var$15 - var$18;
    var$12.$x = var$19;
    var$12.$y = var$20;
    var$12.$z = var$15;
    var$16 = var$10.$x - var$11.$x;
    var$17 = var$10.$y - var$11.$y;
    var$18 = var$10.$z - var$11.$z;
    var$13 = var$20 * var$18 - var$15 * var$17;
    var$18 = var$15 * var$16 - var$19 * var$18;
    var$14 = var$19 * var$17 - var$20 * var$16;
    var$12.$x = var$13;
    var$12.$y = var$18;
    var$12.$z = var$14;
    var$17 = var$13 * var$13 + var$18 * var$18 + var$14 * var$14;
    if (var$17 !== 0.0 && var$17 !== 1.0) {
        var$16 = 1.0 / jl_Math_sqrt(var$17);
        var$17 = var$12.$x * var$16;
        var$18 = var$12.$y * var$16;
        var$16 = var$12.$z * var$16;
        var$12.$x = var$17;
        var$12.$y = var$18;
        var$12.$z = var$16;
    }
    var$10 = $inverseProjectionView.$normal;
    $inverseProjectionView.$d =  -($v.$x * var$10.$x + $v.$y * var$10.$y + $v.$z * var$10.$z);
    $inverseProjectionView = $this.$planes.data[2];
    var$2 = $this.$planePoints.data;
    $v = var$2[0];
    var$10 = var$2[4];
    var$11 = var$2[3];
    var$12 = $inverseProjectionView.$normal;
    var$13 = $v.$x;
    var$14 = $v.$y;
    var$19 = $v.$z;
    var$12.$x = var$13;
    var$12.$y = var$14;
    var$12.$z = var$19;
    var$17 = var$10.$x;
    var$16 = var$10.$y;
    var$18 = var$10.$z;
    var$17 = var$13 - var$17;
    var$20 = var$14 - var$16;
    var$15 = var$19 - var$18;
    var$12.$x = var$17;
    var$12.$y = var$20;
    var$12.$z = var$15;
    var$16 = var$10.$x - var$11.$x;
    var$18 = var$10.$y - var$11.$y;
    var$13 = var$10.$z - var$11.$z;
    var$14 = var$20 * var$13 - var$15 * var$18;
    var$13 = var$15 * var$16 - var$17 * var$13;
    var$18 = var$17 * var$18 - var$20 * var$16;
    var$12.$x = var$14;
    var$12.$y = var$13;
    var$12.$z = var$18;
    var$17 = var$14 * var$14 + var$13 * var$13 + var$18 * var$18;
    if (var$17 !== 0.0 && var$17 !== 1.0) {
        var$16 = 1.0 / jl_Math_sqrt(var$17);
        var$17 = var$12.$x * var$16;
        var$18 = var$12.$y * var$16;
        var$16 = var$12.$z * var$16;
        var$12.$x = var$17;
        var$12.$y = var$18;
        var$12.$z = var$16;
    }
    var$10 = $inverseProjectionView.$normal;
    $inverseProjectionView.$d =  -($v.$x * var$10.$x + $v.$y * var$10.$y + $v.$z * var$10.$z);
    $inverseProjectionView = $this.$planes.data[3];
    var$2 = $this.$planePoints.data;
    var$10 = var$2[5];
    $v = var$2[1];
    var$11 = var$2[6];
    var$12 = $inverseProjectionView.$normal;
    var$13 = var$10.$x;
    var$19 = var$10.$y;
    var$20 = var$10.$z;
    var$12.$x = var$13;
    var$12.$y = var$19;
    var$12.$z = var$20;
    var$16 = $v.$x;
    var$17 = $v.$y;
    var$18 = $v.$z;
    var$14 = var$13 - var$16;
    var$19 = var$19 - var$17;
    var$20 = var$20 - var$18;
    var$12.$x = var$14;
    var$12.$y = var$19;
    var$12.$z = var$20;
    var$15 = $v.$x - var$11.$x;
    var$16 = $v.$y - var$11.$y;
    var$17 = $v.$z - var$11.$z;
    var$18 = var$19 * var$17 - var$20 * var$16;
    var$17 = var$20 * var$15 - var$14 * var$17;
    var$13 = var$14 * var$16 - var$19 * var$15;
    var$12.$x = var$18;
    var$12.$y = var$17;
    var$12.$z = var$13;
    var$17 = var$18 * var$18 + var$17 * var$17 + var$13 * var$13;
    if (var$17 !== 0.0 && var$17 !== 1.0) {
        var$16 = 1.0 / jl_Math_sqrt(var$17);
        var$17 = var$12.$x * var$16;
        var$18 = var$12.$y * var$16;
        var$16 = var$12.$z * var$16;
        var$12.$x = var$17;
        var$12.$y = var$18;
        var$12.$z = var$16;
    }
    $v = $inverseProjectionView.$normal;
    $inverseProjectionView.$d =  -(var$10.$x * $v.$x + var$10.$y * $v.$y + var$10.$z * $v.$z);
    $inverseProjectionView = $this.$planes.data[4];
    var$2 = $this.$planePoints.data;
    $v = var$2[2];
    var$10 = var$2[3];
    var$11 = var$2[6];
    var$12 = $inverseProjectionView.$normal;
    var$13 = $v.$x;
    var$14 = $v.$y;
    var$15 = $v.$z;
    var$12.$x = var$13;
    var$12.$y = var$14;
    var$12.$z = var$15;
    var$16 = var$10.$x;
    var$17 = var$10.$y;
    var$18 = var$10.$z;
    var$19 = var$13 - var$16;
    var$20 = var$14 - var$17;
    var$15 = var$15 - var$18;
    var$12.$x = var$19;
    var$12.$y = var$20;
    var$12.$z = var$15;
    var$16 = var$10.$x - var$11.$x;
    var$17 = var$10.$y - var$11.$y;
    var$18 = var$10.$z - var$11.$z;
    var$13 = var$20 * var$18 - var$15 * var$17;
    var$18 = var$15 * var$16 - var$19 * var$18;
    var$14 = var$19 * var$17 - var$20 * var$16;
    var$12.$x = var$13;
    var$12.$y = var$18;
    var$12.$z = var$14;
    var$17 = var$13 * var$13 + var$18 * var$18 + var$14 * var$14;
    if (var$17 !== 0.0 && var$17 !== 1.0) {
        var$16 = 1.0 / jl_Math_sqrt(var$17);
        var$17 = var$12.$x * var$16;
        var$18 = var$12.$y * var$16;
        var$16 = var$12.$z * var$16;
        var$12.$x = var$17;
        var$12.$y = var$18;
        var$12.$z = var$16;
    }
    var$10 = $inverseProjectionView.$normal;
    $inverseProjectionView.$d =  -($v.$x * var$10.$x + $v.$y * var$10.$y + $v.$z * var$10.$z);
    $inverseProjectionView = $this.$planes.data[5];
    var$2 = $this.$planePoints.data;
    $v = var$2[4];
    var$10 = var$2[0];
    var$11 = var$2[1];
    var$12 = $inverseProjectionView.$normal;
    var$13 = $v.$x;
    var$14 = $v.$y;
    var$15 = $v.$z;
    var$12.$x = var$13;
    var$12.$y = var$14;
    var$12.$z = var$15;
    var$16 = var$10.$x;
    var$17 = var$10.$y;
    var$18 = var$10.$z;
    var$19 = var$13 - var$16;
    var$20 = var$14 - var$17;
    var$15 = var$15 - var$18;
    var$12.$x = var$19;
    var$12.$y = var$20;
    var$12.$z = var$15;
    var$16 = var$10.$x - var$11.$x;
    var$17 = var$10.$y - var$11.$y;
    var$18 = var$10.$z - var$11.$z;
    var$13 = var$20 * var$18 - var$15 * var$17;
    var$18 = var$15 * var$16 - var$19 * var$18;
    var$14 = var$19 * var$17 - var$20 * var$16;
    var$12.$x = var$13;
    var$12.$y = var$18;
    var$12.$z = var$14;
    var$17 = var$13 * var$13 + var$18 * var$18 + var$14 * var$14;
    if (var$17 !== 0.0 && var$17 !== 1.0) {
        var$16 = 1.0 / jl_Math_sqrt(var$17);
        var$17 = var$12.$x * var$16;
        var$18 = var$12.$y * var$16;
        var$16 = var$12.$z * var$16;
        var$12.$x = var$17;
        var$12.$y = var$18;
        var$12.$z = var$16;
    }
    var$10 = $inverseProjectionView.$normal;
    $inverseProjectionView.$d =  -($v.$x * var$10.$x + $v.$y * var$10.$y + $v.$z * var$10.$z);
},
cbgm_Frustum__clinit_ = () => {
    let var$1, var$2, $v, var$4, $j, var$6, var$7, var$8, var$9;
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$2 = var$1.data;
    $v = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    $v.$x = (-1.0);
    $v.$y = (-1.0);
    $v.$z = (-1.0);
    var$2[0] = $v;
    $v = new cbgm_Vector3;
    $v.$x = 1.0;
    $v.$y = (-1.0);
    $v.$z = (-1.0);
    var$2[1] = $v;
    $v = new cbgm_Vector3;
    $v.$x = 1.0;
    $v.$y = 1.0;
    $v.$z = (-1.0);
    var$2[2] = $v;
    $v = new cbgm_Vector3;
    $v.$x = (-1.0);
    $v.$y = 1.0;
    $v.$z = (-1.0);
    var$2[3] = $v;
    $v = new cbgm_Vector3;
    $v.$x = (-1.0);
    $v.$y = (-1.0);
    $v.$z = 1.0;
    var$2[4] = $v;
    $v = new cbgm_Vector3;
    $v.$x = 1.0;
    $v.$y = (-1.0);
    $v.$z = 1.0;
    var$2[5] = $v;
    $v = new cbgm_Vector3;
    $v.$x = 1.0;
    $v.$y = 1.0;
    $v.$z = 1.0;
    var$2[6] = $v;
    $v = new cbgm_Vector3;
    $v.$x = (-1.0);
    $v.$y = 1.0;
    $v.$z = 1.0;
    var$2[7] = $v;
    cbgm_Frustum_clipSpacePlanePoints = var$1;
    var$1 = $rt_createFloatArray(24);
    var$4 = var$1.data;
    cbgm_Frustum_clipSpacePlanePointsArray = var$1;
    $j = 0;
    var$6 = var$2.length;
    var$7 = 0;
    while (var$7 < var$6) {
        $v = var$2[var$7];
        var$8 = $j + 1 | 0;
        var$4[$j] = $v.$x;
        var$9 = var$8 + 1 | 0;
        var$4[var$8] = $v.$y;
        $j = var$9 + 1 | 0;
        var$4[var$9] = $v.$z;
        var$7 = var$7 + 1 | 0;
    }
    cbgm_Frustum_tmpV = new cbgm_Vector3;
},
cbgm_Interpolation$ExpOut = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Interpolation$8 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$14 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$ExpIn = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Polyline = $rt_classWithoutFields(),
cbgm_FloatCounter = $rt_classWithoutFields();
function cbggg_GlyphLayout() {
    let a = this; jl_Object.call(a);
    a.$runs = null;
    a.$colors = null;
    a.$glyphCount = 0;
    a.$width4 = 0.0;
    a.$height3 = 0.0;
}
let cbggg_GlyphLayout_glyphRunPool = null,
cbggg_GlyphLayout_colorStack = null,
cbggg_GlyphLayout_$callClinit = () => {
    cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
    cbggg_GlyphLayout__clinit_();
},
cbggg_GlyphLayout__init_2 = $this => {
    let var$1;
    cbggg_GlyphLayout_$callClinit();
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$1;
    var$1 = new cbgu_IntArray;
    var$1.$ordered0 = 1;
    var$1.$items0 = $rt_createIntArray(2);
    $this.$colors = var$1;
},
cbggg_GlyphLayout__init_6 = () => {
    let var_0 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_2(var_0);
    return var_0;
},
cbggg_GlyphLayout__init_ = ($this, $font, $str) => {
    let var$3;
    cbggg_GlyphLayout_$callClinit();
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$3;
    var$3 = new cbgu_IntArray;
    var$3.$ordered0 = 1;
    var$3.$items0 = $rt_createIntArray(2);
    $this.$colors = var$3;
    cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$length(), $font.$getColor(), 0.0, 8, 0, null);
},
cbggg_GlyphLayout__init_5 = (var_0, var_1) => {
    let var_2 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_GlyphLayout__init_0 = ($this, $font, $str, $color, $targetWidth, $halign, $wrap) => {
    let var$7;
    cbggg_GlyphLayout_$callClinit();
    var$7 = new cbgu_Array;
    var$7.$ordered = 1;
    var$7.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$7;
    var$7 = new cbgu_IntArray;
    var$7.$ordered0 = 1;
    var$7.$items0 = $rt_createIntArray(2);
    $this.$colors = var$7;
    cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$length(), $color, $targetWidth, $halign, $wrap, null);
},
cbggg_GlyphLayout__init_4 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
cbggg_GlyphLayout__init_1 = ($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) => {
    let var$10;
    cbggg_GlyphLayout_$callClinit();
    var$10 = new cbgu_Array;
    var$10.$ordered = 1;
    var$10.$items = $rt_createArray(jl_Object, 1);
    $this.$runs = var$10;
    var$10 = new cbgu_IntArray;
    var$10.$ordered0 = 1;
    var$10.$items0 = $rt_createIntArray(2);
    $this.$colors = var$10;
    cbggg_GlyphLayout_setText($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate);
},
cbggg_GlyphLayout__init_3 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) => {
    let var_9 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_1(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
    return var_9;
},
cbggg_GlyphLayout_setText = ($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) => {
    let $fontData, $wrapOrTruncate, $currentColor, $markupEnabled, $isLastRun, $y, $down, $lineRun, $lastGlyph, var$19, var$20, var$21, $runStart, $newline, $runEnd, $wrapIndex, $length, var$27, var$28, var$29, $run, $i, var$32, $glyph, var$34, var$35, var$36, var$37, var$38, $runWidth, $$je;
    cbggg_GlyphLayout_reset($this);
    $fontData = $font.$data0;
    if ($start == $end) {
        $this.$height3 = $fontData.$capHeight;
        return;
    }
    if ($wrap)
        $targetWidth = jl_Math_maxImpl($targetWidth, $fontData.$spaceXadvance * 3.0);
    $wrapOrTruncate = !$wrap && $truncate === null ? 0 : 1;
    $currentColor = cbgg_Color_toIntBits($color);
    cbgu_IntArray_add0($this.$colors, 0, $currentColor);
    $markupEnabled = $fontData.$markupEnabled;
    if ($markupEnabled)
        cbgu_IntArray_add(cbggg_GlyphLayout_colorStack, $currentColor);
    $isLastRun = 0;
    $y = 0.0;
    $down = $fontData.$down;
    $lineRun = null;
    $lastGlyph = null;
    var$19 = null;
    var$20 = $str;
    var$21 = $currentColor;
    $runStart = $start;
    a: {
        b: {
            c: while (true) {
                d: {
                    $newline = 0;
                    if ($start == $end) {
                        if ($runStart == $end)
                            break a;
                        $isLastRun = 1;
                        $runEnd = $end;
                    } else {
                        $wrapIndex = $start + 1 | 0;
                        if ($start < 0)
                            break b;
                        if ($start >= var$20.$nativeString.length)
                            break b;
                        e: {
                            switch (var$20.$nativeString.charCodeAt($start)) {
                                case 10:
                                    $runEnd = $wrapIndex - 1 | 0;
                                    $newline = 1;
                                    $start = $wrapIndex;
                                    break d;
                                case 91:
                                    if (!$markupEnabled) {
                                        $start = $wrapIndex;
                                        break e;
                                    }
                                    $length = cbggg_GlyphLayout_parseColorMarkup($this, $str, $wrapIndex, $end);
                                    if ($length >= 0) {
                                        $runEnd = $wrapIndex - 1 | 0;
                                        $start = $wrapIndex + ($length + 1 | 0) | 0;
                                        if ($start == $end) {
                                            $isLastRun = 1;
                                            break d;
                                        }
                                        $font = cbggg_GlyphLayout_colorStack;
                                        $currentColor = $font.$items0.data[$font.$size0 - 1 | 0];
                                        break d;
                                    }
                                    if ($length != (-2)) {
                                        $start = $wrapIndex;
                                        break e;
                                    }
                                    $start = $wrapIndex + 1 | 0;
                                    break e;
                                default:
                            }
                            $start = $wrapIndex;
                        }
                        continue c;
                    }
                }
                f: {
                    $color = cbggg_GlyphLayout_glyphRunPool;
                    $font = $color.$freeObjects;
                    $wrap = $font.$size;
                    if ($wrap) {
                        if (!$wrap) {
                            $font = new jl_IllegalStateException;
                            $font.$suppressionEnabled = 1;
                            $font.$writableStackTrace = 1;
                            $font.$message = $rt_s(38);
                            $rt_throw($font);
                        }
                        $wrap = $wrap - 1 | 0;
                        $font.$size = $wrap;
                        var$27 = $font.$items.data;
                        $font = var$27[$wrap];
                        var$27[$wrap] = null;
                    } else {
                        $color = $color;
                        try {
                            $font = cbgur_Constructor_newInstance($color.$constructor, var$19);
                            break f;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                $str = $$je;
                                $truncate = new cbgu_GdxRuntimeException;
                                $font = new jl_StringBuilder;
                                $font.$buffer = $rt_createCharArray(16);
                                $start = $font.$length0;
                                var$20 = $font;
                                jl_AbstractStringBuilder_insert(var$20, $start, $rt_s(39));
                                var$28 = $color.$constructor.$constructor0.$declaringClass;
                                if (var$28.$name === null)
                                    var$28.$name = $rt_str(var$28.$platformClass.$meta.name);
                                $color = var$28.$name;
                                jl_AbstractStringBuilder_insert(var$20, $font.$length0, $color);
                                $color = new jl_String;
                                var$27 = $font.$buffer;
                                var$29 = var$27.data;
                                $end = $font.$length0;
                                $halign = var$29.length;
                                if ($end >= 0 && $end <= ($halign - 0 | 0)) {
                                    $color.$nativeString = $rt_charArrayToString(var$27.data, 0, $end);
                                    $truncate.$suppressionEnabled = 1;
                                    $truncate.$writableStackTrace = 1;
                                    $truncate.$message = $color;
                                    $truncate.$cause = $str;
                                    $rt_throw($truncate);
                                }
                                $font = new jl_IndexOutOfBoundsException;
                                $font.$suppressionEnabled = 1;
                                $font.$writableStackTrace = 1;
                                $rt_throw($font);
                            } else {
                                throw $$e;
                            }
                        }
                    }
                }
                $run = $font;
                $run.$x0 = 0.0;
                $run.$y3 = $y;
                cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $run, $str, $runStart, $runEnd, $lastGlyph);
                $i = $this.$glyphCount + $run.$glyphs.$size | 0;
                $this.$glyphCount = $i;
                if ($currentColor != var$21) {
                    $font = $this.$colors;
                    $wrapIndex = $font.$size0;
                    $wrap = $wrapIndex - 2 | 0;
                    if ($wrap >= $wrapIndex) {
                        $color = new jl_IndexOutOfBoundsException;
                        $str = new jl_StringBuilder;
                        $str.$buffer = $rt_createCharArray(16);
                        $start = $str.$length0;
                        $lastGlyph = $str;
                        jl_AbstractStringBuilder_insert($lastGlyph, $start, $rt_s(31));
                        jl_AbstractStringBuilder_insert0($str, $str.$length0, $wrap, 10);
                        jl_AbstractStringBuilder_insert($lastGlyph, $str.$length0, $rt_s(32));
                        $start = $font.$size0;
                        jl_AbstractStringBuilder_insert0($str, $str.$length0, $start, 10);
                        $font = new jl_String;
                        var$27 = $str.$buffer;
                        var$29 = var$27.data;
                        $end = $str.$length0;
                        $halign = var$29.length;
                        if ($end >= 0 && $end <= ($halign - 0 | 0)) {
                            $font.$nativeString = $rt_charArrayToString(var$27.data, 0, $end);
                            $color.$suppressionEnabled = 1;
                            $color.$writableStackTrace = 1;
                            $color.$message = $font;
                            $rt_throw($color);
                        }
                        $font = new jl_IndexOutOfBoundsException;
                        $font.$suppressionEnabled = 1;
                        $font.$writableStackTrace = 1;
                        $rt_throw($font);
                    }
                    var$27 = $font.$items0.data;
                    if (var$27[$wrap] != $i) {
                        cbgu_IntArray_add($font, $i);
                        cbgu_IntArray_add($this.$colors, $currentColor);
                    } else {
                        $wrap = $wrapIndex - 1 | 0;
                        if ($wrap >= $wrapIndex) {
                            $str = new jl_IndexOutOfBoundsException;
                            $color = new jl_StringBuilder;
                            $color.$buffer = $rt_createCharArray(16);
                            $start = $color.$length0;
                            $lastGlyph = $color;
                            jl_AbstractStringBuilder_insert($lastGlyph, $start, $rt_s(31));
                            jl_AbstractStringBuilder_insert0($color, $color.$length0, $wrap, 10);
                            jl_AbstractStringBuilder_insert($lastGlyph, $color.$length0, $rt_s(32));
                            $start = $font.$size0;
                            jl_AbstractStringBuilder_insert0($color, $color.$length0, $start, 10);
                            $font = new jl_String;
                            var$27 = $color.$buffer;
                            var$29 = var$27.data;
                            $end = $color.$length0;
                            $halign = var$29.length;
                            if ($end >= 0 && $end <= ($halign - 0 | 0)) {
                                $font.$nativeString = $rt_charArrayToString(var$27.data, 0, $end);
                                $str.$suppressionEnabled = 1;
                                $str.$writableStackTrace = 1;
                                $str.$message = $font;
                                $rt_throw($str);
                            }
                            $font = new jl_IndexOutOfBoundsException;
                            $font.$suppressionEnabled = 1;
                            $font.$writableStackTrace = 1;
                            $rt_throw($font);
                        }
                        var$27[$wrap] = $currentColor;
                    }
                    var$21 = $currentColor;
                }
                g: {
                    $font = $run.$glyphs;
                    var$32 = $font.$size;
                    if (!var$32) {
                        $color = cbggg_GlyphLayout_glyphRunPool;
                        $font = $color.$freeObjects;
                        if ($font.$size < $color.$max1) {
                            cbgu_Array_add($font, $run);
                            $wrap = $color.$peak;
                            $wrapIndex = $color.$freeObjects.$size;
                            if ($wrap > $wrapIndex)
                                $wrapIndex = $wrap;
                            $color.$peak = $wrapIndex;
                            if ($rt_isInstance($run, cbgu_Pool$Poolable))
                                cbggg_GlyphLayout$GlyphRun_reset($run);
                        } else if ($rt_isInstance($run, cbgu_Pool$Poolable))
                            cbggg_GlyphLayout$GlyphRun_reset($run);
                        if ($lineRun === null)
                            break g;
                    } else if ($lineRun === null) {
                        cbgu_Array_add($this.$runs, $run);
                        $lineRun = $run;
                    } else {
                        $glyph = $lineRun.$glyphs;
                        var$27 = $font.$items;
                        var$29 = $glyph.$items;
                        var$34 = var$29.data;
                        $length = $glyph.$size;
                        $i = $length + var$32 | 0;
                        if ($i <= var$34.length)
                            var$35 = var$29;
                        else {
                            var$36 = 8;
                            if (var$36 <= $i)
                                var$36 = $i;
                            $length = $length * 1.75 | 0;
                            if (var$36 > $length)
                                $length = var$36;
                            $color = var$29.constructor;
                            if ($color === null)
                                $font = null;
                            else {
                                $font = $color.classObject;
                                if ($font === null) {
                                    $font = new jl_Class;
                                    $font.$platformClass = $color;
                                    $color.classObject = $font;
                                }
                            }
                            $font = jl_Class_getComponentType($font);
                            if ($font === null) {
                                $font = new jl_NullPointerException;
                                jl_Exception__init_0($font);
                                $rt_throw($font);
                            }
                            if ($font === $rt_cls($rt_voidcls)) {
                                $font = new jl_IllegalArgumentException;
                                jl_Exception__init_0($font);
                                $rt_throw($font);
                            }
                            if ($length < 0)
                                break c;
                            var$35 = jlr_Array_newInstanceImpl($font.$platformClass, $length);
                            var$34 = var$35.data;
                            var$36 = $glyph.$size;
                            var$37 = var$34.length;
                            if (var$36 < var$37)
                                var$37 = var$36;
                            jl_System_fastArraycopy(var$29, 0, var$35, 0, var$37);
                            $glyph.$items = var$35;
                        }
                        jl_System_fastArraycopy(var$27, 0, var$35, $glyph.$size, var$32);
                        $glyph.$size = $i;
                        $font = $lineRun.$xAdvances;
                        $wrapIndex = $font.$size2;
                        if ($wrapIndex <= 0 ? 0 : 1)
                            $font.$size2 = $wrapIndex - 1 | 0;
                        $color = $run.$xAdvances;
                        cbgu_FloatArray_addAll($font, $color.$items1, 0, $color.$size2);
                        $color = cbggg_GlyphLayout_glyphRunPool;
                        $font = $color.$freeObjects;
                        if ($font.$size < $color.$max1) {
                            cbgu_Array_add($font, $run);
                            $wrap = $color.$peak;
                            $wrapIndex = $color.$freeObjects.$size;
                            if ($wrap > $wrapIndex)
                                $wrapIndex = $wrap;
                            $color.$peak = $wrapIndex;
                            if ($rt_isInstance($run, cbgu_Pool$Poolable))
                                cbggg_GlyphLayout$GlyphRun_reset($run);
                        } else if ($rt_isInstance($run, cbgu_Pool$Poolable))
                            cbggg_GlyphLayout$GlyphRun_reset($run);
                    }
                    if (!$newline && !$isLastRun) {
                        $font = $lineRun.$glyphs;
                        $wrapIndex = $font.$size;
                        if (!$wrapIndex) {
                            $font = new jl_IllegalStateException;
                            $font.$suppressionEnabled = 1;
                            $font.$writableStackTrace = 1;
                            $font.$message = $rt_s(38);
                            $rt_throw($font);
                        }
                        $lastGlyph = $font.$items.data[$wrapIndex - 1 | 0];
                    } else {
                        $font = $lineRun.$glyphs;
                        $wrapIndex = $font.$size;
                        if (!$wrapIndex) {
                            $font = new jl_IllegalStateException;
                            $font.$suppressionEnabled = 1;
                            $font.$writableStackTrace = 1;
                            $font.$message = $rt_s(38);
                            $rt_throw($font);
                        }
                        $font = $font.$items.data[$wrapIndex - 1 | 0];
                        $wrapIndex = $font.$fixedWidth;
                        if (!$wrapIndex) {
                            $color = $lineRun.$xAdvances;
                            var$27 = $color.$items1;
                            $wrap = $color.$size2 - 1 | 0;
                            $wrapIndex = $wrapIndex ? $font.$xadvance : $font.$width0 + $font.$xoffset | 0;
                            var$27.data[$wrap] = $wrapIndex * $fontData.$scaleX - $fontData.$padRight;
                        }
                        $lastGlyph = null;
                    }
                    if ($wrapOrTruncate && $lineRun.$glyphs.$size && !(!$newline && !$isLastRun)) {
                        $font = $lineRun.$xAdvances;
                        $wrapIndex = $font.$size2;
                        if (!$wrapIndex) {
                            $str = new jl_IllegalStateException;
                            $str.$suppressionEnabled = 1;
                            $str.$writableStackTrace = 1;
                            $str.$message = $rt_s(38);
                            $rt_throw($str);
                        }
                        var$27 = $font.$items1.data;
                        var$38 = var$27[0];
                        if (1 >= $wrapIndex) {
                            $color = new jl_IndexOutOfBoundsException;
                            $str = new jl_StringBuilder;
                            $str.$buffer = $rt_createCharArray(16);
                            $start = $str.$length0;
                            $lastGlyph = $str;
                            jl_AbstractStringBuilder_insert($lastGlyph, $start, $rt_s(31));
                            jl_AbstractStringBuilder_insert0($str, $str.$length0, 1, 10);
                            jl_AbstractStringBuilder_insert($lastGlyph, $str.$length0, $rt_s(32));
                            $start = $font.$size2;
                            jl_AbstractStringBuilder_insert0($str, $str.$length0, $start, 10);
                            $font = new jl_String;
                            var$27 = $str.$buffer;
                            var$29 = var$27.data;
                            $end = $str.$length0;
                            $halign = var$29.length;
                            if ($end >= 0 && $end <= ($halign - 0 | 0)) {
                                $font.$nativeString = $rt_charArrayToString(var$27.data, 0, $end);
                                $color.$suppressionEnabled = 1;
                                $color.$writableStackTrace = 1;
                                $color.$message = $font;
                                $rt_throw($color);
                            }
                            $font = new jl_IndexOutOfBoundsException;
                            $font.$suppressionEnabled = 1;
                            $font.$writableStackTrace = 1;
                            $rt_throw($font);
                        }
                        $runWidth = var$38 + var$27[1];
                        $i = 2;
                        while (true) {
                            $color = $lineRun.$xAdvances;
                            if ($i >= $color.$size2)
                                break;
                            var$28 = $lineRun.$glyphs;
                            $length = $i - 1 | 0;
                            if ($length >= var$28.$size) {
                                $str = new jl_IndexOutOfBoundsException;
                                $font = new jl_StringBuilder;
                                $font.$buffer = $rt_createCharArray(16);
                                $start = $font.$length0;
                                $truncate = $font;
                                jl_AbstractStringBuilder_insert($truncate, $start, $rt_s(31));
                                jl_AbstractStringBuilder_insert0($font, $font.$length0, $length, 10);
                                jl_AbstractStringBuilder_insert($truncate, $font.$length0, $rt_s(32));
                                $start = var$28.$size;
                                jl_AbstractStringBuilder_insert0($font, $font.$length0, $start, 10);
                                $color = new jl_String;
                                var$27 = $font.$buffer;
                                var$29 = var$27.data;
                                $end = $font.$length0;
                                $halign = var$29.length;
                                if ($end >= 0 && $end <= ($halign - 0 | 0)) {
                                    $color.$nativeString = $rt_charArrayToString(var$27.data, 0, $end);
                                    $str.$suppressionEnabled = 1;
                                    $str.$writableStackTrace = 1;
                                    $str.$message = $color;
                                    $rt_throw($str);
                                }
                                $font = new jl_IndexOutOfBoundsException;
                                $font.$suppressionEnabled = 1;
                                $font.$writableStackTrace = 1;
                                $rt_throw($font);
                            }
                            $glyph = var$28.$items.data[$length];
                            $wrap = $glyph.$fixedWidth ? $glyph.$xadvance : $glyph.$width0 + $glyph.$xoffset | 0;
                            if ($runWidth + $wrap * $fontData.$scaleX - $fontData.$padRight - 9.999999747378752E-5 <= $targetWidth)
                                $runWidth = $runWidth + $color.$items1.data[$i];
                            else {
                                if ($truncate !== null) {
                                    cbggg_GlyphLayout_truncate($this, $fontData, $lineRun, $targetWidth, $truncate);
                                    break a;
                                }
                                $wrapIndex = cbggg_BitmapFont$BitmapFontData_getWrapIndex($fontData, var$28, $i);
                                if (!(!$wrapIndex && $lineRun.$x0 === 0.0) && $wrapIndex < $lineRun.$glyphs.$size)
                                    $length = $wrapIndex;
                                $lineRun = cbggg_GlyphLayout_wrap($this, $fontData, $lineRun, $length);
                                if ($lineRun === null)
                                    break g;
                                cbgu_Array_add($this.$runs, $lineRun);
                                $y = $y + $down;
                                $lineRun.$x0 = 0.0;
                                $lineRun.$y3 = $y;
                                $font = $lineRun.$xAdvances;
                                $wrapIndex = $font.$size2;
                                if (!$wrapIndex) {
                                    $str = new jl_IllegalStateException;
                                    $str.$suppressionEnabled = 1;
                                    $str.$writableStackTrace = 1;
                                    $str.$message = $rt_s(38);
                                    $rt_throw($str);
                                }
                                var$27 = $font.$items1.data;
                                var$38 = var$27[0];
                                if (1 >= $wrapIndex) {
                                    $color = new jl_IndexOutOfBoundsException;
                                    $str = new jl_StringBuilder;
                                    $str.$buffer = $rt_createCharArray(16);
                                    $start = $str.$length0;
                                    $lastGlyph = $str;
                                    jl_AbstractStringBuilder_insert($lastGlyph, $start, $rt_s(31));
                                    jl_AbstractStringBuilder_insert0($str, $str.$length0, 1, 10);
                                    jl_AbstractStringBuilder_insert($lastGlyph, $str.$length0, $rt_s(32));
                                    $start = $font.$size2;
                                    jl_AbstractStringBuilder_insert0($str, $str.$length0, $start, 10);
                                    $font = new jl_String;
                                    var$27 = $str.$buffer;
                                    var$29 = var$27.data;
                                    $end = $str.$length0;
                                    $halign = var$29.length;
                                    if ($end >= 0 && $end <= ($halign - 0 | 0)) {
                                        $font.$nativeString = $rt_charArrayToString(var$27.data, 0, $end);
                                        $color.$suppressionEnabled = 1;
                                        $color.$writableStackTrace = 1;
                                        $color.$message = $font;
                                        $rt_throw($color);
                                    }
                                    $font = new jl_IndexOutOfBoundsException;
                                    $font.$suppressionEnabled = 1;
                                    $font.$writableStackTrace = 1;
                                    $rt_throw($font);
                                }
                                $runWidth = var$38 + var$27[1];
                                $i = 1;
                            }
                            $i = $i + 1 | 0;
                        }
                    }
                }
                if ($newline) {
                    $lineRun = null;
                    $lastGlyph = null;
                    $y = $runEnd != $runStart ? $y + $down : $y + $down * $fontData.$blankLineScale;
                }
                $runStart = $start;
            }
            $font = new jl_NegativeArraySizeException;
            jl_Exception__init_0($font);
            $rt_throw($font);
        }
        $font = new jl_StringIndexOutOfBoundsException;
        $font.$suppressionEnabled = 1;
        $font.$writableStackTrace = 1;
        $rt_throw($font);
    }
    $this.$height3 = $fontData.$capHeight + jl_Math_absImpl($y);
    cbggg_GlyphLayout_calculateWidths($this, $fontData);
    cbggg_GlyphLayout_alignRuns($this, $targetWidth, $halign);
    if ($markupEnabled)
        cbggg_GlyphLayout_colorStack.$size0 = 0;
},
cbggg_GlyphLayout_calculateWidths = ($this, $fontData) => {
    let $width, $run, $runsItems, $i, $n, $xAdvances, $runWidth, $max, $glyph, $glyphs, $ii, $nn;
    $width = 0.0;
    $run = $this.$runs;
    $runsItems = $run.$items;
    $i = 0;
    $n = $run.$size;
    while ($i < $n) {
        $run = $runsItems.data[$i];
        $xAdvances = $run.$xAdvances.$items1.data;
        $runWidth = $run.$x0 + $xAdvances[0];
        $max = 0.0;
        $glyph = $run.$glyphs;
        $glyphs = $glyph.$items;
        $ii = 0;
        $nn = $glyph.$size;
        while ($ii < $nn) {
            $glyph = $glyphs.data[$ii];
            $max = jl_Math_maxImpl($max, $runWidth + ($glyph.$fixedWidth ? $glyph.$xadvance : $glyph.$width0 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight);
            $ii = $ii + 1 | 0;
            $runWidth = $runWidth + $xAdvances[$ii];
        }
        $max = jl_Math_maxImpl($runWidth, $max);
        $runWidth = $run.$x0;
        $max = $max - $runWidth;
        $run.$width3 = $max;
        $width = jl_Math_maxImpl($width, $runWidth + $max);
        $i = $i + 1 | 0;
    }
    $this.$width4 = $width;
},
cbggg_GlyphLayout_alignRuns = ($this, $targetWidth, $halign) => {
    let $center, $run, $runsItems, $i, $n;
    a: {
        if (!($halign & 8)) {
            $center = !($halign & 1) ? 0 : 1;
            $run = $this.$runs;
            $runsItems = $run.$items;
            $i = 0;
            $n = $run.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                $run = $runsItems.data[$i];
                $run.$x0 = $run.$x0 + (!$center ? $targetWidth - $run.$width3 : 0.5 * ($targetWidth - $run.$width3));
                $i = $i + 1 | 0;
            }
        }
    }
},
cbggg_GlyphLayout_truncate = ($this, $fontData, $run, $targetWidth, $truncate) => {
    let $glyphCount, $truncateRun, var$7, $droppedGlyphCount, $xAdvances, var$10, var$11, var$12, $count, $i, $truncateWidth, $n, $width, var$18, var$19, var$20, var$21, var$22, $$je;
    $glyphCount = $run.$glyphs.$size;
    cbggg_GlyphLayout_$callClinit();
    $truncateRun = cbggg_GlyphLayout_glyphRunPool;
    var$7 = $truncateRun.$freeObjects;
    $droppedGlyphCount = var$7.$size;
    if ($droppedGlyphCount) {
        if (!$droppedGlyphCount) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(38);
            $rt_throw($fontData);
        }
        $droppedGlyphCount = $droppedGlyphCount - 1 | 0;
        var$7.$size = $droppedGlyphCount;
        $xAdvances = var$7.$items.data;
        var$7 = $xAdvances[$droppedGlyphCount];
        $xAdvances[$droppedGlyphCount] = null;
    } else {
        $truncateRun = $truncateRun;
        a: {
            try {
                var$7 = cbgur_Constructor_newInstance($truncateRun.$constructor, null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $run = $$je;
                } else {
                    throw $$e;
                }
            }
            $truncate = new cbgu_GdxRuntimeException;
            $fontData = new jl_StringBuilder;
            $fontData.$buffer = $rt_createCharArray(16);
            $droppedGlyphCount = $fontData.$length0;
            var$10 = $fontData;
            jl_AbstractStringBuilder_insert(var$10, $droppedGlyphCount, $rt_s(39));
            var$11 = $truncateRun.$constructor.$constructor0.$declaringClass;
            if (var$11.$name === null)
                var$11.$name = $rt_str(var$11.$platformClass.$meta.name);
            var$7 = var$11.$name;
            jl_AbstractStringBuilder_insert(var$10, $fontData.$length0, var$7);
            var$7 = new jl_String;
            $xAdvances = $fontData.$buffer;
            var$12 = $xAdvances.data;
            $count = $fontData.$length0;
            $i = var$12.length;
            if ($count >= 0 && $count <= ($i - 0 | 0)) {
                var$7.$nativeString = $rt_charArrayToString($xAdvances.data, 0, $count);
                $truncate.$suppressionEnabled = 1;
                $truncate.$writableStackTrace = 1;
                $truncate.$message = var$7;
                $truncate.$cause = $run;
                $rt_throw($truncate);
            }
            $fontData = new jl_IndexOutOfBoundsException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $rt_throw($fontData);
        }
    }
    $truncateRun = var$7;
    cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $truncateRun, $truncate, 0, $truncate.$length(), null);
    $truncateWidth = 0.0;
    var$11 = $truncateRun.$xAdvances;
    $n = var$11.$size2;
    if ($n > 0) {
        var$7 = $truncateRun.$glyphs;
        $count = var$7.$size;
        if (!$count) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(38);
            $rt_throw($fontData);
        }
        var$7 = var$7.$items.data[$count - 1 | 0];
        $count = var$7.$fixedWidth;
        if (!$count) {
            $xAdvances = var$11.$items1;
            $droppedGlyphCount = $n - 1 | 0;
            $count = $count ? var$7.$xadvance : var$7.$width0 + var$7.$xoffset | 0;
            $xAdvances.data[$droppedGlyphCount] = $count * $fontData.$scaleX - $fontData.$padRight;
        }
        $xAdvances = var$11.$items1;
        $i = 1;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $xAdvances.data[$i];
            $i = $i + 1 | 0;
        }
    }
    $targetWidth = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x0;
    var$10 = $run.$xAdvances;
    $xAdvances = var$10.$items1;
    b: {
        while (true) {
            if ($count >= var$10.$size2)
                break b;
            $width = $width + $xAdvances.data[$count];
            if ($width > $targetWidth)
                break;
            $count = $count + 1 | 0;
        }
    }
    if ($count <= 1) {
        var$18 = $run.$glyphs;
        $xAdvances = var$18.$items;
        $droppedGlyphCount = 0;
        $count = var$18.$size;
        var$7 = null;
        if ($droppedGlyphCount > $count) {
            $fontData = new jl_IllegalArgumentException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $rt_throw($fontData);
        }
        while ($droppedGlyphCount < $count) {
            var$12 = $xAdvances.data;
            $i = $droppedGlyphCount + 1 | 0;
            var$12[$droppedGlyphCount] = var$7;
            $droppedGlyphCount = $i;
        }
        var$18.$size = 0;
        var$10.$size2 = 0;
        cbgu_FloatArray_addAll(var$10, var$11.$items1, 0, var$11.$size2);
    } else {
        cbgu_Array_truncate($run.$glyphs, $count - 1 | 0);
        var$11 = $run.$xAdvances;
        if (var$11.$size2 > $count)
            var$11.$size2 = $count;
        var$7 = $run.$glyphs;
        $count = var$7.$size;
        if (!$count) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(38);
            $rt_throw($fontData);
        }
        var$7 = var$7.$items.data[$count - 1 | 0];
        $count = var$7.$fixedWidth;
        if (!$count) {
            $xAdvances = var$11.$items1;
            $droppedGlyphCount = var$11.$size2 - 1 | 0;
            $count = $count ? var$7.$xadvance : var$7.$width0 + var$7.$xoffset | 0;
            $xAdvances.data[$droppedGlyphCount] = $count * $fontData.$scaleX - $fontData.$padRight;
        }
        var$7 = $truncateRun.$xAdvances;
        $droppedGlyphCount = var$7.$size2;
        if ($droppedGlyphCount > 0)
            cbgu_FloatArray_addAll0(var$11, var$7, 1, $droppedGlyphCount - 1 | 0);
    }
    c: {
        var$10 = $run.$glyphs;
        $count = var$10.$size;
        $droppedGlyphCount = $glyphCount - $count | 0;
        if ($droppedGlyphCount > 0) {
            $droppedGlyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            $this.$glyphCount = $droppedGlyphCount;
            if ($fontData.$markupEnabled) {
                while (true) {
                    $fontData = $this.$colors;
                    $i = $fontData.$size0;
                    if ($i <= 2)
                        break c;
                    $glyphCount = $i - 2 | 0;
                    if ($glyphCount >= $i)
                        break;
                    if ($fontData.$items0.data[$glyphCount] < $droppedGlyphCount)
                        break c;
                    $fontData.$size0 = $glyphCount;
                }
                $truncate = new jl_IndexOutOfBoundsException;
                $run = new jl_StringBuilder;
                $run.$buffer = $rt_createCharArray(16);
                $droppedGlyphCount = $run.$length0;
                $truncateRun = $run;
                jl_AbstractStringBuilder_insert($truncateRun, $droppedGlyphCount, $rt_s(31));
                jl_AbstractStringBuilder_insert0($run, $run.$length0, $glyphCount, 10);
                jl_AbstractStringBuilder_insert($truncateRun, $run.$length0, $rt_s(32));
                $droppedGlyphCount = $fontData.$size0;
                jl_AbstractStringBuilder_insert0($run, $run.$length0, $droppedGlyphCount, 10);
                $fontData = new jl_String;
                $xAdvances = $run.$buffer;
                var$12 = $xAdvances.data;
                $count = $run.$length0;
                $i = var$12.length;
                if ($count >= 0 && $count <= ($i - 0 | 0)) {
                    $fontData.$nativeString = $rt_charArrayToString($xAdvances.data, 0, $count);
                    $truncate.$suppressionEnabled = 1;
                    $truncate.$writableStackTrace = 1;
                    $truncate.$message = $fontData;
                    $rt_throw($truncate);
                }
                $fontData = new jl_IndexOutOfBoundsException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $rt_throw($fontData);
            }
        }
    }
    $fontData = $truncateRun.$glyphs;
    var$12 = $fontData.$items;
    var$19 = $fontData.$size;
    var$20 = var$10.$items;
    $xAdvances = var$20.data;
    var$21 = $count + var$19 | 0;
    if (var$21 <= $xAdvances.length)
        var$22 = var$20;
    else {
        $i = 8;
        if ($i <= var$21)
            $i = var$21;
        $count = $count * 1.75 | 0;
        if ($i > $count)
            $count = $i;
        var$11 = var$20.constructor;
        if (var$11 === null)
            var$7 = null;
        else {
            var$7 = var$11.classObject;
            if (var$7 === null) {
                var$7 = new jl_Class;
                var$7.$platformClass = var$11;
                var$11.classObject = var$7;
            }
        }
        $fontData = jl_Class_getComponentType(var$7);
        if ($fontData === null) {
            $fontData = new jl_NullPointerException;
            jl_Throwable__init_($fontData);
            $rt_throw($fontData);
        }
        if ($fontData === $rt_cls($rt_voidcls)) {
            $fontData = new jl_IllegalArgumentException;
            jl_Throwable__init_($fontData);
            $rt_throw($fontData);
        }
        if ($count < 0) {
            $fontData = new jl_NegativeArraySizeException;
            jl_Throwable__init_($fontData);
            $rt_throw($fontData);
        }
        var$22 = jlr_Array_newInstanceImpl($fontData.$platformClass, $count);
        $xAdvances = var$22.data;
        $i = var$10.$size;
        $glyphCount = $xAdvances.length;
        if ($i < $glyphCount)
            $glyphCount = $i;
        jl_System_fastArraycopy(var$20, 0, var$22, 0, $glyphCount);
        var$10.$items = var$22;
    }
    jl_System_fastArraycopy(var$12, 0, var$22, var$10.$size, var$19);
    var$10.$size = var$21;
    $this.$glyphCount = $this.$glyphCount + $truncate.$length() | 0;
    $fontData = cbggg_GlyphLayout_glyphRunPool;
    $run = $fontData.$freeObjects;
    if ($run.$size < $fontData.$max1) {
        cbgu_Array_add($run, $truncateRun);
        $droppedGlyphCount = $fontData.$peak;
        $count = $fontData.$freeObjects.$size;
        if ($droppedGlyphCount > $count)
            $count = $droppedGlyphCount;
        $fontData.$peak = $count;
        if ($rt_isInstance($truncateRun, cbgu_Pool$Poolable))
            cbggg_GlyphLayout$GlyphRun_reset($truncateRun);
    } else if ($rt_isInstance($truncateRun, cbgu_Pool$Poolable))
        cbggg_GlyphLayout$GlyphRun_reset($truncateRun);
},
cbggg_GlyphLayout_wrap = ($this, $fontData, $first, $secondStart) => {
    let $glyphs2, $glyphCount, $xAdvances2, $firstEnd, $colorChangeIndex, $second, var$10, var$11, $droppedGlyphCount, $lastColor, $reductionThreshold, $xAdvances1, $glyphs1, var$17, $firstGlyphCount, $secondGlyphCount, $i, $$je;
    $glyphs2 = $first.$glyphs;
    $glyphCount = $glyphs2.$size;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            $colorChangeIndex = $firstEnd - 1 | 0;
            if ($colorChangeIndex >= $glyphCount)
                break;
            b: {
                switch ($glyphs2.$items.data[$colorChangeIndex].$id & 65535) {
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        break;
                    default:
                        $colorChangeIndex = 0;
                        break b;
                }
                $colorChangeIndex = 1;
            }
            if (!$colorChangeIndex)
                break a;
            $firstEnd = $firstEnd + (-1) | 0;
        }
        $first = new jl_IndexOutOfBoundsException;
        $fontData = new jl_StringBuilder;
        $fontData.$buffer = $rt_createCharArray(16);
        $secondStart = $fontData.$length0;
        $second = $fontData;
        jl_AbstractStringBuilder_insert($second, $secondStart, $rt_s(31));
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $colorChangeIndex, 10);
        jl_AbstractStringBuilder_insert($second, $fontData.$length0, $rt_s(32));
        $secondStart = $glyphs2.$size;
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $secondStart, 10);
        $glyphs2 = new jl_String;
        var$10 = $fontData.$buffer;
        var$11 = var$10.data;
        $colorChangeIndex = $fontData.$length0;
        $glyphCount = var$11.length;
        if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
            $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
            $first.$suppressionEnabled = 1;
            $first.$writableStackTrace = 1;
            $first.$message = $glyphs2;
            $rt_throw($first);
        }
        $fontData = new jl_IndexOutOfBoundsException;
        $fontData.$suppressionEnabled = 1;
        $fontData.$writableStackTrace = 1;
        $rt_throw($fontData);
    }
    c: {
        while (true) {
            $colorChangeIndex = $rt_compare($secondStart, $glyphCount);
            if ($colorChangeIndex >= 0)
                break c;
            if ($colorChangeIndex >= 0)
                break;
            d: {
                switch ($glyphs2.$items.data[$secondStart].$id & 65535) {
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        break;
                    default:
                        $droppedGlyphCount = 0;
                        break d;
                }
                $droppedGlyphCount = 1;
            }
            if (!$droppedGlyphCount)
                break c;
            $secondStart = $secondStart + 1 | 0;
        }
        $first = new jl_IndexOutOfBoundsException;
        $fontData = new jl_StringBuilder;
        $fontData.$buffer = $rt_createCharArray(16);
        $colorChangeIndex = $fontData.$length0;
        $second = $fontData;
        jl_AbstractStringBuilder_insert($second, $colorChangeIndex, $rt_s(31));
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $secondStart, 10);
        jl_AbstractStringBuilder_insert($second, $fontData.$length0, $rt_s(32));
        $secondStart = $glyphs2.$size;
        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $secondStart, 10);
        $glyphs2 = new jl_String;
        var$10 = $fontData.$buffer;
        var$11 = var$10.data;
        $colorChangeIndex = $fontData.$length0;
        $glyphCount = var$11.length;
        if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
            $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
            $first.$suppressionEnabled = 1;
            $first.$writableStackTrace = 1;
            $first.$message = $glyphs2;
            $rt_throw($first);
        }
        $fontData = new jl_IndexOutOfBoundsException;
        $fontData.$suppressionEnabled = 1;
        $fontData.$writableStackTrace = 1;
        $rt_throw($fontData);
    }
    e: {
        $second = null;
        if ($colorChangeIndex >= 0) {
            cbgu_Array_truncate($glyphs2, $firstEnd);
            $glyphCount = $firstEnd + 1 | 0;
            if ($xAdvances2.$size2 > $glyphCount)
                $xAdvances2.$size2 = $glyphCount;
            $droppedGlyphCount = $secondStart - $firstEnd | 0;
            if ($droppedGlyphCount <= 0)
                break e;
            $secondStart = $this.$glyphCount - $droppedGlyphCount | 0;
            $this.$glyphCount = $secondStart;
            if (!$fontData.$markupEnabled)
                break e;
            $glyphs2 = $this.$colors;
            $colorChangeIndex = $glyphs2.$size0;
            $glyphCount = $colorChangeIndex - 2 | 0;
            if ($glyphCount >= $colorChangeIndex) {
                $first = new jl_IndexOutOfBoundsException;
                $fontData = new jl_StringBuilder;
                $fontData.$buffer = $rt_createCharArray(16);
                $secondStart = $fontData.$length0;
                $second = $fontData;
                jl_AbstractStringBuilder_insert($second, $secondStart, $rt_s(31));
                jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $glyphCount, 10);
                jl_AbstractStringBuilder_insert($second, $fontData.$length0, $rt_s(32));
                $secondStart = $glyphs2.$size0;
                jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $secondStart, 10);
                $glyphs2 = new jl_String;
                var$10 = $fontData.$buffer;
                var$11 = var$10.data;
                $colorChangeIndex = $fontData.$length0;
                $glyphCount = var$11.length;
                if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
                    $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
                    $first.$suppressionEnabled = 1;
                    $first.$writableStackTrace = 1;
                    $first.$message = $glyphs2;
                    $rt_throw($first);
                }
                $fontData = new jl_IndexOutOfBoundsException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $rt_throw($fontData);
            }
            var$10 = $glyphs2.$items0.data;
            if (var$10[$glyphCount] <= $secondStart)
                break e;
            $lastColor = var$10[$colorChangeIndex - 1 | 0];
            while (true) {
                $colorChangeIndex = $glyphs2.$size0;
                $glyphCount = $colorChangeIndex - 2 | 0;
                $reductionThreshold = $rt_compare($glyphCount, $colorChangeIndex);
                if ($reductionThreshold >= 0)
                    break;
                if (var$10[$glyphCount] <= $secondStart) {
                    if ($reductionThreshold >= 0) {
                        $fontData = new jl_IndexOutOfBoundsException;
                        $first = new jl_StringBuilder;
                        $first.$buffer = $rt_createCharArray(16);
                        $secondStart = $first.$length0;
                        $second = $first;
                        jl_AbstractStringBuilder_insert($second, $secondStart, $rt_s(31));
                        jl_AbstractStringBuilder_insert0($first, $first.$length0, $glyphCount, 10);
                        jl_AbstractStringBuilder_insert($second, $first.$length0, $rt_s(32));
                        $secondStart = $glyphs2.$size0;
                        jl_AbstractStringBuilder_insert0($first, $first.$length0, $secondStart, 10);
                        $glyphs2 = new jl_String;
                        var$10 = $first.$buffer;
                        var$11 = var$10.data;
                        $colorChangeIndex = $first.$length0;
                        $glyphCount = var$11.length;
                        if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
                            $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
                            $fontData.$suppressionEnabled = 1;
                            $fontData.$writableStackTrace = 1;
                            $fontData.$message = $glyphs2;
                            $rt_throw($fontData);
                        }
                        $fontData = new jl_IndexOutOfBoundsException;
                        $fontData.$suppressionEnabled = 1;
                        $fontData.$writableStackTrace = 1;
                        $rt_throw($fontData);
                    }
                    var$10[$glyphCount] = $secondStart;
                    $secondStart = $colorChangeIndex - 1 | 0;
                    if ($secondStart >= $colorChangeIndex) {
                        $fontData = new jl_IndexOutOfBoundsException;
                        $first = new jl_StringBuilder;
                        $first.$buffer = $rt_createCharArray(16);
                        $colorChangeIndex = $first.$length0;
                        $second = $first;
                        jl_AbstractStringBuilder_insert($second, $colorChangeIndex, $rt_s(31));
                        jl_AbstractStringBuilder_insert0($first, $first.$length0, $secondStart, 10);
                        jl_AbstractStringBuilder_insert($second, $first.$length0, $rt_s(32));
                        $secondStart = $glyphs2.$size0;
                        jl_AbstractStringBuilder_insert0($first, $first.$length0, $secondStart, 10);
                        $glyphs2 = new jl_String;
                        var$10 = $first.$buffer;
                        var$11 = var$10.data;
                        $colorChangeIndex = $first.$length0;
                        $glyphCount = var$11.length;
                        if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
                            $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
                            $fontData.$suppressionEnabled = 1;
                            $fontData.$writableStackTrace = 1;
                            $fontData.$message = $glyphs2;
                            $rt_throw($fontData);
                        }
                        $fontData = new jl_IndexOutOfBoundsException;
                        $fontData.$suppressionEnabled = 1;
                        $fontData.$writableStackTrace = 1;
                        $rt_throw($fontData);
                    }
                    var$10[$secondStart] = $lastColor;
                    break e;
                }
                $glyphs2.$size0 = $glyphCount;
            }
            $first = new jl_IndexOutOfBoundsException;
            $fontData = new jl_StringBuilder;
            $fontData.$buffer = $rt_createCharArray(16);
            $secondStart = $fontData.$length0;
            $second = $fontData;
            jl_AbstractStringBuilder_insert($second, $secondStart, $rt_s(31));
            jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $glyphCount, 10);
            jl_AbstractStringBuilder_insert($second, $fontData.$length0, $rt_s(32));
            $secondStart = $glyphs2.$size0;
            jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $secondStart, 10);
            $glyphs2 = new jl_String;
            var$10 = $fontData.$buffer;
            var$11 = var$10.data;
            $colorChangeIndex = $fontData.$length0;
            $glyphCount = var$11.length;
            if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
                $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
                $first.$suppressionEnabled = 1;
                $first.$writableStackTrace = 1;
                $first.$message = $glyphs2;
                $rt_throw($first);
            }
            $fontData = new jl_IndexOutOfBoundsException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $rt_throw($fontData);
        }
        cbggg_GlyphLayout_$callClinit();
        $second = cbggg_GlyphLayout_glyphRunPool;
        $xAdvances1 = $second.$freeObjects;
        $colorChangeIndex = $xAdvances1.$size;
        if ($colorChangeIndex) {
            if (!$colorChangeIndex) {
                $fontData = new jl_IllegalStateException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $fontData.$message = $rt_s(38);
                $rt_throw($fontData);
            }
            $colorChangeIndex = $colorChangeIndex - 1 | 0;
            $xAdvances1.$size = $colorChangeIndex;
            var$10 = $xAdvances1.$items.data;
            $second = var$10[$colorChangeIndex];
            var$10[$colorChangeIndex] = null;
        } else {
            $xAdvances1 = $second;
            f: {
                try {
                    $second = cbgur_Constructor_newInstance($xAdvances1.$constructor, null);
                    break f;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $first = $$je;
                    } else {
                        throw $$e;
                    }
                }
                $glyphs2 = new cbgu_GdxRuntimeException;
                $fontData = new jl_StringBuilder;
                $fontData.$buffer = $rt_createCharArray(16);
                $secondStart = $fontData.$length0;
                $second = $fontData;
                jl_AbstractStringBuilder_insert($second, $secondStart, $rt_s(39));
                $glyphs1 = $xAdvances1.$constructor.$constructor0.$declaringClass;
                if ($glyphs1.$name === null)
                    $glyphs1.$name = $rt_str($glyphs1.$platformClass.$meta.name);
                $xAdvances2 = $glyphs1.$name;
                jl_AbstractStringBuilder_insert($second, $fontData.$length0, $xAdvances2);
                $xAdvances2 = new jl_String;
                var$10 = $fontData.$buffer;
                var$11 = var$10.data;
                $colorChangeIndex = $fontData.$length0;
                $glyphCount = var$11.length;
                if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
                    $xAdvances2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
                    $glyphs2.$suppressionEnabled = 1;
                    $glyphs2.$writableStackTrace = 1;
                    $glyphs2.$message = $xAdvances2;
                    $glyphs2.$cause = $first;
                    $rt_throw($glyphs2);
                }
                $fontData = new jl_IndexOutOfBoundsException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $rt_throw($fontData);
            }
        }
        $second = $second;
        $glyphs1 = $second.$glyphs;
        cbgu_Array_addAll($glyphs1, $glyphs2, 0, $firstEnd);
        cbgu_Array_removeRange($glyphs2, 0, $secondStart - 1 | 0);
        $first.$glyphs = $glyphs1;
        $second.$glyphs = $glyphs2;
        $xAdvances1 = $second.$xAdvances;
        cbgu_FloatArray_addAll0($xAdvances1, $xAdvances2, 0, $firstEnd + 1 | 0);
        cbgu_FloatArray_removeRange($xAdvances2, 1, $secondStart);
        var$11 = $xAdvances2.$items1;
        if (!$glyphs2.$size) {
            $first = new jl_IllegalStateException;
            $first.$suppressionEnabled = 1;
            $first.$writableStackTrace = 1;
            $first.$message = $rt_s(38);
            $rt_throw($first);
        }
        $glyphs2 = $glyphs2.$items.data[0];
        var$17 = $glyphs2.$fixedWidth ? 0.0 : ( -$glyphs2.$xoffset | 0) * $fontData.$scaleX;
        g: {
            var$11.data[0] = var$17 - $fontData.$padLeft;
            $first.$xAdvances = $xAdvances1;
            $second.$xAdvances = $xAdvances2;
            $firstGlyphCount = $first.$glyphs.$size;
            $secondGlyphCount = $second.$glyphs.$size;
            $droppedGlyphCount = ($glyphCount - $firstGlyphCount | 0) - $secondGlyphCount | 0;
            $secondStart = $this.$glyphCount - $droppedGlyphCount | 0;
            $this.$glyphCount = $secondStart;
            if ($fontData.$markupEnabled && $droppedGlyphCount > 0) {
                $reductionThreshold = $secondStart - $secondGlyphCount | 0;
                $glyphs2 = $this.$colors;
                $glyphCount = $glyphs2.$size0;
                $i = $glyphCount - 2 | 0;
                while (true) {
                    if ($i < 2)
                        break g;
                    $secondStart = $rt_compare($i, $glyphCount);
                    if ($secondStart >= 0) {
                        $first = new jl_IndexOutOfBoundsException;
                        $fontData = new jl_StringBuilder;
                        $fontData.$buffer = $rt_createCharArray(16);
                        $secondStart = $fontData.$length0;
                        $second = $fontData;
                        jl_AbstractStringBuilder_insert($second, $secondStart, $rt_s(31));
                        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $i, 10);
                        jl_AbstractStringBuilder_insert($second, $fontData.$length0, $rt_s(32));
                        $secondStart = $glyphs2.$size0;
                        jl_AbstractStringBuilder_insert0($fontData, $fontData.$length0, $secondStart, 10);
                        $glyphs2 = new jl_String;
                        var$10 = $fontData.$buffer;
                        var$11 = var$10.data;
                        $colorChangeIndex = $fontData.$length0;
                        $glyphCount = var$11.length;
                        if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
                            $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
                            $first.$suppressionEnabled = 1;
                            $first.$writableStackTrace = 1;
                            $first.$message = $glyphs2;
                            $rt_throw($first);
                        }
                        $fontData = new jl_IndexOutOfBoundsException;
                        $fontData.$suppressionEnabled = 1;
                        $fontData.$writableStackTrace = 1;
                        $rt_throw($fontData);
                    }
                    var$10 = $glyphs2.$items0.data;
                    $colorChangeIndex = var$10[$i];
                    if ($colorChangeIndex <= $reductionThreshold)
                        break g;
                    $colorChangeIndex = $colorChangeIndex - $droppedGlyphCount | 0;
                    if ($secondStart >= 0)
                        break;
                    var$10[$i] = $colorChangeIndex;
                    $i = $i + (-2) | 0;
                }
                $fontData = new jl_IndexOutOfBoundsException;
                $first = new jl_StringBuilder;
                $first.$buffer = $rt_createCharArray(16);
                $secondStart = $first.$length0;
                $second = $first;
                jl_AbstractStringBuilder_insert($second, $secondStart, $rt_s(31));
                jl_AbstractStringBuilder_insert0($first, $first.$length0, $i, 10);
                jl_AbstractStringBuilder_insert($second, $first.$length0, $rt_s(32));
                $secondStart = $glyphs2.$size0;
                jl_AbstractStringBuilder_insert0($first, $first.$length0, $secondStart, 10);
                $glyphs2 = new jl_String;
                var$10 = $first.$buffer;
                var$11 = var$10.data;
                $colorChangeIndex = $first.$length0;
                $glyphCount = var$11.length;
                if ($colorChangeIndex >= 0 && $colorChangeIndex <= ($glyphCount - 0 | 0)) {
                    $glyphs2.$nativeString = $rt_charArrayToString(var$10.data, 0, $colorChangeIndex);
                    $fontData.$suppressionEnabled = 1;
                    $fontData.$writableStackTrace = 1;
                    $fontData.$message = $glyphs2;
                    $rt_throw($fontData);
                }
                $fontData = new jl_IndexOutOfBoundsException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $rt_throw($fontData);
            }
        }
    }
    if ($firstEnd) {
        $glyphs2 = $first.$glyphs;
        $colorChangeIndex = $glyphs2.$size;
        if (!$colorChangeIndex) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(38);
            $rt_throw($fontData);
        }
        $glyphs2 = $glyphs2.$items.data[$colorChangeIndex - 1 | 0];
        $colorChangeIndex = $glyphs2.$fixedWidth;
        if (!$colorChangeIndex) {
            $first = $first.$xAdvances;
            var$10 = $first.$items1;
            $secondStart = $first.$size2 - 1 | 0;
            $colorChangeIndex = $colorChangeIndex ? $glyphs2.$xadvance : $glyphs2.$width0 + $glyphs2.$xoffset | 0;
            var$10.data[$secondStart] = $colorChangeIndex * $fontData.$scaleX - $fontData.$padRight;
        }
    } else {
        cbggg_GlyphLayout_$callClinit();
        $fontData = cbggg_GlyphLayout_glyphRunPool;
        $glyphs2 = $fontData.$freeObjects;
        if ($glyphs2.$size < $fontData.$max1) {
            cbgu_Array_add($glyphs2, $first);
            $colorChangeIndex = $fontData.$peak;
            $glyphCount = $fontData.$freeObjects.$size;
            if ($colorChangeIndex > $glyphCount)
                $glyphCount = $colorChangeIndex;
            $fontData.$peak = $glyphCount;
            if ($rt_isInstance($first, cbgu_Pool$Poolable))
                cbggg_GlyphLayout$GlyphRun_reset($first);
        } else if ($rt_isInstance($first, cbgu_Pool$Poolable))
            cbggg_GlyphLayout$GlyphRun_reset($first);
        $fontData = $this.$runs;
        $colorChangeIndex = $fontData.$size;
        if (!$colorChangeIndex) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(38);
            $rt_throw($fontData);
        }
        $secondStart = $colorChangeIndex - 1 | 0;
        $fontData.$size = $secondStart;
        $fontData.$items.data[$secondStart] = null;
    }
    return $second;
},
cbggg_GlyphLayout_parseColorMarkup = ($this, $str, $start, $end) => {
    let $color, $i, $ch, $color_0;
    if ($start == $end)
        return (-1);
    $str = $str;
    if ($start >= 0 && $start < $str.$nativeString.length) {
        switch ($str.$nativeString.charCodeAt($start)) {
            case 35:
                $color = 0;
                $i = $start + 1 | 0;
                a: {
                    while (true) {
                        if ($i >= $end)
                            break a;
                        if ($i < 0)
                            break;
                        if ($i >= $str.$nativeString.length)
                            break;
                        $ch = $str.$nativeString.charCodeAt($i);
                        if ($ch == 93) {
                            if ($i < ($start + 2 | 0))
                                break a;
                            if ($i <= ($start + 9 | 0)) {
                                $start = $i - $start | 0;
                                if ($start < 8)
                                    $color = $color << ((9 - $start | 0) << 2) | 255;
                                cbggg_GlyphLayout_$callClinit();
                                $str = cbggg_GlyphLayout_colorStack;
                                $end = (($color & (-16711936)) >>> 8 | 0) | ($color & 16711935) << 8;
                                cbgu_IntArray_add($str, ($end >>> 16 | 0) + ($end << 16) | 0);
                                return $start;
                            }
                            break a;
                        }
                        $color = ($color << 4) + $ch | 0;
                        if ($ch >= 48 && $ch <= 57)
                            $color = $color + (-48) | 0;
                        else if ($ch >= 65 && $ch <= 70)
                            $color = $color + (-55) | 0;
                        else {
                            if ($ch < 97)
                                break a;
                            if ($ch > 102)
                                break a;
                            $color = $color + (-87) | 0;
                        }
                        $i = $i + 1 | 0;
                    }
                    $str = new jl_StringIndexOutOfBoundsException;
                    $str.$suppressionEnabled = 1;
                    $str.$writableStackTrace = 1;
                    $rt_throw($str);
                }
                return (-1);
            case 91:
                break;
            case 93:
                cbggg_GlyphLayout_$callClinit();
                $str = cbggg_GlyphLayout_colorStack;
                $start = $str.$size0;
                if ($start > 1)
                    $str.$size0 = $start - 1 | 0;
                return 0;
            default:
                $i = $start + 1 | 0;
                b: {
                    while ($i < $end) {
                        if ($i < 0)
                            break b;
                        if ($i >= $str.$nativeString.length)
                            break b;
                        if ($str.$nativeString.charCodeAt($i) == 93) {
                            $color_0 = jl_String_substring($str, $start, $i);
                            cbgg_Colors_$callClinit();
                            $str = cbgg_Colors_map;
                            $end = cbgu_ObjectMap_locateKey($str, $color_0);
                            $color_0 = $end < 0 ? null : $str.$valueTable.data[$end];
                            if ($color_0 === null)
                                return (-1);
                            cbggg_GlyphLayout_$callClinit();
                            cbgu_IntArray_add(cbggg_GlyphLayout_colorStack, cbgg_Color_toIntBits($color_0));
                            return $i - $start | 0;
                        }
                        $i = $i + 1 | 0;
                    }
                    return (-1);
                }
                $str = new jl_StringIndexOutOfBoundsException;
                $str.$suppressionEnabled = 1;
                $str.$writableStackTrace = 1;
                $rt_throw($str);
        }
        return (-2);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
},
cbggg_GlyphLayout_reset = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    cbggg_GlyphLayout_$callClinit();
    cbgu_Pool_freeAll(cbggg_GlyphLayout_glyphRunPool, $this.$runs);
    var$1 = $this.$runs;
    var$2 = var$1.$items;
    var$3 = 0;
    var$4 = var$1.$size;
    var$5 = null;
    if (var$3 > var$4) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < var$4) {
        var$6 = var$2.data;
        var$7 = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = var$7;
    }
    var$1.$size = 0;
    $this.$colors.$size0 = 0;
    $this.$glyphCount = 0;
    $this.$width4 = 0.0;
    $this.$height3 = 0.0;
},
cbggg_GlyphLayout_toString = $this => {
    let $buffer, var$2, $i, var$4, $n, var$6, var$7, var$8, var$9, var$10, var$11;
    if (!$this.$runs.$size)
        return $rt_s(40);
    $buffer = new jl_StringBuilder;
    $buffer.$buffer = $rt_createCharArray(128);
    var$2 = $this.$width4;
    $i = $buffer.$length0;
    var$4 = $buffer;
    jl_AbstractStringBuilder_insert1(var$4, $i, var$2);
    $n = $buffer.$length0;
    jl_AbstractStringBuilder_insertSpace(var$4, $n, $n + 1 | 0);
    var$4.$buffer.data[$n] = 120;
    var$2 = $this.$height3;
    jl_AbstractStringBuilder_insert1(var$4, $buffer.$length0, var$2);
    $n = $buffer.$length0;
    jl_AbstractStringBuilder_insertSpace(var$4, $n, $n + 1 | 0);
    var$4.$buffer.data[$n] = 10;
    $i = 0;
    $n = $this.$runs.$size;
    while ($i < $n) {
        var$6 = $this.$runs;
        if ($i >= var$6.$size) {
            var$4 = new jl_IndexOutOfBoundsException;
            $buffer = new jl_StringBuilder;
            $buffer.$buffer = $rt_createCharArray(16);
            $n = $buffer.$length0;
            var$7 = $buffer;
            jl_AbstractStringBuilder_insert(var$7, $n, $rt_s(31));
            jl_AbstractStringBuilder_insert0($buffer, $buffer.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$7, $buffer.$length0, $rt_s(32));
            $i = var$6.$size;
            jl_AbstractStringBuilder_insert0($buffer, $buffer.$length0, $i, 10);
            var$6 = new jl_String;
            var$8 = $buffer.$buffer;
            var$9 = var$8.data;
            $n = $buffer.$length0;
            var$10 = var$9.length;
            if ($n >= 0 && $n <= (var$10 - 0 | 0)) {
                var$6.$nativeString = $rt_charArrayToString(var$8.data, 0, $n);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$6;
                $rt_throw(var$4);
            }
            $buffer = new jl_IndexOutOfBoundsException;
            $buffer.$suppressionEnabled = 1;
            $buffer.$writableStackTrace = 1;
            $rt_throw($buffer);
        }
        var$6 = cbggg_GlyphLayout$GlyphRun_toString(var$6.$items.data[$i]);
        jl_AbstractStringBuilder_insert(var$4, $buffer.$length0, var$6);
        var$11 = $buffer.$length0;
        jl_AbstractStringBuilder_insertSpace(var$4, var$11, var$11 + 1 | 0);
        var$4.$buffer.data[var$11] = 10;
        $i = $i + 1 | 0;
    }
    $i = $buffer.$length0 - 1 | 0;
    $buffer.$length0 = $i;
    var$6 = new jl_String;
    var$8 = $buffer.$buffer;
    var$10 = var$8.data.length;
    if ($i >= 0 && $i <= (var$10 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$8.data, 0, $i);
        return var$6;
    }
    $buffer = new jl_IndexOutOfBoundsException;
    $buffer.$suppressionEnabled = 1;
    $buffer.$writableStackTrace = 1;
    $rt_throw($buffer);
},
cbggg_GlyphLayout__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
    cbgu_Pools_$callClinit();
    var$1 = cbgu_Pools_typePools;
    var$2 = cbgu_ObjectMap_locateKey(var$1, $rt_cls(cbggg_GlyphLayout$GlyphRun));
    var$1 = var$2 < 0 ? null : var$1.$valueTable.data[var$2];
    if (var$1 === null) {
        var$1 = new cbgu_ReflectionPool;
        var$3 = new cbgu_Array;
        var$3.$ordered = 0;
        var$3.$items = $rt_createArray(jl_Object, 4);
        var$1.$freeObjects = var$3;
        var$1.$max1 = 100;
        a: {
            try {
                var$3 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout$GlyphRun), null);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
            try {
                var$3 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout$GlyphRun), null);
                cbgur_Constructor_setAccessible(var$3, 1);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof cbgur_ReflectionException) {
                } else {
                    throw $$e;
                }
            }
            var$3 = null;
        }
        var$1.$constructor = var$3;
        if (var$3 === null) {
            var$1 = new jl_RuntimeException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length0;
            var$5 = var$3;
            jl_AbstractStringBuilder_insert(var$5, var$4, $rt_s(33));
            if ($rt_cls(cbggg_GlyphLayout$GlyphRun).$name === null)
                $rt_cls(cbggg_GlyphLayout$GlyphRun).$name = $rt_str($rt_cls(cbggg_GlyphLayout$GlyphRun).$platformClass.$meta.name);
            var$6 = $rt_cls(cbggg_GlyphLayout$GlyphRun).$name;
            jl_AbstractStringBuilder_insert(var$5, var$3.$length0, var$6);
            var$6 = new jl_String;
            var$7 = var$3.$buffer;
            var$8 = var$7.data;
            var$2 = var$3.$length0;
            var$9 = var$8.length;
            if (var$2 >= 0 && var$2 <= (var$9 - 0 | 0)) {
                var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$2);
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$message = var$6;
                $rt_throw(var$1);
            }
            var$6 = new jl_IndexOutOfBoundsException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout$GlyphRun), var$1);
    }
    cbggg_GlyphLayout_glyphRunPool = var$1;
    var$6 = new cbgu_IntArray;
    var$6.$ordered0 = 1;
    var$6.$items0 = $rt_createIntArray(4);
    cbggg_GlyphLayout_colorStack = var$6;
};
function cbggg_TextureRegion() {
    let a = this; jl_Object.call(a);
    a.$texture = null;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v20 = 0.0;
    a.$regionWidth = 0;
    a.$regionHeight = 0;
}
let cbggg_TextureRegion_setRegion0 = ($this, $x, $y, $width, $height) => {
    let var$5, $invTexWidth, $invTexHeight;
    var$5 = $this.$texture.$data1;
    $invTexWidth = 1.0 / var$5.$width1;
    $invTexHeight = 1.0 / var$5.$height1;
    cbggg_TextureRegion_setRegion($this, $x * $invTexWidth, $y * $invTexHeight, ($x + $width | 0) * $invTexWidth, ($y + $height | 0) * $invTexHeight);
    if ($width < 0)
        $width =  -$width | 0;
    $this.$regionWidth = $width;
    if ($height < 0)
        $height =  -$height | 0;
    $this.$regionHeight = $height;
},
cbggg_TextureRegion_setRegion = ($this, $u, $v, $u2, $v2) => {
    let var$5, var$6, var$7, $adjustY, var$9, $adjustX, var$11;
    var$5 = $this.$texture.$data1;
    var$6 = var$5.$width1;
    var$7 = var$5.$height1;
    $adjustY = jl_Math_absImpl($u2 - $u);
    var$9 = var$6;
    $adjustY = $adjustY * var$9;
    $this.$regionWidth = $adjustY + jl_Math_sign($adjustY) * 0.5 | 0;
    $adjustX = jl_Math_absImpl($v2 - $v);
    $adjustY = var$7;
    $adjustX = $adjustX * $adjustY;
    var$11 = $adjustX + jl_Math_sign($adjustX) * 0.5 | 0;
    $this.$regionHeight = var$11;
    if ($this.$regionWidth == 1 && var$11 == 1) {
        $adjustX = 0.25 / var$9;
        $u = $u + $adjustX;
        $u2 = $u2 - $adjustX;
        $adjustY = 0.25 / $adjustY;
        $v = $v + $adjustY;
        $v2 = $v2 - $adjustY;
    }
    $this.$u0 = $u;
    $this.$v0 = $v;
    $this.$u20 = $u2;
    $this.$v20 = $v2;
},
cbggg_Sprite = $rt_classWithoutFields(cbggg_TextureRegion);
function cbggg_BitmapFont() {
    let a = this; jl_Object.call(a);
    a.$data0 = null;
    a.$regions = null;
    a.$cache = null;
    a.$flipped0 = 0;
    a.$integer0 = 0;
    a.$ownsTexture = 0;
}
let cbggg_BitmapFont__init_ = ($this, $data, $pageRegions, $integer) => {
    let var$4, $n, $i, $file, var$8, var$9, var$10, var$11, var$12;
    $this.$flipped0 = $data.$flipped;
    $this.$data0 = $data;
    $this.$integer0 = $integer;
    if ($pageRegions !== null && $pageRegions.$size) {
        $this.$regions = $pageRegions;
        $this.$ownsTexture = 0;
    } else {
        var$4 = $data.$imagePaths;
        if (var$4 === null) {
            $data = new jl_IllegalArgumentException;
            $data.$suppressionEnabled = 1;
            $data.$writableStackTrace = 1;
            $data.$message = $rt_s(41);
            $rt_throw($data);
        }
        $n = var$4.data.length;
        $pageRegions = new cbgu_Array;
        $pageRegions.$ordered = 1;
        $pageRegions.$items = $rt_createArray(jl_Object, $n);
        $this.$regions = $pageRegions;
        $i = 0;
        while ($i < $n) {
            $file = $data.$fontFile;
            if ($file !== null) {
                var$8 = cbg_Gdx_files;
                $pageRegions = $data.$imagePaths.data[$i];
                var$9 = $file.$type1;
                $file = cgxgbt_TeaFiles_getFileHandle(var$8, $pageRegions, var$9);
            } else {
                $pageRegions = cbg_Gdx_files;
                var$8 = $data.$imagePaths.data[$i];
                $file = cgxgbt_TeaFileHandle__init_($pageRegions, var$8, cbg_Files$FileType_Internal);
            }
            $pageRegions = $this.$regions;
            var$8 = new cbggg_TextureRegion;
            var$10 = new cbgg_Texture;
            var$11 = null;
            var$12 = $file === null ? null : cbggg_FileTextureData__init_0($file, cbgg_Pixmap__init_($file), var$11, 0);
            var$9 = cbg_Gdx_gl;
            var$11 = var$9.$gl.createTexture();
            $integer = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4(var$9.$textures, var$11);
            $file = cbgg_Texture$TextureFilter_Nearest;
            var$10.$minFilter = $file;
            var$10.$magFilter = $file;
            $file = cbgg_Texture$TextureWrap_ClampToEdge;
            var$10.$uWrap = $file;
            var$10.$vWrap = $file;
            var$10.$anisotropicFilterLevel = 1.0;
            var$10.$glTarget = 3553;
            var$10.$glHandle = $integer;
            cbgg_Texture_load(var$10, var$12);
            var$9 = cbg_Gdx_app;
            var$12 = cbgg_Texture_managedTextures;
            if (var$9 === null) {
                $file = var$12.$elementData.data[0];
                while ($file !== null && $file.$key !== null) {
                    $file = $file.$next1;
                }
            } else {
                $integer = jl_Object_identity(var$9);
                var$4 = var$12.$elementData.data;
                $file = var$4[$integer & (var$4.length - 1 | 0)];
                while ($file !== null && !($file.$origKeyHash == $integer && ju_HashMap_areEqualKeys(var$9, $file.$key))) {
                    $file = $file.$next1;
                }
            }
            $file = $file === null ? null : $file.$value0;
            if ($file === null) {
                $file = new cbgu_Array;
                $file.$ordered = 1;
                $file.$items = $rt_createArray(jl_Object, 16);
            }
            cbgu_Array_add($file, var$10);
            ju_HashMap_putImpl(cbgg_Texture_managedTextures, var$9, $file);
            var$8.$texture = var$10;
            $file = var$10.$data1;
            cbggg_TextureRegion_setRegion0(var$8, 0, 0, $file.$width1, $file.$height1);
            cbgu_Array_add($pageRegions, var$8);
            $i = $i + 1 | 0;
        }
        $this.$ownsTexture = 1;
    }
    $this.$cache = cbggg_BitmapFontCache__init_($this, $this.$integer0);
    cbggg_BitmapFont_load($this, $data);
},
cbggg_BitmapFont__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_BitmapFont_load = ($this, $data) => {
    let var$2, var$3, var$4, $glyph, var$6, var$7, var$8, $page, var$10, var$11, var$12;
    var$2 = $data.$glyphs0.data;
    var$3 = var$2.length;
    var$4 = 0;
    a: while (true) {
        if (var$4 >= var$3) {
            $glyph = $data.$missingGlyph;
            if ($glyph !== null) {
                var$6 = $this.$regions;
                var$3 = $glyph.$page;
                if (var$3 >= var$6.$size) {
                    $data = new jl_IndexOutOfBoundsException;
                    var$7 = new jl_StringBuilder;
                    var$7.$buffer = $rt_createCharArray(16);
                    var$4 = var$7.$length0;
                    var$8 = var$7;
                    jl_AbstractStringBuilder_insert(var$8, var$4, $rt_s(31));
                    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, var$3, 10);
                    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(32));
                    var$3 = var$6.$size;
                    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, var$3, 10);
                    $glyph = new jl_String;
                    var$2 = var$7.$buffer;
                    $page = var$2.data;
                    var$4 = var$7.$length0;
                    var$10 = $page.length;
                    if (var$4 >= 0 && var$4 <= (var$10 - 0 | 0)) {
                        $glyph.$nativeString = $rt_charArrayToString(var$2.data, 0, var$4);
                        $data.$suppressionEnabled = 1;
                        $data.$writableStackTrace = 1;
                        $data.$message = $glyph;
                        $rt_throw($data);
                    }
                    $data = new jl_IndexOutOfBoundsException;
                    $data.$suppressionEnabled = 1;
                    $data.$writableStackTrace = 1;
                    $rt_throw($data);
                }
                cbggg_BitmapFont$BitmapFontData_setGlyphRegion($data, $glyph, var$6.$items.data[var$3]);
            }
            return;
        }
        b: {
            $page = var$2[var$4];
            if ($page !== null) {
                $page = $page.data;
                var$10 = $page.length;
                var$11 = 0;
                while (true) {
                    if (var$11 >= var$10)
                        break b;
                    $glyph = $page[var$11];
                    if ($glyph !== null) {
                        var$6 = $this.$regions;
                        var$12 = $glyph.$page;
                        if (var$12 >= var$6.$size)
                            break a;
                        cbggg_BitmapFont$BitmapFontData_setGlyphRegion($data, $glyph, var$6.$items.data[var$12]);
                    }
                    var$11 = var$11 + 1 | 0;
                }
            }
        }
        var$4 = var$4 + 1 | 0;
    }
    $glyph = new jl_IndexOutOfBoundsException;
    $data = new jl_StringBuilder;
    $data.$buffer = $rt_createCharArray(16);
    var$3 = $data.$length0;
    var$7 = $data;
    jl_AbstractStringBuilder_insert(var$7, var$3, $rt_s(31));
    jl_AbstractStringBuilder_insert0($data, $data.$length0, var$12, 10);
    jl_AbstractStringBuilder_insert(var$7, $data.$length0, $rt_s(32));
    var$3 = var$6.$size;
    jl_AbstractStringBuilder_insert0($data, $data.$length0, var$3, 10);
    var$6 = new jl_String;
    var$2 = $data.$buffer;
    $page = var$2.data;
    var$4 = $data.$length0;
    var$10 = $page.length;
    if (var$4 >= 0 && var$4 <= (var$10 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$2.data, 0, var$4);
        $glyph.$suppressionEnabled = 1;
        $glyph.$writableStackTrace = 1;
        $glyph.$message = var$6;
        $rt_throw($glyph);
    }
    $data = new jl_IndexOutOfBoundsException;
    $data.$suppressionEnabled = 1;
    $data.$writableStackTrace = 1;
    $rt_throw($data);
},
cbggg_NinePatch = $rt_classWithoutFields(),
cbggg_NinePatch_tmpDrawColor = null,
cbggg_NinePatch__clinit_ = () => {
    cbggg_NinePatch_tmpDrawColor = new cbgg_Color;
};
function cbgg_Color() {
    let a = this; jl_Object.call(a);
    a.$r = 0.0;
    a.$g = 0.0;
    a.$b = 0.0;
    a.$a = 0.0;
}
let cbgg_Color_WHITE = null,
cbgg_Color_LIGHT_GRAY = null,
cbgg_Color_GRAY = null,
cbgg_Color_DARK_GRAY = null,
cbgg_Color_BLACK = null,
cbgg_Color_WHITE_FLOAT_BITS = 0.0,
cbgg_Color_CLEAR = null,
cbgg_Color_CLEAR_WHITE = null,
cbgg_Color_BLUE = null,
cbgg_Color_NAVY = null,
cbgg_Color_ROYAL = null,
cbgg_Color_SLATE = null,
cbgg_Color_SKY = null,
cbgg_Color_CYAN = null,
cbgg_Color_TEAL = null,
cbgg_Color_GREEN = null,
cbgg_Color_CHARTREUSE = null,
cbgg_Color_LIME = null,
cbgg_Color_FOREST = null,
cbgg_Color_OLIVE = null,
cbgg_Color_YELLOW = null,
cbgg_Color_GOLD = null,
cbgg_Color_GOLDENROD = null,
cbgg_Color_ORANGE = null,
cbgg_Color_BROWN = null,
cbgg_Color_TAN = null,
cbgg_Color_FIREBRICK = null,
cbgg_Color_RED = null,
cbgg_Color_SCARLET = null,
cbgg_Color_CORAL = null,
cbgg_Color_SALMON = null,
cbgg_Color_PINK = null,
cbgg_Color_MAGENTA = null,
cbgg_Color_PURPLE = null,
cbgg_Color_VIOLET = null,
cbgg_Color_MAROON = null,
cbgg_Color_clamp = $this => {
    let var$1, var$2;
    var$1 = $this.$r;
    if (var$1 < 0.0)
        $this.$r = 0.0;
    else if (var$1 > 1.0)
        $this.$r = 1.0;
    var$2 = $this.$g;
    if (var$2 < 0.0)
        $this.$g = 0.0;
    else if (var$2 > 1.0)
        $this.$g = 1.0;
    var$2 = $this.$b;
    if (var$2 < 0.0)
        $this.$b = 0.0;
    else if (var$2 > 1.0)
        $this.$b = 1.0;
    var$2 = $this.$a;
    if (var$2 < 0.0)
        $this.$a = 0.0;
    else if (var$2 > 1.0)
        $this.$a = 1.0;
    return $this;
},
cbgg_Color_equals = ($this, $o) => {
    let var$2, var$3, $color;
    if ($this === $o)
        return 1;
    if ($o !== null) {
        var$2 = $this.constructor;
        if (var$2 === null)
            var$3 = null;
        else {
            var$3 = var$2.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                var$3.$platformClass = var$2;
                var$2.classObject = var$3;
            }
        }
        var$2 = $o.constructor;
        if (var$2 === null)
            $color = null;
        else {
            $color = var$2.classObject;
            if ($color === null) {
                $color = new jl_Class;
                $color.$platformClass = var$2;
                var$2.classObject = $color;
            }
        }
        if (var$3 === $color) {
            $color = $o;
            return cbgg_Color_toIntBits($this) != cbgg_Color_toIntBits($color) ? 0 : 1;
        }
    }
    return 0;
},
cbgg_Color_hashCode = $this => {
    let var$1, $result, var$3;
    var$1 = $this.$r;
    $result = 31 * (var$1 === 0.0 ? 0 : (isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1)) | 0;
    var$1 = $this.$g;
    $result = 31 * ($result + (var$1 === 0.0 ? 0 : (isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1)) | 0) | 0;
    var$3 = $this.$b;
    $result = 31 * ($result + (var$3 === 0.0 ? 0 : (isNaN(var$3) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$3)) | 0) | 0;
    var$3 = $this.$a;
    return $result + (var$3 === 0.0 ? 0 : (isNaN(var$3) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$3)) | 0;
},
cbgg_Color_toFloatBits = $this => {
    return $rt_intBitsToFloat(((255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0) & (-16777217));
},
cbgg_Color_toIntBits = $this => {
    return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
},
cbgg_Color_toString = $this => {
    let $value, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    $value = otci_IntegerUtil_toUnsignedLogRadixString((255.0 * $this.$r | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0, 4);
    a: {
        while ($value.$nativeString.length < 8) {
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            var$3 = var$2.$length0;
            var$4 = var$2;
            jl_AbstractStringBuilder_insert(var$4, var$3, $rt_s(42));
            jl_AbstractStringBuilder_insert(var$4, var$2.$length0, $value);
            $value = new jl_String;
            var$5 = var$2.$buffer;
            var$6 = var$5.data;
            var$7 = var$2.$length0;
            var$8 = var$6.length;
            if (var$7 < 0)
                break a;
            if (var$7 > (var$8 - 0 | 0))
                break a;
            $value.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        }
        return $value;
    }
    $value = new jl_IndexOutOfBoundsException;
    $value.$suppressionEnabled = 1;
    $value.$writableStackTrace = 1;
    $rt_throw($value);
},
cbgg_Color_rgba8888 = ($r, $g, $b, $a) => {
    return ($r * 255.0 | 0) << 24 | ($g * 255.0 | 0) << 16 | ($b * 255.0 | 0) << 8 | $a * 255.0 | 0;
},
cbgg_Color_rgba8888ToColor = ($color, $value) => {
    $color.$r = (($value & (-16777216)) >>> 24 | 0) / 255.0;
    $color.$g = (($value & 16711680) >>> 16 | 0) / 255.0;
    $color.$b = (($value & 65280) >>> 8 | 0) / 255.0;
    $color.$a = ($value & 255) / 255.0;
},
cbgg_Color__clinit_ = () => {
    let var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_WHITE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1077952513));
    cbgg_Color_LIGHT_GRAY = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 2139062271);
    cbgg_Color_GRAY = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1061109759);
    cbgg_Color_DARK_GRAY = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 0.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_BLACK = var$1;
    cbgg_Color_WHITE_FLOAT_BITS = cbgg_Color_toFloatBits(cbgg_Color_WHITE);
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 0.0;
    var$1.$a = 0.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_CLEAR = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 0.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_CLEAR_WHITE = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_BLUE = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.0;
    var$1.$b = 0.5;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_NAVY = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1097458175);
    cbgg_Color_ROYAL = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1887473919);
    cbgg_Color_SLATE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-2016482305));
    cbgg_Color_SKY = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_CYAN = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 0.0;
    var$1.$g = 0.5;
    var$1.$b = 0.5;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_TEAL = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 16711935);
    cbgg_Color_GREEN = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 2147418367);
    cbgg_Color_CHARTREUSE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 852308735);
    cbgg_Color_LIME = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 579543807);
    cbgg_Color_FOREST = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, 1804477439);
    cbgg_Color_OLIVE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-65281));
    cbgg_Color_YELLOW = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-2686721));
    cbgg_Color_GOLD = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-626712321));
    cbgg_Color_GOLDENROD = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-5963521));
    cbgg_Color_ORANGE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1958407169));
    cbgg_Color_BROWN = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-759919361));
    cbgg_Color_TAN = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1306385665));
    cbgg_Color_FIREBRICK = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-16776961));
    cbgg_Color_RED = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-13361921));
    cbgg_Color_SCARLET = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-8433409));
    cbgg_Color_CORAL = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-92245249));
    cbgg_Color_SALMON = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-9849601));
    cbgg_Color_PINK = var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 0.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbgg_Color_MAGENTA = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1608453889));
    cbgg_Color_PURPLE = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-293409025));
    cbgg_Color_VIOLET = var$1;
    var$1 = new cbgg_Color;
    cbgg_Color_rgba8888ToColor(var$1, (-1339006721));
    cbgg_Color_MAROON = var$1;
};
function cbgg_GLTexture() {
    let a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter = null;
    a.$uWrap = null;
    a.$vWrap = null;
    a.$anisotropicFilterLevel = 0.0;
}
let cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0,
cbgg_GLTexture_unsafeSetWrap = ($this, $u, $v, $force) => {
    if ($u !== null && !(!$force && $this.$uWrap === $u)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, $u.$glEnum0);
        $this.$uWrap = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap === $v)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, $v.$glEnum0);
        $this.$vWrap = $v;
    }
},
cbgg_GLTexture_unsafeSetFilter = ($this, $minFilter, $magFilter, $force) => {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, $minFilter.$glEnum);
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, $magFilter.$glEnum);
        $this.$magFilter = $magFilter;
    }
},
cbgg_GLTexture_getMaxAnisotropicFilterLevel = () => {
    let var$1, var$2, var$3, $buffer, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = cbgg_GLTexture_maxAnisotropicFilterLevel;
    if (var$1 > 0.0)
        return var$1;
    if (!(cbg_Gdx_graphics.$context.getExtension("GL_EXT_texture_filter_anisotropic") === null ? 0 : 1)) {
        cbgg_GLTexture_maxAnisotropicFilterLevel = 1.0;
        return 1.0;
    }
    if (!cgxgbt_TeaTool_isProd) {
        var$2 = $rt_createFloatArray(16);
        var$3 = var$2.data.length;
        $buffer = new jn_FloatBufferOverArray;
        var$5 = 0 + var$3 | 0;
        $buffer.$mark = (-1);
        $buffer.$capacity = var$3;
        $buffer.$limit0 = var$3;
        $buffer.$position0 = 0;
        $buffer.$limit0 = var$5;
        $buffer.$start6 = 0;
        $buffer.$readOnly3 = 0;
        $buffer.$array3 = var$2;
    } else {
        $buffer = new jn_ByteBufferImpl;
        var$2 = $rt_createByteArray(64).data;
        $buffer.$mark = (-1);
        $buffer.$capacity = 64;
        $buffer.$limit0 = 64;
        $buffer.$order = jn_ByteOrder_BIG_ENDIAN;
        $buffer.$start0 = 0;
        var$6 = var$2.length;
        $buffer.$bkArray = $rt_createByteArray(var$6);
        var$7 = new cgxgbtdt_Int8ArrayNative;
        var$7.$buffer0 = new Int8Array(var$6);
        $buffer.$array = var$7;
        var$8 = 0;
        while (var$8 < var$6) {
            var$9 = var$2[var$8];
            var$10 = $buffer.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$10);
            var$10.$buffer0[var$8] = var$9;
            var$8 = var$8 + 1 | 0;
        }
        $buffer.$position0 = 0;
        $buffer.$limit0 = 64;
        $buffer.$direct = 1;
        $buffer.$readOnly0 = 0;
        $buffer.$order = jn_ByteOrder_nativeOrder();
        $buffer = jn_ByteBufferImpl_asFloatBuffer($buffer);
    }
    var$10 = $buffer;
    jn_Buffer_position(var$10, 0);
    jn_Buffer_limit(var$10, $buffer.$capacity);
    cbg_Gdx_gl20.$glGetFloatv(34047, $buffer);
    var$1 = jn_FloatBufferImpl_get($buffer, 0);
    cbgg_GLTexture_maxAnisotropicFilterLevel = var$1;
    return var$1;
},
cbgg_GLTexture_uploadImageData = ($target, $data, $miplevel) => {
    let var$4, $tmp_0, $pixmap, $disposePixmap, var$8, var$9, $type, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19;
    if ($data === null)
        return;
    var$4 = $data;
    if (!var$4.$isPrepared)
        cbggg_FileTextureData_prepare(var$4);
    if (cbgg_TextureData$TextureDataType_Pixmap === cbgg_TextureData$TextureDataType_Custom) {
        $data = new cbgu_GdxRuntimeException;
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = $rt_s(43);
        $rt_throw($data);
    }
    if (!var$4.$isPrepared) {
        $tmp_0 = new cbgu_GdxRuntimeException;
        $tmp_0.$suppressionEnabled = 1;
        $tmp_0.$writableStackTrace = 1;
        $tmp_0.$message = $rt_s(44);
        $rt_throw($tmp_0);
    }
    var$4.$isPrepared = 0;
    $pixmap = var$4.$pixmap;
    var$4.$pixmap = null;
    $disposePixmap = 1;
    if (var$4.$format0 === cbgg_Pixmap$Format_fromGdx2DPixmapFormat($pixmap.$nativePixmap.$format))
        $tmp_0 = $pixmap;
    else {
        $tmp_0 = new cbgg_Pixmap;
        $data = $pixmap.$nativePixmap;
        var$8 = $data.$width;
        var$9 = $data.$height;
        $type = var$4.$format0;
        $tmp_0.$blending = cbgg_Pixmap$Blending_SourceOver;
        $tmp_0.$filter = cbgg_Pixmap$Filter_BiLinear;
        $tmp_0.$color0 = 0;
        var$11 = new cbggg_Gdx2DPixmap;
        var$12 = cbgg_Pixmap$Format_toGdx2DPixmapFormat($type);
        var$13 = $rt_createByteArray(0).data;
        $disposePixmap = var$13.length;
        if ($disposePixmap >= 0 && $disposePixmap <= ($disposePixmap - 0 | 0)) {
            $data = new jn_ByteBufferImpl;
            var$14 = 0 + $disposePixmap | 0;
            $data.$mark = (-1);
            $data.$capacity = $disposePixmap;
            $data.$limit0 = $disposePixmap;
            $data.$order = jn_ByteOrder_BIG_ENDIAN;
            $data.$start0 = 0;
            $data.$bkArray = $rt_createByteArray($disposePixmap);
            $type = new cgxgbtdt_Int8ArrayNative;
            $type.$buffer0 = new Int8Array($disposePixmap);
            $data.$array = $type;
            var$15 = 0;
            while (var$15 < $disposePixmap) {
                var$16 = var$13[var$15];
                $type = $data.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($type);
                $type.$buffer0[var$15] = var$16;
                var$15 = var$15 + 1 | 0;
            }
            $data.$position0 = 0;
            $data.$limit0 = var$14;
            $data.$direct = 0;
            $data.$readOnly0 = 0;
            var$11.$buffer2 = $data;
            var$11.$nativeData = cbggg_Gdx2DPixmap_newPixmapNative$js_body$_35(var$8, var$9, var$12);
            cbggg_Gdx2DPixmap_updateNativeData(var$11);
            $tmp_0.$nativePixmap = var$11;
            var$17 = cbgg_Color_rgba8888(0.0, 0.0, 0.0, 0.0);
            $tmp_0.$color0 = var$17;
            Gdx.Gdx.prototype.g2d_clear($tmp_0.$nativePixmap.$basePtr, var$17);
            $data = cbgg_Pixmap$Blending_None;
            $tmp_0.$blending = $data;
            $type = $tmp_0.$nativePixmap;
            var$17 = $data !== $data ? 1 : 0;
            Gdx.Gdx.prototype.g2d_set_blend($type.$basePtr, var$17);
            $type = $pixmap.$nativePixmap;
            var$8 = $type.$width;
            var$16 = $type.$height;
            $data = $tmp_0.$nativePixmap;
            Gdx.Gdx.prototype.g2d_draw_pixmap($type.$basePtr, $data.$basePtr, 0, 0, var$8, var$16, 0, 0, var$8, var$16);
            if ($pixmap.$disposed) {
                $tmp_0 = new cbgu_GdxRuntimeException;
                $tmp_0.$suppressionEnabled = 1;
                $tmp_0.$writableStackTrace = 1;
                $tmp_0.$message = $rt_s(45);
                $rt_throw($tmp_0);
            }
            Gdx.Gdx.prototype.g2d_free($pixmap.$nativePixmap.$basePtr);
            $pixmap.$disposed = 1;
            $disposePixmap = 1;
        } else {
            $data = new jl_IndexOutOfBoundsException;
            jl_Throwable__init_($data);
            $rt_throw($data);
        }
    }
    cbg_Gdx_gl.$glPixelStorei(3317, 1);
    if (var$4.$useMipMaps) {
        $data = $tmp_0.$nativePixmap;
        cbggg_MipMapGenerator_generateMipMap($target, $tmp_0, $data.$width, $data.$height);
    } else {
        a: {
            $data = cbg_Gdx_gl;
            $type = $tmp_0.$nativePixmap;
            var$18 = $type.$format;
            switch (var$18) {
                case 1:
                    var$16 = 6406;
                    break a;
                case 2:
                    var$16 = 6410;
                    break a;
                case 3:
                case 5:
                    var$16 = 6407;
                    break a;
                case 4:
                case 6:
                    var$16 = 6408;
                    break a;
                default:
            }
            $data = new cbgu_GdxRuntimeException;
            $data.$suppressionEnabled = 1;
            $data.$writableStackTrace = 1;
            $data.$message = $tmp_0;
            $rt_throw($data);
        }
        b: {
            var$19 = $type.$width;
            var$14 = $type.$height;
            switch (var$18) {
                case 1:
                    var$15 = 6406;
                    break b;
                case 2:
                    var$15 = 6410;
                    break b;
                case 3:
                case 5:
                    var$15 = 6407;
                    break b;
                case 4:
                case 6:
                    var$15 = 6408;
                    break b;
                default:
            }
            $data = new cbgu_GdxRuntimeException;
            $data.$suppressionEnabled = 1;
            $data.$writableStackTrace = 1;
            $data.$message = $tmp_0;
            $rt_throw($data);
        }
        c: {
            switch (var$18) {
                case 1:
                case 2:
                case 3:
                case 4:
                    var$18 = 5121;
                    break c;
                case 5:
                    var$18 = 33635;
                    break c;
                case 6:
                    var$18 = 32819;
                    break c;
                default:
            }
            $data = new cbgu_GdxRuntimeException;
            $data.$suppressionEnabled = 1;
            $data.$writableStackTrace = 1;
            $data.$message = $tmp_0;
            $rt_throw($data);
        }
        $data.$glTexImage2D($target, $miplevel, var$16, var$19, var$14, 0, var$15, var$18, $type.$buffer2);
    }
    if ($disposePixmap) {
        if ($tmp_0.$disposed) {
            $tmp_0 = new cbgu_GdxRuntimeException;
            $tmp_0.$suppressionEnabled = 1;
            $tmp_0.$writableStackTrace = 1;
            $tmp_0.$message = $rt_s(45);
            $rt_throw($tmp_0);
        }
        Gdx.Gdx.prototype.g2d_free($tmp_0.$nativePixmap.$basePtr);
        $tmp_0.$disposed = 1;
    }
},
cbgg_GLTexture__clinit_ = () => {
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
};
function cbgg_Texture() {
    cbgg_GLTexture.call(this);
    this.$data1 = null;
}
let cbgg_Texture_managedTextures = null,
cbgg_Texture_load = ($this, $data) => {
    let var$2, var$3, var$4, var$5;
    $this.$data1 = $data;
    var$2 = $data;
    if (!var$2.$isPrepared)
        cbggg_FileTextureData_prepare(var$2);
    var$3 = $this;
    cbg_Gdx_gl.$glBindTexture(var$3.$glTarget, var$3.$glHandle);
    cbgg_GLTexture_uploadImageData(3553, $data, 0);
    cbgg_GLTexture_unsafeSetFilter(var$3, $this.$minFilter, $this.$magFilter, 1);
    cbgg_GLTexture_unsafeSetWrap(var$3, $this.$uWrap, $this.$vWrap, 1);
    var$4 = $this.$anisotropicFilterLevel;
    var$5 = cbgg_GLTexture_getMaxAnisotropicFilterLevel();
    if (var$5 !== 1.0) {
        var$4 = jl_Math_minImpl(var$4, var$5);
        cbg_Gdx_gl20.$glTexParameterf(3553, 34046, var$4);
        var$3.$anisotropicFilterLevel = var$4;
    }
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
},
cbgg_Texture_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$data1;
    if (!(var$1 instanceof cbggg_FileTextureData)) {
        var$1 = $this.constructor;
        if (var$1 === null)
            var$2 = null;
        else {
            var$2 = var$1.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$1;
                var$1.classObject = var$2;
            }
        }
        if (var$2.$name === null)
            var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
        var$3 = var$2.$name;
        var$1 = $this;
        if (!var$1.$id$)
            var$1.$id$ = $rt_nextId();
        var$2 = otci_IntegerUtil_toUnsignedLogRadixString($this.$id$, 4);
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        var$4 = var$1.$length0;
        var$5 = var$1;
        var$3 = var$3 === null ? $rt_s(1) : var$3;
        var$6 = var$5;
        jl_AbstractStringBuilder_insert(var$6, var$4, var$3);
        var$7 = var$1.$length0;
        jl_AbstractStringBuilder_insertSpace(var$5, var$7, var$7 + 1 | 0);
        var$5.$buffer.data[var$7] = 64;
        jl_AbstractStringBuilder_insert(var$6, var$1.$length0, var$2 === null ? $rt_s(1) : var$2);
        var$5 = new jl_String;
        var$8 = var$1.$buffer;
        var$9 = var$8.data;
        var$7 = var$1.$length0;
        var$10 = var$9.length;
        if (var$7 >= 0 && var$7 <= (var$10 - 0 | 0)) {
            var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, var$7);
            return var$5;
        }
        var$1 = new jl_IndexOutOfBoundsException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    var$5 = var$1.constructor;
    if (var$5 === null)
        var$3 = null;
    else {
        var$3 = var$5.classObject;
        if (var$3 === null) {
            var$3 = new jl_Class;
            var$3.$platformClass = var$5;
            var$5.classObject = var$3;
        }
    }
    if (var$3.$name === null)
        var$3.$name = $rt_str(var$3.$platformClass.$meta.name);
    var$6 = var$3.$name;
    var$5 = var$1;
    if (!var$5.$id$)
        var$5.$id$ = $rt_nextId();
    var$2 = otci_IntegerUtil_toUnsignedLogRadixString(var$1.$id$, 4);
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    var$4 = var$1.$length0;
    var$5 = var$1;
    var$3 = var$6 === null ? $rt_s(1) : var$6;
    var$6 = var$5;
    jl_AbstractStringBuilder_insert(var$6, var$4, var$3);
    var$7 = var$1.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$7, var$7 + 1 | 0);
    var$5.$buffer.data[var$7] = 64;
    jl_AbstractStringBuilder_insert(var$6, var$1.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$5 = new jl_String;
    var$8 = var$1.$buffer;
    var$9 = var$8.data;
    var$7 = var$1.$length0;
    var$10 = var$9.length;
    if (var$7 >= 0 && var$7 <= (var$10 - 0 | 0)) {
        var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, var$7);
        return var$5;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
cbgg_Texture__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = new ju_HashMap;
    var$2 = ju_HashMap_calculateCapacity(16);
    var$1.$elementCount = 0;
    var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
    var$4 = var$3.data;
    var$1.$elementData = var$3;
    var$1.$loadFactor = 0.75;
    var$1.$threshold = var$4.length * 0.75 | 0;
    cbgg_Texture_managedTextures = var$1;
};
function cbgu_Array() {
    let a = this; jl_Object.call(a);
    a.$items = null;
    a.$size = 0;
    a.$ordered = 0;
    a.$iterable = null;
}
let cbgu_Array__init_0 = ($this, $ordered, $capacity) => {
    $this.$ordered = $ordered;
    $this.$items = $rt_createArray(jl_Object, $capacity);
},
cbgu_Array__init_ = (var_0, var_1) => {
    let var_2 = new cbgu_Array();
    cbgu_Array__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array_add = ($this, $value) => {
    let $items, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $items = $this.$items;
    var$3 = $items.data;
    var$4 = $this.$size;
    if (var$4 != var$3.length)
        var$3 = $items;
    else {
        var$5 = var$4 * 1.75 | 0;
        if (8 > var$5)
            var$5 = 8;
        var$6 = $items.constructor;
        if (var$6 === null)
            var$7 = null;
        else {
            var$7 = var$6.classObject;
            if (var$7 === null) {
                var$7 = new jl_Class;
                var$7.$platformClass = var$6;
                var$6.classObject = var$7;
            }
        }
        var$7 = jl_Class_getComponentType(var$7);
        if (var$7 === null) {
            $value = new jl_NullPointerException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            $rt_throw($value);
        }
        if (var$7 === $rt_cls($rt_voidcls)) {
            $value = new jl_IllegalArgumentException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            $rt_throw($value);
        }
        if (var$5 < 0) {
            $value = new jl_NegativeArraySizeException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            $rt_throw($value);
        }
        var$3 = jlr_Array_newInstanceImpl(var$7.$platformClass, var$5);
        var$8 = var$3.data;
        var$9 = $this.$size;
        var$10 = var$8.length;
        if (var$9 < var$10)
            var$10 = var$9;
        jl_System_fastArraycopy($items, 0, var$3, 0, var$10);
        $this.$items = var$3;
    }
    $items = var$3.data;
    var$5 = $this.$size;
    $this.$size = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_Array_addAll = ($this, $array, $start, $count) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
    if (($start + $count | 0) > $array.$size) {
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        var$6 = var$5.$length0;
        var$7 = var$5;
        jl_AbstractStringBuilder_insert(var$7, var$6, $rt_s(46));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $start, 10);
        jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(47));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $count, 10);
        jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(48));
        $start = $array.$size;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $start, 10);
        $array = new jl_String;
        var$8 = var$5.$buffer;
        var$9 = var$8.data;
        $count = var$5.$length0;
        var$6 = var$9.length;
        if ($count >= 0 && $count <= (var$6 - 0 | 0)) {
            $array.$nativeString = $rt_charArrayToString(var$8.data, 0, $count);
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = $array;
            $rt_throw(var$4);
        }
        $array = new jl_IndexOutOfBoundsException;
        $array.$suppressionEnabled = 1;
        $array.$writableStackTrace = 1;
        $rt_throw($array);
    }
    var$8 = $array.$items;
    var$10 = $this.$items;
    var$9 = var$10.data;
    var$11 = $this.$size;
    var$12 = var$11 + $count | 0;
    if (var$12 <= var$9.length)
        var$9 = var$10;
    else {
        var$6 = 8;
        if (var$6 <= var$12)
            var$6 = var$12;
        var$13 = var$11 * 1.75 | 0;
        if (var$6 > var$13)
            var$13 = var$6;
        var$4 = var$10.constructor;
        if (var$4 === null)
            $array = null;
        else {
            $array = var$4.classObject;
            if ($array === null) {
                $array = new jl_Class;
                $array.$platformClass = var$4;
                var$4.classObject = $array;
            }
        }
        $array = jl_Class_getComponentType($array);
        if ($array === null) {
            $array = new jl_NullPointerException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        if ($array === $rt_cls($rt_voidcls)) {
            $array = new jl_IllegalArgumentException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        if (var$13 < 0) {
            $array = new jl_NegativeArraySizeException;
            $array.$suppressionEnabled = 1;
            $array.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($array);
            $rt_throw($array);
        }
        var$9 = jlr_Array_newInstanceImpl($array.$platformClass, var$13);
        var$14 = var$9.data;
        var$11 = $this.$size;
        var$15 = var$14.length;
        if (var$11 < var$15)
            var$15 = var$11;
        jl_System_fastArraycopy(var$10, 0, var$9, 0, var$15);
        $this.$items = var$9;
    }
    jl_System_fastArraycopy(var$8, $start, var$9, $this.$size, $count);
    $this.$size = var$12;
},
cbgu_Array_removeValue = ($this, $value, $identity) => {
    let $items, $i, $n, var$6, var$7;
    a: {
        $items = $this.$items;
        if (!(!$identity && $value !== null)) {
            $i = 0;
            $n = $this.$size;
            while ($i < $n) {
                if ($items.data[$i] === $value) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            $n = $this.$size;
            while (true) {
                if ($i >= $n)
                    break a;
                var$6 = $items.data[$i];
                var$7 = $value;
                if (var$7 === var$6)
                    $identity = 1;
                else if (!(var$6 instanceof jl_String))
                    $identity = 0;
                else {
                    var$6 = var$6;
                    $identity = var$7.$nativeString !== var$6.$nativeString ? 0 : 1;
                }
                if ($identity) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
},
cbgu_Array_removeIndex = ($this, $index) => {
    let var$2, $items, var$4, $value, var$6, var$7, var$8;
    var$2 = $this.$size;
    if ($index < var$2) {
        $items = $this.$items;
        var$4 = $items.data;
        $value = var$4[$index];
        var$6 = var$2 - 1 | 0;
        $this.$size = var$6;
        if (!$this.$ordered)
            var$4[$index] = var$4[var$6];
        else
            jl_System_fastArraycopy($items, $index + 1 | 0, $items, $index, var$6 - $index | 0);
        var$4[$this.$size] = null;
        return $value;
    }
    $value = new jl_IndexOutOfBoundsException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$6 = var$7.$length0;
    var$8 = var$7;
    jl_AbstractStringBuilder_insert(var$8, var$6, $rt_s(31));
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(32));
    $index = $this.$size;
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $index, 10);
    var$8 = new jl_String;
    $items = var$7.$buffer;
    var$4 = $items.data;
    var$6 = var$7.$length0;
    var$2 = var$4.length;
    if (var$6 >= 0 && var$6 <= (var$2 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString($items.data, 0, var$6);
        $value.$suppressionEnabled = 1;
        $value.$writableStackTrace = 1;
        $value.$message = var$8;
        $rt_throw($value);
    }
    $value = new jl_IndexOutOfBoundsException;
    $value.$suppressionEnabled = 1;
    $value.$writableStackTrace = 1;
    $rt_throw($value);
},
cbgu_Array_removeRange = ($this, $start, $end) => {
    let $n, var$4, var$5, var$6, $count, $items, var$9, $lastIndex, $i, var$12;
    $n = $this.$size;
    if ($end >= $n) {
        var$4 = new jl_IndexOutOfBoundsException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        $start = var$5.$length0;
        var$6 = var$5;
        jl_AbstractStringBuilder_insert(var$6, $start, $rt_s(49));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $end, 10);
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(32));
        $count = $this.$size;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $count, 10);
        var$6 = new jl_String;
        $items = var$5.$buffer;
        var$9 = $items.data;
        $end = var$5.$length0;
        $count = var$9.length;
        if ($end >= 0 && $end <= ($count - 0 | 0)) {
            var$6.$nativeString = $rt_charArrayToString($items.data, 0, $end);
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$6;
            $rt_throw(var$4);
        }
        var$4 = new jl_IndexOutOfBoundsException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($start <= $end) {
        $items = $this.$items;
        $count = ($end - $start | 0) + 1 | 0;
        $lastIndex = $n - $count | 0;
        if ($this.$ordered) {
            $end = $start + $count | 0;
            jl_System_fastArraycopy($items, $end, $items, $start, $n - $end | 0);
        } else {
            $i = $end + 1 | 0;
            if ($lastIndex > $i)
                $i = $lastIndex;
            jl_System_fastArraycopy($items, $i, $items, $start, $n - $i | 0);
        }
        $i = $lastIndex;
        while ($i < $n) {
            $items.data[$i] = null;
            $i = $i + 1 | 0;
        }
        $this.$size = $lastIndex;
        return;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $count = var$5.$length0;
    var$12 = var$5;
    jl_AbstractStringBuilder_insert(var$12, $count, $rt_s(50));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $start, 10);
    jl_AbstractStringBuilder_insert(var$12, var$5.$length0, $rt_s(51));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $end, 10);
    var$6 = new jl_String;
    $items = var$5.$buffer;
    var$9 = $items.data;
    $end = var$5.$length0;
    $count = var$9.length;
    if ($end >= 0 && $end <= ($count - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString($items.data, 0, $end);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    $rt_throw(var$4);
},
cbgu_Array_clear = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$items;
    var$2 = 0;
    var$3 = $this.$size;
    var$4 = null;
    if (var$2 > var$3) {
        var$4 = new jl_IllegalArgumentException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    while (var$2 < var$3) {
        var$5 = var$1.data;
        var$6 = var$2 + 1 | 0;
        var$5[var$2] = var$4;
        var$2 = var$6;
    }
    $this.$size = 0;
},
cbgu_Array_ensureCapacity = ($this, $additionalCapacity) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, $sizeNeeded, var$9, var$10;
    if ($additionalCapacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length0;
        jl_AbstractStringBuilder_insert(var$3, var$4, $rt_s(52));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, $additionalCapacity, 10);
        var$5 = new jl_String;
        var$6 = var$3.$buffer;
        var$7 = var$6.data;
        var$4 = var$3.$length0;
        $sizeNeeded = var$7.length;
        if (var$4 >= 0 && var$4 <= ($sizeNeeded - 0 | 0)) {
            var$5.$nativeString = $rt_charArrayToString(var$6.data, 0, var$4);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$5;
            $rt_throw(var$2);
        }
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    var$4 = $this.$size;
    $sizeNeeded = var$4 + $additionalCapacity | 0;
    var$6 = $this.$items;
    if ($sizeNeeded > var$6.data.length) {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        $additionalCapacity = var$4 * 1.75 | 0;
        if ($sizeNeeded > $additionalCapacity)
            $additionalCapacity = $sizeNeeded;
        var$3 = var$6.constructor;
        if (var$3 === null)
            var$2 = null;
        else {
            var$2 = var$3.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$3;
                var$3.classObject = var$2;
            }
        }
        var$2 = jl_Class_getComponentType(var$2);
        if (var$2 === null) {
            var$2 = new jl_NullPointerException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if (var$2 === $rt_cls($rt_voidcls)) {
            var$2 = new jl_IllegalArgumentException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if ($additionalCapacity < 0) {
            var$2 = new jl_NegativeArraySizeException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$7 = jlr_Array_newInstanceImpl(var$2.$platformClass, $additionalCapacity);
        var$9 = var$7.data;
        $sizeNeeded = $this.$size;
        var$10 = var$9.length;
        if ($sizeNeeded < var$10)
            var$10 = $sizeNeeded;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$10);
        $this.$items = var$7;
    }
    return $this.$items;
},
cbgu_Array_iterator = $this => {
    let var$1;
    if (cbgu_Collections_allocateIterators) {
        var$1 = new cbgu_Array$ArrayIterator;
        var$1.$valid0 = 1;
        var$1.$array4 = $this;
        var$1.$allowRemove = 1;
        return var$1;
    }
    if ($this.$iterable === null) {
        var$1 = new cbgu_Array$ArrayIterable;
        var$1.$array6 = $this;
        var$1.$allowRemove0 = 1;
        $this.$iterable = var$1;
    }
    return cbgu_Array$ArrayIterable_iterator($this.$iterable);
},
cbgu_Array_truncate = ($this, $newSize) => {
    let var$2, $i, var$4, var$5, var$6, var$7, var$8;
    if ($newSize >= 0) {
        var$2 = $this.$size;
        if (var$2 <= $newSize)
            return;
        $i = $newSize;
        while ($i < var$2) {
            $this.$items.data[$i] = null;
            $i = $i + 1 | 0;
        }
        $this.$size = $newSize;
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$2 = var$5.$length0;
    jl_AbstractStringBuilder_insert(var$5, var$2, $rt_s(53));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $newSize, 10);
    var$6 = new jl_String;
    var$7 = var$5.$buffer;
    var$8 = var$7.data;
    var$2 = var$5.$length0;
    $i = var$8.length;
    if (var$2 >= 0 && var$2 <= ($i - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$2);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    $rt_throw(var$4);
},
cbgu_Array_hashCode = $this => {
    let $items, $h, $i, $n, var$5, $item;
    if ($this.$ordered) {
        $items = $this.$items;
        $h = 1;
        $i = 0;
        $n = $this.$size;
        while ($i < $n) {
            var$5 = $items.data;
            $h = $h * 31 | 0;
            $item = var$5[$i];
            if ($item !== null)
                $h = $h + $item.$hashCode() | 0;
            $i = $i + 1 | 0;
        }
        return $h;
    }
    $item = $this;
    if (!$item.$id$)
        $item.$id$ = $rt_nextId();
    return $this.$id$;
},
cbgu_Array_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered)
        return 0;
    if (!($object instanceof cbgu_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered)
        return 0;
    $n = $this.$size;
    if ($n != $array.$size)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
},
cbgu_Array_toString = $this => {
    let $items, $buffer, var$3, var$4, var$5, var$6, var$7, $i, var$9, var$10;
    if (!$this.$size)
        return $rt_s(54);
    $items = $this.$items;
    $buffer = new cbgu_StringBuilder;
    var$3 = $rt_createCharArray(32);
    var$4 = var$3.data;
    $buffer.$chars = var$3;
    var$5 = $buffer.$length1;
    if (var$5 == var$4.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    $items = $items.data;
    var$4 = $buffer.$chars.data;
    var$6 = $buffer.$length1;
    $buffer.$length1 = var$6 + 1 | 0;
    var$4[var$6] = 91;
    var$7 = $items[0];
    if (var$7 === null)
        cbgu_StringBuilder_appendNull($buffer);
    else {
        var$7 = var$7.$toString();
        if (var$7 === null)
            cbgu_StringBuilder_appendNull($buffer);
        else {
            $i = var$7.$nativeString.length;
            var$9 = $buffer.$length1 + $i | 0;
            if (var$9 > $buffer.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($buffer, var$9);
            jl_String_getChars(var$7, 0, $i, $buffer.$chars, $buffer.$length1);
            $buffer.$length1 = var$9;
        }
    }
    $i = 1;
    while ($i < $this.$size) {
        var$6 = $rt_s(55).$nativeString.length;
        var$10 = $buffer.$length1 + var$6 | 0;
        if (var$10 > $buffer.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$10);
        jl_String_getChars($rt_s(55), 0, var$6, $buffer.$chars, $buffer.$length1);
        $buffer.$length1 = var$10;
        var$7 = $items[$i];
        if (var$7 === null)
            cbgu_StringBuilder_appendNull($buffer);
        else {
            var$7 = var$7.$toString();
            if (var$7 === null)
                cbgu_StringBuilder_appendNull($buffer);
            else {
                var$10 = var$7.$nativeString.length;
                var$9 = $buffer.$length1 + var$10 | 0;
                if (var$9 > $buffer.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($buffer, var$9);
                jl_String_getChars(var$7, 0, var$10, $buffer.$chars, $buffer.$length1);
                $buffer.$length1 = var$9;
            }
        }
        $i = $i + 1 | 0;
    }
    var$5 = $buffer.$length1;
    if (var$5 == $buffer.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    a: {
        $items = $buffer.$chars;
        var$4 = $items.data;
        var$6 = $buffer.$length1;
        var$5 = var$6 + 1 | 0;
        $buffer.$length1 = var$5;
        var$4[var$6] = 93;
        if (!var$5)
            $buffer = $rt_s(40);
        else {
            $buffer = new jl_String;
            var$6 = var$4.length;
            if (var$5 < 0)
                break a;
            if (var$5 > (var$6 - 0 | 0))
                break a;
            $buffer.$nativeString = $rt_charArrayToString($items.data, 0, var$5);
        }
        return $buffer;
    }
    $buffer = new jl_IndexOutOfBoundsException;
    $buffer.$suppressionEnabled = 1;
    $buffer.$writableStackTrace = 1;
    $rt_throw($buffer);
};
function cbgu_ObjectMap() {
    let a = this; jl_Object.call(a);
    a.$size4 = 0;
    a.$keyTable = null;
    a.$valueTable = null;
    a.$loadFactor2 = 0.0;
    a.$threshold0 = 0;
    a.$shift1 = 0;
    a.$mask2 = 0;
}
let cbgu_ObjectMap_dummy = null,
cbgu_ObjectMap__init_ = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor2 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold0 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask2 = $initialCapacity;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $initialCapacity = var$5.$length0;
    var$6 = var$5;
    jl_AbstractStringBuilder_insert(var$6, $initialCapacity, $rt_s(56));
    jl_AbstractStringBuilder_insert1(var$6, var$5.$length0, $loadFactor);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $tableSize = var$5.$length0;
    var$10 = var$9.length;
    if ($tableSize >= 0 && $tableSize <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    $rt_throw(var$5);
},
cbgu_ObjectMap__init_0 = (var_0, var_1) => {
    let var_2 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_(var_2, var_0, var_1);
    return var_2;
},
cbgu_ObjectMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift1));
},
cbgu_ObjectMap_locateKey = ($this, $key) => {
    let $other, $keyTable, $i;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        $other.$suppressionEnabled = 1;
        $other.$writableStackTrace = 1;
        $other.$message = $rt_s(57);
        $rt_throw($other);
    }
    $keyTable = $this.$keyTable;
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift1));
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask2;
    }
    return $i;
},
cbgu_ObjectMap_put = ($this, $key, $value) => {
    let $i, var$4, $oldValue;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i >= 0) {
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable.data;
    var$4[$i] = $key;
    $this.$valueTable.data[$i] = $value;
    $i = $this.$size4 + 1 | 0;
    $this.$size4 = $i;
    if ($i >= $this.$threshold0)
        cbgu_ObjectMap_resize($this, var$4.length << 1);
    return null;
},
cbgu_ObjectMap_remove = ($this, $key) => {
    let $i, $keyTable, var$4, $oldValue, $mask, $next, $valueTable, $placement;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable;
    var$4 = $this.$valueTable.data;
    $oldValue = var$4[$i];
    $mask = $this.$mask2;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        $valueTable = $keyTable.data;
        $key = $valueTable[$next];
        if ($key === null)
            break;
        $placement = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift1));
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            $valueTable[$i] = $key;
            var$4[$i] = var$4[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    $valueTable[$i] = null;
    var$4[$i] = null;
    $this.$size4 = $this.$size4 - 1 | 0;
    return $oldValue;
},
cbgu_ObjectMap_resize = ($this, $newSize) => {
    let $oldCapacity, $i, $oldKeyTable, $oldValueTable, $key, var$7, var$8, var$9;
    a: {
        $oldCapacity = $this.$keyTable.data.length;
        $this.$threshold0 = $newSize * $this.$loadFactor2 | 0;
        $i = $newSize - 1 | 0;
        $this.$mask2 = $i;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($i));
        $oldKeyTable = $this.$keyTable;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize);
        if ($this.$size4 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null) {
                    var$7 = $oldValueTable.data[$i];
                    var$8 = $this.$keyTable;
                    $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift1));
                    while (true) {
                        var$9 = var$8.data;
                        if (var$9[$newSize] === null)
                            break;
                        $newSize = ($newSize + 1 | 0) & $this.$mask2;
                    }
                    var$9[$newSize] = $key;
                    $this.$valueTable.data[$newSize] = var$7;
                }
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgu_ObjectMap__clinit_ = () => {
    cbgu_ObjectMap_dummy = new jl_Object;
};
function cbgu_OrderedMap() {
    cbgu_ObjectMap.call(this);
    this.$keys = null;
}
let cbgu_OrderedMap_put = ($this, $key, $value) => {
    let $i, var$4, $oldValue;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i >= 0) {
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    $this.$keyTable.data[$i] = $key;
    $this.$valueTable.data[$i] = $value;
    cbgu_Array_add($this.$keys, $key);
    $i = $this.$size4 + 1 | 0;
    $this.$size4 = $i;
    if ($i >= $this.$threshold0)
        cbgu_ObjectMap_resize($this, $this.$keyTable.data.length << 1);
    return null;
},
cbgu_Queue = $rt_classWithoutFields();
function cbgg_VertexAttribute() {
    let a = this; jl_Object.call(a);
    a.$usage = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type2 = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
    a.$usageIndex = 0;
}
let cbgg_VertexAttribute_equals0 = ($this, $obj) => {
    if (!($obj instanceof cbgg_VertexAttribute))
        return 0;
    return cbgg_VertexAttribute_equals($this, $obj);
},
cbgg_VertexAttribute_equals = ($this, $other) => {
    let var$2, var$3, var$4;
    a: {
        if ($other !== null && $this.$usage == $other.$usage && $this.$numComponents == $other.$numComponents && $this.$type2 == $other.$type2 && $this.$normalized == $other.$normalized) {
            var$2 = $this.$alias;
            var$3 = $other.$alias;
            if (var$2 === var$3)
                var$4 = 1;
            else if (!(var$3 instanceof jl_String))
                var$4 = 0;
            else {
                var$3 = var$3;
                var$4 = var$2.$nativeString !== var$3.$nativeString ? 0 : 1;
            }
            if (var$4 && $this.$unit == $other.$unit) {
                var$4 = 1;
                break a;
            }
        }
        var$4 = 0;
    }
    return var$4;
},
cbgg_VertexAttribute_hashCode = $this => {
    let var$1, var$2, $result;
    a: {
        var$1 = 541 * ((541 * (($this.$usageIndex << 8) + ($this.$unit & 255) | 0) | 0) + $this.$numComponents | 0) | 0;
        var$2 = $this.$alias;
        if (!var$2.$hashCode0) {
            $result = 0;
            while (true) {
                if ($result >= var$2.$nativeString.length)
                    break a;
                var$2.$hashCode0 = (31 * var$2.$hashCode0 | 0) + var$2.$nativeString.charCodeAt($result) | 0;
                $result = $result + 1 | 0;
            }
        }
    }
    return var$1 + var$2.$hashCode0 | 0;
},
cbgggm_NodeKeyframe = $rt_classWithoutFields(),
cbgggm_Node = $rt_classWithoutFields(),
cbgggm_Animation = $rt_classWithoutFields(),
cbgggmd_ModelNodeAnimation = $rt_classWithoutFields(),
cbgggmd_ModelMeshPart = $rt_classWithoutFields(),
cbgggmd_ModelTexture = $rt_classWithoutFields(),
cbgggmd_ModelNodeKeyframe = $rt_classWithoutFields(),
cbgggmd_ModelMaterial$MaterialType = $rt_classWithoutFields(jl_Enum),
cbgggmd_ModelMaterial$MaterialType_Lambert = null,
cbgggmd_ModelMaterial$MaterialType_Phong = null,
cbgggmd_ModelMaterial$MaterialType_$VALUES = null,
cbgggmd_ModelMaterial$MaterialType__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgggmd_ModelMaterial$MaterialType;
    var$1.$name0 = $rt_s(58);
    var$1.$ordinal0 = 0;
    cbgggmd_ModelMaterial$MaterialType_Lambert = var$1;
    var$2 = new cbgggmd_ModelMaterial$MaterialType;
    var$2.$name0 = $rt_s(59);
    var$2.$ordinal0 = 1;
    cbgggmd_ModelMaterial$MaterialType_Phong = var$2;
    cbgggmd_ModelMaterial$MaterialType_$VALUES = $rt_wrapArray(cbgggmd_ModelMaterial$MaterialType, [var$1, var$2]);
},
cbgggmd_ModelAnimation = $rt_classWithoutFields(),
cbgggmd_ModelMesh = $rt_classWithoutFields(),
cbgggmd_ModelMaterial = $rt_classWithoutFields(),
cbgggmd_ModelNode = $rt_classWithoutFields(),
cbgggmd_ModelNodePart = $rt_classWithoutFields(),
cbgggmd_ModelData = $rt_classWithoutFields(),
cbgggm_NodeAnimation = $rt_classWithoutFields(),
cbgggm_NodePart = $rt_classWithoutFields(),
cbgggm_MeshPart = $rt_classWithoutFields(),
cbgggm_MeshPart_bounds = null,
cbgggm_MeshPart_$callClinit = () => {
    cbgggm_MeshPart_$callClinit = $rt_eraseClinit(cbgggm_MeshPart);
    cbgggm_MeshPart__clinit_();
},
cbgggm_MeshPart__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgmc_BoundingBox;
    cbgmc_BoundingBox_$callClinit();
    var$2 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$1.$min2 = var$2;
    var$3 = new cbgm_Vector3;
    var$1.$max3 = var$3;
    var$1.$cnt = new cbgm_Vector3;
    var$1.$dim = new cbgm_Vector3;
    var$2.$x = 0.0;
    var$2.$y = 0.0;
    var$2.$z = 0.0;
    var$3.$x = 0.0;
    var$3.$y = 0.0;
    var$3.$z = 0.0;
    cbgmc_BoundingBox_set(var$1, var$2, var$3);
    cbgggm_MeshPart_bounds = var$1;
},
cbg_Net = $rt_classWithoutFields(0),
cbgm_MapObject = $rt_classWithoutFields(),
cbgmo_RectangleMapObject = $rt_classWithoutFields(cbgm_MapObject),
cbgmo_TextureMapObject = $rt_classWithoutFields(cbgm_MapObject),
cbgmo_PolygonMapObject = $rt_classWithoutFields(cbgm_MapObject),
cbgmo_PolylineMapObject = $rt_classWithoutFields(cbgm_MapObject),
cbgmo_CircleMapObject = $rt_classWithoutFields(cbgm_MapObject),
cbgmo_EllipseMapObject = $rt_classWithoutFields(cbgm_MapObject),
cbgmto_TiledMapTileMapObject = $rt_classWithoutFields(cbgmo_TextureMapObject),
cbgggp_ResourceData$Configurable = $rt_classWithoutFields(0),
cbgggp_ParticleEffect = $rt_classWithoutFields(),
cbgu_Json$Serializable = $rt_classWithoutFields(0),
cbgggp_ParticleController = $rt_classWithoutFields(),
cbgggp_ResourceData = $rt_classWithoutFields(),
cbgggp_ParallelArray = $rt_classWithoutFields(),
cbgggpv_ParticleValue = $rt_classWithoutFields(),
cbgggpv_SpawnShapeValue = $rt_classWithoutFields(cbgggpv_ParticleValue),
cbgggpv_MeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue),
cbgggpv_UnweightedMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue),
cbgggpv_PrimitiveSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue),
cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = null,
cbgggpv_PrimitiveSpawnShapeValue_$callClinit = () => {
    cbgggpv_PrimitiveSpawnShapeValue_$callClinit = $rt_eraseClinit(cbgggpv_PrimitiveSpawnShapeValue);
    cbgggpv_PrimitiveSpawnShapeValue__clinit_();
},
cbgggpv_PrimitiveSpawnShapeValue__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = var$1;
};
let cbgggpv_PointSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue),
cbgggpv_RangedNumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue),
cbgggpv_ScaledNumericValue = $rt_classWithoutFields(cbgggpv_RangedNumericValue),
cbgggpv_WeightMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue),
cbgggpv_LineSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue),
cbgggpv_MeshSpawnShapeValue$Triangle = $rt_classWithoutFields(),
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide = $rt_classWithoutFields(jl_Enum),
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = null,
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = null,
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = null,
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = null,
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$1.$name0 = $rt_s(60);
    var$1.$ordinal0 = 0;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = var$1;
    var$2 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$2.$name0 = $rt_s(61);
    var$2.$ordinal0 = 1;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = var$2;
    var$3 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$3.$name0 = $rt_s(62);
    var$3.$ordinal0 = 2;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = var$3;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = $rt_wrapArray(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, [var$1, var$2, var$3]);
},
cbgggpv_GradientColorValue = $rt_classWithoutFields(cbgggpv_ParticleValue),
cbgggpv_GradientColorValue_temp = null,
cbgggpv_GradientColorValue__clinit_ = () => {
    cbgggpv_GradientColorValue_temp = $rt_createFloatArray(3);
},
cbgggpv_NumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue),
cbgggpv_CylinderSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue),
cbgggpv_EllipseSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue),
cbgggpv_RectangleSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue),
cbgggp_ParticleControllerComponent = $rt_classWithoutFields(),
cbgggpe_Emitter = $rt_classWithoutFields(cbgggp_ParticleControllerComponent),
cbgggpe_RegularEmitter = $rt_classWithoutFields(cbgggpe_Emitter),
cbgggpe_RegularEmitter$EmissionMode = $rt_classWithoutFields(jl_Enum),
cbgggpe_RegularEmitter$EmissionMode_Enabled = null,
cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = null,
cbgggpe_RegularEmitter$EmissionMode_Disabled = null,
cbgggpe_RegularEmitter$EmissionMode_$VALUES = null,
cbgggpe_RegularEmitter$EmissionMode__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgggpe_RegularEmitter$EmissionMode;
    var$1.$name0 = $rt_s(63);
    var$1.$ordinal0 = 0;
    cbgggpe_RegularEmitter$EmissionMode_Enabled = var$1;
    var$2 = new cbgggpe_RegularEmitter$EmissionMode;
    var$2.$name0 = $rt_s(64);
    var$2.$ordinal0 = 1;
    cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = var$2;
    var$3 = new cbgggpe_RegularEmitter$EmissionMode;
    var$3.$name0 = $rt_s(65);
    var$3.$ordinal0 = 2;
    cbgggpe_RegularEmitter$EmissionMode_Disabled = var$3;
    cbgggpe_RegularEmitter$EmissionMode_$VALUES = $rt_wrapArray(cbgggpe_RegularEmitter$EmissionMode, [var$1, var$2, var$3]);
},
cbgggpi_ModelInfluencer$Random$ModelInstancePool = $rt_classWithoutFields(cbgu_Pool),
cbgggpi_Influencer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent),
cbgggpi_DynamicsModifier = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_DynamicsModifier_TMP_V1 = null,
cbgggpi_DynamicsModifier_TMP_V2 = null,
cbgggpi_DynamicsModifier_TMP_V3 = null,
cbgggpi_DynamicsModifier_TMP_Q = null,
cbgggpi_DynamicsModifier_$callClinit = () => {
    cbgggpi_DynamicsModifier_$callClinit = $rt_eraseClinit(cbgggpi_DynamicsModifier);
    cbgggpi_DynamicsModifier__clinit_();
},
cbgggpi_DynamicsModifier__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    cbgggpi_DynamicsModifier_TMP_V1 = var$1;
    cbgggpi_DynamicsModifier_TMP_V2 = new cbgm_Vector3;
    cbgggpi_DynamicsModifier_TMP_V3 = new cbgm_Vector3;
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 1.0;
    cbgggpi_DynamicsModifier_TMP_Q = var$1;
},
cbgggpi_DynamicsModifier$FaceDirection = $rt_classWithoutFields(cbgggpi_DynamicsModifier),
cbgggpi_DynamicsInfluencer = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_RegionInfluencer$AspectTextureRegion = $rt_classWithoutFields(),
cbgggpi_DynamicsModifier$Strength = $rt_classWithoutFields(cbgggpi_DynamicsModifier),
cbgggpi_DynamicsModifier$CentripetalAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength),
cbgggpi_ParticleControllerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_ParticleControllerInfluencer$Random = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer),
cbgggpi_SimpleInfluencer = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_ScaleInfluencer = $rt_classWithoutFields(cbgggpi_SimpleInfluencer),
cbgggpi_RegionInfluencer = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_RegionInfluencer$Animated = $rt_classWithoutFields(cbgggpi_RegionInfluencer),
cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool = $rt_classWithoutFields(cbgu_Pool),
cbgggpi_SpawnInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
let cbgggpi_RegionInfluencer$Single = $rt_classWithoutFields(cbgggpi_RegionInfluencer),
cbgggpi_ParticleControllerFinalizerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_ModelInfluencer = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_ModelInfluencer$Random = $rt_classWithoutFields(cbgggpi_ModelInfluencer),
cbgggpi_DynamicsModifier$Angular = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength),
cbgggpi_DynamicsModifier$Rotational3D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular),
cbgggpi_DynamicsModifier$BrownianAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength),
cbgggpi_DynamicsModifier$PolarAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular),
cbgggpi_DynamicsModifier$Rotational2D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength),
cbgggpi_ParticleControllerInfluencer$Single = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer),
cbgggpi_ModelInfluencer$Single = $rt_classWithoutFields(cbgggpi_ModelInfluencer),
cbgggpi_ColorInfluencer = $rt_classWithoutFields(cbgggpi_Influencer),
cbgggpi_ColorInfluencer$Single = $rt_classWithoutFields(cbgggpi_ColorInfluencer),
cbgggpi_ColorInfluencer$Random = $rt_classWithoutFields(cbgggpi_ColorInfluencer),
cbgggpi_RegionInfluencer$Random = $rt_classWithoutFields(cbgggpi_RegionInfluencer),
cbgggpi_DynamicsModifier$TangentialAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular),
cbgggpr_ParticleControllerRenderer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent),
cbgggpr_ParticleControllerRenderData = $rt_classWithoutFields(),
cbgggpr_PointSpriteControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData),
cbgggpr_PointSpriteRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer),
cbgggpr_ModelInstanceRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer),
cbgggpr_ModelInstanceControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData),
cbgggpr_BillboardRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer),
cbgggpr_ParticleControllerControllerRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer),
cbgggpr_BillboardControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData),
jlr_AnnotatedElement = $rt_classWithoutFields(0),
jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    let a = this; jl_Object.call(a);
    a.$name = null;
    a.$simpleName = null;
    a.$platformClass = null;
    a.$declaredConstructors = null;
}
let jl_Class_reflectionInitialized = 0,
jl_Class__init_0 = ($this, $platformClass) => {
    let var$2;
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
},
jl_Class__init_ = var_0 => {
    let var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
},
jl_Class_getClass = $cls => {
    let $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null) {
        $result = new jl_Class;
        $result.$platformClass = $cls;
        $cls.classObject = $result;
    }
    return $result;
},
jl_Class_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = (!($this.$platformClass.$meta.flags & 2) ? 0 : 1) ? $rt_s(66) : !($this.$platformClass.$meta.primitive ? 1 : 0) ? $rt_s(67) : $rt_s(40);
    if ($this.$name === null)
        $this.$name = $rt_str($this.$platformClass.$meta.name);
    var$2 = $this.$name;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$1 = var$1;
    var$5 = var$5;
    jl_AbstractStringBuilder_insert(var$5, var$4, var$1);
    jl_AbstractStringBuilder_insert(var$5, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$1 = new jl_String;
    var$6 = var$3.$buffer;
    var$7 = var$6.data;
    var$8 = var$3.$length0;
    var$9 = var$7.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
jl_Class_getSimpleName = $this => {
    let $simpleName, var$2, var$3, var$4, var$5, var$6, $lastDot, $lastDollar, var$9;
    $simpleName = $this.$simpleName;
    if ($simpleName === null) {
        var$2 = $this.$platformClass.$meta.item === null ? 0 : 1;
        a: {
            if (var$2) {
                $simpleName = jl_Class_getSimpleName(jl_Class_getComponentType($this));
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                var$2 = var$3.$length0;
                var$4 = var$3;
                $simpleName = $simpleName === null ? $rt_s(1) : $simpleName;
                var$4 = var$4;
                jl_AbstractStringBuilder_insert(var$4, var$2, $simpleName);
                jl_AbstractStringBuilder_insert(var$4, var$3.$length0, $rt_s(54));
                $simpleName = new jl_String;
                var$5 = var$3.$buffer;
                var$6 = var$5.data;
                $lastDot = var$3.$length0;
                $lastDollar = var$6.length;
                if ($lastDot >= 0 && $lastDot <= ($lastDollar - 0 | 0)) {
                    $simpleName.$nativeString = $rt_charArrayToString(var$5.data, 0, $lastDot);
                    break a;
                }
                $simpleName = new jl_IndexOutOfBoundsException;
                $simpleName.$suppressionEnabled = 1;
                $simpleName.$writableStackTrace = 1;
                $rt_throw($simpleName);
            }
            var$9 = $this.$platformClass.$meta.enclosingClass;
            if (var$9 === null)
                $simpleName = null;
            else {
                $simpleName = var$9.classObject;
                if ($simpleName === null) {
                    $simpleName = new jl_Class;
                    $simpleName.$platformClass = var$9;
                    var$9.classObject = $simpleName;
                }
            }
            if ($simpleName !== null) {
                $simpleName = $rt_str($this.$platformClass.$meta.simpleName);
                if ($simpleName === null)
                    $simpleName = $rt_s(40);
            } else {
                $simpleName = $rt_str($this.$platformClass.$meta.name);
                $lastDollar = jl_String_lastIndexOf($simpleName, 36, $simpleName.$nativeString.length - 1 | 0);
                if ($lastDollar == (-1)) {
                    $lastDot = jl_String_lastIndexOf($simpleName, 46, $simpleName.$nativeString.length - 1 | 0);
                    if ($lastDot != (-1))
                        $simpleName = jl_String_substring($simpleName, $lastDot + 1 | 0, $simpleName.$nativeString.length);
                } else {
                    $simpleName = jl_String_substring($simpleName, $lastDollar + 1 | 0, $simpleName.$nativeString.length);
                    if (0 >= $simpleName.$nativeString.length) {
                        $simpleName = new jl_StringIndexOutOfBoundsException;
                        $simpleName.$suppressionEnabled = 1;
                        $simpleName.$writableStackTrace = 1;
                        $rt_throw($simpleName);
                    }
                    if ($simpleName.$nativeString.charCodeAt(0) >= 48) {
                        if (0 >= $simpleName.$nativeString.length) {
                            $simpleName = new jl_StringIndexOutOfBoundsException;
                            $simpleName.$suppressionEnabled = 1;
                            $simpleName.$writableStackTrace = 1;
                            $rt_throw($simpleName);
                        }
                        if ($simpleName.$nativeString.charCodeAt(0) <= 57)
                            $simpleName = $rt_s(40);
                    }
                }
            }
        }
        $this.$simpleName = $simpleName;
    }
    return $simpleName;
},
jl_Class_getComponentType = $this => {
    let var$1, var$2;
    var$1 = $this.$platformClass.$meta.item;
    if (var$1 === null)
        var$2 = null;
    else {
        var$2 = var$1.classObject;
        if (var$2 === null) {
            var$2 = new jl_Class;
            var$2.$platformClass = var$1;
            var$1.classObject = var$2;
        }
    }
    return var$2;
},
jl_Class_createMetadata = () => {
    cbggg_GlyphLayout$GlyphRun.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun__init_(obj );
                return null;
            }
        }, {
            name : "appendRun",
            modifiers : 0,
            accessLevel : 0,
            parameterTypes : [cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun_appendRun(obj , args[0]);
                return null;
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout$GlyphRun_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout$GlyphRun_toString(obj );
            }
        }];
    cbgssu_Table$DebugRect.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbgssu_Table$DebugRect__init_(obj );
                return null;
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbgssu_Table$DebugRect_$callClinit();
                cbgssu_Table$DebugRect__clinit_();
                return null;
            }
        }];
    cbggg_GlyphLayout.$meta.methods = [
        {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_2(obj );
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_0(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "<init>",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls, $rt_intcls, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls, jl_String],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout__init_1(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText1(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText0(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                return null;
            }
        }, {
            name : "setText",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls, $rt_intcls, cbgg_Color, $rt_floatcls, $rt_intcls, $rt_booleancls, jl_String],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_setText(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                return null;
            }
        }, {
            name : "calculateWidths",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_calculateWidths(obj , args[0]);
                return null;
            }
        }, {
            name : "alignRuns",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [$rt_floatcls, $rt_intcls],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_alignRuns(obj , jl_Float_floatValue(args[0]), jl_Integer_intValue(args[1]));
                return null;
            }
        }, {
            name : "truncate",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_floatcls, jl_String],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_truncate(obj , args[0], args[1], jl_Float_floatValue(args[2]), args[3]);
                return null;
            }
        }, {
            name : "wrap",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_intcls],
            returnType : cbggg_GlyphLayout$GlyphRun,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_wrap(obj , args[0], args[1], jl_Integer_intValue(args[2]));
            }
        }, {
            name : "setLastGlyphXAdvance",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_setLastGlyphXAdvance(obj , args[0], args[1]);
                return null;
            }
        }, {
            name : "getGlyphWidth",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbggg_BitmapFont$Glyph, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_getGlyphWidth(obj , args[0], args[1]);
            }
        }, {
            name : "getLineOffset",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [cbgu_Array, cbggg_BitmapFont$BitmapFontData],
            returnType : $rt_floatcls,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_getLineOffset(obj , args[0], args[1]);
            }
        }, {
            name : "parseColorMarkup",
            modifiers : 0,
            accessLevel : 1,
            parameterTypes : [jl_CharSequence, $rt_intcls, $rt_intcls],
            returnType : $rt_intcls,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_parseColorMarkup(obj , args[0], jl_Integer_intValue(args[1]), jl_Integer_intValue(args[2]));
            }
        }, {
            name : "reset",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_reset(obj );
                return null;
            }
        }, {
            name : "toString",
            modifiers : 0,
            accessLevel : 3,
            parameterTypes : [],
            returnType : jl_String,
            callable : function(obj, args) {
                return cbggg_GlyphLayout_toString(obj );
            }
        }, {
            name : "<clinit>",
            modifiers : 512,
            accessLevel : 0,
            parameterTypes : [],
            returnType : $rt_voidcls,
            callable : function(obj, args) {
                cbggg_GlyphLayout_$callClinit();
                cbggg_GlyphLayout__clinit_();
                return null;
            }
        }];
},
jl_Class_getDeclaredConstructors = $this => {
    let $jsMethods, $count, $i, var$4, $jsMethod, $jsParameterTypes, $j, var$8, $parameterTypes, var$10, var$11, var$12;
    if (!($this.$platformClass.$meta.primitive ? 1 : 0) && !($this.$platformClass.$meta.item === null ? 0 : 1)) {
        if ($this.$declaredConstructors === null) {
            if (!jl_Class_reflectionInitialized) {
                jl_Class_reflectionInitialized = 1;
                jl_Class_createMetadata();
            }
            $jsMethods = $this.$platformClass.$meta.methods;
            $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
            $count = 0;
            $i = 0;
            while ($i < $jsMethods.length) {
                var$4 = $jsMethods[$i];
                $jsMethod = var$4 === null ? null : !(var$4 instanceof $rt_objcls()) ? var$4 : !(var$4 instanceof otji_JSWrapper) ? var$4 : var$4.$js;
                $jsParameterTypes = $rt_str($jsMethod.name);
                if ($jsParameterTypes === $rt_s(68))
                    $j = 1;
                else if (!($rt_s(68) instanceof jl_String))
                    $j = 0;
                else {
                    var$8 = $rt_s(68);
                    $j = $jsParameterTypes.$nativeString !== var$8.$nativeString ? 0 : 1;
                }
                if ($j) {
                    $jsParameterTypes = $jsMethod.parameterTypes;
                    $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                    var$10 = $parameterTypes.data;
                    $j = 0;
                    var$11 = var$10.length;
                    while ($j < var$11) {
                        var$8 = $jsParameterTypes[$j];
                        if (var$8 === null)
                            var$4 = null;
                        else {
                            var$4 = var$8.classObject;
                            if (var$4 === null) {
                                var$4 = new jl_Class;
                                var$4.$platformClass = var$8;
                                var$8.classObject = var$4;
                            }
                        }
                        var$10[$j] = var$4;
                        $j = $j + 1 | 0;
                    }
                    var$10 = $this.$declaredConstructors.data;
                    $j = $count + 1 | 0;
                    var$4 = new jlr_Constructor;
                    $jsParameterTypes = $rt_str($jsMethod.name);
                    var$11 = $jsMethod.modifiers;
                    var$12 = $jsMethod.accessLevel;
                    $jsMethod = otji_JS_functionAsObject($jsMethod.callable, "call");
                    var$4.$declaringClass = $this;
                    var$4.$name4 = $jsParameterTypes;
                    var$4.$modifiers = var$11;
                    var$4.$accessLevel = var$12;
                    var$4.$parameterTypes = $parameterTypes;
                    var$4.$callable = $jsMethod;
                    var$10[$count] = var$4;
                    $count = $j;
                }
                $i = $i + 1 | 0;
            }
            $parameterTypes = $this.$declaredConstructors;
            $jsMethods = $parameterTypes.constructor;
            if ($jsMethods === null)
                var$4 = null;
            else {
                var$4 = $jsMethods.classObject;
                if (var$4 === null) {
                    var$4 = new jl_Class;
                    var$4.$platformClass = $jsMethods;
                    $jsMethods.classObject = var$4;
                }
            }
            $jsMethods = jl_Class_getComponentType(var$4);
            if ($jsMethods === null) {
                var$4 = new jl_NullPointerException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                $rt_throw(var$4);
            }
            if ($jsMethods === $rt_cls($rt_voidcls)) {
                var$4 = new jl_IllegalArgumentException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                $rt_throw(var$4);
            }
            if ($count < 0) {
                var$4 = new jl_NegativeArraySizeException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                $rt_throw(var$4);
            }
            var$10 = $parameterTypes.data;
            $parameterTypes = jlr_Array_newInstanceImpl($jsMethods.$platformClass, $count);
            $i = var$10.length;
            if ($count < $i)
                $i = $count;
            $count = 0;
            while ($count < $i) {
                $parameterTypes.data[$count] = var$10[$count];
                $count = $count + 1 | 0;
            }
            $this.$declaredConstructors = $parameterTypes;
        }
        return $this.$declaredConstructors.$clone0();
    }
    return $rt_createArray(jlr_Constructor, 0);
},
jl_Class_getConstructors = $this => {
    let $declaredConstructors, var$2, $constructors, var$4, $sz, var$6, $constructor, var$8, var$9;
    $declaredConstructors = (jl_Class_getDeclaredConstructors($this)).data;
    var$2 = $declaredConstructors.length;
    $constructors = $rt_createArray(jlr_Constructor, var$2);
    var$4 = $constructors.data;
    $sz = 0;
    var$6 = 0;
    while (var$6 < var$2) {
        $constructor = $declaredConstructors[var$6];
        if (!(otcir_Flags_getModifiers($constructor.$modifiers, $constructor.$accessLevel) & 1) ? 0 : 1) {
            var$8 = $sz + 1 | 0;
            var$4[$sz] = $constructor;
            $sz = var$8;
        }
        var$6 = var$6 + 1 | 0;
    }
    var$2 = var$4.length;
    var$8 = $rt_compare($sz, var$2);
    if (var$8 < 0) {
        var$9 = $constructors.constructor;
        if (var$9 === null)
            $constructor = null;
        else {
            $constructor = var$9.classObject;
            if ($constructor === null) {
                $constructor = new jl_Class;
                $constructor.$platformClass = var$9;
                var$9.classObject = $constructor;
            }
        }
        var$9 = jl_Class_getComponentType($constructor);
        if (var$9 === null) {
            $constructor = new jl_NullPointerException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        if (var$9 === $rt_cls($rt_voidcls)) {
            $constructor = new jl_IllegalArgumentException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        if ($sz < 0) {
            $constructor = new jl_NegativeArraySizeException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        $declaredConstructors = jlr_Array_newInstanceImpl(var$9.$platformClass, $sz);
        if (var$8 < 0)
            var$2 = $sz;
        $sz = 0;
        while ($sz < var$2) {
            $declaredConstructors.data[$sz] = var$4[$sz];
            $sz = $sz + 1 | 0;
        }
        $constructors = $declaredConstructors;
    }
    return $constructors;
},
jl_Class_getDeclaredConstructor = ($this, $parameterTypes) => {
    let var$2, var$3, var$4, $constructor;
    var$2 = (jl_Class_getDeclaredConstructors($this)).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            $constructor = new jl_NoSuchMethodException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        $constructor = var$2[var$4];
        if (ju_Arrays_equals($constructor.$parameterTypes.$clone0(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
},
jl_Class_getConstructor = ($this, $parameterTypes) => {
    let var$2, var$3, var$4, $constructor, var$6;
    var$2 = (jl_Class_getDeclaredConstructors($this)).data;
    var$3 = var$2.length;
    var$4 = 0;
    while (true) {
        if (var$4 >= var$3) {
            $constructor = new jl_NoSuchMethodException;
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $rt_throw($constructor);
        }
        $constructor = var$2[var$4];
        var$6 = !(otcir_Flags_getModifiers($constructor.$modifiers, $constructor.$accessLevel) & 1) ? 0 : 1;
        if (var$6 && ju_Arrays_equals($constructor.$parameterTypes.$clone0(), $parameterTypes))
            break;
        var$4 = var$4 + 1 | 0;
    }
    return $constructor;
},
otji_JS = $rt_classWithoutFields(),
otji_JS_wrap = $array => {
    let var$2, $result, $i, var$5;
    if ($array === null)
        return null;
    $array = $array.data;
    var$2 = $array.length;
    $result = new Array(var$2);
    $i = 0;
    while ($i < var$2) {
        var$5 = $array[$i];
        $result[$i] = var$5;
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_function = (var$1, var$2) => {
    let name = 'jso$functor$' + var$2;
    let result = var$1[name];
    if (typeof result !== 'function') {
        let fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        result = () => fn;
        var$1[name] = result;
    }
    return result();
},
otji_JS_functionAsObject = (var$1, var$2) => {
    if (typeof var$1 !== 'function') return var$1;
    let result = {  };
    result[var$2] = var$1;
    return result;
},
otp_Platform = $rt_classWithoutFields(),
otp_Platform_clone = var$1 => {
    let copy = new var$1.constructor();
    for (let field in var$1) {
        if (var$1.hasOwnProperty(field)) {
            copy[field] = var$1[field];
        }
    }
    return copy;
},
otp_Platform_isAssignable = (var$1, var$2) => {
    let $supertypes, $i;
    if (var$1 === var$2)
        return 1;
    $supertypes = var$1.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], var$2))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
otp_Platform_startThread = var$1 => {
    setTimeout(() => {
        $rt_threadStarter(otp_Platform_launchThread)(var$1);
    }, 0);
},
otp_Platform_launchThread = var$1 => {
    var$1.$run();
},
otp_Platform_schedule = (var$1, var$2) => {
    setTimeout(() => {
        otp_Platform_launchThread(var$1);
    }, var$2);
},
otp_Platform_getName = var$1 => {
    return $rt_str(var$1.$meta.name);
},
otp_Platform_createQueueJs$js_body$_30 = () => {
    return [];
};
function jl_Throwable() {
    let a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
let jl_Throwable__init_ = $this => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
},
jl_Throwable__init_2 = () => {
    let var_0 = new jl_Throwable();
    jl_Throwable__init_(var_0);
    return var_0;
},
jl_Throwable__init_0 = ($this, $message) => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
},
jl_Throwable__init_1 = var_0 => {
    let var_1 = new jl_Throwable();
    jl_Throwable__init_0(var_1, var_0);
    return var_1;
},
jl_Throwable_fillInStackTrace = $this => {
    return $this;
},
jl_Throwable_getMessage = $this => {
    return $this.$message;
},
jl_Throwable_getLocalizedMessage = $this => {
    return $this.$getMessage();
},
jl_Throwable_getCause = $this => {
    let var$1;
    var$1 = $this.$cause;
    if (var$1 === $this)
        var$1 = null;
    return var$1;
},
jl_Throwable_printStackTrace0 = $this => {
    let var$1, var$2, var$3;
    if (jl_System_errCache === null) {
        var$1 = new otcic_JSStderrPrintStream;
        var$2 = null;
        var$3 = null;
        var$1.$out = var$2;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$1.$sb = var$2;
        var$1.$buffer1 = $rt_createCharArray(32);
        var$1.$autoFlush = 0;
        var$1.$charset = var$3;
        jl_System_errCache = var$1;
    }
    jl_Throwable_printStackTrace($this, jl_System_errCache);
},
jl_Throwable_printStackTrace = ($this, $stream) => {
    let var$2, var$3, $message, var$5, $element, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.constructor;
    if (var$2 === null)
        var$3 = null;
    else {
        var$3 = var$2.classObject;
        if (var$3 === null) {
            var$3 = new jl_Class;
            var$3.$platformClass = var$2;
            var$2.classObject = var$3;
        }
    }
    if (var$3.$name === null)
        var$3.$name = $rt_str(var$3.$platformClass.$meta.name);
    var$2 = var$3.$name;
    if (var$2 === null)
        var$2 = $rt_s(1);
    $rt_putStderr($rt_ustr(var$2));
    $message = $this.$getMessage();
    if ($message !== null) {
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$5 = var$2.$length0;
        var$3 = var$2;
        $element = $rt_s(69);
        var$7 = var$3;
        jl_AbstractStringBuilder_insert(var$7, var$5, $element);
        jl_AbstractStringBuilder_insert(var$7, var$2.$length0, $message);
        var$7 = new jl_String;
        var$8 = var$2.$buffer;
        var$9 = var$8.data;
        var$10 = var$2.$length0;
        var$11 = var$9.length;
        if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
            var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
            $rt_putStderr($rt_ustr(var$7));
        } else {
            $stream = new jl_IndexOutOfBoundsException;
            $stream.$suppressionEnabled = 1;
            $stream.$writableStackTrace = 1;
            $rt_throw($stream);
        }
    }
    a: {
        $rt_putStderr("\n");
        var$8 = $this.$stackTrace;
        if (var$8 !== null) {
            var$8 = var$8.data;
            var$5 = var$8.length;
            var$10 = 0;
            while (true) {
                if (var$10 >= var$5)
                    break a;
                $element = var$8[var$10];
                $rt_putStderr("\tat ");
                var$2 = $rt_s(1);
                if ($element !== null)
                    var$2 = $element.$toString();
                if (var$2 === null)
                    var$2 = $rt_s(1);
                $rt_putStderr($rt_ustr(var$2));
                $rt_putStderr("\n");
                var$10 = var$10 + 1 | 0;
            }
        }
    }
    var$2 = $this.$cause;
    if (var$2 !== null && var$2 !== $this) {
        $rt_putStderr("Caused by: ");
        jl_Throwable_printStackTrace($this.$cause, $stream);
    }
},
jl_Exception = $rt_classWithoutFields(jl_Throwable),
jl_Exception__init_0 = $this => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
},
jl_Exception__init_2 = () => {
    let var_0 = new jl_Exception();
    jl_Exception__init_0(var_0);
    return var_0;
},
jl_Exception__init_1 = ($this, $message, $cause) => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $cause;
},
jl_Exception__init_4 = (var_0, var_1) => {
    let var_2 = new jl_Exception();
    jl_Exception__init_1(var_2, var_0, var_1);
    return var_2;
},
jl_Exception__init_ = ($this, $message) => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
},
jl_Exception__init_3 = var_0 => {
    let var_1 = new jl_Exception();
    jl_Exception__init_(var_1, var_0);
    return var_1;
},
jl_RuntimeException = $rt_classWithoutFields(jl_Exception),
jl_RuntimeException__init_ = $this => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
},
jl_RuntimeException__init_2 = () => {
    let var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_(var_0);
    return var_0;
},
jl_RuntimeException__init_0 = ($this, $message) => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
},
jl_RuntimeException__init_1 = var_0 => {
    let var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_0(var_1, var_0);
    return var_1;
},
jl_ClassCastException = $rt_classWithoutFields(jl_RuntimeException),
jl_CharSequence = $rt_classWithoutFields(0);
function jl_String() {
    jl_Object.call(this);
    this.$hashCode0 = 0;
}
let jl_String_EMPTY_CHARS = null,
jl_String_EMPTY = null,
jl_String_CASE_INSENSITIVE_ORDER = null,
jl_String__init_2 = ($this, $characters) => {
    $this.$nativeString = $rt_charArrayToString($characters.data, 0, $characters.data.length);
},
jl_String__init_4 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_2(var_1, var_0);
    return var_1;
},
jl_String__init_3 = (var$0, var$1) => {
    var$0.$nativeString = var$1;
},
jl_String__init_0 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_3(var_1, var_0);
    return var_1;
},
jl_String__init_1 = (var$0, var$1, $offset, $count) => {
    let var$4, var$5;
    var$4 = var$1.data.length;
    if ($offset >= 0 && $count >= 0 && $count <= (var$4 - $offset | 0)) {
        var$0.$nativeString = $rt_charArrayToString(var$1.data, $offset, $count);
        return;
    }
    var$5 = new jl_IndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    $rt_throw(var$5);
},
jl_String__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jl_String();
    jl_String__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
jl_String_length = $this => {
    return $this.$nativeString.length;
},
jl_String_getChars = ($this, $srcBegin, $srcEnd, $dst, $dstBegin) => {
    let var$5, var$6, var$7;
    if ($srcBegin >= 0 && $srcBegin <= $srcEnd && $srcEnd <= $this.$nativeString.length && $dstBegin >= 0) {
        var$5 = $dst.data;
        var$6 = $srcEnd - $srcBegin | 0;
        if (($dstBegin + var$6 | 0) <= var$5.length) {
            $rt_stringToCharArray($this.$nativeString, $srcBegin, $dst.data, $dstBegin, var$6);
            return;
        }
    }
    var$7 = new jl_IndexOutOfBoundsException;
    var$7.$suppressionEnabled = 1;
    var$7.$writableStackTrace = 1;
    $rt_throw(var$7);
},
jl_String_startsWith0 = ($this, $prefix, $toffset) => {
    let $i, var$4, var$5;
    if (($toffset + $prefix.$nativeString.length | 0) > $this.$nativeString.length)
        return 0;
    $i = 0;
    a: {
        b: {
            while ($i < $prefix.$nativeString.length) {
                if ($i < 0)
                    break a;
                if ($i >= $prefix.$nativeString.length)
                    break a;
                var$4 = $prefix.$nativeString.charCodeAt($i);
                var$5 = $toffset + 1 | 0;
                if ($toffset < 0)
                    break b;
                if ($toffset >= $this.$nativeString.length)
                    break b;
                if (var$4 != $this.$nativeString.charCodeAt($toffset))
                    return 0;
                $i = $i + 1 | 0;
                $toffset = var$5;
            }
            return 1;
        }
        $prefix = new jl_StringIndexOutOfBoundsException;
        $prefix.$suppressionEnabled = 1;
        $prefix.$writableStackTrace = 1;
        $rt_throw($prefix);
    }
    $prefix = new jl_StringIndexOutOfBoundsException;
    $prefix.$suppressionEnabled = 1;
    $prefix.$writableStackTrace = 1;
    $rt_throw($prefix);
},
jl_String_startsWith = ($this, $prefix) => {
    if ($this === $prefix)
        return 1;
    return jl_String_startsWith0($this, $prefix, 0);
},
jl_String_endsWith = ($this, $suffix) => {
    let $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$nativeString.length > $this.$nativeString.length)
        return 0;
    $j = 0;
    $i = $this.$nativeString.length - $suffix.$nativeString.length | 0;
    a: {
        b: {
            while ($i < $this.$nativeString.length) {
                if ($i < 0)
                    break a;
                if ($i >= $this.$nativeString.length)
                    break a;
                var$4 = $this.$nativeString.charCodeAt($i);
                var$5 = $j + 1 | 0;
                if ($j < 0)
                    break b;
                if ($j >= $suffix.$nativeString.length)
                    break b;
                if (var$4 != $suffix.$nativeString.charCodeAt($j))
                    return 0;
                $i = $i + 1 | 0;
                $j = var$5;
            }
            return 1;
        }
        $suffix = new jl_StringIndexOutOfBoundsException;
        $suffix.$suppressionEnabled = 1;
        $suffix.$writableStackTrace = 1;
        $rt_throw($suffix);
    }
    $suffix = new jl_StringIndexOutOfBoundsException;
    $suffix.$suppressionEnabled = 1;
    $suffix.$writableStackTrace = 1;
    $rt_throw($suffix);
},
jl_String_indexOf = ($this, $ch, $i) => {
    let $bmpChar, $hi, $lo;
    if (0 > $i)
        $i = 0;
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$nativeString.length)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = (55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535;
    $lo = (56320 | $ch & 1023) & 65535;
    while (true) {
        if ($i >= ($this.$nativeString.length - 1 | 0))
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $hi && $this.$nativeString.charCodeAt(($i + 1 | 0)) == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_indexOf1 = ($this, $ch) => {
    return jl_String_indexOf($this, $ch, 0);
},
jl_String_lastIndexOf = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo;
    $i = $this.$nativeString.length - 1 | 0;
    if ($fromIndex < $i)
        $i = $fromIndex;
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = (55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535;
    $lo = (56320 | $ch & 1023) & 65535;
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $lo) {
            $ch = $i - 1 | 0;
            if ($this.$nativeString.charCodeAt($ch) == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return $ch;
},
jl_String_indexOf0 = ($this, $str, $i) => {
    let $toIndex, $j, var$5, var$6;
    if (0 > $i)
        $i = 0;
    $toIndex = $this.$nativeString.length - $str.$nativeString.length | 0;
    a: {
        b: {
            c: while (true) {
                if ($i > $toIndex)
                    return (-1);
                $j = 0;
                while (true) {
                    if ($j >= $str.$nativeString.length)
                        break c;
                    var$5 = $i + $j | 0;
                    if (var$5 < 0)
                        break a;
                    if (var$5 >= $this.$nativeString.length)
                        break a;
                    var$6 = $this.$nativeString.charCodeAt(var$5);
                    if ($j < 0)
                        break b;
                    if ($j >= $str.$nativeString.length)
                        break b;
                    if (var$6 != $str.$nativeString.charCodeAt($j))
                        break;
                    $j = $j + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            return $i;
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
},
jl_String_indexOf2 = ($this, $str) => {
    return jl_String_indexOf0($this, $str, 0);
},
jl_String_lastIndexOf0 = ($this, $str, $fromIndex) => {
    let $i, $j, var$5;
    $i = $this.$nativeString.length - $str.$nativeString.length | 0;
    if ($fromIndex < $i)
        $i = $fromIndex;
    a: {
        b: {
            c: while (true) {
                if ($i < 0)
                    return (-1);
                $j = 0;
                while (true) {
                    if ($j >= $str.$nativeString.length)
                        break c;
                    var$5 = $i + $j | 0;
                    if (var$5 < 0)
                        break a;
                    if (var$5 >= $this.$nativeString.length)
                        break a;
                    var$5 = $this.$nativeString.charCodeAt(var$5);
                    if ($j < 0)
                        break b;
                    if ($j >= $str.$nativeString.length)
                        break b;
                    if (var$5 != $str.$nativeString.charCodeAt($j))
                        break;
                    $j = $j + 1 | 0;
                }
                $i = $i + (-1) | 0;
            }
            return $i;
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
},
jl_String_substring = ($this, $beginIndex, $endIndex) => {
    let $length, var$4, var$5;
    $length = $this.$nativeString.length;
    var$4 = $rt_compare($beginIndex, $endIndex);
    if (!var$4)
        return jl_String_EMPTY;
    if (!$beginIndex && $endIndex == $length)
        return $this;
    if ($beginIndex >= 0 && var$4 <= 0 && $endIndex <= $length)
        return jl_String__init_0($this.$nativeString.substring($beginIndex, $endIndex));
    var$5 = new jl_StringIndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    $rt_throw(var$5);
},
jl_String_substring0 = ($this, $beginIndex) => {
    return jl_String_substring($this, $beginIndex, $this.$nativeString.length);
},
jl_String_contains = ($this, $s) => {
    let $i, $sz, $j, var$5, var$6;
    $i = $this.$nativeString.length;
    $s = $s;
    $sz = $i - $s.$nativeString.length | 0;
    $i = 0;
    a: {
        b: {
            while ($i <= $sz) {
                $j = 0;
                while (true) {
                    if ($j >= $s.$nativeString.length)
                        return 1;
                    var$5 = $i + $j | 0;
                    if (var$5 < 0)
                        break a;
                    if (var$5 >= $this.$nativeString.length)
                        break a;
                    var$6 = $this.$nativeString.charCodeAt(var$5);
                    if ($j < 0)
                        break b;
                    if ($j >= $s.$nativeString.length)
                        break b;
                    if (var$6 != $s.$nativeString.charCodeAt($j))
                        break;
                    $j = $j + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            return 0;
        }
        $s = new jl_StringIndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    $s = new jl_StringIndexOutOfBoundsException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $rt_throw($s);
},
jl_String_replace = ($this, $target, $replacement) => {
    let var$3, $sb, $i, var$6, var$7, var$8, $j, $sz, var$11, var$12;
    if ($target === $replacement)
        return $this;
    var$3 = $target;
    if (var$3.$nativeString.length ? 0 : 1) {
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(16);
        $i = 0;
        $target = $sb;
        var$6 = $target;
        while (true) {
            if ($i >= $this.$nativeString.length) {
                jl_AbstractStringBuilder_insert(var$6, $sb.$length0, $replacement === null ? $rt_s(1) : $replacement);
                $target = new jl_String;
                var$7 = $sb.$buffer;
                var$8 = var$7.data;
                $i = $sb.$length0;
                $j = var$8.length;
                if ($i >= 0 && $i <= ($j - 0 | 0)) {
                    $target.$nativeString = $rt_charArrayToString(var$7.data, 0, $i);
                    return $target;
                }
                $target = new jl_IndexOutOfBoundsException;
                $target.$suppressionEnabled = 1;
                $target.$writableStackTrace = 1;
                $rt_throw($target);
            }
            jl_AbstractStringBuilder_insert(var$6, $sb.$length0, $replacement === null ? $rt_s(1) : $replacement);
            if ($i < 0)
                break;
            if ($i >= $this.$nativeString.length)
                break;
            $j = $this.$nativeString.charCodeAt($i);
            $sz = $sb.$length0;
            jl_AbstractStringBuilder_insertSpace($target, $sz, $sz + 1 | 0);
            $target.$buffer.data[$sz] = $j;
            $i = $i + 1 | 0;
        }
        $target = new jl_StringIndexOutOfBoundsException;
        $target.$suppressionEnabled = 1;
        $target.$writableStackTrace = 1;
        $rt_throw($target);
    }
    if (var$3.$nativeString.length == 1) {
        $target = $replacement;
        if ($target.$nativeString.length == 1) {
            if (0 >= var$3.$nativeString.length) {
                $target = new jl_StringIndexOutOfBoundsException;
                $target.$suppressionEnabled = 1;
                $target.$writableStackTrace = 1;
                $rt_throw($target);
            }
            $j = var$3.$nativeString.charCodeAt(0);
            if (0 >= $target.$nativeString.length) {
                $target = new jl_StringIndexOutOfBoundsException;
                $target.$suppressionEnabled = 1;
                $target.$writableStackTrace = 1;
                $rt_throw($target);
            }
            a: {
                b: {
                    var$11 = $target.$nativeString.charCodeAt(0);
                    if ($j != var$11) {
                        var$7 = $rt_createCharArray($this.$nativeString.length);
                        var$8 = var$7.data;
                        $sz = 0;
                        while ($sz < $this.$nativeString.length) {
                            if ($sz < 0)
                                break a;
                            if ($sz >= $this.$nativeString.length)
                                break a;
                            if ($this.$nativeString.charCodeAt($sz) == $j)
                                $i = var$11;
                            else {
                                if ($sz < 0)
                                    break b;
                                if ($sz >= $this.$nativeString.length)
                                    break b;
                                $i = $this.$nativeString.charCodeAt($sz);
                            }
                            var$8[$sz] = $i;
                            $sz = $sz + 1 | 0;
                        }
                        $this = new jl_String;
                        $this.$nativeString = "";
                        $this.$nativeString = $rt_fullArrayToString(var$7.data);
                    }
                    return $this;
                }
                $target = new jl_StringIndexOutOfBoundsException;
                $target.$suppressionEnabled = 1;
                $target.$writableStackTrace = 1;
                $rt_throw($target);
            }
            $target = new jl_StringIndexOutOfBoundsException;
            $target.$suppressionEnabled = 1;
            $target.$writableStackTrace = 1;
            $rt_throw($target);
        }
    }
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(16);
    $sz = $this.$nativeString.length - var$3.$nativeString.length | 0;
    $i = 0;
    var$6 = $sb;
    $target = var$6;
    c: {
        d: {
            e: while (true) {
                if ($i > $sz) {
                    $replacement = jl_String_substring($this, $i, $this.$nativeString.length);
                    jl_AbstractStringBuilder_insert($target, $sb.$length0, $replacement === null ? $rt_s(1) : $replacement);
                    $target = new jl_String;
                    var$7 = $sb.$buffer;
                    var$8 = var$7.data;
                    $i = $sb.$length0;
                    $j = var$8.length;
                    if ($i >= 0 && $i <= ($j - 0 | 0)) {
                        $target.$nativeString = $rt_charArrayToString(var$7.data, 0, $i);
                        return $target;
                    }
                    $target = new jl_IndexOutOfBoundsException;
                    $target.$suppressionEnabled = 1;
                    $target.$writableStackTrace = 1;
                    $rt_throw($target);
                }
                $j = 0;
                f: {
                    while ($j < var$3.$nativeString.length) {
                        var$11 = $i + $j | 0;
                        if (var$11 < 0)
                            break d;
                        if (var$11 >= $this.$nativeString.length)
                            break d;
                        var$12 = $this.$nativeString.charCodeAt(var$11);
                        if ($j < 0)
                            break e;
                        if ($j >= var$3.$nativeString.length)
                            break e;
                        if (var$12 != var$3.$nativeString.charCodeAt($j)) {
                            if ($i < 0)
                                break c;
                            if ($i >= $this.$nativeString.length)
                                break c;
                            var$11 = $this.$nativeString.charCodeAt($i);
                            $j = $sb.$length0;
                            jl_AbstractStringBuilder_insertSpace(var$6, $j, $j + 1 | 0);
                            var$6.$buffer.data[$j] = var$11;
                            break f;
                        }
                        $j = $j + 1 | 0;
                    }
                    jl_AbstractStringBuilder_insert($target, $sb.$length0, $replacement === null ? $rt_s(1) : $replacement);
                    $i = $i + (var$3.$nativeString.length - 1 | 0) | 0;
                }
                $i = $i + 1 | 0;
            }
            $target = new jl_StringIndexOutOfBoundsException;
            $target.$suppressionEnabled = 1;
            $target.$writableStackTrace = 1;
            $rt_throw($target);
        }
        $target = new jl_StringIndexOutOfBoundsException;
        $target.$suppressionEnabled = 1;
        $target.$writableStackTrace = 1;
        $rt_throw($target);
    }
    $target = new jl_StringIndexOutOfBoundsException;
    $target.$suppressionEnabled = 1;
    $target.$writableStackTrace = 1;
    $rt_throw($target);
},
jl_String_trim = $this => {
    let $lower, $upper, var$3;
    $lower = 0;
    $upper = $this.$nativeString.length - 1 | 0;
    a: {
        while (true) {
            if ($lower > $upper)
                break a;
            if ($lower < 0)
                break;
            if ($lower >= $this.$nativeString.length)
                break;
            if ($this.$nativeString.charCodeAt($lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
        var$3 = new jl_StringIndexOutOfBoundsException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    b: {
        while ($lower <= $upper) {
            if ($upper < 0)
                break b;
            if ($upper >= $this.$nativeString.length)
                break b;
            if ($this.$nativeString.charCodeAt($upper) > 32)
                break;
            $upper = $upper + (-1) | 0;
        }
        return jl_String_substring($this, $lower, $upper + 1 | 0);
    }
    var$3 = new jl_StringIndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    $rt_throw(var$3);
},
jl_String_toString = $this => {
    return $this;
},
jl_String_equals = ($this, $other) => {
    let $str;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    return $this.$nativeString !== $str.$nativeString ? 0 : 1;
},
jl_String_hashCode = $this => {
    let $i;
    a: {
        if (!$this.$hashCode0) {
            $i = 0;
            while (true) {
                if ($i >= $this.$nativeString.length)
                    break a;
                $this.$hashCode0 = (31 * $this.$hashCode0 | 0) + $this.$nativeString.charCodeAt($i) | 0;
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$hashCode0;
},
jl_String_split = ($this, $regex, $limit) => {
    return jur_Pattern_split(jur_Pattern_compile($regex, 0), $this, $limit);
},
jl_String_replaceAll = ($this, $regex, $replacement) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    var$3 = jur_Matcher__init_(jur_Pattern_compile($regex, 0), $this);
    $regex = new jl_StringBuffer;
    $regex.$buffer = $rt_createCharArray(16);
    var$3.$leftBound0 = 0;
    var$4 = var$3.$string0.$nativeString.length;
    var$3.$rightBound0 = var$4;
    var$5 = var$3.$matchResult;
    var$6 = var$3.$string0;
    var$7 = var$3.$leftBound0;
    var$5.$valid = 0;
    var$5.$mode0 = 2;
    var$8 = var$5.$groupBounds.data;
    var$9 = 0;
    var$10 = var$8.length;
    if (var$9 > var$10) {
        $regex = new jl_IllegalArgumentException;
        jl_Throwable__init_($regex);
        $rt_throw($regex);
    }
    while (var$9 < var$10) {
        var$11 = var$9 + 1 | 0;
        var$8[var$9] = (-1);
        var$9 = var$11;
    }
    var$8 = var$5.$consumers.data;
    var$9 = 0;
    var$10 = var$8.length;
    if (var$9 > var$10) {
        $regex = new jl_IllegalArgumentException;
        jl_Throwable__init_($regex);
        $rt_throw($regex);
    }
    while (var$9 < var$10) {
        var$11 = var$9 + 1 | 0;
        var$8[var$9] = (-1);
        var$9 = var$11;
    }
    if (var$6 !== null)
        var$5.$string2 = var$6;
    if (var$7 >= 0) {
        var$5.$leftBound = var$7;
        var$5.$rightBound = var$4;
    }
    var$5.$startIndex = var$5.$leftBound;
    var$3.$appendPos = 0;
    var$3.$replacement0 = null;
    var$5.$previousMatch = (-1);
    var$6 = $regex;
    while (true) {
        if (!jur_Matcher_find(var$3)) {
            $replacement = var$3.$string0;
            var$7 = var$3.$appendPos;
            $replacement = $replacement;
            var$5 = jl_String_substring($replacement, var$7, $replacement.$nativeString.length);
            var$9 = var$5.$nativeString.length;
            var$12 = var$6.$length0;
            jl_StringBuffer_insert0(var$6, var$12, var$5, 0, var$9);
            $replacement = new jl_String;
            var$8 = $regex.$buffer;
            var$13 = var$8.data;
            var$12 = $regex.$length0;
            var$9 = var$13.length;
            if (var$12 >= 0 && var$12 <= (var$9 - 0 | 0)) {
                $replacement.$nativeString = $rt_charArrayToString(var$8.data, 0, var$12);
                return $replacement;
            }
            $regex = new jl_IndexOutOfBoundsException;
            $regex.$suppressionEnabled = 1;
            $regex.$writableStackTrace = 1;
            $rt_throw($regex);
        }
        var$3.$processedRepl = jur_Matcher_processReplacement(var$3, $replacement);
        var$5 = var$3.$string0;
        var$7 = var$3.$appendPos;
        var$14 = var$3.$matchResult;
        if (!var$14.$valid) {
            $regex = new jl_IllegalStateException;
            jl_Exception__init_0($regex);
            $rt_throw($regex);
        }
        if (0 >= var$14.$groupCount) {
            $regex = new jl_IndexOutOfBoundsException;
            $replacement = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($replacement);
            jl_AbstractStringBuilder_append0($replacement, 0);
            var$5 = new jl_String;
            var$8 = $replacement.$buffer;
            var$13 = var$8.data;
            var$12 = $replacement.$length0;
            var$9 = var$13.length;
            if (var$12 >= 0 && var$12 <= (var$9 - 0 | 0)) {
                var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, var$12);
                $regex.$suppressionEnabled = 1;
                $regex.$writableStackTrace = 1;
                $regex.$message = var$5;
                $rt_throw($regex);
            }
            $regex = new jl_IndexOutOfBoundsException;
            $regex.$suppressionEnabled = 1;
            $regex.$writableStackTrace = 1;
            $rt_throw($regex);
        }
        var$9 = var$14.$groupBounds.data[0];
        var$14 = jl_String_substring(var$5, var$7, var$9);
        var$11 = var$14.$nativeString.length;
        var$9 = var$6.$length0;
        jl_StringBuffer_insert0(var$6, var$9, var$14, 0, var$11);
        var$5 = var$3.$processedRepl;
        jl_AbstractStringBuilder_insert(var$6, $regex.$length0, var$5);
        var$5 = var$3.$matchResult;
        if (!var$5.$valid)
            break;
        if (0 >= var$5.$groupCount) {
            $regex = new jl_IndexOutOfBoundsException;
            $replacement = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($replacement);
            jl_AbstractStringBuilder_append0($replacement, 0);
            var$5 = new jl_String;
            var$8 = $replacement.$buffer;
            var$13 = var$8.data;
            var$12 = $replacement.$length0;
            var$9 = var$13.length;
            if (var$12 >= 0 && var$12 <= (var$9 - 0 | 0)) {
                var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, var$12);
                $regex.$suppressionEnabled = 1;
                $regex.$writableStackTrace = 1;
                $regex.$message = var$5;
                $rt_throw($regex);
            }
            $regex = new jl_IndexOutOfBoundsException;
            $regex.$suppressionEnabled = 1;
            $regex.$writableStackTrace = 1;
            $rt_throw($regex);
        }
        var$3.$appendPos = var$5.$groupBounds.data[1];
    }
    $regex = new jl_IllegalStateException;
    jl_Exception__init_0($regex);
    $rt_throw($regex);
},
jl_String__clinit_ = () => {
    let var$1;
    jl_String_EMPTY_CHARS = $rt_createCharArray(0);
    var$1 = new jl_String;
    var$1.$nativeString = "";
    jl_String_EMPTY = var$1;
    jl_String_CASE_INSENSITIVE_ORDER = new jl_String$_clinit_$lambda$_115_0;
},
jl_Number = $rt_classWithoutFields();
function jl_Integer() {
    jl_Number.call(this);
    this.$value = 0;
}
let jl_Integer_TYPE = null,
jl_Integer_integerCache = null,
jl_Integer_parseInt0 = ($s, $radix) => {
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$nativeString.length, $radix);
    $s = new jl_NumberFormatException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $s.$message = $rt_s(70);
    $rt_throw($s);
},
jl_Integer_parseIntImpl = ($s, $beginIndex, $endIndex, $radix) => {
    let $negative, var$6, $digit, $value, $maxValue, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
    if ($beginIndex == $endIndex) {
        $s = new jl_NumberFormatException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $s.$message = $rt_s(71);
        $rt_throw($s);
    }
    if ($radix >= 2 && $radix <= 36) {
        $negative = 0;
        var$6 = $s;
        if ($beginIndex >= 0 && $beginIndex < var$6.$nativeString.length) {
            a: {
                switch (var$6.$nativeString.charCodeAt($beginIndex)) {
                    case 43:
                        $digit = $beginIndex + 1 | 0;
                        break a;
                    case 45:
                        $negative = 1;
                        $digit = $beginIndex + 1 | 0;
                        break a;
                    default:
                }
                $digit = $beginIndex;
            }
            $value = 0;
            $maxValue = 1 + (2147483647 / $radix | 0) | 0;
            if ($digit == $endIndex) {
                $s = new jl_NumberFormatException;
                $s.$suppressionEnabled = 1;
                $s.$writableStackTrace = 1;
                $rt_throw($s);
            }
            b: {
                while ($digit < $endIndex) {
                    var$10 = $digit + 1 | 0;
                    if ($digit < 0)
                        break b;
                    if ($digit >= var$6.$nativeString.length)
                        break b;
                    $digit = jl_Integer_decodeDigit(var$6.$nativeString.charCodeAt($digit));
                    if ($digit < 0) {
                        $s = new jl_NumberFormatException;
                        var$6 = jl_String_substring(var$6, $beginIndex, $endIndex);
                        var$11 = var$6 === null ? $rt_s(1) : var$6;
                        var$6 = new jl_StringBuilder;
                        var$6.$buffer = $rt_createCharArray(16);
                        $beginIndex = var$6.$length0;
                        var$12 = var$6;
                        var$13 = $rt_s(72);
                        var$12 = var$12;
                        jl_AbstractStringBuilder_insert(var$12, $beginIndex, var$13);
                        jl_AbstractStringBuilder_insert(var$12, var$6.$length0, var$11 === null ? $rt_s(1) : var$11);
                        var$13 = new jl_String;
                        var$14 = var$6.$buffer;
                        var$15 = var$14.data;
                        $endIndex = var$6.$length0;
                        $radix = var$15.length;
                        if ($endIndex >= 0 && $endIndex <= ($radix - 0 | 0)) {
                            var$13.$nativeString = $rt_charArrayToString(var$14.data, 0, $endIndex);
                            $s.$suppressionEnabled = 1;
                            $s.$writableStackTrace = 1;
                            $s.$message = var$13;
                            $rt_throw($s);
                        }
                        $s = new jl_IndexOutOfBoundsException;
                        $s.$suppressionEnabled = 1;
                        $s.$writableStackTrace = 1;
                        $rt_throw($s);
                    }
                    if ($digit >= $radix) {
                        $s = new jl_NumberFormatException;
                        var$6 = jl_String_substring(var$6, $beginIndex, $endIndex);
                        var$11 = var$6 === null ? $rt_s(1) : var$6;
                        var$6 = new jl_StringBuilder;
                        var$6.$buffer = $rt_createCharArray(16);
                        $beginIndex = var$6.$length0;
                        var$12 = var$6;
                        var$16 = $rt_s(73);
                        var$13 = var$12;
                        jl_AbstractStringBuilder_insert(var$13, $beginIndex, var$16);
                        jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $radix, 10);
                        jl_AbstractStringBuilder_insert(var$13, var$6.$length0, $rt_s(69));
                        jl_AbstractStringBuilder_insert(var$13, var$6.$length0, var$11 === null ? $rt_s(1) : var$11);
                        var$13 = new jl_String;
                        var$14 = var$6.$buffer;
                        var$15 = var$14.data;
                        $endIndex = var$6.$length0;
                        $radix = var$15.length;
                        if ($endIndex >= 0 && $endIndex <= ($radix - 0 | 0)) {
                            var$13.$nativeString = $rt_charArrayToString(var$14.data, 0, $endIndex);
                            $s.$suppressionEnabled = 1;
                            $s.$writableStackTrace = 1;
                            $s.$message = var$13;
                            $rt_throw($s);
                        }
                        $s = new jl_IndexOutOfBoundsException;
                        $s.$suppressionEnabled = 1;
                        $s.$writableStackTrace = 1;
                        $rt_throw($s);
                    }
                    if ($value > $maxValue) {
                        $s = new jl_NumberFormatException;
                        $s.$suppressionEnabled = 1;
                        $s.$writableStackTrace = 1;
                        $s.$message = $rt_s(74);
                        $rt_throw($s);
                    }
                    $value = $rt_imul($radix, $value) + $digit | 0;
                    if ($value < 0) {
                        if (var$10 == $endIndex && $value == (-2147483648) && $negative)
                            return (-2147483648);
                        $s = new jl_NumberFormatException;
                        var$6 = jl_String_substring(var$6, $beginIndex, $endIndex);
                        var$11 = var$6 === null ? $rt_s(1) : var$6;
                        var$6 = new jl_StringBuilder;
                        var$6.$buffer = $rt_createCharArray(16);
                        $beginIndex = var$6.$length0;
                        var$12 = var$6;
                        var$13 = $rt_s(75);
                        var$12 = var$12;
                        jl_AbstractStringBuilder_insert(var$12, $beginIndex, var$13);
                        jl_AbstractStringBuilder_insert(var$12, var$6.$length0, var$11 === null ? $rt_s(1) : var$11);
                        var$13 = new jl_String;
                        var$14 = var$6.$buffer;
                        var$15 = var$14.data;
                        $endIndex = var$6.$length0;
                        $radix = var$15.length;
                        if ($endIndex >= 0 && $endIndex <= ($radix - 0 | 0)) {
                            var$13.$nativeString = $rt_charArrayToString(var$14.data, 0, $endIndex);
                            $s.$suppressionEnabled = 1;
                            $s.$writableStackTrace = 1;
                            $s.$message = var$13;
                            $rt_throw($s);
                        }
                        $s = new jl_IndexOutOfBoundsException;
                        $s.$suppressionEnabled = 1;
                        $s.$writableStackTrace = 1;
                        $rt_throw($s);
                    }
                    $digit = var$10;
                }
                if ($negative)
                    $value =  -$value | 0;
                return $value;
            }
            $s = new jl_StringIndexOutOfBoundsException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $rt_throw($s);
        }
        $s = new jl_StringIndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    $s = new jl_NumberFormatException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $beginIndex = var$6.$length0;
    var$12 = var$6;
    var$11 = $rt_s(76);
    jl_AbstractStringBuilder_insert(var$12, $beginIndex, var$11);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $radix, 10);
    var$13 = new jl_String;
    var$14 = var$6.$buffer;
    var$15 = var$14.data;
    $endIndex = var$6.$length0;
    $radix = var$15.length;
    if ($endIndex >= 0 && $endIndex <= ($radix - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$14.data, 0, $endIndex);
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $s.$message = var$13;
        $rt_throw($s);
    }
    $s = new jl_IndexOutOfBoundsException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $rt_throw($s);
},
jl_Integer_parseInt = $s => {
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$nativeString.length, 10);
    $s = new jl_NumberFormatException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $s.$message = $rt_s(70);
    $rt_throw($s);
},
jl_Integer_ensureIntegerCache = () => {
    let var$1, var$2, $j, var$4, var$5;
    a: {
        if (jl_Integer_integerCache === null) {
            var$1 = $rt_createArray(jl_Integer, 256);
            var$2 = var$1.data;
            jl_Integer_integerCache = var$1;
            $j = 0;
            var$4 = var$2.length;
            while (true) {
                if ($j >= var$4)
                    break a;
                var$5 = new jl_Integer;
                var$5.$value = $j - 128 | 0;
                var$2[$j] = var$5;
                $j = $j + 1 | 0;
            }
        }
    }
},
jl_Integer_intValue = $this => {
    return $this.$value;
},
jl_Integer_toString = $this => {
    let var$1, var$2;
    var$1 = $this.$value;
    var$2 = new jl_AbstractStringBuilder;
    var$2.$buffer = $rt_createCharArray(20);
    return (jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$1, 10)).$toString();
},
jl_Integer_decodeDigit = $c => {
    if ($c >= 48 && $c <= 57)
        return $c - 48 | 0;
    if ($c >= 97 && $c <= 122)
        return ($c - 97 | 0) + 10 | 0;
    if ($c >= 65 && $c <= 90)
        return ($c - 65 | 0) + 10 | 0;
    return (-1);
},
jl_Integer_numberOfLeadingZeros = $i => {
    let $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16 | 0;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 >>> 8 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i >>> 4 | 0;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 >>> 2 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i >>> 1 | 0)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_numberOfTrailingZeros = $i => {
    let $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 << 8;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i << 4;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 << 2;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer__clinit_ = () => {
    jl_Integer_TYPE = $rt_cls($rt_intcls);
};
function jl_AbstractStringBuilder() {
    let a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length0 = 0;
}
let jl_AbstractStringBuilder__init_ = $this => {
    $this.$buffer = $rt_createCharArray(16);
},
jl_AbstractStringBuilder__init_1 = () => {
    let var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_(var_0);
    return var_0;
},
jl_AbstractStringBuilder__init_0 = ($this, $capacity) => {
    $this.$buffer = $rt_createCharArray($capacity);
},
jl_AbstractStringBuilder__init_2 = var_0 => {
    let var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_0(var_1, var_0);
    return var_1;
},
jl_AbstractStringBuilder_append = ($this, $string) => {
    return $this.$insert($this.$length0, $string);
},
jl_AbstractStringBuilder_insert = ($this, $index, $string) => {
    let $i, $i_0, var$5;
    if ($index >= 0 && $index <= $this.$length0) {
        if ($string === null)
            $string = $rt_s(1);
        else if ($string.$nativeString.length ? 0 : 1)
            return $this;
        $this.$ensureCapacity($this.$length0 + $string.$nativeString.length | 0);
        $i = $this.$length0 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$nativeString.length | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length0 = $this.$length0 + $string.$nativeString.length | 0;
        $i_0 = 0;
        a: {
            while ($i_0 < $string.$nativeString.length) {
                var$5 = $this.$buffer;
                $i = $index + 1 | 0;
                if ($i_0 < 0)
                    break a;
                if ($i_0 >= $string.$nativeString.length)
                    break a;
                var$5.data[$index] = $string.$nativeString.charCodeAt($i_0);
                $i_0 = $i_0 + 1 | 0;
                $index = $i;
            }
            return $this;
        }
        $string = new jl_StringIndexOutOfBoundsException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    $string = new jl_StringIndexOutOfBoundsException;
    $string.$suppressionEnabled = 1;
    $string.$writableStackTrace = 1;
    $rt_throw($string);
},
jl_AbstractStringBuilder_append0 = ($this, $value) => {
    return jl_AbstractStringBuilder_insert0($this, $this.$length0, $value, 10);
},
jl_AbstractStringBuilder_insert0 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, $pos, $sz, $posLimit, var$10;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($rt_ucmp($value, $radix) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = $rt_udiv((-1), $radix);
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if ($rt_ucmp(var$10, $value) > 0) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if ($rt_ucmp(var$10, $posLimit) > 0)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $positive = $target;
            else {
                var$5 = $this.$buffer.data;
                $positive = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (!var$10)
                    break a;
                var$5 = $this.$buffer.data;
                $target = $positive + 1 | 0;
                var$5[$positive] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                $value = $rt_umod($value, var$10);
                var$10 = $rt_udiv(var$10, $radix);
                $positive = $target;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_insert4 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, var$7, $sz, $pos, $posLimit, var$11;
    $positive = 1;
    if (Long_lt($value, Long_ZERO)) {
        $positive = 0;
        $value = Long_neg($value);
    }
    a: {
        var$5 = Long_fromInt($radix);
        if (jl_Long_compareUnsigned($value, var$5) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$6 = $this.$buffer.data;
                var$7 = $target + 1 | 0;
                var$6[$target] = 45;
                $target = var$7;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit(Long_lo($value), $radix);
        } else {
            $sz = 1;
            $pos = Long_fromInt(1);
            $posLimit = jl_Long_divideUnsigned(Long_fromInt(-1), var$5);
            b: {
                while (true) {
                    var$11 = Long_mul($pos, var$5);
                    if (jl_Long_compareUnsigned(var$11, $value) > 0) {
                        var$11 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (jl_Long_compareUnsigned(var$11, $posLimit) > 0)
                        break;
                    $pos = var$11;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $positive = $target;
            else {
                var$6 = $this.$buffer.data;
                $positive = $target + 1 | 0;
                var$6[$target] = 45;
            }
            while (true) {
                if (Long_eq(var$11, Long_ZERO))
                    break a;
                var$6 = $this.$buffer.data;
                $target = $positive + 1 | 0;
                var$6[$positive] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned($value, var$11))), $radix);
                $value = jl_Long_remainderUnsigned($value, var$11);
                var$11 = jl_Long_divideUnsigned(var$11, var$5);
                $positive = $target;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_insert1 = ($this, $target, $value) => {
    let $mantissa, var$4, $number, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, $i, $pos, $intDigit;
    $mantissa = $rt_compare($value, 0.0);
    if (!$mantissa) {
        if (1.0 / $value === Infinity) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 48;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 46;
            var$4[$target] = 48;
            return $this;
        }
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 45;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 48;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 46;
        var$4[$mantissa] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 78;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 97;
        var$4[$target] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if ($mantissa > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            $mantissa = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 73;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 110;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 102;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 110;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 116;
        var$4[$target] = 121;
        return $this;
    }
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent;
    $negative = $number.$sign1;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    $leadingZeros = 0;
    $leadingZero = 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp < 0) {
            $intPart = 0;
            $leadingZeros = ( -$exp | 0) - 1 | 0;
            $leadingZero = 1;
            $sz = $sz + 1 | 0;
            $exp = 0;
        } else {
            $intPart = $exp + 1 | 0;
            $i = $intPart + 1 | 0;
            if ($digits > $i)
                $i = $digits;
            $exp = 0;
            $digits = $i;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + ($digits + $leadingZeros | 0) | 0) | 0);
    if (!$negative)
        $sz = $target;
    else {
        var$4 = $this.$buffer.data;
        $sz = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    if ($leadingZero) {
        var$4 = $this.$buffer.data;
        $target = $sz + 1 | 0;
        var$4[$sz] = 48;
        $sz = $target + 1 | 0;
        var$4[$target] = 46;
        while (true) {
            $target = $leadingZeros + (-1) | 0;
            if ($leadingZeros <= 0)
                break;
            $i = $sz + 1 | 0;
            var$4[$sz] = 48;
            $leadingZeros = $target;
            $sz = $i;
        }
    }
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        $target = $sz + 1 | 0;
        var$4[$sz] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            $sz = $target;
        else {
            $sz = $target + 1 | 0;
            var$4[$target] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        $target = $sz + 1 | 0;
        var$4[$sz] = 69;
        if ($exp >= 0)
            $mantissa = $target;
        else {
            $exp =  -$exp | 0;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        if ($exp < 10)
            $i = $mantissa;
        else {
            $i = $mantissa + 1 | 0;
            var$4[$mantissa] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        var$4[$i] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
},
jl_AbstractStringBuilder_trailingDecimalZeros = $n => {
    let $result, $zeros, var$4;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    $zeros = var$4 * 100 | 0;
    if ($n % $zeros | 0)
        $zeros = var$4;
    else
        $result = $result | 2;
    if (!($n % ($zeros * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
},
jl_AbstractStringBuilder_insert2 = ($this, $index, $obj) => {
    let var$3;
    $obj = $obj === null ? $rt_s(1) : $obj.$toString();
    var$3 = $this;
    jl_AbstractStringBuilder_insert(var$3, $index, $obj);
    return var$3;
},
jl_AbstractStringBuilder_ensureCapacity = ($this, $capacity) => {
    let var$2, var$3, $newLength, var$5, var$6, var$7;
    var$2 = $this.$buffer.data;
    var$3 = var$2.length;
    if (var$3 >= $capacity)
        return;
    if (var$3 >= 1073741823)
        $newLength = 2147483647;
    else {
        var$5 = var$3 * 2 | 0;
        $newLength = 5;
        if (var$5 > $newLength)
            $newLength = var$5;
        if ($capacity > $newLength)
            $newLength = $capacity;
    }
    var$6 = $rt_createCharArray($newLength);
    if ($newLength < var$3)
        var$3 = $newLength;
    var$7 = var$6.data;
    $capacity = 0;
    while ($capacity < var$3) {
        var$7[$capacity] = var$2[$capacity];
        $capacity = $capacity + 1 | 0;
    }
    $this.$buffer = var$6;
},
jl_AbstractStringBuilder_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new jl_String;
    var$2 = $this.$buffer;
    var$3 = var$2.data;
    var$4 = $this.$length0;
    var$5 = var$3.length;
    if (var$4 >= 0 && var$4 <= (var$5 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$2.data, 0, var$4);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
jl_AbstractStringBuilder_insert5 = ($this, $index, $s, $i, $end) => {
    let var$5, var$6;
    if ($i <= $end) {
        $s = $s;
        if ($end <= $s.$nativeString.length && $i >= 0) {
            jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
            a: {
                while ($i < $end) {
                    var$5 = $this.$buffer;
                    var$6 = $index + 1 | 0;
                    if ($i < 0)
                        break a;
                    if ($i >= $s.$nativeString.length)
                        break a;
                    var$5.data[$index] = $s.$nativeString.charCodeAt($i);
                    $i = $i + 1 | 0;
                    $index = var$6;
                }
                return $this;
            }
            $s = new jl_StringIndexOutOfBoundsException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $rt_throw($s);
        }
    }
    $s = new jl_IndexOutOfBoundsException;
    $s.$suppressionEnabled = 1;
    $s.$writableStackTrace = 1;
    $rt_throw($s);
},
jl_AbstractStringBuilder_insert3 = ($this, $index, $chars, $offset, $len) => {
    let var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        $len = $index + 1 | 0;
        var$8 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = $len;
        $offset = var$8;
    }
    return $this;
},
jl_AbstractStringBuilder_deleteCharAt = ($this, $i) => {
    let var$2, var$3, $i_0, var$5;
    if ($i >= 0) {
        var$2 = $this.$length0;
        if ($i < var$2) {
            var$2 = var$2 - 1 | 0;
            $this.$length0 = var$2;
            while ($i < var$2) {
                var$3 = $this.$buffer.data;
                $i_0 = $i + 1 | 0;
                var$3[$i] = var$3[$i_0];
                $i = $i_0;
            }
            return $this;
        }
    }
    var$5 = new jl_StringIndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    $rt_throw(var$5);
},
jl_AbstractStringBuilder_delete = ($this, $start, $end) => {
    let var$3, var$4, $sz, $i, var$7, var$8;
    if ($start >= 0) {
        var$3 = $rt_compare($start, $end);
        if (var$3 <= 0) {
            var$4 = $this.$length0;
            if ($start <= var$4) {
                if (!var$3)
                    return $this;
                if ($end > var$4)
                    $end = var$4;
                $sz = var$4 - $end | 0;
                $this.$length0 = var$4 - ($end - $start | 0) | 0;
                $i = 0;
                while ($i < $sz) {
                    var$7 = $this.$buffer.data;
                    var$4 = $start + 1 | 0;
                    var$3 = $end + 1 | 0;
                    var$7[$start] = var$7[$end];
                    $i = $i + 1 | 0;
                    $start = var$4;
                    $end = var$3;
                }
                return $this;
            }
        }
    }
    var$8 = new jl_StringIndexOutOfBoundsException;
    var$8.$suppressionEnabled = 1;
    var$8.$writableStackTrace = 1;
    $rt_throw(var$8);
},
jl_AbstractStringBuilder_insertSpace = ($this, $start, $end) => {
    let var$3, $sz, $i, var$6;
    var$3 = $this.$length0;
    $sz = var$3 - $start | 0;
    $this.$ensureCapacity((var$3 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        var$6 = $this.$buffer.data;
        var$6[$end + $i | 0] = var$6[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length0 = $this.$length0 + ($end - $start | 0) | 0;
},
jl_AbstractStringBuilder_indexOf = ($this, $str, $i) => {
    let $sz, $j, var$5;
    $sz = $this.$length0 - $str.$nativeString.length | 0;
    a: {
        b: while (true) {
            if ($i > $sz)
                return (-1);
            $j = 0;
            while (true) {
                if ($j >= $str.$nativeString.length)
                    break b;
                var$5 = $this.$buffer.data[$i + $j | 0];
                if ($j < 0)
                    break a;
                if ($j >= $str.$nativeString.length)
                    break a;
                if (var$5 != $str.$nativeString.charCodeAt($j))
                    break;
                $j = $j + 1 | 0;
            }
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
},
jl_Appendable = $rt_classWithoutFields(0),
jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuilder__init_0 = $this => {
    $this.$buffer = $rt_createCharArray(16);
},
jl_StringBuilder__init_ = () => {
    let var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_0(var_0);
    return var_0;
},
jl_StringBuilder_append0 = ($this, $obj) => {
    let var$2, var$3;
    var$2 = $this.$length0;
    var$3 = $this;
    $obj = $obj === null ? $rt_s(1) : $obj.$toString();
    jl_AbstractStringBuilder_insert(var$3, var$2, $obj);
    return $this;
},
jl_StringBuilder_append = ($this, $string) => {
    let var$2;
    var$2 = $this.$length0;
    jl_AbstractStringBuilder_insert($this, var$2, $string);
    return $this;
},
jl_StringBuilder_append1 = ($this, $value) => {
    jl_AbstractStringBuilder_insert0($this, $this.$length0, $value, 10);
    return $this;
},
jl_StringBuilder_append2 = ($this, $c) => {
    let var$2, var$3;
    var$2 = $this.$length0;
    var$3 = $this;
    jl_AbstractStringBuilder_insertSpace(var$3, var$2, var$2 + 1 | 0);
    var$3.$buffer.data[var$2] = $c;
    return $this;
},
jl_StringBuilder_delete = ($this, $start, $end) => {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
},
jl_StringBuilder_insert0 = ($this, $index, $string) => {
    jl_AbstractStringBuilder_insert($this, $index, $string);
    return $this;
},
jl_StringBuilder_subSequence = ($this, var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$3 = $this;
    if (var$1 <= var$2 && var$1 >= 0 && var$2 <= var$3.$length0) {
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$5.data;
        var$2 = var$2 - var$1 | 0;
        var$7 = var$6.length;
        if (var$1 >= 0 && var$2 >= 0 && var$2 <= (var$7 - var$1 | 0)) {
            var$4.$nativeString = $rt_charArrayToString(var$5.data, var$1, var$2);
            return var$4;
        }
        var$3 = new jl_IndexOutOfBoundsException;
        jl_Throwable__init_(var$3);
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    $rt_throw(var$3);
},
jl_StringBuilder_insert2 = ($this, var$1, var$2, var$3, var$4) => {
    let var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + var$4 | 0);
    var$5 = var$4 + var$3 | 0;
    while (var$3 < var$5) {
        var$6 = var$2.data;
        var$7 = $this.$buffer.data;
        var$4 = var$1 + 1 | 0;
        var$8 = var$3 + 1 | 0;
        var$7[var$1] = var$6[var$3];
        var$1 = var$4;
        var$3 = var$8;
    }
    return $this;
},
jl_StringBuilder_append3 = ($this, var$1, var$2, var$3) => {
    let var$4, var$5, var$6, var$7, var$8, var$9;
    var$4 = $this.$length0;
    var$5 = $this;
    jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + var$3 | 0);
    var$3 = var$3 + var$2 | 0;
    while (var$2 < var$3) {
        var$6 = var$1.data;
        var$7 = var$5.$buffer.data;
        var$8 = var$4 + 1 | 0;
        var$9 = var$2 + 1 | 0;
        var$7[var$4] = var$6[var$2];
        var$4 = var$8;
        var$2 = var$9;
    }
    return $this;
},
jl_StringBuilder_length = $this => {
    return $this.$length0;
},
jl_StringBuilder_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new jl_String;
    var$2 = $this.$buffer;
    var$3 = var$2.data;
    var$4 = $this.$length0;
    var$5 = var$3.length;
    if (var$4 >= 0 && var$4 <= (var$5 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$2.data, 0, var$4);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
jl_StringBuilder_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuilder_insert1 = ($this, var$1, var$2) => {
    var$2 = var$2 === null ? $rt_s(1) : var$2.$toString();
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
},
jl_StringBuilder_insert3 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + 1 | 0);
    $this.$buffer.data[var$1] = var$2;
    return $this;
},
jl_StringBuilder_insert = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
},
cgtt_TeaVMLauncher = $rt_classWithoutFields(),
cgtt_TeaVMLauncher_$callClinit = () => {
    cgtt_TeaVMLauncher_$callClinit = $rt_eraseClinit(cgtt_TeaVMLauncher);
    cgtt_TeaVMLauncher__clinit_();
},
cgtt_TeaVMLauncher_main = $args => {
    let $config;
    cgtt_TeaVMLauncher_$callClinit();
    $config = cgxgbt_TeaApplicationConfiguration__init_0($rt_s(77));
    $config.$width2 = 512;
    $config.$height2 = 520;
    cgxgbt_TeaApplication__init_(new cgxgbt_TeaApplication, new cgt_SpeedDemo, $config);
},
cgtt_TeaVMLauncher__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    jl_String_EMPTY_CHARS = $rt_createCharArray(0);
    var$1 = new jl_String;
    var$1.$nativeString = "";
    jl_String_EMPTY = var$1;
    jl_String_CASE_INSENSITIVE_ORDER = new jl_String$_clinit_$lambda$_115_0;
    cbgss_InputEvent$Type__clinit_();
    var$1 = new cbgss_Touchable;
    var$1.$name0 = $rt_s(20);
    var$1.$ordinal0 = 0;
    cbgss_Touchable_enabled = var$1;
    var$2 = new cbgss_Touchable;
    var$2.$name0 = $rt_s(21);
    var$2.$ordinal0 = 1;
    cbgss_Touchable_disabled = var$2;
    var$3 = new cbgss_Touchable;
    var$3.$name0 = $rt_s(22);
    var$3.$ordinal0 = 2;
    cbgss_Touchable_childrenOnly = var$3;
    cbgss_Touchable_$VALUES = $rt_wrapArray(cbgss_Touchable, [var$1, var$2, var$3]);
    var$1 = new cbgssu_FocusListener$FocusEvent$Type;
    var$1.$name0 = $rt_s(23);
    var$1.$ordinal0 = 0;
    cbgssu_FocusListener$FocusEvent$Type_keyboard = var$1;
    var$2 = new cbgssu_FocusListener$FocusEvent$Type;
    var$2.$name0 = $rt_s(24);
    var$2.$ordinal0 = 1;
    cbgssu_FocusListener$FocusEvent$Type_scroll = var$2;
    cbgssu_FocusListener$FocusEvent$Type_$VALUES = $rt_wrapArray(cbgssu_FocusListener$FocusEvent$Type, [var$1, var$2]);
    var$1 = new cbgm_Vector2;
    var$1.$x2 = 1.0;
    var$1.$y1 = 0.0;
    cbgm_Vector2_X = var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x2 = 0.0;
    var$1.$y1 = 1.0;
    cbgm_Vector2_Y = var$1;
    var$1 = new cbgm_Vector2;
    var$1.$x2 = 0.0;
    var$1.$y1 = 0.0;
    cbgm_Vector2_Zero = var$1;
    cbgssu_DragAndDrop_tmpVector = new cbgm_Vector2;
    cbgssu_ActorGestureListener_tmpCoords = new cbgm_Vector2;
    cbgssu_ActorGestureListener_tmpCoords2 = new cbgm_Vector2;
    cbgssu_ClickListener_visualPressedDuration = 0.10000000149011612;
    cbgss_InputListener_tmpCoords = new cbgm_Vector2;
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 0.0;
    cbgm_Quaternion_tmp1 = var$1;
    var$1 = new cbgm_Quaternion;
    var$1.$x1 = 0.0;
    var$1.$y0 = 0.0;
    var$1.$z0 = 0.0;
    var$1.$w = 0.0;
    cbgm_Quaternion_tmp2 = var$1;
    cbgm_Rectangle_tmp = new cbgm_Rectangle;
    cbgm_Rectangle_tmp2 = new cbgm_Rectangle;
    cbgssu_DragScrollListener_tmpCoords = new cbgm_Vector2;
    cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
    jl_Float_TYPE = $rt_cls($rt_floatcls);
    cbgg_Color__clinit_();
    cbgss_Group_tmp = new cbgm_Vector2;
    cbgssu_Tooltip_tmp = new cbgm_Vector2;
    cbgssu_TextField_tmp1 = new cbgm_Vector2;
    cbgssu_TextField_tmp2 = new cbgm_Vector2;
    cbgssu_TextField_tmp3 = new cbgm_Vector2;
    cbgssu_TextField_keyRepeatInitialTime = 0.4000000059604645;
    cbgssu_TextField_keyRepeatTime = 0.10000000149011612;
    jl_Integer_TYPE = $rt_cls($rt_intcls);
    cbgu_ObjectMap_dummy = new jl_Object;
    jl_AbstractStringBuilder$Constants__clinit_();
    otcit_FloatAnalyzer__clinit_();
    jl_Long_TYPE = $rt_cls($rt_longcls);
    var$1 = new cbgm_RandomXS128;
    var$4 = Long_or(Long_shl(Long_fromInt(4.294967296E9 * jl_Math_randomImpl() + (-2.147483648E9) | 0), 32), Long_fromInt(4.294967296E9 * jl_Math_randomImpl() + (-2.147483648E9) | 0));
    if (Long_eq(var$4, Long_ZERO))
        var$4 = Long_create(0, 2147483648);
    var$5 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(3981806797, 4283543511));
    var$5 = Long_mul(Long_xor(var$5, Long_shru(var$5, 33)), Long_create(444984403, 3301882366));
    var$6 = Long_xor(var$5, Long_shru(var$5, 33));
    var$5 = Long_mul(Long_xor(var$6, Long_shru(var$6, 33)), Long_create(3981806797, 4283543511));
    var$5 = Long_mul(Long_xor(var$5, Long_shru(var$5, 33)), Long_create(444984403, 3301882366));
    var$5 = Long_xor(var$5, Long_shru(var$5, 33));
    var$1.$seed0 = var$6;
    var$1.$seed1 = var$5;
    cbgm_MathUtils_random = var$1;
    jl_Character_TYPE = $rt_cls($rt_charcls);
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
    jlr_Modifier__clinit_();
    cbgssu_Table$Debug__clinit_();
    cbgssu_Window_tmpPosition = new cbgm_Vector2;
    cbgssu_Window_tmpSize = new cbgm_Vector2;
    cbgssu_Tree_tmp = new cbgm_Vector2;
    cbgssu_SelectBox_temp = new cbgm_Vector2;
    cbgssu_Skin__clinit_();
    cbgm_Vector4__clinit_();
    cbgm_MathUtils$Sin__clinit_();
    var$1 = new cbgm_Plane$PlaneSide;
    var$1.$name0 = $rt_s(35);
    var$1.$ordinal0 = 0;
    cbgm_Plane$PlaneSide_OnPlane = var$1;
    var$2 = new cbgm_Plane$PlaneSide;
    var$2.$name0 = $rt_s(36);
    var$2.$ordinal0 = 1;
    cbgm_Plane$PlaneSide_Back = var$2;
    var$3 = new cbgm_Plane$PlaneSide;
    var$3.$name0 = $rt_s(37);
    var$3.$ordinal0 = 2;
    cbgm_Plane$PlaneSide_Front = var$3;
    cbgm_Plane$PlaneSide_$VALUES = $rt_wrapArray(cbgm_Plane$PlaneSide, [var$1, var$2, var$3]);
    cbgm_GeometryUtils_tmp1 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp2 = new cbgm_Vector2;
    cbgm_GeometryUtils_tmp3 = new cbgm_Vector2;
    cbggg_NinePatch_tmpDrawColor = new cbgg_Color;
    var$1 = new ju_HashMap;
    var$7 = ju_HashMap_calculateCapacity(16);
    var$1.$elementCount = 0;
    var$8 = $rt_createArray(ju_HashMap$HashEntry, var$7);
    var$9 = var$8.data;
    var$1.$elementData = var$8;
    var$1.$loadFactor = 0.75;
    var$1.$threshold = var$9.length * 0.75 | 0;
    cbgg_Texture_managedTextures = var$1;
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
    var$1 = new cbgggmd_ModelMaterial$MaterialType;
    var$1.$name0 = $rt_s(58);
    var$1.$ordinal0 = 0;
    cbgggmd_ModelMaterial$MaterialType_Lambert = var$1;
    var$2 = new cbgggmd_ModelMaterial$MaterialType;
    var$2.$name0 = $rt_s(59);
    var$2.$ordinal0 = 1;
    cbgggmd_ModelMaterial$MaterialType_Phong = var$2;
    cbgggmd_ModelMaterial$MaterialType_$VALUES = $rt_wrapArray(cbgggmd_ModelMaterial$MaterialType, [var$1, var$2]);
    var$1 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$1.$name0 = $rt_s(60);
    var$1.$ordinal0 = 0;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = var$1;
    var$2 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$2.$name0 = $rt_s(61);
    var$2.$ordinal0 = 1;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = var$2;
    var$3 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
    var$3.$name0 = $rt_s(62);
    var$3.$ordinal0 = 2;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = var$3;
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = $rt_wrapArray(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, [var$1, var$2, var$3]);
    cbgggpv_GradientColorValue_temp = $rt_createFloatArray(3);
    var$1 = new cbgggpe_RegularEmitter$EmissionMode;
    var$1.$name0 = $rt_s(63);
    var$1.$ordinal0 = 0;
    cbgggpe_RegularEmitter$EmissionMode_Enabled = var$1;
    var$2 = new cbgggpe_RegularEmitter$EmissionMode;
    var$2.$name0 = $rt_s(64);
    var$2.$ordinal0 = 1;
    cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = var$2;
    var$3 = new cbgggpe_RegularEmitter$EmissionMode;
    var$3.$name0 = $rt_s(65);
    var$3.$ordinal0 = 2;
    cbgggpe_RegularEmitter$EmissionMode_Disabled = var$3;
    cbgggpe_RegularEmitter$EmissionMode_$VALUES = $rt_wrapArray(cbgggpe_RegularEmitter$EmissionMode, [var$1, var$2, var$3]);
    cgxgbt_TeaApplication$AppState__clinit_();
    cbg_Application$ApplicationType__clinit_();
    ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
    ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
    cbggg_GLVersion$Type__clinit_();
    jur_AbstractSet_counter = 1;
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
    jur_AbstractCharClass_charClasses = new jur_AbstractCharClass$PredefinedCharacterClasses;
    jl_Thread__clinit_();
    cgxgbta_AssetType__clinit_();
    cbgg_Mesh$VertexDataType__clinit_();
    cbgg_Mesh__clinit_();
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 16);
    cbgu_BufferUtils_unsafeBuffers = var$1;
    cbgu_BufferUtils_allocatedUnsafe = 0;
    cgxgbt_TeaTool_isProd = 1;
    var$1 = new jn_ByteOrder;
    var$1.$name3 = $rt_s(78);
    jn_ByteOrder_BIG_ENDIAN = var$1;
    var$1 = new jn_ByteOrder;
    var$1.$name3 = $rt_s(79);
    jn_ByteOrder_LITTLE_ENDIAN = var$1;
    cbgu_StringBuilder__clinit_();
    cbgg_Pixmap$Blending__clinit_();
    cbgg_Pixmap$Filter__clinit_();
    cbgg_Texture$TextureFilter__clinit_();
    cbgg_Texture$TextureWrap__clinit_();
    cbgg_Pixmap$Format__clinit_();
    cbg_Files$FileType__clinit_();
    var$1 = new jnci_UTF8Charset;
    var$9 = $rt_createArray(jl_String, 0);
    var$8 = var$9.data;
    jnc_Charset_checkCanonicalName($rt_s(80));
    var$7 = var$8.length;
    var$10 = 0;
    while (var$10 < var$7) {
        jnc_Charset_checkCanonicalName(var$8[var$10]);
        var$10 = var$10 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(80);
    var$1.$aliases = var$9.$clone0();
    jnci_UTF8Charset_INSTANCE = var$1;
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbggg_BitmapFontCache_tempColor = var$1;
    otcit_FloatSynthesizer__clinit_();
    var$1 = new jnc_CodingErrorAction;
    var$1.$name2 = $rt_s(81);
    jnc_CodingErrorAction_IGNORE = var$1;
    var$1 = new jnc_CodingErrorAction;
    var$1.$name2 = $rt_s(82);
    jnc_CodingErrorAction_REPLACE = var$1;
    var$1 = new jnc_CodingErrorAction;
    var$1.$name2 = $rt_s(83);
    jnc_CodingErrorAction_REPORT = var$1;
    cbgg_TextureData$TextureDataType__clinit_();
    cbggg_MipMapGenerator_useHWMipMap = 1;
    cgt_Random__clinit_();
    var$1 = new jnc_CoderResult;
    var$1.$kind = 0;
    var$1.$length3 = 0;
    jnc_CoderResult_UNDERFLOW = var$1;
    var$1 = new jnc_CoderResult;
    var$1.$kind = 1;
    var$1.$length3 = 0;
    jnc_CoderResult_OVERFLOW = var$1;
    cbggg_HdpiMode__clinit_();
    jm_BigInteger__clinit_();
    jl_Double_TYPE = $rt_cls($rt_doublecls);
    var$1 = new jl_Boolean;
    var$1.$value2 = 1;
    jl_Boolean_TRUE = var$1;
    var$1 = new jl_Boolean;
    var$1.$value2 = 0;
    jl_Boolean_FALSE = var$1;
    jl_Boolean_TYPE = $rt_cls($rt_booleancls);
},
otci_IntegerUtil = $rt_classWithoutFields(),
otci_IntegerUtil_toUnsignedLogRadixString = ($value, $radixLog2) => {
    let $radix, $mask, $sz, $chars, var$7, $pos, $target, $target_0, var$11;
    if (!$value)
        return $rt_s(42);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz);
    var$7 = $chars.data;
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        $target_0 = $target + 1 | 0;
        var$7[$target] = jl_Character_forDigit(($value >>> $pos | 0) & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    var$11 = new jl_String;
    var$11.$nativeString = $rt_charArrayToString($chars.data, 0, var$7.length);
    return var$11;
};
function cgxgbt_TeaApplicationConfiguration() {
    let a = this; jl_Object.call(a);
    a.$useGL30 = 0;
    a.$windowListener = null;
    a.$preloadAssets = 0;
    a.$storagePrefix = null;
    a.$localStoragePrefix = null;
    a.$shouldEncodePreference = 0;
    a.$showDownloadLogs = 0;
    a.$canvasID = null;
    a.$width2 = 0;
    a.$height2 = 0;
    a.$padHorizontal = 0;
    a.$padVertical = 0;
    a.$stencil = 0;
    a.$antialiasing = 0;
    a.$alpha = 0;
    a.$premultipliedAlpha = 0;
    a.$preserveDrawingBuffer = 0;
    a.$useDebugGL = 0;
    a.$usePhysicalPixels = 0;
    a.$powerPreference = null;
    a.$preloadListener = null;
}
let cgxgbt_TeaApplicationConfiguration__init_ = ($this, $canvasID) => {
    $this.$useGL30 = 0;
    $this.$preloadAssets = 1;
    $this.$storagePrefix = $rt_s(84);
    $this.$localStoragePrefix = $rt_s(85);
    $this.$shouldEncodePreference = 0;
    $this.$showDownloadLogs = 0;
    $this.$width2 = (-1);
    $this.$height2 = (-1);
    $this.$padHorizontal = 0;
    $this.$padVertical = 0;
    $this.$stencil = 0;
    $this.$antialiasing = 0;
    $this.$alpha = 0;
    $this.$premultipliedAlpha = 0;
    $this.$preserveDrawingBuffer = 0;
    $this.$useDebugGL = 0;
    $this.$usePhysicalPixels = 0;
    $this.$powerPreference = $rt_s(86);
    $this.$canvasID = $canvasID;
},
cgxgbt_TeaApplicationConfiguration__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplicationConfiguration();
    cgxgbt_TeaApplicationConfiguration__init_(var_1, var_0);
    return var_1;
},
cbg_Application = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication() {
    let a = this; jl_Object.call(a);
    a.$delayInitCount = 0;
    a.$graphics = null;
    a.$input = null;
    a.$files = null;
    a.$net = null;
    a.$audio = null;
    a.$config = null;
    a.$queueAppListener = null;
    a.$appListener = null;
    a.$lifecycleListeners = null;
    a.$window0 = null;
    a.$initState = null;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$logger = null;
    a.$logLevel = 0;
    a.$assetLoader = null;
    a.$prefs = null;
    a.$clipboard = null;
    a.$runnables = null;
    a.$runnablesHelper = null;
    a.$hostPageBaseURL = null;
}
let cgxgbt_TeaApplication_agentInfo = null,
cgxgbt_TeaApplication__init_ = ($this, $appListener, $config) => {
    let var$3;
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 4);
    $this.$lifecycleListeners = var$3;
    $this.$initState = cgxgbt_TeaApplication$AppState_INIT;
    $this.$lastWidth = (-1);
    $this.$lastHeight = 1;
    $this.$logLevel = 1;
    $this.$prefs = cbgu_ObjectMap__init_0(51, 0.800000011920929);
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 16);
    $this.$runnables = var$3;
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 16);
    $this.$runnablesHelper = var$3;
    cgxgbtdi_TeaWindow_$callClinit();
    $this.$window0 = cgxgbtdi_TeaWindow_TEA_WINDOW;
    $this.$config = $config;
    $this.$queueAppListener = $appListener;
    cgxgbt_TeaApplication_init($this);
},
cgxgbt_TeaApplication__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaApplication();
    cgxgbt_TeaApplication__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaApplication_init = $this => {
    let $currentWindow, $assetDownload, var$3, $indexQM, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cgxgbt_TeaApplication_agentInfo = cgxgbta_TeaWebAgent_createAgent$js_body$_1();
    jl_System_initPropertiesIfNeeded();
    ju_Hashtable_put(jl_System_properties, $rt_s(87), $rt_s(40));
    $currentWindow = $rt_str(cgxgbt_TeaApplication_agentInfo.userAgent);
    jl_System_initPropertiesIfNeeded();
    ju_Hashtable_put(jl_System_properties, $rt_s(88), $currentWindow);
    if (cgxgbt_TeaApplication_agentInfo.windows ? 1 : 0) {
        jl_System_initPropertiesIfNeeded();
        ju_Hashtable_put(jl_System_properties, $rt_s(89), $rt_s(90));
    } else if (cgxgbt_TeaApplication_agentInfo.macOS ? 1 : 0) {
        jl_System_initPropertiesIfNeeded();
        ju_Hashtable_put(jl_System_properties, $rt_s(89), $rt_s(91));
    } else if (!(cgxgbt_TeaApplication_agentInfo.linux ? 1 : 0)) {
        jl_System_initPropertiesIfNeeded();
        ju_Hashtable_put(jl_System_properties, $rt_s(89), $rt_s(92));
    } else {
        jl_System_initPropertiesIfNeeded();
        ju_Hashtable_put(jl_System_properties, $rt_s(89), $rt_s(5));
    }
    $assetDownload = new cgxgbta_AssetDownloadImpl;
    $assetDownload.$showLogs = $this.$config.$showDownloadLogs;
    cgxgbta_AssetInstance_downloaderInstance = $assetDownload;
    cgxgbtdi_TeaWindow_$callClinit();
    var$3 = $rt_str(cgxgbtdi_TeaWindow_TEA_WINDOW.$window.location.href);
    $this.$hostPageBaseURL = var$3;
    if (jl_String_contains(var$3, $rt_s(93))) {
        $currentWindow = jl_String_replace($this.$hostPageBaseURL, $rt_s(94), $rt_s(40));
        $this.$hostPageBaseURL = $currentWindow;
        $this.$hostPageBaseURL = jl_String_replace($currentWindow, $rt_s(95), $rt_s(40));
    }
    $indexQM = jl_String_indexOf($this.$hostPageBaseURL, 63, 0);
    if ($indexQM >= 0)
        $this.$hostPageBaseURL = jl_String_substring($this.$hostPageBaseURL, 0, $indexQM);
    $currentWindow = cgxgbt_TeaGraphics__init_0($this.$config);
    $this.$graphics = $currentWindow;
    var$3 = new cgxgbta_AssetLoadImpl;
    var$5 = $this.$hostPageBaseURL;
    $currentWindow = $currentWindow.$canvas;
    var$3.$assetTotal = (-1);
    var$3.$assetDownloader = $assetDownload;
    var$3.$baseUrl = var$5;
    $assetDownload = new ju_HashSet;
    var$5 = new ju_HashMap;
    var$6 = ju_HashMap_calculateCapacity(16);
    var$5.$elementCount = 0;
    var$7 = $rt_createArray(ju_HashMap$HashEntry, var$6);
    var$8 = var$7.data;
    var$5.$elementData = var$7;
    var$5.$loadFactor = 0.75;
    var$5.$threshold = var$8.length * 0.75 | 0;
    $assetDownload.$backingMap = var$5;
    var$3.$assetInQueue = $assetDownload;
    cgxgbta_AssetLoadImpl_setupFileDrop(var$3, $currentWindow, $this);
    $this.$assetLoader = var$3;
    cgxgbta_AssetInstance_instance = var$3;
    $this.$input = cgxgbt_TeaInput__init_($this, $this.$graphics.$canvas);
    $assetDownload = new cgxgbt_TeaFiles;
    $currentWindow = $this.$config;
    var$3 = new cgxgbtft_InternalStorage;
    var$5 = new cbgu_Array;
    var$5.$ordered = 1;
    var$5.$items = $rt_createArray(jl_Object, 16);
    var$3.$tmpPaths = var$5;
    var$3.$debug = 0;
    var$5 = new cbgu_OrderedMap;
    cbgu_ObjectMap__init_(var$5, 51, 0.800000011920929);
    var$9 = new cbgu_Array;
    var$9.$ordered = 1;
    var$9.$items = $rt_createArray(jl_Object, 16);
    var$5.$keys = var$9;
    var$3.$fileMap = var$5;
    $assetDownload.$internalStorage = var$3;
    var$3 = new cgxgbtft_ClasspathStorage;
    var$5 = new cbgu_Array;
    var$5.$ordered = 1;
    var$5.$items = $rt_createArray(jl_Object, 16);
    var$3.$tmpPaths = var$5;
    var$3.$debug = 0;
    var$5 = new cbgu_OrderedMap;
    cbgu_ObjectMap__init_(var$5, 51, 0.800000011920929);
    var$9 = new cbgu_Array;
    var$9.$ordered = 1;
    var$9.$items = $rt_createArray(jl_Object, 16);
    var$5.$keys = var$9;
    var$3.$fileMap = var$5;
    $assetDownload.$classpathStorage = var$3;
    var$3 = new cgxgbtft_LocalDBStorage;
    var$5 = new cbgu_Array;
    var$5.$ordered = 1;
    var$5.$items = $rt_createArray(jl_Object, 16);
    var$3.$tmpPaths = var$5;
    var$3.$debug = 0;
    var$5 = new cbgu_OrderedMap;
    cbgu_ObjectMap__init_(var$5, 51, 0.800000011920929);
    var$9 = new cbgu_Array;
    var$9.$ordered = 1;
    var$9.$items = $rt_createArray(jl_Object, 16);
    var$5.$keys = var$9;
    var$3.$fileMap = var$5;
    var$3.$dataBase = null;
    cgxgbtft_LocalDBStorage_setupIndexedDB(var$3, $this);
    $assetDownload.$localStorage = var$3;
    $assetDownload.$localStoragePrefix0 = $currentWindow.$localStoragePrefix;
    $this.$files = $assetDownload;
    $assetDownload = new cgxgbt_TeaNet;
    $currentWindow = new ju_HashMap;
    var$6 = ju_HashMap_calculateCapacity(16);
    $currentWindow.$elementCount = 0;
    var$7 = $rt_createArray(ju_HashMap$HashEntry, var$6);
    var$8 = var$7.data;
    $currentWindow.$elementData = var$7;
    $currentWindow.$loadFactor = 0.75;
    $currentWindow.$threshold = var$8.length * 0.75 | 0;
    $assetDownload.$httpResponseListeners = $currentWindow;
    $this.$net = $assetDownload;
    $this.$logger = new cgxgbt_TeaApplicationLogger;
    $this.$clipboard = cgxgbt_TeaClipboard__init_0();
    var$3 = $this.$assetLoader;
    $currentWindow = new cgxgbt_TeaApplication$4;
    $currentWindow.$this$046 = $this;
    var$5 = var$3.$assetDownloader;
    var$3 = var$3.$baseUrl;
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    var$6 = var$9.$length0;
    var$10 = var$9;
    var$3 = var$3 === null ? $rt_s(1) : jl_String_toString(var$3);
    var$10 = var$10;
    jl_StringBuilder_insert(var$10, var$6, var$3);
    jl_StringBuilder_insert(var$10, var$9.$length0, jl_String_toString($rt_s(96)));
    var$10 = new jl_String;
    var$8 = var$9.$buffer;
    var$7 = var$8.data;
    $indexQM = var$9.$length0;
    var$11 = var$7.length;
    if ($indexQM >= 0 && $indexQM <= (var$11 - 0 | 0)) {
        var$10.$nativeString = $rt_charArrayToString(var$8.data, 0, $indexQM);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$6 = var$3.$length0;
        var$9 = var$3;
        var$10 = var$10;
        var$9 = var$9;
        jl_StringBuilder_insert0(var$9, var$6, var$10);
        jl_StringBuilder_insert0(var$9, var$3.$length0, $rt_s(97));
        var$10 = new jl_String;
        var$8 = var$3.$buffer;
        var$7 = var$8.data;
        $indexQM = var$3.$length0;
        var$11 = var$7.length;
        if ($indexQM >= 0 && $indexQM <= (var$11 - 0 | 0)) {
            var$10.$nativeString = $rt_charArrayToString(var$8.data, 0, $indexQM);
            $assetDownload = var$5;
            if ($assetDownload.$showLogs) {
                if (jl_System_outCache === null) {
                    var$3 = new otcic_JSStdoutPrintStream;
                    var$5 = null;
                    var$9 = null;
                    ji_OutputStream__init_(var$3);
                    var$3.$out = var$5;
                    var$5 = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_(var$5);
                    var$3.$sb = var$5;
                    var$3.$buffer1 = $rt_createCharArray(32);
                    var$3.$autoFlush = 0;
                    var$3.$charset = var$9;
                    jl_System_outCache = var$3;
                }
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                var$6 = var$3.$length0;
                var$9 = var$3;
                var$5 = jl_String_toString($rt_s(98));
                var$9 = var$9;
                jl_StringBuilder_insert(var$9, var$6, var$5);
                jl_StringBuilder_insert(var$9, var$3.$length0, jl_String_toString(var$10));
                var$5 = new jl_String;
                var$8 = var$3.$buffer;
                var$7 = var$8.data;
                $indexQM = var$3.$length0;
                var$11 = var$7.length;
                if ($indexQM >= 0 && $indexQM <= (var$11 - 0 | 0)) {
                    var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, $indexQM);
                    $rt_putStdout($rt_ustr(var$5));
                    $rt_putStdout("\n");
                } else {
                    $assetDownload = new jl_IndexOutOfBoundsException;
                    jl_RuntimeException__init_($assetDownload);
                    $rt_throw($assetDownload);
                }
            }
            var$3 = new cgxgbta_AssetDownloadImpl$2;
            var$3.$this$00 = $assetDownload;
            var$3.$val$listener2 = $currentWindow;
            var$3.$val$url0 = var$10;
            $assetDownload.$queue = $assetDownload.$queue + 1 | 0;
            $currentWindow = new cgxgbta_AssetDownloadImpl$3;
            $currentWindow.$this$0 = $assetDownload;
            $currentWindow.$val$url = var$10;
            $currentWindow.$val$listener = var$3;
            $currentWindow.$val$count = 0;
            $assetDownload = null;
            var$3 = null;
            $currentWindow.$finishedLock = new jl_Object;
            $currentWindow.$alive = 1;
            $currentWindow.$name1 = var$3;
            $currentWindow.$target = $assetDownload;
            $indexQM = jl_Thread_nextId;
            jl_Thread_nextId = $indexQM + 1 | 0;
            $currentWindow.$id0 = Long_fromInt($indexQM);
            $assetDownload = $currentWindow;
            $currentWindow = new jl_Thread$start$lambda$_4_0;
            $currentWindow.$_0 = $assetDownload;
            otp_Platform_startThread($currentWindow);
            var$3 = $this.$assetLoader;
            $currentWindow = new cgxgbt_TeaApplication$5;
            $currentWindow.$this$029 = $this;
            var$5 = var$3.$assetDownloader;
            var$3 = var$3.$baseUrl;
            var$9 = new jl_StringBuilder;
            var$9.$buffer = $rt_createCharArray(16);
            var$6 = var$9.$length0;
            var$10 = var$9;
            var$3 = var$3 === null ? $rt_s(1) : jl_String_toString(var$3);
            var$10 = var$10;
            jl_StringBuilder_insert(var$10, var$6, var$3);
            jl_StringBuilder_insert(var$10, var$9.$length0, jl_String_toString($rt_s(96)));
            var$10 = new jl_String;
            var$8 = var$9.$buffer;
            var$7 = var$8.data;
            $indexQM = var$9.$length0;
            var$11 = var$7.length;
            if ($indexQM >= 0 && $indexQM <= (var$11 - 0 | 0)) {
                var$10.$nativeString = $rt_charArrayToString(var$8.data, 0, $indexQM);
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                var$6 = var$3.$length0;
                var$9 = var$3;
                var$10 = var$10;
                var$9 = var$9;
                jl_StringBuilder_insert0(var$9, var$6, var$10);
                jl_StringBuilder_insert0(var$9, var$3.$length0, $rt_s(99));
                var$9 = new jl_String;
                var$8 = var$3.$buffer;
                var$7 = var$8.data;
                $indexQM = var$3.$length0;
                var$11 = var$7.length;
                if ($indexQM >= 0 && $indexQM <= (var$11 - 0 | 0)) {
                    var$9.$nativeString = $rt_charArrayToString(var$8.data, 0, $indexQM);
                    $assetDownload = var$5;
                    if ($assetDownload.$showLogs) {
                        if (jl_System_outCache === null) {
                            var$3 = new otcic_JSStdoutPrintStream;
                            var$5 = null;
                            var$10 = null;
                            ji_OutputStream__init_(var$3);
                            var$3.$out = var$5;
                            var$5 = new jl_StringBuilder;
                            jl_AbstractStringBuilder__init_(var$5);
                            var$3.$sb = var$5;
                            var$3.$buffer1 = $rt_createCharArray(32);
                            var$3.$autoFlush = 0;
                            var$3.$charset = var$10;
                            jl_System_outCache = var$3;
                        }
                        var$3 = new jl_StringBuilder;
                        var$3.$buffer = $rt_createCharArray(16);
                        var$6 = var$3.$length0;
                        var$10 = var$3;
                        var$5 = jl_String_toString($rt_s(98));
                        var$10 = var$10;
                        jl_StringBuilder_insert(var$10, var$6, var$5);
                        jl_StringBuilder_insert(var$10, var$3.$length0, jl_String_toString(var$9));
                        var$5 = new jl_String;
                        var$8 = var$3.$buffer;
                        var$7 = var$8.data;
                        var$11 = var$3.$length0;
                        var$6 = var$7.length;
                        if (var$11 >= 0 && var$11 <= (var$6 - 0 | 0)) {
                            var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, var$11);
                            $rt_putStdout($rt_ustr(var$5));
                            $rt_putStdout("\n");
                        } else {
                            $assetDownload = new jl_IndexOutOfBoundsException;
                            jl_RuntimeException__init_($assetDownload);
                            $rt_throw($assetDownload);
                        }
                    }
                    var$3 = new cgxgbta_AssetDownloadImpl$2;
                    var$3.$this$00 = $assetDownload;
                    var$3.$val$listener2 = $currentWindow;
                    var$3.$val$url0 = var$9;
                    $assetDownload.$queue = $assetDownload.$queue + 1 | 0;
                    $currentWindow = new cgxgbta_AssetDownloadImpl$3;
                    $currentWindow.$this$0 = $assetDownload;
                    $currentWindow.$val$url = var$9;
                    $currentWindow.$val$listener = var$3;
                    $currentWindow.$val$count = 0;
                    $assetDownload = null;
                    var$3 = null;
                    $currentWindow.$finishedLock = new jl_Object;
                    $currentWindow.$alive = 1;
                    $currentWindow.$name1 = var$3;
                    $currentWindow.$target = $assetDownload;
                    $indexQM = jl_Thread_nextId;
                    jl_Thread_nextId = $indexQM + 1 | 0;
                    $currentWindow.$id0 = Long_fromInt($indexQM);
                    $assetDownload = $currentWindow;
                    $currentWindow = new jl_Thread$start$lambda$_4_0;
                    $currentWindow.$_0 = $assetDownload;
                    otp_Platform_startThread($currentWindow);
                    $assetDownload = $this.$config.$preloadListener;
                    if ($assetDownload !== null)
                        $assetDownload.$onPreload($this.$assetLoader);
                    cbg_Gdx_app = $this;
                    $assetDownload = $this.$graphics;
                    cbg_Gdx_graphics = $assetDownload;
                    $currentWindow = $assetDownload.$gl20;
                    cbg_Gdx_gl = $currentWindow;
                    cbg_Gdx_gl20 = $currentWindow;
                    cbg_Gdx_gl30 = $assetDownload.$gl30;
                    cbg_Gdx_input = $this.$input;
                    cbg_Gdx_files = $this.$files;
                    cbg_Gdx_net = $this.$net;
                    $assetDownload = new cgxgbt_DefaultTeaAudio;
                    $assetDownload.$webAudioAPIManager = null;
                    $assetDownload.$webAudioAPIManager = new cgxgbtwh_HowlerAudioManager;
                    $this.$audio = $assetDownload;
                    cbg_Gdx_audio = $assetDownload;
                    $assetDownload = $this.$window0;
                    var$3 = new cgxgbt_TeaApplication$1;
                    var$3.$this$017 = $this;
                    var$3 = otji_JS_functionAsObject(!(var$3 instanceof otji_JSWrapper) ? var$3 : var$3.$js, "handleEvent");
                    $assetDownload.$window.addEventListener("pagehide", otji_JS_function(var$3, "handleEvent"));
                    var$9 = $this.$window0.$window.document;
                    $currentWindow = new cgxgbt_TeaApplication$2;
                    $currentWindow.$this$04 = $this;
                    var$3 = "addEventListener";
                    $assetDownload = "visibilitychange";
                    var$5 = !($currentWindow instanceof otji_JSWrapper) ? $currentWindow : $currentWindow.$js;
                    var$9[var$3]($assetDownload, otji_JS_function(var$5, "handleEvent"));
                    $assetDownload = $this.$config;
                    if (!$assetDownload.$width2 && !$assetDownload.$height2 ? 1 : 0) {
                        $assetDownload = $this.$window0;
                        var$3 = new cgxgbt_TeaApplication$3;
                        var$3.$this$01 = $this;
                        var$3 = otji_JS_functionAsObject(!(var$3 instanceof otji_JSWrapper) ? var$3 : var$3.$js, "handleEvent");
                        $assetDownload.$window.addEventListener("resize", otji_JS_function(var$3, "handleEvent"));
                    }
                    $assetDownload = $this.$window0;
                    $assetDownload.$runnable = $this;
                    requestAnimationFrame(otji_JS_function(!($assetDownload instanceof otji_JSWrapper) ? $assetDownload : $assetDownload.$js, "onAnimationFrame"));
                    return;
                }
                $assetDownload = new jl_IndexOutOfBoundsException;
                jl_Exception__init_0($assetDownload);
                $rt_throw($assetDownload);
            }
            $assetDownload = new jl_IndexOutOfBoundsException;
            jl_RuntimeException__init_($assetDownload);
            $rt_throw($assetDownload);
        }
        $assetDownload = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0($assetDownload);
        $rt_throw($assetDownload);
    }
    $assetDownload = new jl_IndexOutOfBoundsException;
    jl_RuntimeException__init_($assetDownload);
    $rt_throw($assetDownload);
},
cgxgbt_TeaApplication_run = $this => {
    let $state, $queue, $element, $total, $percentage, $progressBar, $t, $$je;
    $state = $this.$initState;
    a: {
        try {
            b: {
                c: {
                    d: {
                        cgxgbt_TeaApplication$6_$callClinit();
                        switch (cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal($state)]) {
                            case 1:
                                if ($this.$delayInitCount)
                                    break b;
                                $this.$initState = cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS;
                                break b;
                            case 2:
                                break;
                            case 3:
                                break c;
                            case 4:
                                break d;
                            default:
                                break b;
                        }
                        cgxgbta_AssetLoadImpl_preload($this.$assetLoader, $this.$config, $rt_s(100));
                        $this.$initState = cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS;
                        break b;
                    }
                    if ($this.$queueAppListener !== null) {
                        $state = $this.$appListener;
                        if ($state !== null) {
                            cbg_Game_pause($state);
                            cbg_Game_dispose($this.$appListener);
                        }
                        cgxgbt_TeaInput_setInputProcessor($this.$input, null);
                        cgxgbt_TeaInput_reset($this.$input);
                        cbgu_Array_clear($this.$runnables);
                        $this.$appListener = $this.$queueAppListener;
                        $this.$queueAppListener = null;
                        $this.$initState = cgxgbt_TeaApplication$AppState_APP_CREATE;
                        $this.$graphics.$frameId = Long_ZERO;
                    }
                    $state = $this.$appListener;
                    if ($state === null)
                        break b;
                    cgxgbt_TeaApplication_step($this, $state);
                    break b;
                }
                $queue = cgxgbta_AssetLoadImpl_getQueue($this.$assetLoader);
                if (!$queue) {
                    $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
                    $element = window.document.getElementById("progress");
                    if ($element !== null)
                        $element.style.setProperty("display", "none");
                } else {
                    $total = $this.$assetLoader.$assetTotal;
                    if ($total > 0) {
                        $percentage = 25 + ((75 * ($total - $queue | 0) | 0) / $total | 0) | 0;
                        $progressBar = window.document.getElementById("progress-bar");
                        if ($progressBar !== null) {
                            $t = $progressBar.style;
                            $element = jl_StringBuilder__init_();
                            jl_StringBuilder_append2(jl_StringBuilder_append1($element, $percentage), 37);
                            $t.setProperty("width", $rt_ustr(jl_StringBuilder_toString($element)));
                        }
                    }
                }
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $t = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        $state = $this.$window0;
        $state.$runnable = $this;
        requestAnimationFrame(otji_JS_function(!($state instanceof otji_JSWrapper) ? $state : $state.$js, "onAnimationFrame"));
        return;
    }
    if (jl_System_errCache === null) {
        $state = new otcic_JSStderrPrintStream;
        $element = null;
        $progressBar = null;
        $state.$out = $element;
        $element = new jl_StringBuilder;
        jl_Object__init_($element);
        $element.$buffer = $rt_createCharArray(16);
        $state.$sb = $element;
        $state.$buffer1 = $rt_createCharArray(32);
        $state.$autoFlush = 0;
        $state.$charset = $progressBar;
        jl_System_errCache = $state;
    }
    jl_Throwable_printStackTrace($t, jl_System_errCache);
    $rt_throw($t);
},
cgxgbt_TeaApplication_step = ($this, $appListener) => {
    let var$2, var$3, $resizeBypass, var$5, var$6, var$7, $i, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18;
    cgxgbt_TeaGraphics_update($this.$graphics);
    var$2 = cbg_Gdx_graphics.$canvas.width;
    var$3 = cbg_Gdx_graphics.$canvas.height;
    $resizeBypass = 0;
    if ($this.$initState === cgxgbt_TeaApplication$AppState_APP_CREATE) {
        $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
        cgt_SpeedDemo_create($appListener);
        $resizeBypass = 1;
    }
    if (!(var$2 == $this.$lastWidth && var$3 == $this.$lastHeight && !$resizeBypass)) {
        $this.$lastWidth = var$2;
        $this.$lastHeight = var$3;
        cbg_Gdx_gl.$glViewport(0, 0, var$2, var$3);
        var$5 = $appListener.$screen;
        if (var$5 !== null)
            var$5.$resize0(var$2, var$3);
    }
    var$5 = $this.$runnablesHelper;
    var$6 = $this.$runnables;
    var$7 = var$6.$items;
    $i = var$6.$size;
    var$9 = var$5.$items;
    var$10 = var$9.data;
    var$11 = var$5.$size;
    var$3 = var$11 + $i | 0;
    if (var$3 <= var$10.length)
        var$10 = var$9;
    else {
        var$12 = 8;
        if (var$12 <= var$3)
            var$12 = var$3;
        var$11 = var$11 * 1.75 | 0;
        if (var$12 > var$11)
            var$11 = var$12;
        var$13 = var$9.constructor;
        if (var$13 === null)
            var$6 = null;
        else {
            var$6 = var$13.classObject;
            if (var$6 === null) {
                var$6 = new jl_Class;
                var$6.$platformClass = var$13;
                var$13.classObject = var$6;
            }
        }
        var$14 = var$6.$platformClass.$meta.item;
        if (var$14 === null)
            var$13 = null;
        else {
            var$13 = var$14.classObject;
            if (var$13 === null) {
                var$13 = new jl_Class;
                var$13.$platformClass = var$14;
                var$14.classObject = var$13;
            }
        }
        if (var$13 === null) {
            $appListener = new jl_NullPointerException;
            jl_Throwable__init_($appListener);
            $rt_throw($appListener);
        }
        if (var$13 === $rt_cls($rt_voidcls)) {
            $appListener = new jl_IllegalArgumentException;
            jl_Throwable__init_($appListener);
            $rt_throw($appListener);
        }
        if (var$11 < 0) {
            $appListener = new jl_NegativeArraySizeException;
            jl_Throwable__init_($appListener);
            $rt_throw($appListener);
        }
        var$10 = jlr_Array_newInstanceImpl(var$13.$platformClass, var$11);
        var$15 = var$10.data;
        var$11 = var$5.$size;
        var$16 = var$15.length;
        if (var$11 < var$16)
            var$16 = var$11;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, var$16);
        var$5.$items = var$10;
    }
    jl_System_fastArraycopy(var$7, 0, var$10, var$5.$size, $i);
    var$5.$size = var$3;
    var$5 = $this.$runnables;
    var$9 = var$5.$items;
    $i = 0;
    var$3 = var$5.$size;
    var$6 = null;
    if ($i > var$3) {
        $appListener = new jl_IllegalArgumentException;
        $appListener.$suppressionEnabled = 1;
        $appListener.$writableStackTrace = 1;
        $rt_throw($appListener);
    }
    while ($i < var$3) {
        var$7 = var$9.data;
        $resizeBypass = $i + 1 | 0;
        var$7[$i] = var$6;
        $i = $resizeBypass;
    }
    var$5.$size = 0;
    $i = 0;
    while (true) {
        var$5 = $this.$runnablesHelper;
        $resizeBypass = var$5.$size;
        var$3 = $rt_compare($i, $resizeBypass);
        if (var$3 >= 0)
            break;
        if (var$3 >= 0) {
            var$6 = new jl_IndexOutOfBoundsException;
            $appListener = new jl_StringBuilder;
            $appListener.$buffer = $rt_createCharArray(16);
            $resizeBypass = $appListener.$length0;
            var$17 = $appListener;
            jl_AbstractStringBuilder_insert(var$17, $resizeBypass, $rt_s(31));
            jl_AbstractStringBuilder_insert0($appListener, $appListener.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$17, $appListener.$length0, $rt_s(32));
            $resizeBypass = var$5.$size;
            jl_AbstractStringBuilder_insert0($appListener, $appListener.$length0, $resizeBypass, 10);
            var$5 = new jl_String;
            var$7 = $appListener.$buffer;
            var$9 = var$7.data;
            $i = $appListener.$length0;
            var$3 = var$9.length;
            if ($i >= 0 && $i <= (var$3 - 0 | 0)) {
                var$5.$nativeString = $rt_charArrayToString(var$7.data, 0, $i);
                var$6.$suppressionEnabled = 1;
                var$6.$writableStackTrace = 1;
                var$6.$message = var$5;
                $rt_throw(var$6);
            }
            $appListener = new jl_IndexOutOfBoundsException;
            jl_Throwable__init_($appListener);
            $rt_throw($appListener);
        }
        cgxgbt_TeaApplication_run(var$5.$items.data[$i]);
        $i = $i + 1 | 0;
    }
    var$7 = var$5.$items;
    $i = 0;
    var$6 = null;
    if ($i > $resizeBypass) {
        $appListener = new jl_IllegalArgumentException;
        $appListener.$suppressionEnabled = 1;
        $appListener.$writableStackTrace = 1;
        $rt_throw($appListener);
    }
    while ($i < $resizeBypass) {
        var$9 = var$7.data;
        var$3 = $i + 1 | 0;
        var$9[$i] = var$6;
        $i = var$3;
    }
    var$5.$size = 0;
    var$5 = $this.$graphics;
    var$18 = Long_add(var$5.$frameId, Long_fromInt(1));
    var$5.$frameId = var$18;
    if (Long_gt(var$18, Long_fromInt(60))) {
        var$5 = $appListener.$screen;
        if (var$5 !== null)
            var$5.$render(cbg_Gdx_graphics.$deltaTime);
    }
    cgxgbt_TeaInput_reset($this.$input);
},
cbg_ApplicationListener = $rt_classWithoutFields(0);
function cbg_Game() {
    jl_Object.call(this);
    this.$screen = null;
}
let cbg_Game_dispose = $this => {
    return;
},
cbg_Game_pause = $this => {
    return;
};
function cgt_SpeedDemo() {
    let a = this; cbg_Game.call(a);
    a.$screens = null;
    a.$screenIndex = 0;
    a.$font0 = null;
    a.$batch = null;
}
let cgt_SpeedDemo_create = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    cbg_Gdx_app.$logLevel = 1;
    var$1 = new cbggg_BitmapFont;
    var$2 = cbggg_BitmapFont$BitmapFontData__init_(cgxgbt_TeaFileHandle__init_(cbg_Gdx_files, $rt_s(101), cbg_Files$FileType_Internal), 0);
    var$3 = null;
    if (var$3 === null)
        var$3 = null;
    else {
        var$4 = $rt_createArray(cbggg_TextureRegion, 1);
        var$5 = var$4.data;
        var$5[0] = var$3;
        var$3 = new cbgu_Array;
        var$6 = var$5.length;
        var$7 = var$4.constructor;
        if (var$7 === null)
            var$8 = null;
        else {
            var$8 = var$7.classObject;
            if (var$8 === null)
                var$8 = jl_Class__init_(var$7);
        }
        var$7 = var$8.$platformClass.$meta.item;
        if (var$7 === null)
            var$8 = null;
        else {
            var$8 = var$7.classObject;
            if (var$8 === null)
                var$8 = jl_Class__init_(var$7);
        }
        var$3.$ordered = 1;
        var$5 = jlr_Array_newInstance(var$8, var$6);
        var$3.$items = var$5;
        var$3.$size = var$6;
        jl_System_fastArraycopy(var$4, 0, var$5, 0, var$6);
    }
    cbggg_BitmapFont__init_(var$1, var$2, var$3, 1);
    $this.$font0 = var$1;
    var$2 = cbgg_Color_BLACK;
    var$3 = var$1.$cache.$color;
    var$3.$r = var$2.$r;
    var$3.$g = var$2.$g;
    var$3.$b = var$2.$b;
    var$3.$a = var$2.$a;
    var$2 = new cbggg_SpriteBatch;
    cbggg_SpriteBatch_$callClinit();
    cbggg_SpriteBatch__init_(var$2, 1000, null);
    $this.$batch = var$2;
    var$4 = $rt_createArray(cbg_Screen, 36);
    var$5 = var$4.data;
    var$2 = new cgtf_RandomScreen;
    var$2.$amounts29 = $rt_createLongArray(512);
    var$2.$iterations3 = Long_ZERO;
    var$2.$mainGame0 = $this;
    var$5[0] = var$2;
    var$2 = new cgtf_ChipScreen;
    var$2.$amounts33 = $rt_createLongArray(512);
    var$2.$iterations7 = Long_ZERO;
    var$2.$mainGame = $this;
    var$5[1] = var$2;
    var$2 = new cgtf_ChopScreen;
    var$2.$amounts0 = $rt_createLongArray(512);
    var$2.$iterations = Long_ZERO;
    var$2.$mainGame15 = $this;
    var$5[2] = var$2;
    var$2 = new cgtf_Xoshiro128PPScreen;
    var$2.$amounts9 = $rt_createLongArray(512);
    var$2.$iterations2 = Long_ZERO;
    var$2.$mainGame4 = $this;
    var$5[3] = var$2;
    var$2 = new cgtf_RarxScreen;
    var$2.$amounts23 = $rt_createLongArray(512);
    var$2.$iterations21 = Long_ZERO;
    var$2.$mainGame7 = $this;
    var$5[4] = var$2;
    var$2 = new cgtf_AceScreen;
    var$2.$amounts = $rt_createLongArray(512);
    var$2.$iterations33 = Long_ZERO;
    var$2.$mainGame16 = $this;
    var$5[5] = var$2;
    var$2 = new cgte_RandomScreen;
    var$2.$amounts27 = $rt_createLongArray(512);
    var$2.$iterations34 = Long_ZERO;
    var$2.$mainGame9 = $this;
    var$5[6] = var$2;
    var$2 = new cgte_ChipScreen;
    var$2.$amounts14 = $rt_createLongArray(512);
    var$2.$iterations14 = Long_ZERO;
    var$2.$mainGame3 = $this;
    var$5[7] = var$2;
    var$2 = new cgte_ChopScreen;
    var$2.$amounts11 = $rt_createLongArray(512);
    var$2.$iterations4 = Long_ZERO;
    var$2.$mainGame28 = $this;
    var$5[8] = var$2;
    var$2 = new cgte_Xoshiro128PPScreen;
    var$2.$amounts34 = $rt_createLongArray(512);
    var$2.$iterations11 = Long_ZERO;
    var$2.$mainGame14 = $this;
    var$5[9] = var$2;
    var$2 = new cgte_RarxScreen;
    var$2.$amounts10 = $rt_createLongArray(512);
    var$2.$iterations19 = Long_ZERO;
    var$2.$mainGame30 = $this;
    var$5[10] = var$2;
    var$2 = new cgte_AceScreen;
    var$2.$amounts13 = $rt_createLongArray(512);
    var$2.$iterations28 = Long_ZERO;
    var$2.$mainGame13 = $this;
    var$5[11] = var$2;
    var$2 = new cgtd_RandomScreen;
    var$2.$amounts3 = $rt_createLongArray(512);
    var$2.$iterations16 = Long_ZERO;
    var$2.$mainGame11 = $this;
    var$5[12] = var$2;
    var$2 = new cgtd_ChipScreen;
    var$2.$amounts26 = $rt_createLongArray(512);
    var$2.$iterations25 = Long_ZERO;
    var$2.$mainGame19 = $this;
    var$5[13] = var$2;
    var$2 = new cgtd_ChopScreen;
    var$2.$amounts31 = $rt_createLongArray(512);
    var$2.$iterations32 = Long_ZERO;
    var$2.$mainGame1 = $this;
    var$5[14] = var$2;
    var$2 = new cgtd_Xoshiro128PPScreen;
    var$2.$amounts28 = $rt_createLongArray(512);
    var$2.$iterations20 = Long_ZERO;
    var$2.$mainGame17 = $this;
    var$5[15] = var$2;
    var$2 = new cgtd_RarxScreen;
    var$2.$amounts22 = $rt_createLongArray(512);
    var$2.$iterations6 = Long_ZERO;
    var$2.$mainGame10 = $this;
    var$5[16] = var$2;
    var$2 = new cgtd_AceScreen;
    var$2.$amounts8 = $rt_createLongArray(512);
    var$2.$iterations23 = Long_ZERO;
    var$2.$mainGame29 = $this;
    var$5[17] = var$2;
    var$2 = new cgti_RandomScreen;
    var$2.$amounts1 = $rt_createLongArray(512);
    var$2.$iterations26 = Long_ZERO;
    var$2.$mainGame20 = $this;
    var$5[18] = var$2;
    var$2 = new cgti_ChipScreen;
    var$2.$amounts7 = $rt_createLongArray(512);
    var$2.$iterations18 = Long_ZERO;
    var$2.$mainGame34 = $this;
    var$5[19] = var$2;
    var$2 = new cgti_ChopScreen;
    var$2.$amounts20 = $rt_createLongArray(512);
    var$2.$iterations10 = Long_ZERO;
    var$2.$mainGame24 = $this;
    var$5[20] = var$2;
    var$2 = new cgti_Xoshiro128PPScreen;
    var$2.$amounts19 = $rt_createLongArray(512);
    var$2.$iterations5 = Long_ZERO;
    var$2.$mainGame8 = $this;
    var$5[21] = var$2;
    var$2 = new cgti_RarxScreen;
    var$2.$amounts5 = $rt_createLongArray(512);
    var$2.$iterations29 = Long_ZERO;
    var$2.$mainGame22 = $this;
    var$5[22] = var$2;
    var$2 = new cgti_AceScreen;
    var$2.$amounts6 = $rt_createLongArray(512);
    var$2.$iterations1 = Long_ZERO;
    var$2.$mainGame2 = $this;
    var$5[23] = var$2;
    var$2 = new cgtl_RandomScreen;
    var$2.$amounts2 = $rt_createLongArray(512);
    var$2.$iterations9 = Long_ZERO;
    var$2.$mainGame12 = $this;
    var$5[24] = var$2;
    var$2 = new cgtl_ChipScreen;
    var$2.$amounts18 = $rt_createLongArray(512);
    var$2.$iterations31 = Long_ZERO;
    var$2.$mainGame23 = $this;
    var$5[25] = var$2;
    var$2 = new cgtl_ChopScreen;
    var$2.$amounts15 = $rt_createLongArray(512);
    var$2.$iterations24 = Long_ZERO;
    var$2.$mainGame32 = $this;
    var$5[26] = var$2;
    var$2 = new cgtl_Xoshiro128PPScreen;
    var$2.$amounts16 = $rt_createLongArray(512);
    var$2.$iterations17 = Long_ZERO;
    var$2.$mainGame26 = $this;
    var$5[27] = var$2;
    var$2 = new cgtl_RarxScreen;
    var$2.$amounts17 = $rt_createLongArray(512);
    var$2.$iterations0 = Long_ZERO;
    var$2.$mainGame31 = $this;
    var$5[28] = var$2;
    var$2 = new cgtl_AceScreen;
    var$2.$amounts24 = $rt_createLongArray(512);
    var$2.$iterations27 = Long_ZERO;
    var$2.$mainGame5 = $this;
    var$5[29] = var$2;
    var$2 = new cgtu_RandomScreen;
    var$2.$amounts30 = $rt_createLongArray(512);
    var$2.$iterations15 = Long_ZERO;
    var$2.$mainGame18 = $this;
    var$5[30] = var$2;
    var$2 = new cgtu_ChipScreen;
    var$2.$amounts21 = $rt_createLongArray(512);
    var$2.$iterations22 = Long_ZERO;
    var$2.$mainGame21 = $this;
    var$5[31] = var$2;
    var$2 = new cgtu_ChopScreen;
    var$2.$amounts25 = $rt_createLongArray(512);
    var$2.$iterations13 = Long_ZERO;
    var$2.$mainGame27 = $this;
    var$5[32] = var$2;
    var$2 = new cgtu_Xoshiro128PPScreen;
    var$2.$amounts12 = $rt_createLongArray(512);
    var$2.$iterations30 = Long_ZERO;
    var$2.$mainGame6 = $this;
    var$5[33] = var$2;
    var$2 = new cgtu_RarxScreen;
    var$2.$amounts32 = $rt_createLongArray(512);
    var$2.$iterations8 = Long_ZERO;
    var$2.$mainGame33 = $this;
    var$5[34] = var$2;
    var$2 = new cgtu_AceScreen;
    var$2.$amounts4 = $rt_createLongArray(512);
    var$2.$iterations12 = Long_ZERO;
    var$2.$mainGame25 = $this;
    var$5[35] = var$2;
    $this.$screens = var$4;
    $this.$screenIndex = 0;
    var$2 = var$5[0];
    var$3 = $this;
    var$3.$screen = var$2;
    if (var$2 !== null) {
        var$2.$show();
        var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
    }
},
cgxgbtu_TeaNavigator = $rt_classWithoutFields();
function jl_Float() {
    jl_Number.call(this);
    this.$value3 = 0.0;
}
let jl_Float_TYPE = null,
jl_Float_floatValue = $this => {
    return $this.$value3;
},
jl_Float_parseFloat = $string => {
    let $start, $end, var$4, $negative, $c, $mantissa, $exp, $mantissaPos, $hasOneDigit, $negativeExp, $numExp;
    if ($string.$nativeString.length ? 0 : 1) {
        $string = new jl_NumberFormatException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    $start = 0;
    $end = $string.$nativeString.length;
    while ($start >= 0 && $start < $string.$nativeString.length) {
        if ($string.$nativeString.charCodeAt($start) > 32) {
            while (true) {
                var$4 = $end - 1 | 0;
                if (var$4 < 0)
                    break;
                if (var$4 >= $string.$nativeString.length)
                    break;
                if ($string.$nativeString.charCodeAt(var$4) > 32) {
                    $negative = 0;
                    if ($start >= 0 && $start < $string.$nativeString.length) {
                        if ($string.$nativeString.charCodeAt($start) == 45) {
                            $start = $start + 1 | 0;
                            $negative = 1;
                        } else if (!($start >= 0 && $start < $string.$nativeString.length)) {
                            $string = new jl_StringIndexOutOfBoundsException;
                            $string.$suppressionEnabled = 1;
                            $string.$writableStackTrace = 1;
                            $rt_throw($string);
                        } else if ($string.$nativeString.charCodeAt($start) == 43)
                            $start = $start + 1 | 0;
                        if ($start == $end) {
                            $string = new jl_NumberFormatException;
                            $string.$suppressionEnabled = 1;
                            $string.$writableStackTrace = 1;
                            $rt_throw($string);
                        }
                        if ($start >= 0 && $start < $string.$nativeString.length) {
                            a: {
                                $c = $string.$nativeString.charCodeAt($start);
                                $mantissa = 0;
                                $exp = (-1);
                                $mantissaPos = 100000000;
                                $hasOneDigit = 0;
                                if ($c != 46) {
                                    $hasOneDigit = 1;
                                    if ($c >= 48 && $c <= 57) {
                                        b: {
                                            while (true) {
                                                if ($start >= $end)
                                                    break b;
                                                if ($start < 0)
                                                    break;
                                                if ($start >= $string.$nativeString.length)
                                                    break;
                                                if ($string.$nativeString.charCodeAt($start) != 48)
                                                    break b;
                                                $start = $start + 1 | 0;
                                            }
                                            $string = new jl_StringIndexOutOfBoundsException;
                                            $string.$suppressionEnabled = 1;
                                            $string.$writableStackTrace = 1;
                                            $rt_throw($string);
                                        }
                                        while (true) {
                                            if ($start >= $end)
                                                break a;
                                            if ($start < 0)
                                                break;
                                            if ($start >= $string.$nativeString.length)
                                                break;
                                            $c = $string.$nativeString.charCodeAt($start);
                                            if ($c < 48)
                                                break a;
                                            if ($c > 57)
                                                break a;
                                            if ($mantissaPos > 0) {
                                                $mantissa = $mantissa + $rt_imul($mantissaPos, $c - 48 | 0) | 0;
                                                $mantissaPos = $rt_udiv($mantissaPos, 10);
                                            }
                                            $exp = $exp + 1 | 0;
                                            $start = $start + 1 | 0;
                                        }
                                        $string = new jl_StringIndexOutOfBoundsException;
                                        $string.$suppressionEnabled = 1;
                                        $string.$writableStackTrace = 1;
                                        $rt_throw($string);
                                    }
                                    $string = new jl_NumberFormatException;
                                    $string.$suppressionEnabled = 1;
                                    $string.$writableStackTrace = 1;
                                    $rt_throw($string);
                                }
                            }
                            if ($start < $end) {
                                if (!($start >= 0 && $start < $string.$nativeString.length)) {
                                    $string = new jl_StringIndexOutOfBoundsException;
                                    $string.$suppressionEnabled = 1;
                                    $string.$writableStackTrace = 1;
                                    $rt_throw($string);
                                } else if ($string.$nativeString.charCodeAt($start) == 46) {
                                    $start = $start + 1 | 0;
                                    c: {
                                        while (true) {
                                            if ($start >= $end)
                                                break c;
                                            if ($start < 0)
                                                break;
                                            if ($start >= $string.$nativeString.length)
                                                break;
                                            $negativeExp = $string.$nativeString.charCodeAt($start);
                                            var$4 = $rt_compare($negativeExp, 48);
                                            if (var$4 < 0)
                                                break c;
                                            if ($negativeExp > 57)
                                                break c;
                                            if (!$mantissa && !var$4)
                                                $exp = $exp + (-1) | 0;
                                            else if ($mantissaPos > 0) {
                                                $mantissa = $mantissa + $rt_imul($mantissaPos, $negativeExp - 48 | 0) | 0;
                                                $mantissaPos = $rt_udiv($mantissaPos, 10);
                                            }
                                            $start = $start + 1 | 0;
                                            $hasOneDigit = 1;
                                        }
                                        $string = new jl_StringIndexOutOfBoundsException;
                                        $string.$suppressionEnabled = 1;
                                        $string.$writableStackTrace = 1;
                                        $rt_throw($string);
                                    }
                                    if (!$hasOneDigit) {
                                        $string = new jl_NumberFormatException;
                                        $string.$suppressionEnabled = 1;
                                        $string.$writableStackTrace = 1;
                                        $rt_throw($string);
                                    }
                                }
                            }
                            d: {
                                if ($start < $end) {
                                    if ($start >= 0 && $start < $string.$nativeString.length) {
                                        var$4 = $string.$nativeString.charCodeAt($start);
                                        if (var$4 != 101 && var$4 != 69) {
                                            $string = new jl_NumberFormatException;
                                            $string.$suppressionEnabled = 1;
                                            $string.$writableStackTrace = 1;
                                            $rt_throw($string);
                                        }
                                        $start = $start + 1 | 0;
                                        $negativeExp = 0;
                                        if ($start == $end) {
                                            $string = new jl_NumberFormatException;
                                            $string.$suppressionEnabled = 1;
                                            $string.$writableStackTrace = 1;
                                            $rt_throw($string);
                                        }
                                        if ($start >= 0 && $start < $string.$nativeString.length) {
                                            if ($string.$nativeString.charCodeAt($start) == 45) {
                                                $start = $start + 1 | 0;
                                                $negativeExp = 1;
                                            } else if (!($start >= 0 && $start < $string.$nativeString.length)) {
                                                $string = new jl_StringIndexOutOfBoundsException;
                                                $string.$suppressionEnabled = 1;
                                                $string.$writableStackTrace = 1;
                                                $rt_throw($string);
                                            } else if ($string.$nativeString.charCodeAt($start) == 43)
                                                $start = $start + 1 | 0;
                                            $numExp = 0;
                                            $c = 0;
                                            e: {
                                                while (true) {
                                                    if ($start >= $end)
                                                        break e;
                                                    if ($start < 0)
                                                        break;
                                                    if ($start >= $string.$nativeString.length)
                                                        break;
                                                    var$4 = $string.$nativeString.charCodeAt($start);
                                                    if (var$4 < 48)
                                                        break e;
                                                    if (var$4 > 57)
                                                        break e;
                                                    $numExp = (10 * $numExp | 0) + (var$4 - 48 | 0) | 0;
                                                    $c = 1;
                                                    $start = $start + 1 | 0;
                                                }
                                                $string = new jl_StringIndexOutOfBoundsException;
                                                $string.$suppressionEnabled = 1;
                                                $string.$writableStackTrace = 1;
                                                $rt_throw($string);
                                            }
                                            if (!$c) {
                                                $string = new jl_NumberFormatException;
                                                $string.$suppressionEnabled = 1;
                                                $string.$writableStackTrace = 1;
                                                $rt_throw($string);
                                            }
                                            if ($negativeExp)
                                                $numExp =  -$numExp | 0;
                                            $exp = $exp + $numExp | 0;
                                            break d;
                                        }
                                        $string = new jl_StringIndexOutOfBoundsException;
                                        $string.$suppressionEnabled = 1;
                                        $string.$writableStackTrace = 1;
                                        $rt_throw($string);
                                    }
                                    $string = new jl_StringIndexOutOfBoundsException;
                                    $string.$suppressionEnabled = 1;
                                    $string.$writableStackTrace = 1;
                                    $rt_throw($string);
                                }
                            }
                            return otcit_FloatSynthesizer_synthesizeFloat($mantissa, $exp, $negative);
                        }
                        $string = new jl_StringIndexOutOfBoundsException;
                        $string.$suppressionEnabled = 1;
                        $string.$writableStackTrace = 1;
                        $rt_throw($string);
                    }
                    $string = new jl_StringIndexOutOfBoundsException;
                    $string.$suppressionEnabled = 1;
                    $string.$writableStackTrace = 1;
                    $rt_throw($string);
                }
                $end = $end + (-1) | 0;
            }
            $string = new jl_StringIndexOutOfBoundsException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
        $start = $start + 1 | 0;
        if ($start == $end) {
            $string = new jl_NumberFormatException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
    }
    $string = new jl_StringIndexOutOfBoundsException;
    $string.$suppressionEnabled = 1;
    $string.$writableStackTrace = 1;
    $rt_throw($string);
},
jl_Float__clinit_ = () => {
    jl_Float_TYPE = $rt_cls($rt_floatcls);
},
cbgu_Pools = $rt_classWithoutFields(),
cbgu_Pools_typePools = null,
cbgu_Pools_$callClinit = () => {
    cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
    cbgu_Pools__clinit_();
},
cbgu_Pools_freeAll = ($objects, $samePool) => {
    let $pool, $i, $n, var$6, var$7, var$8, var$9, $object, var$11, var$12, var$13;
    cbgu_Pools_$callClinit();
    if ($objects === null) {
        $pool = new jl_IllegalArgumentException;
        $pool.$suppressionEnabled = 1;
        $pool.$writableStackTrace = 1;
        $pool.$message = $rt_s(30);
        $rt_throw($pool);
    }
    $pool = null;
    $i = 0;
    $n = $objects.$size;
    while ($i < $n) {
        if ($i >= $objects.$size) {
            $pool = new jl_IndexOutOfBoundsException;
            var$6 = new jl_StringBuilder;
            var$6.$buffer = $rt_createCharArray(16);
            $samePool = var$6.$length0;
            var$7 = var$6;
            jl_AbstractStringBuilder_insert(var$7, $samePool, $rt_s(31));
            jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(32));
            $samePool = $objects.$size;
            jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $samePool, 10);
            $objects = new jl_String;
            var$8 = var$6.$buffer;
            var$9 = var$8.data;
            $i = var$6.$length0;
            $n = var$9.length;
            if ($i >= 0 && $i <= ($n - 0 | 0)) {
                $objects.$nativeString = $rt_charArrayToString(var$8.data, 0, $i);
                $pool.$suppressionEnabled = 1;
                $pool.$writableStackTrace = 1;
                $pool.$message = $objects;
                $rt_throw($pool);
            }
            $objects = new jl_IndexOutOfBoundsException;
            $objects.$suppressionEnabled = 1;
            $objects.$writableStackTrace = 1;
            $rt_throw($objects);
        }
        a: {
            $object = $objects.$items.data[$i];
            if ($object !== null) {
                if ($pool === null) {
                    $pool = cbgu_Pools_typePools;
                    var$7 = $object.constructor;
                    if (var$7 === null)
                        var$11 = null;
                    else {
                        var$11 = var$7.classObject;
                        if (var$11 === null) {
                            var$11 = new jl_Class;
                            var$11.$platformClass = var$7;
                            var$7.classObject = var$11;
                        }
                    }
                    var$12 = cbgu_ObjectMap_locateKey($pool, var$11);
                    $pool = var$12 < 0 ? null : $pool.$valueTable.data[var$12];
                    if ($pool === null)
                        break a;
                }
                var$11 = $pool.$freeObjects;
                if (var$11.$size < $pool.$max1) {
                    cbgu_Array_add(var$11, $object);
                    var$12 = $pool.$peak;
                    var$13 = $pool.$freeObjects.$size;
                    if (var$12 > var$13)
                        var$13 = var$12;
                    $pool.$peak = var$13;
                    if ($rt_isInstance($object, cbgu_Pool$Poolable))
                        $object.$reset();
                } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
                    $object.$reset();
                if (!$samePool)
                    $pool = null;
            }
        }
        $i = $i + 1 | 0;
    }
},
cbgu_Pools__clinit_ = () => {
    cbgu_Pools_typePools = cbgu_ObjectMap__init_0(51, 0.800000011920929);
};
function cbgu_FloatArray() {
    let a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size2 = 0;
    a.$ordered1 = 0;
}
let cbgu_FloatArray_add = ($this, $value) => {
    let $items, var$3, var$4, var$5, var$6;
    $items = $this.$items1;
    var$3 = $items.data;
    var$4 = $this.$size2;
    if (var$4 != var$3.length)
        var$3 = $items;
    else {
        var$5 = var$4 * 1.75 | 0;
        if (8 > var$5)
            var$5 = 8;
        var$3 = $rt_createFloatArray(var$5);
        var$6 = var$3.data.length;
        if (var$4 < var$6)
            var$6 = var$4;
        jl_System_fastArraycopy($items, 0, var$3, 0, var$6);
        $this.$items1 = var$3;
    }
    $items = var$3.data;
    var$5 = $this.$size2;
    $this.$size2 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_FloatArray_addAll0 = ($this, $array, $offset, $length) => {
    let var$4, var$5, var$6, var$7, var$8, var$9;
    if (($offset + $length | 0) <= $array.$size2) {
        cbgu_FloatArray_addAll($this, $array.$items1, $offset, $length);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$6 = var$5.$length0;
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$6, $rt_s(102));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $offset, 10);
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(47));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $length, 10);
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(48));
    var$6 = $array.$size2;
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, var$6, 10);
    $array = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $length = var$5.$length0;
    var$6 = var$9.length;
    if ($length >= 0 && $length <= (var$6 - 0 | 0)) {
        $array.$nativeString = $rt_charArrayToString(var$8.data, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = $array;
        $rt_throw(var$4);
    }
    $array = new jl_IndexOutOfBoundsException;
    $array.$suppressionEnabled = 1;
    $array.$writableStackTrace = 1;
    $rt_throw($array);
},
cbgu_FloatArray_addAll = ($this, $array, $offset, $length) => {
    let $items, var$5, var$6, $sizeNeeded, var$8, var$9;
    $items = $this.$items1;
    var$5 = $items.data;
    var$6 = $this.$size2;
    $sizeNeeded = var$6 + $length | 0;
    if ($sizeNeeded <= var$5.length)
        var$5 = $items;
    else {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        var$8 = var$6 * 1.75 | 0;
        if ($sizeNeeded > var$8)
            var$8 = $sizeNeeded;
        var$5 = $rt_createFloatArray(var$8);
        var$9 = var$5.data.length;
        if (var$6 < var$9)
            var$9 = var$6;
        jl_System_fastArraycopy($items, 0, var$5, 0, var$9);
        $this.$items1 = var$5;
    }
    jl_System_fastArraycopy($array, $offset, var$5, $this.$size2, $length);
    $this.$size2 = $this.$size2 + $length | 0;
},
cbgu_FloatArray_removeRange = ($this, $start, $end) => {
    let $n, var$4, var$5, var$6, var$7, var$8, var$9, $count, $lastIndex, $i;
    $n = $this.$size2;
    if ($end >= $n) {
        var$4 = new jl_IndexOutOfBoundsException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        $start = var$5.$length0;
        var$6 = var$5;
        jl_AbstractStringBuilder_insert(var$6, $start, $rt_s(49));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $end, 10);
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(32));
        $start = $this.$size2;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $start, 10);
        var$7 = new jl_String;
        var$8 = var$5.$buffer;
        var$9 = var$8.data;
        $end = var$5.$length0;
        $count = var$9.length;
        if ($end >= 0 && $end <= ($count - 0 | 0)) {
            var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $end);
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$7;
            $rt_throw(var$4);
        }
        var$4 = new jl_IndexOutOfBoundsException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($start <= $end) {
        $count = ($end - $start | 0) + 1 | 0;
        $lastIndex = $n - $count | 0;
        if ($this.$ordered1) {
            var$8 = $this.$items1;
            $end = $start + $count | 0;
            jl_System_fastArraycopy(var$8, $end, var$8, $start, $n - $end | 0);
        } else {
            $i = $end + 1 | 0;
            if ($lastIndex > $i)
                $i = $lastIndex;
            var$8 = $this.$items1;
            jl_System_fastArraycopy(var$8, $i, var$8, $start, $n - $i | 0);
        }
        $this.$size2 = $lastIndex;
        return;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $count = var$5.$length0;
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, $count, $rt_s(50));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $start, 10);
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(51));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $end, 10);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $end = var$5.$length0;
    $count = var$9.length;
    if ($end >= 0 && $end <= ($count - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $end);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    $rt_throw(var$4);
},
cbgu_FloatArray_ensureCapacity = ($this, $additionalCapacity) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, $sizeNeeded, var$9;
    if ($additionalCapacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length0;
        jl_AbstractStringBuilder_insert(var$3, var$4, $rt_s(52));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, $additionalCapacity, 10);
        var$5 = new jl_String;
        var$6 = var$3.$buffer;
        var$7 = var$6.data;
        var$4 = var$3.$length0;
        $sizeNeeded = var$7.length;
        if (var$4 >= 0 && var$4 <= ($sizeNeeded - 0 | 0)) {
            var$5.$nativeString = $rt_charArrayToString(var$6.data, 0, var$4);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$5;
            $rt_throw(var$2);
        }
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    var$4 = $this.$size2;
    $sizeNeeded = var$4 + $additionalCapacity | 0;
    var$6 = $this.$items1;
    if ($sizeNeeded > var$6.data.length) {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        $additionalCapacity = var$4 * 1.75 | 0;
        if ($sizeNeeded > $additionalCapacity)
            $additionalCapacity = $sizeNeeded;
        var$7 = $rt_createFloatArray($additionalCapacity);
        var$9 = var$7.data.length;
        if (var$4 < var$9)
            var$9 = var$4;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$9);
        $this.$items1 = var$7;
    }
    return $this.$items1;
},
jl_Math = $rt_classWithoutFields(),
jl_Math_sin = var$1 => {
    return Math.sin(var$1);
},
jl_Math_log = var$1 => {
    return Math.log(var$1);
},
jl_Math_sqrt = var$1 => {
    return Math.sqrt(var$1);
},
jl_Math_ceil = var$1 => {
    return Math.ceil(var$1);
},
jl_Math_floor = var$1 => {
    return Math.floor(var$1);
},
jl_Math_powImpl = (var$1, var$2) => {
    return Math.pow(var$1, var$2);
},
jl_Math_randomImpl = () => {
    return Math.random();
},
jl_Math_max0 = (var$1, var$2) => {
    if (var$1 > var$2)
        var$2 = var$1;
    return var$2;
},
jl_Math_minImpl = (var$1, var$2) => {
    return Math.min(var$1, var$2);
},
jl_Math_min = (var$1, var$2) => {
    return jl_Math_minImpl(var$1, var$2);
},
jl_Math_maxImpl = (var$1, var$2) => {
    return Math.max(var$1, var$2);
},
jl_Math_max = (var$1, var$2) => {
    return jl_Math_maxImpl(var$1, var$2);
},
jl_Math_absImpl = var$1 => {
    return Math.abs(var$1);
},
jl_Math_sign = var$1 => {
    return Math.sign(var$1);
};
function cbggg_GlyphLayout$GlyphRun() {
    let a = this; jl_Object.call(a);
    a.$glyphs = null;
    a.$xAdvances = null;
    a.$x0 = 0.0;
    a.$y3 = 0.0;
    a.$width3 = 0.0;
}
let cbggg_GlyphLayout$GlyphRun__init_ = $this => {
    let var$1;
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 16);
    $this.$glyphs = var$1;
    var$1 = new cbgu_FloatArray;
    var$1.$ordered1 = 1;
    var$1.$items1 = $rt_createFloatArray(16);
    $this.$xAdvances = var$1;
},
cbggg_GlyphLayout$GlyphRun__init_0 = () => {
    let var_0 = new cbggg_GlyphLayout$GlyphRun();
    cbggg_GlyphLayout$GlyphRun__init_(var_0);
    return var_0;
},
cbggg_GlyphLayout$GlyphRun_reset = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$glyphs;
    var$2 = var$1.$items;
    var$3 = 0;
    var$4 = var$1.$size;
    var$5 = null;
    if (var$3 > var$4) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < var$4) {
        var$6 = var$2.data;
        var$7 = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = var$7;
    }
    var$1.$size = 0;
    $this.$xAdvances.$size2 = 0;
},
cbggg_GlyphLayout$GlyphRun_toString = $this => {
    let $buffer, $glyphs, $n, $i, var$5, var$6, var$7, var$8, var$9, var$10, $g;
    $buffer = new jl_StringBuilder;
    $glyphs = $this.$glyphs;
    $n = $glyphs.$size;
    $buffer.$buffer = $rt_createCharArray($n + 32 | 0);
    $i = 0;
    var$5 = $buffer;
    while (true) {
        if ($i >= $n) {
            jl_AbstractStringBuilder_insert(var$5, $buffer.$length0, $rt_s(55));
            var$6 = $this.$x0;
            jl_AbstractStringBuilder_insert1(var$5, $buffer.$length0, var$6);
            jl_AbstractStringBuilder_insert(var$5, $buffer.$length0, $rt_s(55));
            var$6 = $this.$y3;
            jl_AbstractStringBuilder_insert1(var$5, $buffer.$length0, var$6);
            jl_AbstractStringBuilder_insert(var$5, $buffer.$length0, $rt_s(55));
            var$6 = $this.$width3;
            jl_AbstractStringBuilder_insert1(var$5, $buffer.$length0, var$6);
            $glyphs = new jl_String;
            var$7 = $buffer.$buffer;
            var$8 = var$7.data;
            $n = $buffer.$length0;
            var$9 = var$8.length;
            if ($n >= 0 && $n <= (var$9 - 0 | 0)) {
                $glyphs.$nativeString = $rt_charArrayToString(var$7.data, 0, $n);
                return $glyphs;
            }
            $buffer = new jl_IndexOutOfBoundsException;
            $buffer.$suppressionEnabled = 1;
            $buffer.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($buffer);
            $rt_throw($buffer);
        }
        if ($i >= $glyphs.$size)
            break;
        var$9 = $glyphs.$items.data[$i].$id & 65535;
        var$10 = $buffer.$length0;
        jl_AbstractStringBuilder_insertSpace(var$5, var$10, var$10 + 1 | 0);
        var$5.$buffer.data[var$10] = var$9;
        $i = $i + 1 | 0;
    }
    $g = new jl_IndexOutOfBoundsException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $n = var$5.$length0;
    $buffer = var$5;
    jl_AbstractStringBuilder_insert($buffer, $n, $rt_s(31));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $i, 10);
    jl_AbstractStringBuilder_insert($buffer, var$5.$length0, $rt_s(32));
    $i = $glyphs.$size;
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $i, 10);
    $buffer = new jl_String;
    var$7 = var$5.$buffer;
    var$8 = var$7.data;
    $n = var$5.$length0;
    var$9 = var$8.length;
    if ($n >= 0 && $n <= (var$9 - 0 | 0)) {
        $buffer.$nativeString = $rt_charArrayToString(var$7.data, 0, $n);
        $g.$suppressionEnabled = 1;
        $g.$writableStackTrace = 1;
        $g.$message = $buffer;
        $rt_throw($g);
    }
    $buffer = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($buffer);
    $rt_throw($buffer);
};
function cbgu_IntArray() {
    let a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$size0 = 0;
    a.$ordered0 = 0;
}
let cbgu_IntArray_add = ($this, $value) => {
    let $items, var$3, var$4, var$5, var$6;
    $items = $this.$items0;
    var$3 = $items.data;
    var$4 = $this.$size0;
    if (var$4 != var$3.length)
        var$3 = $items;
    else {
        var$5 = var$4 * 1.75 | 0;
        if (8 > var$5)
            var$5 = 8;
        var$3 = $rt_createIntArray(var$5);
        var$6 = var$3.data.length;
        if (var$4 < var$6)
            var$6 = var$4;
        jl_System_fastArraycopy($items, 0, var$3, 0, var$6);
        $this.$items0 = var$3;
    }
    $items = var$3.data;
    var$5 = $this.$size0;
    $this.$size0 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_IntArray_add0 = ($this, $value1, $value2) => {
    let $items, var$4, var$5, var$6, var$7, var$8, var$9;
    $items = $this.$items0;
    var$4 = $items.data;
    var$5 = $this.$size0;
    if ((var$5 + 1 | 0) < var$4.length)
        var$6 = $items;
    else {
        var$7 = var$5 * 1.75 | 0;
        if (8 > var$7)
            var$7 = 8;
        var$6 = $rt_createIntArray(var$7);
        var$8 = var$6.data.length;
        if (var$5 < var$8)
            var$8 = var$5;
        jl_System_fastArraycopy($items, 0, var$6, 0, var$8);
        $this.$items0 = var$6;
    }
    var$4 = var$6.data;
    var$9 = $this.$size0;
    var$4[var$9] = $value1;
    var$4[var$9 + 1 | 0] = $value2;
    $this.$size0 = var$9 + 2 | 0;
},
cbgu_IntArray_ensureCapacity = ($this, $additionalCapacity) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, $sizeNeeded, var$9;
    if ($additionalCapacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length0;
        jl_AbstractStringBuilder_insert(var$3, var$4, $rt_s(52));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, $additionalCapacity, 10);
        var$5 = new jl_String;
        var$6 = var$3.$buffer;
        var$7 = var$6.data;
        var$4 = var$3.$length0;
        $sizeNeeded = var$7.length;
        if (var$4 >= 0 && var$4 <= ($sizeNeeded - 0 | 0)) {
            var$5.$nativeString = $rt_charArrayToString(var$6.data, 0, var$4);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$5;
            $rt_throw(var$2);
        }
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    var$4 = $this.$size0;
    $sizeNeeded = var$4 + $additionalCapacity | 0;
    var$6 = $this.$items0;
    if ($sizeNeeded > var$6.data.length) {
        if (8 > $sizeNeeded)
            $sizeNeeded = 8;
        $additionalCapacity = var$4 * 1.75 | 0;
        if ($sizeNeeded > $additionalCapacity)
            $additionalCapacity = $sizeNeeded;
        var$7 = $rt_createIntArray($additionalCapacity);
        var$9 = var$7.data.length;
        if (var$4 < var$9)
            var$9 = var$4;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$9);
        $this.$items0 = var$7;
    }
    return $this.$items0;
},
cbgu_IntArray_hashCode = $this => {
    let $items, $h, $i, $n, var$5, var$6;
    if ($this.$ordered0) {
        $items = $this.$items0;
        $h = 1;
        $i = 0;
        $n = $this.$size0;
        while ($i < $n) {
            var$5 = $items.data;
            $h = ($h * 31 | 0) + var$5[$i] | 0;
            $i = $i + 1 | 0;
        }
        return $h;
    }
    var$6 = $this;
    if (!var$6.$id$)
        var$6.$id$ = $rt_nextId();
    return $this.$id$;
},
cbgu_IntArray_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7;
    if ($object === $this)
        return 1;
    if (!$this.$ordered0)
        return 0;
    if (!($object instanceof cbgu_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered0)
        return 0;
    $n = $this.$size0;
    if ($n != $array.$size0)
        return 0;
    $items1 = $this.$items0;
    $items2 = $array.$items0;
    $i = 0;
    while ($i < $n) {
        var$7 = $items2.data;
        if ($items1.data[$i] != var$7[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
cbgu_IntArray_toString = $this => {
    let $items, $buffer, var$3, var$4, var$5, var$6, $i, var$8;
    if (!$this.$size0)
        return $rt_s(54);
    $items = $this.$items0;
    $buffer = new cbgu_StringBuilder;
    var$3 = $rt_createCharArray(32);
    var$4 = var$3.data;
    $buffer.$chars = var$3;
    var$5 = $buffer.$length1;
    if (var$5 == var$4.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    $items = $items.data;
    var$4 = $buffer.$chars.data;
    var$6 = $buffer.$length1;
    $buffer.$length1 = var$6 + 1 | 0;
    var$4[var$6] = 91;
    cbgu_StringBuilder_append($buffer, $items[0], 0, 48);
    $i = 1;
    while ($i < $this.$size0) {
        var$8 = $rt_s(55).$nativeString.length;
        var$5 = $buffer.$length1 + var$8 | 0;
        if (var$5 > $buffer.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$5);
        jl_String_getChars($rt_s(55), 0, var$8, $buffer.$chars, $buffer.$length1);
        $buffer.$length1 = var$5;
        cbgu_StringBuilder_append($buffer, $items[$i], 0, 48);
        $i = $i + 1 | 0;
    }
    var$5 = $buffer.$length1;
    if (var$5 == $buffer.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
    a: {
        $items = $buffer.$chars;
        var$4 = $items.data;
        var$6 = $buffer.$length1;
        var$5 = var$6 + 1 | 0;
        $buffer.$length1 = var$5;
        var$4[var$6] = 93;
        if (!var$5)
            $buffer = $rt_s(40);
        else {
            $buffer = new jl_String;
            var$6 = var$4.length;
            if (var$5 < 0)
                break a;
            if (var$5 > (var$6 - 0 | 0))
                break a;
            $buffer.$nativeString = $rt_charArrayToString($items.data, 0, var$5);
        }
        return $buffer;
    }
    $buffer = new jl_IndexOutOfBoundsException;
    $buffer.$suppressionEnabled = 1;
    $buffer.$writableStackTrace = 1;
    $rt_throw($buffer);
},
ju_Map = $rt_classWithoutFields(0),
ju_AbstractMap = $rt_classWithoutFields(),
jl_Cloneable = $rt_classWithoutFields(0);
function ju_HashMap() {
    let a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount0 = 0;
    a.$loadFactor = 0.0;
    a.$threshold = 0;
}
let ju_HashMap_calculateCapacity = $x => {
    let var$2;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    $x = var$2 | var$2 >> 1;
    $x = $x | $x >> 2;
    $x = $x | $x >> 4;
    $x = $x | $x >> 8;
    return ($x | $x >> 16) + 1 | 0;
},
ju_HashMap_putImpl = ($this, $key, $value) => {
    let var$3, $entry, $result, var$6, $hash, $index;
    if ($key === null) {
        var$3 = $this.$elementData.data;
        $entry = var$3[0];
        while ($entry !== null && $entry.$key !== null) {
            $entry = $entry.$next1;
        }
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $result = null;
            $entry = new ju_HashMap$HashEntry;
            $key = null;
            $entry.$key = $result;
            $entry.$value0 = $key;
            $entry.$origKeyHash = 0;
            $entry.$next1 = var$3[0];
            var$3[0] = $entry;
            var$6 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$6;
            if (var$6 > $this.$threshold)
                ju_HashMap_rehash($this, var$3.length);
        }
    } else {
        $hash = $key.$hashCode();
        var$3 = $this.$elementData.data;
        $index = $hash & (var$3.length - 1 | 0);
        $entry = var$3[$index];
        while ($entry !== null) {
            if ($entry.$origKeyHash == $hash) {
                $result = $entry.$key;
                if ($key !== $result && !$key.$equals($result) ? 0 : 1)
                    break;
            }
            $entry = $entry.$next1;
        }
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $entry = new ju_HashMap$HashEntry;
            $result = null;
            $entry.$key = $key;
            $entry.$value0 = $result;
            $entry.$origKeyHash = $hash;
            var$3 = $this.$elementData.data;
            $entry.$next1 = var$3[$index];
            var$3[$index] = $entry;
            var$6 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$6;
            if (var$6 > $this.$threshold)
                ju_HashMap_rehash($this, var$3.length);
        }
    }
    $result = $entry.$value0;
    $entry.$value0 = $value;
    return $result;
},
ju_HashMap_rehash = ($this, $capacity) => {
    let $length, $newData, var$4, $i, var$6, $entry, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $rt_createArray(ju_HashMap$HashEntry, $length);
    var$4 = $newData.data;
    $i = 0;
    $length = $length - 1 | 0;
    while (true) {
        var$6 = $this.$elementData.data;
        if ($i >= var$6.length)
            break;
        $entry = var$6[$i];
        var$6[$i] = null;
        while ($entry !== null) {
            $index = $entry.$origKeyHash & $length;
            $next = $entry.$next1;
            $entry.$next1 = var$4[$index];
            var$4[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData = $newData;
    $this.$threshold = var$4.length * $this.$loadFactor | 0;
},
ju_HashMap_removeByKey = ($this, $key) => {
    let $index, $last, $entry, $entry_0, var$6, $hash, var$8, var$9;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData.data[0];
            while ($entry !== null) {
                if ($entry.$key === null)
                    break a;
                $entry_0 = $entry.$next1;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            b: {
                var$6 = $key;
                if (!var$6.$hashCode0) {
                    $index = 0;
                    while (true) {
                        if ($index >= var$6.$nativeString.length)
                            break b;
                        var$6.$hashCode0 = (31 * var$6.$hashCode0 | 0) + var$6.$nativeString.charCodeAt($index) | 0;
                        $index = $index + 1 | 0;
                    }
                }
            }
            $hash = var$6.$hashCode0;
            var$8 = $this.$elementData.data;
            $index = $hash & (var$8.length - 1 | 0);
            $entry = var$8[$index];
            while ($entry !== null) {
                if ($entry.$origKeyHash == $hash) {
                    c: {
                        $entry_0 = $entry.$key;
                        if ($key !== $entry_0) {
                            if (var$6 === $entry_0)
                                var$9 = 1;
                            else if (!($entry_0 instanceof jl_String))
                                var$9 = 0;
                            else {
                                $entry_0 = $entry_0;
                                var$9 = var$6.$nativeString !== $entry_0.$nativeString ? 0 : 1;
                            }
                            if (!var$9) {
                                var$9 = 0;
                                break c;
                            }
                        }
                        var$9 = 1;
                    }
                    if (var$9)
                        break;
                }
                $entry_0 = $entry.$next1;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next1 = $entry.$next1;
    else
        $this.$elementData.data[$index] = $entry.$next1;
    $this.$modCount0 = $this.$modCount0 + 1 | 0;
    $this.$elementCount = $this.$elementCount - 1 | 0;
    return $entry;
},
ju_HashMap_areEqualKeys = ($key1, $key2) => {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
},
ju_Comparator = $rt_classWithoutFields(0),
jl_String$_clinit_$lambda$_115_0 = $rt_classWithoutFields(),
jl_Character = $rt_classWithoutFields(),
jl_Character_TYPE = null,
jl_Character_digitMapping = null,
jl_Character_upperCaseMapping = null,
jl_Character_lowerCaseMapping = null,
jl_Character_classMapping = null,
jl_Character_characterCache = null,
jl_Character_$$metadata$$0 = null,
jl_Character_$$metadata$$1 = null,
jl_Character_$$metadata$$3 = null,
jl_Character_$$metadata$$4 = null,
jl_Character_codePointAt = ($a, $index, $limit) => {
    let var$4;
    if ($index < $limit && $index >= 0) {
        $a = $a.data;
        if ($limit <= $a.length) {
            if ($index < ($limit - 1 | 0) && (($a[$index] & 64512) != 55296 ? 0 : 1)) {
                $limit = $index + 1 | 0;
                if (($a[$limit] & 64512) != 56320 ? 0 : 1)
                    return (($a[$index] & 1023) << 10 | $a[$limit] & 1023) + 65536 | 0;
            }
            return $a[$index];
        }
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    $rt_throw(var$4);
},
jl_Character_mapChar = ($table, $codePoint) => {
    let $binSearchTable, $index;
    $binSearchTable = $table.$fastTable.data;
    if ($codePoint < $binSearchTable.length)
        return $codePoint + $binSearchTable[$codePoint] | 0;
    $binSearchTable = $table.$binarySearchTable0;
    $index = jl_Character_binarySearchTable($binSearchTable, $codePoint);
    if ($index >= 0) {
        $binSearchTable = $binSearchTable.data;
        $index = $index * 2 | 0;
        if ($index < $binSearchTable.length)
            return $codePoint + $binSearchTable[$index + 1 | 0] | 0;
    }
    return 0;
},
jl_Character_binarySearchTable = ($data, $key) => {
    let $l, $u, $i, $e;
    $data = $data.data;
    $l = 0;
    $u = ($data.length / 2 | 0) - 1 | 0;
    while (true) {
        $i = ($l + $u | 0) / 2 | 0;
        $e = $rt_compare($data[$i * 2 | 0], $key);
        if (!$e)
            break;
        if ($e <= 0) {
            $l = $i + 1 | 0;
            if ($l > $u)
                return $i;
        } else {
            $u = $i - 1 | 0;
            if ($u < $l)
                return $u;
        }
    }
    return $i;
},
jl_Character_getNumericValue = $codePoint => {
    let $digitMapping, $l, $u, $idx, var$6, $val;
    if (jl_Character_digitMapping === null) {
        if (jl_Character_$$metadata$$3 === null)
            jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
        jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntPairsDiff((jl_Character_$$metadata$$3.value !== null ? $rt_str(jl_Character_$$metadata$$3.value) : null));
    }
    $digitMapping = jl_Character_digitMapping.data;
    $l = 0;
    $u = ($digitMapping.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$6 = $idx * 2 | 0;
        $val = $rt_compare($codePoint, $digitMapping[var$6]);
        if ($val > 0)
            $l = $idx + 1 | 0;
        else {
            if ($val >= 0)
                return $digitMapping[var$6 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
},
jl_Character_forDigit = ($digit, $radix) => {
    if ($radix >= 2 && $radix <= 36 && $digit >= 0 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
},
jl_Character_toChars = $codePoint => {
    let var$2, var$3, var$4;
    if (!($codePoint >= 0 && $codePoint <= 1114111 ? 1 : 0)) {
        var$2 = new jl_IllegalArgumentException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    if ($codePoint < 65536) {
        var$3 = $rt_createCharArray(1);
        var$3.data[0] = $codePoint & 65535;
        return var$3;
    }
    var$3 = $rt_createCharArray(2);
    var$4 = var$3.data;
    var$4[0] = (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
    var$4[1] = (56320 | $codePoint & 1023) & 65535;
    return var$3;
},
jl_Character_getType = $codePoint => {
    let $l, $u, $classes, $i, $range;
    if ($codePoint > 0 && $codePoint <= 65535 ? 1 : 0) {
        $l = $codePoint & 65535 & 64512;
        $u = $l != 55296 ? 0 : 1;
        if (!$u && !($l != 56320 ? 0 : 1) ? 0 : 1)
            return 19;
    }
    if (jl_Character_classMapping === null) {
        if (jl_Character_$$metadata$$4 === null)
            jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle((jl_Character_$$metadata$$4.value !== null ? $rt_str(jl_Character_$$metadata$$4.value) : null));
    }
    $classes = jl_Character_classMapping.data;
    $l = 0;
    $u = $classes.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = $classes[$i];
        if ($codePoint >= $range.$end1)
            $l = $i + 1 | 0;
        else {
            $u = $range.$start8;
            if ($codePoint >= $u)
                return $range.$data3.data[$codePoint - $u | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
},
jl_Character_isIdentifierIgnorable = $codePoint => {
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
},
jl_Character__clinit_ = () => {
    jl_Character_TYPE = $rt_cls($rt_charcls);
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
},
jl_Character_acquireLowerCaseMapping$$create = () => {
    return {"value" : "TW  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
    + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 a$#%# -mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
    + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%"
    + "# #%# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# #$$r#%# \'%# +%# #%# #%# #P6rM \'%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# .\'F#S HB#F#b o@5F#b Jo=N#f "};
},
jl_Character_acquireUpperCaseMapping$$create = () => {
    return {"value" : "NY  ,%H#U :#>b# vH#O #H#/:+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #,5# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'#(;#N1# %\'# #\'# %\'# \'\'# +\'# %6)# \'\'#*/#N6r# %_+# %\'# #\'# #\'# %\'# )\'# %\'# \'\'# #\'# %\'# \'\'# #J%# +\'#+# #\'#+# #\'#+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#L\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'#+# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
    + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3#!$r#:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'"
    + "# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d# #\'- (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'#"
    + " #\'# #\'# -\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
    + "\'# #\'# #\'# #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'# %\'\' #\'% )\'# #\'# #\'# U\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#t {nm%:# V%H#^ >B#H#b o@5H#b No=P#f "};
},
jl_Character_obtainDigitMapping$$create = () => {
    return {"value" : "kE*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%_fG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%B\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%oYG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%ow?G%%%%%%%%%%%%%%%%%%s4%G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%"
    + "%%%%:OG%%%%%%%%%%%%%%%%%%V*OG%%%%%%%%%%%%%%%%%%VZ%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%k5G%%%%%%%%%%%%%%%%%%.lG%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
},
jl_Character_obtainClasses$$create = () => {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A&G*FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"
    + " F#A#\' I$G#A%G#A#G$A$\'A(F% &A(J+G#F$\'9A+G#) F* F$ F7 F( F# F&A#\'&I$G& G#) I#\'A#&A0F#G#A#J+9;A(&G\' \'I# F)A#F#A#F7 F( F# F&A#\'&)\')G%A#I#A#I#\'A(G#)A%F# F$G#A#J+=&L\'A+\'& F\'A$F$ F%A$F# & F#A$F#A$F$A$F-A%I#\'I#A$I$ I$\'A#&A\')A/J+L$^\';=A&\'I$\'F) F$ F8 F1A#\'&G$I% G$ G%A(G# F$A#&A#F#G#A#J+A(9L(=&\'I#9F) F$ F8 F+ F&A#\'&)\'I& \'I# I#G#A(I#A\'F# F#G#A#J+ F#)A-G#I#F* F$ FJG#&I$G% I$ I$\'&=A%F$)L(F$G#A#J+L*=F\' \'I# F3A$F9 F* &A#F(A$\'A%I$G$ \' I)A\'J+A#I#9A-FQ\'F#G(A%;F\'%G)9J+Y#AFF# & F& F9 & F+\'F#G*&A#F& % G( J+A#F%AA&^$Y0=9^$G#^\'J+"
    + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F) Y#J+Y(^+G*^*Y$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
    + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*!#A&BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0"
    + "G.H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^jA7^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?6767676"
    + "7Y&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^1-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^GA*=F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#B##A#!# # #!#!#!#!A6E$!#&"
    + "E##F(\'F$\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F"
    + "\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#A$FUA-b&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+A\'J+F%%&B7A$G&5%C7A)Z#b 1$ L@ FK G#5A#F#A1F$AXG%F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'"
    + "F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+A\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&A,F+ &A#& FG &I$G\' )A#) I% I#\')\'&\'&Y# Y#A)G#A>FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+A\'J5A=F<A#\')\'I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%"
    + "Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W# FB9A/J+A\'F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+\'b 6! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0A+b&<` A&b&(* b ZK!F?G-I$G$J+b \'< b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q\' E$FIE#Y$J+b \'$ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AJF#A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =_ b=Q$ J+A\'b=U\'"
    + " AnGOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b 7$ F?G#&J+A%9b A( F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% "
    + "F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^-A%^#A`b=5& A-^/A#^.A$^+A&^YA(^0A#^,A\'^*A(b=4#  b==! J+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&A0&b M* &b CG b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
},
cgxgbt_TeaApplication$AppState = $rt_classWithoutFields(jl_Enum),
cgxgbt_TeaApplication$AppState_INIT = null,
cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS = null,
cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS = null,
cgxgbt_TeaApplication$AppState_APP_CREATE = null,
cgxgbt_TeaApplication$AppState_APP_LOOP = null,
cgxgbt_TeaApplication$AppState_$VALUES = null,
cgxgbt_TeaApplication$AppState__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new cgxgbt_TeaApplication$AppState;
    var$1.$name0 = $rt_s(103);
    var$1.$ordinal0 = 0;
    cgxgbt_TeaApplication$AppState_INIT = var$1;
    var$2 = new cgxgbt_TeaApplication$AppState;
    var$2.$name0 = $rt_s(104);
    var$2.$ordinal0 = 1;
    cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS = var$2;
    var$3 = new cgxgbt_TeaApplication$AppState;
    var$3.$name0 = $rt_s(105);
    var$3.$ordinal0 = 2;
    cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS = var$3;
    var$4 = new cgxgbt_TeaApplication$AppState;
    var$4.$name0 = $rt_s(106);
    var$4.$ordinal0 = 3;
    cgxgbt_TeaApplication$AppState_APP_CREATE = var$4;
    var$5 = new cgxgbt_TeaApplication$AppState;
    var$5.$name0 = $rt_s(107);
    var$5.$ordinal0 = 4;
    cgxgbt_TeaApplication$AppState_APP_LOOP = var$5;
    cgxgbt_TeaApplication$AppState_$VALUES = $rt_wrapArray(cgxgbt_TeaApplication$AppState, [var$1, var$2, var$3, var$4, var$5]);
},
cgxgbtd_WindowWrapper = $rt_classWithoutFields(0),
otj_JSObject = $rt_classWithoutFields(0),
otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
function cgxgbtdi_TeaWindow() {
    let a = this; jl_Object.call(a);
    a.$window = null;
    a.$runnable = null;
}
let cgxgbtdi_TeaWindow_TEA_WINDOW = null,
cgxgbtdi_TeaWindow_$callClinit = () => {
    cgxgbtdi_TeaWindow_$callClinit = $rt_eraseClinit(cgxgbtdi_TeaWindow);
    cgxgbtdi_TeaWindow__clinit_();
},
cgxgbtdi_TeaWindow__clinit_ = () => {
    let var$1;
    var$1 = new cgxgbtdi_TeaWindow;
    cgxgbtdi_TeaWindow_$callClinit();
    var$1.$window = window;
    cgxgbtdi_TeaWindow_TEA_WINDOW = var$1;
},
cgxgbtdi_TeaWindow_onAnimationFrame$exported$0 = (var$1, var$2) => {
    let var$3;
    cgxgbtdi_TeaWindow_$callClinit();
    var$2;
    var$1 = var$1;
    var$3 = var$1.$runnable;
    var$1.$runnable = null;
    cgxgbt_TeaApplication_run(var$3);
},
jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException),
ju_Objects = $rt_classWithoutFields(),
ju_Objects_checkFromIndexSize = ($fromIndex, $size, $length) => {
    let var$4;
    if ($fromIndex >= 0 && $size >= 0 && $size <= ($length - $fromIndex | 0))
        return $fromIndex;
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    $rt_throw(var$4);
},
cgxgbta_TeaWebAgent = $rt_classWithoutFields(),
cgxgbta_TeaWebAgent_createAgent$js_body$_1 = () => {
    var userAgent = navigator.userAgent.toLowerCase();
    return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1, userAgent : userAgent };
},
jl_System = $rt_classWithoutFields(),
jl_System_outCache = null,
jl_System_errCache = null,
jl_System_properties = null,
jl_System_arraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    let var$6, $elem, $srcType, $targetType, $srcArray, $i, var$12, var$13, var$14, var$15;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
            a: {
                b: {
                    if ($src !== $dest) {
                        var$6 = $src.constructor;
                        if (var$6 === null)
                            $elem = null;
                        else {
                            $elem = var$6.classObject;
                            if ($elem === null) {
                                $elem = new jl_Class;
                                $elem.$platformClass = var$6;
                                var$6.classObject = $elem;
                            }
                        }
                        $srcType = jl_Class_getComponentType($elem);
                        var$6 = $dest.constructor;
                        if (var$6 === null)
                            $elem = null;
                        else {
                            $elem = var$6.classObject;
                            if ($elem === null) {
                                $elem = new jl_Class;
                                $elem.$platformClass = var$6;
                                var$6.classObject = $elem;
                            }
                        }
                        $targetType = jl_Class_getComponentType($elem);
                        if ($srcType !== null && $targetType !== null) {
                            if ($srcType === $targetType)
                                break b;
                            if (!($srcType.$platformClass.$meta.primitive ? 1 : 0) && !($targetType.$platformClass.$meta.primitive ? 1 : 0)) {
                                $srcArray = $src;
                                $i = 0;
                                var$12 = $srcPos;
                                while ($i < $length) {
                                    var$13 = $srcArray.data;
                                    var$14 = var$12 + 1 | 0;
                                    var$6 = var$13[var$12];
                                    var$15 = $targetType.$platformClass;
                                    if (!(var$6 !== null && !(typeof var$6.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable(var$6.constructor, var$15) ? 1 : 0)) {
                                        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                        $src = new jl_ArrayStoreException;
                                        $src.$suppressionEnabled = 1;
                                        $src.$writableStackTrace = 1;
                                        $rt_throw($src);
                                    }
                                    $i = $i + 1 | 0;
                                    var$12 = var$14;
                                }
                                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                return;
                            }
                            if (!($srcType.$platformClass.$meta.primitive ? 1 : 0))
                                break a;
                            if ($targetType.$platformClass.$meta.primitive ? 1 : 0)
                                break b;
                            else
                                break a;
                        }
                        $src = new jl_ArrayStoreException;
                        $src.$suppressionEnabled = 1;
                        $src.$writableStackTrace = 1;
                        $rt_throw($src);
                    }
                }
                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                return;
            }
            $src = new jl_ArrayStoreException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $rt_throw($src);
        }
        $src = new jl_IndexOutOfBoundsException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    $dest = new jl_NullPointerException;
    $dest.$suppressionEnabled = 1;
    $dest.$writableStackTrace = 1;
    $dest.$message = $rt_s(108);
    $rt_throw($dest);
},
jl_System_fastArraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
        return;
    }
    $src = new jl_IndexOutOfBoundsException;
    $src.$suppressionEnabled = 1;
    $src.$writableStackTrace = 1;
    $rt_throw($src);
},
jl_System_doArrayCopy = (var$1, var$2, var$3, var$4, var$5) => {
    if (var$5 !== 0) {
        if (typeof var$1.data.buffer !== 'undefined') {
            var$3.data.set(var$1.data.subarray(var$2, var$2 + var$5), var$4);
        } else if (var$1 !== var$3 || var$4 < var$2) {
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[var$4++] = var$1.data[var$2++];
            }
        } else {
            var$2 = var$2 + var$5 | 0;
            var$4 = var$4 + var$5 | 0;
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[ --var$4] = var$1.data[ --var$2];
            }
        }
    }
},
jl_System_currentTimeMillis = () => {
    return Long_fromNumber((new Date()).getTime());
},
jl_System_initPropertiesIfNeeded = () => {
    let var$1, var$2, var$3;
    if (jl_System_properties === null) {
        var$1 = new ju_Properties;
        ju_Hashtable__init_(var$1, 11);
        var$2 = var$1;
        ju_Hashtable_put(var$2, $rt_s(109), $rt_s(110));
        ju_Hashtable_put(var$2, $rt_s(89), $rt_s(111));
        ju_Hashtable_put(var$2, $rt_s(112), $rt_s(113));
        ju_Hashtable_put(var$2, $rt_s(114), $rt_s(115));
        ju_Hashtable_put(var$2, $rt_s(116), $rt_s(117));
        ju_Hashtable_put(var$2, $rt_s(118), $rt_s(119));
        ju_Hashtable_put(var$2, $rt_s(120), $rt_s(110));
        ju_Hashtable_put(var$2, $rt_s(121), $rt_s(113));
        var$3 = new ju_Properties;
        ju_Hashtable__init_(var$3, 11);
        var$3.$defaults = var$1;
        jl_System_properties = var$3;
    }
},
cgxgbta_AssetDownloader = $rt_classWithoutFields(0);
function cgxgbta_AssetDownloadImpl() {
    let a = this; jl_Object.call(a);
    a.$queue = 0;
    a.$showLogs = 0;
    a.$showDownloadProgress = 0;
}
let cgxgbta_AssetDownloadImpl_load = ($this, $async, $url, $type, $listener) => {
    let $internalListener, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $internalListener = new cgxgbta_AssetDownloadImpl$1;
    $internalListener.$this$08 = $this;
    $internalListener.$val$listener0 = $listener;
    if ($this.$showLogs) {
        if (jl_System_outCache === null) {
            $listener = new otcic_JSStdoutPrintStream;
            var$6 = null;
            var$7 = null;
            $listener.$out = var$6;
            var$6 = new jl_StringBuilder;
            var$6.$buffer = $rt_createCharArray(16);
            $listener.$sb = var$6;
            $listener.$buffer1 = $rt_createCharArray(32);
            $listener.$autoFlush = 0;
            $listener.$charset = var$7;
            jl_System_outCache = $listener;
        }
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        var$8 = var$7.$length0;
        var$6 = var$7;
        $listener = $rt_s(122);
        var$6 = var$6;
        jl_AbstractStringBuilder_insert(var$6, var$8, $listener);
        jl_AbstractStringBuilder_insert(var$6, var$7.$length0, $url === null ? $rt_s(1) : $url);
        $listener = new jl_String;
        var$9 = var$7.$buffer;
        var$10 = var$9.data;
        var$11 = var$7.$length0;
        var$12 = var$10.length;
        if (var$11 >= 0 && var$11 <= (var$12 - 0 | 0)) {
            $listener.$nativeString = $rt_charArrayToString(var$9.data, 0, var$11);
            $rt_putStdout($rt_ustr($listener));
            $rt_putStdout("\n");
        } else {
            $url = new jl_IndexOutOfBoundsException;
            $url.$suppressionEnabled = 1;
            $url.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($url);
            $rt_throw($url);
        }
    }
    a: {
        cgxgbta_AssetDownloadImpl$4_$callClinit();
        switch (cgxgbta_AssetDownloadImpl$4_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType.data[$type.$ordinal0]) {
            case 1:
                $this.$queue = $this.$queue + 1 | 0;
                if (!$async)
                    cgxgbta_AssetDownloadImpl_loadBinaryInternally($this, 0, $url, $internalListener, 0);
                else {
                    $type = new cgxgbta_AssetDownloadImpl$3;
                    $type.$this$0 = $this;
                    $type.$val$url = $url;
                    $type.$val$listener = $internalListener;
                    $type.$val$count = 0;
                    $url = null;
                    $listener = null;
                    $type.$finishedLock = new jl_Object;
                    $type.$alive = 1;
                    $type.$name1 = $listener;
                    $type.$target = $url;
                    var$8 = jl_Thread_nextId;
                    jl_Thread_nextId = var$8 + 1 | 0;
                    $type.$id0 = Long_fromInt(var$8);
                    $url = $type;
                    $type = new jl_Thread$start$lambda$_4_0;
                    $type.$_0 = $url;
                    otp_Platform_startThread($type);
                }
                break a;
            case 2:
                break;
            default:
                $listener = new cbgu_GdxRuntimeException;
                $internalListener = new jl_StringBuilder;
                $internalListener.$buffer = $rt_createCharArray(16);
                $async = $internalListener.$length0;
                var$7 = $internalListener;
                $url = $rt_s(123);
                var$7 = var$7;
                jl_AbstractStringBuilder_insert(var$7, $async, $url);
                jl_AbstractStringBuilder_insert(var$7, $internalListener.$length0, $type.$name0);
                $url = new jl_String;
                var$9 = $internalListener.$buffer;
                var$10 = var$9.data;
                var$8 = $internalListener.$length0;
                var$11 = var$10.length;
                if (var$8 >= 0 && var$8 <= (var$11 - 0 | 0)) {
                    $url.$nativeString = $rt_charArrayToString(var$9.data, 0, var$8);
                    $listener.$suppressionEnabled = 1;
                    $listener.$writableStackTrace = 1;
                    $listener.$message = $url;
                    $rt_throw($listener);
                }
                $url = new jl_IndexOutOfBoundsException;
                $url.$suppressionEnabled = 1;
                $url.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($url);
                $rt_throw($url);
        }
        $type = null;
        cgxgbta_AssetDownloadImpl$1_onSuccess($internalListener, $url, $type);
    }
},
cgxgbta_AssetDownloadImpl_loadBinaryInternally = ($this, $async, $url, $listener, $count) => {
    let $request, var$6, var$7, var$8;
    $request = new XMLHttpRequest();
    var$6 = new cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0;
    var$6.$_010 = $this;
    var$6.$_12 = $request;
    var$6.$_21 = $listener;
    var$6.$_30 = $url;
    var$6.$_4 = $count;
    var$6.$_5 = $async;
    var$7 = !(var$6 instanceof otji_JSWrapper) ? var$6 : var$6.$js;
    $request.onreadystatechange = otji_JS_function(var$7, "handleEvent");
    var$6 = new cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0;
    var$6.$_012 = $listener;
    var$8 = !(var$6 instanceof otji_JSWrapper) ? var$6 : var$6.$js;
    $request.addEventListener("progress", otji_JS_function(var$8, "handleEvent"));
    $request.open("GET", $rt_ustr($url), !!$async);
    if ($async)
        $request.responseType = "arraybuffer";
    $request.send();
},
cgxgbta_AssetDownloadImpl_lambda$loadBinaryInternally$0 = ($this, $request, $listener, $url, $count, $async, $evt) => {
    let $status, var$8, $newCount, $jsResponse, $typedArray, $responseStr, var$13, $$je, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$13 = $thread.pop();$responseStr = $thread.pop();$typedArray = $thread.pop();$jsResponse = $thread.pop();$newCount = $thread.pop();var$8 = $thread.pop();$status = $thread.pop();$evt = $thread.pop();$async = $thread.pop();$count = $thread.pop();$url = $thread.pop();$listener = $thread.pop();$request = $thread.pop();$this = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($request.readyState == 4) {
            $status = $request.status;
            if (!$status) {
                if ($listener !== null)
                    $listener.$onFailure($url);
            } else if ($status != 200) {
                if ($status != 404 && $status != 403) {
                    try {
                        var$8 = Long_fromInt(100);
                        $ptr = 1;
                        continue main;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                        } else {
                            throw $$e;
                        }
                    }
                    $newCount = $count + 1 | 0;
                    if ($newCount != 3) {
                        $this.$queue = $this.$queue + 1 | 0;
                        if (!$async)
                            cgxgbta_AssetDownloadImpl_loadBinaryInternally($this, 0, $url, $listener, $newCount);
                        else {
                            $request = new cgxgbta_AssetDownloadImpl$3;
                            $request.$this$0 = $this;
                            $request.$val$url = $url;
                            $request.$val$listener = $listener;
                            $request.$val$count = $newCount;
                            $listener = null;
                            $url = null;
                            $request.$finishedLock = new jl_Object;
                            $request.$alive = 1;
                            $request.$name1 = $url;
                            $request.$target = $listener;
                            $async = jl_Thread_nextId;
                            jl_Thread_nextId = $async + 1 | 0;
                            $request.$id0 = Long_fromInt($async);
                            $request = $request;
                            $listener = new jl_Thread$start$lambda$_4_0;
                            $listener.$_0 = $request;
                            otp_Platform_startThread($listener);
                        }
                    } else if ($listener !== null)
                        $listener.$onFailure($url);
                } else if ($listener !== null)
                    $listener.$onFailure($url);
            } else {
                $jsResponse = $request.response;
                if (!(typeof $jsResponse == 'string' ? 1 : 0))
                    $typedArray = new Int8Array($jsResponse);
                else {
                    $responseStr = $rt_str($jsResponse);
                    $request = jnci_UTF8Charset_INSTANCE;
                    var$13 = $rt_fastStringToCharArray($responseStr.$nativeString);
                    $async = var$13.data.length;
                    $responseStr = new jn_CharBufferOverArray;
                    $status = 0 + $async | 0;
                    jl_Object__init_($responseStr);
                    $responseStr.$mark = (-1);
                    $responseStr.$capacity = $async;
                    $responseStr.$limit0 = $async;
                    $responseStr.$position0 = 0;
                    $responseStr.$limit0 = $status;
                    $responseStr.$start3 = 0;
                    $responseStr.$readOnly1 = 0;
                    $responseStr.$array1 = var$13;
                    a: {
                        try {
                            $responseStr = jnc_CharsetEncoder_encode0(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(jnci_UTF8Charset_newEncoder($request), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $responseStr);
                            break a;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jnc_CharacterCodingException) {
                                $listener = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                        $url = new jl_AssertionError;
                        $url.$suppressionEnabled = 1;
                        $url.$writableStackTrace = 1;
                        $url.$message = $rt_s(124);
                        $url.$cause = $listener;
                        $rt_throw($url);
                    }
                    $newCount = $responseStr.$position0;
                    if (!$newCount && $responseStr.$limit0 == $responseStr.$capacity) {
                        $request = $responseStr.$array;
                        cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($request);
                        $newCount = $request.$buffer0.length;
                        $count = 0;
                        while ($count < $newCount) {
                            var$13 = $responseStr.$bkArray.data;
                            $request = $responseStr.$array;
                            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($request);
                            var$13[$count] = $request.$buffer0[$count];
                            $count = $count + 1 | 0;
                        }
                        var$13 = $responseStr.$bkArray;
                    } else {
                        var$13 = $rt_createByteArray($responseStr.$limit0 - $newCount | 0);
                        jn_ByteBuffer_get($responseStr, var$13, 0, var$13.data.length);
                    }
                    $typedArray = var$13.data;
                    $jsResponse = $typedArray.buffer;
                }
                if ($listener !== null) {
                    $request = new cgxgbta_Blob;
                    $request.$data2 = $typedArray;
                    $request.$response = $jsResponse;
                    $listener.$onSuccess($url, $request);
                }
            }
            $this.$queue = $this.$queue - 1 | 0;
        }
        return;
    case 1:
        b: {
            try {
                jl_Thread_sleep(var$8);
                if ($rt_suspending()) {
                    break main;
                }
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
        }
        $newCount = $count + 1 | 0;
        if ($newCount != 3) {
            $this.$queue = $this.$queue + 1 | 0;
            if (!$async)
                cgxgbta_AssetDownloadImpl_loadBinaryInternally($this, 0, $url, $listener, $newCount);
            else {
                $request = new cgxgbta_AssetDownloadImpl$3;
                $request.$this$0 = $this;
                $request.$val$url = $url;
                $request.$val$listener = $listener;
                $request.$val$count = $newCount;
                $listener = null;
                $url = null;
                $request.$finishedLock = new jl_Object;
                $request.$alive = 1;
                $request.$name1 = $url;
                $request.$target = $listener;
                $async = jl_Thread_nextId;
                jl_Thread_nextId = $async + 1 | 0;
                $request.$id0 = Long_fromInt($async);
                $request = $request;
                $listener = new jl_Thread$start$lambda$_4_0;
                $listener.$_0 = $request;
                otp_Platform_startThread($listener);
            }
        } else if ($listener !== null)
            $listener.$onFailure($url);
        $this.$queue = $this.$queue - 1 | 0;
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($this, $request, $listener, $url, $count, $async, $evt, $status, var$8, $newCount, $jsResponse, $typedArray, $responseStr, var$13, $ptr);
},
cgxgbta_AssetInstance = $rt_classWithoutFields(),
cgxgbta_AssetInstance_downloaderInstance = null,
cgxgbta_AssetInstance_instance = null,
cbg_Graphics = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics() {
    let a = this; jl_Object.call(a);
    a.$context = null;
    a.$canvas = null;
    a.$config0 = null;
    a.$gl20 = null;
    a.$gl30 = null;
    a.$glVersion = null;
    a.$fps = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$time = 0.0;
    a.$frames = 0;
}
let cgxgbt_TeaGraphics__init_ = ($this, $config) => {
    let $attr, $canvas1, $versionString, $vendorString, $rendererString, $width, $currentWindow;
    $this.$fps = 0.0;
    $this.$lastTimeStamp = jl_System_currentTimeMillis();
    $this.$frameId = Long_fromInt(-1);
    $this.$deltaTime = 0.0;
    $this.$time = 0.0;
    $this.$config0 = $config;
    cgxgbtdi_TeaWindow_$callClinit();
    $this.$canvas = window.document.getElementById($rt_ustr($config.$canvasID));
    $attr = cgxgbtg_WebGLContextAttributesWrapper_create$js_body$_14();
    $attr.alpha = !!$config.$alpha;
    $attr.antialias = !!$config.$antialiasing;
    $attr.stencil = !!$config.$stencil;
    $attr.premultipliedAlpha = !!$config.$premultipliedAlpha;
    $attr.preserveDrawingBuffer = !!$config.$preserveDrawingBuffer;
    $attr.powerPreference = $rt_ustr($config.$powerPreference);
    $canvas1 = $this.$canvas;
    if ($config.$useGL30)
        $this.$context = $canvas1.getContext("webgl2", $attr);
    a: {
        if ($config.$useGL30) {
            $versionString = $this.$context;
            if ($versionString !== null) {
                if (!$config.$useDebugGL) {
                    $canvas1 = new cgxgbt_TeaGL30;
                    cgxgbt_TeaGL20__init_($canvas1, $versionString);
                    $canvas1.$queries = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$samplers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$feedbacks = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$vertexArrays = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$gl0 = $versionString;
                } else {
                    $canvas1 = new cgxgbt_TeaGL30Debug;
                    cgxgbt_TeaGL20__init_($canvas1, $versionString);
                    $canvas1.$queries = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$samplers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$feedbacks = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$vertexArrays = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
                    $canvas1.$gl0 = $versionString;
                }
                $this.$gl30 = $canvas1;
                $this.$gl20 = $canvas1;
                break a;
            }
        }
        $canvas1 = $canvas1.getContext("webgl", $attr);
        $this.$context = $canvas1;
        if (!$config.$useDebugGL)
            $versionString = cgxgbt_TeaGL20__init_0($canvas1);
        else {
            $versionString = new cgxgbt_TeaGL20Debug;
            cgxgbt_TeaGL20__init_($versionString, $canvas1);
        }
        $this.$gl20 = $versionString;
    }
    $versionString = $this.$gl20.$glGetString(7938);
    $vendorString = $this.$gl20.$glGetString(7936);
    $rendererString = $this.$gl20.$glGetString(7937);
    $this.$glVersion = cbggg_GLVersion__init_0(cbg_Application$ApplicationType_WebGL, $versionString, $vendorString, $rendererString);
    $width = $config.$width2;
    if (!($width < 0 && $config.$height2 < 0)) {
        if ($width && $config.$height2 ? 1 : 0)
            cgxgbt_TeaGraphics_setCanvasSize($this, $width, $config.$height2, 0);
        else {
            $currentWindow = cgxgbtdi_TeaWindow_TEA_WINDOW;
            cgxgbt_TeaGraphics_setCanvasSize($this, $currentWindow.$window.innerWidth - $config.$padHorizontal | 0, $currentWindow.$window.innerHeight - $config.$padVertical | 0, $config.$usePhysicalPixels);
        }
    }
    $this.$context.viewport(0, 0, $this.$canvas.width, $this.$canvas.height);
    $config = $this.$canvas;
    $versionString = new cgxgbt_TeaGraphics$1;
    $versionString.$this$022 = $this;
    cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61($config, otji_JS_function(!($versionString instanceof otji_JSWrapper) ? $versionString : $versionString.$js, "fullscreenChanged"));
},
cgxgbt_TeaGraphics__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGraphics();
    cgxgbt_TeaGraphics__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGraphics_update = $this => {
    let $currTimeStamp, var$2, var$3;
    $currTimeStamp = jl_System_currentTimeMillis();
    var$2 = Long_toNumber(Long_sub($currTimeStamp, $this.$lastTimeStamp)) / 1000.0;
    $this.$deltaTime = var$2;
    $this.$lastTimeStamp = $currTimeStamp;
    var$2 = $this.$time + var$2;
    $this.$time = var$2;
    var$3 = $this.$frames + 1 | 0;
    $this.$frames = var$3;
    if (var$2 > 1.0) {
        $this.$fps = var$3;
        $this.$time = 0.0;
        $this.$frames = 0;
    }
},
cgxgbt_TeaGraphics_setCanvasSize = ($this, $width, $height, $usePhysicalPixels) => {
    let $density, $w, $h, $style, var$8, var$9, var$10, var$11, var$12, var$13;
    $density = 1.0;
    if ($usePhysicalPixels)
        $density = devicePixelRatio || 1;
    a: {
        $w = $width * $density | 0;
        $h = $height * $density | 0;
        $this.$canvas.width = $w;
        $this.$canvas.height = $h;
        if ($usePhysicalPixels) {
            $style = $this.$canvas.style;
            cgxgbtd_StyleWrapper$Unit_$callClinit();
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $width, 10);
            $width = var$8.$length0;
            var$9 = var$8;
            var$10 = $rt_s(125);
            jl_AbstractStringBuilder_insert(var$9, $width, var$10);
            var$9 = new jl_String;
            var$11 = var$8.$buffer;
            var$12 = var$11.data;
            $usePhysicalPixels = var$8.$length0;
            $w = var$12.length;
            if ($usePhysicalPixels >= 0 && $usePhysicalPixels <= ($w - 0 | 0)) {
                var$9.$nativeString = $rt_charArrayToString(var$11.data, 0, $usePhysicalPixels);
                $style.setProperty("width", $rt_ustr(var$9));
                var$10 = new jl_StringBuilder;
                var$10.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0(var$10, var$10.$length0, $height, 10);
                $width = var$10.$length0;
                var$13 = var$10;
                var$8 = $rt_s(125);
                jl_AbstractStringBuilder_insert(var$13, $width, var$8);
                var$13 = new jl_String;
                var$11 = var$10.$buffer;
                var$12 = var$11.data;
                $usePhysicalPixels = var$10.$length0;
                $width = var$12.length;
                if ($usePhysicalPixels < 0)
                    break a;
                if ($usePhysicalPixels > ($width - 0 | 0))
                    break a;
                var$13.$nativeString = $rt_charArrayToString(var$11.data, 0, $usePhysicalPixels);
                $style.setProperty("height", $rt_ustr(var$13));
            } else {
                var$13 = new jl_IndexOutOfBoundsException;
                var$13.$suppressionEnabled = 1;
                var$13.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace(var$13);
                $rt_throw(var$13);
            }
        }
        return;
    }
    var$13 = new jl_IndexOutOfBoundsException;
    var$13.$suppressionEnabled = 1;
    var$13.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$13);
    $rt_throw(var$13);
},
cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61 = (var$1, var$2) => {
    if (var$1.requestFullscreen) {
        document.addEventListener("fullscreenchange", var$2, false);
    }
    if (var$1.webkitRequestFullScreen) {
        document.addEventListener("webkitfullscreenchange", var$2, false);
    }
    if (var$1.mozRequestFullScreen) {
        document.addEventListener("mozfullscreenchange", var$2, false);
    }
    if (var$1.msRequestFullscreen) {
        document.addEventListener("msfullscreenchange", var$2, false);
    }
},
cgxgbta_AssetLoader = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl() {
    let a = this; jl_Object.call(a);
    a.$assetTotal = 0;
    a.$baseUrl = null;
    a.$assetInQueue = null;
    a.$assetDownloader = null;
}
let cgxgbta_AssetLoadImpl_setupFileDrop = ($this, var$1, var$2) => {
    let $config, $document, var$5, var$6;
    $config = var$2.$config;
    if ($config.$windowListener !== null) {
        $document = var$1.ownerDocument;
        var$2 = new cgxgbta_AssetLoadImpl$1;
        var$2.$this$050 = $this;
        var$5 = "addEventListener";
        var$1 = "dragenter";
        var$6 = !(var$2 instanceof otji_JSWrapper) ? var$2 : var$2.$js;
        $document[var$5](var$1, otji_JS_function(var$6, "handleEvent"), !!0);
        var$2 = new cgxgbta_AssetLoadImpl$2;
        var$2.$this$039 = $this;
        var$6 = "addEventListener";
        var$1 = "dragover";
        var$5 = !(var$2 instanceof otji_JSWrapper) ? var$2 : var$2.$js;
        $document[var$6](var$1, otji_JS_function(var$5, "handleEvent"), !!0);
        var$2 = new cgxgbta_AssetLoadImpl$3;
        var$2.$this$010 = $this;
        var$2.$val$config0 = $config;
        $document.addEventListener("drop", otji_JS_function(!(var$2 instanceof otji_JSWrapper) ? var$2 : var$2.$js, "handleEvent"));
    }
},
cgxgbta_AssetLoadImpl_downloadDroppedFile = ($this, $config, $files) => {
    let $totalDraggedFiles, $promises, $i, $fileWrapper, $name, $promiss, $all;
    $totalDraggedFiles = $files.length;
    if ($totalDraggedFiles > 0) {
        $promises = new Array();
        $i = 0;
        while ($i < $totalDraggedFiles) {
            $fileWrapper = $files[$i];
            $name = $rt_str($fileWrapper.name);
            if ($config.$windowListener.$acceptFileDropped($name)) {
                $promiss = new cgxgbta_AssetLoadImpl$getFile$lambda$_2_0;
                $promiss.$_03 = $this;
                $promiss.$_1 = $fileWrapper;
                $promiss.$_2 = $name;
                $promises.push(new Promise(otji_JS_function(!($promiss instanceof otji_JSWrapper) ? $promiss : $promiss.$js, "onExecute")));
            }
            $i = $i + 1 | 0;
        }
        $all = Promise.all($promises);
        $files = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0;
        $files.$_013 = $config;
        $config = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1;
        $promises = "then";
        $files = otji_JS_function(!($files instanceof otji_JSWrapper) ? $files : $files.$js, "apply");
        $fileWrapper = !($config instanceof otji_JSWrapper) ? $config : $config.$js;
        $files = $all[$promises]($files, otji_JS_function($fileWrapper, "apply"));
        $config = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2;
        $files.finally(otji_JS_function(!($config instanceof otji_JSWrapper) ? $config : $config.$js, "get"));
    }
},
cgxgbta_AssetLoadImpl_preload = ($this, $config, $assetFileUrl) => {
    let $listener, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $listener = new cgxgbta_AssetLoadImpl$5;
    $listener.$this$05 = $this;
    $listener.$val$config = $config;
    $listener.$val$assetFileUrl = $assetFileUrl;
    $config = $this.$assetDownloader;
    var$4 = $this.$baseUrl;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$6 = var$5.$length0;
    var$7 = var$5;
    var$4 = var$4 === null ? $rt_s(1) : var$4;
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, var$6, var$4);
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(126));
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    var$6 = var$5.$length0;
    var$10 = var$9.length;
    if (var$6 >= 0 && var$6 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$6);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        var$6 = var$4.$length0;
        var$5 = var$4;
        var$7 = var$7;
        var$5 = var$5;
        jl_AbstractStringBuilder_insert(var$5, var$6, var$7);
        jl_AbstractStringBuilder_insert(var$5, var$4.$length0, $assetFileUrl === null ? $rt_s(1) : $assetFileUrl);
        var$7 = new jl_String;
        var$9 = var$4.$buffer;
        var$8 = var$9.data;
        var$10 = var$4.$length0;
        var$11 = var$8.length;
        if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
            var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$10);
            $assetFileUrl = cgxgbta_AssetType_Binary;
            cgxgbta_AssetDownloadImpl_load($config, 1, var$7, $assetFileUrl, $listener);
            return;
        }
        $config = new jl_IndexOutOfBoundsException;
        $config.$suppressionEnabled = 1;
        $config.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace($config);
        $rt_throw($config);
    }
    $config = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($config);
    $rt_throw($config);
},
cgxgbta_AssetLoadImpl_getQueue = $this => {
    return $this.$assetDownloader.$queue;
},
cgxgbta_AssetLoadImpl_loadAsset = ($this, $async, $path, $assetType, $fileType, $listener, $overwrite) => {
    let $path1, $fileHandle, $exists, var$10, var$11, var$12, var$13, var$14;
    $path1 = jl_String_replace(jl_String_trim($path), $rt_s(127), $rt_s(113));
    if ($path1 === $rt_s(113) ? 1 : jl_String_startsWith0($path1, $rt_s(113), 0))
        $path1 = jl_String_substring($path1, 1, $path1.$nativeString.length);
    if ($path1.$nativeString.length ? 0 : 1)
        return;
    a: {
        $fileHandle = $this.$assetInQueue.$backingMap;
        $path = $path1;
        if (!$path.$hashCode0) {
            $exists = 0;
            while (true) {
                if ($exists >= $path.$nativeString.length)
                    break a;
                $path.$hashCode0 = (31 * $path.$hashCode0 | 0) + $path.$nativeString.charCodeAt($exists) | 0;
                $exists = $exists + 1 | 0;
            }
        }
    }
    var$10 = $path.$hashCode0;
    var$11 = $fileHandle.$elementData.data;
    var$12 = var$11[var$10 & (var$11.length - 1 | 0)];
    while (var$12 !== null) {
        if (var$12.$origKeyHash == var$10) {
            b: {
                $fileHandle = var$12.$key;
                if ($path1 !== $fileHandle) {
                    if ($path === $fileHandle)
                        $exists = 1;
                    else if (!($fileHandle instanceof jl_String))
                        $exists = 0;
                    else {
                        $fileHandle = $fileHandle;
                        $exists = $path.$nativeString !== $fileHandle.$nativeString ? 0 : 1;
                    }
                    if (!$exists) {
                        $exists = 0;
                        break b;
                    }
                }
                $exists = 1;
            }
            if ($exists)
                break;
        }
        var$12 = var$12.$next1;
    }
    if (var$12 === null ? 0 : 1)
        return;
    $fileHandle = cgxgbt_TeaFiles_getFileHandle(cbg_Gdx_files, $path1, $fileType);
    $exists = cgxgbt_TeaFileHandle_exists($fileHandle);
    if (!$overwrite && $exists)
        return;
    if ($assetType === cgxgbta_AssetType_Directory) {
        if (!$exists) {
            $path = $fileHandle.$teaFiles;
            $assetType = $fileHandle.$type1;
            cgxgbtf_MemoryFileStorage_mkdirs($assetType === cbg_Files$FileType_Internal ? $path.$internalStorage : $assetType === cbg_Files$FileType_Classpath ? $path.$classpathStorage : $assetType !== cbg_Files$FileType_Local ? null : $path.$localStorage, $fileHandle);
        }
        return;
    }
    $assetType = $this.$assetInQueue;
    ju_HashMap_putImpl($assetType.$backingMap, $path1, $assetType);
    $assetType = $this.$assetDownloader;
    $fileType = $this.$baseUrl;
    var$13 = new jl_StringBuilder;
    var$13.$buffer = $rt_createCharArray(16);
    $overwrite = var$13.$length0;
    var$12 = var$13;
    $fileType = $fileType === null ? $rt_s(1) : $fileType;
    var$12 = var$12;
    jl_AbstractStringBuilder_insert(var$12, $overwrite, $fileType);
    jl_AbstractStringBuilder_insert(var$12, var$13.$length0, $rt_s(126));
    $fileType = new jl_String;
    var$11 = var$13.$buffer;
    var$14 = var$11.data;
    $exists = var$13.$length0;
    var$10 = var$14.length;
    if ($exists >= 0 && $exists <= (var$10 - 0 | 0)) {
        $fileType.$nativeString = $rt_charArrayToString(var$11.data, 0, $exists);
        var$13 = new jl_StringBuilder;
        var$13.$buffer = $rt_createCharArray(16);
        $overwrite = var$13.$length0;
        var$12 = var$13;
        $fileType = $fileType;
        var$12 = var$12;
        jl_AbstractStringBuilder_insert(var$12, $overwrite, $fileType);
        jl_AbstractStringBuilder_insert(var$12, var$13.$length0, $path1 === null ? $rt_s(1) : $path);
        $fileType = new jl_String;
        var$11 = var$13.$buffer;
        var$14 = var$11.data;
        $exists = var$13.$length0;
        var$10 = var$14.length;
        if ($exists >= 0 && $exists <= (var$10 - 0 | 0)) {
            $fileType.$nativeString = $rt_charArrayToString(var$11.data, 0, $exists);
            var$13 = cgxgbta_AssetType_Binary;
            $path = new cgxgbta_AssetLoadImpl$6;
            $path.$this$09 = $this;
            $path.$val$listener1 = $listener;
            $path.$val$path1 = $path1;
            $path.$val$fileHandle = $fileHandle;
            cgxgbta_AssetDownloadImpl_load($assetType, $async, $fileType, var$13, $path);
            return;
        }
        $path = new jl_IndexOutOfBoundsException;
        $path.$suppressionEnabled = 1;
        $path.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace($path);
        $rt_throw($path);
    }
    $path = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($path);
    $rt_throw($path);
},
cbg_Input = $rt_classWithoutFields(0);
function cbg_AbstractInput() {
    let a = this; jl_Object.call(a);
    a.$pressedKeys = null;
    a.$justPressedKeys = null;
    a.$keysToCatch = null;
    a.$pressedKeyCount0 = 0;
    a.$keyJustPressed0 = 0;
}
let cgxgbtd_EventListenerWrapper = $rt_classWithoutFields(0);
function cgxgbt_TeaInput() {
    let a = this; cbg_AbstractInput.call(a);
    a.$canvas0 = null;
    a.$justTouched = 0;
    a.$touchMap = null;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$pressedButtons = null;
    a.$pressedKeyCount = 0;
    a.$keyJustPressed = 0;
    a.$justPressedButtons = null;
    a.$processor = null;
    a.$currentEventTimeStamp = Long_ZERO;
    a.$hasFocus = 0;
    a.$application = null;
}
let cgxgbt_TeaInput_getMouseWheelVelocity = $event => {
    let $agent, $delta, $detail, $wheelDelta;
    $agent = cgxgbt_TeaApplication_agentInfo;
    $delta = 0.0;
    $detail = $event.detail;
    $wheelDelta = $event.wheelDelta;
    if ($agent.firefox ? 1 : 0)
        $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
    else if ($agent.opera ? 1 : 0)
        $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
    else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
        $delta = (-1.0) * $wheelDelta;
        $detail = $delta / 120.0;
        if (jl_Math_absImpl($detail) >= 1.0)
            $delta = $detail;
        else if (!($agent.windows ? 1 : 0))
            $delta = !($agent.macOS ? 1 : 0) ? $detail : $delta / 3.0;
    }
    return $delta;
},
cgxgbt_TeaInput__init_0 = ($this, $application, $canvas) => {
    $this.$keysToCatch = cbgu_IntSet__init_(51, 0.800000011920929);
    $this.$pressedKeys = $rt_createBooleanArray(256);
    $this.$justPressedKeys = $rt_createBooleanArray(256);
    $this.$justTouched = 0;
    $this.$touchMap = cbgu_IntMap__init_0(20, 0.800000011920929);
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$pressedButtons = cbgu_IntSet__init_(51, 0.800000011920929);
    $this.$pressedKeyCount = 0;
    $this.$keyJustPressed = 0;
    $this.$justPressedButtons = $rt_createBooleanArray(5);
    $this.$hasFocus = 1;
    $this.$application = $application;
    $this.$canvas0 = $canvas;
    cgxgbt_TeaInput_hookEvents($this);
},
cgxgbt_TeaInput__init_ = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaInput();
    cgxgbt_TeaInput__init_0(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaInput_hookEvents = $this => {
    let $document, var$2, var$3, var$4, var$5, var$6;
    $document = $this.$canvas0.ownerDocument;
    var$2 = "addEventListener";
    var$3 = "mousedown";
    var$4 = $this instanceof otji_JSWrapper;
    var$5 = !var$4 ? $this : $this.$js;
    $document[var$2](var$3, otji_JS_function(var$5, "handleEvent"), !!0);
    var$2 = "addEventListener";
    var$3 = "mouseup";
    var$5 = !var$4 ? $this : $this.$js;
    $document[var$2](var$3, otji_JS_function(var$5, "handleEvent"), !!0);
    var$2 = "addEventListener";
    var$3 = "mousemove";
    var$5 = !var$4 ? $this : $this.$js;
    $document[var$2](var$3, otji_JS_function(var$5, "handleEvent"), !!0);
    var$2 = "addEventListener";
    var$3 = "wheel";
    var$5 = !var$4 ? $this : $this.$js;
    $document[var$2](var$3, otji_JS_function(var$5, "handleEvent"), !!0);
    var$2 = "addEventListener";
    var$3 = "keydown";
    var$5 = !var$4 ? $this : $this.$js;
    $document[var$2](var$3, otji_JS_function(var$5, "handleEvent"), !!0);
    var$2 = "addEventListener";
    var$3 = "keyup";
    var$5 = !var$4 ? $this : $this.$js;
    $document[var$2](var$3, otji_JS_function(var$5, "handleEvent"), !!0);
    var$2 = "addEventListener";
    var$3 = "keypress";
    var$5 = !var$4 ? $this : $this.$js;
    $document[var$2](var$3, otji_JS_function(var$5, "handleEvent"), !!0);
    var$3 = $this.$canvas0;
    var$2 = "addEventListener";
    $document = "touchstart";
    var$5 = !var$4 ? $this : $this.$js;
    var$3[var$2]($document, otji_JS_function(var$5, "handleEvent"), !!1);
    var$3 = $this.$canvas0;
    var$2 = "addEventListener";
    $document = "touchmove";
    var$5 = !var$4 ? $this : $this.$js;
    var$3[var$2]($document, otji_JS_function(var$5, "handleEvent"), !!1);
    var$3 = $this.$canvas0;
    var$5 = "addEventListener";
    $document = "touchcancel";
    var$6 = !var$4 ? $this : $this.$js;
    var$3[var$5]($document, otji_JS_function(var$6, "handleEvent"), !!1);
    $this.$canvas0.addEventListener("touchend", otji_JS_function(!var$4 ? $this : $this.$js, "handleEvent"), !!1);
},
cgxgbt_TeaInput_handleMouseEvents = ($this, $touchEvent) => {
    let $type, $touches, $i, $relativeX, $relativeY, var$7, $j, var$9, $real, $wheelDelta, $touch, $target, $equals, $canvas2, $touches_0, $button, $mouseX, $mouseY, $touchId, $real_0;
    $type = $rt_str($touchEvent.type);
    if ($type !== $rt_s(128)) {
        if ($rt_s(128) instanceof jl_String) {
            $touches = $rt_s(128);
            $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
        } else
            $i = 0;
    } else
        $i = 1;
    a: {
        if (!$i) {
            if ($type === $rt_s(129))
                $i = 1;
            else if ($rt_s(129) instanceof jl_String) {
                $touches = $rt_s(129);
                $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
            } else
                $i = 0;
            if (!$i) {
                if ($type === $rt_s(130))
                    $i = 1;
                else if (!($rt_s(130) instanceof jl_String))
                    $i = 0;
                else {
                    $touches = $rt_s(130);
                    $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
                }
                if ($i) {
                    if (!(cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75($this.$canvas0) ? 1 : 0)) {
                        $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas0);
                        $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas0);
                        var$7 = $this.$touchX.data;
                        $j = $relativeX - var$7[0] | 0;
                        var$9 = $this.$touchY.data;
                        $i = $relativeY - var$9[0] | 0;
                        $this.$deltaX.data[0] = $j;
                        $this.$deltaY.data[0] = $i;
                        var$7[0] = $relativeX;
                        var$9[0] = $relativeY;
                    } else {
                        $real = $touchEvent.movementX | 0;
                        $relativeX = $touchEvent.movementY | 0;
                        $this.$deltaX.data[0] = $real;
                        $this.$deltaY.data[0] = $relativeX;
                        var$7 = $this.$touchX.data;
                        var$7[0] = var$7[0] + $touchEvent.movementX | 0;
                        var$7 = $this.$touchY.data;
                        var$7[0] = var$7[0] + $touchEvent.movementY | 0;
                    }
                    $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
                    $touches = $this.$processor;
                    if ($touches !== null) {
                        if (!$this.$touched.data[0])
                            $touches.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
                        else
                            $touches.$touchDragged($this.$touchX.data[0], $this.$touchY.data[0], 0);
                    }
                } else {
                    if ($type === $rt_s(131))
                        $i = 1;
                    else if (!($rt_s(131) instanceof jl_String))
                        $i = 0;
                    else {
                        $touches = $rt_s(131);
                        $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
                    }
                    if ($i) {
                        if ($this.$processor !== null) {
                            $wheelDelta = cgxgbt_TeaInput_getMouseWheelVelocity($touchEvent);
                            $this.$processor.$scrolled(0.0, $wheelDelta | 0);
                        }
                        $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
                    } else {
                        if ($type === $rt_s(132))
                            $i = 1;
                        else if (!($rt_s(132) instanceof jl_String))
                            $i = 0;
                        else {
                            $touches = $rt_s(132);
                            $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
                        }
                        if ($i) {
                            $this.$justTouched = 1;
                            $touches = $touchEvent.changedTouches;
                            $i = 0;
                            $j = $touches.length;
                            while ($i < $j) {
                                $touch = $touches.item($i);
                                $real = $touch.identifier;
                                $target = $this.$touchMap;
                                $equals = 0;
                                b: {
                                    while (true) {
                                        if ($equals >= 20) {
                                            $equals = (-1);
                                            break b;
                                        }
                                        $canvas2 = $this.$touchMap;
                                        if ($equals >= (-128) && $equals <= 127) {
                                            jl_Integer_ensureIntegerCache();
                                            $touches_0 = jl_Integer_integerCache.data[$equals + 128 | 0];
                                        } else {
                                            $touches_0 = new jl_Integer;
                                            $touches_0.$value = $equals;
                                        }
                                        if (!cbgu_IntMap_containsValue($canvas2, $touches_0, 0))
                                            break;
                                        $equals = $equals + 1 | 0;
                                    }
                                }
                                if ($equals >= (-128) && $equals <= 127) {
                                    jl_Integer_ensureIntegerCache();
                                    $canvas2 = jl_Integer_integerCache.data[$equals + 128 | 0];
                                } else {
                                    $canvas2 = new jl_Integer;
                                    $canvas2.$value = $equals;
                                }
                                cbgu_IntMap_put($target, $real, $canvas2);
                                $this.$touched.data[$equals] = 1;
                                var$7 = $this.$touchX;
                                $touches_0 = $this.$canvas0;
                                $wheelDelta = $touches_0.width * 1.0 / $touches_0.clientWidth;
                                $real = ($touch.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $touches_0) | 0) | 0) + ($touches_0.scrollLeft | 0) | 0;
                                $canvas2 = $touches_0.ownerDocument;
                                $target = $rt_str($canvas2.compatMode);
                                if ($target === $rt_s(133))
                                    $relativeX = 1;
                                else if (!($rt_s(133) instanceof jl_String))
                                    $relativeX = 0;
                                else {
                                    $touches_0 = $rt_s(133);
                                    $relativeX = $target.$nativeString !== $touches_0.$nativeString ? 0 : 1;
                                }
                                if ($relativeX)
                                    $canvas2 = $canvas2.documentElement;
                                var$7 = var$7.data;
                                $wheelDelta = $wheelDelta * ($real + ($canvas2.scrollLeft | 0) | 0);
                                var$7[$equals] = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
                                var$7 = $this.$touchY;
                                $touches_0 = $this.$canvas0;
                                $wheelDelta = $touches_0.height * 1.0 / $touches_0.clientHeight;
                                $real = ($touch.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $touches_0) | 0) | 0) + ($touches_0.scrollTop | 0) | 0;
                                $touch = $touches_0.ownerDocument;
                                $touches_0 = $rt_str($touch.compatMode);
                                if ($touches_0 === $rt_s(133))
                                    $relativeX = 1;
                                else if (!($rt_s(133) instanceof jl_String))
                                    $relativeX = 0;
                                else {
                                    $canvas2 = $rt_s(133);
                                    $relativeX = $touches_0.$nativeString !== $canvas2.$nativeString ? 0 : 1;
                                }
                                if ($relativeX)
                                    $touch = $touch.documentElement;
                                var$7 = var$7.data;
                                $wheelDelta = $wheelDelta * ($real + ($touch.scrollTop | 0) | 0);
                                var$7[$equals] = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
                                $this.$deltaX.data[$equals] = 0;
                                $this.$deltaY.data[$equals] = 0;
                                $touch = $this.$processor;
                                if ($touch !== null)
                                    $touch.$touchDown($this.$touchX.data[$equals], $this.$touchY.data[$equals], $equals, 0);
                                $i = $i + 1 | 0;
                            }
                            $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
                            $touchEvent.preventDefault();
                        }
                    }
                }
            } else {
                if (!$this.$touched.data[0])
                    return;
                $touches = $this.$pressedButtons;
                $i = $touchEvent.button;
                cbgu_IntSet_remove($touches, !$i ? 0 : $i == 2 ? 1 : $i != 1 ? 0 : 2);
                var$7 = $this.$touched;
                var$7.data[0] = $this.$pressedButtons.$size3 <= 0 ? 0 : 1;
                if (!(cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75($this.$canvas0) ? 1 : 0)) {
                    $real = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas0) - $this.$touchX.data[0] | 0;
                    $relativeX = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas0) - $this.$touchY.data[0] | 0;
                    $this.$deltaX.data[0] = $real;
                    $this.$deltaY.data[0] = $relativeX;
                    $this.$touchX.data[0] = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas0);
                    $this.$touchY.data[0] = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas0);
                } else {
                    $real = $touchEvent.movementX | 0;
                    $relativeX = $touchEvent.movementY | 0;
                    $this.$deltaX.data[0] = $real;
                    $this.$deltaY.data[0] = $relativeX;
                    var$7 = $this.$touchX.data;
                    var$7[0] = var$7[0] + $touchEvent.movementX | 0;
                    var$7 = $this.$touchY.data;
                    var$7[0] = var$7[0] + $touchEvent.movementY | 0;
                }
                $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
                $this.$touched.data[0] = 0;
                $touches = $this.$processor;
                if ($touches !== null) {
                    $i = $this.$touchX.data[0];
                    $real = $this.$touchY.data[0];
                    $relativeY = $touchEvent.button;
                    $touches.$touchUp($i, $real, 0, !$relativeY ? 0 : $relativeY == 2 ? 1 : $relativeY != 1 ? 0 : 2);
                }
            }
        } else {
            window.focus();
            $target = $touchEvent.target;
            $canvas2 = $this.$canvas0;
            if ($target !== $canvas2 ? 0 : 1) {
                var$7 = $this.$touched.data;
                if (!var$7[0]) {
                    $this.$hasFocus = 1;
                    $this.$justTouched = 1;
                    var$7[0] = 1;
                    $i = $touchEvent.button;
                    $button = !$i ? 0 : $i == 2 ? 1 : $i != 1 ? 0 : 2;
                    cbgu_IntSet_add($this.$pressedButtons, $button);
                    $this.$justPressedButtons.data[$button] = 1;
                    $this.$deltaX.data[0] = 0;
                    $this.$deltaY.data[0] = 0;
                    if (!(cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75($this.$canvas0) ? 1 : 0)) {
                        $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas0);
                        $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas0);
                        $this.$touchX.data[0] = $relativeX;
                        $this.$touchY.data[0] = $relativeY;
                    } else {
                        var$7 = $this.$touchX.data;
                        var$7[0] = var$7[0] + $touchEvent.movementX | 0;
                        var$7 = $this.$touchY.data;
                        var$7[0] = var$7[0] + $touchEvent.movementY | 0;
                    }
                    $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
                    $touches = $this.$processor;
                    if ($touches !== null) {
                        $i = $this.$touchX.data[0];
                        $real = $this.$touchY.data[0];
                        $relativeY = $touchEvent.button;
                        $touches.$touchDown($i, $real, 0, !$relativeY ? 0 : $relativeY == 2 ? 1 : $relativeY != 1 ? 0 : 2);
                    }
                    $touchEvent.preventDefault();
                    $touchEvent.stopPropagation();
                    break a;
                }
            }
            $mouseX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $canvas2);
            $mouseY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas0);
            if (!($mouseX >= 0.0 && $mouseX <= cbg_Gdx_graphics.$canvas.width && $mouseY >= 0.0 && $mouseY <= cbg_Gdx_graphics.$canvas.height))
                $this.$hasFocus = 0;
            return;
        }
    }
    if ($type === $rt_s(134))
        $i = 1;
    else if (!($rt_s(134) instanceof jl_String))
        $i = 0;
    else {
        $touches = $rt_s(134);
        $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
    }
    if ($i) {
        $touches_0 = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches_0.length;
        while ($i < $j) {
            $touch = $touches_0.item($i);
            $real = $touch.identifier;
            $touches = $this.$touchMap;
            if (!$real)
                $touches = !$touches.$hasZeroValue ? null : $touches.$zeroValue;
            else {
                var$7 = $touches.$keyTable0;
                $relativeX = Long_lo(Long_shru(Long_mul(Long_fromInt($real), Long_create(2135587861, 2654435769)), $touches.$shift));
                c: {
                    while (true) {
                        $relativeY = var$7.data[$relativeX];
                        if (!$relativeY) {
                            $relativeX =  -($relativeX + 1 | 0) | 0;
                            break c;
                        }
                        if ($relativeY == $real)
                            break;
                        $relativeX = ($relativeX + 1 | 0) & $touches.$mask;
                    }
                }
                $touches = $relativeX < 0 ? null : $touches.$valueTable1.data[$relativeX];
            }
            $touchId = $touches.$value;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.width * 1.0 / $touches.clientWidth;
            $real = ($touch.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $touches) | 0) | 0) + ($touches.scrollLeft | 0) | 0;
            $touches = $touches.ownerDocument;
            $target = $rt_str($touches.compatMode);
            if ($target === $rt_s(133))
                $relativeX = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeX = 0;
            else {
                $canvas2 = $rt_s(133);
                $relativeX = $target.$nativeString !== $canvas2.$nativeString ? 0 : 1;
            }
            if ($relativeX)
                $touches = $touches.documentElement;
            $wheelDelta = $wheelDelta * ($real + ($touches.scrollLeft | 0) | 0);
            $real = ($wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0) - $this.$touchX.data[$touchId] | 0;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.height * 1.0 / $touches.clientHeight;
            $relativeX = ($touch.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $touches) | 0) | 0) + ($touches.scrollTop | 0) | 0;
            $touches = $touches.ownerDocument;
            $target = $rt_str($touches.compatMode);
            if ($target === $rt_s(133))
                $relativeY = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeY = 0;
            else {
                $canvas2 = $rt_s(133);
                $relativeY = $target.$nativeString !== $canvas2.$nativeString ? 0 : 1;
            }
            if ($relativeY)
                $touches = $touches.documentElement;
            $wheelDelta = $wheelDelta * ($relativeX + ($touches.scrollTop | 0) | 0);
            $relativeX = ($wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0) - $this.$touchY.data[$touchId] | 0;
            $this.$deltaX.data[$touchId] = $real;
            $this.$deltaY.data[$touchId] = $relativeX;
            var$7 = $this.$touchX;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.width * 1.0 / $touches.clientWidth;
            $real = ($touch.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $touches) | 0) | 0) + ($touches.scrollLeft | 0) | 0;
            $touches = $touches.ownerDocument;
            $target = $rt_str($touches.compatMode);
            if ($target === $rt_s(133))
                $relativeX = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeX = 0;
            else {
                $canvas2 = $rt_s(133);
                $relativeX = $target.$nativeString !== $canvas2.$nativeString ? 0 : 1;
            }
            if ($relativeX)
                $touches = $touches.documentElement;
            var$7 = var$7.data;
            $wheelDelta = $wheelDelta * ($real + ($touches.scrollLeft | 0) | 0);
            var$7[$touchId] = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
            var$7 = $this.$touchY;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.height * 1.0 / $touches.clientHeight;
            $real = ($touch.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $touches) | 0) | 0) + ($touches.scrollTop | 0) | 0;
            $touches = $touches.ownerDocument;
            $canvas2 = $rt_str($touches.compatMode);
            if ($canvas2 === $rt_s(133))
                $relativeX = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeX = 0;
            else {
                $touch = $rt_s(133);
                $relativeX = $canvas2.$nativeString !== $touch.$nativeString ? 0 : 1;
            }
            if ($relativeX)
                $touches = $touches.documentElement;
            var$7 = var$7.data;
            $wheelDelta = $wheelDelta * ($real + ($touches.scrollTop | 0) | 0);
            var$7[$touchId] = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
            $touches = $this.$processor;
            if ($touches !== null)
                $touches.$touchDragged($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
        $touchEvent.preventDefault();
    }
    if ($type === $rt_s(135))
        $i = 1;
    else if (!($rt_s(135) instanceof jl_String))
        $i = 0;
    else {
        $touches = $rt_s(135);
        $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
    }
    if ($i) {
        $touches_0 = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches_0.length;
        while ($i < $j) {
            $touch = $touches_0.item($i);
            $real_0 = $touch.identifier;
            $touches = $this.$touchMap;
            if (!$real_0)
                $canvas2 = !$touches.$hasZeroValue ? null : $touches.$zeroValue;
            else {
                var$7 = $touches.$keyTable0;
                $real = Long_lo(Long_shru(Long_mul(Long_fromInt($real_0), Long_create(2135587861, 2654435769)), $touches.$shift));
                d: {
                    while (true) {
                        $relativeX = var$7.data[$real];
                        if (!$relativeX) {
                            $real =  -($real + 1 | 0) | 0;
                            break d;
                        }
                        if ($relativeX == $real_0)
                            break;
                        $real = ($real + 1 | 0) & $touches.$mask;
                    }
                }
                $canvas2 = $real < 0 ? null : $touches.$valueTable1.data[$real];
            }
            $touchId = $canvas2.$value;
            cbgu_IntMap_remove($touches, $real_0);
            $this.$touched.data[$touchId] = 0;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.width * 1.0 / $touches.clientWidth;
            $real = ($touch.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $touches) | 0) | 0) + ($touches.scrollLeft | 0) | 0;
            $touches = $touches.ownerDocument;
            $target = $rt_str($touches.compatMode);
            if ($target === $rt_s(133))
                $relativeX = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeX = 0;
            else {
                $canvas2 = $rt_s(133);
                $relativeX = $target.$nativeString !== $canvas2.$nativeString ? 0 : 1;
            }
            if ($relativeX)
                $touches = $touches.documentElement;
            $wheelDelta = $wheelDelta * ($real + ($touches.scrollLeft | 0) | 0);
            $equals = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.height * 1.0 / $touches.clientHeight;
            $real = ($touch.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $touches) | 0) | 0) + ($touches.scrollTop | 0) | 0;
            $touches = $touches.ownerDocument;
            $canvas2 = $rt_str($touches.compatMode);
            if ($canvas2 === $rt_s(133))
                $relativeX = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeX = 0;
            else {
                $touch = $rt_s(133);
                $relativeX = $canvas2.$nativeString !== $touch.$nativeString ? 0 : 1;
            }
            if ($relativeX)
                $touches = $touches.documentElement;
            $wheelDelta = $wheelDelta * ($real + ($touches.scrollTop | 0) | 0);
            $relativeY = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
            var$7 = $this.$touchX.data;
            $real = $equals - var$7[$touchId] | 0;
            var$9 = $this.$touchY.data;
            $relativeX = $relativeY - var$9[$touchId] | 0;
            $this.$deltaX.data[$touchId] = $real;
            $this.$deltaY.data[$touchId] = $relativeX;
            var$7[$touchId] = $equals;
            var$9[$touchId] = $relativeY;
            $touches = $this.$processor;
            if ($touches !== null)
                $touches.$touchUp(var$7[$touchId], var$9[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
        $touchEvent.preventDefault();
    }
    if ($type === $rt_s(136))
        $i = 1;
    else if (!($rt_s(136) instanceof jl_String))
        $i = 0;
    else {
        $touches = $rt_s(136);
        $i = $type.$nativeString !== $touches.$nativeString ? 0 : 1;
    }
    if ($i) {
        $touches_0 = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches_0.length;
        while ($i < $j) {
            $touch = $touches_0.item($i);
            $real = $touch.identifier;
            $touches = $this.$touchMap;
            if (!$real)
                $type = !$touches.$hasZeroValue ? null : $touches.$zeroValue;
            else {
                var$7 = $touches.$keyTable0;
                $relativeX = Long_lo(Long_shru(Long_mul(Long_fromInt($real), Long_create(2135587861, 2654435769)), $touches.$shift));
                e: {
                    while (true) {
                        $relativeY = var$7.data[$relativeX];
                        if (!$relativeY) {
                            $relativeX =  -($relativeX + 1 | 0) | 0;
                            break e;
                        }
                        if ($relativeY == $real)
                            break;
                        $relativeX = ($relativeX + 1 | 0) & $touches.$mask;
                    }
                }
                $type = $relativeX < 0 ? null : $touches.$valueTable1.data[$relativeX];
            }
            $touchId = $type.$value;
            cbgu_IntMap_remove($touches, $real);
            $this.$touched.data[$touchId] = 0;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.width * 1.0 / $touches.clientWidth;
            $real = ($touch.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $touches) | 0) | 0) + ($touches.scrollLeft | 0) | 0;
            $touches = $touches.ownerDocument;
            $canvas2 = $rt_str($touches.compatMode);
            if ($canvas2 === $rt_s(133))
                $relativeX = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeX = 0;
            else {
                $type = $rt_s(133);
                $relativeX = $canvas2.$nativeString !== $type.$nativeString ? 0 : 1;
            }
            if ($relativeX)
                $touches = $touches.documentElement;
            $wheelDelta = $wheelDelta * ($real + ($touches.scrollLeft | 0) | 0);
            $equals = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
            $touches = $this.$canvas0;
            $wheelDelta = $touches.height * 1.0 / $touches.clientHeight;
            $real = ($touch.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $touches) | 0) | 0) + ($touches.scrollTop | 0) | 0;
            $touches = $touches.ownerDocument;
            $touch = $rt_str($touches.compatMode);
            if ($touch === $rt_s(133))
                $relativeX = 1;
            else if (!($rt_s(133) instanceof jl_String))
                $relativeX = 0;
            else {
                $type = $rt_s(133);
                $relativeX = $touch.$nativeString !== $type.$nativeString ? 0 : 1;
            }
            if ($relativeX)
                $touches = $touches.documentElement;
            $wheelDelta = $wheelDelta * ($real + ($touches.scrollTop | 0) | 0);
            $relativeY = $wheelDelta + jl_Math_sign($wheelDelta) * 0.5 | 0;
            var$7 = $this.$touchX.data;
            $real = $equals - var$7[$touchId] | 0;
            var$9 = $this.$touchY.data;
            $relativeX = $relativeY - var$9[$touchId] | 0;
            $this.$deltaX.data[$touchId] = $real;
            $this.$deltaY.data[$touchId] = $relativeX;
            var$7[$touchId] = $equals;
            var$9[$touchId] = $relativeY;
            $touches = $this.$processor;
            if ($touches !== null)
                $touches.$touchUp(var$7[$touchId], var$9[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = Long_fromNumber(performance.now() * 1000000.0);
        $touchEvent.preventDefault();
    }
},
cgxgbt_TeaInput_handleKeyboardEvents = ($this, $keyboardEvent) => {
    let $type, $c, var$4, $code, $keyChar, var$7, var$8;
    $type = $rt_str($keyboardEvent.type);
    if ($type === $rt_s(137))
        $c = 1;
    else if (!($rt_s(137) instanceof jl_String))
        $c = 0;
    else {
        var$4 = $rt_s(137);
        $c = $type.$nativeString !== var$4.$nativeString ? 0 : 1;
    }
    if ($c && $this.$hasFocus) {
        a: {
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            $keyChar = 0;
            switch ($code) {
                case 67:
                    $keyChar = 8;
                    break a;
                case 112:
                    $keyChar = 127;
                    break a;
                default:
            }
        }
        var$4 = $this.$keysToCatch;
        if (!$code)
            $c = var$4.$hasZeroValue0;
        else {
            var$7 = var$4.$keyTable1;
            $c = Long_lo(Long_shru(Long_mul(Long_fromInt($code), Long_create(2135587861, 2654435769)), var$4.$shift0));
            b: {
                while (true) {
                    var$8 = var$7.data[$c];
                    if (!var$8) {
                        $c =  -($c + 1 | 0) | 0;
                        break b;
                    }
                    if (var$8 == $code)
                        break;
                    $c = ($c + 1 | 0) & var$4.$mask0;
                }
            }
            $c = $c < 0 ? 0 : 1;
        }
        if ($c)
            $keyboardEvent.preventDefault();
        if (!($code != 67 && $code != 112)) {
            $keyboardEvent.preventDefault();
            var$4 = $this.$processor;
            if (var$4 !== null) {
                var$4.$keyDown($code);
                $this.$processor.$keyTyped($keyChar);
            }
        } else {
            var$7 = $this.$pressedKeys.data;
            if (!var$7[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
                var$7[$code] = 1;
                $this.$keyJustPressed = 1;
                $this.$justPressedKeys.data[$code] = 1;
                var$4 = $this.$processor;
                if (var$4 !== null)
                    var$4.$keyDown($code);
            }
        }
        if ($code == 61) {
            $keyboardEvent.preventDefault();
            $keyboardEvent.stopPropagation();
        }
    } else {
        if ($type === $rt_s(138))
            $c = 1;
        else if (!($rt_s(138) instanceof jl_String))
            $c = 0;
        else {
            var$4 = $rt_s(138);
            $c = $type.$nativeString !== var$4.$nativeString ? 0 : 1;
        }
        if ($c && $this.$hasFocus) {
            $c = $keyboardEvent.charCode & 65535;
            var$4 = $this.$processor;
            if (var$4 !== null)
                var$4.$keyTyped($c);
            if ($c == 9) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        } else {
            if ($type === $rt_s(139))
                $c = 1;
            else if (!($rt_s(139) instanceof jl_String))
                $c = 0;
            else {
                var$4 = $rt_s(139);
                $c = $type.$nativeString !== var$4.$nativeString ? 0 : 1;
            }
            if ($c && $this.$hasFocus) {
                $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
                var$4 = $this.$keysToCatch;
                if (!$code)
                    $c = var$4.$hasZeroValue0;
                else {
                    var$7 = var$4.$keyTable1;
                    $c = Long_lo(Long_shru(Long_mul(Long_fromInt($code), Long_create(2135587861, 2654435769)), var$4.$shift0));
                    c: {
                        while (true) {
                            $keyChar = var$7.data[$c];
                            if (!$keyChar) {
                                $c =  -($c + 1 | 0) | 0;
                                break c;
                            }
                            if ($keyChar == $code)
                                break;
                            $c = ($c + 1 | 0) & var$4.$mask0;
                        }
                    }
                    $c = $c < 0 ? 0 : 1;
                }
                if ($c)
                    $keyboardEvent.preventDefault();
                var$7 = $this.$pressedKeys.data;
                if (var$7[$code]) {
                    $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                    var$7[$code] = 0;
                }
                var$4 = $this.$processor;
                if (var$4 !== null)
                    var$4.$keyUp($code);
                if ($code == 61) {
                    $keyboardEvent.preventDefault();
                    $keyboardEvent.stopPropagation();
                }
            }
        }
    }
},
cgxgbt_TeaInput_reset = $this => {
    let $i, var$2, $i_0;
    a: {
        if ($this.$justTouched) {
            $this.$justTouched = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$justPressedButtons.data;
                if ($i >= var$2.length)
                    break a;
                var$2[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if ($this.$keyJustPressed) {
            $this.$keyJustPressed = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$justPressedKeys.data;
                if ($i >= var$2.length)
                    break b;
                var$2[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    $i_0 = 0;
    while ($i_0 < $this.$touchX.data.length) {
        $this.$deltaX.data[$i_0] = 0;
        $this.$deltaY.data[$i_0] = 0;
        $i_0 = $i_0 + 1 | 0;
    }
},
cgxgbt_TeaInput_getRelativeX = ($this, $e, $target) => {
    let $xScaleRatio, var$4, var$5, var$6;
    $xScaleRatio = $target.width * 1.0 / $target.clientWidth;
    var$4 = ($e.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $target) | 0) | 0) + ($target.scrollLeft | 0) | 0;
    $e = $target.ownerDocument;
    var$5 = $rt_str($e.compatMode);
    if (var$5 === $rt_s(133))
        var$6 = 1;
    else if (!($rt_s(133) instanceof jl_String))
        var$6 = 0;
    else {
        $target = $rt_s(133);
        var$6 = var$5.$nativeString !== $target.$nativeString ? 0 : 1;
    }
    if (var$6)
        $e = $e.documentElement;
    $xScaleRatio = $xScaleRatio * (var$4 + ($e.scrollLeft | 0) | 0);
    return $xScaleRatio + jl_Math_sign($xScaleRatio) * 0.5 | 0;
},
cgxgbt_TeaInput_getRelativeY = ($this, $e, $target) => {
    let $yScaleRatio, var$4, var$5, var$6;
    $yScaleRatio = $target.height * 1.0 / $target.clientHeight;
    var$4 = ($e.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $target) | 0) | 0) + ($target.scrollTop | 0) | 0;
    $e = $target.ownerDocument;
    var$5 = $rt_str($e.compatMode);
    if (var$5 === $rt_s(133))
        var$6 = 1;
    else if (!($rt_s(133) instanceof jl_String))
        var$6 = 0;
    else {
        $target = $rt_s(133);
        var$6 = var$5.$nativeString !== $target.$nativeString ? 0 : 1;
    }
    if (var$6)
        $e = $e.documentElement;
    $yScaleRatio = $yScaleRatio * (var$4 + ($e.scrollTop | 0) | 0);
    return $yScaleRatio + jl_Math_sign($yScaleRatio) * 0.5 | 0;
},
cgxgbt_TeaInput_getSubPixelAbsoluteTop = ($this, $elem) => {
    let $top, $curr;
    $top = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $top = $top - $curr.scrollTop;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $top = $top + $elem.offsetTop;
        $elem = $curr.offsetParent;
    }
    return $top;
},
cgxgbt_TeaInput_getSubPixelAbsoluteLeft = ($this, $elem) => {
    let $left, $curr;
    $left = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $left = $left - $curr.scrollLeft;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $left = $left + $elem.offsetLeft;
        $elem = $curr.offsetParent;
    }
    return $left;
},
cgxgbt_TeaInput_setInputProcessor = ($this, $processor) => {
    $this.$processor = $processor;
},
cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75 = var$1 => {
    if (document.pointerLockElement === canvas || document.mozPointerLockElement === canvas) {
        return true;
    }
    return false;
},
cgxgbt_TeaInput_handleEvent$exported$0 = (var$1, var$2) => {
    var$1 = var$1;
    if (var$1.$application.$appListener !== null) {
        cgxgbt_TeaInput_handleMouseEvents(var$1, var$2);
        cgxgbt_TeaInput_handleKeyboardEvents(var$1, var$2);
    }
},
cbg_Files = $rt_classWithoutFields(0);
function cgxgbt_TeaFiles() {
    let a = this; jl_Object.call(a);
    a.$internalStorage = null;
    a.$classpathStorage = null;
    a.$localStorage = null;
    a.$localStoragePrefix0 = null;
}
let cgxgbt_TeaFiles_getFileHandle = ($this, $path, $type) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$3 = cbg_Files$FileType_Internal;
    if ($type === var$3)
        return cgxgbt_TeaFileHandle__init_($this, $path, var$3);
    var$3 = cbg_Files$FileType_Classpath;
    if ($type === var$3)
        return cgxgbt_TeaFileHandle__init_($this, $path, var$3);
    var$3 = cbg_Files$FileType_Local;
    if ($type === var$3)
        return cgxgbt_TeaFileHandle__init_($this, $path, var$3);
    $path = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$6 = $rt_s(140);
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, $type === null ? $rt_s(1) : $type.$name0);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, $rt_s(141));
    $type = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    var$10 = var$3.$length0;
    var$11 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
        $type.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        $path.$suppressionEnabled = 1;
        $path.$writableStackTrace = 1;
        $path.$message = $type;
        $rt_throw($path);
    }
    $path = new jl_IndexOutOfBoundsException;
    $path.$suppressionEnabled = 1;
    $path.$writableStackTrace = 1;
    $rt_throw($path);
};
function cgxgbt_TeaNet() {
    jl_Object.call(this);
    this.$httpResponseListeners = null;
}
let cbg_ApplicationLogger = $rt_classWithoutFields(0),
cgxgbt_TeaApplicationLogger = $rt_classWithoutFields(),
cbgu_Clipboard = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard() {
    let a = this; jl_Object.call(a);
    a.$requestedWritePermissions = 0;
    a.$hasWritePermissions = 0;
    a.$writeHandler = null;
    a.$content = null;
}
let cgxgbt_TeaClipboard__init_ = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    $this.$requestedWritePermissions = 0;
    $this.$hasWritePermissions = 1;
    var$1 = new cgxgbt_TeaClipboard$ClipboardWriteHandler;
    var$1.$this$03 = $this;
    $this.$writeHandler = var$1;
    $this.$content = $rt_s(40);
    cgxgbtdi_TeaWindow_$callClinit();
    var$2 = cgxgbtdi_TeaWindow_TEA_WINDOW.$window.document;
    var$3 = new cgxgbt_TeaClipboard$_init_$lambda$_0_0;
    var$3.$_04 = $this;
    var$4 = "addEventListener";
    var$1 = "copy";
    var$5 = !(var$3 instanceof otji_JSWrapper) ? var$3 : var$3.$js;
    var$2[var$4](var$1, otji_JS_function(var$5, "handleEvent"));
    var$2 = cgxgbtdi_TeaWindow_TEA_WINDOW.$window.document;
    var$3 = new cgxgbt_TeaClipboard$_init_$lambda$_0_1;
    var$3.$_016 = $this;
    var$4 = "addEventListener";
    var$1 = "cut";
    var$5 = !(var$3 instanceof otji_JSWrapper) ? var$3 : var$3.$js;
    var$2[var$4](var$1, otji_JS_function(var$5, "handleEvent"));
    var$4 = cgxgbtdi_TeaWindow_TEA_WINDOW.$window.document;
    var$3 = new cgxgbt_TeaClipboard$_init_$lambda$_0_2;
    var$3.$_09 = $this;
    var$4.addEventListener("paste", otji_JS_function(!(var$3 instanceof otji_JSWrapper) ? var$3 : var$3.$js, "handleEvent"));
},
cgxgbt_TeaClipboard__init_0 = () => {
    let var_0 = new cgxgbt_TeaClipboard();
    cgxgbt_TeaClipboard__init_(var_0);
    return var_0;
},
cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4 = var$1 => {
    if ("clipboard" in navigator) {
        navigator.clipboard.writeText(var$1);
    }
},
cbg_Gdx = $rt_classWithoutFields(),
cbg_Gdx_app = null,
cbg_Gdx_graphics = null,
cbg_Gdx_audio = null,
cbg_Gdx_input = null,
cbg_Gdx_files = null,
cbg_Gdx_net = null,
cbg_Gdx_gl = null,
cbg_Gdx_gl20 = null,
cbg_Gdx_gl30 = null,
cbg_Audio = $rt_classWithoutFields(0),
cgxgbt_TeaAudio = $rt_classWithoutFields(0);
function cgxgbt_DefaultTeaAudio() {
    jl_Object.call(this);
    this.$webAudioAPIManager = null;
}
function cgxgbt_TeaApplication$1() {
    jl_Object.call(this);
    this.$this$017 = null;
}
let cgxgbt_TeaApplication$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$2 = var$1.$this$017;
    var$1 = var$2.$appListener;
    if (var$1 !== null) {
        var$1 = var$1.$screen;
        var$2.$appListener = null;
    }
};
function otji_JSWrapper() {
    jl_Object.call(this);
    this.$js = null;
}
let otji_JSWrapper_wrap = $jsNumber => {
    let $type, $isObject, $wrappers, $existingRef, $existing, $wrapper, $stringWrappers, $stringFinalizationRegistry, $wrapperAsJs, $numberWrappers, $numberFinalizationRegistry;
    if ($jsNumber === null)
        return null;
    $type = $rt_str(typeof $jsNumber);
    if ($type === $rt_s(142))
        $isObject = 1;
    else if (!($rt_s(142) instanceof jl_String))
        $isObject = 0;
    else {
        $wrappers = $rt_s(142);
        $isObject = $type.$nativeString !== $wrappers.$nativeString ? 0 : 1;
    }
    a: {
        if (!$isObject) {
            if ($type === $rt_s(143))
                $isObject = 1;
            else if (!($rt_s(143) instanceof jl_String))
                $isObject = 0;
            else {
                $wrappers = $rt_s(143);
                $isObject = $type.$nativeString !== $wrappers.$nativeString ? 0 : 1;
            }
            if (!$isObject) {
                $isObject = 0;
                break a;
            }
        }
        $isObject = 1;
    }
    otji_JSWrapper$Helper_$callClinit();
    $wrappers = otji_JSWrapper$Helper_wrappers;
    if ($wrappers !== null) {
        if ($isObject) {
            $existingRef = $wrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = new otji_JSWrapper;
            $wrapper.$js = $jsNumber;
            $wrappers.set($jsNumber, new WeakRef($wrapper));
            return $wrapper;
        }
        if ($type === $rt_s(144))
            $isObject = 1;
        else if (!($rt_s(144) instanceof jl_String))
            $isObject = 0;
        else {
            $wrappers = $rt_s(144);
            $isObject = $type.$nativeString !== $wrappers.$nativeString ? 0 : 1;
        }
        if ($isObject) {
            $stringWrappers = otji_JSWrapper$Helper_stringWrappers;
            $stringFinalizationRegistry = otji_JSWrapper$Helper_stringFinalizationRegistry;
            $existingRef = $stringWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = new otji_JSWrapper;
            $wrapper.$js = $jsNumber;
            $wrapperAsJs = $wrapper;
            $stringWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($stringFinalizationRegistry, $wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if ($type === $rt_s(145))
            $isObject = 1;
        else if (!($rt_s(145) instanceof jl_String))
            $isObject = 0;
        else {
            $wrappers = $rt_s(145);
            $isObject = $type.$nativeString !== $wrappers.$nativeString ? 0 : 1;
        }
        if ($isObject) {
            $numberWrappers = otji_JSWrapper$Helper_numberWrappers;
            $numberFinalizationRegistry = otji_JSWrapper$Helper_numberFinalizationRegistry;
            $existingRef = $numberWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = new otji_JSWrapper;
            $wrapper.$js = $jsNumber;
            $wrapperAsJs = $wrapper;
            $numberWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($numberFinalizationRegistry, $wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if ($type === $rt_s(146))
            $isObject = 1;
        else if (!($rt_s(146) instanceof jl_String))
            $isObject = 0;
        else {
            $wrappers = $rt_s(146);
            $isObject = $type.$nativeString !== $wrappers.$nativeString ? 0 : 1;
        }
        if ($isObject) {
            $existingRef = otji_JSWrapper$Helper_undefinedWrapper;
            $existing = $existingRef === null ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = new otji_JSWrapper;
            $wrapper.$js = $jsNumber;
            otji_JSWrapper$Helper_undefinedWrapper = new WeakRef($wrapper);
            return $wrapper;
        }
    }
    $wrappers = new otji_JSWrapper;
    $wrappers.$js = $jsNumber;
    return $wrappers;
},
otji_JSWrapper_register$js_body$_4 = (var$1, var$2, var$3) => {
    return var$1.register(var$2, var$3);
};
function cgxgbt_TeaApplication$2() {
    jl_Object.call(this);
    this.$this$04 = null;
}
let cgxgbt_TeaApplication$2_handleEvent = ($this, var$1) => {
    let var$2, var$3, var$4, $$je;
    var$2 = $this.$this$04;
    if (var$2.$initState === cgxgbt_TeaApplication$AppState_APP_LOOP) {
        var$3 = $rt_str(var$2.$window0.$window.document.visibilityState);
        if (var$3 === $rt_s(147))
            var$4 = 1;
        else if (!($rt_s(147) instanceof jl_String))
            var$4 = 0;
        else {
            var$1 = $rt_s(147);
            var$4 = var$3.$nativeString !== var$1.$nativeString ? 0 : 1;
        }
        if (var$4) {
            var$1 = $this.$this$04.$lifecycleListeners;
            jl_Object_monitorEnterSync(var$1);
            a: {
                b: {
                    try {
                        var$2 = cbgu_Array_iterator(var$1);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$2 = $$je;
                        break b;

                    }
                    var$3 = var$2;
                    while (true) {
                        try {
                            if (!cbgu_Array$ArrayIterator_hasNext(var$3))
                                break;
                            cgxgbtwh_HowlerAudioManager_pause(cbgu_Array$ArrayIterator_next(var$3));
                            continue;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$2 = $$je;
                            break b;

                        }
                    }
                    try {
                        jl_Object_monitorExitSync(var$1);
                        break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$2 = $$je;

                    }
                }
                jl_Object_monitorExitSync(var$1);
                $rt_throw(var$2);
            }
        } else {
            if (var$3 === $rt_s(148))
                var$4 = 1;
            else if (!($rt_s(148) instanceof jl_String))
                var$4 = 0;
            else {
                var$1 = $rt_s(148);
                var$4 = var$3.$nativeString !== var$1.$nativeString ? 0 : 1;
            }
            if (var$4) {
                var$1 = $this.$this$04.$lifecycleListeners;
                jl_Object_monitorEnterSync(var$1);
                c: {
                    d: {
                        try {
                            var$2 = cbgu_Array_iterator(var$1);
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$2 = $$je;
                            break d;

                        }
                        var$3 = var$2;
                        while (true) {
                            try {
                                if (!cbgu_Array$ArrayIterator_hasNext(var$3))
                                    break;
                                cgxgbtwh_HowlerAudioManager_resume(cbgu_Array$ArrayIterator_next(var$3));
                                continue;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                var$2 = $$je;
                                break d;

                            }
                        }
                        try {
                            jl_Object_monitorExitSync(var$1);
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$2 = $$je;

                        }
                    }
                    jl_Object_monitorExitSync(var$1);
                    $rt_throw(var$2);
                }
            }
        }
    }
},
cgxgbt_TeaApplication$2_handleEvent$exported$0 = (var$1, var$2) => {
    cgxgbt_TeaApplication$2_handleEvent(var$1, var$2);
};
function cgxgbt_TeaApplication$3() {
    jl_Object.call(this);
    this.$this$01 = null;
}
let cgxgbt_TeaApplication$3_handleEvent = ($this, $evt) => {
    let $height, $width, var$4;
    $height = $this.$this$01.$window0.$window.innerWidth;
    $evt = $this.$this$01;
    $width = $height - $evt.$config.$padHorizontal | 0;
    $height = $evt.$window0.$window.innerHeight;
    $evt = $this.$this$01;
    var$4 = $evt.$config;
    $height = $height - var$4.$padVertical | 0;
    if ($width > 0 && $height > 0) {
        $evt = $evt.$graphics;
        if ($evt !== null)
            cgxgbt_TeaGraphics_setCanvasSize($evt, $width, $height, var$4.$usePhysicalPixels);
        return;
    }
},
cgxgbt_TeaApplication$3_handleEvent$exported$0 = (var$1, var$2) => {
    cgxgbt_TeaApplication$3_handleEvent(var$1, var$2);
},
jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception);
function cbgu_ReflectionPool() {
    cbgu_Pool.call(this);
    this.$constructor = null;
}
let jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException),
jl_IndexOutOfBoundsException__init_0 = $this => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
},
jl_IndexOutOfBoundsException__init_ = () => {
    let var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_0(var_0);
    return var_0;
},
cbgu_ObjectSet = $rt_classWithoutFields(),
cbgu_ObjectSet_tableSize = ($capacity, $loadFactor) => {
    let var$3, var$4, $tableSize, var$6, var$7, var$8, var$9;
    if ($capacity < 0) {
        var$3 = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        $tableSize = var$4.$length0;
        jl_AbstractStringBuilder_insert(var$4, $tableSize, $rt_s(149));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $capacity, 10);
        var$6 = new jl_String;
        var$7 = var$4.$buffer;
        var$8 = var$7.data;
        $tableSize = var$4.$length0;
        var$9 = var$8.length;
        if ($tableSize >= 0 && $tableSize <= (var$9 - 0 | 0)) {
            var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, $tableSize);
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = var$6;
            $rt_throw(var$3);
        }
        var$3 = new jl_IndexOutOfBoundsException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    var$9 = jl_Math_ceil($capacity / $loadFactor) | 0;
    if (2 > var$9)
        var$9 = 2;
    $tableSize = cbgm_MathUtils_nextPowerOfTwo(var$9);
    if ($tableSize <= 1073741824)
        return $tableSize;
    var$3 = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    $tableSize = var$4.$length0;
    jl_AbstractStringBuilder_insert(var$4, $tableSize, $rt_s(150));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $capacity, 10);
    var$6 = new jl_String;
    var$7 = var$4.$buffer;
    var$8 = var$7.data;
    $tableSize = var$4.$length0;
    var$9 = var$8.length;
    if ($tableSize >= 0 && $tableSize <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, $tableSize);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    $rt_throw(var$3);
},
jl_Long = $rt_classWithoutFields(jl_Number),
jl_Long_TYPE = null,
jl_Long_numberOfLeadingZeros = $i => {
    let $n, var$3;
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    $i = Long_shru(var$3, 16);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru($i, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 8;
    $i = Long_shru(var$3, 4);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru($i, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
},
jl_Long_divideUnsigned = (var$1, var$2) => {
    return Long_udiv(var$1, var$2);
},
jl_Long_remainderUnsigned = (var$1, var$2) => {
    return Long_urem(var$1, var$2);
},
jl_Long_compareUnsigned = (var$1, var$2) => {
    return Long_ucompare(var$1, var$2);
},
jl_Long__clinit_ = () => {
    jl_Long_TYPE = $rt_cls($rt_longcls);
},
cgxgbtg_WebGLContextAttributesWrapper = $rt_classWithoutFields(),
cgxgbtg_WebGLContextAttributesWrapper_create$js_body$_14 = () => {
    return {  };
},
cbgg_GL20 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL20() {
    let a = this; jl_Object.call(a);
    a.$gl = null;
    a.$programs = null;
    a.$shaders = null;
    a.$buffers = null;
    a.$frameBuffers = null;
    a.$renderBuffers = null;
    a.$textures = null;
    a.$uniforms = null;
    a.$currProgram = 0;
}
let cgxgbt_TeaGL20__init_ = ($this, $gl) => {
    $this.$programs = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$shaders = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$buffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$frameBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$renderBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$textures = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$uniforms = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$currProgram = 0;
    $this.$gl = $gl;
    $gl.pixelStorei(37441, 0);
},
cgxgbt_TeaGL20__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL20();
    cgxgbt_TeaGL20__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL20_getUniformLocation = ($this, $location) => {
    return cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms, $this.$currProgram), $location);
},
cgxgbt_TeaGL20_glAttachShader = ($this, $program, $shader) => {
    let var$3, var$4;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.attachShader(var$3, var$4);
},
cgxgbt_TeaGL20_glBindBuffer = ($this, $target, $buffer) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$buffers, $buffer);
    var$3.bindBuffer($target, var$4);
},
cgxgbt_TeaGL20_glBindTexture = ($this, $target, $texture) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$textures, $texture);
    var$3.bindTexture($target, var$4);
},
cgxgbt_TeaGL20_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
},
cgxgbt_TeaGL20_glBufferData = ($this, $target, $size, $data, $usage) => {
    let $typedArray;
    if ($data === null)
        $this.$gl.bufferData($target, $size, $usage);
    else {
        $typedArray = cgxgbtdt_TypedArrays_getTypedArray(0, $data);
        $this.$gl.bufferData($target, $typedArray, $usage);
    }
},
cgxgbt_TeaGL20_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    let $typedArray;
    $typedArray = cgxgbtdt_TypedArrays_getTypedArray(0, $data);
    $this.$gl.bufferSubData($target, $offset, $typedArray);
},
cgxgbt_TeaGL20_glClear = ($this, $mask) => {
    $this.$gl.clear($mask);
},
cgxgbt_TeaGL20_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    $this.$gl.clearColor($red, $green, $blue, $alpha);
},
cgxgbt_TeaGL20_glCompileShader = ($this, $shader) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.compileShader(var$2);
},
cgxgbt_TeaGL20_glCreateProgram = $this => {
    let $program;
    $program = $this.$gl.createProgram();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$programs, $program);
},
cgxgbt_TeaGL20_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = $this.$gl.createShader($type);
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$shaders, $shader);
},
cgxgbt_TeaGL20_glDepthMask = ($this, $flag) => {
    $this.$gl.depthMask(!!$flag);
},
cgxgbt_TeaGL20_glDisable = ($this, $cap) => {
    $this.$gl.disable($cap);
},
cgxgbt_TeaGL20_glDisableVertexAttribArray = ($this, $index) => {
    $this.$gl.disableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glDrawArrays = ($this, $mode, $first, $count) => {
    $this.$gl.drawArrays($mode, $first, $count);
},
cgxgbt_TeaGL20_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6;
    var$5 = $this.$gl;
    var$6 = $indices.$position0;
    var$5.drawElements($mode, $count, $type, var$6);
},
cgxgbt_TeaGL20_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    $this.$gl.drawElements($mode, $count, $type, $indices);
},
cgxgbt_TeaGL20_glEnable = ($this, $cap) => {
    $this.$gl.enable($cap);
},
cgxgbt_TeaGL20_glEnableVertexAttribArray = ($this, $index) => {
    $this.$gl.enableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glGenBuffer = $this => {
    let $buffer;
    $buffer = $this.$gl.createBuffer();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$buffers, $buffer);
},
cgxgbt_TeaGL20_glGenerateMipmap = ($this, $target) => {
    $this.$gl.generateMipmap($target);
},
cgxgbt_TeaGL20_glGenTexture = $this => {
    let $texture;
    $texture = $this.$gl.createTexture();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$textures, $texture);
},
cgxgbt_TeaGL20_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $activeUniform, var$6;
    $activeUniform = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = $activeUniform.getActiveAttrib(var$6, $index);
    $index = $activeUniform.size;
    jn_IntBufferImpl_put($size, 0, $index);
    $index = $activeUniform.type;
    jn_IntBufferImpl_put($type, 0, $index);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $activeUniform, var$6;
    $activeUniform = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = $activeUniform.getActiveUniform(var$6, $index);
    $index = $activeUniform.size;
    jn_IntBufferImpl_put($size, 0, $index);
    $index = $activeUniform.type;
    jn_IntBufferImpl_put($type, 0, $index);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetAttribLocation = ($this, $program, $name) => {
    let var$3;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    return $this.$gl.getAttribLocation(var$3, $rt_ustr($name));
},
cgxgbt_TeaGL20_glGetFloatv = ($this, $pname, $params) => {
    let var$3;
    if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938) {
        $params = new cbgu_GdxRuntimeException;
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = $rt_s(151);
        $rt_throw($params);
    }
    var$3 = $this.$gl.getParameter($pname);
    jn_FloatBufferImpl_put($params, 0, var$3);
},
cgxgbt_TeaGL20_glGetProgramInfoLog = ($this, $program) => {
    return $rt_str($this.$gl.getProgramInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program)));
},
cgxgbt_TeaGL20_glGetProgramiv = ($this, $program, $pname, $params) => {
    if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
        $program = $this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname);
        jn_IntBufferImpl_put($params, 0, $program);
    } else {
        $pname = !($this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname) ? 1 : 0) ? 0 : 1;
        jn_IntBufferImpl_put($params, 0, $pname);
    }
},
cgxgbt_TeaGL20_glGetShaderInfoLog = ($this, $shader) => {
    return $rt_str($this.$gl.getShaderInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader)));
},
cgxgbt_TeaGL20_glGetShaderiv = ($this, $shader, $pname, $params) => {
    let $result;
    if ($pname != 35713 && $pname != 35712) {
        $result = $this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname);
        jn_IntBufferImpl_put($params, 0, $result);
    } else {
        $pname = !($this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname) ? 1 : 0) ? 0 : 1;
        jn_IntBufferImpl_put($params, 0, $pname);
    }
},
cgxgbt_TeaGL20_glGetString = ($this, $name) => {
    return $rt_str($this.$gl.getParameter($name));
},
cgxgbt_TeaGL20_glGetUniformLocation = ($this, $program, $name) => {
    let $location;
    $location = $this.$gl.getUniformLocation(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $rt_ustr($name));
    if ($location === null)
        return (-1);
    $name = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms, $program);
    if ($name === null) {
        $name = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
        $this.$uniforms[$program] = $name;
    }
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($name, $location);
},
cgxgbt_TeaGL20_glLinkProgram = ($this, $program) => {
    let var$2, var$3;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.linkProgram(var$3);
},
cgxgbt_TeaGL20_glPixelStorei = ($this, $pname, $param) => {
    $this.$gl.pixelStorei($pname, $param);
},
cgxgbt_TeaGL20_glShaderSource = ($this, $shader, $source) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    var$3.shaderSource(var$4, $rt_ustr($source));
},
cgxgbt_TeaGL20_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    let $arrayBuffer, $byteOffset;
    if ($pixels === null) {
        $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, null);
        return;
    }
    $arrayBuffer = cgxgbtdt_TypedArrays_getTypedArray(0, $pixels);
    if ($type == 5121) {
        $byteOffset = $arrayBuffer.byteOffset + $pixels.$position0 | 0;
        $arrayBuffer = new Uint8Array($arrayBuffer.buffer, $byteOffset, $pixels.$limit0 - $pixels.$position0 | 0);
    } else if (!($type != 5123 && $type != 33635 && $type != 32819)) {
        $byteOffset = $arrayBuffer.byteOffset + $pixels.$position0 | 0;
        $arrayBuffer = new Uint16Array($arrayBuffer.buffer, $byteOffset, $pixels.$limit0 - $pixels.$position0 | 0);
    }
    $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $arrayBuffer);
},
cgxgbt_TeaGL20_glTexParameterf = ($this, $target, $pname, $param) => {
    $this.$gl.texParameterf($target, $pname, $param);
},
cgxgbt_TeaGL20_glTexParameteri = ($this, $target, $pname, $param) => {
    let var$4, var$5;
    var$4 = $this.$gl;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
},
cgxgbt_TeaGL20_glUniform1i = ($this, $location, $x) => {
    let var$3;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms, $this.$currProgram), $location);
    $this.$gl.uniform1i(var$3, $x);
},
cgxgbt_TeaGL20_glUniformMatrix4fv = ($this, $location, $count, $transpose, $value, $offset) => {
    let var$6, var$7, var$8, var$9, var$10;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms, $this.$currProgram), $location);
    var$7 = $this.$gl;
    var$8 = "uniformMatrix4fv";
    var$9 = !!$transpose;
    if ($value === null)
        var$10 = null;
    else {
        $value = $value.data;
        $count = $value.length;
        var$10 = new Array($count);
        $transpose = 0;
        while ($transpose < $count) {
            var$10[$transpose] = $value[$transpose];
            $transpose = $transpose + 1 | 0;
        }
    }
    var$7[var$8](var$6, var$9, var$10);
},
cgxgbt_TeaGL20_glUseProgram = ($this, $program) => {
    let var$2, var$3;
    $this.$currProgram = $program;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.useProgram(var$3);
},
cgxgbt_TeaGL20_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
},
cgxgbt_TeaGL20_glViewport = ($this, $x, $y, $width, $height) => {
    $this.$gl.viewport($x, $y, $width, $height);
},
cbgg_GL30 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL30() {
    let a = this; cgxgbt_TeaGL20.call(a);
    a.$gl0 = null;
    a.$queries = null;
    a.$samplers = null;
    a.$feedbacks = null;
    a.$vertexArrays = null;
}
let cgxgbt_TeaGL30_glBindVertexArray = ($this, $array) => {
    let var$2, var$3;
    var$2 = $this.$gl0;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$vertexArrays, $array);
    var$2.bindVertexArray(var$3);
},
cgxgbt_TeaGL30_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    $this.$gl0.drawArraysInstanced($mode, $first, $count, $instanceCount);
},
cgxgbt_TeaGL30_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    $this.$gl0.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
},
cgxgbt_TeaGL30_glGenVertexArrays = ($this, $n, $ids) => {
    let $i, var$4, $vArray;
    $i = 0;
    var$4 = $ids;
    while ($i < $n) {
        $vArray = $this.$gl0.createVertexArray();
        jn_IntBufferImpl_put(var$4, $i, cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$vertexArrays, $vArray));
        $i = $i + 1 | 0;
    }
},
cgxgbt_TeaGL30_glGetFloatv = ($this, $pname, $params) => {
    let var$3;
    if ($pname != 34045)
        cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    else {
        var$3 = $this.$gl0.getParameter($pname);
        jn_FloatBufferImpl_put($params, 0, var$3);
    }
},
cgxgbt_TeaGL30Debug = $rt_classWithoutFields(cgxgbt_TeaGL30),
cgxgbt_TeaGL30Debug_glBindVertexArray = ($this, $array) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl0.bindVertexArray(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$vertexArrays, $array));
    $array = $this.$gl0.getError();
    if (!$array)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($array, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $array, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl0.drawArraysInstanced($mode, $first, $count, $instanceCount);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    $first = var$7.$length0;
    var$8 = var$7;
    var$9 = $rt_s(152);
    var$8 = var$8;
    jl_AbstractStringBuilder_insert(var$8, $first, var$9);
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    $first = var$7.$length0;
    $count = var$11.length;
    if ($first >= 0 && $first <= ($count - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, $first);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$9;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL30Debug_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    let var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$gl0.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    var$6 = new cbgu_GdxRuntimeException;
    var$7 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    $count = var$8.$length0;
    var$9 = var$8;
    var$10 = $rt_s(152);
    var$9 = var$9;
    jl_AbstractStringBuilder_insert(var$9, $count, var$10);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$9, var$8.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$9, var$8.$length0, var$7 === null ? $rt_s(1) : var$7);
    var$10 = new jl_String;
    var$11 = var$8.$buffer;
    var$12 = var$11.data;
    $count = var$8.$length0;
    $type = var$12.length;
    if ($count >= 0 && $count <= ($type - 0 | 0)) {
        var$10.$nativeString = $rt_charArrayToString(var$11.data, 0, $count);
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        var$6.$message = var$10;
        $rt_throw(var$6);
    }
    var$6 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$6);
    $rt_throw(var$6);
},
cgxgbt_TeaGL30Debug_glGenVertexArrays = ($this, $n, $ids) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = 0;
    var$4 = $ids;
    while (var$3 < $n) {
        var$5 = $this.$gl0.createVertexArray();
        jn_IntBufferImpl_put(var$4, var$3, cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$vertexArrays, var$5));
        var$3 = var$3 + 1 | 0;
    }
    $n = $this.$gl0.getError();
    if (!$n)
        return;
    $ids = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($n, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$3 = var$5.$length0;
    var$7 = var$5;
    var$4 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, var$3, var$4);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $n, 10);
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$4 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    var$3 = var$5.$length0;
    var$10 = var$9.length;
    if (var$3 >= 0 && var$3 <= (var$10 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$8.data, 0, var$3);
        $ids.$suppressionEnabled = 1;
        $ids.$writableStackTrace = 1;
        $ids.$message = var$4;
        $rt_throw($ids);
    }
    $ids = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($ids);
    $rt_throw($ids);
},
cgxgbt_TeaGL30Debug_glBindTexture = ($this, $target, $texture) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.bindTexture($target, cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$textures, $texture));
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $texture = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $texture, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $texture = var$5.$length0;
    var$10 = var$9.length;
    if ($texture >= 0 && $texture <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $texture);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL30Debug_glClear = ($this, $mask) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.clear($mask);
    $mask = $this.$gl0.getError();
    if (!$mask)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($mask, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $mask, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    $this.$gl.clearColor($red, $green, $blue, $alpha);
    var$5 = $this.$gl0.getError();
    if (!var$5)
        return;
    var$6 = new cbgu_GdxRuntimeException;
    var$7 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    var$9 = var$8.$length0;
    var$10 = var$8;
    var$11 = $rt_s(152);
    var$10 = var$10;
    jl_AbstractStringBuilder_insert(var$10, var$9, var$11);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, var$5, 10);
    jl_AbstractStringBuilder_insert(var$10, var$8.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$10, var$8.$length0, var$7 === null ? $rt_s(1) : var$7);
    var$11 = new jl_String;
    var$12 = var$8.$buffer;
    var$13 = var$12.data;
    var$9 = var$8.$length0;
    var$14 = var$13.length;
    if (var$9 >= 0 && var$9 <= (var$14 - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString(var$12.data, 0, var$9);
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        var$6.$message = var$11;
        $rt_throw(var$6);
    }
    var$6 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$6);
    $rt_throw(var$6);
},
cgxgbt_TeaGL30Debug_glDepthMask = ($this, $flag) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.depthMask(!!$flag);
    $flag = $this.$gl0.getError();
    if (!$flag)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($flag, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $flag, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glDisable = ($this, $cap) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.disable($cap);
    $cap = $this.$gl0.getError();
    if (!$cap)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $cap, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.drawArrays($mode, $first, $count);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $first = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $first, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $first = var$6.$length0;
    $count = var$10.length;
    if ($first >= 0 && $first <= ($count - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $first);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL30Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.drawElements($mode, $count, $type, $indices.$position0);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    $indices = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $count = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $count, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $count = var$6.$length0;
    $type = var$10.length;
    if ($count >= 0 && $count <= ($type - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $count);
        $indices.$suppressionEnabled = 1;
        $indices.$writableStackTrace = 1;
        $indices.$message = var$8;
        $rt_throw($indices);
    }
    $indices = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($indices);
    $rt_throw($indices);
},
cgxgbt_TeaGL30Debug_glEnable = ($this, $cap) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.enable($cap);
    $cap = $this.$gl0.getError();
    if (!$cap)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $cap, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glGetString = ($this, $name) => {
    return $rt_str($this.$gl.getParameter($name));
},
cgxgbt_TeaGL30Debug_glPixelStorei = ($this, $pname, $param) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.pixelStorei($pname, $param);
    $pname = $this.$gl0.getError();
    if (!$pname)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $param = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $param, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $pname, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $param = var$5.$length0;
    var$10 = var$9.length;
    if ($param >= 0 && $param <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $param);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL30Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    let var$10, var$11, var$12, var$13, var$14, var$15;
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    $pixels = new cbgu_GdxRuntimeException;
    var$10 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$11 = new jl_StringBuilder;
    var$11.$buffer = $rt_createCharArray(16);
    $level = var$11.$length0;
    var$12 = var$11;
    var$13 = $rt_s(152);
    var$12 = var$12;
    jl_AbstractStringBuilder_insert(var$12, $level, var$13);
    jl_AbstractStringBuilder_insert0(var$11, var$11.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$12, var$11.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$12, var$11.$length0, var$10 === null ? $rt_s(1) : var$10);
    var$13 = new jl_String;
    var$14 = var$11.$buffer;
    var$15 = var$14.data;
    $level = var$11.$length0;
    $internalformat = var$15.length;
    if ($level >= 0 && $level <= ($internalformat - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$14.data, 0, $level);
        $pixels.$suppressionEnabled = 1;
        $pixels.$writableStackTrace = 1;
        $pixels.$message = var$13;
        $rt_throw($pixels);
    }
    $pixels = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($pixels);
    $rt_throw($pixels);
},
cgxgbt_TeaGL30Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.texParameterf($target, $pname, $param);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $pname = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $pname, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $pname = var$6.$length0;
    var$11 = var$10.length;
    if ($pname >= 0 && $pname <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL30Debug_glViewport = ($this, $x, $y, $width, $height) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.viewport($x, $y, $width, $height);
    $x = $this.$gl0.getError();
    if (!$x)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($x, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    $y = var$7.$length0;
    var$8 = var$7;
    var$9 = $rt_s(152);
    var$8 = var$8;
    jl_AbstractStringBuilder_insert(var$8, $y, var$9);
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $x, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    $y = var$7.$length0;
    $width = var$11.length;
    if ($y >= 0 && $y <= ($width - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, $y);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$9;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL30Debug_glAttachShader = ($this, $program, $shader) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.attachShader(var$3, var$4);
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    $shader = var$3.$length0;
    var$7 = var$3;
    var$4 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $shader, var$4);
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$4 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    $shader = var$3.$length0;
    var$10 = var$9.length;
    if ($shader >= 0 && $shader <= (var$10 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$8.data, 0, $shader);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$4;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL30Debug_glBindBuffer = ($this, $target, $buffer) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.bindBuffer($target, cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$buffers, $buffer));
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $buffer = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $buffer, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $buffer = var$5.$length0;
    var$10 = var$9.length;
    if ($buffer >= 0 && $buffer <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $buffer);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL30Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    $srcRGB = $this.$gl0.getError();
    if (!$srcRGB)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($srcRGB, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    $dstRGB = var$7.$length0;
    var$8 = var$7;
    var$9 = $rt_s(152);
    var$8 = var$8;
    jl_AbstractStringBuilder_insert(var$8, $dstRGB, var$9);
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $srcRGB, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    $dstRGB = var$7.$length0;
    $srcAlpha = var$11.length;
    if ($dstRGB >= 0 && $dstRGB <= ($srcAlpha - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, $dstRGB);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$9;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL30Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    if ($data === null)
        $this.$gl.bufferData($target, $size, $usage);
    else {
        var$5 = cgxgbtdt_TypedArrays_getTypedArray(0, $data);
        $this.$gl.bufferData($target, var$5, $usage);
    }
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    $data = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $size = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $size, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $size = var$6.$length0;
    $usage = var$10.length;
    if ($size >= 0 && $size <= ($usage - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $size);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$8;
        $rt_throw($data);
    }
    $data = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($data);
    $rt_throw($data);
},
cgxgbt_TeaGL30Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    var$5 = cgxgbtdt_TypedArrays_getTypedArray(0, $data);
    $this.$gl.bufferSubData($target, $offset, var$5);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    $data = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $offset = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $offset, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $offset = var$6.$length0;
    $size = var$10.length;
    if ($offset >= 0 && $offset <= ($size - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $offset);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$8;
        $rt_throw($data);
    }
    $data = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($data);
    $rt_throw($data);
},
cgxgbt_TeaGL30Debug_glCompileShader = ($this, $shader) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.compileShader(var$2);
    $shader = $this.$gl0.getError();
    if (!$shader)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$5 = var$2.$length0;
    var$6 = var$2;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$6, var$2.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$2.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$2.$buffer;
    var$9 = var$8.data;
    var$5 = var$2.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL30Debug_glCreateProgram = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$gl.createProgram();
    var$2 = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$programs, var$1);
    var$3 = $this.$gl0.getError();
    if (!var$3)
        return var$2;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString(var$3, 4);
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    var$2 = var$1.$length0;
    var$6 = var$1;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$2, var$7);
    jl_AbstractStringBuilder_insert0(var$1, var$1.$length0, var$3, 10);
    jl_AbstractStringBuilder_insert(var$8, var$1.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$1.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$1.$buffer;
    var$10 = var$9.data;
    var$3 = var$1.$length0;
    var$11 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL30Debug_glCreateShader = ($this, $type) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$gl.createShader($type);
    $type = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$shaders, var$2);
    var$3 = $this.$gl0.getError();
    if (!var$3)
        return $type;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString(var$3, 4);
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    $type = var$2.$length0;
    var$6 = var$2;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, $type, var$7);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$3, 10);
    jl_AbstractStringBuilder_insert(var$8, var$2.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$2.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$2.$buffer;
    var$10 = var$9.data;
    var$3 = var$2.$length0;
    var$11 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL30Debug_glDisableVertexAttribArray = ($this, $index) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.disableVertexAttribArray($index);
    $index = $this.$gl0.getError();
    if (!$index)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.drawElements($mode, $count, $type, $indices);
    $mode = $this.$gl0.getError();
    if (!$mode)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    $count = var$7.$length0;
    var$8 = var$7;
    var$9 = $rt_s(152);
    var$8 = var$8;
    jl_AbstractStringBuilder_insert(var$8, $count, var$9);
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    $count = var$7.$length0;
    $type = var$11.length;
    if ($count >= 0 && $count <= ($type - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, $count);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$9;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL30Debug_glEnableVertexAttribArray = ($this, $index) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.enableVertexAttribArray($index);
    $index = $this.$gl0.getError();
    if (!$index)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glGenerateMipmap = ($this, $target) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.generateMipmap($target);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib, var$6, var$7, var$8, var$9, var$10, var$11;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    $program = $this.$gl0.getError();
    if (!$program)
        return $attrib;
    $size = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    $type = new jl_StringBuilder;
    $type.$buffer = $rt_createCharArray(16);
    $index = $type.$length0;
    var$7 = $type;
    var$8 = $rt_s(152);
    $attrib = var$7;
    jl_AbstractStringBuilder_insert($attrib, $index, var$8);
    jl_AbstractStringBuilder_insert0($type, $type.$length0, $program, 10);
    jl_AbstractStringBuilder_insert($attrib, $type.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert($attrib, $type.$length0, var$6 === null ? $rt_s(1) : var$6);
    $attrib = new jl_String;
    var$9 = $type.$buffer;
    var$10 = var$9.data;
    $index = $type.$length0;
    var$11 = var$10.length;
    if ($index >= 0 && $index <= (var$11 - 0 | 0)) {
        $attrib.$nativeString = $rt_charArrayToString(var$9.data, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $attrib;
        $rt_throw($size);
    }
    $size = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($size);
    $rt_throw($size);
},
cgxgbt_TeaGL30Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform, var$6, var$7, var$8, var$9, var$10, var$11;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    $program = $this.$gl0.getError();
    if (!$program)
        return $uniform;
    $size = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    $type = new jl_StringBuilder;
    $type.$buffer = $rt_createCharArray(16);
    $index = $type.$length0;
    var$7 = $type;
    var$8 = $rt_s(152);
    $uniform = var$7;
    jl_AbstractStringBuilder_insert($uniform, $index, var$8);
    jl_AbstractStringBuilder_insert0($type, $type.$length0, $program, 10);
    jl_AbstractStringBuilder_insert($uniform, $type.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert($uniform, $type.$length0, var$6 === null ? $rt_s(1) : var$6);
    $uniform = new jl_String;
    var$9 = $type.$buffer;
    var$10 = var$9.data;
    $index = $type.$length0;
    var$11 = var$10.length;
    if ($index >= 0 && $index <= (var$11 - 0 | 0)) {
        $uniform.$nativeString = $rt_charArrayToString(var$9.data, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $uniform;
        $rt_throw($size);
    }
    $size = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($size);
    $rt_throw($size);
},
cgxgbt_TeaGL30Debug_glGetAttribLocation = ($this, $program, $name) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $program = $this.$gl.getAttribLocation(var$3, $rt_ustr($name));
    var$4 = $this.$gl0.getError();
    if (!var$4)
        return $program;
    $name = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString(var$4, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $program = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$3 = var$7;
    jl_AbstractStringBuilder_insert(var$3, $program, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$4, 10);
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$3 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    var$4 = var$6.$length0;
    var$11 = var$10.length;
    if (var$4 >= 0 && var$4 <= (var$11 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$9.data, 0, var$4);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$3;
        $rt_throw($name);
    }
    $name = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($name);
    $rt_throw($name);
},
cgxgbt_TeaGL30Debug_glGetFloatv = ($this, $pname, $params) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if ($pname != 34045)
        cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    else {
        var$3 = $this.$gl0.getParameter($pname);
        jn_FloatBufferImpl_put($params, 0, var$3);
    }
    $pname = $this.$gl0.getError();
    if (!$pname)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$6 = var$5.$length0;
    var$7 = var$5;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, var$6, var$8);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $pname, 10);
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$8 = new jl_String;
    var$9 = var$5.$buffer;
    var$10 = var$9.data;
    var$6 = var$5.$length0;
    var$11 = var$10.length;
    if (var$6 >= 0 && var$6 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$6);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$8;
        $rt_throw($params);
    }
    $params = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($params);
    $rt_throw($params);
},
cgxgbt_TeaGL30Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $pname = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $pname, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $pname = var$5.$length0;
    var$10 = var$9.length;
    if ($pname >= 0 && $pname <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$7;
        $rt_throw($params);
    }
    $params = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($params);
    $rt_throw($params);
},
cgxgbt_TeaGL30Debug_glGetProgramInfoLog = ($this, $program) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $rt_str($this.$gl.getProgramInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program)));
    $program = $this.$gl0.getError();
    if (!$program)
        return var$2;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$5 = var$4.$length0;
    var$11 = var$10.length;
    if (var$5 >= 0 && var$5 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    $shader = $this.$gl0.getError();
    if (!$shader)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $pname = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $pname, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $pname = var$5.$length0;
    var$10 = var$9.length;
    if ($pname >= 0 && $pname <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$7;
        $rt_throw($params);
    }
    $params = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($params);
    $rt_throw($params);
},
cgxgbt_TeaGL30Debug_glGetShaderInfoLog = ($this, $shader) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $rt_str($this.$gl.getShaderInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader)));
    $shader = $this.$gl0.getError();
    if (!$shader)
        return var$2;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$5 = var$4.$length0;
    var$11 = var$10.length;
    if (var$5 >= 0 && var$5 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    $program = $this.$gl0.getError();
    if (!$program)
        return $loc;
    $name = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $loc = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, $loc, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$8, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$8 = new jl_String;
    var$9 = var$5.$buffer;
    var$10 = var$9.data;
    $loc = var$5.$length0;
    var$11 = var$10.length;
    if ($loc >= 0 && $loc <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $loc);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$8;
        $rt_throw($name);
    }
    $name = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($name);
    $rt_throw($name);
},
cgxgbt_TeaGL30Debug_glLinkProgram = ($this, $program) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.linkProgram(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program));
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glShaderSource = ($this, $shader, $source) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.shaderSource(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $rt_ustr($source));
    $shader = $this.$gl0.getError();
    if (!$shader)
        return;
    $source = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        $source.$suppressionEnabled = 1;
        $source.$writableStackTrace = 1;
        $source.$message = var$7;
        $rt_throw($source);
    }
    $source = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($source);
    $rt_throw($source);
},
cgxgbt_TeaGL30Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.texParameterf($target, $pname, $param);
    $target = $this.$gl0.getError();
    if (!$target)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $pname = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $pname, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $pname = var$6.$length0;
    $param = var$10.length;
    if ($pname >= 0 && $pname <= ($param - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL30Debug_glUniform1i = ($this, $location, $x) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms, $this.$currProgram), $location);
    $this.$gl.uniform1i(var$3, $x);
    $location = $this.$gl0.getError();
    if (!$location)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($location, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $x = var$6.$length0;
    var$3 = var$6;
    var$7 = $rt_s(152);
    var$3 = var$3;
    jl_AbstractStringBuilder_insert(var$3, $x, var$7);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $location, 10);
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$7 = new jl_String;
    var$8 = var$6.$buffer;
    var$9 = var$8.data;
    $x = var$6.$length0;
    var$10 = var$9.length;
    if ($x >= 0 && $x <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $x);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL30Debug_glUseProgram = ($this, $program) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$currProgram = $program;
    $this.$gl.useProgram(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program));
    $program = $this.$gl0.getError();
    if (!$program)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    let var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
    $indx = $this.$gl0.getError();
    if (!$indx)
        return;
    var$7 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($indx, 4);
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    $size = var$9.$length0;
    var$10 = var$9;
    var$11 = $rt_s(152);
    var$10 = var$10;
    jl_AbstractStringBuilder_insert(var$10, $size, var$11);
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $indx, 10);
    jl_AbstractStringBuilder_insert(var$10, var$9.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$10, var$9.$length0, var$8 === null ? $rt_s(1) : var$8);
    var$11 = new jl_String;
    var$12 = var$9.$buffer;
    var$13 = var$12.data;
    $size = var$9.$length0;
    $type = var$13.length;
    if ($size >= 0 && $size <= ($type - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString(var$12.data, 0, $size);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$11;
        $rt_throw(var$7);
    }
    var$7 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$7);
    $rt_throw(var$7);
};
function cbggg_GLVersion() {
    let a = this; jl_Object.call(a);
    a.$majorVersion = 0;
    a.$minorVersion = 0;
    a.$releaseVersion = 0;
    a.$versionString = null;
    a.$vendorString = null;
    a.$rendererString = null;
    a.$type4 = null;
    a.$TAG = $rt_s(153);
}
let cbggg_GLVersion__init_ = ($this, $appType, $versionString, $vendorString, $rendererString) => {
    $this.$TAG = $rt_s(153);
    if ($appType === cbg_Application$ApplicationType_Android)
        $this.$type4 = cbggg_GLVersion$Type_GLES;
    else if ($appType === cbg_Application$ApplicationType_iOS)
        $this.$type4 = cbggg_GLVersion$Type_GLES;
    else if ($appType === cbg_Application$ApplicationType_Desktop)
        $this.$type4 = cbggg_GLVersion$Type_OpenGL;
    else if ($appType === cbg_Application$ApplicationType_Applet)
        $this.$type4 = cbggg_GLVersion$Type_OpenGL;
    else if ($appType !== cbg_Application$ApplicationType_WebGL)
        $this.$type4 = cbggg_GLVersion$Type_NONE;
    else
        $this.$type4 = cbggg_GLVersion$Type_WebGL;
    $appType = $this.$type4;
    if ($appType === cbggg_GLVersion$Type_GLES)
        cbggg_GLVersion_extractVersion($this, $rt_s(154), $versionString);
    else if ($appType === cbggg_GLVersion$Type_WebGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(155), $versionString);
    else if ($appType === cbggg_GLVersion$Type_OpenGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(156), $versionString);
    else {
        $this.$majorVersion = (-1);
        $this.$minorVersion = (-1);
        $this.$releaseVersion = (-1);
        $vendorString = $rt_s(40);
        $rendererString = $rt_s(40);
    }
    $this.$versionString = $versionString;
    $this.$vendorString = $vendorString;
    $this.$rendererString = $rendererString;
},
cbggg_GLVersion__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_GLVersion();
    cbggg_GLVersion__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_GLVersion_extractVersion = ($this, $patternString, $versionString) => {
    let $matcher, $result, $found, var$6, var$7, var$8, var$9, var$10, $pattern, var$12, var$13, var$14, $$je;
    a: {
        $matcher = jur_Matcher__init_(jur_Pattern_compile($patternString, 0), $versionString);
        if (!jur_Matcher_find($matcher)) {
            $result = cbg_Gdx_app;
            $patternString = new jl_StringBuilder;
            $patternString.$buffer = $rt_createCharArray(16);
            $found = $patternString.$length0;
            var$6 = $patternString;
            jl_AbstractStringBuilder_insert(var$6, $found, $rt_s(157));
            jl_AbstractStringBuilder_insert(var$6, $patternString.$length0, $versionString);
            $versionString = new jl_String;
            var$7 = $patternString.$buffer;
            var$8 = var$7.data;
            var$9 = $patternString.$length0;
            var$10 = var$8.length;
            if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
                $versionString.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
                if ($result.$logLevel >= 2) {
                    if (jl_System_outCache === null) {
                        $patternString = new otcic_JSStdoutPrintStream;
                        $result = null;
                        $pattern = null;
                        jl_Object__init_($patternString);
                        $patternString.$out = $result;
                        $result = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0($result, 16);
                        $patternString.$sb = $result;
                        $patternString.$buffer1 = $rt_createCharArray(32);
                        $patternString.$autoFlush = 0;
                        $patternString.$charset = $pattern;
                        jl_System_outCache = $patternString;
                    }
                    $patternString = new jl_StringBuilder;
                    $patternString.$buffer = $rt_createCharArray(16);
                    $found = $patternString.$length0;
                    $result = $patternString;
                    $pattern = $rt_s(153);
                    $matcher = $result;
                    jl_StringBuilder_insert0($matcher, $found, $pattern);
                    jl_StringBuilder_insert0($matcher, $patternString.$length0, $rt_s(69));
                    jl_StringBuilder_insert0($matcher, $patternString.$length0, $versionString);
                    $versionString = new jl_String;
                    var$7 = $patternString.$buffer;
                    var$8 = var$7.data;
                    var$9 = $patternString.$length0;
                    var$10 = var$8.length;
                    if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
                        $versionString.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
                        $rt_putStdout($rt_ustr($versionString));
                        $rt_putStdout("\n");
                    } else {
                        $patternString = new jl_IndexOutOfBoundsException;
                        jl_Exception__init_0($patternString);
                        $rt_throw($patternString);
                    }
                }
                $this.$majorVersion = 2;
                $this.$minorVersion = 0;
                $this.$releaseVersion = 0;
                break a;
            }
            $patternString = new jl_IndexOutOfBoundsException;
            $patternString.$suppressionEnabled = 1;
            $patternString.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($patternString);
            $rt_throw($patternString);
        }
        $patternString = $matcher.$matchResult;
        var$12 = $patternString.$valid;
        if (!var$12) {
            $patternString = new jl_IllegalStateException;
            $patternString.$suppressionEnabled = 1;
            $patternString.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($patternString);
            $rt_throw($patternString);
        }
        var$13 = $rt_compare(1, $patternString.$groupCount);
        if (var$13 >= 0) {
            $patternString = new jl_IndexOutOfBoundsException;
            $versionString = new jl_StringBuilder;
            jl_Object__init_($versionString);
            $versionString.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0($versionString, $versionString.$length0, 1, 10);
            $result = new jl_String;
            var$7 = $versionString.$buffer;
            var$8 = var$7.data;
            var$9 = $versionString.$length0;
            jl_Object__init_($result);
            ju_Objects_checkFromIndexSize(0, var$9, var$8.length);
            $result.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
            $patternString.$suppressionEnabled = 1;
            $patternString.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($patternString);
            $patternString.$message = $result;
            $rt_throw($patternString);
        }
        var$7 = $patternString.$groupBounds.data;
        if (var$7[2] < 0)
            $result = null;
        else {
            $patternString = $patternString.$string2;
            if (!var$12) {
                $patternString = new jl_IllegalStateException;
                $patternString.$suppressionEnabled = 1;
                $patternString.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($patternString);
                $rt_throw($patternString);
            }
            if (var$13 >= 0) {
                $patternString = new jl_IndexOutOfBoundsException;
                $versionString = new jl_StringBuilder;
                jl_Object__init_($versionString);
                $versionString.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0($versionString, $versionString.$length0, 1, 10);
                $result = new jl_String;
                var$7 = $versionString.$buffer;
                var$8 = var$7.data;
                var$9 = $versionString.$length0;
                jl_Object__init_($result);
                ju_Objects_checkFromIndexSize(0, var$9, var$8.length);
                $result.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
                $patternString.$suppressionEnabled = 1;
                $patternString.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($patternString);
                $patternString.$message = $result;
                $rt_throw($patternString);
            }
            var$9 = var$7[2];
            if (!var$12) {
                $patternString = new jl_IllegalStateException;
                $patternString.$suppressionEnabled = 1;
                $patternString.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($patternString);
                $rt_throw($patternString);
            }
            if (var$13 >= 0) {
                $patternString = new jl_IndexOutOfBoundsException;
                $versionString = new jl_StringBuilder;
                jl_Object__init_($versionString);
                $versionString.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0($versionString, $versionString.$length0, 1, 10);
                $result = new jl_String;
                var$7 = $versionString.$buffer;
                var$8 = var$7.data;
                var$9 = $versionString.$length0;
                jl_Object__init_($result);
                ju_Objects_checkFromIndexSize(0, var$9, var$8.length);
                $result.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
                $patternString.$suppressionEnabled = 1;
                $patternString.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($patternString);
                $patternString.$message = $result;
                $rt_throw($patternString);
            }
            $found = var$7[3];
            $result = jl_String_substring($patternString, var$9, $found);
        }
        var$7 = (jur_Pattern_split(jur_Pattern_compile($rt_s(158), 0), $result, 0)).data;
        $patternString = var$7[0];
        b: {
            try {
                var$9 = jl_Integer_parseInt($patternString);
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $matcher = cbg_Gdx_app;
            $result = new jl_StringBuilder;
            $result.$buffer = $rt_createCharArray(16);
            var$9 = $result.$length0;
            var$6 = $result;
            jl_AbstractStringBuilder_insert(var$6, var$9, $rt_s(159));
            jl_AbstractStringBuilder_insert(var$6, $result.$length0, $patternString);
            jl_AbstractStringBuilder_insert(var$6, $result.$length0, $rt_s(160));
            jl_AbstractStringBuilder_insert0($result, $result.$length0, 2, 10);
            $pattern = new jl_String;
            var$8 = $result.$buffer;
            var$14 = var$8.data;
            var$10 = $result.$length0;
            var$12 = var$14.length;
            if (var$10 >= 0 && var$10 <= (var$12 - 0 | 0)) {
                $pattern.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
                if ($matcher.$logLevel >= 1) {
                    if (jl_System_errCache === null) {
                        $patternString = new otcic_JSStderrPrintStream;
                        $result = null;
                        $matcher = null;
                        ji_OutputStream__init_($patternString);
                        $patternString.$out = $result;
                        $result = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_($result);
                        $patternString.$sb = $result;
                        $patternString.$buffer1 = $rt_createCharArray(32);
                        $patternString.$autoFlush = 0;
                        $patternString.$charset = $matcher;
                        jl_System_errCache = $patternString;
                    }
                    $patternString = new jl_StringBuilder;
                    $patternString.$buffer = $rt_createCharArray(16);
                    var$9 = $patternString.$length0;
                    $result = $patternString;
                    $versionString = jl_String_toString($rt_s(161));
                    $result = $result;
                    jl_StringBuilder_insert($result, var$9, $versionString);
                    jl_StringBuilder_insert($result, $patternString.$length0, jl_String_toString($rt_s(69)));
                    jl_StringBuilder_insert($result, $patternString.$length0, jl_String_toString($pattern));
                    $versionString = new jl_String;
                    var$8 = $patternString.$buffer;
                    var$14 = var$8.data;
                    var$10 = $patternString.$length0;
                    var$12 = var$14.length;
                    if (var$10 >= 0 && var$10 <= (var$12 - 0 | 0)) {
                        $versionString.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
                        $rt_putStderr($rt_ustr($versionString));
                        $rt_putStderr("\n");
                    } else {
                        $patternString = new jl_IndexOutOfBoundsException;
                        jl_RuntimeException__init_($patternString);
                        $rt_throw($patternString);
                    }
                }
                var$9 = 2;
            } else {
                $patternString = new jl_IndexOutOfBoundsException;
                jl_Throwable__init_($patternString);
                $rt_throw($patternString);
            }
        }
        $this.$majorVersion = var$9;
        $found = var$7.length;
        if ($found < 2)
            var$10 = 0;
        else {
            $patternString = var$7[1];
            c: {
                try {
                    var$10 = jl_Integer_parseInt($patternString);
                    break c;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                    } else {
                        throw $$e;
                    }
                }
                $pattern = cbg_Gdx_app;
                $matcher = new jl_StringBuilder;
                $matcher.$buffer = $rt_createCharArray(16);
                var$10 = $matcher.$length0;
                $versionString = $matcher;
                jl_AbstractStringBuilder_insert($versionString, var$10, $rt_s(159));
                jl_AbstractStringBuilder_insert($versionString, $matcher.$length0, $patternString);
                jl_AbstractStringBuilder_insert($versionString, $matcher.$length0, $rt_s(160));
                jl_AbstractStringBuilder_insert0($matcher, $matcher.$length0, 0, 10);
                $patternString = new jl_String;
                var$8 = $matcher.$buffer;
                var$14 = var$8.data;
                var$12 = $matcher.$length0;
                var$13 = var$14.length;
                if (var$12 >= 0 && var$12 <= (var$13 - 0 | 0)) {
                    $patternString.$nativeString = $rt_charArrayToString(var$8.data, 0, var$12);
                    if ($pattern.$logLevel >= 1) {
                        if (jl_System_errCache === null) {
                            $versionString = new otcic_JSStderrPrintStream;
                            $pattern = null;
                            $matcher = null;
                            ji_OutputStream__init_($versionString);
                            $versionString.$out = $pattern;
                            $pattern = new jl_StringBuilder;
                            jl_AbstractStringBuilder__init_($pattern);
                            $versionString.$sb = $pattern;
                            $versionString.$buffer1 = $rt_createCharArray(32);
                            $versionString.$autoFlush = 0;
                            $versionString.$charset = $matcher;
                            jl_System_errCache = $versionString;
                        }
                        $matcher = new jl_StringBuilder;
                        $matcher.$buffer = $rt_createCharArray(16);
                        var$10 = $matcher.$length0;
                        $pattern = $matcher;
                        $versionString = jl_String_toString($rt_s(161));
                        $result = $pattern;
                        jl_StringBuilder_insert($result, var$10, $versionString);
                        jl_StringBuilder_insert($result, $matcher.$length0, jl_String_toString($rt_s(69)));
                        jl_StringBuilder_insert($result, $matcher.$length0, jl_String_toString($patternString));
                        $patternString = new jl_String;
                        var$8 = $matcher.$buffer;
                        var$14 = var$8.data;
                        var$12 = $matcher.$length0;
                        var$13 = var$14.length;
                        if (var$12 >= 0 && var$12 <= (var$13 - 0 | 0)) {
                            $patternString.$nativeString = $rt_charArrayToString(var$8.data, 0, var$12);
                            $rt_putStderr($rt_ustr($patternString));
                            $rt_putStderr("\n");
                        } else {
                            $patternString = new jl_IndexOutOfBoundsException;
                            jl_RuntimeException__init_($patternString);
                            $rt_throw($patternString);
                        }
                    }
                    var$10 = 0;
                } else {
                    $patternString = new jl_IndexOutOfBoundsException;
                    jl_Throwable__init_($patternString);
                    $rt_throw($patternString);
                }
            }
        }
        $this.$minorVersion = var$10;
        if ($found < 3)
            var$9 = 0;
        else {
            $patternString = var$7[2];
            d: {
                try {
                    var$9 = jl_Integer_parseInt($patternString);
                    break d;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                    } else {
                        throw $$e;
                    }
                }
                $matcher = cbg_Gdx_app;
                $result = new jl_StringBuilder;
                $result.$buffer = $rt_createCharArray(16);
                var$9 = $result.$length0;
                var$6 = $result;
                jl_AbstractStringBuilder_insert(var$6, var$9, $rt_s(159));
                jl_AbstractStringBuilder_insert(var$6, $result.$length0, $patternString);
                jl_AbstractStringBuilder_insert(var$6, $result.$length0, $rt_s(160));
                jl_AbstractStringBuilder_insert0($result, $result.$length0, 0, 10);
                $pattern = new jl_String;
                var$7 = $result.$buffer;
                var$8 = var$7.data;
                var$10 = $result.$length0;
                var$12 = var$8.length;
                if (var$10 >= 0 && var$10 <= (var$12 - 0 | 0)) {
                    $pattern.$nativeString = $rt_charArrayToString(var$7.data, 0, var$10);
                    if ($matcher.$logLevel >= 1) {
                        if (jl_System_errCache === null) {
                            $patternString = new otcic_JSStderrPrintStream;
                            $result = null;
                            $matcher = null;
                            ji_OutputStream__init_($patternString);
                            $patternString.$out = $result;
                            $result = new jl_StringBuilder;
                            jl_AbstractStringBuilder__init_($result);
                            $patternString.$sb = $result;
                            $patternString.$buffer1 = $rt_createCharArray(32);
                            $patternString.$autoFlush = 0;
                            $patternString.$charset = $matcher;
                            jl_System_errCache = $patternString;
                        }
                        $patternString = new jl_StringBuilder;
                        $patternString.$buffer = $rt_createCharArray(16);
                        var$9 = $patternString.$length0;
                        $result = $patternString;
                        $versionString = jl_String_toString($rt_s(161));
                        $result = $result;
                        jl_StringBuilder_insert($result, var$9, $versionString);
                        jl_StringBuilder_insert($result, $patternString.$length0, jl_String_toString($rt_s(69)));
                        jl_StringBuilder_insert($result, $patternString.$length0, jl_String_toString($pattern));
                        $versionString = new jl_String;
                        var$7 = $patternString.$buffer;
                        var$8 = var$7.data;
                        var$10 = $patternString.$length0;
                        var$12 = var$8.length;
                        if (var$10 >= 0 && var$10 <= (var$12 - 0 | 0)) {
                            $versionString.$nativeString = $rt_charArrayToString(var$7.data, 0, var$10);
                            $rt_putStderr($rt_ustr($versionString));
                            $rt_putStderr("\n");
                        } else {
                            $patternString = new jl_IndexOutOfBoundsException;
                            jl_RuntimeException__init_($patternString);
                            $rt_throw($patternString);
                        }
                    }
                    var$9 = 0;
                } else {
                    $patternString = new jl_IndexOutOfBoundsException;
                    jl_Throwable__init_($patternString);
                    $rt_throw($patternString);
                }
            }
        }
        $this.$releaseVersion = var$9;
    }
},
cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum),
cbg_Application$ApplicationType_Android = null,
cbg_Application$ApplicationType_Desktop = null,
cbg_Application$ApplicationType_HeadlessDesktop = null,
cbg_Application$ApplicationType_Applet = null,
cbg_Application$ApplicationType_WebGL = null,
cbg_Application$ApplicationType_iOS = null,
cbg_Application$ApplicationType_$VALUES = null,
cbg_Application$ApplicationType_$values = () => {
    let var$1, var$2;
    var$1 = $rt_createArray(cbg_Application$ApplicationType, 6);
    var$2 = var$1.data;
    var$2[0] = cbg_Application$ApplicationType_Android;
    var$2[1] = cbg_Application$ApplicationType_Desktop;
    var$2[2] = cbg_Application$ApplicationType_HeadlessDesktop;
    var$2[3] = cbg_Application$ApplicationType_Applet;
    var$2[4] = cbg_Application$ApplicationType_WebGL;
    var$2[5] = cbg_Application$ApplicationType_iOS;
    return var$1;
},
cbg_Application$ApplicationType__clinit_ = () => {
    let var$1;
    var$1 = new cbg_Application$ApplicationType;
    var$1.$name0 = $rt_s(2);
    var$1.$ordinal0 = 0;
    cbg_Application$ApplicationType_Android = var$1;
    var$1 = new cbg_Application$ApplicationType;
    var$1.$name0 = $rt_s(162);
    var$1.$ordinal0 = 1;
    cbg_Application$ApplicationType_Desktop = var$1;
    var$1 = new cbg_Application$ApplicationType;
    var$1.$name0 = $rt_s(163);
    var$1.$ordinal0 = 2;
    cbg_Application$ApplicationType_HeadlessDesktop = var$1;
    var$1 = new cbg_Application$ApplicationType;
    var$1.$name0 = $rt_s(164);
    var$1.$ordinal0 = 3;
    cbg_Application$ApplicationType_Applet = var$1;
    var$1 = new cbg_Application$ApplicationType;
    var$1.$name0 = $rt_s(165);
    var$1.$ordinal0 = 4;
    cbg_Application$ApplicationType_WebGL = var$1;
    var$1 = new cbg_Application$ApplicationType;
    var$1.$name0 = $rt_s(166);
    var$1.$ordinal0 = 5;
    cbg_Application$ApplicationType_iOS = var$1;
    cbg_Application$ApplicationType_$VALUES = cbg_Application$ApplicationType_$values();
},
cgxgbt_TeaGraphics$FullscreenChanged = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics$1() {
    jl_Object.call(this);
    this.$this$022 = null;
}
let cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0 = var$1 => {
    var$1;
},
cgxgbt_TeaGL20Debug = $rt_classWithoutFields(cgxgbt_TeaGL20),
cgxgbt_TeaGL20Debug_glBindTexture = ($this, $target, $texture) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.bindTexture($target, cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$textures, $texture));
    $target = $this.$gl.getError();
    if (!$target)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $texture = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $texture, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $texture = var$5.$length0;
    var$10 = var$9.length;
    if ($texture >= 0 && $texture <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $texture);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL20Debug_glClear = ($this, $mask) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.clear($mask);
    $mask = $this.$gl.getError();
    if (!$mask)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($mask, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $mask, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    $this.$gl.clearColor($red, $green, $blue, $alpha);
    var$5 = $this.$gl.getError();
    if (!var$5)
        return;
    var$6 = new cbgu_GdxRuntimeException;
    var$7 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    var$9 = var$8.$length0;
    var$10 = var$8;
    var$11 = $rt_s(152);
    var$10 = var$10;
    jl_AbstractStringBuilder_insert(var$10, var$9, var$11);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, var$5, 10);
    jl_AbstractStringBuilder_insert(var$10, var$8.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$10, var$8.$length0, var$7 === null ? $rt_s(1) : var$7);
    var$11 = new jl_String;
    var$12 = var$8.$buffer;
    var$13 = var$12.data;
    var$9 = var$8.$length0;
    var$14 = var$13.length;
    if (var$9 >= 0 && var$9 <= (var$14 - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString(var$12.data, 0, var$9);
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        var$6.$message = var$11;
        $rt_throw(var$6);
    }
    var$6 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$6);
    $rt_throw(var$6);
},
cgxgbt_TeaGL20Debug_glDepthMask = ($this, $flag) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.depthMask(!!$flag);
    $flag = $this.$gl.getError();
    if (!$flag)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($flag, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $flag, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glDisable = ($this, $cap) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.disable($cap);
    $cap = $this.$gl.getError();
    if (!$cap)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $cap, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.drawArrays($mode, $first, $count);
    $mode = $this.$gl.getError();
    if (!$mode)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $first = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $first, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $first = var$6.$length0;
    $count = var$10.length;
    if ($first >= 0 && $first <= ($count - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $first);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL20Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.drawElements($mode, $count, $type, $indices.$position0);
    $mode = $this.$gl.getError();
    if (!$mode)
        return;
    $indices = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $count = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $count, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $count = var$6.$length0;
    $type = var$10.length;
    if ($count >= 0 && $count <= ($type - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $count);
        $indices.$suppressionEnabled = 1;
        $indices.$writableStackTrace = 1;
        $indices.$message = var$8;
        $rt_throw($indices);
    }
    $indices = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($indices);
    $rt_throw($indices);
},
cgxgbt_TeaGL20Debug_glEnable = ($this, $cap) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.enable($cap);
    $cap = $this.$gl.getError();
    if (!$cap)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $cap, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glGetString = ($this, $name) => {
    return $rt_str($this.$gl.getParameter($name));
},
cgxgbt_TeaGL20Debug_glPixelStorei = ($this, $pname, $param) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.pixelStorei($pname, $param);
    $pname = $this.$gl.getError();
    if (!$pname)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $param = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $param, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $pname, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $param = var$5.$length0;
    var$10 = var$9.length;
    if ($param >= 0 && $param <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $param);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL20Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    let var$10, var$11, var$12, var$13, var$14, var$15;
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    $target = $this.$gl.getError();
    if (!$target)
        return;
    $pixels = new cbgu_GdxRuntimeException;
    var$10 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$11 = new jl_StringBuilder;
    var$11.$buffer = $rt_createCharArray(16);
    $level = var$11.$length0;
    var$12 = var$11;
    var$13 = $rt_s(152);
    var$12 = var$12;
    jl_AbstractStringBuilder_insert(var$12, $level, var$13);
    jl_AbstractStringBuilder_insert0(var$11, var$11.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$12, var$11.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$12, var$11.$length0, var$10 === null ? $rt_s(1) : var$10);
    var$13 = new jl_String;
    var$14 = var$11.$buffer;
    var$15 = var$14.data;
    $level = var$11.$length0;
    $internalformat = var$15.length;
    if ($level >= 0 && $level <= ($internalformat - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$14.data, 0, $level);
        $pixels.$suppressionEnabled = 1;
        $pixels.$writableStackTrace = 1;
        $pixels.$message = var$13;
        $rt_throw($pixels);
    }
    $pixels = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($pixels);
    $rt_throw($pixels);
},
cgxgbt_TeaGL20Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.texParameterf($target, $pname, $param);
    $target = $this.$gl.getError();
    if (!$target)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $pname = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $pname, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $pname = var$6.$length0;
    var$11 = var$10.length;
    if ($pname >= 0 && $pname <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL20Debug_glViewport = ($this, $x, $y, $width, $height) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.viewport($x, $y, $width, $height);
    $x = $this.$gl.getError();
    if (!$x)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($x, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    $y = var$7.$length0;
    var$8 = var$7;
    var$9 = $rt_s(152);
    var$8 = var$8;
    jl_AbstractStringBuilder_insert(var$8, $y, var$9);
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $x, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    $y = var$7.$length0;
    $width = var$11.length;
    if ($y >= 0 && $y <= ($width - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, $y);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$9;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL20Debug_glAttachShader = ($this, $program, $shader) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.attachShader(var$3, var$4);
    $program = $this.$gl.getError();
    if (!$program)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    $shader = var$3.$length0;
    var$7 = var$3;
    var$4 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $shader, var$4);
    jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$4 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    $shader = var$3.$length0;
    var$10 = var$9.length;
    if ($shader >= 0 && $shader <= (var$10 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$8.data, 0, $shader);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$4;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL20Debug_glBindBuffer = ($this, $target, $buffer) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.bindBuffer($target, cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$buffers, $buffer));
    $target = $this.$gl.getError();
    if (!$target)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $buffer = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $buffer, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $buffer = var$5.$length0;
    var$10 = var$9.length;
    if ($buffer >= 0 && $buffer <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $buffer);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL20Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    $srcRGB = $this.$gl.getError();
    if (!$srcRGB)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($srcRGB, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    $dstRGB = var$7.$length0;
    var$8 = var$7;
    var$9 = $rt_s(152);
    var$8 = var$8;
    jl_AbstractStringBuilder_insert(var$8, $dstRGB, var$9);
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $srcRGB, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    $dstRGB = var$7.$length0;
    $srcAlpha = var$11.length;
    if ($dstRGB >= 0 && $dstRGB <= ($srcAlpha - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, $dstRGB);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$9;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL20Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    if ($data === null)
        $this.$gl.bufferData($target, $size, $usage);
    else {
        var$5 = cgxgbtdt_TypedArrays_getTypedArray(0, $data);
        $this.$gl.bufferData($target, var$5, $usage);
    }
    $target = $this.$gl.getError();
    if (!$target)
        return;
    $data = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $size = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $size, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $size = var$6.$length0;
    $usage = var$10.length;
    if ($size >= 0 && $size <= ($usage - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $size);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$8;
        $rt_throw($data);
    }
    $data = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($data);
    $rt_throw($data);
},
cgxgbt_TeaGL20Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    var$5 = cgxgbtdt_TypedArrays_getTypedArray(0, $data);
    $this.$gl.bufferSubData($target, $offset, var$5);
    $target = $this.$gl.getError();
    if (!$target)
        return;
    $data = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $offset = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $offset, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $offset = var$6.$length0;
    $size = var$10.length;
    if ($offset >= 0 && $offset <= ($size - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $offset);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$8;
        $rt_throw($data);
    }
    $data = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($data);
    $rt_throw($data);
},
cgxgbt_TeaGL20Debug_glCompileShader = ($this, $shader) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.compileShader(var$2);
    $shader = $this.$gl.getError();
    if (!$shader)
        return;
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$5 = var$2.$length0;
    var$6 = var$2;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$6, var$2.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$2.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$2.$buffer;
    var$9 = var$8.data;
    var$5 = var$2.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgxgbt_TeaGL20Debug_glCreateProgram = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$gl.createProgram();
    var$2 = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$programs, var$1);
    var$3 = $this.$gl.getError();
    if (!var$3)
        return var$2;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString(var$3, 4);
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    var$2 = var$1.$length0;
    var$6 = var$1;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$2, var$7);
    jl_AbstractStringBuilder_insert0(var$1, var$1.$length0, var$3, 10);
    jl_AbstractStringBuilder_insert(var$8, var$1.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$1.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$1.$buffer;
    var$10 = var$9.data;
    var$3 = var$1.$length0;
    var$11 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL20Debug_glCreateShader = ($this, $type) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $this.$gl.createShader($type);
    $type = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$shaders, var$2);
    var$3 = $this.$gl.getError();
    if (!var$3)
        return $type;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString(var$3, 4);
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    $type = var$2.$length0;
    var$6 = var$2;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, $type, var$7);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$3, 10);
    jl_AbstractStringBuilder_insert(var$8, var$2.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$2.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$2.$buffer;
    var$10 = var$9.data;
    var$3 = var$2.$length0;
    var$11 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL20Debug_glDisableVertexAttribArray = ($this, $index) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.disableVertexAttribArray($index);
    $index = $this.$gl.getError();
    if (!$index)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$gl.drawElements($mode, $count, $type, $indices);
    $mode = $this.$gl.getError();
    if (!$mode)
        return;
    var$5 = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    $count = var$7.$length0;
    var$8 = var$7;
    var$9 = $rt_s(152);
    var$8 = var$8;
    jl_AbstractStringBuilder_insert(var$8, $count, var$9);
    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $mode, 10);
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$7.$length0, var$6 === null ? $rt_s(1) : var$6);
    var$9 = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    $count = var$7.$length0;
    $type = var$11.length;
    if ($count >= 0 && $count <= ($type - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, $count);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$9;
        $rt_throw(var$5);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$5);
    $rt_throw(var$5);
},
cgxgbt_TeaGL20Debug_glEnableVertexAttribArray = ($this, $index) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.enableVertexAttribArray($index);
    $index = $this.$gl.getError();
    if (!$index)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glGenerateMipmap = ($this, $target) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.generateMipmap($target);
    $target = $this.$gl.getError();
    if (!$target)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib, var$6, var$7, var$8, var$9, var$10, var$11;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    $program = $this.$gl.getError();
    if (!$program)
        return $attrib;
    $size = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    $type = new jl_StringBuilder;
    $type.$buffer = $rt_createCharArray(16);
    $index = $type.$length0;
    var$7 = $type;
    var$8 = $rt_s(152);
    $attrib = var$7;
    jl_AbstractStringBuilder_insert($attrib, $index, var$8);
    jl_AbstractStringBuilder_insert0($type, $type.$length0, $program, 10);
    jl_AbstractStringBuilder_insert($attrib, $type.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert($attrib, $type.$length0, var$6 === null ? $rt_s(1) : var$6);
    $attrib = new jl_String;
    var$9 = $type.$buffer;
    var$10 = var$9.data;
    $index = $type.$length0;
    var$11 = var$10.length;
    if ($index >= 0 && $index <= (var$11 - 0 | 0)) {
        $attrib.$nativeString = $rt_charArrayToString(var$9.data, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $attrib;
        $rt_throw($size);
    }
    $size = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($size);
    $rt_throw($size);
},
cgxgbt_TeaGL20Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform, var$6, var$7, var$8, var$9, var$10, var$11;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    $program = $this.$gl.getError();
    if (!$program)
        return $uniform;
    $size = new cbgu_GdxRuntimeException;
    var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    $type = new jl_StringBuilder;
    $type.$buffer = $rt_createCharArray(16);
    $index = $type.$length0;
    var$7 = $type;
    var$8 = $rt_s(152);
    $uniform = var$7;
    jl_AbstractStringBuilder_insert($uniform, $index, var$8);
    jl_AbstractStringBuilder_insert0($type, $type.$length0, $program, 10);
    jl_AbstractStringBuilder_insert($uniform, $type.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert($uniform, $type.$length0, var$6 === null ? $rt_s(1) : var$6);
    $uniform = new jl_String;
    var$9 = $type.$buffer;
    var$10 = var$9.data;
    $index = $type.$length0;
    var$11 = var$10.length;
    if ($index >= 0 && $index <= (var$11 - 0 | 0)) {
        $uniform.$nativeString = $rt_charArrayToString(var$9.data, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $uniform;
        $rt_throw($size);
    }
    $size = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($size);
    $rt_throw($size);
},
cgxgbt_TeaGL20Debug_glGetAttribLocation = ($this, $program, $name) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $program = $this.$gl.getAttribLocation(var$3, $rt_ustr($name));
    var$4 = $this.$gl.getError();
    if (!var$4)
        return $program;
    $name = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString(var$4, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $program = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$3 = var$7;
    jl_AbstractStringBuilder_insert(var$3, $program, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$4, 10);
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$3 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    var$4 = var$6.$length0;
    var$11 = var$10.length;
    if (var$4 >= 0 && var$4 <= (var$11 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$9.data, 0, var$4);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$3;
        $rt_throw($name);
    }
    $name = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($name);
    $rt_throw($name);
},
cgxgbt_TeaGL20Debug_glGetFloatv = ($this, $pname, $params) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    $pname = $this.$gl.getError();
    if (!$pname)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $pname, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$10 = var$4.$length0;
    var$5 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$5 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$7;
        $rt_throw($params);
    }
    $params = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($params);
    $rt_throw($params);
},
cgxgbt_TeaGL20Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    $program = $this.$gl.getError();
    if (!$program)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $pname = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $pname, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $pname = var$5.$length0;
    var$10 = var$9.length;
    if ($pname >= 0 && $pname <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$7;
        $rt_throw($params);
    }
    $params = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($params);
    $rt_throw($params);
},
cgxgbt_TeaGL20Debug_glGetProgramInfoLog = ($this, $program) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $rt_str($this.$gl.getProgramInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program)));
    $program = $this.$gl.getError();
    if (!$program)
        return var$2;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$5 = var$4.$length0;
    var$11 = var$10.length;
    if (var$5 >= 0 && var$5 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    $shader = $this.$gl.getError();
    if (!$shader)
        return;
    $params = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $pname = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, $pname, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $pname = var$5.$length0;
    var$10 = var$9.length;
    if ($pname >= 0 && $pname <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$7;
        $rt_throw($params);
    }
    $params = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($params);
    $rt_throw($params);
},
cgxgbt_TeaGL20Debug_glGetShaderInfoLog = ($this, $shader) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$2 = $rt_str($this.$gl.getShaderInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader)));
    $shader = $this.$gl.getError();
    if (!$shader)
        return var$2;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$5 = var$4.$length0;
    var$11 = var$10.length;
    if (var$5 >= 0 && var$5 <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    $program = $this.$gl.getError();
    if (!$program)
        return $loc;
    $name = new cbgu_GdxRuntimeException;
    var$4 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $loc = var$5.$length0;
    var$6 = var$5;
    var$7 = $rt_s(152);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, $loc, var$7);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$8, var$5.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$8, var$5.$length0, var$4 === null ? $rt_s(1) : var$4);
    var$8 = new jl_String;
    var$9 = var$5.$buffer;
    var$10 = var$9.data;
    $loc = var$5.$length0;
    var$11 = var$10.length;
    if ($loc >= 0 && $loc <= (var$11 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $loc);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$8;
        $rt_throw($name);
    }
    $name = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($name);
    $rt_throw($name);
},
cgxgbt_TeaGL20Debug_glLinkProgram = ($this, $program) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.linkProgram(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program));
    $program = $this.$gl.getError();
    if (!$program)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glShaderSource = ($this, $shader, $source) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.shaderSource(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $rt_ustr($source));
    $shader = $this.$gl.getError();
    if (!$shader)
        return;
    $source = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $shader, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        $source.$suppressionEnabled = 1;
        $source.$writableStackTrace = 1;
        $source.$message = var$7;
        $rt_throw($source);
    }
    $source = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($source);
    $rt_throw($source);
},
cgxgbt_TeaGL20Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$gl.texParameterf($target, $pname, $param);
    $target = $this.$gl.getError();
    if (!$target)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $pname = var$6.$length0;
    var$7 = var$6;
    var$8 = $rt_s(152);
    var$7 = var$7;
    jl_AbstractStringBuilder_insert(var$7, $pname, var$8);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $target, 10);
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$8 = new jl_String;
    var$9 = var$6.$buffer;
    var$10 = var$9.data;
    $pname = var$6.$length0;
    $param = var$10.length;
    if ($pname >= 0 && $pname <= ($param - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL20Debug_glUniform1i = ($this, $location, $x) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms, $this.$currProgram), $location);
    $this.$gl.uniform1i(var$3, $x);
    $location = $this.$gl.getError();
    if (!$location)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    var$5 = otci_IntegerUtil_toUnsignedLogRadixString($location, 4);
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    $x = var$6.$length0;
    var$3 = var$6;
    var$7 = $rt_s(152);
    var$3 = var$3;
    jl_AbstractStringBuilder_insert(var$3, $x, var$7);
    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $location, 10);
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$3, var$6.$length0, var$5 === null ? $rt_s(1) : var$5);
    var$7 = new jl_String;
    var$8 = var$6.$buffer;
    var$9 = var$8.data;
    $x = var$6.$length0;
    var$10 = var$9.length;
    if ($x >= 0 && $x <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $x);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$4);
    $rt_throw(var$4);
},
cgxgbt_TeaGL20Debug_glUseProgram = ($this, $program) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$currProgram = $program;
    $this.$gl.useProgram(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program));
    $program = $this.$gl.getError();
    if (!$program)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(152);
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $program, 10);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    var$5 = var$4.$length0;
    var$10 = var$9.length;
    if (var$5 >= 0 && var$5 <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    let var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
    $indx = $this.$gl.getError();
    if (!$indx)
        return;
    var$7 = new cbgu_GdxRuntimeException;
    var$8 = otci_IntegerUtil_toUnsignedLogRadixString($indx, 4);
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    $size = var$9.$length0;
    var$10 = var$9;
    var$11 = $rt_s(152);
    var$10 = var$10;
    jl_AbstractStringBuilder_insert(var$10, $size, var$11);
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $indx, 10);
    jl_AbstractStringBuilder_insert(var$10, var$9.$length0, $rt_s(55));
    jl_AbstractStringBuilder_insert(var$10, var$9.$length0, var$8 === null ? $rt_s(1) : var$8);
    var$11 = new jl_String;
    var$12 = var$9.$buffer;
    var$13 = var$12.data;
    $size = var$9.$length0;
    $type = var$13.length;
    if ($size >= 0 && $size <= ($type - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString(var$12.data, 0, $size);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$11;
        $rt_throw(var$7);
    }
    var$7 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$7);
    $rt_throw(var$7);
},
ju_Collection = $rt_classWithoutFields(0),
ju_AbstractCollection = $rt_classWithoutFields(),
ju_AbstractCollection_toArray = ($this, $a) => {
    let var$2, $i, $i_0, $iter, var$6, var$7, var$8;
    var$2 = $a.data;
    $i = $this.$size1;
    $i_0 = var$2.length;
    if ($i_0 >= $i)
        while ($i < $i_0) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    else {
        $iter = $a.constructor;
        if ($iter === null)
            var$6 = null;
        else {
            var$6 = $iter.classObject;
            if (var$6 === null) {
                var$6 = new jl_Class;
                var$6.$platformClass = $iter;
                $iter.classObject = var$6;
            }
        }
        var$6 = jl_Class_getComponentType(var$6);
        if (var$6 === null) {
            var$6 = new jl_NullPointerException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        if (var$6 === $rt_cls($rt_voidcls)) {
            var$6 = new jl_IllegalArgumentException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        if ($i < 0) {
            var$6 = new jl_NegativeArraySizeException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        $a = jlr_Array_newInstanceImpl(var$6.$platformClass, $i);
    }
    $i_0 = 0;
    var$6 = $this;
    $iter = new ju_AbstractList$1;
    $iter.$this$02 = var$6;
    $iter.$modCount1 = var$6.$modCount;
    $iter.$size6 = var$6.$size1;
    $iter.$removeIndex0 = (-1);
    var$6 = $iter;
    a: {
        while (true) {
            $i = var$6.$index4;
            if (!($i >= var$6.$size6 ? 0 : 1))
                break;
            var$7 = $i_0 + 1 | 0;
            var$8 = var$6.$modCount1;
            $iter = var$6.$this$02;
            if (var$8 < $iter.$modCount) {
                var$6 = new ju_ConcurrentModificationException;
                var$6.$suppressionEnabled = 1;
                var$6.$writableStackTrace = 1;
                $rt_throw(var$6);
            }
            var$6.$removeIndex0 = $i;
            var$6.$index4 = $i + 1 | 0;
            $iter = $iter;
            if ($i < 0)
                break a;
            if ($i >= $iter.$size1)
                break a;
            $a.data[$i_0] = $iter.$array0.data[$i];
            $i_0 = var$7;
        }
        return $a;
    }
    var$6 = new jl_IndexOutOfBoundsException;
    var$6.$suppressionEnabled = 1;
    var$6.$writableStackTrace = 1;
    $rt_throw(var$6);
},
ju_Set = $rt_classWithoutFields(0),
ju_AbstractSet = $rt_classWithoutFields(ju_AbstractCollection);
function ju_HashSet() {
    ju_AbstractSet.call(this);
    this.$backingMap = null;
}
function cbgu_IntMap() {
    let a = this; jl_Object.call(a);
    a.$size5 = 0;
    a.$keyTable0 = null;
    a.$valueTable1 = null;
    a.$zeroValue = null;
    a.$hasZeroValue = 0;
    a.$loadFactor1 = 0.0;
    a.$threshold1 = 0;
    a.$shift = 0;
    a.$mask = 0;
}
let cbgu_IntMap__init_ = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor1 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold1 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask = $initialCapacity;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable0 = $rt_createIntArray($tableSize);
        $this.$valueTable1 = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $initialCapacity = var$5.$length0;
    var$6 = var$5;
    jl_AbstractStringBuilder_insert(var$6, $initialCapacity, $rt_s(56));
    jl_AbstractStringBuilder_insert1(var$6, var$5.$length0, $loadFactor);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $tableSize = var$5.$length0;
    var$10 = var$9.length;
    if ($tableSize >= 0 && $tableSize <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$5);
    $rt_throw(var$5);
},
cbgu_IntMap__init_0 = (var_0, var_1) => {
    let var_2 = new cbgu_IntMap();
    cbgu_IntMap__init_(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntMap_put = ($this, $key, $value) => {
    let $oldValue, var$4, $i, var$6, var$7;
    if (!$key) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue) {
            $this.$hasZeroValue = 1;
            $this.$size5 = $this.$size5 + 1 | 0;
        }
        return $oldValue;
    }
    var$4 = $this.$keyTable0;
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift));
    a: {
        while (true) {
            var$6 = var$4.data;
            var$7 = var$6[$i];
            if (!var$7) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if (var$7 == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask;
        }
    }
    if ($i >= 0) {
        var$4 = $this.$valueTable1.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$6[$i] = $key;
    $this.$valueTable1.data[$i] = $value;
    $key = $this.$size5 + 1 | 0;
    $this.$size5 = $key;
    if ($key >= $this.$threshold1)
        cbgu_IntMap_resize($this, var$6.length << 1);
    return null;
},
cbgu_IntMap_remove = ($this, $key) => {
    let $oldValue, $keyTable, var$4, var$5, $i, var$7, $placement, $valueTable, $oldValue_0, $mask, $next, var$13;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return null;
        $this.$hasZeroValue = 0;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$size5 = $this.$size5 - 1 | 0;
        return $oldValue;
    }
    $keyTable = $this.$keyTable0;
    var$4 = Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769));
    var$5 = $this.$shift;
    $i = Long_lo(Long_shru(var$4, var$5));
    a: {
        while (true) {
            var$7 = $keyTable.data;
            $placement = var$7[$i];
            if (!$placement) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if ($placement == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask;
        }
    }
    if ($i < 0)
        return null;
    $valueTable = $this.$valueTable1.data;
    $oldValue_0 = $valueTable[$i];
    $mask = $this.$mask;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$13 = var$7[$next];
        if (!var$13)
            break;
        $placement = Long_lo(Long_shru(Long_mul(Long_fromInt(var$13), Long_create(2135587861, 2654435769)), var$5));
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$7[$i] = var$13;
            $valueTable[$i] = $valueTable[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$7[$i] = 0;
    $valueTable[$i] = null;
    $this.$size5 = $this.$size5 - 1 | 0;
    return $oldValue_0;
},
cbgu_IntMap_containsValue = ($this, $value, $identity) => {
    let $valueTable, $keyTable, $i, var$6, var$7;
    a: {
        $valueTable = $this.$valueTable1;
        if ($value === null) {
            if ($this.$hasZeroValue && $this.$zeroValue === null)
                return 1;
            $valueTable = $valueTable.data;
            $keyTable = $this.$keyTable0;
            $i = $valueTable.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if ($keyTable.data[$i] && $valueTable[$i] === null)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($identity) {
            if ($value === $this.$zeroValue)
                return 1;
            $valueTable = $valueTable.data;
            $i = $valueTable.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if ($valueTable[$i] === $value)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($this.$hasZeroValue) {
            var$6 = $this.$zeroValue;
            var$7 = $value;
            if (var$7 === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value == var$7.$value ? 1 : 0)
                return 1;
        }
        $valueTable = $valueTable.data;
        $i = $valueTable.length - 1 | 0;
        while (true) {
            if ($i < 0)
                break a;
            var$6 = $valueTable[$i];
            var$7 = $value;
            if (var$7 === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value == var$7.$value ? 1 : 0)
                return 1;
            $i = $i + (-1) | 0;
        }
    }
    return 0;
},
cbgu_IntMap_resize = ($this, $newSize) => {
    let $oldCapacity, var$3, $oldKeyTable, $oldValueTable, var$6, var$7, var$8, $i, $key, var$11;
    a: {
        $oldCapacity = $this.$keyTable0.data.length;
        $this.$threshold1 = $newSize * $this.$loadFactor1 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask = var$3;
        var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $this.$shift = var$3;
        $oldKeyTable = $this.$keyTable0;
        $oldValueTable = $this.$valueTable1;
        var$6 = $rt_createIntArray($newSize);
        $this.$keyTable0 = var$6;
        var$7 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable1 = var$7;
        if ($this.$size5 > 0) {
            var$8 = var$7.data;
            var$7 = var$6.data;
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key) {
                    var$11 = $oldValueTable.data[$i];
                    $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$3));
                    while (var$7[$newSize]) {
                        $newSize = ($newSize + 1 | 0) & $this.$mask;
                    }
                    var$7[$newSize] = $key;
                    var$8[$newSize] = var$11;
                }
                $i = $i + 1 | 0;
            }
        }
    }
};
function cbgu_IntSet() {
    let a = this; jl_Object.call(a);
    a.$size3 = 0;
    a.$keyTable1 = null;
    a.$hasZeroValue0 = 0;
    a.$loadFactor4 = 0.0;
    a.$threshold2 = 0;
    a.$shift0 = 0;
    a.$mask0 = 0;
}
let cbgu_IntSet__init_0 = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor4 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold2 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask0 = $initialCapacity;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable1 = $rt_createIntArray($tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $initialCapacity = var$5.$length0;
    var$6 = var$5;
    jl_AbstractStringBuilder_insert(var$6, $initialCapacity, $rt_s(56));
    jl_AbstractStringBuilder_insert1(var$6, var$5.$length0, $loadFactor);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $tableSize = var$5.$length0;
    var$10 = var$9.length;
    if ($tableSize >= 0 && $tableSize <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$5);
    $rt_throw(var$5);
},
cbgu_IntSet__init_ = (var_0, var_1) => {
    let var_2 = new cbgu_IntSet();
    cbgu_IntSet__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntSet_add = ($this, $key) => {
    let var$2, $i, var$4, var$5;
    if (!$key) {
        if ($this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 1;
        $this.$size3 = $this.$size3 + 1 | 0;
        return 1;
    }
    var$2 = $this.$keyTable1;
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift0));
    a: {
        while (true) {
            var$4 = var$2.data;
            var$5 = var$4[$i];
            if (!var$5) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if (var$5 == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask0;
        }
    }
    if ($i >= 0)
        return 0;
    var$4[ -($i + 1 | 0) | 0] = $key;
    $key = $this.$size3 + 1 | 0;
    $this.$size3 = $key;
    if ($key >= $this.$threshold2)
        cbgu_IntSet_resize($this, var$4.length << 1);
    return 1;
},
cbgu_IntSet_remove = ($this, $key) => {
    let $keyTable, var$3, var$4, $i, var$6, $mask, $next, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 0;
        $this.$size3 = $this.$size3 - 1 | 0;
        return 1;
    }
    $keyTable = $this.$keyTable1;
    var$3 = Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769));
    var$4 = $this.$shift0;
    $i = Long_lo(Long_shru(var$3, var$4));
    a: {
        while (true) {
            var$6 = $keyTable.data;
            $mask = var$6[$i];
            if (!$mask) {
                $i =  -($i + 1 | 0) | 0;
                break a;
            }
            if ($mask == $key)
                break;
            $i = ($i + 1 | 0) & $this.$mask0;
        }
    }
    if ($i < 0)
        return 0;
    $mask = $this.$mask0;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        $key = var$6[$next];
        if (!$key)
            break;
        $placement = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$4));
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$6[$i] = $key;
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$6[$i] = 0;
    $this.$size3 = $this.$size3 - 1 | 0;
    return 1;
},
cbgu_IntSet_resize = ($this, $newSize) => {
    let $oldCapacity, var$3, $oldKeyTable, var$5, $i, $key, var$8;
    a: {
        $oldCapacity = $this.$keyTable1.data.length;
        $this.$threshold2 = $newSize * $this.$loadFactor4 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask0 = var$3;
        var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $this.$shift0 = var$3;
        $oldKeyTable = $this.$keyTable1;
        var$5 = $rt_createIntArray($newSize);
        $this.$keyTable1 = var$5;
        if ($this.$size3 > 0) {
            var$5 = var$5.data;
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key) {
                    var$8 = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$3));
                    while (var$5[var$8]) {
                        var$8 = (var$8 + 1 | 0) & $this.$mask0;
                    }
                    var$5[var$8] = $key;
                }
                $i = $i + 1 | 0;
            }
        }
    }
},
cgxgbtf_FileDB = $rt_classWithoutFields();
function cgxgbtf_MemoryFileStorage() {
    let a = this; cgxgbtf_FileDB.call(a);
    a.$fileMap = null;
    a.$tmpPaths = null;
    a.$debug = 0;
}
let cgxgbtf_MemoryFileStorage_read = ($this, $file) => {
    let $path, $data, $byteArray, $e, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $$je;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, $path);
    if ($data === null)
        return null;
    $byteArray = $data.$bytes;
    a: {
        try {
            $file = ji_ByteArrayInputStream__init_0($byteArray);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $file;
    }
    cgxgbtf_MemoryFileStorage_removeInternal($this, $path, 1);
    $file = new cbgu_GdxRuntimeException;
    var$6 = $this.constructor;
    if (var$6 === null)
        var$7 = null;
    else {
        var$7 = var$6.classObject;
        if (var$7 === null) {
            var$7 = new jl_Class;
            var$7.$platformClass = var$6;
            var$6.classObject = var$7;
        }
    }
    $data = jl_Class_getSimpleName(var$7);
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    var$9 = var$8.$length0;
    var$6 = var$8;
    $data = $data === null ? $rt_s(1) : $data;
    var$6 = var$6;
    jl_AbstractStringBuilder_insert(var$6, var$9, $data);
    jl_AbstractStringBuilder_insert(var$6, var$8.$length0, $rt_s(167));
    jl_AbstractStringBuilder_insert(var$6, var$8.$length0, $path === null ? $rt_s(1) : $path);
    $path = new jl_String;
    $byteArray = var$8.$buffer;
    var$10 = $byteArray.data;
    var$11 = var$8.$length0;
    var$12 = var$10.length;
    if (var$11 >= 0 && var$11 <= (var$12 - 0 | 0)) {
        $path.$nativeString = $rt_charArrayToString($byteArray.data, 0, var$11);
        $file.$suppressionEnabled = 1;
        $file.$writableStackTrace = 1;
        $file.$message = $path;
        $file.$cause = $e;
        $rt_throw($file);
    }
    $file = new jl_IndexOutOfBoundsException;
    $file.$suppressionEnabled = 1;
    $file.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($file);
    $rt_throw($file);
},
cgxgbtf_MemoryFileStorage_writeInternal = ($this, $file, $data, $append, $expectedLength) => {
    let $path, $oldData, var$7, var$8, $newSize, $oldBytes, $i, $j, $cur, $parentPath;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    $oldData = $this.$fileMap;
    $expectedLength = cbgu_ObjectMap_locateKey($oldData, $path);
    $oldData = $expectedLength < 0 ? null : $oldData.$valueTable.data[$expectedLength];
    if ($append && $oldData !== null) {
        var$7 = $data.data;
        var$8 = $oldData.$bytes.data;
        $append = var$7.length;
        $expectedLength = var$8.length;
        $newSize = $append + $expectedLength | 0;
        $data = $rt_createByteArray($newSize);
        $oldBytes = $data.data;
        $i = 0;
        while ($i < $expectedLength) {
            $oldBytes[$i] = var$8[$i];
            $i = $i + 1 | 0;
        }
        $j = 0;
        while ($expectedLength < $newSize) {
            $oldBytes[$expectedLength] = var$7[$j];
            $expectedLength = $expectedLength + 1 | 0;
            $j = $j + 1 | 0;
        }
    }
    cgxgbtf_MemoryFileStorage_putFileInternal($this, $path, $data, 1);
    $oldData = $file.$file;
    $append = jl_String_lastIndexOf0($oldData, $rt_s(113), $oldData.$nativeString.length);
    $path = $rt_s(40);
    if ($append > 0)
        $path = jl_String_substring($file.$file, 0, $append);
    $cur = cgxgbt_TeaFileHandle__init_($file.$teaFiles, $path, $file.$type1);
    while (true) {
        $file = $cur;
        $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
        $append = $path.$nativeString.length ? 0 : 1;
        a: {
            if (!$append) {
                if ($path === $rt_s(168))
                    $append = 1;
                else if (!($rt_s(168) instanceof jl_String))
                    $append = 0;
                else {
                    $oldData = $rt_s(168);
                    $append = $path.$nativeString !== $oldData.$nativeString ? 0 : 1;
                }
                if (!$append) {
                    if ($path === $rt_s(113))
                        $append = 1;
                    else if (!($rt_s(113) instanceof jl_String))
                        $append = 0;
                    else {
                        $oldData = $rt_s(113);
                        $append = $path.$nativeString !== $oldData.$nativeString ? 0 : 1;
                    }
                    if (!$append) {
                        if ($path === $rt_s(169))
                            $append = 1;
                        else if (!($rt_s(169) instanceof jl_String))
                            $append = 0;
                        else {
                            $oldData = $rt_s(169);
                            $append = $path.$nativeString !== $oldData.$nativeString ? 0 : 1;
                        }
                        if (!$append) {
                            $append = 0;
                            break a;
                        }
                    }
                }
            }
            $append = 1;
        }
        if ($append)
            break;
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
        if (!(cbgu_ObjectMap_locateKey($this.$fileMap, $parentPath) < 0 ? 0 : 1))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath, 1);
        $oldData = $file.$file;
        $expectedLength = jl_String_lastIndexOf0($oldData, $rt_s(113), $oldData.$nativeString.length);
        $path = $rt_s(40);
        if ($expectedLength > 0)
            $path = jl_String_substring($file.$file, 0, $expectedLength);
        $cur = cgxgbt_TeaFileHandle__init_($file.$teaFiles, $path, $file.$type1);
    }
},
cgxgbtf_MemoryFileStorage_mkdirs = ($this, $file) => {
    let $cur, var$3, $path, var$5, $parentPath, var$7;
    cgxgbtf_MemoryFileStorage_putFolderInternal($this, cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file), 1);
    $cur = $file.$file;
    var$3 = jl_String_lastIndexOf0($cur, $rt_s(113), $cur.$nativeString.length);
    $path = $rt_s(40);
    if (var$3 > 0)
        $path = jl_String_substring($file.$file, 0, var$3);
    $cur = cgxgbt_TeaFileHandle__init_($file.$teaFiles, $path, $file.$type1);
    while (true) {
        var$5 = $cur;
        $file = cgxgbtf_MemoryFileStorage_fixPath($this, var$5.$file);
        var$3 = $file.$nativeString.length ? 0 : 1;
        a: {
            if (!var$3) {
                if ($file === $rt_s(168))
                    var$3 = 1;
                else if (!($rt_s(168) instanceof jl_String))
                    var$3 = 0;
                else {
                    $path = $rt_s(168);
                    var$3 = $file.$nativeString !== $path.$nativeString ? 0 : 1;
                }
                if (!var$3) {
                    if ($file === $rt_s(113))
                        var$3 = 1;
                    else if (!($rt_s(113) instanceof jl_String))
                        var$3 = 0;
                    else {
                        $path = $rt_s(113);
                        var$3 = $file.$nativeString !== $path.$nativeString ? 0 : 1;
                    }
                    if (!var$3) {
                        if ($file === $rt_s(169))
                            var$3 = 1;
                        else if (!($rt_s(169) instanceof jl_String))
                            var$3 = 0;
                        else {
                            $path = $rt_s(169);
                            var$3 = $file.$nativeString !== $path.$nativeString ? 0 : 1;
                        }
                        if (!var$3) {
                            var$3 = 0;
                            break a;
                        }
                    }
                }
            }
            var$3 = 1;
        }
        if (var$3)
            break;
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, var$5.$file);
        if (!(cbgu_ObjectMap_locateKey($this.$fileMap, $parentPath) < 0 ? 0 : 1))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath, 1);
        $path = var$5.$file;
        var$7 = jl_String_lastIndexOf0($path, $rt_s(113), $path.$nativeString.length);
        $file = $rt_s(40);
        if (var$7 > 0)
            $file = jl_String_substring(var$5.$file, 0, var$7);
        $cur = cgxgbt_TeaFileHandle__init_(var$5.$teaFiles, $file, var$5.$type1);
    }
},
cgxgbtf_MemoryFileStorage_exists = ($this, $file) => {
    let $path, var$3, var$4;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    $file = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    var$3 = $file.$nativeString.length ? 0 : 1;
    a: {
        if (!var$3) {
            if ($file === $rt_s(168))
                var$3 = 1;
            else if (!($rt_s(168) instanceof jl_String))
                var$3 = 0;
            else {
                var$4 = $rt_s(168);
                var$3 = $file.$nativeString !== var$4.$nativeString ? 0 : 1;
            }
            if (!var$3) {
                if ($file === $rt_s(113))
                    var$3 = 1;
                else if (!($rt_s(113) instanceof jl_String))
                    var$3 = 0;
                else {
                    var$4 = $rt_s(113);
                    var$3 = $file.$nativeString !== var$4.$nativeString ? 0 : 1;
                }
                if (!var$3) {
                    if ($file === $rt_s(169))
                        var$3 = 1;
                    else if (!($rt_s(169) instanceof jl_String))
                        var$3 = 0;
                    else {
                        var$4 = $rt_s(169);
                        var$3 = $file.$nativeString !== var$4.$nativeString ? 0 : 1;
                    }
                    if (!var$3) {
                        var$3 = 0;
                        break a;
                    }
                }
            }
        }
        var$3 = 1;
    }
    if (!var$3)
        return cgxgbtf_MemoryFileStorage_containsKeyInternal($this, $path);
    return 1;
},
cgxgbtf_MemoryFileStorage_length = ($this, $file) => {
    let $data;
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file));
    if ($data !== null && !($data.$type3 != 1 ? 0 : 1))
        return Long_fromInt($data.$bytes.data.length);
    return Long_ZERO;
},
cgxgbtf_MemoryFileStorage_putFile = ($this, $key, $data) => {
    return;
},
cgxgbtf_MemoryFileStorage_removeFile = ($this, $key) => {
    return;
},
cgxgbtf_MemoryFileStorage_getInternal = ($this, $path) => {
    let $fileData, var$3, $type, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $fileData = $this.$fileMap;
    var$3 = cbgu_ObjectMap_locateKey($fileData, $path);
    $fileData = var$3 < 0 ? null : $fileData.$valueTable.data[var$3];
    a: {
        $fileData = $fileData;
        if ($this.$debug) {
            $type = new jl_StringBuilder;
            $type.$buffer = $rt_createCharArray(16);
            var$5 = $type.$length0;
            var$6 = $type;
            jl_AbstractStringBuilder_insertSpace(var$6, var$5, var$5 + 1 | 0);
            var$6.$buffer.data[var$5] = 34;
            var$5 = $type.$length0;
            var$7 = $path === null ? $rt_s(1) : $path;
            jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
            var$8 = $type.$length0;
            jl_AbstractStringBuilder_insertSpace(var$6, var$8, var$8 + 1 | 0);
            var$6.$buffer.data[var$8] = 34;
            var$9 = new jl_String;
            var$10 = $type.$buffer;
            var$11 = var$10.data;
            var$5 = $type.$length0;
            var$8 = var$11.length;
            if (var$5 >= 0 && var$5 <= (var$8 - 0 | 0)) {
                var$9.$nativeString = $rt_charArrayToString(var$10.data, 0, var$5);
                $type = $fileData !== null && ($fileData.$type3 != 1 ? 0 : 1) ? $rt_s(170) : $rt_s(171);
                if (jl_System_outCache === null) {
                    $path = new otcic_JSStdoutPrintStream;
                    var$6 = null;
                    var$7 = null;
                    $path.$out = var$6;
                    var$6 = new jl_StringBuilder;
                    var$6.$buffer = $rt_createCharArray(16);
                    $path.$sb = var$6;
                    $path.$buffer1 = $rt_createCharArray(32);
                    $path.$autoFlush = 0;
                    $path.$charset = var$7;
                    jl_System_outCache = $path;
                }
                var$6 = $this.constructor;
                if (var$6 === null)
                    $path = null;
                else {
                    $path = var$6.classObject;
                    if ($path === null) {
                        $path = new jl_Class;
                        $path.$platformClass = var$6;
                        var$6.classObject = $path;
                    }
                }
                $path = jl_Class_getSimpleName($path);
                var$3 = $fileData === null ? 0 : 1;
                if ($fileData === null)
                    var$5 = 0;
                else {
                    var$10 = $fileData.$bytes;
                    var$5 = var$10 === null ? 0 : var$10.data.length;
                }
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                var$8 = var$6.$length0;
                var$7 = var$6;
                $path = $path === null ? $rt_s(1) : $path;
                var$7 = var$7;
                jl_AbstractStringBuilder_insert(var$7, var$8, $path);
                jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $type);
                jl_AbstractStringBuilder_insert(var$7, var$6.$length0, !var$3 ? $rt_s(172) : $rt_s(173));
                jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(174));
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10);
                jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(175));
                jl_AbstractStringBuilder_insert(var$7, var$6.$length0, var$9);
                $path = new jl_String;
                var$10 = var$6.$buffer;
                var$11 = var$10.data;
                var$5 = var$6.$length0;
                var$8 = var$11.length;
                if (var$5 >= 0 && var$5 <= (var$8 - 0 | 0)) {
                    $path.$nativeString = $rt_charArrayToString(var$10.data, 0, var$5);
                    $rt_putStdout($rt_ustr($path));
                    $rt_putStdout("\n");
                    break a;
                }
                $path = new jl_IndexOutOfBoundsException;
                $path.$suppressionEnabled = 1;
                $path.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($path);
                $rt_throw($path);
            }
            $path = new jl_IndexOutOfBoundsException;
            $path.$suppressionEnabled = 1;
            $path.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($path);
            $rt_throw($path);
        }
    }
    return $fileData;
},
cgxgbtf_MemoryFileStorage_putFileInternal = ($this, $path, $bytes, $callMethod) => {
    let $fileData, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    a: {
        if ($this.$debug) {
            $fileData = new jl_StringBuilder;
            $fileData.$buffer = $rt_createCharArray(16);
            var$5 = $fileData.$length0;
            var$6 = $fileData;
            jl_AbstractStringBuilder_insertSpace(var$6, var$5, var$5 + 1 | 0);
            var$6.$buffer.data[var$5] = 34;
            var$5 = $fileData.$length0;
            var$7 = $path === null ? $rt_s(1) : $path;
            jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
            var$5 = $fileData.$length0;
            jl_AbstractStringBuilder_insertSpace(var$6, var$5, var$5 + 1 | 0);
            var$6.$buffer.data[var$5] = 34;
            var$8 = new jl_String;
            var$9 = $fileData.$buffer;
            var$10 = var$9.data;
            var$11 = $fileData.$length0;
            var$5 = var$10.length;
            if (var$11 >= 0 && var$11 <= (var$5 - 0 | 0)) {
                var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$11);
                if (jl_System_outCache === null) {
                    $fileData = new otcic_JSStdoutPrintStream;
                    var$7 = null;
                    var$12 = null;
                    $fileData.$out = var$7;
                    var$7 = new jl_StringBuilder;
                    var$7.$buffer = $rt_createCharArray(16);
                    $fileData.$sb = var$7;
                    $fileData.$buffer1 = $rt_createCharArray(32);
                    $fileData.$autoFlush = 0;
                    $fileData.$charset = var$12;
                    jl_System_outCache = $fileData;
                }
                var$7 = $this.constructor;
                if (var$7 === null)
                    $fileData = null;
                else {
                    $fileData = var$7.classObject;
                    if ($fileData === null) {
                        $fileData = new jl_Class;
                        $fileData.$platformClass = var$7;
                        var$7.classObject = $fileData;
                    }
                }
                var$10 = $bytes.data;
                var$7 = jl_Class_getSimpleName($fileData);
                var$13 = var$10.length;
                var$12 = new jl_StringBuilder;
                var$12.$buffer = $rt_createCharArray(16);
                var$11 = var$12.$length0;
                $fileData = var$12;
                var$7 = var$7 === null ? $rt_s(1) : var$7;
                $fileData = $fileData;
                jl_AbstractStringBuilder_insert($fileData, var$11, var$7);
                jl_AbstractStringBuilder_insert($fileData, var$12.$length0, $rt_s(176));
                jl_AbstractStringBuilder_insert($fileData, var$12.$length0, var$8);
                jl_AbstractStringBuilder_insert($fileData, var$12.$length0, $rt_s(177));
                jl_AbstractStringBuilder_insert0(var$12, var$12.$length0, var$13, 10);
                $fileData = new jl_String;
                var$10 = var$12.$buffer;
                var$9 = var$10.data;
                var$5 = var$12.$length0;
                var$13 = var$9.length;
                if (var$5 >= 0 && var$5 <= (var$13 - 0 | 0)) {
                    $fileData.$nativeString = $rt_charArrayToString(var$10.data, 0, var$5);
                    $rt_putStdout($rt_ustr($fileData));
                    $rt_putStdout("\n");
                    break a;
                }
                $path = new jl_IndexOutOfBoundsException;
                $path.$suppressionEnabled = 1;
                $path.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($path);
                $rt_throw($path);
            }
            $path = new jl_IndexOutOfBoundsException;
            $path.$suppressionEnabled = 1;
            $path.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($path);
            $rt_throw($path);
        }
    }
    if (!($path.$nativeString.length ? 0 : 1)) {
        if ($path === $rt_s(168))
            var$11 = 1;
        else if (!($rt_s(168) instanceof jl_String))
            var$11 = 0;
        else {
            $fileData = $rt_s(168);
            var$11 = $path.$nativeString !== $fileData.$nativeString ? 0 : 1;
        }
        if (!var$11) {
            if ($path === $rt_s(113))
                var$11 = 1;
            else if (!($rt_s(113) instanceof jl_String))
                var$11 = 0;
            else {
                $fileData = $rt_s(113);
                var$11 = $path.$nativeString !== $fileData.$nativeString ? 0 : 1;
            }
            if (!var$11) {
                if ($path === $rt_s(169))
                    var$11 = 1;
                else if (!($rt_s(169) instanceof jl_String))
                    var$11 = 0;
                else {
                    $fileData = $rt_s(169);
                    var$11 = $path.$nativeString !== $fileData.$nativeString ? 0 : 1;
                }
                if (!var$11) {
                    $fileData = new cgxgbtf_FileData;
                    $fileData.$path0 = $bytes === null ? $path : !jl_String_endsWith($path, $rt_s(113)) ? $path : jl_String_substring($path, 0, $path.$nativeString.length - 1 | 0);
                    $fileData.$bytes = $bytes;
                    $fileData.$type3 = 2;
                    cbgu_OrderedMap_put($this.$fileMap, $path, $fileData);
                    if ($callMethod)
                        $this.$putFile($path, $fileData);
                    return;
                }
            }
        }
    }
    $fileData = new cbgu_GdxRuntimeException;
    $fileData.$suppressionEnabled = 1;
    $fileData.$writableStackTrace = 1;
    $fileData.$message = $rt_s(178);
    $rt_throw($fileData);
},
cgxgbtf_MemoryFileStorage_putFolderInternal = ($this, $path, $callMethod) => {
    let var$3, var$4, var$5, $fileData, var$7, var$8, var$9, var$10, var$11, var$12;
    a: {
        if ($this.$debug) {
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length0;
            var$5 = var$3;
            jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
            var$5.$buffer.data[var$4] = 34;
            var$4 = var$3.$length0;
            $fileData = $path === null ? $rt_s(1) : $path;
            jl_AbstractStringBuilder_insert(var$5, var$4, $fileData);
            var$4 = var$3.$length0;
            jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
            var$5.$buffer.data[var$4] = 34;
            var$7 = new jl_String;
            var$8 = var$3.$buffer;
            var$9 = var$8.data;
            var$10 = var$3.$length0;
            var$11 = var$9.length;
            if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
                var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
                if (jl_System_outCache === null) {
                    $fileData = new otcic_JSStdoutPrintStream;
                    var$12 = null;
                    var$5 = null;
                    $fileData.$out = var$12;
                    var$12 = new jl_StringBuilder;
                    var$12.$buffer = $rt_createCharArray(16);
                    $fileData.$sb = var$12;
                    $fileData.$buffer1 = $rt_createCharArray(32);
                    $fileData.$autoFlush = 0;
                    $fileData.$charset = var$5;
                    jl_System_outCache = $fileData;
                }
                var$12 = $this.constructor;
                if (var$12 === null)
                    $fileData = null;
                else {
                    $fileData = var$12.classObject;
                    if ($fileData === null) {
                        $fileData = new jl_Class;
                        $fileData.$platformClass = var$12;
                        var$12.classObject = $fileData;
                    }
                }
                var$12 = jl_Class_getSimpleName($fileData);
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                var$4 = var$5.$length0;
                $fileData = var$5;
                var$12 = var$12 === null ? $rt_s(1) : var$12;
                $fileData = $fileData;
                jl_AbstractStringBuilder_insert($fileData, var$4, var$12);
                jl_AbstractStringBuilder_insert($fileData, var$5.$length0, $rt_s(179));
                jl_AbstractStringBuilder_insert($fileData, var$5.$length0, var$7);
                $fileData = new jl_String;
                var$8 = var$5.$buffer;
                var$9 = var$8.data;
                var$10 = var$5.$length0;
                var$11 = var$9.length;
                if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
                    $fileData.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
                    $rt_putStdout($rt_ustr($fileData));
                    $rt_putStdout("\n");
                    break a;
                }
                $path = new jl_IndexOutOfBoundsException;
                $path.$suppressionEnabled = 1;
                $path.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($path);
                $rt_throw($path);
            }
            $path = new jl_IndexOutOfBoundsException;
            $path.$suppressionEnabled = 1;
            $path.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($path);
            $rt_throw($path);
        }
    }
    if (!($path.$nativeString.length ? 0 : 1)) {
        if ($path === $rt_s(168))
            var$4 = 1;
        else if (!($rt_s(168) instanceof jl_String))
            var$4 = 0;
        else {
            $fileData = $rt_s(168);
            var$4 = $path.$nativeString !== $fileData.$nativeString ? 0 : 1;
        }
        if (!var$4) {
            if ($path === $rt_s(113))
                var$4 = 1;
            else if (!($rt_s(113) instanceof jl_String))
                var$4 = 0;
            else {
                var$12 = $rt_s(113);
                var$4 = $path.$nativeString !== var$12.$nativeString ? 0 : 1;
            }
            if (!var$4) {
                if ($path === $rt_s(169))
                    var$4 = 1;
                else if (!($rt_s(169) instanceof jl_String))
                    var$4 = 0;
                else {
                    $fileData = $rt_s(169);
                    var$4 = $path.$nativeString !== $fileData.$nativeString ? 0 : 1;
                }
                if (!var$4) {
                    $fileData = new cgxgbtf_FileData;
                    var$12 = null;
                    $fileData.$path0 = $path;
                    $fileData.$bytes = var$12;
                    $fileData.$type3 = 1;
                    var$12 = $this.$fileMap;
                    var$5 = new cgxgbtf_FileData;
                    var$3 = null;
                    var$5.$path0 = $path;
                    var$5.$bytes = var$3;
                    var$5.$type3 = 1;
                    cbgu_OrderedMap_put(var$12, $path, var$5);
                    if ($callMethod)
                        $this.$putFile($path, $fileData);
                    return;
                }
            }
        }
    }
    $fileData = new cbgu_GdxRuntimeException;
    $fileData.$suppressionEnabled = 1;
    $fileData.$writableStackTrace = 1;
    $fileData.$message = $rt_s(178);
    $rt_throw($fileData);
},
cgxgbtf_MemoryFileStorage_removeInternal = ($this, $path, $callMethod) => {
    let var$3, $fileData, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $type, var$13, var$14;
    a: {
        var$3 = $this.$fileMap;
        cbgu_Array_removeValue(var$3.$keys, $path, 0);
        $fileData = cbgu_ObjectMap_remove(var$3, $path);
        if ($this.$debug) {
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$5 = var$3.$length0;
            var$6 = var$3;
            jl_AbstractStringBuilder_insertSpace(var$6, var$5, var$5 + 1 | 0);
            var$6.$buffer.data[var$5] = 34;
            var$5 = var$3.$length0;
            var$7 = $path === null ? $rt_s(1) : $path;
            jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
            var$5 = var$3.$length0;
            jl_AbstractStringBuilder_insertSpace(var$6, var$5, var$5 + 1 | 0);
            var$6.$buffer.data[var$5] = 34;
            var$8 = new jl_String;
            var$9 = var$3.$buffer;
            var$10 = var$9.data;
            var$5 = var$3.$length0;
            var$11 = var$10.length;
            if (var$5 >= 0 && var$5 <= (var$11 - 0 | 0)) {
                var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$5);
                $type = $fileData !== null && ($fileData.$type3 != 1 ? 0 : 1) ? $rt_s(180) : $rt_s(181);
                if (jl_System_outCache === null) {
                    var$3 = new otcic_JSStdoutPrintStream;
                    var$7 = null;
                    var$13 = null;
                    var$3.$out = var$7;
                    var$7 = new jl_StringBuilder;
                    var$7.$buffer = $rt_createCharArray(16);
                    var$3.$sb = var$7;
                    var$3.$buffer1 = $rt_createCharArray(32);
                    var$3.$autoFlush = 0;
                    var$3.$charset = var$13;
                    jl_System_outCache = var$3;
                }
                var$7 = $this.constructor;
                if (var$7 === null)
                    var$3 = null;
                else {
                    var$3 = var$7.classObject;
                    if (var$3 === null) {
                        var$3 = new jl_Class;
                        var$3.$platformClass = var$7;
                        var$7.classObject = var$3;
                    }
                }
                var$7 = jl_Class_getSimpleName(var$3);
                var$5 = $fileData === null ? 0 : 1;
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                var$14 = var$6.$length0;
                var$3 = var$6;
                var$7 = var$7 === null ? $rt_s(1) : var$7;
                var$13 = var$3;
                jl_AbstractStringBuilder_insert(var$13, var$14, var$7);
                jl_AbstractStringBuilder_insert(var$13, var$6.$length0, $type);
                jl_AbstractStringBuilder_insert(var$13, var$6.$length0, !var$5 ? $rt_s(172) : $rt_s(173));
                jl_AbstractStringBuilder_insert(var$13, var$6.$length0, $rt_s(175));
                jl_AbstractStringBuilder_insert(var$13, var$6.$length0, var$8);
                var$3 = new jl_String;
                var$9 = var$6.$buffer;
                var$10 = var$9.data;
                var$11 = var$6.$length0;
                var$14 = var$10.length;
                if (var$11 >= 0 && var$11 <= (var$14 - 0 | 0)) {
                    var$3.$nativeString = $rt_charArrayToString(var$9.data, 0, var$11);
                    $rt_putStdout($rt_ustr(var$3));
                    $rt_putStdout("\n");
                    break a;
                }
                $path = new jl_IndexOutOfBoundsException;
                $path.$suppressionEnabled = 1;
                $path.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($path);
                $rt_throw($path);
            }
            $path = new jl_IndexOutOfBoundsException;
            $path.$suppressionEnabled = 1;
            $path.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($path);
            $rt_throw($path);
        }
    }
    if ($fileData !== null && $callMethod)
        $this.$removeFile($path);
    return $fileData;
},
cgxgbtf_MemoryFileStorage_containsKeyInternal = ($this, $path) => {
    let $fileData, $flag, $type, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $fileData = $this.$fileMap;
    $flag = cbgu_ObjectMap_locateKey($fileData, $path);
    $fileData = $flag < 0 ? null : $fileData.$valueTable.data[$flag];
    $flag = $fileData === null ? 0 : 1;
    if ($this.$debug) {
        $type = $fileData !== null && ($fileData.$type3 != 1 ? 0 : 1) ? $rt_s(182) : $rt_s(183);
        if (jl_System_outCache === null) {
            $fileData = new otcic_JSStdoutPrintStream;
            var$5 = null;
            var$6 = null;
            $fileData.$out = var$5;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            $fileData.$sb = var$5;
            $fileData.$buffer1 = $rt_createCharArray(32);
            $fileData.$autoFlush = 0;
            $fileData.$charset = var$6;
            jl_System_outCache = $fileData;
        }
        var$5 = $this.constructor;
        if (var$5 === null)
            $fileData = null;
        else {
            $fileData = var$5.classObject;
            if ($fileData === null) {
                $fileData = new jl_Class;
                $fileData.$platformClass = var$5;
                var$5.classObject = $fileData;
            }
        }
        $fileData = jl_Class_getSimpleName($fileData);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        var$7 = var$5.$length0;
        var$6 = var$5;
        $fileData = $fileData === null ? $rt_s(1) : $fileData;
        var$6 = var$6;
        jl_AbstractStringBuilder_insert(var$6, var$7, $fileData);
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $type);
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, !$flag ? $rt_s(172) : $rt_s(173));
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(175));
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $path === null ? $rt_s(1) : $path);
        $path = new jl_String;
        var$8 = var$5.$buffer;
        var$9 = var$8.data;
        var$10 = var$5.$length0;
        var$11 = var$9.length;
        if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
            $path.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
            $rt_putStdout($rt_ustr($path));
            $rt_putStdout("\n");
        } else {
            $path = new jl_IndexOutOfBoundsException;
            $path.$suppressionEnabled = 1;
            $path.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($path);
            $rt_throw($path);
        }
    }
    return $flag;
},
cgxgbtf_MemoryFileStorage_fixPath = ($this, $path) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    var$2 = jl_String_trim($path);
    if (var$2 === $rt_s(169) ? 1 : jl_String_startsWith0(var$2, $rt_s(169), 0))
        var$2 = jl_String_replace(var$2, $rt_s(169), $rt_s(40));
    if (var$2 === $rt_s(168) ? 1 : jl_String_startsWith0(var$2, $rt_s(168), 0)) {
        var$3 = jur_Matcher__init_(jur_Pattern_compile($rt_s(168), 0), var$2);
        var$3.$leftBound0 = 0;
        var$4 = var$3.$string0.$nativeString.length;
        var$3.$rightBound0 = var$4;
        var$2 = var$3.$matchResult;
        var$5 = var$3.$string0;
        var$6 = var$3.$leftBound0;
        var$2.$valid = 0;
        var$2.$mode0 = 2;
        var$7 = var$2.$groupBounds.data;
        var$8 = 0;
        var$9 = var$7.length;
        if (var$8 > var$9) {
            $path = new jl_IllegalArgumentException;
            jl_Exception__init_0($path);
            $rt_throw($path);
        }
        while (var$8 < var$9) {
            var$10 = var$8 + 1 | 0;
            var$7[var$8] = (-1);
            var$8 = var$10;
        }
        var$7 = var$2.$consumers.data;
        var$8 = 0;
        var$9 = var$7.length;
        if (var$8 > var$9) {
            $path = new jl_IllegalArgumentException;
            jl_Exception__init_0($path);
            $rt_throw($path);
        }
        while (var$8 < var$9) {
            var$10 = var$8 + 1 | 0;
            var$7[var$8] = (-1);
            var$8 = var$10;
        }
        if (var$5 !== null)
            var$2.$string2 = var$5;
        if (var$6 >= 0) {
            var$2.$leftBound = var$6;
            var$2.$rightBound = var$4;
        }
        var$2.$startIndex = var$2.$leftBound;
        var$3.$appendPos = 0;
        var$3.$replacement0 = null;
        var$2.$previousMatch = (-1);
        if (!jur_Matcher_find(var$3))
            var$2 = var$3.$string0;
        else {
            var$5 = new jl_StringBuffer;
            var$5.$buffer = $rt_createCharArray(16);
            var$3.$processedRepl = jur_Matcher_processReplacement(var$3, $rt_s(40));
            $path = var$3.$string0;
            var$6 = var$3.$appendPos;
            var$2 = var$3.$matchResult;
            if (!var$2.$valid) {
                $path = new jl_IllegalStateException;
                jl_RuntimeException__init_($path);
                $rt_throw($path);
            }
            if (0 >= var$2.$groupCount) {
                $path = new jl_IndexOutOfBoundsException;
                jl_RuntimeException__init_0($path, jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder__init_(), 0)));
                $rt_throw($path);
            }
            var$11 = var$2.$groupBounds.data[0];
            var$12 = jl_String_substring($path, var$6, var$11);
            var$8 = var$12.$nativeString.length;
            var$2 = var$5;
            var$11 = var$2.$length0;
            var$13 = var$2;
            jl_StringBuffer_insert(var$13, var$11, var$12, 0, var$8);
            $path = var$3.$processedRepl;
            jl_AbstractStringBuilder_insert(var$2, var$5.$length0, $path);
            $path = var$3.$matchResult;
            if (!$path.$valid) {
                $path = new jl_IllegalStateException;
                jl_RuntimeException__init_($path);
                $rt_throw($path);
            }
            if (0 >= $path.$groupCount) {
                $path = new jl_IndexOutOfBoundsException;
                jl_RuntimeException__init_0($path, jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder__init_(), 0)));
                $rt_throw($path);
            }
            var$6 = $path.$groupBounds.data[1];
            var$3.$appendPos = var$6;
            $path = var$3.$string0;
            var$3 = jl_String_substring($path, var$6, $path.$nativeString.length);
            var$11 = var$3.$nativeString.length;
            jl_StringBuffer_insert(var$13, var$2.$length0, var$3, 0, var$11);
            var$2 = new jl_String;
            var$7 = var$5.$buffer;
            var$14 = var$7.data;
            var$11 = var$5.$length0;
            var$8 = var$14.length;
            if (var$11 >= 0 && var$11 <= (var$8 - 0 | 0))
                var$2.$nativeString = $rt_charArrayToString(var$7.data, 0, var$11);
            else {
                $path = new jl_IndexOutOfBoundsException;
                jl_Exception__init_0($path);
                $rt_throw($path);
            }
        }
    }
    if (!(var$2 === $rt_s(113) ? 1 : jl_String_startsWith0(var$2, $rt_s(113), 0))) {
        $path = new jl_StringBuilder;
        $path.$buffer = $rt_createCharArray(16);
        var$11 = $path.$length0;
        var$5 = $path;
        jl_AbstractStringBuilder_insertSpace(var$5, var$11, var$11 + 1 | 0);
        var$5.$buffer.data[var$11] = 47;
        var$6 = $path.$length0;
        var$2 = var$2 === null ? $rt_s(1) : var$2;
        jl_AbstractStringBuilder_insert(var$5, var$6, var$2);
        var$2 = new jl_String;
        var$7 = $path.$buffer;
        var$14 = var$7.data;
        var$11 = $path.$length0;
        var$8 = var$14.length;
        if (var$11 >= 0 && var$11 <= (var$8 - 0 | 0))
            var$2.$nativeString = $rt_charArrayToString(var$7.data, 0, var$11);
        else {
            $path = new jl_IndexOutOfBoundsException;
            $path.$suppressionEnabled = 1;
            $path.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($path);
            $rt_throw($path);
        }
    }
    a: {
        if (!jl_String_endsWith(var$2, $rt_s(113))) {
            $path = new jl_StringBuilder;
            $path.$buffer = $rt_createCharArray(16);
            var$6 = $path.$length0;
            var$5 = $path;
            var$3 = var$2;
            jl_AbstractStringBuilder_insert(var$5, var$6, var$3);
            var$11 = $path.$length0;
            jl_AbstractStringBuilder_insertSpace(var$5, var$11, var$11 + 1 | 0);
            var$5.$buffer.data[var$11] = 47;
            var$2 = new jl_String;
            var$7 = $path.$buffer;
            var$14 = var$7.data;
            var$11 = $path.$length0;
            var$8 = var$14.length;
            if (var$11 < 0)
                break a;
            if (var$11 > (var$8 - 0 | 0))
                break a;
            var$2.$nativeString = $rt_charArrayToString(var$7.data, 0, var$11);
        }
        return var$2;
    }
    $path = new jl_IndexOutOfBoundsException;
    $path.$suppressionEnabled = 1;
    $path.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($path);
    $rt_throw($path);
},
cgxgbtft_InternalStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage),
cgxgbtft_ClasspathStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage);
function cgxgbtft_LocalDBStorage() {
    cgxgbtf_MemoryFileStorage.call(this);
    this.$dataBase = null;
}
let cgxgbtft_LocalDBStorage_setupIndexedDB = ($this, $teaApplication) => {
    let $config, var$3, $databaseName, $request, var$6;
    if ($teaApplication === null)
        return;
    $config = $teaApplication.$config;
    $teaApplication.$delayInitCount = $teaApplication.$delayInitCount + 1 | 0;
    var$3 = indexedDB || mozIndexedDB || webkitIndexedDB || msIndexedDB;
    if (typeof var$3 === 'undefined' ? 1 : 0) {
        $databaseName = new jl_IllegalStateException;
        $databaseName.$suppressionEnabled = 1;
        $databaseName.$writableStackTrace = 1;
        $databaseName.$message = $rt_s(184);
        $rt_throw($databaseName);
    }
    $databaseName = $config.$localStoragePrefix;
    $request = var$3.open($rt_ustr($databaseName), 1);
    $config = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0;
    $config.$_02 = $request;
    $config = !($config instanceof otji_JSWrapper) ? $config : $config.$js;
    $request.onupgradeneeded = otji_JS_function($config, "handleEvent");
    $config = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1;
    $config.$_014 = $this;
    $config.$_14 = $request;
    $config.$_22 = $teaApplication;
    var$6 = !($config instanceof otji_JSWrapper) ? $config : $config.$js;
    $request.onsuccess = otji_JS_function(var$6, "handleEvent");
    $config = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2;
    $config.$_011 = $databaseName;
    $config.$_13 = $teaApplication;
    $teaApplication = otji_JS_function(!($config instanceof otji_JSWrapper) ? $config : $config.$js, "handleEvent");
    $request.onerror = $teaApplication;
},
cgxgbtft_LocalDBStorage_putFile = ($this, $key, $fileData) => {
    let $type, $objectStore, $dbFileData, $transaction, var$7, var$8, var$9, var$10, var$11, $request;
    if ($this.$debug) {
        $type = $fileData !== null && ($fileData.$type3 != 1 ? 0 : 1) ? $rt_s(185) : $rt_s(186);
        if (jl_System_outCache === null) {
            $objectStore = new otcic_JSStdoutPrintStream;
            $dbFileData = null;
            $transaction = null;
            $objectStore.$out = $dbFileData;
            $dbFileData = new jl_StringBuilder;
            $dbFileData.$buffer = $rt_createCharArray(16);
            $objectStore.$sb = $dbFileData;
            $objectStore.$buffer1 = $rt_createCharArray(32);
            $objectStore.$autoFlush = 0;
            $objectStore.$charset = $transaction;
            jl_System_outCache = $objectStore;
        }
        $objectStore = new jl_StringBuilder;
        $objectStore.$buffer = $rt_createCharArray(16);
        var$7 = $objectStore.$length0;
        $dbFileData = $objectStore;
        $type = $type;
        $dbFileData = $dbFileData;
        jl_AbstractStringBuilder_insert($dbFileData, var$7, $type);
        jl_AbstractStringBuilder_insert($dbFileData, $objectStore.$length0, $key === null ? $rt_s(1) : $key);
        $type = new jl_String;
        var$8 = $objectStore.$buffer;
        var$9 = var$8.data;
        var$10 = $objectStore.$length0;
        var$11 = var$9.length;
        if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
            $type.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
            $rt_putStdout($rt_ustr($type));
            $rt_putStdout("\n");
        } else {
            $key = new jl_IndexOutOfBoundsException;
            $key.$suppressionEnabled = 1;
            $key.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($key);
            $rt_throw($key);
        }
    }
    $objectStore = $this.$dataBase.transaction("FILE_DATA", "readwrite").objectStore("FILE_DATA");
    $dbFileData = cgxgbtfi_IndexedDBFileData_create$js_body$_5($fileData.$type3, new Date());
    if (!($fileData.$type3 != 1 ? 0 : 1))
        $dbFileData.contents = otji_JS_wrap($fileData.$bytes);
    $request = $objectStore.put($dbFileData, $rt_ustr($key));
    $fileData = new cgxgbtft_LocalDBStorage$putFile$lambda$_2_0;
    $fileData.$_01 = $key;
    $key = otji_JS_function(!($fileData instanceof otji_JSWrapper) ? $fileData : $fileData.$js, "handleEvent");
    $request.onerror = $key;
},
cgxgbtft_LocalDBStorage_removeFile = ($this, $key) => {
    let $objectStore, $transaction, $request, var$5, var$6, var$7, var$8, var$9;
    if ($this.$debug) {
        if (jl_System_outCache === null) {
            $objectStore = new otcic_JSStdoutPrintStream;
            $transaction = null;
            $request = null;
            $objectStore.$out = $transaction;
            $transaction = new jl_StringBuilder;
            $transaction.$buffer = $rt_createCharArray(16);
            $objectStore.$sb = $transaction;
            $objectStore.$buffer1 = $rt_createCharArray(32);
            $objectStore.$autoFlush = 0;
            $objectStore.$charset = $request;
            jl_System_outCache = $objectStore;
        }
        $objectStore = new jl_StringBuilder;
        $objectStore.$buffer = $rt_createCharArray(16);
        var$5 = $objectStore.$length0;
        $request = $objectStore;
        $transaction = $rt_s(187);
        $request = $request;
        jl_AbstractStringBuilder_insert($request, var$5, $transaction);
        jl_AbstractStringBuilder_insert($request, $objectStore.$length0, $key === null ? $rt_s(1) : $key);
        $transaction = new jl_String;
        var$6 = $objectStore.$buffer;
        var$7 = var$6.data;
        var$8 = $objectStore.$length0;
        var$9 = var$7.length;
        if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
            $transaction.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
            $rt_putStdout($rt_ustr($transaction));
            $rt_putStdout("\n");
        } else {
            $key = new jl_IndexOutOfBoundsException;
            $key.$suppressionEnabled = 1;
            $key.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($key);
            $rt_throw($key);
        }
    }
    $request = $this.$dataBase.transaction("FILE_DATA", "readwrite").objectStore("FILE_DATA").delete($rt_ustr($key));
    $objectStore = new cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0;
    $objectStore.$_08 = $key;
    $key = otji_JS_function(!($objectStore instanceof otji_JSWrapper) ? $objectStore : $objectStore.$js, "handleEvent");
    $request.onerror = $key;
},
cgxgbtft_LocalDBStorage_readAllFilesAsync = ($this, $teaApplication) => {
    let $transaction, $cursorRequest, $objectStore, var$5;
    $transaction = $this.$dataBase.transaction("FILE_DATA", "readonly");
    $cursorRequest = $transaction.objectStore("FILE_DATA").openCursor();
    $objectStore = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0;
    $objectStore.$_05 = $this;
    $objectStore.$_10 = $cursorRequest;
    $objectStore = !($objectStore instanceof otji_JSWrapper) ? $objectStore : $objectStore.$js;
    $cursorRequest.onsuccess = otji_JS_function($objectStore, "handleEvent");
    $objectStore = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1;
    $objectStore.$_015 = $teaApplication;
    var$5 = !($objectStore instanceof otji_JSWrapper) ? $objectStore : $objectStore.$js;
    $transaction.oncomplete = otji_JS_function(var$5, "handleEvent");
    $objectStore = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2;
    $objectStore.$_00 = $teaApplication;
    $teaApplication = otji_JS_function(!($objectStore instanceof otji_JSWrapper) ? $objectStore : $objectStore.$js, "handleEvent");
    $cursorRequest.onerror = $teaApplication;
},
cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$5 = ($this, $cursorRequest) => {
    let $cursor, $key, $dbFileData, var$5, $bytes, var$7, var$8;
    $cursor = $cursorRequest.result;
    if ($cursor !== null) {
        $key = cgxgbtf_MemoryFileStorage_fixPath($this, $rt_str($cursor.key));
        $dbFileData = $cursor.value;
        if ($dbFileData.type == 1)
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $key, 0);
        else {
            $cursorRequest = new Int8Array($dbFileData.contents);
            var$5 = $cursorRequest.length;
            $bytes = $rt_createByteArray(var$5);
            var$7 = $bytes.data;
            var$8 = 0;
            while (var$8 < var$5) {
                var$7[var$8] = $cursorRequest[var$8];
                var$8 = var$8 + 1 | 0;
            }
            cgxgbtf_MemoryFileStorage_putFileInternal($this, $key, $bytes, 0);
        }
        $cursor.continue();
    }
},
cgxgbt_TeaPermissions$TeaPermissionResult = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard$ClipboardWriteHandler() {
    jl_Object.call(this);
    this.$this$03 = null;
}
let cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0 = var$1 => {
    var$1 = var$1.$this$03;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1 = var$1 => {
    var$1 = var$1.$this$03;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2 = var$1 => {
    var$1.$this$03.$hasWritePermissions = 0;
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_0() {
    jl_Object.call(this);
    this.$_04 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_04;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$3.setData("text/plain", $rt_ustr(var$1.$content));
    var$2.preventDefault();
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_1() {
    jl_Object.call(this);
    this.$_016 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_016;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$3.setData("text/plain", $rt_ustr(var$1.$content));
    var$2.preventDefault();
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_2() {
    jl_Object.call(this);
    this.$_09 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_09;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$1.$content = $rt_str(var$3.getData("text/plain"));
    var$2.preventDefault();
},
cgxgbta_AssetLoaderListener = $rt_classWithoutFields(0),
cgxgbta_AssetLoaderListener_onProgress = ($this, $total, $loaded) => {
    return;
},
cgxgbta_AssetLoaderListener_onFailure = ($this, $url) => {
    return;
},
cgxgbta_AssetLoaderListener_onSuccess = ($this, $url, $result) => {
    return;
};
function cgxgbt_TeaApplication$4() {
    jl_Object.call(this);
    this.$this$046 = null;
}
function cgxgbt_TeaApplication$5() {
    jl_Object.call(this);
    this.$this$029 = null;
}
let cbg_LifecycleListener = $rt_classWithoutFields(0),
cgxgbtwh_HowlerAudioManager = $rt_classWithoutFields(),
ju_Dictionary = $rt_classWithoutFields();
function ju_Hashtable() {
    let a = this; ju_Dictionary.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$loadFactor3 = 0.0;
    a.$threshold3 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount2 = 0;
}
let ju_Hashtable_EMPTY_ENUMERATION = null,
ju_Hashtable_EMPTY_ITERATOR = null,
ju_Hashtable__init_ = ($this, $capacity) => {
    let var$2, var$3, var$4;
    $this.$lastSlot = (-1);
    if ($capacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    $this.$elementCount0 = 0;
    if (!$capacity)
        $capacity = 1;
    var$3 = $rt_createArray(ju_Hashtable$Entry, $capacity);
    var$4 = var$3.data;
    $this.$elementData0 = var$3;
    $capacity = var$4.length;
    $this.$firstSlot = $capacity;
    $this.$loadFactor3 = 0.75;
    $this.$threshold3 = $capacity * 0.75 | 0;
},
ju_Hashtable__init_0 = var_0 => {
    let var_1 = new ju_Hashtable();
    ju_Hashtable__init_(var_1, var_0);
    return var_1;
},
ju_Hashtable_put = ($this, $key, $value) => {
    let $result, $hash, var$5, var$6, $index, $entry, var$9;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            a: {
                $result = $key;
                if (!$result.$hashCode0) {
                    $hash = 0;
                    while (true) {
                        if ($hash >= $result.$nativeString.length)
                            break a;
                        $result.$hashCode0 = (31 * $result.$hashCode0 | 0) + $result.$nativeString.charCodeAt($hash) | 0;
                        $hash = $hash + 1 | 0;
                    }
                }
            }
            var$5 = $result.$hashCode0 & 2147483647;
            var$6 = $this.$elementData0.data;
            $index = var$5 % var$6.length | 0;
            $entry = var$6[$index];
            while ($entry !== null) {
                b: {
                    var$9 = $entry.$hashcode;
                    if (!$result.$hashCode0) {
                        $hash = 0;
                        while (true) {
                            if ($hash >= $result.$nativeString.length)
                                break b;
                            $result.$hashCode0 = (31 * $result.$hashCode0 | 0) + $result.$nativeString.charCodeAt($hash) | 0;
                            $hash = $hash + 1 | 0;
                        }
                    }
                }
                if (var$9 == $result.$hashCode0 && $entry.$key.$equals($key) ? 1 : 0)
                    break;
                $entry = $entry.$next2;
            }
            if ($entry !== null) {
                $result = $entry.$value0;
                $entry.$value0 = $value;
                return $result;
            }
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            $hash = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = $hash;
            if ($hash > $this.$threshold3) {
                ju_Hashtable_rehash($this);
                $index = var$5 % $this.$elementData0.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            c: {
                $entry = new ju_Hashtable$Entry;
                $entry.$key = $key;
                $entry.$value0 = $value;
                if (!$result.$hashCode0) {
                    $hash = 0;
                    while (true) {
                        if ($hash >= $result.$nativeString.length)
                            break c;
                        $result.$hashCode0 = (31 * $result.$hashCode0 | 0) + $result.$nativeString.charCodeAt($hash) | 0;
                        $hash = $hash + 1 | 0;
                    }
                }
            }
            $entry.$hashcode = $result.$hashCode0;
            var$6 = $this.$elementData0.data;
            $entry.$next2 = var$6[$index];
            var$6[$index] = $entry;
            return null;
        }
        $key = new jl_NullPointerException;
        $key.$suppressionEnabled = 1;
        $key.$writableStackTrace = 1;
        $rt_throw($key);
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
ju_Hashtable_rehash = $this => {
    let $length, $newLast, $newData, var$4, $i, var$6, $entry, $index, $entry_0;
    $length = ($this.$elementData0.data.length << 1) + 1 | 0;
    if (!$length)
        $length = 1;
    $newLast = (-1);
    $newData = $rt_createArray(ju_Hashtable$Entry, $length);
    var$4 = $newData.data;
    $i = $this.$lastSlot + 1 | 0;
    var$6 = $length;
    while (true) {
        $i = $i + (-1) | 0;
        if ($i < $this.$firstSlot)
            break;
        $entry = $this.$elementData0.data[$i];
        while ($entry !== null) {
            $index = ($entry.$key.$hashCode() & 2147483647) % $length | 0;
            if ($index < var$6)
                var$6 = $index;
            if ($index > $newLast)
                $newLast = $index;
            $entry_0 = $entry.$next2;
            $entry.$next2 = var$4[$index];
            var$4[$index] = $entry;
            $entry = $entry_0;
        }
    }
    $this.$firstSlot = var$6;
    $this.$lastSlot = $newLast;
    $this.$elementData0 = $newData;
    $this.$threshold3 = var$4.length * $this.$loadFactor3 | 0;
},
ju_Hashtable__clinit_ = () => {
    ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
    ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
};
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults = null;
}
let cgxgbt_TeaGL20$CustomIntMap = $rt_classWithoutFields(),
cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1 = () => {
    return [undefined];
},
cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2 = (var$1, var$2) => {
    if (var$1[var$2] === undefined) return null;
    return var$1[var$2];
},
cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4 = (var$1, var$2) => {
    var$1.push(var$2);
    return var$1.length - 1;
},
cbggg_GLVersion$Type = $rt_classWithoutFields(jl_Enum),
cbggg_GLVersion$Type_OpenGL = null,
cbggg_GLVersion$Type_GLES = null,
cbggg_GLVersion$Type_WebGL = null,
cbggg_GLVersion$Type_NONE = null,
cbggg_GLVersion$Type_$VALUES = null,
cbggg_GLVersion$Type__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = new cbggg_GLVersion$Type;
    var$1.$name0 = $rt_s(188);
    var$1.$ordinal0 = 0;
    cbggg_GLVersion$Type_OpenGL = var$1;
    var$2 = new cbggg_GLVersion$Type;
    var$2.$name0 = $rt_s(189);
    var$2.$ordinal0 = 1;
    cbggg_GLVersion$Type_GLES = var$2;
    var$3 = new cbggg_GLVersion$Type;
    var$3.$name0 = $rt_s(165);
    var$3.$ordinal0 = 2;
    cbggg_GLVersion$Type_WebGL = var$3;
    var$4 = new cbggg_GLVersion$Type;
    var$4.$name0 = $rt_s(190);
    var$4.$ordinal0 = 3;
    cbggg_GLVersion$Type_NONE = var$4;
    cbggg_GLVersion$Type_$VALUES = $rt_wrapArray(cbggg_GLVersion$Type, [var$1, var$2, var$3, var$4]);
};
function cgxgbta_AssetLoadImpl$1() {
    jl_Object.call(this);
    this.$this$050 = null;
}
let cgxgbta_AssetLoadImpl$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1;
    var$2.preventDefault();
};
function cgxgbta_AssetLoadImpl$2() {
    jl_Object.call(this);
    this.$this$039 = null;
}
let cgxgbta_AssetLoadImpl$2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1;
    var$2.preventDefault();
};
function cgxgbta_AssetLoadImpl$3() {
    let a = this; jl_Object.call(a);
    a.$val$config0 = null;
    a.$this$010 = null;
}
let cgxgbta_AssetLoadImpl$3_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1;
    var$2.preventDefault();
    var$3 = var$2.dataTransfer.files;
    cgxgbta_AssetLoadImpl_downloadDroppedFile(var$1.$this$010, var$1.$val$config0, var$3);
},
cbgur_ClassReflection = $rt_classWithoutFields(),
cbgur_ClassReflection_getConstructor = ($c, $parameterTypes) => {
    let $e, $constructor, $$je;
    if ($parameterTypes !== null && $parameterTypes.data.length) {
        a: {
            try {
                $e = cbgur_Constructor__init_(jl_Class_getConstructor($c, $parameterTypes));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_SecurityException) {
                    $e = $$je;
                    break a;
                } else if ($$je instanceof jl_NoSuchMethodException) {
                    $e = $$je;
                    $constructor = new cbgur_ReflectionException;
                    if ($c.$name === null)
                        $c.$name = $rt_str($c.$platformClass.$meta.name);
                    $c = $c.$name;
                    $constructor.$suppressionEnabled = 1;
                    $constructor.$writableStackTrace = 1;
                    $constructor.$message = $c;
                    $constructor.$cause = $e;
                    $rt_throw($constructor);
                } else {
                    throw $$e;
                }
            }
            return $e;
        }
        $constructor = new cbgur_ReflectionException;
        if ($c.$name === null)
            $c.$name = $rt_str($c.$platformClass.$meta.name);
        $c = $c.$name;
        $constructor.$suppressionEnabled = 1;
        $constructor.$writableStackTrace = 1;
        $constructor.$message = $c;
        $constructor.$cause = $e;
        $rt_throw($constructor);
    }
    $parameterTypes = (jl_Class_getConstructors($c)).data;
    if ($parameterTypes.length <= 0)
        $c = null;
    else {
        $c = new cbgur_Constructor;
        $c.$constructor0 = $parameterTypes[0];
    }
    return $c;
},
cbgur_ClassReflection_getDeclaredConstructor = ($c, $parameterTypes) => {
    let $e, $declaredConstructor, $$je;
    a: {
        try {
            $e = cbgur_Constructor__init_(jl_Class_getDeclaredConstructor($c, $parameterTypes));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_SecurityException) {
                $e = $$je;
                break a;
            } else if ($$je instanceof jl_NoSuchMethodException) {
                $e = $$je;
                $declaredConstructor = new cbgur_ReflectionException;
                if ($c.$name === null)
                    $c.$name = $rt_str($c.$platformClass.$meta.name);
                $c = $c.$name;
                $declaredConstructor.$suppressionEnabled = 1;
                $declaredConstructor.$writableStackTrace = 1;
                $declaredConstructor.$message = $c;
                $declaredConstructor.$cause = $e;
                $rt_throw($declaredConstructor);
            } else {
                throw $$e;
            }
        }
        return $e;
    }
    $declaredConstructor = new cbgur_ReflectionException;
    if ($c.$name === null)
        $c.$name = $rt_str($c.$platformClass.$meta.name);
    $c = $c.$name;
    $declaredConstructor.$suppressionEnabled = 1;
    $declaredConstructor.$writableStackTrace = 1;
    $declaredConstructor.$message = $c;
    $declaredConstructor.$cause = $e;
    $rt_throw($declaredConstructor);
};
function cbgur_Constructor() {
    jl_Object.call(this);
    this.$constructor0 = null;
}
let cbgur_Constructor__init_0 = ($this, $constructor) => {
    $this.$constructor0 = $constructor;
},
cbgur_Constructor__init_ = var_0 => {
    let var_1 = new cbgur_Constructor();
    cbgur_Constructor__init_0(var_1, var_0);
    return var_1;
},
cbgur_Constructor_setAccessible = ($this, $accessible) => {
    return;
},
cbgur_Constructor_newInstance = ($this, $args) => {
    let $e, var$3, var$4, var$5, $$je;
    if ($args === null)
        $args = $rt_createArray(jl_Object, 0);
    a: {
        b: {
            c: {
                try {
                    $e = jlr_Constructor_newInstance($this.$constructor0, $args);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_IllegalArgumentException) {
                        $e = $$je;
                        break c;
                    } else if ($$je instanceof jl_InstantiationException) {
                        $e = $$je;
                        break a;
                    } else if ($$je instanceof jl_IllegalAccessException) {
                        $e = $$je;
                        break b;
                    } else if ($$je instanceof jlr_InvocationTargetException) {
                        $e = $$je;
                        var$3 = new cbgur_ReflectionException;
                        var$4 = $this.$constructor0.$declaringClass;
                        if (var$4.$name === null)
                            var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
                        var$5 = var$4.$name;
                        var$3.$suppressionEnabled = 1;
                        var$3.$writableStackTrace = 1;
                        var$3.$message = var$5;
                        var$3.$cause = $e;
                        $rt_throw(var$3);
                    } else {
                        throw $$e;
                    }
                }
                return $e;
            }
            var$3 = new cbgur_ReflectionException;
            var$4 = $this.$constructor0.$declaringClass;
            if (var$4.$name === null)
                var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
            var$5 = var$4.$name;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = var$5;
            var$3.$cause = $e;
            $rt_throw(var$3);
        }
        var$3 = new cbgur_ReflectionException;
        var$4 = $this.$constructor0.$declaringClass;
        if (var$4.$name === null)
            var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
        var$5 = var$4.$name;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$5;
        var$3.$cause = $e;
        $rt_throw(var$3);
    }
    var$3 = new cbgur_ReflectionException;
    var$4 = $this.$constructor0.$declaringClass;
    if (var$4.$name === null)
        var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
    var$5 = var$4.$name;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    var$3.$message = var$5;
    var$3.$cause = $e;
    $rt_throw(var$3);
},
cbgur_ReflectionException = $rt_classWithoutFields(jl_Exception);
function jur_Pattern() {
    let a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags0 = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start9 = null;
}
let jur_Pattern_matcher = ($this, $input) => {
    return jur_Matcher__init_($this, $input);
},
jur_Pattern_split = ($this, $inputSeq, $limit) => {
    let $res, $mat, $index, $curPos, var$7, var$8, var$9, var$10;
    $res = new ju_ArrayList;
    $res.$array0 = $rt_createArray(jl_Object, 10);
    $mat = jur_Matcher__init_($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    $inputSeq = $inputSeq;
    if (!$inputSeq.$nativeString.length) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(40);
        return var$7;
    }
    a: {
        while (true) {
            if (!jur_Matcher_find($mat))
                break a;
            var$8 = $index + 1 | 0;
            if (var$8 >= $limit && $limit > 0)
                break a;
            var$9 = $mat.$matchResult;
            if (!var$9.$valid) {
                $inputSeq = new jl_IllegalStateException;
                $inputSeq.$suppressionEnabled = 1;
                $inputSeq.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($inputSeq);
                $rt_throw($inputSeq);
            }
            if (0 >= var$9.$groupCount) {
                $inputSeq = new jl_IndexOutOfBoundsException;
                $res = new jl_StringBuilder;
                jl_Object__init_($res);
                $res.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0($res, $res.$length0, 0, 10);
                $mat = new jl_String;
                var$7 = $res.$buffer;
                var$10 = var$7.data;
                $index = $res.$length0;
                $curPos = var$10.length;
                if ($index >= 0 && $index <= ($curPos - 0 | 0)) {
                    $mat.$nativeString = $rt_charArrayToString(var$7.data, 0, $index);
                    $inputSeq.$suppressionEnabled = 1;
                    $inputSeq.$writableStackTrace = 1;
                    $inputSeq.$message = $mat;
                    $rt_throw($inputSeq);
                }
                $inputSeq = new jl_IndexOutOfBoundsException;
                $inputSeq.$suppressionEnabled = 1;
                $inputSeq.$writableStackTrace = 1;
                $rt_throw($inputSeq);
            }
            var$9 = jl_String_substring($inputSeq, $curPos, var$9.$groupBounds.data[0]);
            ju_ArrayList_ensureCapacity($res, $res.$size1 + 1 | 0);
            var$7 = $res.$array0.data;
            $curPos = $res.$size1;
            $res.$size1 = $curPos + 1 | 0;
            var$7[$curPos] = var$9;
            $res.$modCount = $res.$modCount + 1 | 0;
            var$9 = $mat.$matchResult;
            if (!var$9.$valid)
                break;
            if (0 >= var$9.$groupCount) {
                $inputSeq = new jl_IndexOutOfBoundsException;
                $res = new jl_StringBuilder;
                jl_Object__init_($res);
                $res.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0($res, $res.$length0, 0, 10);
                $mat = new jl_String;
                var$7 = $res.$buffer;
                var$10 = var$7.data;
                $index = $res.$length0;
                $curPos = var$10.length;
                if ($index >= 0 && $index <= ($curPos - 0 | 0)) {
                    $mat.$nativeString = $rt_charArrayToString(var$7.data, 0, $index);
                    $inputSeq.$suppressionEnabled = 1;
                    $inputSeq.$writableStackTrace = 1;
                    $inputSeq.$message = $mat;
                    $rt_throw($inputSeq);
                }
                $inputSeq = new jl_IndexOutOfBoundsException;
                $inputSeq.$suppressionEnabled = 1;
                $inputSeq.$writableStackTrace = 1;
                $rt_throw($inputSeq);
            }
            $curPos = var$9.$groupBounds.data[1];
            $index = var$8;
        }
        $inputSeq = new jl_IllegalStateException;
        $inputSeq.$suppressionEnabled = 1;
        $inputSeq.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace($inputSeq);
        $rt_throw($inputSeq);
    }
    b: {
        $inputSeq = jl_String_substring($inputSeq, $curPos, $inputSeq.$nativeString.length);
        ju_ArrayList_ensureCapacity($res, $res.$size1 + 1 | 0);
        var$7 = $res.$array0.data;
        var$8 = $res.$size1;
        $res.$size1 = var$8 + 1 | 0;
        var$7[var$8] = $inputSeq;
        $res.$modCount = $res.$modCount + 1 | 0;
        $index = $index + 1 | 0;
        if (!$limit) {
            while (true) {
                $index = $index + (-1) | 0;
                if ($index < 0)
                    break b;
                if ($index < 0)
                    break;
                if ($index >= $res.$size1)
                    break;
                if ($res.$array0.data[$index].$nativeString.length)
                    break b;
                ju_ArrayList_remove($res, $index);
            }
            $inputSeq = new jl_IndexOutOfBoundsException;
            $inputSeq.$suppressionEnabled = 1;
            $inputSeq.$writableStackTrace = 1;
            $rt_throw($inputSeq);
        }
    }
    if ($index < 0)
        $index = 0;
    var$7 = $rt_createArray(jl_String, $index);
    return ju_AbstractCollection_toArray($res, var$7);
},
jur_Pattern_compile = ($pattern, $flags) => {
    let var$3;
    if ($pattern === null) {
        $pattern = new jl_NullPointerException;
        $pattern.$suppressionEnabled = 1;
        $pattern.$writableStackTrace = 1;
        $pattern.$message = $rt_s(191);
        $rt_throw($pattern);
    }
    if ($flags && ($flags | 255) != 255) {
        $pattern = new jl_IllegalArgumentException;
        $pattern.$suppressionEnabled = 1;
        $pattern.$writableStackTrace = 1;
        $pattern.$message = $rt_s(40);
        $rt_throw($pattern);
    }
    jur_AbstractSet_counter = 1;
    var$3 = new jur_Pattern;
    var$3.$backRefs = $rt_createArray(jur_FSet, 10);
    var$3.$globalGroupIndex = (-1);
    var$3.$compCount = (-1);
    var$3.$consCount = (-1);
    return jur_Pattern_compileImpl(var$3, $pattern, $flags);
},
jur_Pattern_compileImpl = ($this, $pattern, $flags) => {
    let var$3, var$4, var$5;
    $this.$lexemes = jur_Lexer__init_($pattern, $flags);
    $this.$flags0 = $flags;
    $pattern = jur_Pattern_processExpression($this, (-1), $flags, null);
    $this.$start9 = $pattern;
    var$3 = $this.$lexemes;
    if (!var$3.$ch && !var$3.$lookAhead && var$3.$index0 == var$3.$patternFullLength && !(var$3.$curST === null ? 0 : 1) ? 1 : 0) {
        if ($this.$needsBackRefReplacement)
            $pattern.$processSecondPass();
        return $this;
    }
    $pattern = new jur_PatternSyntaxException;
    var$4 = var$3.$orig;
    var$5 = var$3.$curToc;
    $pattern.$suppressionEnabled = 1;
    $pattern.$writableStackTrace = 1;
    $pattern.$index1 = (-1);
    $pattern.$desc = $rt_s(40);
    $pattern.$pattern = var$4;
    $pattern.$index1 = var$5;
    $rt_throw($pattern);
},
jur_Pattern_processAlternations = ($this, $last) => {
    let $auxRange, var$3, var$4, var$5, $rangeSet, var$7;
    $auxRange = new jur_CharClass;
    var$3 = $this.$flags0;
    var$4 = (var$3 & 2) != 2 ? 0 : 1;
    var$5 = (var$3 & 64) != 64 ? 0 : 1;
    $rangeSet = new ju_BitSet;
    $rangeSet.$data = $rt_createIntArray(64);
    $auxRange.$lowHighSurrogates = $rangeSet;
    $rangeSet = new ju_BitSet;
    $rangeSet.$data = $rt_createIntArray(2);
    $auxRange.$bits = $rangeSet;
    $auxRange.$ci = var$4;
    $auxRange.$uci = var$5;
    while (true) {
        var$7 = $this.$lexemes;
        var$3 = var$7.$ch;
        if (!var$3 && !var$7.$lookAhead && var$7.$index0 == var$7.$patternFullLength && !(var$7.$curST === null ? 0 : 1) ? 1 : 0)
            break;
        var$5 = !var$3 && !var$7.$lookAhead && var$7.$index0 == var$7.$patternFullLength && !(var$7.$curST === null ? 0 : 1) ? 1 : 0;
        if (!(!var$5 && !(var$7.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0))
            break;
        var$5 = var$7.$lookAhead;
        if (var$5 && var$5 != (-536870788) && var$5 != (-536870871))
            break;
        jur_Lexer_movePointer(var$7);
        jur_CharClass_add0($auxRange, var$7.$lookBack);
        $rangeSet = $this.$lexemes;
        if ($rangeSet.$ch != (-536870788))
            continue;
        jur_Lexer_movePointer($rangeSet);
    }
    $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
},
jur_Pattern_processExpression = ($this, $ch, $newFlags, $last) => {
    let $children, $saveFlags, $saveChangedFlags, $fSet, var$8, var$9, $child, var$11, var$12;
    $children = new ju_ArrayList;
    $children.$array0 = $rt_createArray(jl_Object, 10);
    $saveFlags = $this.$flags0;
    $saveChangedFlags = 0;
    if ($newFlags != $saveFlags)
        $this.$flags0 = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_FSet_$callClinit();
                $newFlags = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $newFlags + 1 | 0;
                $last = new jl_AbstractStringBuilder;
                $last.$buffer = $rt_createCharArray(20);
                $fSet.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, $newFlags, 10)).$toString();
                $fSet.$groupIndex0 = var$8;
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_FSet_$callClinit();
                $newFlags = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $newFlags + 1 | 0;
                $last = new jl_AbstractStringBuilder;
                $last.$buffer = $rt_createCharArray(20);
                $fSet.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, $newFlags, 10)).$toString();
                $fSet.$groupIndex0 = var$8;
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$8 = $this.$consCount + 1 | 0;
                $this.$consCount = var$8;
                jur_FSet_$callClinit();
                $newFlags = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $newFlags + 1 | 0;
                $last = new jl_AbstractStringBuilder;
                $last.$buffer = $rt_createCharArray(20);
                $fSet.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, $newFlags, 10)).$toString();
                $fSet.$groupIndex0 = var$8;
                break a;
            default:
                var$8 = $this.$globalGroupIndex + 1 | 0;
                $this.$globalGroupIndex = var$8;
                if ($last !== null) {
                    $fSet = new jur_FSet;
                    jur_FSet_$callClinit();
                    $newFlags = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $newFlags + 1 | 0;
                    $last = new jl_AbstractStringBuilder;
                    $last.$buffer = $rt_createCharArray(20);
                    $fSet.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, $newFlags, 10)).$toString();
                    $fSet.$groupIndex0 = var$8;
                } else {
                    $fSet = new jur_FinalSet;
                    jur_FSet_$callClinit();
                    var$9 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$9 + 1 | 0;
                    $last = new jl_AbstractStringBuilder;
                    $last.$buffer = $rt_createCharArray(20);
                    $fSet.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, var$9, 10)).$toString();
                    $fSet.$groupIndex0 = 0;
                    $saveChangedFlags = 1;
                }
                $newFlags = $this.$globalGroupIndex;
                if ($newFlags <= (-1))
                    break a;
                if ($newFlags >= 10)
                    break a;
                $this.$backRefs.data[$newFlags] = $fSet;
                break a;
        }
        $fSet = new jur_AheadFSet;
        jur_FSet_$callClinit();
        var$9 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$9 + 1 | 0;
        $last = new jl_AbstractStringBuilder;
        $last.$buffer = $rt_createCharArray(20);
        $fSet.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, var$9, 10)).$toString();
        $fSet.$groupIndex0 = (-1);
    }
    while (true) {
        $child = $this.$lexemes;
        var$11 = $child.$ch;
        var$9 = !var$11 && !$child.$lookAhead && $child.$index0 == $child.$patternFullLength && !($child.$curST === null ? 0 : 1) ? 1 : 0;
        var$9 = !var$9 && !($child.$curST === null ? 0 : 1) && (var$11 < 0 ? 0 : 1) ? 1 : 0;
        if (var$9 && $child.$lookAhead == (-536870788))
            $child = jur_Pattern_processAlternations($this, $fSet);
        else if (var$11 == (-536870788)) {
            $child = new jur_EmptySet;
            var$9 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$9 + 1 | 0;
            $last = new jl_AbstractStringBuilder;
            $last.$buffer = $rt_createCharArray(20);
            $child.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, var$9, 10)).$toString();
            $child.$next0 = $fSet;
            $child.$charCount0 = 1;
            $child.$type0 = 1;
            $child.$charCount0 = 0;
            jur_Lexer_movePointer($this.$lexemes);
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            $last = $this.$lexemes;
            if ($last.$ch == (-536870788))
                jur_Lexer_movePointer($last);
        }
        if ($child !== null) {
            ju_ArrayList_ensureCapacity($children, $children.$size1 + 1 | 0);
            var$12 = $children.$array0.data;
            var$11 = $children.$size1;
            $children.$size1 = var$11 + 1 | 0;
            var$12[var$11] = $child;
            $children.$modCount = $children.$modCount + 1 | 0;
        }
        $child = $this.$lexemes;
        var$9 = $child.$ch;
        if (!var$9 && !$child.$lookAhead && $child.$index0 == $child.$patternFullLength && !($child.$curST === null ? 0 : 1) ? 1 : 0)
            break;
        if (var$9 != (-536870871))
            continue;
        else
            break;
    }
    if ($child.$lookBack == (-536870788)) {
        $child = new jur_EmptySet;
        $newFlags = jur_AbstractSet_counter;
        jur_AbstractSet_counter = $newFlags + 1 | 0;
        $last = new jl_AbstractStringBuilder;
        $last.$buffer = $rt_createCharArray(20);
        $child.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, $newFlags, 10)).$toString();
        $child.$next0 = $fSet;
        $child.$charCount0 = 1;
        $child.$type0 = 1;
        $child.$charCount0 = 0;
        ju_ArrayList_ensureCapacity($children, $children.$size1 + 1 | 0);
        var$12 = $children.$array0.data;
        var$9 = $children.$size1;
        $children.$size1 = var$9 + 1 | 0;
        var$12[var$9] = $child;
        $children.$modCount = $children.$modCount + 1 | 0;
    }
    if ($this.$flags0 != $saveFlags && !$saveChangedFlags) {
        $this.$flags0 = $saveFlags;
        $child = $this.$lexemes;
        $child.$flags = $saveFlags;
        $child.$lookAhead = $child.$ch;
        $child.$lookAheadST = $child.$curST;
        var$9 = $child.$curToc;
        $child.$index0 = var$9 + 1 | 0;
        $child.$lookAheadToc = var$9;
        jur_Lexer_movePointer($child);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            $last = new jur_PositiveLookAhead;
            $ch = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $ch + 1 | 0;
            $child = new jl_AbstractStringBuilder;
            jl_Object__init_($child);
            $child.$buffer = $rt_createCharArray(20);
            $last.$index = (jl_AbstractStringBuilder_insert0($child, $child.$length0, $ch, 10)).$toString();
            $last.$children = $children;
            $last.$fSet = $fSet;
            $last.$groupIndex = $fSet.$groupIndex0;
            return $last;
        case -268435416:
            $last = new jur_NegativeLookAhead;
            $ch = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $ch + 1 | 0;
            $child = new jl_AbstractStringBuilder;
            jl_Object__init_($child);
            $child.$buffer = $rt_createCharArray(20);
            $last.$index = (jl_AbstractStringBuilder_insert0($child, $child.$length0, $ch, 10)).$toString();
            $last.$children = $children;
            $last.$fSet = $fSet;
            $last.$groupIndex = $fSet.$groupIndex0;
            return $last;
        case -134217688:
            $last = new jur_PositiveLookBehind;
            $ch = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $ch + 1 | 0;
            $child = new jl_AbstractStringBuilder;
            jl_Object__init_($child);
            $child.$buffer = $rt_createCharArray(20);
            $last.$index = (jl_AbstractStringBuilder_insert0($child, $child.$length0, $ch, 10)).$toString();
            $last.$children = $children;
            $last.$fSet = $fSet;
            $last.$groupIndex = $fSet.$groupIndex0;
            return $last;
        case -67108824:
            $child = new jur_NegativeLookBehind;
            $ch = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $ch + 1 | 0;
            $last = new jl_AbstractStringBuilder;
            jl_Object__init_($last);
            $last.$buffer = $rt_createCharArray(20);
            $child.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, $ch, 10)).$toString();
            $child.$children = $children;
            $child.$fSet = $fSet;
            $child.$groupIndex = $fSet.$groupIndex0;
            return $child;
        case -33554392:
            $last = new jur_AtomicJointSet;
            $ch = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $ch + 1 | 0;
            $child = new jl_AbstractStringBuilder;
            $child.$buffer = $rt_createCharArray(20);
            $last.$index = (jl_AbstractStringBuilder_insert0($child, $child.$length0, $ch, 10)).$toString();
            $last.$children = $children;
            $last.$fSet = $fSet;
            $last.$groupIndex = $fSet.$groupIndex0;
            return $last;
        default:
            $newFlags = $children.$size1;
            switch ($newFlags) {
                case 0:
                    $last = new jur_EmptySet;
                    $ch = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $ch + 1 | 0;
                    $children = new jl_AbstractStringBuilder;
                    $children.$buffer = $rt_createCharArray(20);
                    $last.$index = (jl_AbstractStringBuilder_insert0($children, $children.$length0, $ch, 10)).$toString();
                    $last.$next0 = $fSet;
                    $last.$charCount0 = 1;
                    $last.$type0 = 1;
                    $last.$charCount0 = 0;
                    return $last;
                case 1:
                    $last = new jur_SingleSet;
                    if (0 >= $newFlags) {
                        $last = new jl_IndexOutOfBoundsException;
                        $last.$suppressionEnabled = 1;
                        $last.$writableStackTrace = 1;
                        $rt_throw($last);
                    }
                    $children = $children.$array0.data[0];
                    $ch = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $ch + 1 | 0;
                    $child = new jl_AbstractStringBuilder;
                    $child.$buffer = $rt_createCharArray(20);
                    $last.$index = (jl_AbstractStringBuilder_insert0($child, $child.$length0, $ch, 10)).$toString();
                    $last.$kid = $children;
                    $last.$fSet = $fSet;
                    $last.$groupIndex = $fSet.$groupIndex0;
                    return $last;
                default:
            }
            $last = new jur_JointSet;
            $ch = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $ch + 1 | 0;
            $child = new jl_AbstractStringBuilder;
            $child.$buffer = $rt_createCharArray(20);
            $last.$index = (jl_AbstractStringBuilder_insert0($child, $child.$length0, $ch, 10)).$toString();
            $last.$children = $children;
            $last.$fSet = $fSet;
            $last.$groupIndex = $fSet.$groupIndex0;
            return $last;
    }
    $child = new jur_NonCapJointSet;
    var$9 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$9 + 1 | 0;
    $last = new jl_AbstractStringBuilder;
    $last.$buffer = $rt_createCharArray(20);
    $child.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, var$9, 10)).$toString();
    $child.$children = $children;
    $child.$fSet = $fSet;
    $child.$groupIndex = $fSet.$groupIndex0;
    return $child;
},
jur_Pattern_processSequence = $this => {
    let $substring, var$2, var$3, var$4, $ch, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $substring = new jl_StringBuffer;
    $substring.$buffer = $rt_createCharArray(16);
    var$2 = $substring;
    while (true) {
        var$3 = $this.$lexemes;
        var$4 = var$3.$ch;
        if (!var$4 && !var$3.$lookAhead && var$3.$index0 == var$3.$patternFullLength && !(var$3.$curST === null ? 0 : 1) ? 1 : 0)
            break;
        $ch = !var$4 && !var$3.$lookAhead && var$3.$index0 == var$3.$patternFullLength && !(var$3.$curST === null ? 0 : 1) ? 1 : 0;
        if (!(!$ch && !(var$3.$curST === null ? 0 : 1) && (var$4 < 0 ? 0 : 1) ? 1 : 0))
            break;
        if (var$4 <= 56319 && var$4 >= 55296 ? 1 : 0)
            break;
        if (var$4 <= 57343 && var$4 >= 56320 ? 1 : 0)
            break;
        var$6 = var$3.$lookAheadST;
        var$4 = var$6 === null ? 0 : 1;
        if (!(!var$4 && !var$3.$lookAhead)) {
            var$4 = var$6 === null ? 0 : 1;
            if (!(!var$4 && (var$3.$lookAhead < 0 ? 0 : 1))) {
                var$7 = var$3.$lookAhead;
                if (var$7 != (-536870871) && (var$7 & (-2147418113)) != (-2147483608) && var$7 != (-536870788) && var$7 != (-536870876))
                    break;
            }
        }
        jur_Lexer_movePointer(var$3);
        $ch = var$3.$lookBack;
        if (!($ch >= 65536 && $ch <= 1114111 ? 1 : 0)) {
            var$4 = $ch & 65535;
            $ch = $substring.$length0;
            jl_AbstractStringBuilder_insertSpace(var$2, $ch, $ch + 1 | 0);
            var$2.$buffer.data[$ch] = var$4;
        } else {
            var$8 = (jl_Character_toChars($ch)).data;
            var$4 = 0;
            $ch = var$8.length;
            var$7 = var$2.$length0;
            var$3 = var$2;
            jl_AbstractStringBuilder_insertSpace(var$3, var$7, var$7 + $ch | 0);
            var$9 = $ch + var$4 | 0;
            while (var$4 < var$9) {
                var$10 = var$3.$buffer.data;
                var$11 = var$7 + 1 | 0;
                $ch = var$4 + 1 | 0;
                var$10[var$7] = var$8[var$4];
                var$7 = var$11;
                var$4 = $ch;
            }
        }
    }
    $ch = $this.$flags0;
    if (!(($ch & 2) != 2 ? 0 : 1))
        return jur_SequenceSet__init_0($substring);
    if (!(($ch & 64) != 64 ? 0 : 1)) {
        var$3 = new jur_CISequenceSet;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        var$3.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$4, 10)).$toString();
        var$3.$charCount0 = 1;
        var$6 = new jl_String;
        var$8 = $substring.$buffer;
        var$10 = var$8.data;
        $ch = $substring.$length0;
        var$7 = var$10.length;
        if ($ch >= 0 && $ch <= (var$7 - 0 | 0)) {
            var$6.$nativeString = $rt_charArrayToString(var$8.data, 0, $ch);
            var$3.$string3 = var$6;
            var$3.$charCount0 = $substring.$length0;
            return var$3;
        }
        $substring = new jl_IndexOutOfBoundsException;
        $substring.$suppressionEnabled = 1;
        $substring.$writableStackTrace = 1;
        $rt_throw($substring);
    }
    var$3 = new jur_UCISequenceSet;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$6 = new jl_AbstractStringBuilder;
    var$6.$buffer = $rt_createCharArray(20);
    var$3.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$4, 10)).$toString();
    var$3.$charCount0 = 1;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$4 = 0;
    var$12 = var$6;
    while (true) {
        $ch = $rt_compare(var$4, $substring.$length0);
        if ($ch >= 0) {
            $substring = new jl_String;
            var$8 = var$6.$buffer;
            var$10 = var$8.data;
            $ch = var$6.$length0;
            var$7 = var$10.length;
            if ($ch >= 0 && $ch <= (var$7 - 0 | 0)) {
                $substring.$nativeString = $rt_charArrayToString(var$8.data, 0, $ch);
                var$3.$string4 = $substring;
                var$3.$charCount0 = var$6.$length0;
                return var$3;
            }
            $substring = new jl_IndexOutOfBoundsException;
            $substring.$suppressionEnabled = 1;
            $substring.$writableStackTrace = 1;
            $rt_throw($substring);
        }
        if (var$4 < 0)
            break;
        if ($ch >= 0)
            break;
        $ch = $substring.$buffer.data[var$4];
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch) & 65535;
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        var$7 = jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch) & 65535;
        $ch = var$6.$length0;
        jl_AbstractStringBuilder_insertSpace(var$12, $ch, $ch + 1 | 0);
        var$12.$buffer.data[$ch] = var$7;
        var$4 = var$4 + 1 | 0;
    }
    $substring = new jl_IndexOutOfBoundsException;
    $substring.$suppressionEnabled = 1;
    $substring.$writableStackTrace = 1;
    $rt_throw($substring);
},
jur_Pattern_processDecomposedChar = $this => {
    let $codePoints, $curSymb, $curSymbIndex, var$4, var$5, var$6, $codePointsHangul, $readCodePoints, var$9;
    $codePoints = $rt_createIntArray(4);
    $curSymb = (-1);
    $curSymbIndex = (-1);
    var$4 = $this.$lexemes;
    var$5 = var$4.$ch;
    if (!(!var$5 && !var$4.$lookAhead && var$4.$index0 == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0)) {
        var$6 = !var$5 && !var$4.$lookAhead && var$4.$index0 == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0;
        if (!var$6 && !(var$4.$curST === null ? 0 : 1) && (var$5 < 0 ? 0 : 1) ? 1 : 0) {
            $codePointsHangul = $codePoints.data;
            jur_Lexer_movePointer(var$4);
            $curSymb = var$4.$lookBack;
            $codePointsHangul[0] = $curSymb;
            $curSymbIndex = $curSymb - 4352 | 0;
        }
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        $codePoints = $codePointsHangul.data;
        $codePoints[0] = $curSymb & 65535;
        var$4 = $this.$lexemes;
        $readCodePoints = var$4.$ch;
        $curSymb = $readCodePoints - 4449 | 0;
        if ($curSymb >= 0 && $curSymb < 21) {
            $codePoints[1] = $readCodePoints & 65535;
            jur_Lexer_movePointer(var$4);
            var$4 = $this.$lexemes;
            $readCodePoints = var$4.$ch;
            $curSymbIndex = $readCodePoints - 4519 | 0;
            if ($curSymbIndex >= 0 && $curSymbIndex < 28) {
                $codePoints[2] = $readCodePoints & 65535;
                jur_Lexer_movePointer(var$4);
                var$4 = new jur_HangulDecomposedCharSet;
                $curSymb = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $curSymb + 1 | 0;
                var$9 = new jl_AbstractStringBuilder;
                var$9.$buffer = $rt_createCharArray(20);
                var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $curSymb, 10)).$toString();
                var$4.$decomposedChar = $codePointsHangul;
                var$4.$decomposedCharLength0 = 3;
                return var$4;
            }
            var$4 = new jur_HangulDecomposedCharSet;
            $curSymb = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $curSymb + 1 | 0;
            var$9 = new jl_AbstractStringBuilder;
            var$9.$buffer = $rt_createCharArray(20);
            var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $curSymb, 10)).$toString();
            var$4.$decomposedChar = $codePointsHangul;
            var$4.$decomposedCharLength0 = 2;
            return var$4;
        }
        $readCodePoints = $this.$flags0;
        if (!(($readCodePoints & 2) != 2 ? 0 : 1)) {
            var$4 = new jur_CharSet;
            $readCodePoints = $codePoints[0];
            $curSymb = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $curSymb + 1 | 0;
            var$9 = new jl_AbstractStringBuilder;
            var$9.$buffer = $rt_createCharArray(20);
            var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $curSymb, 10)).$toString();
            var$4.$charCount0 = 1;
            var$4.$ch0 = $readCodePoints;
            return var$4;
        }
        if (!(($readCodePoints & 64) != 64 ? 0 : 1)) {
            var$4 = new jur_CICharSet;
            $readCodePoints = $codePoints[0];
            $curSymb = jur_AbstractSet_counter;
            jur_AbstractSet_counter = $curSymb + 1 | 0;
            var$9 = new jl_AbstractStringBuilder;
            var$9.$buffer = $rt_createCharArray(20);
            var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $curSymb, 10)).$toString();
            var$4.$charCount0 = 1;
            var$4.$ch3 = $readCodePoints;
            var$4.$supplement = jur_Pattern_getSupplement($readCodePoints);
            return var$4;
        }
        var$4 = new jur_UCICharSet;
        $readCodePoints = $codePoints[0];
        $curSymb = jur_AbstractSet_counter;
        jur_AbstractSet_counter = $curSymb + 1 | 0;
        var$9 = new jl_AbstractStringBuilder;
        var$9.$buffer = $rt_createCharArray(20);
        var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $curSymb, 10)).$toString();
        var$4.$charCount0 = 1;
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        $readCodePoints = jl_Character_mapChar(jl_Character_upperCaseMapping, $readCodePoints) & 65535;
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        var$4.$ch2 = jl_Character_mapChar(jl_Character_lowerCaseMapping, $readCodePoints) & 65535;
        return var$4;
    }
    $codePointsHangul = $codePoints.data;
    $curSymb = 1;
    while ($curSymb < 4) {
        var$4 = $this.$lexemes;
        var$6 = var$4.$ch;
        if (!var$6 && !var$4.$lookAhead && var$4.$index0 == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0)
            break;
        $readCodePoints = !var$6 && !var$4.$lookAhead && var$4.$index0 == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0;
        if (!(!$readCodePoints && !(var$4.$curST === null ? 0 : 1) && (var$6 < 0 ? 0 : 1) ? 1 : 0))
            break;
        $readCodePoints = $curSymb + 1 | 0;
        jur_Lexer_movePointer(var$4);
        $codePointsHangul[$curSymb] = var$4.$lookBack;
        $curSymb = $readCodePoints;
    }
    if ($curSymb == 1) {
        $readCodePoints = $codePointsHangul[0];
        if (!(jur_Lexer_singleDecompTable.$get1($readCodePoints) == jur_Lexer_singleDecompTableSize ? 0 : 1))
            return jur_Pattern_processCharSet($this, $codePointsHangul[0]);
    }
    $curSymbIndex = $this.$flags0;
    if (!(($curSymbIndex & 2) != 2 ? 0 : 1)) {
        var$4 = new jur_DecomposedCharSet;
        $readCodePoints = jur_AbstractSet_counter;
        jur_AbstractSet_counter = $readCodePoints + 1 | 0;
        var$9 = new jl_AbstractStringBuilder;
        var$9.$buffer = $rt_createCharArray(20);
        var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $readCodePoints, 10)).$toString();
        var$4.$readCharsForCodePoint = 1;
        var$4.$decomposedChar0 = $codePoints;
        var$4.$decomposedCharLength = $curSymb;
        return var$4;
    }
    if (($curSymbIndex & 64) != 64 ? 0 : 1) {
        var$4 = new jur_UCIDecomposedCharSet;
        $readCodePoints = jur_AbstractSet_counter;
        jur_AbstractSet_counter = $readCodePoints + 1 | 0;
        var$9 = new jl_AbstractStringBuilder;
        var$9.$buffer = $rt_createCharArray(20);
        var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $readCodePoints, 10)).$toString();
        var$4.$readCharsForCodePoint = 1;
        var$4.$decomposedChar0 = $codePoints;
        var$4.$decomposedCharLength = $curSymb;
        return var$4;
    }
    var$4 = new jur_CIDecomposedCharSet;
    $readCodePoints = jur_AbstractSet_counter;
    jur_AbstractSet_counter = $readCodePoints + 1 | 0;
    var$9 = new jl_AbstractStringBuilder;
    var$9.$buffer = $rt_createCharArray(20);
    var$4.$index = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $readCodePoints, 10)).$toString();
    var$4.$readCharsForCodePoint = 1;
    var$4.$decomposedChar0 = $codePoints;
    var$4.$decomposedCharLength = $curSymb;
    return var$4;
},
jur_Pattern_processSubExpression = ($this, $last) => {
    let $term, var$3, var$4, $cur, $next, var$7, var$8, var$9;
    $term = $this.$lexemes;
    var$3 = $term.$ch;
    var$4 = !var$3 && !$term.$lookAhead && $term.$index0 == $term.$patternFullLength && !($term.$curST === null ? 0 : 1) ? 1 : 0;
    var$4 = !var$4 && !($term.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0;
    if (var$4 && !($term.$lookAheadST === null ? 0 : 1) && ($term.$lookAhead < 0 ? 0 : 1)) {
        if (!(($this.$flags0 & 128) != 128 ? 0 : 1)) {
            var$4 = var$3 <= 56319 && var$3 >= 55296 ? 1 : 0;
            $cur = !var$4 && !(var$3 <= 57343 && var$3 >= 56320 ? 1 : 0) ? jur_Pattern_processSequence($this) : jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
        } else {
            $cur = jur_Pattern_processDecomposedChar($this);
            $next = $this.$lexemes;
            var$4 = $next.$ch;
            if (!(!var$4 && !$next.$lookAhead && $next.$index0 == $next.$patternFullLength && !($next.$curST === null ? 0 : 1) ? 1 : 0) && !(var$4 == (-536870871) && !($last instanceof jur_FinalSet)) && var$4 != (-536870788)) {
                var$7 = !var$4 && !$next.$lookAhead && $next.$index0 == $next.$patternFullLength && !($next.$curST === null ? 0 : 1) ? 1 : 0;
                if (!(!var$7 && !($next.$curST === null ? 0 : 1) && (var$4 < 0 ? 0 : 1) ? 1 : 0))
                    $cur = jur_Pattern_processQuantifier($this, $last, $cur);
            }
        }
    } else if (var$3 != (-536870871))
        $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
    else {
        if ($last instanceof jur_FinalSet) {
            $last = new jur_PatternSyntaxException;
            $next = $term.$orig;
            var$7 = $term.$curToc;
            $last.$suppressionEnabled = 1;
            $last.$writableStackTrace = 1;
            $last.$index1 = (-1);
            $last.$desc = $rt_s(40);
            $last.$pattern = $next;
            $last.$index1 = var$7;
            $rt_throw($last);
        }
        $cur = new jur_EmptySet;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        $term = new jl_AbstractStringBuilder;
        $term.$buffer = $rt_createCharArray(20);
        $cur.$index = (jl_AbstractStringBuilder_insert0($term, $term.$length0, var$4, 10)).$toString();
        $cur.$next0 = $last;
        $cur.$charCount0 = 1;
        $cur.$type0 = 1;
        $cur.$charCount0 = 0;
    }
    $term = $this.$lexemes;
    var$7 = $term.$ch;
    var$4 = !var$7 && !$term.$lookAhead && $term.$index0 == $term.$patternFullLength && !($term.$curST === null ? 0 : 1) ? 1 : 0;
    if (!var$4 && !(var$7 == (-536870871) && !($last instanceof jur_FinalSet)) && var$7 != (-536870788)) {
        $next = jur_Pattern_processSubExpression($this, $last);
        if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
            $last = $cur;
            $term = $last;
            if (!$next.$first($term.$innerSet)) {
                $cur = new jur_UnifiedQuantifierSet;
                $term = $term.$innerSet;
                $last = $last;
                var$8 = $last.$next0;
                var$9 = $last.$type0;
                var$4 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$4 + 1 | 0;
                $last = new jl_AbstractStringBuilder;
                $last.$buffer = $rt_createCharArray(20);
                $cur.$index = (jl_AbstractStringBuilder_insert0($last, $last.$length0, var$4, 10)).$toString();
                $cur.$next0 = var$8;
                $cur.$innerSet = $term;
                $cur.$type0 = var$9;
                $cur.$leaf = $term;
                $term.$setNext($cur);
            }
        }
        if (($next.$getType0() & 65535) != 43)
            $cur.$setNext($next);
        else
            $cur.$setNext($next.$innerSet);
    } else {
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType0() & 65535) != 43)
        return $cur;
    return $cur.$innerSet;
},
jur_Pattern_processQuantifier = ($this, $last, $term) => {
    let $q, $quant, var$5, $q_0, var$7, $leaf, var$9, var$10;
    $q = $this.$lexemes;
    $quant = $q.$ch;
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                jur_Lexer_movePointer($q);
                $q = new jur_PossessiveGroupQuantifierSet;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                $q_0 = new jl_AbstractStringBuilder;
                $q_0.$buffer = $rt_createCharArray(20);
                $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$5, 10)).$toString();
                $q.$next0 = $last;
                $q.$innerSet = $term;
                $q.$type0 = $quant;
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483605:
                jur_Lexer_movePointer($q);
                $q = new jur_PosPlusGroupQuantifierSet;
                var$7 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$7 + 1 | 0;
                $q_0 = new jl_AbstractStringBuilder;
                $q_0.$buffer = $rt_createCharArray(20);
                $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$7, 10)).$toString();
                $q.$next0 = $last;
                $q.$innerSet = $term;
                $q.$type0 = (-2147483606);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483585:
                jur_Lexer_movePointer($q);
                $q = new jur_PosAltGroupQuantifierSet;
                var$7 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$7 + 1 | 0;
                $q_0 = new jl_AbstractStringBuilder;
                jl_Object__init_($q_0);
                $q_0.$buffer = $rt_createCharArray(20);
                $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$7, 10)).$toString();
                $q.$next0 = $last;
                $q.$innerSet = $term;
                $q.$type0 = (-536870849);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483525:
                $q_0 = new jur_PosCompositeGroupQuantifierSet;
                $leaf = $q.$curST;
                jur_Lexer_movePointer($q);
                $q = $leaf;
                var$5 = $this.$compCount + 1 | 0;
                $this.$compCount = var$5;
                var$9 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$9 + 1 | 0;
                $leaf = new jl_AbstractStringBuilder;
                jl_Object__init_($leaf);
                $leaf.$buffer = $rt_createCharArray(20);
                $q_0.$index = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length0, var$9, 10)).$toString();
                $q_0.$next0 = $last;
                $q_0.$innerSet = $term;
                $q_0.$type0 = (-536870849);
                $q_0.$quantifier = $q;
                $q_0.$setCounter = var$5;
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q_0;
            case -1073741782:
            case -1073741781:
                jur_Lexer_movePointer($q);
                $q = new jur_ReluctantGroupQuantifierSet;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                $q_0 = new jl_AbstractStringBuilder;
                $q_0.$buffer = $rt_createCharArray(20);
                $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$5, 10)).$toString();
                $q.$next0 = $last;
                $q.$innerSet = $term;
                $q.$type0 = $quant;
                $term.$setNext($q);
                return $q;
            case -1073741761:
                jur_Lexer_movePointer($q);
                $q = new jur_RelAltGroupQuantifierSet;
                var$7 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$7 + 1 | 0;
                $q_0 = new jl_AbstractStringBuilder;
                jl_Object__init_($q_0);
                $q_0.$buffer = $rt_createCharArray(20);
                $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$7, 10)).$toString();
                $q.$next0 = $last;
                $q.$innerSet = $term;
                $q.$type0 = (-536870849);
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q_0 = new jur_RelCompositeGroupQuantifierSet;
                $leaf = $q.$curST;
                jur_Lexer_movePointer($q);
                $q = $leaf;
                var$7 = $this.$compCount + 1 | 0;
                $this.$compCount = var$7;
                var$9 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$9 + 1 | 0;
                $leaf = new jl_AbstractStringBuilder;
                jl_Object__init_($leaf);
                $leaf.$buffer = $rt_createCharArray(20);
                $q_0.$index = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length0, var$9, 10)).$toString();
                $q_0.$next0 = $last;
                $q_0.$innerSet = $term;
                $q_0.$type0 = (-536870849);
                $q_0.$quantifier = $q;
                $q_0.$setCounter = var$7;
                $term.$setNext($q_0);
                return $q_0;
            case -536870870:
            case -536870869:
                jur_Lexer_movePointer($q);
                if ($term.$getType0() != (-2147483602)) {
                    $q = new jur_GroupQuantifierSet;
                    var$5 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$5 + 1 | 0;
                    $q_0 = new jl_AbstractStringBuilder;
                    $q_0.$buffer = $rt_createCharArray(20);
                    $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$5, 10)).$toString();
                    $q.$next0 = $last;
                    $q.$innerSet = $term;
                    $q.$type0 = $quant;
                } else {
                    var$7 = $this.$flags0;
                    if ((var$7 & 32) != 32 ? 0 : 1) {
                        $q = new jur_DotAllQuantifierSet;
                        var$5 = jur_AbstractSet_counter;
                        jur_AbstractSet_counter = var$5 + 1 | 0;
                        $q_0 = new jl_AbstractStringBuilder;
                        $q_0.$buffer = $rt_createCharArray(20);
                        $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$5, 10)).$toString();
                        $q.$next0 = $last;
                        $q.$innerSet = $term;
                        $q.$type0 = $quant;
                    } else {
                        $q = new jur_DotQuantifierSet;
                        if (!(var$7 & 1)) {
                            $q_0 = jur_AbstractLineTerminator_unicodeLT;
                            if ($q_0 === null) {
                                $q_0 = new jur_AbstractLineTerminator$2;
                                jur_AbstractLineTerminator_unicodeLT = $q_0;
                            }
                        } else {
                            $q_0 = jur_AbstractLineTerminator_unixLT;
                            if ($q_0 === null) {
                                $q_0 = new jur_AbstractLineTerminator$1;
                                jur_AbstractLineTerminator_unixLT = $q_0;
                            }
                        }
                        var$5 = jur_AbstractSet_counter;
                        jur_AbstractSet_counter = var$5 + 1 | 0;
                        $leaf = new jl_AbstractStringBuilder;
                        $leaf.$buffer = $rt_createCharArray(20);
                        $q.$index = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length0, var$5, 10)).$toString();
                        $q.$next0 = $last;
                        $q.$innerSet = $term;
                        $q.$type0 = $quant;
                        $q.$lt = $q_0;
                    }
                }
                $term.$setNext($q);
                return $q;
            case -536870849:
                jur_Lexer_movePointer($q);
                $q = new jur_AltGroupQuantifierSet;
                var$7 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$7 + 1 | 0;
                $q_0 = new jl_AbstractStringBuilder;
                $q_0.$buffer = $rt_createCharArray(20);
                $q.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$7, 10)).$toString();
                $q.$next0 = $last;
                $q.$innerSet = $term;
                $q.$type0 = (-536870849);
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q_0 = new jur_CompositeGroupQuantifierSet;
                $leaf = $q.$curST;
                jur_Lexer_movePointer($q);
                $leaf = $leaf;
                var$10 = $this.$compCount + 1 | 0;
                $this.$compCount = var$10;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                $q = new jl_AbstractStringBuilder;
                $q.$buffer = $rt_createCharArray(20);
                $q_0.$index = (jl_AbstractStringBuilder_insert0($q, $q.$length0, var$5, 10)).$toString();
                $q_0.$next0 = $last;
                $q_0.$innerSet = $term;
                $q_0.$type0 = (-536870849);
                $q_0.$quantifier = $leaf;
                $q_0.$setCounter = var$10;
                $term.$setNext($q_0);
                return $q_0;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            jur_Lexer_movePointer($q);
            $q = new jur_PossessiveQuantifierSet;
            var$5 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$5 + 1 | 0;
            $term = new jl_AbstractStringBuilder;
            $term.$buffer = $rt_createCharArray(20);
            $q.$index = (jl_AbstractStringBuilder_insert0($term, $term.$length0, var$5, 10)).$toString();
            $q.$next0 = $last;
            $q.$innerSet = $leaf;
            $q.$type0 = $quant;
            $q.$leaf = $leaf;
            $leaf.$next0 = $q;
            return $q;
        case -2147483585:
            jur_Lexer_movePointer($q);
            $term = new jur_PossessiveAltQuantifierSet;
            var$7 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$7 + 1 | 0;
            $q = new jl_AbstractStringBuilder;
            jl_Object__init_($q);
            $q.$buffer = $rt_createCharArray(20);
            $term.$index = (jl_AbstractStringBuilder_insert0($q, $q.$length0, var$7, 10)).$toString();
            $term.$next0 = $last;
            $term.$innerSet = $leaf;
            $term.$type0 = (-2147483585);
            $term.$leaf = $leaf;
            return $term;
        case -2147483525:
            $term = new jur_PossessiveCompositeQuantifierSet;
            $q_0 = $q.$curST;
            jur_Lexer_movePointer($q);
            $q = $q_0;
            var$7 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$7 + 1 | 0;
            $q_0 = new jl_AbstractStringBuilder;
            jl_Object__init_($q_0);
            $q_0.$buffer = $rt_createCharArray(20);
            $term.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$7, 10)).$toString();
            $term.$next0 = $last;
            $term.$innerSet = $leaf;
            $term.$type0 = (-2147483525);
            $term.$leaf = $leaf;
            $term.$quantifier0 = $q;
            return $term;
        case -1073741782:
        case -1073741781:
            jur_Lexer_movePointer($q);
            $q = new jur_ReluctantQuantifierSet;
            var$5 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$5 + 1 | 0;
            $term = new jl_AbstractStringBuilder;
            $term.$buffer = $rt_createCharArray(20);
            $q.$index = (jl_AbstractStringBuilder_insert0($term, $term.$length0, var$5, 10)).$toString();
            $q.$next0 = $last;
            $q.$innerSet = $leaf;
            $q.$type0 = $quant;
            $q.$leaf = $leaf;
            $leaf.$next0 = $q;
            return $q;
        case -1073741761:
            jur_Lexer_movePointer($q);
            $term = new jur_ReluctantAltQuantifierSet;
            var$7 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$7 + 1 | 0;
            $q = new jl_AbstractStringBuilder;
            jl_Object__init_($q);
            $q.$buffer = $rt_createCharArray(20);
            $term.$index = (jl_AbstractStringBuilder_insert0($q, $q.$length0, var$7, 10)).$toString();
            $term.$next0 = $last;
            $term.$innerSet = $leaf;
            $term.$type0 = (-1073741761);
            $term.$leaf = $leaf;
            return $term;
        case -1073741701:
            $term = new jur_ReluctantCompositeQuantifierSet;
            $q_0 = $q.$curST;
            jur_Lexer_movePointer($q);
            $q = $q_0;
            var$7 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$7 + 1 | 0;
            $q_0 = new jl_AbstractStringBuilder;
            jl_Object__init_($q_0);
            $q_0.$buffer = $rt_createCharArray(20);
            $term.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$7, 10)).$toString();
            $term.$next0 = $last;
            $term.$innerSet = $leaf;
            $term.$type0 = (-1073741701);
            $term.$leaf = $leaf;
            $term.$quantifier0 = $q;
            return $term;
        case -536870870:
        case -536870869:
            jur_Lexer_movePointer($q);
            $q = new jur_LeafQuantifierSet;
            var$5 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$5 + 1 | 0;
            $term = new jl_AbstractStringBuilder;
            $term.$buffer = $rt_createCharArray(20);
            $q.$index = (jl_AbstractStringBuilder_insert0($term, $term.$length0, var$5, 10)).$toString();
            $q.$next0 = $last;
            $q.$innerSet = $leaf;
            $q.$type0 = $quant;
            $q.$leaf = $leaf;
            $leaf.$next0 = $q;
            return $q;
        case -536870849:
            jur_Lexer_movePointer($q);
            $term = new jur_AltQuantifierSet;
            var$7 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$7 + 1 | 0;
            $q = new jl_AbstractStringBuilder;
            $q.$buffer = $rt_createCharArray(20);
            $term.$index = (jl_AbstractStringBuilder_insert0($q, $q.$length0, var$7, 10)).$toString();
            $term.$next0 = $last;
            $term.$innerSet = $leaf;
            $term.$type0 = (-536870849);
            $term.$leaf = $leaf;
            return $term;
        case -536870789:
            $term = new jur_CompositeQuantifierSet;
            $q_0 = $q.$curST;
            jur_Lexer_movePointer($q);
            $q = $q_0;
            var$7 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$7 + 1 | 0;
            $q_0 = new jl_AbstractStringBuilder;
            $q_0.$buffer = $rt_createCharArray(20);
            $term.$index = (jl_AbstractStringBuilder_insert0($q_0, $q_0.$length0, var$7, 10)).$toString();
            $term.$next0 = $last;
            $term.$innerSet = $leaf;
            $term.$type0 = (-536870789);
            $term.$leaf = $leaf;
            $term.$quantifier0 = $q;
            return $term;
        default:
    }
    return $term;
},
jur_Pattern_processTerminal = ($this, $last) => {
    let $term, var$3, var$4, $ch, $newFlags, $cc, $number, var$9, $negative, var$11, var$12;
    $term = null;
    var$3 = $last instanceof jur_FinalSet;
    while (true) {
        a: {
            var$4 = $this.$lexemes;
            $ch = var$4.$ch;
            if (($ch & (-2147418113)) == (-2147483608)) {
                jur_Lexer_movePointer(var$4);
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags0 = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags0;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    $cc = $this.$lexemes;
                    if ($cc.$ch != (-536870871)) {
                        $last = new jur_PatternSyntaxException;
                        var$4 = $cc.$orig;
                        $newFlags = $cc.$curToc;
                        $last.$suppressionEnabled = 1;
                        $last.$writableStackTrace = 1;
                        $last.$index1 = (-1);
                        $last.$desc = $rt_s(40);
                        $last.$pattern = var$4;
                        $last.$index1 = $newFlags;
                        $rt_throw($last);
                    }
                    jur_Lexer_movePointer($cc);
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                $number = ($ch & 2147483647) - 48 | 0;
                                if ($this.$globalGroupIndex < $number) {
                                    $term = new jur_PatternSyntaxException;
                                    $cc = var$4.$orig;
                                    $newFlags = var$4.$curToc;
                                    $term.$suppressionEnabled = 1;
                                    $term.$writableStackTrace = 1;
                                    $term.$index1 = (-1);
                                    $term.$desc = $rt_s(40);
                                    $term.$pattern = $cc;
                                    $term.$index1 = $newFlags;
                                    $rt_throw($term);
                                }
                                jur_Lexer_movePointer(var$4);
                                var$9 = $this.$consCount + 1 | 0;
                                $this.$consCount = var$9;
                                $negative = $this.$flags0;
                                if (!(($negative & 2) != 2 ? 0 : 1)) {
                                    $term = new jur_BackReferenceSet;
                                    $negative = jur_AbstractSet_counter;
                                    jur_AbstractSet_counter = $negative + 1 | 0;
                                    $cc = new jl_AbstractStringBuilder;
                                    $cc.$buffer = $rt_createCharArray(20);
                                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                    $term.$referencedGroup = $number;
                                    $term.$consCounter = var$9;
                                } else if (!(($negative & 64) != 64 ? 0 : 1)) {
                                    $term = new jur_CIBackReferenceSet;
                                    $negative = jur_AbstractSet_counter;
                                    jur_AbstractSet_counter = $negative + 1 | 0;
                                    $cc = new jl_AbstractStringBuilder;
                                    $cc.$buffer = $rt_createCharArray(20);
                                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                    $term.$referencedGroup = $number;
                                    $term.$consCounter = var$9;
                                } else {
                                    $term = new jur_UCIBackReferenceSet;
                                    $negative = jur_AbstractSet_counter;
                                    jur_AbstractSet_counter = $negative + 1 | 0;
                                    $cc = new jl_AbstractStringBuilder;
                                    $cc.$buffer = $rt_createCharArray(20);
                                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                    $term.$referencedGroup = $number;
                                    $term.$consCounter = var$9;
                                }
                                $this.$backRefs.data[$number].$isBackReferenced = 1;
                                $this.$needsBackRefReplacement = 1;
                                break a;
                            case -2147483583:
                                break;
                            case -2147483582:
                                jur_Lexer_movePointer(var$4);
                                $term = new jur_WordBoundary;
                                $newFlags = jur_AbstractSet_counter;
                                jur_AbstractSet_counter = $newFlags + 1 | 0;
                                $cc = new jl_AbstractStringBuilder;
                                $cc.$buffer = $rt_createCharArray(20);
                                $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $newFlags, 10)).$toString();
                                $term.$positive = 0;
                                break a;
                            case -2147483577:
                                jur_Lexer_movePointer(var$4);
                                $term = new jur_PreviousMatch;
                                $negative = jur_AbstractSet_counter;
                                jur_AbstractSet_counter = $negative + 1 | 0;
                                $cc = new jl_AbstractStringBuilder;
                                $cc.$buffer = $rt_createCharArray(20);
                                $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                break a;
                            case -2147483558:
                                jur_Lexer_movePointer(var$4);
                                $term = new jur_EOLSet;
                                var$9 = $this.$consCount + 1 | 0;
                                $this.$consCount = var$9;
                                $negative = jur_AbstractSet_counter;
                                jur_AbstractSet_counter = $negative + 1 | 0;
                                $cc = new jl_AbstractStringBuilder;
                                $cc.$buffer = $rt_createCharArray(20);
                                $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                $term.$consCounter0 = var$9;
                                break a;
                            case -2147483550:
                                jur_Lexer_movePointer(var$4);
                                $term = new jur_WordBoundary;
                                $negative = jur_AbstractSet_counter;
                                jur_AbstractSet_counter = $negative + 1 | 0;
                                $cc = new jl_AbstractStringBuilder;
                                $cc.$buffer = $rt_createCharArray(20);
                                $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                $term.$positive = 1;
                                break a;
                            case -2147483526:
                                jur_Lexer_movePointer(var$4);
                                $term = new jur_EOISet;
                                $negative = jur_AbstractSet_counter;
                                jur_AbstractSet_counter = $negative + 1 | 0;
                                $cc = new jl_AbstractStringBuilder;
                                $cc.$buffer = $rt_createCharArray(20);
                                $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                break a;
                            case -536870876:
                                break b;
                            case -536870866:
                                jur_Lexer_movePointer(var$4);
                                $newFlags = $this.$flags0;
                                if (($newFlags & 32) != 32 ? 0 : 1) {
                                    $term = new jur_DotAllSet;
                                    $negative = jur_AbstractSet_counter;
                                    jur_AbstractSet_counter = $negative + 1 | 0;
                                    $cc = new jl_AbstractStringBuilder;
                                    $cc.$buffer = $rt_createCharArray(20);
                                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                    break a;
                                }
                                $term = new jur_DotSet;
                                if (!($newFlags & 1)) {
                                    $cc = jur_AbstractLineTerminator_unicodeLT;
                                    if ($cc === null) {
                                        $cc = new jur_AbstractLineTerminator$2;
                                        jur_AbstractLineTerminator_unicodeLT = $cc;
                                    }
                                } else {
                                    $cc = jur_AbstractLineTerminator_unixLT;
                                    if ($cc === null) {
                                        $cc = new jur_AbstractLineTerminator$1;
                                        jur_AbstractLineTerminator_unixLT = $cc;
                                    }
                                }
                                $negative = jur_AbstractSet_counter;
                                jur_AbstractSet_counter = $negative + 1 | 0;
                                var$4 = new jl_AbstractStringBuilder;
                                var$4.$buffer = $rt_createCharArray(20);
                                $term.$index = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $negative, 10)).$toString();
                                $term.$lt0 = $cc;
                                break a;
                            case -536870821:
                                jur_Lexer_movePointer(var$4);
                                $negative = 0;
                                $term = $this.$lexemes;
                                if ($term.$ch == (-536870818)) {
                                    $negative = 1;
                                    jur_Lexer_movePointer($term);
                                }
                                $term = jur_Pattern_processRangeSet($this, jur_Pattern_processRangeExpression($this, $negative));
                                $term.$setNext($last);
                                var$4 = $this.$lexemes;
                                $negative = var$4.$ch;
                                if ($negative != (-536870819)) {
                                    $last = new jur_PatternSyntaxException;
                                    $cc = var$4.$orig;
                                    $newFlags = var$4.$curToc;
                                    $last.$suppressionEnabled = 1;
                                    $last.$writableStackTrace = 1;
                                    $last.$index1 = (-1);
                                    $last.$desc = $rt_s(40);
                                    $last.$pattern = $cc;
                                    $last.$index1 = $newFlags;
                                    $rt_throw($last);
                                }
                                var$4.$mode = 1;
                                var$4.$lookAhead = $negative;
                                var$4.$lookAheadST = var$4.$curST;
                                var$4.$index0 = var$4.$lookAheadToc;
                                var$4.$lookAheadToc = var$4.$curToc;
                                jur_Lexer_movePointer(var$4);
                                jur_Lexer_movePointer($this.$lexemes);
                                break a;
                            case -536870818:
                                break c;
                            case 0:
                                $term = var$4.$curST;
                                $cc = $term;
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if (!$ch && !var$4.$lookAhead && var$4.$index0 == var$4.$patternFullLength && !($term === null ? 0 : 1) ? 1 : 0) {
                                        $term = new jur_EmptySet;
                                        $negative = jur_AbstractSet_counter;
                                        jur_AbstractSet_counter = $negative + 1 | 0;
                                        $cc = new jl_AbstractStringBuilder;
                                        $cc.$buffer = $rt_createCharArray(20);
                                        $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                        $term.$next0 = $last;
                                        $term.$charCount0 = 1;
                                        $term.$type0 = 1;
                                        $term.$charCount0 = 0;
                                        break a;
                                    }
                                    $term = new jur_CharSet;
                                    $negative = $ch & 65535;
                                    $newFlags = jur_AbstractSet_counter;
                                    jur_AbstractSet_counter = $newFlags + 1 | 0;
                                    $cc = new jl_AbstractStringBuilder;
                                    $cc.$buffer = $rt_createCharArray(20);
                                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $newFlags, 10)).$toString();
                                    $term.$charCount0 = 1;
                                    $term.$ch0 = $negative;
                                }
                                jur_Lexer_movePointer($this.$lexemes);
                                break a;
                            default:
                                if ($ch >= 0 && !(var$4.$curST === null ? 0 : 1)) {
                                    $term = jur_Pattern_processCharSet($this, $ch);
                                    jur_Lexer_movePointer($this.$lexemes);
                                    break a;
                                }
                                if ($ch == (-536870788)) {
                                    $term = new jur_EmptySet;
                                    $negative = jur_AbstractSet_counter;
                                    jur_AbstractSet_counter = $negative + 1 | 0;
                                    $cc = new jl_AbstractStringBuilder;
                                    $cc.$buffer = $rt_createCharArray(20);
                                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                    $term.$next0 = $last;
                                    $term.$charCount0 = 1;
                                    $term.$type0 = 1;
                                    $term.$charCount0 = 0;
                                    break a;
                                }
                                if ($ch != (-536870871)) {
                                    $last = new jur_PatternSyntaxException;
                                    $term = var$4.$curST;
                                    if ($term === null ? 0 : 1)
                                        $term = $term.$toString();
                                    else {
                                        $negative = $ch & 65535;
                                        $term = new jl_String;
                                        var$11 = $rt_createCharArray(1);
                                        var$12 = var$11.data;
                                        var$12[0] = $negative;
                                        $term.$nativeString = $rt_charArrayToString(var$11.data, 0, var$12.length);
                                    }
                                    $cc = $this.$lexemes;
                                    var$4 = $cc.$orig;
                                    $newFlags = $cc.$curToc;
                                    $last.$suppressionEnabled = 1;
                                    $last.$writableStackTrace = 1;
                                    $last.$index1 = (-1);
                                    $last.$desc = $term;
                                    $last.$pattern = var$4;
                                    $last.$index1 = $newFlags;
                                    $rt_throw($last);
                                }
                                if (var$3) {
                                    $last = new jur_PatternSyntaxException;
                                    $cc = var$4.$orig;
                                    $newFlags = var$4.$curToc;
                                    $last.$suppressionEnabled = 1;
                                    $last.$writableStackTrace = 1;
                                    $last.$index1 = (-1);
                                    $last.$desc = $rt_s(40);
                                    $last.$pattern = $cc;
                                    $last.$index1 = $newFlags;
                                    $rt_throw($last);
                                }
                                $term = new jur_EmptySet;
                                $negative = jur_AbstractSet_counter;
                                jur_AbstractSet_counter = $negative + 1 | 0;
                                $cc = new jl_AbstractStringBuilder;
                                $cc.$buffer = $rt_createCharArray(20);
                                $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                                $term.$next0 = $last;
                                $term.$charCount0 = 1;
                                $term.$type0 = 1;
                                $term.$charCount0 = 0;
                                break a;
                        }
                        jur_Lexer_movePointer(var$4);
                        $term = new jur_SOLSet;
                        $negative = jur_AbstractSet_counter;
                        jur_AbstractSet_counter = $negative + 1 | 0;
                        $cc = new jl_AbstractStringBuilder;
                        $cc.$buffer = $rt_createCharArray(20);
                        $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                        break a;
                    }
                    jur_Lexer_movePointer(var$4);
                    $this.$consCount = $this.$consCount + 1 | 0;
                    $newFlags = $this.$flags0;
                    if (!(($newFlags & 8) != 8 ? 0 : 1)) {
                        $term = new jur_SOLSet;
                        $negative = jur_AbstractSet_counter;
                        jur_AbstractSet_counter = $negative + 1 | 0;
                        $cc = new jl_AbstractStringBuilder;
                        $cc.$buffer = $rt_createCharArray(20);
                        $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                        break a;
                    }
                    $term = new jur_MultiLineSOLSet;
                    if (!($newFlags & 1)) {
                        var$4 = jur_AbstractLineTerminator_unicodeLT;
                        if (var$4 === null) {
                            var$4 = new jur_AbstractLineTerminator$2;
                            jur_AbstractLineTerminator_unicodeLT = var$4;
                        }
                    } else {
                        var$4 = jur_AbstractLineTerminator_unixLT;
                        if (var$4 === null) {
                            var$4 = new jur_AbstractLineTerminator$1;
                            jur_AbstractLineTerminator_unixLT = var$4;
                        }
                    }
                    $negative = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $negative + 1 | 0;
                    $cc = new jl_AbstractStringBuilder;
                    $cc.$buffer = $rt_createCharArray(20);
                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                    $term.$lt1 = var$4;
                    break a;
                }
                jur_Lexer_movePointer(var$4);
                var$9 = $this.$consCount + 1 | 0;
                $this.$consCount = var$9;
                $negative = $this.$flags0;
                if (($negative & 8) != 8 ? 0 : 1) {
                    if (($negative & 1) != 1 ? 0 : 1) {
                        $term = new jur_UMultiLineEOLSet;
                        $newFlags = jur_AbstractSet_counter;
                        jur_AbstractSet_counter = $newFlags + 1 | 0;
                        $cc = new jl_AbstractStringBuilder;
                        $cc.$buffer = $rt_createCharArray(20);
                        $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $newFlags, 10)).$toString();
                        $term.$consCounter3 = var$9;
                    } else {
                        $term = new jur_MultiLineEOLSet;
                        $negative = jur_AbstractSet_counter;
                        jur_AbstractSet_counter = $negative + 1 | 0;
                        $cc = new jl_AbstractStringBuilder;
                        $cc.$buffer = $rt_createCharArray(20);
                        $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                        $term.$consCounter1 = var$9;
                    }
                } else if (($negative & 1) != 1 ? 0 : 1) {
                    $term = new jur_UEOLSet;
                    $negative = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $negative + 1 | 0;
                    $cc = new jl_AbstractStringBuilder;
                    $cc.$buffer = $rt_createCharArray(20);
                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                    $term.$consCounter2 = var$9;
                } else {
                    $term = new jur_EOLSet;
                    $negative = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $negative + 1 | 0;
                    $cc = new jl_AbstractStringBuilder;
                    $cc.$buffer = $rt_createCharArray(20);
                    $term.$index = (jl_AbstractStringBuilder_insert0($cc, $cc.$length0, $negative, 10)).$toString();
                    $term.$consCounter0 = var$9;
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
},
jur_Pattern_processRangeExpression = ($this, $alt) => {
    let $res, $negative, $cur, $cs, $buffer, $intersection, $notClosed, $firstInClass, var$10, var$11, $$je;
    $res = new jur_CharClass;
    $negative = $this.$flags0;
    $cur = ($negative & 2) != 2 ? 0 : 1;
    $negative = ($negative & 64) != 64 ? 0 : 1;
    $cs = new ju_BitSet;
    $cs.$data = $rt_createIntArray(64);
    $res.$lowHighSurrogates = $cs;
    $cs = new ju_BitSet;
    $cs.$data = $rt_createIntArray(2);
    $res.$bits = $cs;
    $res.$ci = $cur;
    $res.$uci = $negative;
    jur_AbstractCharClass_setNegative($res, $alt);
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                var$10 = $this.$lexemes;
                $alt = var$10.$ch;
                if (!$alt && !var$10.$lookAhead && var$10.$index0 == var$10.$patternFullLength && !(var$10.$curST === null ? 0 : 1) ? 1 : 0)
                    break a;
                $notClosed = $alt == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($alt) {
                        case -536870874:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $cs = $this.$lexemes;
                            jur_Lexer_movePointer($cs);
                            $buffer = $cs.$lookBack;
                            $cs = $this.$lexemes;
                            if ($cs.$ch != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($cs.$lookAhead == (-536870821)) {
                                jur_Lexer_movePointer($cs);
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            jur_Lexer_movePointer($cs);
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$ch == (-536870819))
                                break d;
                            jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass) {
                                $alt = var$10.$lookAhead;
                                if ($alt != (-536870819) && $alt != (-536870821) && $buffer >= 0) {
                                    jur_Lexer_movePointer(var$10);
                                    var$10 = $this.$lexemes;
                                    $cur = var$10.$ch;
                                    if (var$10.$curST === null ? 0 : 1)
                                        break c;
                                    if ($cur < 0) {
                                        $alt = var$10.$lookAhead;
                                        if ($alt != (-536870819) && $alt != (-536870821) && $buffer >= 0)
                                            break c;
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        jur_CharClass_add($res, $buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    jur_Lexer_movePointer($this.$lexemes);
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 45;
                            jur_Lexer_movePointer($this.$lexemes);
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                jur_CharClass_add0($res, $buffer);
                                $buffer = (-1);
                            }
                            jur_Lexer_movePointer($this.$lexemes);
                            $negative = 0;
                            $cs = $this.$lexemes;
                            if ($cs.$ch == (-536870818)) {
                                jur_Lexer_movePointer($cs);
                                $negative = 1;
                            }
                            if (!$intersection)
                                jur_CharClass_union($res, jur_Pattern_processRangeExpression($this, $negative));
                            else
                                jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            jur_Lexer_movePointer($this.$lexemes);
                            break d;
                        case -536870819:
                            break;
                        case -536870818:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 94;
                            jur_Lexer_movePointer($this.$lexemes);
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $cs = $this.$lexemes.$curST;
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                jur_CharClass_add1($res, $cs);
                                $buffer = (-1);
                            }
                            jur_Lexer_movePointer($this.$lexemes);
                            break d;
                        default:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $cs = $this.$lexemes;
                            jur_Lexer_movePointer($cs);
                            $buffer = $cs.$lookBack;
                            break d;
                    }
                    if ($buffer >= 0)
                        jur_CharClass_add0($res, $buffer);
                    $buffer = 93;
                    jur_Lexer_movePointer($this.$lexemes);
                }
                $firstInClass = 0;
            }
            $res = new jur_PatternSyntaxException;
            var$11 = var$10.$orig;
            $buffer = var$10.$curToc;
            $res.$suppressionEnabled = 1;
            $res.$writableStackTrace = 1;
            $res.$index1 = (-1);
            $res.$desc = $rt_s(40);
            $res.$pattern = var$11;
            $res.$index1 = $buffer;
            $rt_throw($res);
        }
        $res = new jur_PatternSyntaxException;
        var$10 = $this.$lexemes;
        var$11 = var$10.$orig;
        $buffer = var$10.$curToc;
        $res.$suppressionEnabled = 1;
        $res.$writableStackTrace = 1;
        $res.$index1 = (-1);
        $res.$desc = $rt_s(40);
        $res.$pattern = var$11;
        $res.$index1 = $buffer;
        $rt_throw($res);
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            jur_CharClass_add0($res, $buffer);
        return $res;
    }
    $res = new jur_PatternSyntaxException;
    var$11 = var$10.$orig;
    $alt = var$10.$curToc - 1 | 0;
    $res.$suppressionEnabled = 1;
    $res.$writableStackTrace = 1;
    $res.$index1 = (-1);
    $res.$desc = $rt_s(40);
    $res.$pattern = var$11;
    $res.$index1 = $alt;
    $rt_throw($res);
},
jur_Pattern_processCharSet = ($this, $ch) => {
    let $isSupplCodePoint, var$3, var$4, var$5, var$6, var$7;
    $isSupplCodePoint = $ch >= 65536 && $ch <= 1114111 ? 1 : 0;
    var$3 = $this.$flags0;
    if ((var$3 & 2) != 2 ? 0 : 1) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            var$4 = new jur_CICharSet;
            $ch = $ch & 65535;
            var$5 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$5 + 1 | 0;
            var$6 = new jl_AbstractStringBuilder;
            var$6.$buffer = $rt_createCharArray(20);
            var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
            var$4.$charCount0 = 1;
            var$4.$ch3 = $ch;
            var$4.$supplement = jur_Pattern_getSupplement($ch);
            return var$4;
        }
        if (((var$3 & 64) != 64 ? 0 : 1) && $ch > 128) {
            if ($isSupplCodePoint) {
                var$4 = new jur_UCISupplCharSet;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                var$6 = new jl_AbstractStringBuilder;
                var$6.$buffer = $rt_createCharArray(20);
                var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
                var$4.$charCount0 = 1;
                var$4.$charCount0 = 2;
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                }
                $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch);
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                }
                var$4.$ch4 = jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch);
                return var$4;
            }
            if ($ch <= 57343 && $ch >= 56320 ? 1 : 0) {
                var$4 = new jur_LowSurrogateCharSet;
                $ch = $ch & 65535;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                var$6 = new jl_AbstractStringBuilder;
                var$6.$buffer = $rt_createCharArray(20);
                var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
                var$4.$low = $ch;
                return var$4;
            }
            if ($ch <= 56319 && $ch >= 55296 ? 1 : 0) {
                var$4 = new jur_HighSurrogateCharSet;
                $ch = $ch & 65535;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                var$6 = new jl_AbstractStringBuilder;
                var$6.$buffer = $rt_createCharArray(20);
                var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
                var$4.$high = $ch;
                return var$4;
            }
            var$4 = new jur_UCICharSet;
            $ch = $ch & 65535;
            var$5 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$5 + 1 | 0;
            var$6 = new jl_AbstractStringBuilder;
            var$6.$buffer = $rt_createCharArray(20);
            var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
            var$4.$charCount0 = 1;
            if (jl_Character_upperCaseMapping === null) {
                if (jl_Character_$$metadata$$1 === null)
                    jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
            }
            $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch) & 65535;
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
            }
            var$4.$ch2 = jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch) & 65535;
            return var$4;
        }
    }
    if ($isSupplCodePoint) {
        var$4 = new jur_SupplCharSet;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
        var$4.$charCount0 = 1;
        var$4.$charCount0 = 2;
        var$4.$ch1 = $ch;
        var$7 = (jl_Character_toChars($ch)).data;
        var$4.$high0 = var$7[0];
        var$4.$low0 = var$7[1];
        return var$4;
    }
    if ($ch <= 57343 && $ch >= 56320 ? 1 : 0) {
        var$4 = new jur_LowSurrogateCharSet;
        $ch = $ch & 65535;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
        var$4.$low = $ch;
        return var$4;
    }
    if ($ch <= 56319 && $ch >= 55296 ? 1 : 0) {
        var$4 = new jur_HighSurrogateCharSet;
        $ch = $ch & 65535;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
        var$4.$high = $ch;
        return var$4;
    }
    var$4 = new jur_CharSet;
    $ch = $ch & 65535;
    var$5 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$5 + 1 | 0;
    var$6 = new jl_AbstractStringBuilder;
    var$6.$buffer = $rt_createCharArray(20);
    var$4.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$5, 10)).$toString();
    var$4.$charCount0 = 1;
    var$4.$ch0 = $ch;
    return var$4;
},
jur_Pattern_processRangeSet = ($this, $charClass) => {
    let $surrogates, var$3, $lowHighSurrRangeSet, var$5, var$6, var$7;
    if (!jur_AbstractCharClass_hasLowHighSurrogates($charClass)) {
        if ($charClass.$mayContainSupplCodepoints) {
            if (!$charClass.$hasUCI()) {
                $surrogates = new jur_SupplRangeSet;
                var$3 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$3 + 1 | 0;
                $lowHighSurrRangeSet = new jl_AbstractStringBuilder;
                $lowHighSurrRangeSet.$buffer = $rt_createCharArray(20);
                $surrogates.$index = (jl_AbstractStringBuilder_insert0($lowHighSurrRangeSet, $lowHighSurrRangeSet.$length0, var$3, 10)).$toString();
                $surrogates.$chars0 = $charClass.$getInstance();
                $surrogates.$alt0 = $charClass.$alt;
                return $surrogates;
            }
            $surrogates = new jur_UCISupplRangeSet;
            var$3 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$3 + 1 | 0;
            $lowHighSurrRangeSet = new jl_AbstractStringBuilder;
            $lowHighSurrRangeSet.$buffer = $rt_createCharArray(20);
            $surrogates.$index = (jl_AbstractStringBuilder_insert0($lowHighSurrRangeSet, $lowHighSurrRangeSet.$length0, var$3, 10)).$toString();
            $surrogates.$chars0 = $charClass.$getInstance();
            $surrogates.$alt0 = $charClass.$alt;
            return $surrogates;
        }
        if ($charClass.$hasUCI()) {
            $surrogates = new jur_UCIRangeSet;
            var$3 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$3 + 1 | 0;
            $lowHighSurrRangeSet = new jl_AbstractStringBuilder;
            $lowHighSurrRangeSet.$buffer = $rt_createCharArray(20);
            $surrogates.$index = (jl_AbstractStringBuilder_insert0($lowHighSurrRangeSet, $lowHighSurrRangeSet.$length0, var$3, 10)).$toString();
            $surrogates.$charCount0 = 1;
            $surrogates.$chars2 = $charClass.$getInstance();
            $surrogates.$alt2 = $charClass.$alt;
            return $surrogates;
        }
        $surrogates = new jur_RangeSet;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        $lowHighSurrRangeSet = new jl_AbstractStringBuilder;
        $lowHighSurrRangeSet.$buffer = $rt_createCharArray(20);
        $surrogates.$index = (jl_AbstractStringBuilder_insert0($lowHighSurrRangeSet, $lowHighSurrRangeSet.$length0, var$3, 10)).$toString();
        $surrogates.$charCount0 = 1;
        $surrogates.$chars1 = $charClass.$getInstance();
        $surrogates.$alt3 = $charClass.$alt;
        return $surrogates;
    }
    $surrogates = jur_AbstractCharClass_getSurrogates($charClass);
    $lowHighSurrRangeSet = new jur_LowHighSurrogateRangeSet;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $lowHighSurrRangeSet.$index = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, var$3, 10)).$toString();
    $lowHighSurrRangeSet.$surrChars = $surrogates;
    $lowHighSurrRangeSet.$alt1 = $surrogates.$alt;
    if ($charClass.$mayContainSupplCodepoints) {
        if (!$charClass.$hasUCI()) {
            $surrogates = new jur_CompositeRangeSet;
            var$5 = new jur_SupplRangeSet;
            $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
            var$3 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$3 + 1 | 0;
            var$6 = new jl_AbstractStringBuilder;
            var$6.$buffer = $rt_createCharArray(20);
            var$5.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$3, 10)).$toString();
            var$5.$chars0 = $charClass;
            var$5.$alt0 = $charClass.$alt;
            var$3 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$3 + 1 | 0;
            $charClass = new jl_AbstractStringBuilder;
            $charClass.$buffer = $rt_createCharArray(20);
            $surrogates.$index = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length0, var$3, 10)).$toString();
            $surrogates.$withoutSurrogates = var$5;
            $surrogates.$withSurrogates = $lowHighSurrRangeSet;
            return $surrogates;
        }
        $surrogates = new jur_CompositeRangeSet;
        var$5 = new jur_UCISupplRangeSet;
        var$6 = jur_AbstractCharClass_getWithoutSurrogates($charClass);
        var$7 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$7 + 1 | 0;
        $charClass = new jl_AbstractStringBuilder;
        $charClass.$buffer = $rt_createCharArray(20);
        var$5.$index = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length0, var$7, 10)).$toString();
        var$5.$chars0 = var$6;
        var$5.$alt0 = var$6.$alt;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        $charClass = new jl_AbstractStringBuilder;
        $charClass.$buffer = $rt_createCharArray(20);
        $surrogates.$index = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length0, var$3, 10)).$toString();
        $surrogates.$withoutSurrogates = var$5;
        $surrogates.$withSurrogates = $lowHighSurrRangeSet;
        return $surrogates;
    }
    if ($charClass.$hasUCI()) {
        $surrogates = new jur_CompositeRangeSet;
        var$5 = new jur_UCIRangeSet;
        $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        var$5.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$3, 10)).$toString();
        var$5.$charCount0 = 1;
        var$5.$chars2 = $charClass;
        var$5.$alt2 = $charClass.$alt;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        $charClass = new jl_AbstractStringBuilder;
        $charClass.$buffer = $rt_createCharArray(20);
        $surrogates.$index = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length0, var$3, 10)).$toString();
        $surrogates.$withoutSurrogates = var$5;
        $surrogates.$withSurrogates = $lowHighSurrRangeSet;
        return $surrogates;
    }
    $surrogates = new jur_CompositeRangeSet;
    var$5 = new jur_RangeSet;
    $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    var$6 = new jl_AbstractStringBuilder;
    var$6.$buffer = $rt_createCharArray(20);
    var$5.$index = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, var$3, 10)).$toString();
    var$5.$charCount0 = 1;
    var$5.$chars1 = $charClass;
    var$5.$alt3 = $charClass.$alt;
    var$3 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$3 + 1 | 0;
    $charClass = new jl_AbstractStringBuilder;
    $charClass.$buffer = $rt_createCharArray(20);
    $surrogates.$index = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length0, var$3, 10)).$toString();
    $surrogates.$withoutSurrogates = var$5;
    $surrogates.$withSurrogates = $lowHighSurrRangeSet;
    return $surrogates;
},
jur_Pattern_compile0 = $pattern => {
    return jur_Pattern_compile($pattern, 0);
},
jur_Pattern_getSupplement = $ch => {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
},
jur_MatchResult = $rt_classWithoutFields(0);
function jur_Matcher() {
    let a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start10 = null;
    a.$string0 = null;
    a.$matchResult = null;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$appendPos = 0;
    a.$replacement0 = null;
    a.$processedRepl = null;
    a.$replacementParts = null;
}
let jur_Matcher_processReplacement = ($this, $replacement) => {
    let $res, $gr, $group, $sb, $i, var$7, $repl, $index, $replacementPos, var$11, var$12, $nextBackSlashed, $$je;
    $res = $this.$replacement0;
    if ($res !== null) {
        if ($res === $replacement)
            $gr = 1;
        else if (!($replacement instanceof jl_String))
            $gr = 0;
        else {
            $group = $replacement;
            $gr = $res.$nativeString !== $group.$nativeString ? 0 : 1;
        }
        if ($gr) {
            if ($this.$replacementParts === null)
                return $this.$processedRepl;
            $sb = new jl_StringBuilder;
            $sb.$buffer = $rt_createCharArray(16);
            $i = 0;
            $res = $sb;
            while (true) {
                $replacement = $this.$replacementParts;
                $gr = $rt_compare($i, $replacement.$size1);
                if ($gr >= 0) {
                    $replacement = new jl_String;
                    var$7 = $sb.$buffer;
                    $repl = var$7.data;
                    $index = $sb.$length0;
                    $replacementPos = $repl.length;
                    if ($index >= 0 && $index <= ($replacementPos - 0 | 0)) {
                        $replacement.$nativeString = $rt_charArrayToString(var$7.data, 0, $index);
                        return $replacement;
                    }
                    $replacement = new jl_IndexOutOfBoundsException;
                    $replacement.$suppressionEnabled = 1;
                    $replacement.$writableStackTrace = 1;
                    $rt_throw($replacement);
                }
                if ($i < 0)
                    break;
                if ($gr >= 0)
                    break;
                $replacement = $replacement.$array0.data[$i];
                jl_AbstractStringBuilder_insert($res, $sb.$length0, $replacement === null ? $rt_s(1) : $replacement.$toString());
                $i = $i + 1 | 0;
            }
            $replacement = new jl_IndexOutOfBoundsException;
            $replacement.$suppressionEnabled = 1;
            $replacement.$writableStackTrace = 1;
            $rt_throw($replacement);
        }
    }
    $this.$replacement0 = $replacement;
    $repl = $rt_createCharArray($replacement.$nativeString.length);
    var$11 = $repl.data;
    $gr = 0;
    var$12 = var$11.length;
    while (true) {
        if ($gr >= var$12) {
            $res = new jl_StringBuilder;
            $res.$buffer = $rt_createCharArray(16);
            $this.$replacementParts = null;
            $index = 0;
            $replacementPos = 0;
            $nextBackSlashed = 0;
            $sb = $res;
            a: {
                b: while (true) {
                    if ($index >= var$12) {
                        c: {
                            $replacement = $this.$replacementParts;
                            if ($replacement !== null) {
                                $index = $res.$length0;
                                $gr = $rt_compare($replacementPos, $index);
                                if ($gr) {
                                    if ($gr <= 0 && $replacementPos >= 0 && $index <= $sb.$length0) {
                                        $group = new jl_String;
                                        var$7 = $sb.$buffer;
                                        $repl = var$7.data;
                                        $gr = $index - $replacementPos | 0;
                                        $index = $repl.length;
                                        if ($replacementPos >= 0 && $gr >= 0 && $gr <= ($index - $replacementPos | 0)) {
                                            $group.$nativeString = $rt_charArrayToString(var$7.data, $replacementPos, $gr);
                                            ju_ArrayList_ensureCapacity($replacement, $replacement.$size1 + 1 | 0);
                                            var$7 = $replacement.$array0.data;
                                            $index = $replacement.$size1;
                                            $replacement.$size1 = $index + 1 | 0;
                                            var$7[$index] = $group;
                                            $replacement.$modCount = $replacement.$modCount + 1 | 0;
                                            break c;
                                        }
                                        $replacement = new jl_IndexOutOfBoundsException;
                                        jl_Exception__init_0($replacement);
                                        $rt_throw($replacement);
                                    }
                                    $replacement = new jl_IndexOutOfBoundsException;
                                    $replacement.$suppressionEnabled = 1;
                                    $replacement.$writableStackTrace = 1;
                                    jl_Throwable_fillInStackTrace($replacement);
                                    $rt_throw($replacement);
                                }
                            }
                        }
                        $replacement = new jl_String;
                        var$7 = $res.$buffer;
                        $repl = var$7.data;
                        $index = $res.$length0;
                        $replacementPos = $repl.length;
                        if ($index >= 0 && $index <= ($replacementPos - 0 | 0)) {
                            $replacement.$nativeString = $rt_charArrayToString(var$7.data, 0, $index);
                            return $replacement;
                        }
                        $replacement = new jl_IndexOutOfBoundsException;
                        $replacement.$suppressionEnabled = 1;
                        $replacement.$writableStackTrace = 1;
                        $rt_throw($replacement);
                    }
                    if (var$11[$index] == 92 && !$nextBackSlashed) {
                        $nextBackSlashed = 1;
                        $index = $index + 1 | 0;
                    }
                    d: {
                        if ($nextBackSlashed) {
                            if ($index >= var$12)
                                break b;
                            $gr = var$11[$index];
                            $nextBackSlashed = $res.$length0;
                            jl_AbstractStringBuilder_insertSpace($sb, $nextBackSlashed, $nextBackSlashed + 1 | 0);
                            $sb.$buffer.data[$nextBackSlashed] = $gr;
                            $nextBackSlashed = 0;
                        } else if (var$11[$index] != 36) {
                            $gr = var$11[$index];
                            $i = $res.$length0;
                            jl_AbstractStringBuilder_insertSpace($sb, $i, $i + 1 | 0);
                            $sb.$buffer.data[$i] = $gr;
                        } else {
                            if ($this.$replacementParts === null) {
                                $replacement = new ju_ArrayList;
                                $replacement.$array0 = $rt_createArray(jl_Object, 10);
                                $this.$replacementParts = $replacement;
                            }
                            e: {
                                try {
                                    $replacement = new jl_String;
                                    $index = $index + 1 | 0;
                                    jl_String__init_1($replacement, $repl, $index, 1);
                                    $gr = jl_Integer_parseInt($replacement);
                                    if ($replacementPos == jl_StringBuilder_length($res))
                                        break e;
                                    ju_ArrayList_add($this.$replacementParts, jl_StringBuilder_subSequence($res, $replacementPos, jl_StringBuilder_length($res)));
                                    $replacementPos = jl_StringBuilder_length($res);
                                    break e;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_Exception) {
                                        break a;
                                    } else {
                                        throw $$e;
                                    }
                                }
                            }
                            try {
                                ju_ArrayList_add($this.$replacementParts, jur_Matcher$1__init_0($this, $gr));
                                $group = jur_Matcher_group($this, $gr);
                                $replacementPos = $replacementPos + jl_String_length($group) | 0;
                                jl_StringBuilder_append($res, $group);
                                break d;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Exception) {
                                    break a;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                    }
                    $index = $index + 1 | 0;
                }
                $replacement = new jl_IndexOutOfBoundsException;
                $replacement.$suppressionEnabled = 1;
                $replacement.$writableStackTrace = 1;
                $rt_throw($replacement);
            }
            $replacement = new jl_IllegalArgumentException;
            $replacement.$suppressionEnabled = 1;
            $replacement.$writableStackTrace = 1;
            $replacement.$message = $rt_s(40);
            $rt_throw($replacement);
        }
        if ($gr < 0)
            break;
        if ($gr >= $replacement.$nativeString.length)
            break;
        var$11[$gr] = $replacement.$nativeString.charCodeAt($gr);
        $gr = $gr + 1 | 0;
    }
    $replacement = new jl_StringIndexOutOfBoundsException;
    $replacement.$suppressionEnabled = 1;
    $replacement.$writableStackTrace = 1;
    $rt_throw($replacement);
},
jur_Matcher_group = ($this, $group) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = $this.$matchResult;
    var$3 = var$2.$valid;
    if (!var$3) {
        var$2 = new jl_IllegalStateException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    if ($group >= 0) {
        var$4 = $rt_compare($group, var$2.$groupCount);
        if (var$4 < 0) {
            a: {
                var$5 = var$2.$groupBounds.data;
                var$6 = $group * 2 | 0;
                if (var$5[var$6] < 0)
                    var$2 = null;
                else {
                    var$2 = var$2.$string2;
                    if (!var$3) {
                        var$2 = new jl_IllegalStateException;
                        var$2.$suppressionEnabled = 1;
                        var$2.$writableStackTrace = 1;
                        $rt_throw(var$2);
                    }
                    if ($group >= 0 && var$4 < 0) {
                        var$7 = var$5[var$6];
                        if (!var$3) {
                            var$2 = new jl_IllegalStateException;
                            var$2.$suppressionEnabled = 1;
                            var$2.$writableStackTrace = 1;
                            $rt_throw(var$2);
                        }
                        if ($group < 0)
                            break a;
                        if (var$4 >= 0)
                            break a;
                        $group = var$5[var$6 + 1 | 0];
                        var$2 = jl_String_substring(var$2, var$7, $group);
                    } else {
                        var$2 = new jl_IndexOutOfBoundsException;
                        var$8 = new jl_StringBuilder;
                        var$8.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $group, 10);
                        var$9 = new jl_String;
                        var$5 = var$8.$buffer;
                        var$10 = var$5.data;
                        var$7 = var$8.$length0;
                        var$6 = var$10.length;
                        if (var$7 >= 0 && var$7 <= (var$6 - 0 | 0)) {
                            var$9.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
                            var$2.$suppressionEnabled = 1;
                            var$2.$writableStackTrace = 1;
                            var$2.$message = var$9;
                            $rt_throw(var$2);
                        }
                        var$2 = new jl_IndexOutOfBoundsException;
                        var$2.$suppressionEnabled = 1;
                        var$2.$writableStackTrace = 1;
                        $rt_throw(var$2);
                    }
                }
                return var$2;
            }
            var$2 = new jl_IndexOutOfBoundsException;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $group, 10);
            var$9 = new jl_String;
            var$5 = var$8.$buffer;
            var$10 = var$5.data;
            var$7 = var$8.$length0;
            var$6 = var$10.length;
            if (var$7 >= 0 && var$7 <= (var$6 - 0 | 0)) {
                var$9.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$9;
                $rt_throw(var$2);
            }
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $group, 10);
    var$9 = new jl_String;
    var$5 = var$8.$buffer;
    var$10 = var$5.data;
    var$7 = var$8.$length0;
    var$6 = var$10.length;
    if (var$7 >= 0 && var$7 <= (var$6 - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$9;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
},
jur_Matcher_find0 = ($this, $start) => {
    let $stringLength, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $stringLength = $this.$string0.$nativeString.length;
    if ($start >= 0 && $start <= $stringLength) {
        var$3 = $this.$matchResult;
        var$3.$valid = 0;
        var$3.$mode0 = 2;
        var$4 = var$3.$groupBounds.data;
        var$5 = 0;
        var$6 = var$4.length;
        if (var$5 > var$6) {
            var$3 = new jl_IllegalArgumentException;
            jl_Throwable__init_(var$3);
            $rt_throw(var$3);
        }
        while (var$5 < var$6) {
            var$7 = var$5 + 1 | 0;
            var$4[var$5] = (-1);
            var$5 = var$7;
        }
        var$4 = var$3.$consumers.data;
        var$5 = 0;
        var$6 = var$4.length;
        if (var$5 > var$6) {
            var$3 = new jl_IllegalArgumentException;
            jl_Throwable__init_(var$3);
            $rt_throw(var$3);
        }
        while (var$5 < var$6) {
            var$7 = var$5 + 1 | 0;
            var$4[var$5] = (-1);
            var$5 = var$7;
        }
        var$3.$startIndex = var$3.$leftBound;
        var$3.$mode0 = 1;
        var$3.$startIndex = $start;
        $stringLength = var$3.$previousMatch;
        if ($stringLength < 0)
            $stringLength = $start;
        var$3.$previousMatch = $stringLength;
        $start = $this.$start10.$find0($start, $this.$string0, var$3);
        if ($start == (-1))
            $this.$matchResult.$hitEnd = 1;
        if ($start >= 0) {
            var$3 = $this.$matchResult;
            $start = var$3.$valid;
            if ($start) {
                var$4 = var$3.$groupBounds.data;
                if (var$4[0] == (-1)) {
                    var$5 = var$3.$startIndex;
                    var$4[0] = var$5;
                    var$4[1] = var$5;
                }
                if (!$start) {
                    var$3 = new jl_IllegalStateException;
                    var$3.$suppressionEnabled = 1;
                    var$3.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace(var$3);
                    $rt_throw(var$3);
                }
                if (0 < var$3.$groupCount) {
                    var$3.$previousMatch = var$4[1];
                    return 1;
                }
                var$3 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                jl_Object__init_(var$8);
                var$8.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, 0, 10);
                var$9 = new jl_String;
                var$4 = var$8.$buffer;
                var$10 = var$4.data;
                $stringLength = var$8.$length0;
                var$5 = var$10.length;
                if ($stringLength >= 0 && $stringLength <= (var$5 - 0 | 0)) {
                    var$9.$nativeString = $rt_charArrayToString(var$4.data, 0, $stringLength);
                    var$3.$suppressionEnabled = 1;
                    var$3.$writableStackTrace = 1;
                    var$3.$message = var$9;
                    $rt_throw(var$3);
                }
                var$3 = new jl_IndexOutOfBoundsException;
                var$3.$suppressionEnabled = 1;
                var$3.$writableStackTrace = 1;
                $rt_throw(var$3);
            }
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $start, 10);
    var$9 = new jl_String;
    var$4 = var$8.$buffer;
    var$10 = var$4.data;
    $stringLength = var$8.$length0;
    var$5 = var$10.length;
    if ($stringLength >= 0 && $stringLength <= (var$5 - 0 | 0)) {
        var$9.$nativeString = $rt_charArrayToString(var$4.data, 0, $stringLength);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$9;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    $rt_throw(var$3);
},
jur_Matcher_find = $this => {
    let $length, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $length = $this.$string0.$nativeString.length;
    var$2 = $this.$matchResult;
    if (!var$2.$transparentBounds)
        $length = $this.$rightBound0;
    if (var$2.$startIndex >= 0 && var$2.$mode0 == 1) {
        var$3 = var$2.$valid;
        if (!var$3) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$4 = $rt_compare(0, var$2.$groupCount);
        if (var$4 >= 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, 0, 10);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$7.data;
            $length = var$5.$length0;
            var$9 = var$8.length;
            if ($length >= 0 && $length <= (var$9 - 0 | 0)) {
                var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, $length);
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$6;
                $rt_throw(var$2);
            }
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$7 = var$2.$groupBounds.data;
        var$10 = var$7[1];
        var$2.$startIndex = var$10;
        if (!var$3) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if (var$4 >= 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, 0, 10);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$7.data;
            $length = var$5.$length0;
            var$9 = var$8.length;
            if ($length >= 0 && $length <= (var$9 - 0 | 0)) {
                var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, $length);
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$6;
                $rt_throw(var$2);
            }
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$9 = var$7[1];
        if (!var$3) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if (var$4 < 0) {
            if (var$9 == var$7[0])
                var$2.$startIndex = var$10 + 1 | 0;
            var$11 = var$2.$startIndex;
            return var$11 <= $length && jur_Matcher_find0($this, var$11) ? 1 : 0;
        }
        var$2 = new jl_IndexOutOfBoundsException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, 0, 10);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$8 = var$7.data;
        $length = var$5.$length0;
        var$9 = var$8.length;
        if ($length >= 0 && $length <= (var$9 - 0 | 0)) {
            var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, $length);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$6;
            $rt_throw(var$2);
        }
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    return jur_Matcher_find0($this, $this.$leftBound0);
},
jur_Matcher__init_0 = ($this, $pat, $cs) => {
    let var$3, var$4;
    $this.$leftBound0 = (-1);
    $this.$rightBound0 = (-1);
    $this.$pat = $pat;
    $this.$start10 = $pat.$start9;
    $this.$string0 = $cs;
    $this.$leftBound0 = 0;
    var$3 = $cs.$nativeString.length;
    $this.$rightBound0 = var$3;
    var$4 = jur_MatchResultImpl__init_0($cs, $this.$leftBound0, var$3, $pat.$globalGroupIndex, $pat.$compCount + 1 | 0, $pat.$consCount + 1 | 0);
    $this.$matchResult = var$4;
    var$4.$anchoringBounds = 1;
},
jur_Matcher__init_ = (var_0, var_1) => {
    let var_2 = new jur_Matcher();
    jur_Matcher__init_0(var_2, var_0, var_1);
    return var_2;
},
otji_IDBFactory = $rt_classWithoutFields(),
otjde_EventListener = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0() {
    jl_Object.call(this);
    this.$_02 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$2 = var$1.$_02.result;
    var$3 = otji_IDBObjectStoreParameters_create$js_body$_1();
    var$2.createObjectStore("FILE_DATA", var$3);
},
otji_EventHandler = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1() {
    let a = this; jl_Object.call(a);
    a.$_014 = null;
    a.$_14 = null;
    a.$_22 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0 = var$1 => {
    let var$2, var$3;
    var$1 = var$1;
    var$2 = var$1.$_014;
    var$3 = var$1.$_14;
    var$1 = var$1.$_22;
    var$2.$dataBase = var$3.result;
    cgxgbtft_LocalDBStorage_readAllFilesAsync(var$2, var$1);
};
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2() {
    let a = this; jl_Object.call(a);
    a.$_011 = null;
    a.$_13 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = var$1;
    var$2 = var$1.$_011;
    var$1 = var$1.$_13;
    if (jl_System_errCache === null) {
        var$3 = new otcic_JSStderrPrintStream;
        var$4 = null;
        var$5 = null;
        jl_Object__init_(var$3);
        var$3.$out = var$4;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_0(var$4, 16);
        var$3.$sb = var$4;
        var$3.$buffer1 = $rt_createCharArray(32);
        var$3.$autoFlush = 0;
        var$3.$charset = var$5;
        jl_System_errCache = var$3;
    }
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$6 = var$3.$length0;
    var$5 = var$3;
    var$7 = $rt_s(192);
    var$4 = var$5;
    jl_StringBuilder_insert0(var$4, var$6, var$7);
    jl_StringBuilder_insert0(var$4, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$2 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    var$10 = var$3.$length0;
    var$11 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
        var$2.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        $rt_putStderr($rt_ustr(var$2));
        $rt_putStderr("\n");
        var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
        return;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
jl_SecurityException = $rt_classWithoutFields(jl_RuntimeException),
jl_ReflectiveOperationException = $rt_classWithoutFields(jl_Exception),
jl_NoSuchMethodException = $rt_classWithoutFields(jl_ReflectiveOperationException),
ju_Enumeration = $rt_classWithoutFields(0),
ju_Hashtable$1 = $rt_classWithoutFields(),
ju_Iterator = $rt_classWithoutFields(0),
ju_Hashtable$2 = $rt_classWithoutFields();
function jur_MatchResultImpl() {
    let a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string2 = null;
    a.$groupCount = 0;
    a.$valid = 0;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode0 = 0;
}
let jur_MatchResultImpl__init_ = ($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) => {
    let var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount = var$7;
    var$8 = $rt_createIntArray(var$7 * 2 | 0);
    $this.$groupBounds = var$8;
    var$9 = $rt_createIntArray($consumersCount);
    var$10 = var$9.data;
    $this.$consumers = var$9;
    $groupCount = 0;
    $consumersCount = var$10.length;
    var$11 = $rt_compare($groupCount, $consumersCount);
    if (var$11 > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while ($groupCount < $consumersCount) {
        var$7 = $groupCount + 1 | 0;
        var$10[$groupCount] = (-1);
        $groupCount = var$7;
    }
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    var$8 = var$8.data;
    var$7 = 0;
    var$12 = var$8.length;
    $groupCount = $rt_compare(var$7, var$12);
    if ($groupCount > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while (var$7 < var$12) {
        $compQuantCount = var$7 + 1 | 0;
        var$8[var$7] = (-1);
        var$7 = $compQuantCount;
    }
    $this.$valid = 0;
    $this.$mode0 = 2;
    $compQuantCount = 0;
    if ($groupCount > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while ($compQuantCount < var$12) {
        $groupCount = $compQuantCount + 1 | 0;
        var$8[$compQuantCount] = (-1);
        $compQuantCount = $groupCount;
    }
    $groupCount = 0;
    if (var$11 > 0) {
        $string = new jl_IllegalArgumentException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    while ($groupCount < $consumersCount) {
        var$7 = $groupCount + 1 | 0;
        var$10[$groupCount] = (-1);
        $groupCount = var$7;
    }
    if ($string !== null)
        $this.$string2 = $string;
    if ($leftBound >= 0) {
        $this.$leftBound = $leftBound;
        $this.$rightBound = $rightBound;
    }
    $this.$startIndex = $this.$leftBound;
},
jur_MatchResultImpl__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException),
jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException),
jlr_Modifier = $rt_classWithoutFields(),
jlr_Modifier_modifierNames = null,
jlr_Modifier_canonicalOrder = null,
jlr_Modifier_toString = $mod => {
    let $sb, $modifierNames, $index, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $modifier;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(16);
    $modifierNames = jlr_Modifier_getModifierNames();
    $index = 0;
    var$5 = jlr_Modifier_canonicalOrder.data;
    var$6 = var$5.length;
    var$7 = 0;
    var$8 = $sb;
    while (var$7 < var$6) {
        if ($mod & var$5[var$7]) {
            var$9 = $sb.$length0;
            if (var$9 > 0) {
                jl_AbstractStringBuilder_insertSpace(var$8, var$9, var$9 + 1 | 0);
                var$8.$buffer.data[var$9] = 32;
            }
            var$10 = $modifierNames.data[$index];
            jl_AbstractStringBuilder_insert(var$8, $sb.$length0, var$10);
        }
        $index = $index + 1 | 0;
        var$7 = var$7 + 1 | 0;
    }
    var$10 = new jl_String;
    $modifierNames = $sb.$buffer;
    var$11 = $modifierNames.data;
    $index = $sb.$length0;
    $modifier = var$11.length;
    if ($index >= 0 && $index <= ($modifier - 0 | 0)) {
        var$10.$nativeString = $rt_charArrayToString($modifierNames.data, 0, $index);
        return var$10;
    }
    $sb = new jl_IndexOutOfBoundsException;
    $sb.$suppressionEnabled = 1;
    $sb.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($sb);
    $rt_throw($sb);
},
jlr_Modifier_getModifierNames = () => {
    if (jlr_Modifier_modifierNames === null)
        jlr_Modifier_modifierNames = $rt_wrapArray(jl_String, [$rt_s(193), $rt_s(194), $rt_s(195), $rt_s(196), $rt_s(197), $rt_s(198), $rt_s(199), $rt_s(200), $rt_s(201), $rt_s(202), $rt_s(203), $rt_s(204)]);
    return jlr_Modifier_modifierNames;
},
jlr_Modifier__clinit_ = () => {
    jlr_Modifier_canonicalOrder = $rt_createIntArrayFromData([1, 4, 2, 1024, 8, 16, 128, 64, 32, 256, 2048, 512]);
},
ju_Arrays = $rt_classWithoutFields(),
ju_Arrays_binarySearch = ($a, $fromIndex, $toIndex, $key) => {
    let var$5, $u, var$7, $i, $e;
    if ($fromIndex > $toIndex) {
        var$5 = new jl_IllegalArgumentException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        $rt_throw(var$5);
    }
    $u = $toIndex - 1 | 0;
    while (true) {
        if ($fromIndex > $u)
            return ( -$fromIndex | 0) - 1 | 0;
        var$7 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$7[$i];
        if ($e == $key)
            break;
        if ($key >= $e)
            $fromIndex = $i + 1 | 0;
        else
            $u = $i - 1 | 0;
    }
    return $i;
},
ju_Arrays_equals = ($a, $a2) => {
    let var$3, var$4, var$5, var$6, var$7;
    if ($a === $a2)
        return 1;
    if ($a !== null && $a2 !== null) {
        $a = $a.data;
        $a2 = $a2.data;
        var$3 = $a.length;
        if (var$3 == $a2.length) {
            var$4 = 0;
            a: {
                while (true) {
                    if (var$4 >= var$3) {
                        var$4 = (-1);
                        break a;
                    }
                    var$5 = var$4 + 0 | 0;
                    var$6 = $a[var$5];
                    var$7 = $a2[var$5];
                    if (!(var$6 === var$7 ? 1 : var$6 === null ? (var$7 !== null ? 0 : 1) : var$6 !== var$7 ? 0 : 1))
                        break;
                    var$4 = var$4 + 1 | 0;
                }
            }
            return var$4 >= 0 ? 0 : 1;
        }
    }
    return 0;
},
jlr_AccessibleObject = $rt_classWithoutFields(),
jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException);
function jur_AbstractSet() {
    let a = this; jl_Object.call(a);
    a.$next0 = null;
    a.$isSecondPassVisited = 0;
    a.$index = null;
    a.$type0 = 0;
}
let jur_AbstractSet_counter = 0,
jur_AbstractSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $length;
    $length = $matchResult.$rightBound;
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_AbstractSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_AbstractSet_setType = ($this, $type) => {
    $this.$type0 = $type;
},
jur_AbstractSet_getType = $this => {
    return $this.$type0;
},
jur_AbstractSet_getQualifiedName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$index;
    var$2 = $this.$getName();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
    var$5.$buffer.data[var$4] = 60;
    var$6 = var$3.$length0;
    var$7 = var$1 === null ? $rt_s(1) : var$1;
    var$1 = var$5;
    jl_AbstractStringBuilder_insert(var$1, var$6, var$7);
    var$8 = var$3.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$8, var$8 + 1 | 0);
    var$5.$buffer.data[var$8] = 58;
    jl_AbstractStringBuilder_insert(var$1, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$8 = var$3.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$8, var$8 + 1 | 0);
    var$5.$buffer.data[var$8] = 62;
    var$1 = new jl_String;
    var$9 = var$3.$buffer;
    var$10 = var$9.data;
    var$4 = var$3.$length0;
    var$8 = var$10.length;
    if (var$4 >= 0 && var$4 <= (var$8 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$9.data, 0, var$4);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
},
jur_AbstractSet_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$index;
    var$2 = $this.$getName();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
    var$5.$buffer.data[var$4] = 60;
    var$6 = var$3.$length0;
    var$7 = var$1 === null ? $rt_s(1) : var$1;
    var$1 = var$5;
    jl_AbstractStringBuilder_insert(var$1, var$6, var$7);
    var$8 = var$3.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$8, var$8 + 1 | 0);
    var$5.$buffer.data[var$8] = 58;
    jl_AbstractStringBuilder_insert(var$1, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$8 = var$3.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$8, var$8 + 1 | 0);
    var$5.$buffer.data[var$8] = 62;
    var$1 = new jl_String;
    var$9 = var$3.$buffer;
    var$10 = var$9.data;
    var$4 = var$3.$length0;
    var$8 = var$10.length;
    if (var$4 >= 0 && var$4 <= (var$8 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$9.data, 0, var$4);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$1);
    $rt_throw(var$1);
},
jur_AbstractSet_getNext = $this => {
    return $this.$next0;
},
jur_AbstractSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_AbstractSet_first = ($this, $set) => {
    return 1;
},
jur_AbstractSet_processBackRefReplacement = $this => {
    return null;
},
jur_AbstractSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next0;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next0.$isSecondPassVisited = 1;
                $this.$next0 = $set;
            }
            $this.$next0.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$next0 = $set.$next0;
    }
},
jur_AbstractSet__clinit_ = () => {
    jur_AbstractSet_counter = 1;
},
jlr_Member = $rt_classWithoutFields(0);
function jlr_Constructor() {
    let a = this; jlr_AccessibleObject.call(a);
    a.$declaringClass = null;
    a.$name4 = null;
    a.$modifiers = 0;
    a.$accessLevel = 0;
    a.$parameterTypes = null;
    a.$callable = null;
}
let jlr_Constructor_toString = $this => {
    let $sb, var$2, var$3, var$4, $i, $parameterTypes, var$7, var$8, var$9, var$10;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(16);
    var$2 = jlr_Modifier_toString(otcir_Flags_getModifiers($this.$modifiers, $this.$accessLevel));
    var$3 = $sb.$length0;
    var$4 = $sb;
    jl_AbstractStringBuilder_insert(var$4, var$3, var$2);
    $i = $sb.$length0;
    if ($i > 0) {
        jl_AbstractStringBuilder_insertSpace(var$4, $i, $i + 1 | 0);
        var$4.$buffer.data[$i] = 32;
    }
    var$2 = $this.$declaringClass;
    if (var$2.$name === null)
        var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
    var$2 = var$2.$name;
    jl_AbstractStringBuilder_insert(var$4, $sb.$length0, var$2);
    $i = $sb.$length0;
    jl_AbstractStringBuilder_insertSpace(var$4, $i, $i + 1 | 0);
    var$4.$buffer.data[$i] = 40;
    $parameterTypes = $this.$parameterTypes.$clone0();
    $i = 0;
    while (true) {
        var$7 = $parameterTypes.data;
        if ($i >= var$7.length)
            break;
        if ($i > 0) {
            var$8 = $sb.$length0;
            jl_AbstractStringBuilder_insertSpace(var$4, var$8, var$8 + 1 | 0);
            var$4.$buffer.data[var$8] = 44;
        }
        var$2 = var$7[$i];
        if (var$2.$name === null)
            var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
        var$2 = var$2.$name;
        jl_AbstractStringBuilder_insert(var$4, $sb.$length0, var$2);
        $i = $i + 1 | 0;
    }
    var$9 = $sb.$length0;
    jl_AbstractStringBuilder_insertSpace(var$4, var$9, var$9 + 1 | 0);
    var$4.$buffer.data[var$9] = 41;
    var$2 = new jl_String;
    var$10 = $sb.$buffer;
    var$7 = var$10.data;
    $i = $sb.$length0;
    var$9 = var$7.length;
    if ($i >= 0 && $i <= (var$9 - 0 | 0)) {
        var$2.$nativeString = $rt_charArrayToString(var$10.data, 0, $i);
        return var$2;
    }
    $sb = new jl_IndexOutOfBoundsException;
    $sb.$suppressionEnabled = 1;
    $sb.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($sb);
    $rt_throw($sb);
},
jlr_Constructor_newInstance = ($this, $initargs) => {
    let $jsArgs, var$3, var$4, $i, $instance;
    if ($this.$modifiers & 1) {
        $jsArgs = new jl_InstantiationException;
        $jsArgs.$suppressionEnabled = 1;
        $jsArgs.$writableStackTrace = 1;
        $rt_throw($jsArgs);
    }
    if ($this.$callable === null) {
        $jsArgs = new jl_IllegalAccessException;
        $jsArgs.$suppressionEnabled = 1;
        $jsArgs.$writableStackTrace = 1;
        $rt_throw($jsArgs);
    }
    var$3 = $initargs.data;
    var$4 = var$3.length;
    if (var$4 != $this.$parameterTypes.data.length) {
        $jsArgs = new jl_IllegalArgumentException;
        $jsArgs.$suppressionEnabled = 1;
        $jsArgs.$writableStackTrace = 1;
        $rt_throw($jsArgs);
    }
    $i = 0;
    while ($i < var$4) {
        if (!($this.$parameterTypes.data[$i].$platformClass.$meta.primitive ? 1 : 0) && var$3[$i] !== null) {
            $jsArgs = $this.$parameterTypes.data[$i];
            $instance = var$3[$i];
            $jsArgs = $jsArgs.$platformClass;
            if (!($instance !== null && !(typeof $instance.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($instance.constructor, $jsArgs) ? 1 : 0)) {
                $jsArgs = new jl_IllegalArgumentException;
                $jsArgs.$suppressionEnabled = 1;
                $jsArgs.$writableStackTrace = 1;
                $rt_throw($jsArgs);
            }
        }
        if (($this.$parameterTypes.data[$i].$platformClass.$meta.primitive ? 1 : 0) && var$3[$i] === null) {
            $jsArgs = new jl_IllegalArgumentException;
            $jsArgs.$suppressionEnabled = 1;
            $jsArgs.$writableStackTrace = 1;
            $rt_throw($jsArgs);
        }
        $i = $i + 1 | 0;
    }
    $jsArgs = $initargs.data;
    $instance = new ($this.$declaringClass.$platformClass);
    $this.$callable.call($instance, $jsArgs);
    return $instance;
},
ju_Map$Entry = $rt_classWithoutFields(0);
function ju_MapEntry() {
    let a = this; jl_Object.call(a);
    a.$key = null;
    a.$value0 = null;
}
function ju_Hashtable$Entry() {
    let a = this; ju_MapEntry.call(a);
    a.$next2 = null;
    a.$hashcode = 0;
}
function jur_FSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex0 = 0;
}
let jur_FSet_posFSet = null,
jur_FSet_$callClinit = () => {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
},
jur_FSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $end, var$5, $shift;
    $end = $this.$groupIndex0;
    var$5 = $matchResult.$groupBounds.data;
    $shift = ($end * 2 | 0) + 1 | 0;
    $end = var$5[$shift];
    var$5[$shift] = $stringIndex;
    $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0) {
        $stringIndex = $this.$groupIndex0;
        $matchResult.$groupBounds.data[($stringIndex * 2 | 0) + 1 | 0] = $end;
    }
    return $shift;
},
jur_FSet_getGroupIndex = $this => {
    return $this.$groupIndex0;
},
jur_FSet_getName = $this => {
    return $rt_s(205);
},
jur_FSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FSet__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new jur_FSet$PossessiveFSet;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    var$1.$index = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, var$2, 10)).$toString();
    jur_FSet_posFSet = var$1;
};
function jur_Lexer() {
    let a = this; jl_Object.call(a);
    a.$pattern0 = null;
    a.$flags = 0;
    a.$mode = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index0 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
let jur_Lexer_decompTable = null,
jur_Lexer_singleDecompTable = null,
jur_Lexer_singleDecompTableSize = 0,
jur_Lexer__init_0 = ($this, $pattern, $flags) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$mode = 1;
    $this.$orig = $pattern;
    if (($flags & 16) > 0) {
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length0;
        var$5 = var$3;
        jl_AbstractStringBuilder_insert(var$5, var$4, $rt_s(206));
        var$6 = 0;
        while (true) {
            var$7 = jl_String_indexOf0($pattern, $rt_s(207), var$6);
            if (var$7 < 0)
                break;
            var$4 = var$7 + 2 | 0;
            var$8 = jl_String_substring($pattern, var$6, var$4);
            jl_AbstractStringBuilder_insert(var$5, var$3.$length0, var$8);
            jl_AbstractStringBuilder_insert(var$5, var$3.$length0, $rt_s(208));
            var$6 = var$4;
        }
        $pattern = jl_String_substring($pattern, var$6, $pattern.$nativeString.length);
        jl_AbstractStringBuilder_insert(var$5, var$3.$length0, $pattern);
        jl_AbstractStringBuilder_insert(var$5, var$3.$length0, $rt_s(207));
        $pattern = new jl_String;
        var$9 = var$3.$buffer;
        var$10 = var$9.data;
        var$6 = var$3.$length0;
        var$7 = var$10.length;
        if (var$6 >= 0 && var$6 <= (var$7 - 0 | 0))
            $pattern.$nativeString = $rt_charArrayToString(var$9.data, 0, var$6);
        else {
            $pattern = new jl_IndexOutOfBoundsException;
            $pattern.$suppressionEnabled = 1;
            $pattern.$writableStackTrace = 1;
            $rt_throw($pattern);
        }
    }
    $this.$pattern0 = $rt_createCharArray($pattern.$nativeString.length + 2 | 0);
    var$10 = $rt_createCharArray($pattern.$nativeString.length);
    var$9 = var$10.data;
    var$6 = 0;
    var$7 = var$9.length;
    while (true) {
        if (var$6 >= var$7) {
            jl_System_fastArraycopy(var$10, 0, $this.$pattern0, 0, $pattern.$nativeString.length);
            var$9 = $this.$pattern0.data;
            var$4 = var$9.length;
            var$9[var$4 - 1 | 0] = 0;
            var$9[var$4 - 2 | 0] = 0;
            $this.$patternFullLength = var$4;
            $this.$flags = $flags;
            jur_Lexer_movePointer($this);
            jur_Lexer_movePointer($this);
            return;
        }
        if (var$6 < 0)
            break;
        if (var$6 >= $pattern.$nativeString.length)
            break;
        var$9[var$6] = $pattern.$nativeString.charCodeAt(var$6);
        var$6 = var$6 + 1 | 0;
    }
    $pattern = new jl_StringIndexOutOfBoundsException;
    $pattern.$suppressionEnabled = 1;
    $pattern.$writableStackTrace = 1;
    $rt_throw($pattern);
},
jur_Lexer__init_ = (var_0, var_1) => {
    let var_2 = new jur_Lexer();
    jur_Lexer__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_Lexer_movePointer = $this => {
    let $reread, $nonCap, var$3, $cs, var$5, var$6, $behind, $mod, $negative, var$10, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index0;
    a: {
        while (true) {
            $reread = 0;
            $nonCap = $this.$index0 >= $this.$pattern0.data.length ? 0 : jur_Lexer_nextCodePoint($this);
            $this.$lookAhead = $nonCap;
            $this.$lookAheadST = null;
            if ($this.$mode == 4) {
                if ($nonCap != 92)
                    return;
                $nonCap = $this.$index0;
                var$3 = $this.$pattern0.data;
                if ($nonCap >= var$3.length)
                    $nonCap = 0;
                else {
                    $this.$prevNW = $nonCap;
                    if ($this.$flags & 4)
                        jur_Lexer_skipComments($this);
                    else
                        $this.$index0 = $nonCap + 1 | 0;
                    $nonCap = var$3[$this.$prevNW];
                }
                $this.$lookAhead = $nonCap;
                switch ($nonCap) {
                    case 69:
                        break;
                    default:
                        $this.$lookAhead = 92;
                        $this.$index0 = $this.$prevNW;
                        return;
                }
                $this.$mode = $this.$savedMode;
                $this.$lookAhead = $this.$index0 > ($this.$pattern0.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
            }
            b: {
                $nonCap = $this.$lookAhead;
                if ($nonCap == 92) {
                    $nonCap = $this.$index0 >= ($this.$pattern0.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                    c: {
                        d: {
                            $this.$lookAhead = $nonCap;
                            switch ($nonCap) {
                                case -1:
                                    $cs = new jur_PatternSyntaxException;
                                    var$5 = $this.$orig;
                                    $nonCap = $this.$index0;
                                    $cs.$suppressionEnabled = 1;
                                    $cs.$writableStackTrace = 1;
                                    $cs.$index1 = (-1);
                                    $cs.$desc = $rt_s(40);
                                    $cs.$pattern = var$5;
                                    $cs.$index1 = $nonCap;
                                    $rt_throw($cs);
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                case 16:
                                case 17:
                                case 18:
                                case 19:
                                case 20:
                                case 21:
                                case 22:
                                case 23:
                                case 24:
                                case 25:
                                case 26:
                                case 27:
                                case 28:
                                case 29:
                                case 30:
                                case 31:
                                case 32:
                                case 33:
                                case 34:
                                case 35:
                                case 36:
                                case 37:
                                case 38:
                                case 39:
                                case 40:
                                case 41:
                                case 42:
                                case 43:
                                case 44:
                                case 45:
                                case 46:
                                case 47:
                                case 58:
                                case 59:
                                case 60:
                                case 61:
                                case 62:
                                case 63:
                                case 64:
                                case 91:
                                case 92:
                                case 93:
                                case 94:
                                case 95:
                                case 96:
                                case 118:
                                    break;
                                case 48:
                                    $this.$lookAhead = jur_Lexer_readOctals($this);
                                    break b;
                                case 49:
                                case 50:
                                case 51:
                                case 52:
                                case 53:
                                case 54:
                                case 55:
                                case 56:
                                case 57:
                                    if ($this.$mode != 1)
                                        break b;
                                    $this.$lookAhead = (-2147483648) | $nonCap;
                                    break b;
                                case 65:
                                    $this.$lookAhead = (-2147483583);
                                    break b;
                                case 66:
                                    $this.$lookAhead = (-2147483582);
                                    break b;
                                case 67:
                                case 69:
                                case 70:
                                case 72:
                                case 73:
                                case 74:
                                case 75:
                                case 76:
                                case 77:
                                case 78:
                                case 79:
                                case 82:
                                case 84:
                                case 85:
                                case 86:
                                case 88:
                                case 89:
                                case 103:
                                case 104:
                                case 105:
                                case 106:
                                case 107:
                                case 108:
                                case 109:
                                case 111:
                                case 113:
                                case 121:
                                    $cs = new jur_PatternSyntaxException;
                                    var$5 = $this.$orig;
                                    $nonCap = $this.$index0;
                                    $cs.$suppressionEnabled = 1;
                                    $cs.$writableStackTrace = 1;
                                    $cs.$index1 = (-1);
                                    $cs.$desc = $rt_s(40);
                                    $cs.$pattern = var$5;
                                    $cs.$index1 = $nonCap;
                                    $rt_throw($cs);
                                case 68:
                                case 83:
                                case 87:
                                case 100:
                                case 115:
                                case 119:
                                    break d;
                                case 71:
                                    $this.$lookAhead = (-2147483577);
                                    break b;
                                case 80:
                                case 112:
                                    break c;
                                case 81:
                                    $this.$savedMode = $this.$mode;
                                    $this.$mode = 4;
                                    $reread = 1;
                                    break b;
                                case 90:
                                    $this.$lookAhead = (-2147483558);
                                    break b;
                                case 97:
                                    $this.$lookAhead = 7;
                                    break b;
                                case 98:
                                    $this.$lookAhead = (-2147483550);
                                    break b;
                                case 99:
                                    $nonCap = $this.$index0;
                                    var$3 = $this.$pattern0.data;
                                    if ($nonCap >= (var$3.length - 2 | 0)) {
                                        $cs = new jur_PatternSyntaxException;
                                        var$5 = $this.$orig;
                                        $cs.$suppressionEnabled = 1;
                                        $cs.$writableStackTrace = 1;
                                        $cs.$index1 = (-1);
                                        $cs.$desc = $rt_s(40);
                                        $cs.$pattern = var$5;
                                        $cs.$index1 = $nonCap;
                                        $rt_throw($cs);
                                    }
                                    $this.$prevNW = $nonCap;
                                    if ($this.$flags & 4)
                                        jur_Lexer_skipComments($this);
                                    else
                                        $this.$index0 = $nonCap + 1 | 0;
                                    $this.$lookAhead = var$3[$this.$prevNW] & 31;
                                    break b;
                                case 101:
                                    $this.$lookAhead = 27;
                                    break b;
                                case 102:
                                    $this.$lookAhead = 12;
                                    break b;
                                case 110:
                                    $this.$lookAhead = 10;
                                    break b;
                                case 114:
                                    $this.$lookAhead = 13;
                                    break b;
                                case 116:
                                    $this.$lookAhead = 9;
                                    break b;
                                case 117:
                                    $this.$lookAhead = jur_Lexer_readHex($this, 4);
                                    break b;
                                case 120:
                                    $this.$lookAhead = jur_Lexer_readHex($this, 2);
                                    break b;
                                case 122:
                                    $this.$lookAhead = (-2147483526);
                                    break b;
                                default:
                            }
                            break b;
                        }
                        $cs = new jl_String;
                        var$3 = $this.$pattern0;
                        var$6 = var$3.data;
                        $behind = $this.$prevNW;
                        $mod = var$6.length;
                        if ($behind < 0)
                            break a;
                        if (1 > ($mod - $behind | 0))
                            break a;
                        $cs.$nativeString = $rt_charArrayToString(var$3.data, $behind, 1);
                        $cs = jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $cs);
                        if ($cs.$posValue === null)
                            $cs.$posValue = $cs.$computeValue();
                        $this.$lookAheadST = $cs.$posValue;
                        $this.$lookAhead = 0;
                        break b;
                    }
                    $cs = jur_Lexer_parseCharClassName($this);
                    $negative = 0;
                    if ($this.$lookAhead == 80)
                        $negative = 1;
                    try {
                        $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof ju_MissingResourceException) {
                            $cs = new jur_PatternSyntaxException;
                            var$5 = $this.$orig;
                            $nonCap = $this.$index0;
                            $cs.$suppressionEnabled = 1;
                            $cs.$writableStackTrace = 1;
                            $cs.$index1 = (-1);
                            $cs.$desc = $rt_s(40);
                            $cs.$pattern = var$5;
                            $cs.$index1 = $nonCap;
                            $rt_throw($cs);
                        } else {
                            throw $$e;
                        }
                    }
                    $this.$lookAhead = 0;
                } else {
                    $behind = $this.$mode;
                    if ($behind == 1)
                        switch ($nonCap) {
                            case 36:
                                $this.$lookAhead = (-536870876);
                                break b;
                            case 40:
                                var$3 = $this.$pattern0.data;
                                $nonCap = $this.$index0;
                                if (var$3[$nonCap] != 63) {
                                    $this.$lookAhead = (-2147483608);
                                    break b;
                                }
                                $this.$prevNW = $nonCap;
                                if ($this.$flags & 4)
                                    jur_Lexer_skipComments($this);
                                else
                                    $this.$index0 = $nonCap + 1 | 0;
                                $nonCap = $this.$pattern0.data[$this.$index0];
                                $behind = 0;
                                while (true) {
                                    e: {
                                        if ($behind) {
                                            $behind = 0;
                                            switch ($nonCap) {
                                                case 33:
                                                    break;
                                                case 61:
                                                    $this.$lookAhead = (-134217688);
                                                    var$10 = $this.$index0;
                                                    $this.$prevNW = var$10;
                                                    if ($this.$flags & 4)
                                                        jur_Lexer_skipComments($this);
                                                    else
                                                        $this.$index0 = var$10 + 1 | 0;
                                                    break e;
                                                default:
                                                    $cs = new jur_PatternSyntaxException;
                                                    var$5 = $this.$orig;
                                                    $nonCap = $this.$index0;
                                                    $cs.$suppressionEnabled = 1;
                                                    $cs.$writableStackTrace = 1;
                                                    $cs.$index1 = (-1);
                                                    $cs.$desc = $rt_s(40);
                                                    $cs.$pattern = var$5;
                                                    $cs.$index1 = $nonCap;
                                                    $rt_throw($cs);
                                            }
                                            $this.$lookAhead = (-67108824);
                                            $negative = $this.$index0;
                                            $this.$prevNW = $negative;
                                            if ($this.$flags & 4)
                                                jur_Lexer_skipComments($this);
                                            else
                                                $this.$index0 = $negative + 1 | 0;
                                        } else {
                                            switch ($nonCap) {
                                                case 33:
                                                    break;
                                                case 60:
                                                    $behind = $this.$index0;
                                                    $this.$prevNW = $behind;
                                                    if ($this.$flags & 4)
                                                        jur_Lexer_skipComments($this);
                                                    else
                                                        $this.$index0 = $behind + 1 | 0;
                                                    $nonCap = $this.$pattern0.data[$this.$index0];
                                                    $behind = 1;
                                                    break e;
                                                case 61:
                                                    $this.$lookAhead = (-536870872);
                                                    $negative = $this.$index0;
                                                    $this.$prevNW = $negative;
                                                    if ($this.$flags & 4)
                                                        jur_Lexer_skipComments($this);
                                                    else
                                                        $this.$index0 = $negative + 1 | 0;
                                                    break e;
                                                case 62:
                                                    $this.$lookAhead = (-33554392);
                                                    $negative = $this.$index0;
                                                    $this.$prevNW = $negative;
                                                    if ($this.$flags & 4)
                                                        jur_Lexer_skipComments($this);
                                                    else
                                                        $this.$index0 = $negative + 1 | 0;
                                                    break e;
                                                default:
                                                    $mod = jur_Lexer_readFlags($this);
                                                    $this.$lookAhead = $mod;
                                                    if ($mod < 256) {
                                                        $this.$flags = $mod;
                                                        $mod = $mod << 16;
                                                        $this.$lookAhead = $mod;
                                                        $this.$lookAhead = (-1073741784) | $mod;
                                                        break e;
                                                    }
                                                    $mod = $mod & 255;
                                                    $this.$lookAhead = $mod;
                                                    $this.$flags = $mod;
                                                    $mod = $mod << 16;
                                                    $this.$lookAhead = $mod;
                                                    $this.$lookAhead = (-16777176) | $mod;
                                                    break e;
                                            }
                                            $this.$lookAhead = (-268435416);
                                            $negative = $this.$index0;
                                            $this.$prevNW = $negative;
                                            if ($this.$flags & 4)
                                                jur_Lexer_skipComments($this);
                                            else
                                                $this.$index0 = $negative + 1 | 0;
                                        }
                                    }
                                    if (!$behind)
                                        break;
                                }
                                break b;
                            case 41:
                                $this.$lookAhead = (-536870871);
                                break b;
                            case 42:
                            case 43:
                            case 63:
                                $behind = $this.$index0;
                                var$3 = $this.$pattern0.data;
                                switch ($behind >= var$3.length ? 42 : var$3[$behind]) {
                                    case 43:
                                        $this.$lookAhead = $nonCap | (-2147483648);
                                        $this.$prevNW = $behind;
                                        if ($this.$flags & 4)
                                            jur_Lexer_skipComments($this);
                                        else
                                            $this.$index0 = $behind + 1 | 0;
                                        break b;
                                    case 63:
                                        $this.$lookAhead = $nonCap | (-1073741824);
                                        $this.$prevNW = $behind;
                                        if ($this.$flags & 4)
                                            jur_Lexer_skipComments($this);
                                        else
                                            $this.$index0 = $behind + 1 | 0;
                                        break b;
                                    default:
                                }
                                $this.$lookAhead = $nonCap | (-536870912);
                                break b;
                            case 46:
                                $this.$lookAhead = (-536870866);
                                break b;
                            case 91:
                                $this.$lookAhead = (-536870821);
                                $this.$mode = 2;
                                break b;
                            case 93:
                                if ($behind != 2)
                                    break b;
                                $this.$lookAhead = (-536870819);
                                break b;
                            case 94:
                                $this.$lookAhead = (-536870818);
                                break b;
                            case 123:
                                $this.$lookAheadST = jur_Lexer_processQuantifier($this, $nonCap);
                                break b;
                            case 124:
                                $this.$lookAhead = (-536870788);
                                break b;
                            default:
                        }
                    else if ($behind == 2)
                        switch ($nonCap) {
                            case 38:
                                $this.$lookAhead = (-536870874);
                                break b;
                            case 45:
                                $this.$lookAhead = (-536870867);
                                break b;
                            case 91:
                                $this.$lookAhead = (-536870821);
                                break b;
                            case 93:
                                $this.$lookAhead = (-536870819);
                                break b;
                            case 94:
                                $this.$lookAhead = (-536870818);
                                break b;
                            default:
                        }
                }
            }
            if ($reread)
                continue;
            else
                break;
        }
        return;
    }
    $cs = new jl_IndexOutOfBoundsException;
    $cs.$suppressionEnabled = 1;
    $cs.$writableStackTrace = 1;
    $rt_throw($cs);
},
jur_Lexer_parseCharClassName = $this => {
    let $sb, $ch, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(10);
    $ch = $this.$index0;
    var$3 = $this.$pattern0;
    var$4 = var$3.data;
    var$5 = var$4.length;
    if ($ch < (var$5 - 2 | 0)) {
        if (var$4[$ch] != 123) {
            $sb = new jl_String;
            $this.$prevNW = $ch;
            if ($this.$flags & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index0 = $ch + 1 | 0;
            var$6 = $this.$prevNW;
            if (var$6 >= 0 && 1 <= (var$5 - var$6 | 0)) {
                $sb.$nativeString = $rt_charArrayToString(var$3.data, var$6, 1);
                var$7 = new jl_StringBuilder;
                var$7.$buffer = $rt_createCharArray(16);
                $ch = var$7.$length0;
                var$8 = var$7;
                var$9 = $rt_s(209);
                var$10 = var$8;
                jl_AbstractStringBuilder_insert(var$10, $ch, var$9);
                jl_AbstractStringBuilder_insert(var$10, var$7.$length0, $sb);
                $sb = new jl_String;
                var$3 = var$7.$buffer;
                var$4 = var$3.data;
                var$5 = var$7.$length0;
                var$6 = var$4.length;
                if (var$5 >= 0 && var$5 <= (var$6 - 0 | 0)) {
                    $sb.$nativeString = $rt_charArrayToString(var$3.data, 0, var$5);
                    return $sb;
                }
                $sb = new jl_IndexOutOfBoundsException;
                $sb.$suppressionEnabled = 1;
                $sb.$writableStackTrace = 1;
                $rt_throw($sb);
            }
            $sb = new jl_IndexOutOfBoundsException;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $rt_throw($sb);
        }
        $this.$prevNW = $ch;
        if ($this.$flags & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index0 = $ch + 1 | 0;
        $ch = 0;
        var$7 = $sb;
        a: {
            while (true) {
                var$5 = $this.$index0;
                var$3 = $this.$pattern0.data;
                if (var$5 >= (var$3.length - 2 | 0))
                    break;
                $this.$prevNW = var$5;
                if ($this.$flags & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index0 = var$5 + 1 | 0;
                $ch = var$3[$this.$prevNW];
                if ($ch == 125)
                    break a;
                var$5 = $sb.$length0;
                jl_AbstractStringBuilder_insertSpace(var$7, var$5, var$5 + 1 | 0);
                var$7.$buffer.data[var$5] = $ch;
            }
        }
        if ($ch != 125) {
            $sb = new jur_PatternSyntaxException;
            var$10 = $this.$orig;
            $ch = $this.$index0;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index1 = (-1);
            $sb.$desc = $rt_s(40);
            $sb.$pattern = var$10;
            $sb.$index1 = $ch;
            $rt_throw($sb);
        }
    }
    $ch = $sb.$length0;
    if (!$ch) {
        $sb = new jur_PatternSyntaxException;
        var$10 = $this.$orig;
        $ch = $this.$index0;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index1 = (-1);
        $sb.$desc = $rt_s(40);
        $sb.$pattern = var$10;
        $sb.$index1 = $ch;
        $rt_throw($sb);
    }
    var$7 = new jl_String;
    var$3 = $sb.$buffer;
    var$6 = var$3.data.length;
    if ($ch >= 0 && $ch <= (var$6 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$3.data, 0, $ch);
        if (var$7.$nativeString.length == 1) {
            $sb = new jl_StringBuilder;
            $sb.$buffer = $rt_createCharArray(16);
            $ch = $sb.$length0;
            var$8 = $sb;
            var$9 = $rt_s(209);
            var$10 = var$8;
            jl_AbstractStringBuilder_insert(var$10, $ch, var$9);
            jl_AbstractStringBuilder_insert(var$10, $sb.$length0, var$7);
            var$7 = new jl_String;
            var$3 = $sb.$buffer;
            var$4 = var$3.data;
            var$5 = $sb.$length0;
            var$6 = var$4.length;
            if (var$5 >= 0 && var$5 <= (var$6 - 0 | 0)) {
                var$7.$nativeString = $rt_charArrayToString(var$3.data, 0, var$5);
                return var$7;
            }
            $sb = new jl_IndexOutOfBoundsException;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $rt_throw($sb);
        }
        b: {
            c: {
                if (var$7.$nativeString.length > 3) {
                    if (var$7 === $rt_s(209) ? 1 : jl_String_startsWith0(var$7, $rt_s(209), 0))
                        break c;
                    if (var$7 === $rt_s(210) ? 1 : jl_String_startsWith0(var$7, $rt_s(210), 0))
                        break c;
                }
                break b;
            }
            var$7 = jl_String_substring(var$7, 2, var$7.$nativeString.length);
        }
        return var$7;
    }
    $sb = new jl_IndexOutOfBoundsException;
    $sb.$suppressionEnabled = 1;
    $sb.$writableStackTrace = 1;
    $rt_throw($sb);
},
jur_Lexer_processQuantifier = ($this, $ch) => {
    let $sb, $min, $max, var$5, var$6, var$7, $mod, $$je;
    $sb = new jl_StringBuilder;
    $sb.$buffer = $rt_createCharArray(4);
    $min = (-1);
    $max = 2147483647;
    var$5 = $sb;
    a: {
        while (true) {
            var$6 = $this.$index0;
            var$7 = $this.$pattern0.data;
            if (var$6 >= var$7.length)
                break a;
            $this.$prevNW = var$6;
            if ($this.$flags & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index0 = var$6 + 1 | 0;
            $ch = var$7[$this.$prevNW];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt0(jl_StringBuilder_toString($sb), 10);
                    jl_StringBuilder_delete($sb, 0, jl_StringBuilder_length($sb));
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $mod = $ch & 65535;
            var$6 = $sb.$length0;
            jl_AbstractStringBuilder_insertSpace(var$5, var$6, var$6 + 1 | 0);
            var$5.$buffer.data[var$6] = $mod;
        }
        $sb = new jur_PatternSyntaxException;
        var$5 = $this.$orig;
        $ch = $this.$index0;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index1 = (-1);
        $sb.$desc = $rt_s(40);
        $sb.$pattern = var$5;
        $sb.$index1 = $ch;
        $rt_throw($sb);
    }
    if ($ch != 125) {
        $sb = new jur_PatternSyntaxException;
        var$5 = $this.$orig;
        $ch = $this.$index0;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index1 = (-1);
        $sb.$desc = $rt_s(40);
        $sb.$pattern = var$5;
        $sb.$index1 = $ch;
        $rt_throw($sb);
    }
    if ($sb.$length0 > 0)
        b: {
            try {
                $max = jl_Integer_parseInt0(jl_StringBuilder_toString($sb), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $sb = new jur_PatternSyntaxException;
            var$5 = $this.$orig;
            $ch = $this.$index0;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index1 = (-1);
            $sb.$desc = $rt_s(40);
            $sb.$pattern = var$5;
            $sb.$index1 = $ch;
            $rt_throw($sb);
        }
    else if ($min < 0) {
        $sb = new jur_PatternSyntaxException;
        var$5 = $this.$orig;
        $ch = $this.$index0;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index1 = (-1);
        $sb.$desc = $rt_s(40);
        $sb.$pattern = var$5;
        $sb.$index1 = $ch;
        $rt_throw($sb);
    }
    if (($min | $max | ($max - $min | 0)) < 0) {
        $sb = new jur_PatternSyntaxException;
        var$5 = $this.$orig;
        $ch = $this.$index0;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $sb.$index1 = (-1);
        $sb.$desc = $rt_s(40);
        $sb.$pattern = var$5;
        $sb.$index1 = $ch;
        $rt_throw($sb);
    }
    $ch = $this.$index0;
    var$7 = $this.$pattern0.data;
    $mod = $ch >= var$7.length ? 42 : var$7[$ch];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                $this.$prevNW = $ch;
                if ($this.$flags & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index0 = $ch + 1 | 0;
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                $this.$prevNW = $ch;
                if ($this.$flags & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index0 = $ch + 1 | 0;
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    $sb = new jur_Quantifier;
    $sb.$min0 = $min;
    $sb.$max2 = $max;
    return $sb;
},
jur_Lexer_isLetter = $ch => {
    return $ch < 0 ? 0 : 1;
},
jur_Lexer_readHex = ($this, $max) => {
    let $st, $length, $i, var$5, var$6, var$7, var$8, var$9, var$10, $$je;
    $st = new jl_StringBuilder;
    $st.$buffer = $rt_createCharArray($max);
    $length = $this.$pattern0.data.length - 2 | 0;
    $i = 0;
    var$5 = $st;
    while (true) {
        var$6 = $rt_compare($i, $max);
        if (var$6 >= 0)
            break;
        var$7 = $this.$index0;
        if (var$7 >= $length)
            break;
        var$8 = $this.$pattern0;
        $this.$prevNW = var$7;
        if ($this.$flags & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index0 = var$7 + 1 | 0;
        var$7 = var$8.data[$this.$prevNW];
        var$9 = $st.$length0;
        jl_AbstractStringBuilder_insertSpace(var$5, var$9, var$9 + 1 | 0);
        var$5.$buffer.data[var$9] = var$7;
        $i = $i + 1 | 0;
    }
    if (!var$6)
        a: {
            try {
                $max = jl_Integer_parseInt0(jl_StringBuilder_toString($st), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $max;
        }
    $st = new jur_PatternSyntaxException;
    var$10 = $this.$orig;
    $max = $this.$index0;
    $st.$suppressionEnabled = 1;
    $st.$writableStackTrace = 1;
    $st.$index1 = (-1);
    $st.$desc = $rt_s(40);
    $st.$pattern = var$10;
    $st.$index1 = $max;
    $rt_throw($st);
},
jur_Lexer_readOctals = $this => {
    let $max, $i, var$3, $length, $first, var$6, var$7, var$8, var$9, var$10;
    $max = 3;
    $i = 1;
    var$3 = $this.$pattern0.data;
    $length = var$3.length - 2 | 0;
    $first = jl_Character_getNumericValue(var$3[$this.$index0]);
    if ($first >= 8)
        $first = (-1);
    switch ($first) {
        case -1:
            break;
        default:
            if ($first > 3)
                $max = 2;
            var$6 = $this.$index0;
            $this.$prevNW = var$6;
            if ($this.$flags & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index0 = var$6 + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    var$7 = $this.$index0;
                    if (var$7 >= $length)
                        break a;
                    var$8 = jl_Character_getNumericValue($this.$pattern0.data[var$7]);
                    if (var$8 >= 8)
                        var$8 = (-1);
                    if (var$8 < 0)
                        break;
                    $first = ($first * 8 | 0) + var$8 | 0;
                    var$6 = $this.$index0;
                    $this.$prevNW = var$6;
                    if ($this.$flags & 4)
                        jur_Lexer_skipComments($this);
                    else
                        $this.$index0 = var$6 + 1 | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $first;
    }
    var$9 = new jur_PatternSyntaxException;
    var$10 = $this.$orig;
    $max = $this.$index0;
    var$9.$suppressionEnabled = 1;
    var$9.$writableStackTrace = 1;
    var$9.$index1 = (-1);
    var$9.$desc = $rt_s(40);
    var$9.$pattern = var$10;
    var$9.$index1 = $max;
    $rt_throw(var$9);
},
jur_Lexer_readFlags = $this => {
    let $pos, $res, var$3, var$4, var$5, var$6, var$7;
    $pos = 1;
    $res = $this.$flags;
    a: while (true) {
        var$3 = $this.$index0;
        var$4 = $this.$pattern0.data;
        if (var$3 >= var$4.length) {
            var$5 = new jur_PatternSyntaxException;
            var$6 = $this.$orig;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$index1 = (-1);
            var$5.$desc = $rt_s(40);
            var$5.$pattern = var$6;
            var$5.$index1 = var$3;
            $rt_throw(var$5);
        }
        b: {
            c: {
                switch (var$4[var$3]) {
                    case 41:
                        $this.$prevNW = var$3;
                        if ($this.$flags & 4)
                            jur_Lexer_skipComments($this);
                        else
                            $this.$index0 = var$3 + 1 | 0;
                        return $res | 256;
                    case 45:
                        if (!$pos) {
                            var$7 = new jur_PatternSyntaxException;
                            var$6 = $this.$orig;
                            var$7.$suppressionEnabled = 1;
                            var$7.$writableStackTrace = 1;
                            var$7.$index1 = (-1);
                            var$7.$desc = $rt_s(40);
                            var$7.$pattern = var$6;
                            var$7.$index1 = var$3;
                            $rt_throw(var$7);
                        }
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        $this.$prevNW = var$3;
        if ($this.$flags & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index0 = var$3 + 1 | 0;
    }
    $this.$prevNW = var$3;
    if ($this.$flags & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index0 = var$3 + 1 | 0;
    return $res;
},
jur_Lexer_skipComments = $this => {
    let $length, var$2, var$3, var$4;
    $length = $this.$pattern0.data.length - 2 | 0;
    $this.$index0 = $this.$index0 + 1 | 0;
    a: while (true) {
        var$2 = $this.$index0;
        if (var$2 < $length) {
            b: {
                var$2 = $this.$pattern0.data[var$2];
                switch (var$2) {
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                        break;
                    case 160:
                    case 8199:
                    case 8239:
                        var$2 = 0;
                        break b;
                    default:
                        c: {
                            switch (jl_Character_getType(var$2)) {
                                case 12:
                                case 13:
                                case 14:
                                    break;
                                default:
                                    var$2 = 0;
                                    break c;
                            }
                            var$2 = 1;
                        }
                        break b;
                }
                var$2 = 1;
            }
            if (var$2) {
                $this.$index0 = $this.$index0 + 1 | 0;
                continue;
            }
        }
        var$2 = $this.$index0;
        if (var$2 >= $length)
            break;
        var$3 = $this.$pattern0.data;
        if (var$3[var$2] != 35)
            break;
        $this.$index0 = var$2 + 1 | 0;
        while (true) {
            var$4 = $this.$index0;
            if (var$4 >= $length)
                continue a;
            var$2 = var$3[var$4];
            if (var$2 != 10 && var$2 != 13 && var$2 != 133 && (var$2 | 1) != 8233 ? 0 : 1)
                continue a;
            $this.$index0 = var$4 + 1 | 0;
        }
    }
    return var$2;
},
jur_Lexer_getHangulDecomposition = $ch => {
    let $sIndex, $l, $v, $t;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        return !$t ? $rt_createIntArrayFromData([$l, $v]) : $rt_createIntArrayFromData([$l, $v, 4519 + $t | 0]);
    }
    return null;
},
jur_Lexer_hasDecompositionNonNullCanClass = $ch => {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
},
jur_Lexer_nextCodePoint = $this => {
    let var$1, $lowExpectedIndex, var$3, $high, $low;
    var$1 = $this.$pattern0;
    $lowExpectedIndex = $this.$index0;
    $this.$prevNW = $lowExpectedIndex;
    if ($this.$flags & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index0 = $lowExpectedIndex + 1 | 0;
    var$1 = var$1.data;
    var$3 = $this.$prevNW;
    $high = var$1[var$3];
    if (($high & 64512) != 55296 ? 0 : 1) {
        $lowExpectedIndex = var$3 + 1 | 0;
        var$1 = $this.$pattern0.data;
        if ($lowExpectedIndex < var$1.length) {
            $low = var$1[$lowExpectedIndex];
            if (($low & 64512) != 56320 ? 0 : 1) {
                var$3 = $this.$index0;
                $this.$prevNW = var$3;
                if ($this.$flags & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index0 = var$3 + 1 | 0;
                return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
            }
        }
    }
    return $high;
};
function jur_PatternSyntaxException() {
    let a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern = null;
    a.$index1 = 0;
}
let jur_PatternSyntaxException_getMessage = $this => {
    let $filler, var$2, $temp, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    $filler = $rt_s(40);
    var$2 = $this.$index1;
    if (var$2 >= 1) {
        $temp = $rt_createCharArray(var$2);
        var$4 = $temp.data;
        var$2 = 0;
        var$5 = var$4.length;
        if (var$2 > var$5) {
            $filler = new jl_IllegalArgumentException;
            $filler.$suppressionEnabled = 1;
            $filler.$writableStackTrace = 1;
            $rt_throw($filler);
        }
        while (var$2 < var$5) {
            var$6 = var$2 + 1 | 0;
            var$4[var$2] = 32;
            var$2 = var$6;
        }
        $filler = new jl_String;
        $filler.$nativeString = $rt_charArrayToString($temp.data, 0, var$5);
    }
    a: {
        var$7 = $this.$desc;
        var$8 = $this.$pattern;
        if (var$8 !== null && var$8.$nativeString.length) {
            var$9 = $this.$index1;
            var$8 = $this.$pattern;
            var$10 = new jl_StringBuilder;
            var$10.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$10, var$10.$length0, var$9, 10);
            var$9 = var$10.$length0;
            var$11 = var$10;
            var$12 = $rt_s(55);
            var$13 = var$11;
            jl_AbstractStringBuilder_insert(var$13, var$9, var$12);
            jl_AbstractStringBuilder_insert(var$13, var$10.$length0, var$8 === null ? $rt_s(1) : var$8);
            jl_AbstractStringBuilder_insert(var$13, var$10.$length0, $rt_s(55));
            jl_AbstractStringBuilder_insert(var$13, var$10.$length0, $filler);
            $filler = new jl_String;
            $temp = var$10.$buffer;
            var$4 = $temp.data;
            var$2 = var$10.$length0;
            var$5 = var$4.length;
            if (var$2 >= 0 && var$2 <= (var$5 - 0 | 0)) {
                $filler.$nativeString = $rt_charArrayToString($temp.data, 0, var$2);
                break a;
            }
            $filler = new jl_IndexOutOfBoundsException;
            $filler.$suppressionEnabled = 1;
            $filler.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($filler);
            $rt_throw($filler);
        }
        $filler = $rt_s(40);
    }
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    var$9 = var$8.$length0;
    var$10 = var$8;
    var$7 = var$7 === null ? $rt_s(1) : var$7;
    var$10 = var$10;
    jl_AbstractStringBuilder_insert(var$10, var$9, var$7);
    jl_AbstractStringBuilder_insert(var$10, var$8.$length0, $filler);
    $filler = new jl_String;
    $temp = var$8.$buffer;
    var$4 = $temp.data;
    var$2 = var$8.$length0;
    var$5 = var$4.length;
    if (var$2 >= 0 && var$2 <= (var$5 - 0 | 0)) {
        $filler.$nativeString = $rt_charArrayToString($temp.data, 0, var$2);
        return $filler;
    }
    $filler = new jl_IndexOutOfBoundsException;
    $filler.$suppressionEnabled = 1;
    $filler.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($filler);
    $rt_throw($filler);
},
jlr_Array = $rt_classWithoutFields(),
jlr_Array_getLength = var$1 => {
    if (var$1 === null || var$1.constructor.$meta.item === 'undefined') {
        $rt_throw(jl_IllegalArgumentException__init_());
    }
    return var$1.data.length;
},
jlr_Array_newInstance = (var$1, $length) => {
    if (var$1 === null) {
        var$1 = new jl_NullPointerException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    if (var$1 === $rt_cls($rt_voidcls)) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    if ($length >= 0)
        return jlr_Array_newInstanceImpl(var$1.$platformClass, $length);
    var$1 = new jl_NegativeArraySizeException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
jlr_Array_newInstanceImpl = (var$1, var$2) => {
    if (var$1.$meta.primitive) {
        switch (var$1) {
        }
        ;
    }
    return $rt_createArray(var$1, var$2);
},
ju_SequencedCollection = $rt_classWithoutFields(0),
ju_List = $rt_classWithoutFields(0);
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount = 0;
}
let ju_RandomAccess = $rt_classWithoutFields(0);
function ju_ArrayList() {
    let a = this; ju_AbstractList.call(a);
    a.$array0 = null;
    a.$size1 = 0;
}
let ju_ArrayList_ensureCapacity = ($this, var$1) => {
    let var$2, var$3, var$4, $newLength, var$6, var$7, var$8;
    var$2 = $this.$array0;
    var$3 = var$2.data;
    var$4 = var$3.length;
    if (var$4 < var$1) {
        if (var$4 >= 1073741823)
            $newLength = 2147483647;
        else {
            var$6 = var$4 * 2 | 0;
            $newLength = 5;
            if (var$6 > $newLength)
                $newLength = var$6;
            if (var$1 > $newLength)
                $newLength = var$1;
        }
        var$7 = var$2.constructor;
        if (var$7 === null)
            var$8 = null;
        else {
            var$8 = var$7.classObject;
            if (var$8 === null) {
                var$8 = new jl_Class;
                var$8.$platformClass = var$7;
                var$7.classObject = var$8;
            }
        }
        var$7 = jl_Class_getComponentType(var$8);
        if (var$7 === null) {
            var$8 = new jl_NullPointerException;
            var$8.$suppressionEnabled = 1;
            var$8.$writableStackTrace = 1;
            $rt_throw(var$8);
        }
        if (var$7 === $rt_cls($rt_voidcls)) {
            var$8 = new jl_IllegalArgumentException;
            var$8.$suppressionEnabled = 1;
            var$8.$writableStackTrace = 1;
            $rt_throw(var$8);
        }
        if ($newLength < 0) {
            var$8 = new jl_NegativeArraySizeException;
            var$8.$suppressionEnabled = 1;
            var$8.$writableStackTrace = 1;
            $rt_throw(var$8);
        }
        var$2 = jlr_Array_newInstanceImpl(var$7.$platformClass, $newLength);
        if ($newLength < var$4)
            var$4 = $newLength;
        var$1 = 0;
        while (var$1 < var$4) {
            var$2.data[var$1] = var$3[var$1];
            var$1 = var$1 + 1 | 0;
        }
        $this.$array0 = var$2;
    }
},
ju_ArrayList_add = ($this, $element) => {
    let var$2, var$3;
    ju_ArrayList_ensureCapacity($this, $this.$size1 + 1 | 0);
    var$2 = $this.$array0.data;
    var$3 = $this.$size1;
    $this.$size1 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount = $this.$modCount + 1 | 0;
    return 1;
},
ju_ArrayList_add0 = ($this, $index, $element) => {
    let var$3, $i, var$5;
    if ($index >= 0) {
        var$3 = $this.$size1;
        if ($index <= var$3) {
            ju_ArrayList_ensureCapacity($this, var$3 + 1 | 0);
            var$3 = $this.$size1;
            $i = var$3;
            while ($i > $index) {
                var$5 = $this.$array0.data;
                var$5[$i] = var$5[$i - 1 | 0];
                $i = $i + (-1) | 0;
            }
            $this.$array0.data[$index] = $element;
            $this.$size1 = var$3 + 1 | 0;
            $this.$modCount = $this.$modCount + 1 | 0;
            return;
        }
    }
    $element = new jl_IndexOutOfBoundsException;
    $element.$suppressionEnabled = 1;
    $element.$writableStackTrace = 1;
    $rt_throw($element);
},
ju_ArrayList_remove = ($this, $i) => {
    let var$2, var$3, $old, $i_0;
    if ($i >= 0) {
        var$2 = $this.$size1;
        if ($i < var$2) {
            var$3 = $this.$array0.data;
            $old = var$3[$i];
            var$2 = var$2 - 1 | 0;
            $this.$size1 = var$2;
            while ($i < var$2) {
                $i_0 = $i + 1 | 0;
                var$3[$i] = var$3[$i_0];
                $i = $i_0;
            }
            var$3[var$2] = null;
            $this.$modCount = $this.$modCount + 1 | 0;
            return $old;
        }
    }
    $old = new jl_IndexOutOfBoundsException;
    $old.$suppressionEnabled = 1;
    $old.$writableStackTrace = 1;
    $rt_throw($old);
},
jur_NonCapFSet = $rt_classWithoutFields(jur_FSet),
jur_NonCapFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr, var$5;
    $gr = $this.$groupIndex0;
    var$5 = $matchResult.$consumers.data;
    var$5[$gr] = $stringIndex - var$5[$gr] | 0;
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_NonCapFSet_getName = $this => {
    return $rt_s(211);
},
jur_NonCapFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_AheadFSet = $rt_classWithoutFields(jur_FSet),
jur_AheadFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_AheadFSet_getName = $this => {
    return $rt_s(212);
},
jur_BehindFSet = $rt_classWithoutFields(jur_FSet),
jur_BehindFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$groupIndex0;
    if ($matchResult.$consumers.data[$gr] != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
},
jur_BehindFSet_getName = $this => {
    return $rt_s(213);
};
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index5 = 0;
}
let jur_AtomicFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr, var$5;
    $gr = $this.$groupIndex0;
    var$5 = $matchResult.$consumers.data;
    var$5[$gr] = $stringIndex - var$5[$gr] | 0;
    $this.$index5 = $stringIndex;
    return $stringIndex;
},
jur_AtomicFSet_getName = $this => {
    return $rt_s(214);
},
jur_AtomicFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FinalSet = $rt_classWithoutFields(jur_FSet),
jur_FinalSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($matchResult.$mode0 != 1 && $stringIndex != $matchResult.$rightBound)
        return (-1);
    $matchResult.$valid = 1;
    $matchResult.$groupBounds.data[1] = $stringIndex;
    return $stringIndex;
},
jur_FinalSet_getName = $this => {
    return $rt_s(215);
};
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount0 = 0;
}
let jur_LeafSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    if (($stringIndex + $this.$charCount() | 0) > $matchResult.$rightBound) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next0.$matches($stringIndex + $shift | 0, $testString, $matchResult);
},
jur_LeafSet_charCount = $this => {
    return $this.$charCount0;
},
jur_LeafSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_EmptySet = $rt_classWithoutFields(jur_LeafSet),
jur_EmptySet_accepts = ($this, $stringIndex, $testString) => {
    return 0;
},
jur_EmptySet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startStr, var$6, $low, $high;
    $strLength = $matchResult.$rightBound;
    $startStr = $matchResult.$leftBound;
    var$6 = $testString;
    a: {
        b: {
            while (true) {
                $low = $rt_compare($stringIndex, $strLength);
                if ($low > 0)
                    return (-1);
                if ($low < 0) {
                    if ($stringIndex < 0)
                        break b;
                    if ($stringIndex >= var$6.$nativeString.length)
                        break b;
                    if (((var$6.$nativeString.charCodeAt($stringIndex) & 64512) != 56320 ? 0 : 1) && $stringIndex > $startStr) {
                        $high = $stringIndex - 1 | 0;
                        if ($high < 0)
                            break a;
                        if ($high >= var$6.$nativeString.length)
                            break a;
                        if ((var$6.$nativeString.charCodeAt($high) & 64512) != 55296 ? 0 : 1) {
                            $stringIndex = $stringIndex + 1 | 0;
                            continue;
                        }
                    }
                }
                if ($this.$next0.$matches($stringIndex, $testString, $matchResult) >= 0)
                    break;
                $stringIndex = $stringIndex + 1 | 0;
            }
            return $stringIndex;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_EmptySet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $strLength, $startStr, var$7, $low;
    $strLength = $matchResult.$rightBound;
    $startStr = $matchResult.$leftBound;
    var$7 = $testString;
    a: {
        b: {
            while (true) {
                if ($startSearch < $stringIndex)
                    return (-1);
                if ($startSearch < $strLength) {
                    if ($startSearch < 0)
                        break b;
                    if ($startSearch >= var$7.$nativeString.length)
                        break b;
                    if (((var$7.$nativeString.charCodeAt($startSearch) & 64512) != 56320 ? 0 : 1) && $startSearch > $startStr) {
                        $low = $startSearch - 1 | 0;
                        if ($low < 0)
                            break a;
                        if ($low >= var$7.$nativeString.length)
                            break a;
                        if ((var$7.$nativeString.charCodeAt($low) & 64512) != 55296 ? 0 : 1) {
                            $startSearch = $startSearch + (-1) | 0;
                            continue;
                        }
                    }
                }
                if ($this.$next0.$matches($startSearch, $testString, $matchResult) >= 0)
                    break;
                $startSearch = $startSearch + (-1) | 0;
            }
            return $startSearch;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_EmptySet_getName = $this => {
    return $rt_s(216);
},
jur_EmptySet_hasConsumed = ($this, $mr) => {
    return 0;
};
function jur_JointSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex = 0;
}
let jur_JointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $e, $size, var$6, $shift, $start, $i;
    $e = $this.$children;
    if ($e === null)
        return (-1);
    $size = $this.$groupIndex;
    var$6 = $matchResult.$groupBounds.data;
    $shift = $size * 2 | 0;
    $start = var$6[$shift];
    var$6[$shift] = $stringIndex;
    $size = $e.$size1;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size) {
                $stringIndex = $this.$groupIndex;
                $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $start;
                return (-1);
            }
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size1)
                break a;
            $shift = $e.$array0.data[$i].$matches($stringIndex, $testString, $matchResult);
            if ($shift >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return $shift;
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_JointSet_setNext = ($this, $next) => {
    $this.$fSet.$next0 = $next;
},
jur_JointSet_getName = $this => {
    return $rt_s(217);
},
jur_JointSet_first = ($this, $set) => {
    let var$2, $i, var$4, var$5;
    a: {
        b: {
            var$2 = $this.$children;
            if (var$2 !== null) {
                var$2 = var$2;
                $i = new ju_AbstractList$1;
                $i.$this$02 = var$2;
                $i.$modCount1 = var$2.$modCount;
                $i.$size6 = var$2.$size1;
                $i.$removeIndex0 = (-1);
                $i = $i;
                while (true) {
                    var$4 = $i.$index4;
                    if (!(var$4 >= $i.$size6 ? 0 : 1))
                        break b;
                    var$5 = $i.$modCount1;
                    var$2 = $i.$this$02;
                    if (var$5 < var$2.$modCount) {
                        $set = new ju_ConcurrentModificationException;
                        $set.$suppressionEnabled = 1;
                        $set.$writableStackTrace = 1;
                        $rt_throw($set);
                    }
                    $i.$removeIndex0 = var$4;
                    $i.$index4 = var$4 + 1 | 0;
                    var$2 = var$2;
                    if (var$4 < 0)
                        break a;
                    if (var$4 >= var$2.$size1)
                        break a;
                    if (!var$2.$array0.data[var$4].$first($set))
                        continue;
                    else
                        break;
                }
                return 1;
            }
        }
        return 0;
    }
    $set = new jl_IndexOutOfBoundsException;
    $set.$suppressionEnabled = 1;
    $set.$writableStackTrace = 1;
    $rt_throw($set);
},
jur_JointSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3, var$4;
    var$2 = $this.$groupIndex;
    var$3 = $matchResult.$groupBounds.data;
    var$2 = var$2 * 2 | 0;
    var$4 = var$2 + 1 | 0;
    return var$3[var$4] >= 0 && var$3[var$2] == var$3[var$4] ? 0 : 1;
},
jur_JointSet_processSecondPass = $this => {
    let $child, $childrenSize, $i, $set;
    $this.$isSecondPassVisited = 1;
    $child = $this.$fSet;
    if ($child !== null && !$child.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($child);
    a: {
        b: {
            $child = $this.$children;
            if ($child !== null) {
                $childrenSize = $child.$size1;
                $i = 0;
                while (true) {
                    if ($i >= $childrenSize)
                        break b;
                    $child = $this.$children;
                    if ($i < 0)
                        break a;
                    if ($i >= $child.$size1)
                        break a;
                    $child = $child.$array0.data[$i];
                    $set = $child.$processBackRefReplacement();
                    if ($set === null)
                        $set = $child;
                    else {
                        $child.$isSecondPassVisited = 1;
                        ju_ArrayList_remove($this.$children, $i);
                        ju_ArrayList_add0($this.$children, $i, $set);
                    }
                    if (!$set.$isSecondPassVisited)
                        $set.$processSecondPass();
                    $i = $i + 1 | 0;
                }
            }
        }
        if ($this.$next0 !== null)
            jur_AbstractSet_processSecondPass($this);
        return;
    }
    $child = new jl_IndexOutOfBoundsException;
    $child.$suppressionEnabled = 1;
    $child.$writableStackTrace = 1;
    $rt_throw($child);
},
jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet),
jur_NonCapJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $i, var$5, $start, $size, $e, $shift;
    $i = $this.$groupIndex;
    var$5 = $matchResult.$consumers.data;
    $start = var$5[$i];
    var$5[$i] = $stringIndex;
    $size = $this.$children.$size1;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size) {
                $stringIndex = $this.$groupIndex;
                $matchResult.$consumers.data[$stringIndex] = $start;
                return (-1);
            }
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size1)
                break a;
            $shift = $e.$array0.data[$i].$matches($stringIndex, $testString, $matchResult);
            if ($shift >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return $shift;
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_NonCapJointSet_getName = $this => {
    return $rt_s(218);
},
jur_NonCapJointSet_hasConsumed = ($this, $matchResult) => {
    let $cons;
    $cons = $this.$groupIndex;
    return !$matchResult.$consumers.data[$cons] ? 0 : 1;
},
jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet),
jur_AtomicJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift, var$5, $start, $size, $i, $e;
    $shift = $this.$groupIndex;
    var$5 = $matchResult.$consumers.data;
    $start = var$5[$shift];
    var$5[$shift] = $stringIndex;
    $size = $this.$children.$size1;
    $i = 0;
    a: {
        while ($i < $size) {
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size1)
                break a;
            if ($e.$array0.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                return $this.$next0.$matches($this.$fSet.$index5, $testString, $matchResult);
            $i = $i + 1 | 0;
        }
        $stringIndex = $this.$groupIndex;
        $matchResult.$consumers.data[$stringIndex] = $start;
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_AtomicJointSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_AtomicJointSet_getName = $this => {
    return $rt_s(218);
},
jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e;
    $size = $this.$children.$size1;
    $i = 0;
    a: {
        while ($i < $size) {
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size1)
                break a;
            if ($e.$array0.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                return $this.$next0.$matches($stringIndex, $testString, $matchResult);
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_PositiveLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookAhead_getName = $this => {
    return $rt_s(219);
},
jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e;
    $size = $this.$children.$size1;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size)
                return $this.$next0.$matches($stringIndex, $testString, $matchResult);
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size1)
                break a;
            if ($e.$array0.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_NegativeLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookAhead_getName = $this => {
    return $rt_s(220);
},
jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $leftBound, $shift, $i, $e;
    $size = $this.$children.$size1;
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound;
    a: {
        b: {
            $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
            if ($shift >= 0) {
                $i = $this.$groupIndex;
                $matchResult.$consumers.data[$i] = $stringIndex;
                $i = 0;
                while (true) {
                    if ($i >= $size)
                        break b;
                    $e = $this.$children;
                    if ($i < 0)
                        break a;
                    if ($i >= $e.$size1)
                        break a;
                    if ($e.$array0.data[$i].$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                        $stringIndex = $this.$groupIndex;
                        $matchResult.$consumers.data[$stringIndex] = (-1);
                        return $shift;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_PositiveLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookBehind_getName = $this => {
    return $rt_s(221);
},
jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e;
    $size = $this.$children.$size1;
    $i = $this.$groupIndex;
    $matchResult.$consumers.data[$i] = $stringIndex;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $size)
                return $this.$next0.$matches($stringIndex, $testString, $matchResult);
            $e = $this.$children;
            if ($i < 0)
                break a;
            if ($i >= $e.$size1)
                break a;
            if ($e.$array0.data[$i].$findBack(0, $stringIndex, $testString, $matchResult) >= 0)
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $testString = new jl_IndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_NegativeLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookBehind_getName = $this => {
    return $rt_s(222);
};
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
let jur_SingleSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift, var$5, $start;
    $shift = $this.$groupIndex;
    var$5 = $matchResult.$groupBounds.data;
    $shift = $shift * 2 | 0;
    $start = var$5[$shift];
    var$5[$shift] = $stringIndex;
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $shift = $this.$groupIndex;
    $matchResult.$groupBounds.data[$shift * 2 | 0] = $start;
    return (-1);
},
jur_SingleSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$find0($stringIndex, $testString, $matchResult);
    if ($res >= 0) {
        $stringIndex = $this.$groupIndex;
        $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $res;
    }
    return $res;
},
jur_SingleSet_findBack = ($this, $stringIndex, $lastIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0) {
        $stringIndex = $this.$groupIndex;
        $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $res;
    }
    return $res;
},
jur_SingleSet_first = ($this, $set) => {
    return $this.$kid.$first($set);
},
jur_SingleSet_processBackRefReplacement = $this => {
    let $set, var$2, var$3, var$4, var$5;
    $set = new jur_BackReferencedSingleSet;
    var$2 = $this.$kid;
    var$3 = $this.$fSet;
    var$4 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$4 + 1 | 0;
    var$5 = new jl_AbstractStringBuilder;
    var$5.$buffer = $rt_createCharArray(20);
    $set.$index = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, var$4, 10)).$toString();
    $set.$kid = var$2;
    $set.$fSet = var$3;
    $set.$groupIndex = var$3.$groupIndex0;
    $this.$next0 = $set;
    return $set;
},
jur_SingleSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$fSet;
    if ($set !== null && !$set.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($set);
    $set = $this.$kid;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
},
jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException),
jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException),
jur_SpecialToken = $rt_classWithoutFields();
function jur_AbstractCharClass() {
    let a = this; jur_SpecialToken.call(a);
    a.$alt = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
let jur_AbstractCharClass_charClasses = null,
jur_AbstractCharClass_getBits = $this => {
    return null;
},
jur_AbstractCharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_AbstractCharClass_hasLowHighSurrogates = $this => {
    return !$this.$altSurrogates ? (ju_BitSet_nextSetBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1) : ju_BitSet_nextClearBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1;
},
jur_AbstractCharClass_mayContainSupplCodepoints = $this => {
    return $this.$mayContainSupplCodepoints;
},
jur_AbstractCharClass_getInstance = $this => {
    return $this;
},
jur_AbstractCharClass_getSurrogates = $this => {
    let $lHS, var$2;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$1;
        var$2.$this$044 = $this;
        var$2.$val$lHS = $lHS;
        $lHS = new ju_BitSet;
        $lHS.$data = $rt_createIntArray(64);
        var$2.$lowHighSurrogates = $lHS;
        $this.$charClassWithSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
},
jur_AbstractCharClass_getWithoutSurrogates = $this => {
    let $lHS, var$2;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$2;
        var$2.$this$041 = $this;
        var$2.$val$lHS0 = $lHS;
        var$2.$val$thisClass = $this;
        $lHS = new ju_BitSet;
        $lHS.$data = $rt_createIntArray(64);
        var$2.$lowHighSurrogates = $lHS;
        $this.$charClassWithoutSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$alt);
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
},
jur_AbstractCharClass_hasUCI = $this => {
    return 0;
},
jur_AbstractCharClass_setNegative = ($this, $value) => {
    let var$2;
    var$2 = $this.$alt;
    if (var$2 ^ $value) {
        $this.$alt = var$2 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
},
jur_AbstractCharClass_isNegative = $this => {
    return $this.$alt;
},
jur_AbstractCharClass_getPredefinedClass = ($name, $negative) => {
    $name = jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name);
    if (!$negative && $name.$posValue === null)
        $name.$posValue = $name.$computeValue();
    else if ($negative && $name.$negValue === null)
        $name.$negValue = jur_AbstractCharClass_setNegative($name.$computeValue(), 1);
    return $negative ? $name.$negValue : $name.$posValue;
},
jur_AbstractCharClass__clinit_ = () => {
    jur_AbstractCharClass_charClasses = new jur_AbstractCharClass$PredefinedCharacterClasses;
};
function ju_MissingResourceException() {
    let a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key1 = null;
}
function jur_CharClass() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
let jur_CharClass_add0 = ($this, $ch) => {
    let var$2;
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    ju_BitSet_clear($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                ju_BitSet_set0($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                }
                $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch);
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                }
                $ch = jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch);
            }
        }
    }
    var$2 = $ch <= 56319 && $ch >= 55296 ? 1 : 0;
    if (!(!var$2 && !($ch <= 57343 && $ch >= 56320 ? 1 : 0))) {
        if ($this.$invertedSurrogates)
            ju_BitSet_clear($this.$lowHighSurrogates, $ch - 55296 | 0);
        else
            ju_BitSet_set0($this.$lowHighSurrogates, $ch - 55296 | 0);
    }
    if ($this.$inverted)
        ju_BitSet_clear($this.$bits, $ch);
    else
        ju_BitSet_set0($this.$bits, $ch);
    if (!$this.$mayContainSupplCodepoints && ($ch >= 65536 && $ch <= 1114111 ? 1 : 0))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
},
jur_CharClass_add1 = ($this, $cc) => {
    let $curAlt, $nb, var$4;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            ju_BitSet_andNot($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        else
            ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        ju_BitSet_or($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$alt)
                ju_BitSet_andNot($this.$bits, $cc.$getBits());
            else
                ju_BitSet_and($this.$bits, $cc.$getBits());
        } else if (!$cc.$alt)
            ju_BitSet_or($this.$bits, $cc.$getBits());
        else {
            ju_BitSet_xor($this.$bits, $cc.$getBits());
            ju_BitSet_and($this.$bits, $cc.$getBits());
            $this.$alt = $this.$alt ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$4 = new jur_CharClass$5;
                var$4.$this$024 = $this;
                var$4.$val$curAlt10 = $curAlt;
                var$4.$val$nb4 = $nb;
                var$4.$val$cc2 = $cc;
                $cc = new ju_BitSet;
                $cc.$data = $rt_createIntArray(64);
                var$4.$lowHighSurrogates = $cc;
                $this.$nonBitSet = var$4;
            } else {
                var$4 = new jur_CharClass$4;
                var$4.$this$049 = $this;
                var$4.$val$curAlt2 = $curAlt;
                var$4.$val$nb2 = $nb;
                var$4.$val$cc0 = $cc;
                $cc = new ju_BitSet;
                $cc.$data = $rt_createIntArray(64);
                var$4.$lowHighSurrogates = $cc;
                $this.$nonBitSet = var$4;
            }
        } else {
            if ($curAlt && !$this.$inverted && ($this.$bits.$length2 ? 0 : 1)) {
                $nb = new jur_CharClass$1;
                $nb.$this$035 = $this;
                $nb.$val$cc1 = $cc;
                $cc = new ju_BitSet;
                $cc.$data = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $cc;
                $this.$nonBitSet = $nb;
            } else if (!$curAlt) {
                $nb = new jur_CharClass$3;
                $nb.$this$06 = $this;
                $nb.$val$curAlt = $curAlt;
                $nb.$val$cc = $cc;
                $cc = new ju_BitSet;
                $cc.$data = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $cc;
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$2;
                $nb.$this$07 = $this;
                $nb.$val$curAlt0 = $curAlt;
                $nb.$val$cc3 = $cc;
                $cc = new ju_BitSet;
                $cc.$data = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $cc;
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
    return $this;
},
jur_CharClass_add = ($this, $i, $end) => {
    let var$3;
    if ($i > $end) {
        var$3 = new jl_IllegalArgumentException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            $end = $end + 1 | 0;
            while (true) {
                if ($i >= $end)
                    break a;
                jur_CharClass_add0($this, $i);
                $i = $i + 1 | 0;
            }
        }
        if ($this.$inverted)
            ju_BitSet_clear0($this.$bits, $i, $end + 1 | 0);
        else
            ju_BitSet_set($this.$bits, $i, $end + 1 | 0);
    }
    return $this;
},
jur_CharClass_union = ($this, $clazz) => {
    let var$2, $curAlt, var$4, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    var$2 = $clazz;
    if (var$2.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_or($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        else
            ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    } else if ($curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        $this.$altSurrogates = 1;
    }
    a: {
        if (!$this.$hideBits) {
            var$4 = var$2.$hideBits;
            if ((!var$4 ? var$2.$bits : null) !== null) {
                $curAlt = $this.$alt;
                if (!($curAlt ^ $clazz.$alt)) {
                    if (!$curAlt) {
                        ju_BitSet_or($this.$bits, !var$4 ? var$2.$bits : null);
                        break a;
                    }
                    ju_BitSet_and($this.$bits, !var$4 ? var$2.$bits : null);
                    break a;
                }
                if ($curAlt) {
                    ju_BitSet_andNot($this.$bits, !var$4 ? var$2.$bits : null);
                    break a;
                }
                ju_BitSet_xor($this.$bits, !var$4 ? var$2.$bits : null);
                ju_BitSet_and($this.$bits, !var$2.$hideBits ? var$2.$bits : null);
                $this.$alt = 1;
                break a;
            }
        }
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$2 = new jur_CharClass$11;
                var$2.$this$021 = $this;
                var$2.$val$curAlt7 = $curAlt;
                var$2.$val$nb3 = $nb;
                var$2.$val$clazz9 = $clazz;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                var$2.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$2;
            } else {
                var$2 = new jur_CharClass$10;
                var$2.$this$025 = $this;
                var$2.$val$curAlt9 = $curAlt;
                var$2.$val$nb0 = $nb;
                var$2.$val$clazz = $clazz;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                var$2.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$2;
            }
        } else {
            if (!$this.$inverted && ($this.$bits.$length2 ? 0 : 1)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$7;
                    $nb.$this$052 = $this;
                    $nb.$val$clazz2 = $clazz;
                    $clazz = new ju_BitSet;
                    $clazz.$data = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$6;
                    $nb.$this$026 = $this;
                    $nb.$val$clazz8 = $clazz;
                    $clazz = new ju_BitSet;
                    $clazz.$data = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$9;
                $nb.$this$014 = $this;
                $nb.$val$clazz4 = $clazz;
                $nb.$val$curAlt1 = $curAlt;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$8;
                $nb.$this$011 = $this;
                $nb.$val$clazz5 = $clazz;
                $nb.$val$curAlt5 = $curAlt;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_intersection = ($this, $clazz) => {
    let var$2, $curAlt, var$4, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    var$2 = $clazz;
    if (var$2.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        else
            ju_BitSet_or($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    } else if (!$curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        $this.$altSurrogates = 0;
    }
    a: {
        if (!$this.$hideBits) {
            var$4 = var$2.$hideBits;
            if ((!var$4 ? var$2.$bits : null) !== null) {
                $curAlt = $this.$alt;
                if (!($curAlt ^ $clazz.$alt)) {
                    if (!$curAlt) {
                        ju_BitSet_and($this.$bits, !var$4 ? var$2.$bits : null);
                        break a;
                    }
                    ju_BitSet_or($this.$bits, !var$4 ? var$2.$bits : null);
                    break a;
                }
                if (!$curAlt) {
                    ju_BitSet_andNot($this.$bits, !var$4 ? var$2.$bits : null);
                    break a;
                }
                ju_BitSet_xor($this.$bits, !var$4 ? var$2.$bits : null);
                ju_BitSet_and($this.$bits, !var$2.$hideBits ? var$2.$bits : null);
                $this.$alt = 0;
                break a;
            }
        }
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$2 = new jur_CharClass$17;
                var$2.$this$023 = $this;
                var$2.$val$curAlt8 = $curAlt;
                var$2.$val$nb1 = $nb;
                var$2.$val$clazz3 = $clazz;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                var$2.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$2;
            } else {
                var$2 = new jur_CharClass$16;
                var$2.$this$030 = $this;
                var$2.$val$curAlt6 = $curAlt;
                var$2.$val$nb = $nb;
                var$2.$val$clazz7 = $clazz;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                var$2.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = var$2;
            }
        } else {
            if (!$this.$inverted && ($this.$bits.$length2 ? 0 : 1)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$13;
                    $nb.$this$027 = $this;
                    $nb.$val$clazz0 = $clazz;
                    $clazz = new ju_BitSet;
                    $clazz.$data = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$12;
                    $nb.$this$048 = $this;
                    $nb.$val$clazz1 = $clazz;
                    $clazz = new ju_BitSet;
                    $clazz.$data = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$15;
                $nb.$this$016 = $this;
                $nb.$val$clazz10 = $clazz;
                $nb.$val$curAlt4 = $curAlt;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$14;
                $nb.$this$012 = $this;
                $nb.$val$clazz6 = $clazz;
                $nb.$val$curAlt3 = $curAlt;
                $clazz = new ju_BitSet;
                $clazz.$data = $rt_createIntArray(64);
                $nb.$lowHighSurrogates = $clazz;
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_contains = ($this, $ch) => {
    let var$2;
    var$2 = $this.$nonBitSet;
    if (var$2 !== null)
        return $this.$alt ^ var$2.$contains0($ch);
    return $this.$alt ^ ju_BitSet_get($this.$bits, $ch);
},
jur_CharClass_getBits = $this => {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
},
jur_CharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_CharClass_getInstance = $this => {
    let $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = !$this.$hideBits ? $this.$bits : null;
    $res = new jur_CharClass$18;
    $res.$this$020 = $this;
    $res.$val$bs = $bs;
    $bs = new ju_BitSet;
    $bs.$data = $rt_createIntArray(64);
    $res.$lowHighSurrogates = $bs;
    return jur_AbstractCharClass_setNegative($res, $this.$alt);
},
jur_CharClass_toString = $this => {
    let $temp, $i, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $temp = new jl_StringBuilder;
    $temp.$buffer = $rt_createCharArray(16);
    $i = ju_BitSet_nextSetBit($this.$bits, 0);
    var$3 = $temp;
    while ($i >= 0) {
        var$4 = (jl_Character_toChars($i)).data;
        var$5 = 0;
        var$6 = var$4.length;
        var$7 = var$3.$length0;
        var$8 = var$3;
        jl_AbstractStringBuilder_insertSpace(var$8, var$7, var$7 + var$6 | 0);
        var$9 = var$6 + var$5 | 0;
        while (var$5 < var$9) {
            var$10 = var$8.$buffer.data;
            var$11 = var$7 + 1 | 0;
            var$6 = var$5 + 1 | 0;
            var$10[var$7] = var$4[var$5];
            var$7 = var$11;
            var$5 = var$6;
        }
        var$7 = $temp.$length0;
        jl_AbstractStringBuilder_insertSpace(var$3, var$7, var$7 + 1 | 0);
        var$3.$buffer.data[var$7] = 124;
        $i = ju_BitSet_nextSetBit($this.$bits, $i + 1 | 0);
    }
    var$5 = $temp.$length0;
    if (var$5 > 0)
        jl_AbstractStringBuilder_deleteCharAt($temp, var$5 - 1 | 0);
    var$3 = new jl_String;
    var$4 = $temp.$buffer;
    var$10 = var$4.data;
    var$5 = $temp.$length0;
    var$6 = var$10.length;
    if (var$5 >= 0 && var$5 <= (var$6 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$4.data, 0, var$5);
        return var$3;
    }
    $temp = new jl_IndexOutOfBoundsException;
    $temp.$suppressionEnabled = 1;
    $temp.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($temp);
    $rt_throw($temp);
},
jur_CharClass_hasUCI = $this => {
    return $this.$hasUCI0;
};
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
let jur_QuantifierSet_getInnerSet = $this => {
    return $this.$innerSet;
},
jur_QuantifierSet_first = ($this, $set) => {
    return !$this.$innerSet.$first($set) && !$this.$next0.$first($set) ? 0 : 1;
},
jur_QuantifierSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_QuantifierSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next0;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next0.$isSecondPassVisited = 1;
            $this.$next0 = $set;
        }
        $this.$next0.$processSecondPass();
    }
    $set = $this.$innerSet;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$innerSet = $set.$next0;
    }
};
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
let jur_LeafQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next0.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
},
jur_LeafQuantifierSet_getName = $this => {
    return $rt_s(223);
};
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier0 = null;
}
let jur_CompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min0;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CompositeQuantifierSet_getName = $this => {
    return jur_Quantifier_toString($this.$quantifier0);
},
jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_GroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_GroupQuantifierSet_getName = $this => {
    return $rt_s(224);
},
jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_AltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    return $shift;
},
jur_AltQuantifierSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
    $this.$innerSet.$setNext($next);
},
jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_UnifiedQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound && $this.$leaf.$accepts($stringIndex, $testString) > 0) {
        $stringIndex = $stringIndex + $this.$leaf.$charCount() | 0;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_UnifiedQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next0.$find0($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
},
jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields(),
jur_AbstractCharClass$PredefinedCharacterClasses_space = null,
jur_AbstractCharClass$PredefinedCharacterClasses_digit = null,
jur_AbstractCharClass$PredefinedCharacterClasses_contents = null,
jur_AbstractCharClass$PredefinedCharacterClasses_getObject = ($this, $name) => {
    let $i, $row, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data;
        if ($i >= $row.length) {
            var$4 = new ju_MissingResourceException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = $rt_s(40);
            var$4.$className = $rt_s(40);
            var$4.$key1 = $name;
            $rt_throw(var$4);
        }
        $row = $row[$i].data;
        var$5 = $row[0];
        if ($name === var$5)
            var$6 = 1;
        else if (!(var$5 instanceof jl_String))
            var$6 = 0;
        else {
            var$5 = var$5;
            var$6 = $name.$nativeString !== var$5.$nativeString ? 0 : 1;
        }
        if (var$6)
            break;
        $i = $i + 1 | 0;
    }
    return $row[1];
},
jur_AbstractCharClass$PredefinedCharacterClasses__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = new jur_AbstractCharClass$LazySpace;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = var$1;
    var$2 = new jur_AbstractCharClass$LazyDigit;
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = var$2;
    var$3 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$4 = var$3.data;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(225);
    var$6[1] = new jur_AbstractCharClass$LazyLower;
    var$4[0] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(226);
    var$6[1] = new jur_AbstractCharClass$LazyUpper;
    var$4[1] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(227);
    var$6[1] = new jur_AbstractCharClass$LazyASCII;
    var$4[2] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(228);
    var$6[1] = new jur_AbstractCharClass$LazyAlpha;
    var$4[3] = var$5;
    var$4[4] = $rt_wrapArray(jl_Object, [$rt_s(229), var$2]);
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(230);
    var$6[1] = new jur_AbstractCharClass$LazyAlnum;
    var$4[5] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(231);
    var$6[1] = new jur_AbstractCharClass$LazyPunct;
    var$4[6] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(232);
    var$6[1] = new jur_AbstractCharClass$LazyGraph;
    var$4[7] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(233);
    var$6[1] = new jur_AbstractCharClass$LazyPrint;
    var$4[8] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(234);
    var$6[1] = new jur_AbstractCharClass$LazyBlank;
    var$4[9] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(235);
    var$6[1] = new jur_AbstractCharClass$LazyCntrl;
    var$4[10] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(236);
    var$6[1] = new jur_AbstractCharClass$LazyXDigit;
    var$4[11] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(237);
    var$6[1] = new jur_AbstractCharClass$LazyJavaLowerCase;
    var$4[12] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(238);
    var$6[1] = new jur_AbstractCharClass$LazyJavaUpperCase;
    var$4[13] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(239);
    var$6[1] = new jur_AbstractCharClass$LazyJavaWhitespace;
    var$4[14] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(240);
    var$6[1] = new jur_AbstractCharClass$LazyJavaMirrored;
    var$4[15] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(241);
    var$6[1] = new jur_AbstractCharClass$LazyJavaDefined;
    var$4[16] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(242);
    var$6[1] = new jur_AbstractCharClass$LazyJavaDigit;
    var$4[17] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(243);
    var$6[1] = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable;
    var$4[18] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(244);
    var$6[1] = new jur_AbstractCharClass$LazyJavaISOControl;
    var$4[19] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(245);
    var$6[1] = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart;
    var$4[20] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(246);
    var$6[1] = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart;
    var$4[21] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(247);
    var$6[1] = new jur_AbstractCharClass$LazyJavaLetter;
    var$4[22] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(248);
    var$6[1] = new jur_AbstractCharClass$LazyJavaLetterOrDigit;
    var$4[23] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(249);
    var$6[1] = new jur_AbstractCharClass$LazyJavaSpaceChar;
    var$4[24] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(250);
    var$6[1] = new jur_AbstractCharClass$LazyJavaTitleCase;
    var$4[25] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(251);
    var$6[1] = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart;
    var$4[26] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(252);
    var$6[1] = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart;
    var$4[27] = var$5;
    var$4[28] = $rt_wrapArray(jl_Object, [$rt_s(253), var$1]);
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(254);
    var$6[1] = new jur_AbstractCharClass$LazyWord;
    var$4[29] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(255);
    var$6[1] = new jur_AbstractCharClass$LazyNonWord;
    var$4[30] = var$5;
    var$4[31] = $rt_wrapArray(jl_Object, [$rt_s(256), var$1]);
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(257);
    var$6[1] = new jur_AbstractCharClass$LazyNonSpace;
    var$4[32] = var$5;
    var$4[33] = $rt_wrapArray(jl_Object, [$rt_s(258), var$2]);
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(259);
    var$6[1] = new jur_AbstractCharClass$LazyNonDigit;
    var$4[34] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(260);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 0;
    var$1.$end0 = 127;
    var$6[1] = var$1;
    var$4[35] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(261);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 128;
    var$1.$end0 = 255;
    var$6[1] = var$1;
    var$4[36] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(262);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 256;
    var$1.$end0 = 383;
    var$6[1] = var$1;
    var$4[37] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(263);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 384;
    var$1.$end0 = 591;
    var$6[1] = var$1;
    var$4[38] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(264);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 592;
    var$1.$end0 = 687;
    var$6[1] = var$1;
    var$4[39] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(265);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 688;
    var$1.$end0 = 767;
    var$6[1] = var$1;
    var$4[40] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(266);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 768;
    var$1.$end0 = 879;
    var$6[1] = var$1;
    var$4[41] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(267);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 880;
    var$1.$end0 = 1023;
    var$6[1] = var$1;
    var$4[42] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(268);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1024;
    var$1.$end0 = 1279;
    var$6[1] = var$1;
    var$4[43] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(269);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1280;
    var$1.$end0 = 1327;
    var$6[1] = var$1;
    var$4[44] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(270);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1328;
    var$1.$end0 = 1423;
    var$6[1] = var$1;
    var$4[45] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(271);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1424;
    var$1.$end0 = 1535;
    var$6[1] = var$1;
    var$4[46] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(272);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1536;
    var$1.$end0 = 1791;
    var$6[1] = var$1;
    var$4[47] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(273);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1792;
    var$1.$end0 = 1871;
    var$6[1] = var$1;
    var$4[48] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(274);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1872;
    var$1.$end0 = 1919;
    var$6[1] = var$1;
    var$4[49] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(275);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 1920;
    var$1.$end0 = 1983;
    var$6[1] = var$1;
    var$4[50] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(276);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 2304;
    var$1.$end0 = 2431;
    var$6[1] = var$1;
    var$4[51] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(277);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 2432;
    var$1.$end0 = 2559;
    var$6[1] = var$1;
    var$4[52] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(278);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 2560;
    var$1.$end0 = 2687;
    var$6[1] = var$1;
    var$4[53] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(279);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 2688;
    var$1.$end0 = 2815;
    var$6[1] = var$1;
    var$4[54] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(280);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 2816;
    var$1.$end0 = 2943;
    var$6[1] = var$1;
    var$4[55] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(281);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 2944;
    var$1.$end0 = 3071;
    var$6[1] = var$1;
    var$4[56] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(282);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 3072;
    var$1.$end0 = 3199;
    var$6[1] = var$1;
    var$4[57] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(283);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 3200;
    var$1.$end0 = 3327;
    var$6[1] = var$1;
    var$4[58] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(284);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 3328;
    var$1.$end0 = 3455;
    var$6[1] = var$1;
    var$4[59] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(285);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 3456;
    var$1.$end0 = 3583;
    var$6[1] = var$1;
    var$4[60] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(286);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 3584;
    var$1.$end0 = 3711;
    var$6[1] = var$1;
    var$4[61] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(287);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 3712;
    var$1.$end0 = 3839;
    var$6[1] = var$1;
    var$4[62] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(288);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 3840;
    var$1.$end0 = 4095;
    var$6[1] = var$1;
    var$4[63] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(289);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 4096;
    var$1.$end0 = 4255;
    var$6[1] = var$1;
    var$4[64] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(290);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 4256;
    var$1.$end0 = 4351;
    var$6[1] = var$1;
    var$4[65] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(291);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 4352;
    var$1.$end0 = 4607;
    var$6[1] = var$1;
    var$4[66] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(292);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 4608;
    var$1.$end0 = 4991;
    var$6[1] = var$1;
    var$4[67] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(293);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 4992;
    var$1.$end0 = 5023;
    var$6[1] = var$1;
    var$4[68] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(294);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5024;
    var$1.$end0 = 5119;
    var$6[1] = var$1;
    var$4[69] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(295);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5120;
    var$1.$end0 = 5759;
    var$6[1] = var$1;
    var$4[70] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(296);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5760;
    var$1.$end0 = 5791;
    var$6[1] = var$1;
    var$4[71] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(297);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5792;
    var$1.$end0 = 5887;
    var$6[1] = var$1;
    var$4[72] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(298);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5888;
    var$1.$end0 = 5919;
    var$6[1] = var$1;
    var$4[73] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(299);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5920;
    var$1.$end0 = 5951;
    var$6[1] = var$1;
    var$4[74] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(300);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5952;
    var$1.$end0 = 5983;
    var$6[1] = var$1;
    var$4[75] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(301);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 5984;
    var$1.$end0 = 6015;
    var$6[1] = var$1;
    var$4[76] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(302);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 6016;
    var$1.$end0 = 6143;
    var$6[1] = var$1;
    var$4[77] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(303);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 6144;
    var$1.$end0 = 6319;
    var$6[1] = var$1;
    var$4[78] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(304);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 6400;
    var$1.$end0 = 6479;
    var$6[1] = var$1;
    var$4[79] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(305);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 6480;
    var$1.$end0 = 6527;
    var$6[1] = var$1;
    var$4[80] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(306);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 6528;
    var$1.$end0 = 6623;
    var$6[1] = var$1;
    var$4[81] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(307);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 6624;
    var$1.$end0 = 6655;
    var$6[1] = var$1;
    var$4[82] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(308);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 6656;
    var$1.$end0 = 6687;
    var$6[1] = var$1;
    var$4[83] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(309);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 7424;
    var$1.$end0 = 7551;
    var$6[1] = var$1;
    var$4[84] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(310);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 7552;
    var$1.$end0 = 7615;
    var$6[1] = var$1;
    var$4[85] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(311);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 7616;
    var$1.$end0 = 7679;
    var$6[1] = var$1;
    var$4[86] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(312);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 7680;
    var$1.$end0 = 7935;
    var$6[1] = var$1;
    var$4[87] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(313);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 7936;
    var$1.$end0 = 8191;
    var$6[1] = var$1;
    var$4[88] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(314);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8192;
    var$1.$end0 = 8303;
    var$6[1] = var$1;
    var$4[89] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(315);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8304;
    var$1.$end0 = 8351;
    var$6[1] = var$1;
    var$4[90] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(316);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8352;
    var$1.$end0 = 8399;
    var$6[1] = var$1;
    var$4[91] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(317);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8400;
    var$1.$end0 = 8447;
    var$6[1] = var$1;
    var$4[92] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(318);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8448;
    var$1.$end0 = 8527;
    var$6[1] = var$1;
    var$4[93] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(319);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8528;
    var$1.$end0 = 8591;
    var$6[1] = var$1;
    var$4[94] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(320);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8592;
    var$1.$end0 = 8703;
    var$6[1] = var$1;
    var$4[95] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(321);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8704;
    var$1.$end0 = 8959;
    var$6[1] = var$1;
    var$4[96] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(322);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 8960;
    var$1.$end0 = 9215;
    var$6[1] = var$1;
    var$4[97] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(323);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 9216;
    var$1.$end0 = 9279;
    var$6[1] = var$1;
    var$4[98] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(324);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 9280;
    var$1.$end0 = 9311;
    var$6[1] = var$1;
    var$4[99] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(325);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 9312;
    var$1.$end0 = 9471;
    var$6[1] = var$1;
    var$4[100] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(326);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 9472;
    var$1.$end0 = 9599;
    var$6[1] = var$1;
    var$4[101] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(327);
    var$1 = new jur_AbstractCharClass$LazyRange;
    var$1.$start = 9600;
    var$1.$end0 = 9631;
    var$6[1] = var$1;
    var$4[102] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(328);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$4[103] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(329);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$4[104] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(330);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$4[105] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(331);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$4[106] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(332);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$4[107] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(333);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$4[108] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(334);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$4[109] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(335);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$4[110] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(336);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$4[111] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(337);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$4[112] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(338);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$4[113] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(339);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$4[114] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(340);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$4[115] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(341);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$4[116] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(342);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$4[117] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(343);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$4[118] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(344);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$4[119] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(345);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$4[120] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(346);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$4[121] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(347);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$4[122] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(348);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$4[123] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(349);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$4[124] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(350);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$4[125] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(351);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$4[126] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(352);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$4[127] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(353);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$4[128] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(354);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$4[129] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(355);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$4[130] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(356);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$4[131] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(357);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$4[132] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(358);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$4[133] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(359);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$4[134] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(360);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$4[135] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(361);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$4[136] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(362);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$4[137] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(363);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$4[138] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(364);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$4[139] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(365);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$4[140] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(366);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$4[141] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(367);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$4[142] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(368);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$4[143] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(369);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$4[144] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(370);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$4[145] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(371);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$4[146] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(372);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$4[147] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(373);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$4[148] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(374);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$4[149] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(375);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$4[150] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(376);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$4[151] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(377);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$4[152] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(378);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$4[153] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(379);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$4[154] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(26);
    var$6[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$4[155] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(380);
    var$1 = new jur_AbstractCharClass$LazySpecialsBlock;
    jur_AbstractCharClass$LazyCharClass__init_(var$1);
    var$6[1] = var$1;
    var$4[156] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(381);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$4[157] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(382);
    var$6[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$4[158] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(383);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$4[159] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(384);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$4[160] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(385);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$4[161] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(386);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$4[162] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(387);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$4[163] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(388);
    var$6[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$4[164] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(389);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$4[165] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(390);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$4[166] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(391);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$4[167] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(392);
    var$6[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$4[168] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(393);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$4[169] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(394);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$4[170] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(395);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$4[171] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(396);
    var$6[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$4[172] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(397);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$4[173] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(398);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$4[174] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(399);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$4[175] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(400);
    var$6[1] = jur_AbstractCharClass$LazyCategoryScope__init_2(983040, 1, 1);
    var$4[176] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(401);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$4[177] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(402);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$4[178] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(403);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$4[179] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(404);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_1(19, 0, 1);
    var$4[180] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(405);
    var$6[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$4[181] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(406);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$4[182] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(407);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$4[183] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(408);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$4[184] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(409);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$4[185] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(410);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$4[186] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(411);
    var$6[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$4[187] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(412);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$4[188] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(413);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$4[189] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(414);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$4[190] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(415);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$4[191] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(416);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$4[192] = var$5;
    var$5 = $rt_createArray(jl_Object, 2);
    var$6 = var$5.data;
    var$6[0] = $rt_s(417);
    var$6[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$4[193] = var$5;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$3;
};
function jur_AbstractCharClass$LazyCharClass() {
    let a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
let jur_AbstractCharClass$LazyCharClass__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyCharClass_getValue = ($this, $negative) => {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = jur_AbstractCharClass_setNegative($this.$computeValue(), 1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
};
function jur_Quantifier() {
    let a = this; jur_SpecialToken.call(a);
    a.$min0 = 0;
    a.$max2 = 0;
}
let jur_Quantifier_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$min0;
    var$2 = $this.$max2;
    if (var$2 == 2147483647)
        var$3 = $rt_s(40);
    else {
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        var$3 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, var$2, 10)).$toString();
    }
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$2 = var$4.$length0;
    var$5 = var$4;
    jl_AbstractStringBuilder_insertSpace(var$5, var$2, var$2 + 1 | 0);
    var$5.$buffer.data[var$2] = 123;
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, var$1, 10);
    var$1 = var$4.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$1, var$1 + 1 | 0);
    var$5.$buffer.data[var$1] = 44;
    var$6 = var$4.$length0;
    var$3 = var$3 === null ? $rt_s(1) : var$3;
    jl_AbstractStringBuilder_insert(var$5, var$6, var$3);
    var$1 = var$4.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$1, var$1 + 1 | 0);
    var$5.$buffer.data[var$1] = 125;
    var$3 = new jl_String;
    var$7 = var$4.$buffer;
    var$8 = var$7.data;
    var$1 = var$4.$length0;
    var$2 = var$8.length;
    if (var$1 >= 0 && var$1 <= (var$2 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$7.data, 0, var$1);
        return var$3;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$3);
    $rt_throw(var$3);
},
jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet),
jur_FSet$PossessiveFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_FSet$PossessiveFSet_getName = $this => {
    return $rt_s(418);
},
jur_FSet$PossessiveFSet_hasConsumed = ($this, $mr) => {
    return 0;
};
function ju_BitSet() {
    let a = this; jl_Object.call(a);
    a.$data = null;
    a.$length2 = 0;
}
let ju_BitSet_set0 = ($this, $bitIndex) => {
    let var$2, $index, var$4;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length2) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length2 = $bitIndex + 1 | 0;
    }
    var$4 = $this.$data.data;
    var$4[$index] = var$4[$index] | 1 << ($bitIndex % 32 | 0);
},
ju_BitSet_set = ($this, $fromIndex, $toIndex) => {
    let $fromDataIndex, $toDataIndex, var$5, var$6, $i, var$8;
    if ($fromIndex >= 0) {
        $fromDataIndex = $rt_compare($fromIndex, $toIndex);
        if ($fromDataIndex <= 0) {
            if (!$fromDataIndex)
                return;
            $fromDataIndex = $fromIndex / 32 | 0;
            $toDataIndex = $toIndex / 32 | 0;
            if ($toIndex > $this.$length2) {
                ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
                $this.$length2 = $toIndex;
            }
            if ($fromDataIndex == $toDataIndex) {
                var$5 = $this.$data.data;
                $toDataIndex = var$5[$fromDataIndex];
                var$6 = (-1) << ($fromIndex % 32 | 0);
                $fromIndex = $toIndex % 32 | 0;
                var$5[$fromDataIndex] = $toDataIndex | var$6 & (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
            } else {
                var$5 = $this.$data.data;
                var$5[$fromDataIndex] = var$5[$fromDataIndex] | (-1) << ($fromIndex % 32 | 0);
                $i = $fromDataIndex + 1 | 0;
                while ($i < $toDataIndex) {
                    var$5[$i] = (-1);
                    $i = $i + 1 | 0;
                }
                if ($toIndex & 31) {
                    $i = var$5[$toDataIndex];
                    $fromIndex = $toIndex % 32 | 0;
                    var$5[$toDataIndex] = $i | (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
                }
            }
            return;
        }
    }
    var$8 = new jl_IndexOutOfBoundsException;
    var$8.$suppressionEnabled = 1;
    var$8.$writableStackTrace = 1;
    $rt_throw(var$8);
},
ju_BitSet_clear = ($this, $bitIndex) => {
    let var$2, $index, var$4, var$5, var$6;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    var$4 = $this.$data.data;
    if ($index < var$4.length) {
        var$5 = var$4[$index];
        var$6 = ($bitIndex % 32 | 0) & 31;
        var$4[$index] = var$5 & ((-2) << var$6 | ((-2) >>> (32 - var$6 | 0) | 0));
        if ($bitIndex == ($this.$length2 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
},
ju_BitSet_clear0 = ($this, $fromIndex, $toIndex) => {
    let $fromDataIndex, $toDataIndex, var$5, $i, var$7, var$8;
    if ($fromIndex >= 0 && $fromIndex <= $toIndex) {
        $fromDataIndex = $this.$length2;
        if ($fromIndex >= $fromDataIndex)
            return;
        if ($fromDataIndex < $toIndex)
            $toIndex = $fromDataIndex;
        if ($fromIndex == $toIndex)
            return;
        $fromDataIndex = $fromIndex / 32 | 0;
        $toDataIndex = $toIndex / 32 | 0;
        if ($fromDataIndex == $toDataIndex) {
            var$5 = $this.$data.data;
            $i = var$5[$fromDataIndex];
            $fromIndex = $fromIndex % 32 | 0;
            var$5[$fromDataIndex] = $i & ((!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0) | (-1) << ($toIndex % 32 | 0));
        } else {
            var$5 = $this.$data.data;
            var$7 = var$5[$fromDataIndex];
            $fromIndex = $fromIndex % 32 | 0;
            var$5[$fromDataIndex] = var$7 & (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
            $i = $fromDataIndex + 1 | 0;
            while ($i < $toDataIndex) {
                var$5[$i] = 0;
                $i = $i + 1 | 0;
            }
            if ($toIndex & 31)
                var$5[$toDataIndex] = var$5[$toDataIndex] & (-1) << ($toIndex % 32 | 0);
        }
        ju_BitSet_recalculateLength($this);
        return;
    }
    var$8 = new jl_IndexOutOfBoundsException;
    var$8.$suppressionEnabled = 1;
    var$8.$writableStackTrace = 1;
    $rt_throw(var$8);
},
ju_BitSet_get = ($this, $bitIndex) => {
    let var$2, $index, var$4;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    var$4 = $this.$data.data;
    return $index < var$4.length && var$4[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
},
ju_BitSet_nextSetBit = ($this, $fromIndex) => {
    let var$2, $top, $index, var$5, $i;
    if ($fromIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    $top = $this.$length2;
    if ($fromIndex >= $top)
        return (-1);
    $index = $fromIndex / 32 | 0;
    var$5 = $this.$data.data;
    $i = var$5[$index] >>> ($fromIndex % 32 | 0) | 0;
    if ($i)
        return jl_Integer_numberOfTrailingZeros($i) + $fromIndex | 0;
    $top = ($top + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if (var$5[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$5[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
ju_BitSet_nextClearBit = ($this, $fromIndex) => {
    let var$2, var$3, $index, var$5, $top, $i;
    if ($fromIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    var$3 = $this.$length2;
    if ($fromIndex >= var$3)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    var$5 = $this.$data.data;
    $top = (var$5[$index] ^ (-1)) >>> ($fromIndex % 32 | 0) | 0;
    if ($top)
        return jl_Integer_numberOfTrailingZeros($top) + $fromIndex | 0;
    $top = (var$3 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if (var$5[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$5[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return var$3;
},
ju_BitSet_ensureCapacity = ($this, $capacity) => {
    let var$2, var$3, $newArrayLength, $newArrayLength_0, var$6, var$7;
    var$2 = $this.$data.data;
    var$3 = var$2.length;
    if (var$3 >= $capacity)
        return;
    $newArrayLength = ($capacity * 3 | 0) / 2 | 0;
    $newArrayLength_0 = (var$3 * 2 | 0) + 1 | 0;
    if ($newArrayLength > $newArrayLength_0)
        $newArrayLength_0 = $newArrayLength;
    var$6 = $rt_createIntArray($newArrayLength_0);
    if ($newArrayLength_0 < var$3)
        var$3 = $newArrayLength_0;
    var$7 = var$6.data;
    $capacity = 0;
    while ($capacity < var$3) {
        var$7[$capacity] = var$2[$capacity];
        $capacity = $capacity + 1 | 0;
    }
    $this.$data = var$6;
},
ju_BitSet_recalculateLength = $this => {
    let $top, $i, $sz;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $this.$length2 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length2 = $this.$length2 - 32 | 0;
        }
        $this.$length2 = $this.$length2 - $sz | 0;
    }
},
ju_BitSet_intersects = ($this, $set) => {
    let var$2, $sz, var$4, $sz_0, $i;
    var$2 = $this.$data.data;
    $sz = var$2.length;
    var$4 = $set.$data.data;
    $sz_0 = var$4.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        if (var$2[$i] & var$4[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
ju_BitSet_and = ($this, $set) => {
    let var$2, var$3, var$4, $sz, $i, var$7, var$8;
    var$2 = $this.$data.data;
    var$3 = var$2.length;
    var$4 = $set.$data.data;
    $sz = var$4.length;
    if (var$3 < $sz)
        $sz = var$3;
    $i = 0;
    while ($i < $sz) {
        var$2[$i] = var$2[$i] & var$4[$i];
        $i = $i + 1 | 0;
    }
    while ($sz < var$3) {
        var$2[$sz] = 0;
        $sz = $sz + 1 | 0;
    }
    var$7 = $this.$length2;
    var$8 = $set.$length2;
    if (var$7 < var$8)
        var$8 = var$7;
    $this.$length2 = var$8;
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_andNot = ($this, $set) => {
    let var$2, $sz, var$4, $sz_0, $i;
    var$2 = $this.$data.data;
    $sz = var$2.length;
    var$4 = $set.$data.data;
    $sz_0 = var$4.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        var$2[$i] = var$2[$i] & (var$4[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_or = ($this, $set) => {
    let $sz, $sz_0, var$4, var$5, $i;
    $sz = $this.$length2;
    $sz_0 = $set.$length2;
    if ($sz > $sz_0)
        $sz_0 = $sz;
    $this.$length2 = $sz_0;
    ju_BitSet_ensureCapacity($this, ($sz_0 + 31 | 0) / 32 | 0);
    var$4 = $this.$data.data;
    $sz = var$4.length;
    var$5 = $set.$data.data;
    $sz_0 = var$5.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        var$4[$i] = var$4[$i] | var$5[$i];
        $i = $i + 1 | 0;
    }
},
ju_BitSet_xor = ($this, $set) => {
    let $sz, $i, var$4, var$5, $sz_0;
    $sz = $this.$length2;
    $i = $set.$length2;
    if ($sz > $i)
        $i = $sz;
    $this.$length2 = $i;
    ju_BitSet_ensureCapacity($this, ($i + 31 | 0) / 32 | 0);
    var$4 = $this.$data.data;
    $sz = var$4.length;
    var$5 = $set.$data.data;
    $sz_0 = var$5.length;
    if ($sz < $sz_0)
        $sz_0 = $sz;
    $i = 0;
    while ($i < $sz_0) {
        var$4[$i] = var$4[$i] ^ var$5[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
};
function jur_LowHighSurrogateRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt1 = 0;
}
let jur_LowHighSurrogateRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$leftBound;
    $strLength = $matchResult.$rightBound;
    var$6 = $stringIndex + 1 | 0;
    $strLength = $rt_compare(var$6, $strLength);
    if ($strLength > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$7 = $testString;
    if ($stringIndex >= 0 && $stringIndex < var$7.$nativeString.length) {
        $ch = var$7.$nativeString.charCodeAt($stringIndex);
        if (!$this.$surrChars.$contains0($ch))
            return (-1);
        $low = $ch & 64512;
        $high = $low != 55296 ? 0 : 1;
        a: {
            if ($high) {
                if ($strLength >= 0)
                    break a;
                if (var$6 >= 0 && var$6 < var$7.$nativeString.length) {
                    if ((var$7.$nativeString.charCodeAt(var$6) & 64512) != 56320 ? 0 : 1)
                        return (-1);
                    break a;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            if (($low != 56320 ? 0 : 1) && $stringIndex > $startStr) {
                $high = $stringIndex - 1 | 0;
                if ($high >= 0 && $high < var$7.$nativeString.length) {
                    if (!((var$7.$nativeString.charCodeAt($high) & 64512) != 55296 ? 0 : 1))
                        break a;
                    return (-1);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        return $this.$next0.$matches(var$6, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_LowHighSurrogateRangeSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = !$this.$alt1 ? $rt_s(419) : $rt_s(420);
    var$2 = $this.$surrChars.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$6 = $rt_s(421);
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$1);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$1 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    var$10 = var$3.$length0;
    var$11 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
};
function jur_CompositeRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
let jur_CompositeRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = jur_LowHighSurrogateRangeSet_matches($this.$withSurrogates, $stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
},
jur_CompositeRangeSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
    $this.$withSurrogates.$next0 = $next;
    $this.$withoutSurrogates.$setNext($next);
},
jur_CompositeRangeSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$1 = $this.$withoutSurrogates;
    if (var$1 === null)
        var$1 = $rt_s(1);
    else {
        var$1 = var$1;
        var$2 = var$1.$index;
        var$1 = var$1.$getName();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length0;
        var$5 = var$3;
        jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
        var$5.$buffer.data[var$4] = 60;
        var$6 = var$3.$length0;
        var$2 = var$2 === null ? $rt_s(1) : jl_String_toString(var$2);
        var$7 = var$5;
        jl_StringBuilder_insert(var$7, var$6, var$2);
        var$4 = var$3.$length0;
        jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
        var$5.$buffer.data[var$4] = 58;
        jl_StringBuilder_insert(var$7, var$3.$length0, var$1 === null ? $rt_s(1) : jl_String_toString(var$1));
        var$4 = var$3.$length0;
        jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
        var$5.$buffer.data[var$4] = 62;
        var$1 = new jl_String;
        var$8 = var$3.$buffer;
        var$9 = var$8.data;
        var$4 = var$3.$length0;
        var$10 = var$9.length;
        if (var$4 >= 0 && var$4 <= (var$10 - 0 | 0))
            var$1.$nativeString = $rt_charArrayToString(var$8.data, 0, var$4);
        else {
            var$1 = new jl_IndexOutOfBoundsException;
            jl_RuntimeException__init_(var$1);
            $rt_throw(var$1);
        }
    }
    a: {
        var$2 = $this.$withSurrogates;
        if (var$2 === null)
            var$5 = $rt_s(1);
        else {
            var$2 = var$2;
            var$3 = var$2.$index;
            var$2 = var$2;
            var$7 = !var$2.$alt1 ? $rt_s(419) : $rt_s(420);
            var$2 = var$2.$surrChars.$toString();
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            var$6 = var$5.$length0;
            var$11 = var$5;
            jl_AbstractStringBuilder_insert2(var$11, var$6, $rt_s(421));
            jl_AbstractStringBuilder_insert2(var$11, var$5.$length0, var$7);
            jl_AbstractStringBuilder_insert2(var$11, var$5.$length0, var$2);
            var$12 = new jl_String;
            var$8 = var$5.$buffer;
            var$9 = var$8.data;
            var$4 = var$5.$length0;
            var$10 = var$9.length;
            if (var$4 >= 0 && var$4 <= (var$10 - 0 | 0)) {
                var$12.$nativeString = $rt_charArrayToString(var$8.data, 0, var$4);
                var$2 = new jl_StringBuilder;
                var$2.$buffer = $rt_createCharArray(16);
                var$4 = var$2.$length0;
                var$5 = var$2;
                jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
                var$5.$buffer.data[var$4] = 60;
                var$6 = var$2.$length0;
                var$3 = var$3 === null ? $rt_s(1) : jl_String_toString(var$3);
                var$7 = var$5;
                jl_StringBuilder_insert(var$7, var$6, var$3);
                var$4 = var$2.$length0;
                jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
                var$5.$buffer.data[var$4] = 58;
                jl_StringBuilder_insert(var$7, var$2.$length0, jl_String_toString(var$12));
                var$4 = var$2.$length0;
                jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
                var$5.$buffer.data[var$4] = 62;
                var$5 = new jl_String;
                var$8 = var$2.$buffer;
                var$9 = var$8.data;
                var$4 = var$2.$length0;
                var$10 = var$9.length;
                if (var$4 >= 0 && var$4 <= (var$10 - 0 | 0)) {
                    var$5.$nativeString = $rt_charArrayToString(var$8.data, 0, var$4);
                    break a;
                }
                var$1 = new jl_IndexOutOfBoundsException;
                jl_RuntimeException__init_(var$1);
                $rt_throw(var$1);
            }
            $rt_throw(jl_IndexOutOfBoundsException__init_());
        }
    }
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$6 = var$2.$length0;
    var$7 = var$2;
    var$12 = $rt_s(422);
    var$3 = var$7;
    jl_AbstractStringBuilder_insert(var$3, var$6, var$12);
    jl_AbstractStringBuilder_insert(var$3, var$2.$length0, var$1);
    jl_AbstractStringBuilder_insert(var$3, var$2.$length0, $rt_s(423));
    jl_AbstractStringBuilder_insert(var$3, var$2.$length0, var$5);
    var$1 = new jl_String;
    var$8 = var$2.$buffer;
    var$9 = var$8.data;
    var$4 = var$2.$length0;
    var$10 = var$9.length;
    if (var$4 >= 0 && var$4 <= (var$10 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$8.data, 0, var$4);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
},
jur_CompositeRangeSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_CompositeRangeSet_first = ($this, $set) => {
    return 1;
};
function jur_SupplRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$chars0 = null;
    a.$alt0 = 0;
}
let jur_SupplRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $low, var$6, $high, $offset;
    a: {
        $strLength = $matchResult.$rightBound;
        if ($stringIndex < $strLength) {
            $low = $stringIndex + 1 | 0;
            var$6 = $testString;
            if ($stringIndex >= 0 && $stringIndex < var$6.$nativeString.length) {
                $high = var$6.$nativeString.charCodeAt($stringIndex);
                if ($this.$contains0($high)) {
                    $offset = $this.$next0.$matches($low, $testString, $matchResult);
                    if ($offset > 0)
                        return $offset;
                }
                if ($low >= $strLength)
                    break a;
                $strLength = $low + 1 | 0;
                if ($low >= 0 && $low < var$6.$nativeString.length) {
                    $low = var$6.$nativeString.charCodeAt($low);
                    $stringIndex = ($high & 64512) != 55296 ? 0 : 1;
                    if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                        break a;
                    if (!$this.$contains0((($high & 1023) << 10 | $low & 1023) + 65536 | 0))
                        break a;
                    else
                        return $this.$next0.$matches($strLength, $testString, $matchResult);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    return (-1);
},
jur_SupplRangeSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = !$this.$alt0 ? $rt_s(419) : $rt_s(420);
    var$2 = $this.$chars0.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$6 = $rt_s(421);
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$1);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$1 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    var$10 = var$3.$length0;
    var$11 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
},
jur_SupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars0.$contains0($ch);
},
jur_SupplRangeSet_first = ($this, $set) => {
    let var$2, var$3;
    if ($set instanceof jur_SupplCharSet)
        return $this.$chars0.$contains0($set.$ch1);
    if ($set instanceof jur_CharSet)
        return $this.$chars0.$contains0($set.$ch0);
    if ($set instanceof jur_SupplRangeSet) {
        var$2 = $this.$chars0;
        $set = $set.$chars0;
        return var$2.$getBits() !== null && $set.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), $set.$getBits()) : 1;
    }
    if (!($set instanceof jur_RangeSet))
        return 1;
    var$2 = $this.$chars0;
    var$3 = $set.$chars1;
    return var$2.$getBits() !== null && var$3.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), var$3.$getBits()) : 1;
},
jur_SupplRangeSet_getChars = $this => {
    return $this.$chars0;
},
jur_SupplRangeSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_SupplRangeSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet),
jur_UCISupplRangeSet_contains = ($this, $ch) => {
    let var$2;
    var$2 = $this.$chars0;
    if (jl_Character_upperCaseMapping === null) {
        if (jl_Character_$$metadata$$1 === null)
            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
    }
    $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch);
    if (jl_Character_lowerCaseMapping === null) {
        if (jl_Character_$$metadata$$0 === null)
            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
    }
    return var$2.$contains0(jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch));
},
jur_UCISupplRangeSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = !$this.$alt0 ? $rt_s(419) : $rt_s(420);
    var$2 = $this.$chars0.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$6 = $rt_s(424);
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$1);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$1 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    var$10 = var$3.$length0;
    var$11 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
};
function jur_UCIRangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars2 = null;
    a.$alt2 = 0;
}
let jur_UCIRangeSet_accepts = ($this, $strIndex, $testString) => {
    let var$3;
    var$3 = $this.$chars2;
    $testString = $testString;
    if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length) {
        $strIndex = $testString.$nativeString.charCodeAt($strIndex);
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        $strIndex = jl_Character_mapChar(jl_Character_upperCaseMapping, $strIndex) & 65535;
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        return !var$3.$contains0(jl_Character_mapChar(jl_Character_lowerCaseMapping, $strIndex) & 65535) ? (-1) : 1;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_UCIRangeSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = !$this.$alt2 ? $rt_s(419) : $rt_s(420);
    var$2 = $this.$chars2.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$6 = $rt_s(424);
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$1);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$1 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    var$10 = var$3.$length0;
    var$11 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
};
function jur_RangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt3 = 0;
}
let jur_RangeSet_accepts = ($this, $strIndex, $testString) => {
    let var$3;
    var$3 = $this.$chars1;
    $testString = $testString;
    if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length)
        return !var$3.$contains0($testString.$nativeString.charCodeAt($strIndex)) ? (-1) : 1;
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_RangeSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = !$this.$alt3 ? $rt_s(419) : $rt_s(420);
    var$2 = $this.$chars1.$toString();
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$6 = $rt_s(421);
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$1);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$2 === null ? $rt_s(1) : var$2);
    var$1 = new jl_String;
    var$8 = var$3.$buffer;
    var$9 = var$8.data;
    var$10 = var$3.$length0;
    var$11 = var$9.length;
    if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
},
jur_RangeSet_first = ($this, $set) => {
    let var$2, var$3;
    if ($set instanceof jur_CharSet)
        return $this.$chars1.$contains0($set.$ch0);
    if ($set instanceof jur_RangeSet) {
        var$2 = $this.$chars1;
        $set = $set.$chars1;
        return var$2.$getBits() !== null && $set.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), $set.$getBits()) : 1;
    }
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    var$2 = $this.$chars1;
    var$3 = $set.$chars0;
    return var$2.$getBits() !== null && var$3.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), var$3.$getBits()) : 1;
};
function jur_HangulDecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$decomposedChar = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength0 = 0;
}
let jur_HangulDecomposedCharSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_HangulDecomposedCharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($this.$decomposedCharUTF160 === null) {
        var$1 = new jl_String;
        var$2 = $this.$decomposedChar;
        var$1.$nativeString = $rt_charArrayToString(var$2.data, 0, var$2.data.length);
        $this.$decomposedCharUTF160 = var$1;
    }
    var$3 = $this.$decomposedCharUTF160;
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    var$4 = var$1.$length0;
    var$5 = var$1;
    var$6 = $rt_s(425);
    var$5 = var$5;
    jl_AbstractStringBuilder_insert(var$5, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$5, var$1.$length0, var$3 === null ? $rt_s(1) : var$3);
    var$6 = new jl_String;
    var$2 = var$1.$buffer;
    var$7 = var$2.data;
    var$8 = var$1.$length0;
    var$9 = var$7.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$2.data, 0, var$8);
        return var$6;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
},
jur_HangulDecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, $decompSyllable, $vIndex, $tIndex, var$8, var$9, $curSymb, $decompCurSymb, $i, $lIndex;
    $rightBound = $matchResult.$rightBound;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$8 = $strIndex + 1 | 0;
    var$9 = $testString;
    if ($strIndex >= 0 && $strIndex < var$9.$nativeString.length) {
        $curSymb = var$9.$nativeString.charCodeAt($strIndex);
        $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
        if ($decompCurSymb !== null) {
            $decompSyllable = $decompCurSymb.data;
            $i = 0;
            $strIndex = $decompSyllable.length;
            $curSymb = $this.$decomposedCharLength0;
            if ($strIndex != $curSymb)
                return (-1);
            while (true) {
                if ($i >= $curSymb)
                    return $this.$next0.$matches(var$8, $testString, $matchResult);
                if ($decompSyllable[$i] != $this.$decomposedChar.data[$i])
                    break;
                $i = $i + 1 | 0;
            }
            return (-1);
        }
        $decompCurSymb = $decompSyllable.data;
        $decompCurSymb[0] = $curSymb;
        $lIndex = $curSymb - 4352 | 0;
        if ($lIndex >= 0 && $lIndex < 19) {
            if (var$8 < $rightBound) {
                if (var$8 >= 0 && var$8 < var$9.$nativeString.length) {
                    $curSymb = var$9.$nativeString.charCodeAt(var$8);
                    $vIndex = $curSymb - 4449 | 0;
                } else {
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            if ($vIndex >= 0 && $vIndex < 21) {
                $strIndex = var$8 + 1 | 0;
                $decompCurSymb[1] = $curSymb;
                if ($strIndex < $rightBound) {
                    if ($strIndex >= 0 && $strIndex < var$9.$nativeString.length) {
                        $curSymb = var$9.$nativeString.charCodeAt($strIndex);
                        $tIndex = $curSymb - 4519 | 0;
                    } else {
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                if ($tIndex >= 0 && $tIndex < 28) {
                    a: {
                        $strIndex = $strIndex + 1 | 0;
                        $decompCurSymb[2] = $curSymb;
                        if ($this.$decomposedCharLength0 == 3) {
                            $curSymb = $decompCurSymb[0];
                            $decompSyllable = $this.$decomposedChar.data;
                            if ($curSymb == $decompSyllable[0] && $decompCurSymb[1] == $decompSyllable[1] && $decompCurSymb[2] == $decompSyllable[2]) {
                                $strIndex = $this.$next0.$matches($strIndex, $testString, $matchResult);
                                break a;
                            }
                        }
                        $strIndex = (-1);
                    }
                    return $strIndex;
                }
                b: {
                    if ($this.$decomposedCharLength0 == 2) {
                        $curSymb = $decompCurSymb[0];
                        $decompSyllable = $this.$decomposedChar.data;
                        if ($curSymb == $decompSyllable[0] && $decompCurSymb[1] == $decompSyllable[1]) {
                            $strIndex = $this.$next0.$matches($strIndex, $testString, $matchResult);
                            break b;
                        }
                    }
                    $strIndex = (-1);
                }
                return $strIndex;
            }
            return (-1);
        }
        return (-1);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_HangulDecomposedCharSet_first = ($this, $set) => {
    let var$2, var$3, var$4;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            $set = $set;
            if ($set.$decomposedCharUTF160 === null) {
                var$2 = new jl_String;
                var$3 = $set.$decomposedChar;
                var$2.$nativeString = $rt_charArrayToString(var$3.data, 0, var$3.data.length);
                $set.$decomposedCharUTF160 = var$2;
            }
            var$2 = $set.$decomposedCharUTF160;
            if ($this.$decomposedCharUTF160 === null) {
                $set = new jl_String;
                var$3 = $this.$decomposedChar;
                $set.$nativeString = $rt_charArrayToString(var$3.data, 0, var$3.data.length);
                $this.$decomposedCharUTF160 = $set;
            }
            $set = $this.$decomposedCharUTF160;
            if (var$2 === $set)
                var$4 = 1;
            else if (!($set instanceof jl_String))
                var$4 = 0;
            else {
                $set = $set;
                var$4 = var$2.$nativeString !== $set.$nativeString ? 0 : 1;
            }
            if (!var$4) {
                var$4 = 0;
                break a;
            }
        }
        var$4 = 1;
    }
    return var$4;
},
jur_HangulDecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
let jur_CharSet_charCount = $this => {
    return 1;
},
jur_CharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3;
    var$3 = $this.$ch0;
    $testString = $testString;
    if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length)
        return var$3 != $testString.$nativeString.charCodeAt($strIndex) ? (-1) : 1;
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_CharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, var$7, var$8, var$9, var$10, var$11;
    if ($testString instanceof jl_String) {
        $testStr = $testString;
        $strLength = $matchResult.$rightBound;
        while (true) {
            if ($strIndex >= $strLength)
                return (-1);
            var$6 = jl_String_indexOf($testStr, $this.$ch0, $strIndex);
            if (var$6 < 0)
                return (-1);
            var$7 = $this.$next0;
            $strIndex = var$6 + 1 | 0;
            if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
                break;
        }
        return var$6;
    }
    var$8 = $matchResult.$rightBound;
    var$7 = $this;
    $testStr = var$7;
    var$9 = $testString;
    a: {
        b: {
            while (true) {
                if ($strIndex > var$8) {
                    $strIndex = (-1);
                    break b;
                }
                var$10 = $strIndex + 1 | 0;
                if (var$10 > $matchResult.$rightBound) {
                    $matchResult.$hitEnd = 1;
                    var$6 = (-1);
                } else {
                    var$11 = $testStr.$ch0;
                    if ($strIndex < 0)
                        break a;
                    if ($strIndex >= var$9.$nativeString.length)
                        break a;
                    var$6 = var$11 != var$9.$nativeString.charCodeAt($strIndex) ? (-1) : 1;
                    var$6 = var$6 < 0 ? (-1) : var$7.$next0.$matches($strIndex + var$6 | 0, $testString, $matchResult);
                }
                if (var$6 >= 0)
                    break;
                $strIndex = var$10;
            }
        }
        return $strIndex;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_($testString);
    $rt_throw($testString);
},
jur_CharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6, var$7, var$8, var$9;
    if ($testString instanceof jl_String) {
        $testStr = $testString;
        a: {
            while (true) {
                if ($lastIndex < $strIndex)
                    return (-1);
                var$6 = jl_String_lastIndexOf($testStr, $this.$ch0, $lastIndex);
                if (var$6 < 0)
                    break a;
                if (var$6 < $strIndex)
                    break a;
                if ($this.$next0.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                    break;
                $lastIndex = var$6 + (-1) | 0;
            }
            return var$6;
        }
        return (-1);
    }
    var$7 = $this;
    var$8 = var$7;
    var$9 = $testString;
    b: {
        c: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break c;
                }
                if (($lastIndex + 1 | 0) > $matchResult.$rightBound) {
                    $matchResult.$hitEnd = 1;
                    var$6 = (-1);
                } else {
                    var$6 = var$8.$ch0;
                    if ($lastIndex < 0)
                        break b;
                    if ($lastIndex >= var$9.$nativeString.length)
                        break b;
                    var$6 = var$6 != var$9.$nativeString.charCodeAt($lastIndex) ? (-1) : 1;
                    var$6 = var$6 < 0 ? (-1) : var$7.$next0.$matches($lastIndex + var$6 | 0, $testString, $matchResult);
                }
                if (var$6 >= 0)
                    break;
                $lastIndex = $lastIndex + (-1) | 0;
            }
        }
        return $lastIndex;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_($testString);
    $rt_throw($testString);
},
jur_CharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$ch0;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$4.$buffer.data[var$3] = var$1;
    var$4 = new jl_String;
    var$5 = var$2.$buffer;
    var$6 = var$5.data;
    var$3 = var$2.$length0;
    var$7 = var$6.length;
    if (var$3 >= 0 && var$3 <= (var$7 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$5.data, 0, var$3);
        return var$4;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
jur_CharSet_first = ($this, $set) => {
    let var$2, var$3, var$4, var$5;
    if ($set instanceof jur_CharSet)
        return $set.$ch0 != $this.$ch0 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains0($this.$ch0);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    $set = $set;
    var$2 = $this.$ch0;
    var$3 = new jl_String;
    var$4 = $rt_createCharArray(1);
    var$5 = var$4.data;
    var$5[0] = var$2;
    var$3.$nativeString = $rt_charArrayToString(var$4.data, 0, var$5.length);
    $set = $set.$chars1;
    var$3 = var$3;
    if (0 >= var$3.$nativeString.length) {
        $set = new jl_StringIndexOutOfBoundsException;
        $set.$suppressionEnabled = 1;
        $set.$writableStackTrace = 1;
        $rt_throw($set);
    }
    return (!$set.$contains0(var$3.$nativeString.charCodeAt(0)) ? (-1) : 1) <= 0 ? 0 : 1;
};
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
let jur_UCICharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3;
    var$3 = $this.$ch2;
    $testString = $testString;
    if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length) {
        $strIndex = $testString.$nativeString.charCodeAt($strIndex);
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        $strIndex = jl_Character_mapChar(jl_Character_upperCaseMapping, $strIndex) & 65535;
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        return var$3 != (jl_Character_mapChar(jl_Character_lowerCaseMapping, $strIndex) & 65535) ? (-1) : 1;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_UCICharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$ch2;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(426);
    jl_AbstractStringBuilder_insert(var$4, var$3, var$5);
    var$3 = var$2.$length0;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$4.$buffer.data[var$3] = var$1;
    var$6 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$3 = var$2.$length0;
    var$9 = var$8.length;
    if (var$3 >= 0 && var$3 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$3);
        return var$6;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
};
function jur_CICharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$ch3 = 0;
    a.$supplement = 0;
}
let jur_CICharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3;
    var$3 = $this.$ch3;
    $testString = $testString;
    if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length) {
        a: {
            b: {
                if (var$3 != $testString.$nativeString.charCodeAt($strIndex)) {
                    var$3 = $this.$supplement;
                    if ($strIndex < 0)
                        break a;
                    if ($strIndex >= $testString.$nativeString.length)
                        break a;
                    if (var$3 != $testString.$nativeString.charCodeAt($strIndex)) {
                        $strIndex = (-1);
                        break b;
                    }
                }
                $strIndex = 1;
            }
            return $strIndex;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_CICharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$ch3;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(427);
    jl_AbstractStringBuilder_insert(var$4, var$3, var$5);
    var$3 = var$2.$length0;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$4.$buffer.data[var$3] = var$1;
    var$6 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$3 = var$2.$length0;
    var$9 = var$8.length;
    if (var$3 >= 0 && var$3 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$3);
        return var$6;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
};
function jur_DecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar0 = null;
    a.$decomposedCharLength = 0;
}
let jur_DecomposedCharSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_DecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $decCodePoint, $rightBound, $curChar, var$7, $decCurCodePoint, var$9, var$10;
    $decCodePoint = $rt_createIntArray(4);
    $rightBound = $matchResult.$rightBound;
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound);
    var$7 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_decompTable.$get3($curChar);
    if ($decCurCodePoint === null) {
        var$9 = $decCodePoint.data;
        $strIndex = 1;
        var$9[0] = $curChar;
    } else {
        $strIndex = $decCurCodePoint.data.length;
        jl_System_fastArraycopy($decCurCodePoint, 0, $decCodePoint, 0, $strIndex);
        $strIndex = 0 + $strIndex | 0;
    }
    a: {
        if (var$7 < $rightBound) {
            $decCurCodePoint = $decCodePoint.data;
            $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
            while ($strIndex < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass($curChar)) {
                    var$10 = $strIndex + 1 | 0;
                    $decCurCodePoint[$strIndex] = $curChar;
                } else {
                    var$9 = (jur_Lexer_decompTable.$get3($curChar)).data;
                    if (var$9.length != 2) {
                        var$10 = $strIndex + 1 | 0;
                        $decCurCodePoint[$strIndex] = var$9[0];
                    } else {
                        $curChar = $strIndex + 1 | 0;
                        $decCurCodePoint[$strIndex] = var$9[0];
                        var$10 = $curChar + 1 | 0;
                        $decCurCodePoint[$curChar] = var$9[1];
                    }
                }
                var$7 = var$7 + $this.$readCharsForCodePoint | 0;
                if (var$7 >= $rightBound) {
                    $strIndex = var$10;
                    break a;
                }
                $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
                $strIndex = var$10;
            }
        }
    }
    if ($strIndex != $this.$decomposedCharLength)
        return (-1);
    var$9 = $decCodePoint.data;
    $curChar = 0;
    while (true) {
        if ($curChar >= $strIndex)
            return $this.$next0.$matches(var$7, $testString, $matchResult);
        if (var$9[$curChar] != $this.$decomposedChar0.data[$curChar])
            break;
        $curChar = $curChar + 1 | 0;
    }
    return (-1);
},
jur_DecomposedCharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($this.$decomposedCharUTF16 === null) {
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        var$2 = 0;
        var$3 = var$1;
        while (var$2 < $this.$decomposedCharLength) {
            var$4 = jl_Character_toChars($this.$decomposedChar0.data[var$2]);
            var$5 = var$4.data.length;
            var$6 = var$3.$length0;
            jl_AbstractStringBuilder_insert3(var$3, var$6, var$4, 0, var$5);
            var$2 = var$2 + 1 | 0;
        }
        var$3 = new jl_String;
        var$4 = var$1.$buffer;
        var$7 = var$4.data;
        var$8 = var$1.$length0;
        var$5 = var$7.length;
        if (var$8 >= 0 && var$8 <= (var$5 - 0 | 0)) {
            var$3.$nativeString = $rt_charArrayToString(var$4.data, 0, var$8);
            $this.$decomposedCharUTF16 = var$3;
        } else {
            var$1 = new jl_IndexOutOfBoundsException;
            jl_Throwable__init_(var$1);
            $rt_throw(var$1);
        }
    }
    var$9 = $this.$decomposedCharUTF16;
    var$1 = new jl_StringBuilder;
    var$1.$buffer = $rt_createCharArray(16);
    var$2 = var$1.$length0;
    var$10 = var$1;
    var$3 = $rt_s(428);
    var$10 = var$10;
    jl_AbstractStringBuilder_insert(var$10, var$2, var$3);
    jl_AbstractStringBuilder_insert(var$10, var$1.$length0, var$9 === null ? $rt_s(1) : var$9);
    var$3 = new jl_String;
    var$4 = var$1.$buffer;
    var$7 = var$4.data;
    var$8 = var$1.$length0;
    var$5 = var$7.length;
    if (var$8 >= 0 && var$8 <= (var$5 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$4.data, 0, var$8);
        return var$3;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
},
jur_DecomposedCharSet_codePointAt = ($this, $strIndex, $testString, $rightBound) => {
    let $curChar, $low, $curCodePointUTF16, var$7;
    a: {
        $this.$readCharsForCodePoint = 1;
        if ($strIndex >= ($rightBound - 1 | 0)) {
            $testString = $testString;
            if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length) {
                $curChar = $testString.$nativeString.charCodeAt($strIndex);
                break a;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $rightBound = $strIndex + 1 | 0;
        $testString = $testString;
        if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length) {
            $curChar = $testString.$nativeString.charCodeAt($strIndex);
            if ($rightBound >= 0 && $rightBound < $testString.$nativeString.length) {
                $low = $testString.$nativeString.charCodeAt($rightBound);
                $strIndex = ($curChar & 64512) != 55296 ? 0 : 1;
                if ($strIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0) {
                    $curCodePointUTF16 = $rt_createCharArray(2);
                    var$7 = $curCodePointUTF16.data;
                    var$7[0] = $curChar;
                    var$7[1] = $low;
                    $curChar = jl_Character_codePointAt($curCodePointUTF16, 0, var$7.length);
                    $this.$readCharsForCodePoint = 2;
                }
                break a;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return $curChar;
},
jur_DecomposedCharSet_first = ($this, $set) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            $set = $set;
            if ($set.$decomposedCharUTF16 === null) {
                var$2 = new jl_StringBuilder;
                var$2.$buffer = $rt_createCharArray(16);
                var$3 = 0;
                var$4 = var$2;
                while (var$3 < $set.$decomposedCharLength) {
                    var$5 = jl_Character_toChars($set.$decomposedChar0.data[var$3]);
                    var$6 = var$5.data.length;
                    var$7 = var$4.$length0;
                    jl_AbstractStringBuilder_insert3(var$4, var$7, var$5, 0, var$6);
                    var$3 = var$3 + 1 | 0;
                }
                var$4 = new jl_String;
                var$5 = var$2.$buffer;
                var$8 = var$5.data;
                var$9 = var$2.$length0;
                var$6 = var$8.length;
                if (var$9 >= 0 && var$9 <= (var$6 - 0 | 0)) {
                    var$4.$nativeString = $rt_charArrayToString(var$5.data, 0, var$9);
                    $set.$decomposedCharUTF16 = var$4;
                } else {
                    $set = new jl_IndexOutOfBoundsException;
                    jl_Throwable__init_($set);
                    $rt_throw($set);
                }
            }
            var$4 = $set.$decomposedCharUTF16;
            if ($this.$decomposedCharUTF16 === null) {
                $set = new jl_StringBuilder;
                $set.$buffer = $rt_createCharArray(16);
                var$3 = 0;
                var$10 = $set;
                while (var$3 < $this.$decomposedCharLength) {
                    var$5 = jl_Character_toChars($this.$decomposedChar0.data[var$3]);
                    var$6 = var$5.data.length;
                    var$7 = var$10.$length0;
                    jl_AbstractStringBuilder_insert3(var$10, var$7, var$5, 0, var$6);
                    var$3 = var$3 + 1 | 0;
                }
                var$2 = new jl_String;
                var$5 = $set.$buffer;
                var$8 = var$5.data;
                var$9 = $set.$length0;
                var$6 = var$8.length;
                if (var$9 >= 0 && var$9 <= (var$6 - 0 | 0)) {
                    var$2.$nativeString = $rt_charArrayToString(var$5.data, 0, var$9);
                    $this.$decomposedCharUTF16 = var$2;
                } else {
                    $set = new jl_IndexOutOfBoundsException;
                    jl_Throwable__init_($set);
                    $rt_throw($set);
                }
            }
            $set = $this.$decomposedCharUTF16;
            if (var$4 === $set)
                var$3 = 1;
            else if (!($set instanceof jl_String))
                var$3 = 0;
            else {
                $set = $set;
                var$3 = var$4.$nativeString !== $set.$nativeString ? 0 : 1;
            }
            if (!var$3) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
},
jur_DecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PossessiveGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PosPlusGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            $stringIndex = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if ($stringIndex <= $nextIndex)
                break;
            $nextIndex = $stringIndex;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_AltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
    $this.$innerSet.$setNext($next);
},
jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_PosAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next0.$matches($nextIndex, $testString, $matchResult);
},
jur_PosAltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
};
function jur_CompositeGroupQuantifierSet() {
    let a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier = null;
    a.$setCounter = 0;
}
let jur_CompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, var$5, $nextIndex, var$7;
    $enterCounter = $this.$setCounter;
    $enterCounter = $matchResult.$compQuantCounters.data[$enterCounter];
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max2)
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    $enterCounter = $enterCounter + 1 | 0;
    $matchResult.$compQuantCounters.data[var$5] = $enterCounter;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $stringIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$stringIndex] = 0;
        return $nextIndex;
    }
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + (-1) | 0;
    var$7 = $matchResult.$compQuantCounters.data;
    var$7[$nextIndex] = $enterCounter;
    if ($enterCounter >= $this.$quantifier.$min0)
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    var$7[$nextIndex] = 0;
    return (-1);
},
jur_CompositeGroupQuantifierSet_getName = $this => {
    return jur_Quantifier_toString($this.$quantifier);
},
jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_PosCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier.$max2;
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier.$min0)
        return (-1);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_ReluctantGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_RelAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
},
jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_RelCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex, $enterCounter, var$6;
    $nextIndex = $this.$setCounter;
    $enterCounter = $matchResult.$compQuantCounters.data[$nextIndex];
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    var$6 = $this.$quantifier;
    if ($enterCounter >= var$6.$max2) {
        $nextIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$nextIndex] = 0;
        return $this.$next0.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < var$6.$min0) {
        $nextIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$nextIndex] = $enterCounter + 1 | 0;
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next0.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $stringIndex = $this.$setCounter;
            $matchResult.$compQuantCounters.data[$stringIndex] = 0;
            return $nextIndex;
        }
        $nextIndex = $this.$setCounter;
        $matchResult.$compQuantCounters.data[$nextIndex] = $enterCounter + 1 | 0;
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
},
jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_DotAllQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$rightBound;
    if ($strLength > $stringIndex)
        return $this.$next0.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_DotAllQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$rightBound;
    if ($this.$next0.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
},
jur_DotAllQuantifierSet_getName = $this => {
    return $rt_s(429);
};
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
let jur_DotQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $startSearch, var$7;
    $strLength = $matchResult.$rightBound;
    var$5 = $testString;
    $startSearch = $stringIndex;
    a: {
        while (true) {
            if ($startSearch >= $strLength) {
                $startSearch = (-1);
                break a;
            }
            var$7 = $this.$lt;
            if ($startSearch < 0)
                break;
            if ($startSearch >= var$5.$nativeString.length)
                break;
            if (var$7.$isLineTerminator(var$5.$nativeString.charCodeAt($startSearch)))
                break a;
            $startSearch = $startSearch + 1 | 0;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next0.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_DotQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $res, var$6, $nextSearch, var$8, var$9, $leftBound;
    $strLength = $matchResult.$rightBound;
    $res = $this.$next0.$find0($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    var$6 = $testString;
    $nextSearch = $res;
    a: {
        while (true) {
            if ($nextSearch >= $strLength) {
                $nextSearch = (-1);
                break a;
            }
            var$8 = $this.$lt;
            if ($nextSearch < 0)
                break;
            if ($nextSearch >= var$6.$nativeString.length)
                break;
            if (var$8.$isLineTerminator(var$6.$nativeString.charCodeAt($nextSearch)))
                break a;
            $nextSearch = $nextSearch + 1 | 0;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$9 = $this.$next0.$findBack($res, $strLength, $testString, $matchResult);
    if ($res > var$9)
        var$9 = $res;
    if (var$9 <= 0)
        $leftBound = var$9 ? (-1) : 0;
    else {
        $leftBound = var$9 - 1 | 0;
        b: {
            while (true) {
                if ($leftBound < $stringIndex) {
                    $leftBound = (-1);
                    break b;
                }
                $testString = $this.$lt;
                if ($leftBound < 0)
                    break;
                if ($leftBound >= var$6.$nativeString.length)
                    break;
                if ($testString.$isLineTerminator(var$6.$nativeString.charCodeAt($leftBound)))
                    break b;
                $leftBound = $leftBound + (-1) | 0;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= var$9 ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
},
jur_DotQuantifierSet_getName = $this => {
    return $rt_s(430);
},
jur_AbstractLineTerminator = $rt_classWithoutFields(),
jur_AbstractLineTerminator_unixLT = null,
jur_AbstractLineTerminator_unicodeLT = null,
jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_PossessiveQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_PossessiveAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_PossessiveCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min0;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next0.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_ReluctantQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    while (true) {
        var$4 = $this.$next0.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
},
jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_ReluctantAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$next0.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_ReluctantCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, var$8, var$9;
    var$4 = $this.$quantifier0;
    $min = var$4.$min0;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$8 = $this.$next0.$matches($stringIndex, $testString, $matchResult);
                    if (var$8 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
                        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$8 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$8 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$8;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$9 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$9 < 1)
            break;
        $stringIndex = $stringIndex + var$9 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet),
jur_SOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    if ($strIndex && !($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound))
        return (-1);
    return $this.$next0.$matches($strIndex, $testString, $matchResult);
},
jur_SOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_SOLSet_getName = $this => {
    return $rt_s(431);
};
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
let jur_WordBoundary_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $ch1, var$5, $ch2, $leftBound;
    if ($stringIndex >= $matchResult.$rightBound)
        $ch1 = 32;
    else {
        var$5 = $testString;
        if ($stringIndex >= 0 && $stringIndex < var$5.$nativeString.length)
            $ch1 = var$5.$nativeString.charCodeAt($stringIndex);
        else {
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    if (!$stringIndex)
        $ch2 = 32;
    else {
        $ch2 = $stringIndex - 1 | 0;
        var$5 = $testString;
        if ($ch2 >= 0 && $ch2 < var$5.$nativeString.length)
            $ch2 = var$5.$nativeString.charCodeAt($ch2);
        else {
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound;
    return ($ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1) ^ ($ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1) ^ $this.$positive ? (-1) : $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_WordBoundary_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_WordBoundary_getName = $this => {
    return $rt_s(432);
},
jur_WordBoundary_isSpace = ($this, $ch, $index, $leftBound, $testString) => {
    let var$5;
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 9:
                    break;
                case 6:
                case 7:
                case 8:
                    break b;
                default:
                    break b;
            }
            var$5 = 1;
            break a;
        }
        var$5 = 0;
    }
    if (!var$5 && $ch != 95) {
        c: {
            d: {
                if (jl_Character_getType($ch) == 6) {
                    $testString = $testString;
                    while (true) {
                        $index = $index + (-1) | 0;
                        if ($index < $leftBound)
                            break d;
                        if ($index < 0)
                            break c;
                        if ($index >= $testString.$nativeString.length)
                            break c;
                        e: {
                            f: {
                                var$5 = $testString.$nativeString.charCodeAt($index);
                                switch (jl_Character_getType(var$5)) {
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 9:
                                        break;
                                    case 6:
                                    case 7:
                                    case 8:
                                        break f;
                                    default:
                                        break f;
                                }
                                $ch = 1;
                                break e;
                            }
                            $ch = 0;
                        }
                        if ($ch)
                            return 0;
                        if (jl_Character_getType(var$5) != 6)
                            return 1;
                    }
                }
            }
            return 1;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return 0;
},
jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet),
jur_PreviousMatch_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex != $matchResult.$previousMatch)
        return (-1);
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_PreviousMatch_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PreviousMatch_getName = $this => {
    return $rt_s(433);
};
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
let jur_EOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, $ch, var$6, var$7;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound : $testString.$nativeString.length;
    if ($strIndex >= $rightBound) {
        $ch = $this.$consCounter0;
        $matchResult.$consumers.data[$ch] = 0;
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    a: {
        $rightBound = $rightBound - $strIndex | 0;
        if ($rightBound == 2) {
            var$6 = $testString;
            if ($strIndex >= 0 && $strIndex < var$6.$nativeString.length) {
                if (var$6.$nativeString.charCodeAt($strIndex) != 13)
                    break a;
                var$7 = $strIndex + 1 | 0;
                if (var$7 >= 0 && var$7 < var$6.$nativeString.length) {
                    if (var$6.$nativeString.charCodeAt(var$7) != 10)
                        break a;
                    $ch = $this.$consCounter0;
                    $matchResult.$consumers.data[$ch] = 0;
                    return $this.$next0.$matches($strIndex, $testString, $matchResult);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    b: {
        c: {
            if ($rightBound == 1) {
                var$6 = $testString;
                if ($strIndex >= 0 && $strIndex < var$6.$nativeString.length) {
                    $ch = var$6.$nativeString.charCodeAt($strIndex);
                    if ($ch == 10)
                        break b;
                    if ($ch == 13)
                        break b;
                    if ($ch == 133)
                        break b;
                    if (($ch | 1) != 8233)
                        break c;
                    else
                        break b;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        return (-1);
    }
    $rightBound = $this.$consCounter0;
    $matchResult.$consumers.data[$rightBound] = 0;
    return $this.$next0.$matches($strIndex, $testString, $matchResult);
},
jur_EOLSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3, $res;
    var$2 = $this.$consCounter0;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
},
jur_EOLSet_getName = $this => {
    return $rt_s(434);
},
jur_EOISet = $rt_classWithoutFields(jur_AbstractSet),
jur_EOISet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex < (!$matchResult.$transparentBounds ? $matchResult.$rightBound : $testString.$nativeString.length))
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next0.$matches($stringIndex, $testString, $matchResult);
},
jur_EOISet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_EOISet_getName = $this => {
    return $rt_s(435);
};
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt1 = null;
}
let jur_MultiLineSOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let var$4, var$5, var$6;
    a: {
        b: {
            c: {
                if ($strIndex != $matchResult.$rightBound) {
                    if (!$strIndex)
                        break b;
                    if ($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound)
                        break b;
                    var$4 = $this.$lt1;
                    var$5 = $strIndex - 1 | 0;
                    var$6 = $testString;
                    if (var$5 >= 0 && var$5 < var$6.$nativeString.length) {
                        var$5 = var$6.$nativeString.charCodeAt(var$5);
                        if ($strIndex < 0)
                            break a;
                        if ($strIndex >= var$6.$nativeString.length)
                            break a;
                        if (!var$4.$isAfterLineTerminator(var$5, var$6.$nativeString.charCodeAt($strIndex)))
                            break c;
                        else
                            break b;
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            return (-1);
        }
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_MultiLineSOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_MultiLineSOLSet_getName = $this => {
    return $rt_s(436);
},
jur_DotAllSet = $rt_classWithoutFields(jur_JointSet),
jur_DotAllSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high, $low, var$9;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$6 = $testString;
    if ($stringIndex >= 0 && $stringIndex < var$6.$nativeString.length) {
        $high = $rt_compare(var$6.$nativeString.charCodeAt($stringIndex) & 64512, 55296);
        $low = $high ? 0 : 1;
        a: {
            if ($low) {
                var$9 = $stringIndex + 2 | 0;
                if (var$9 <= $strLength) {
                    if (var$5 >= 0 && var$5 < var$6.$nativeString.length) {
                        $low = var$6.$nativeString.charCodeAt(var$5);
                        $stringIndex = $high ? 0 : 1;
                        if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                            break a;
                        else
                            return $this.$next0.$matches(var$9, $testString, $matchResult);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
        }
        return $this.$next0.$matches(var$5, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_DotAllSet_getName = $this => {
    return $rt_s(437);
},
jur_DotAllSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_DotAllSet_getType = $this => {
    return (-2147483602);
},
jur_DotAllSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt0 = null;
}
let jur_DotSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high, var$8, $low, var$10;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$6 = $testString;
    if ($stringIndex >= 0 && $stringIndex < var$6.$nativeString.length) {
        $high = var$6.$nativeString.charCodeAt($stringIndex);
        var$8 = $rt_compare($high & 64512, 55296);
        $low = var$8 ? 0 : 1;
        a: {
            if ($low) {
                var$10 = $stringIndex + 2 | 0;
                if (var$10 <= $strLength) {
                    if (var$5 >= 0 && var$5 < var$6.$nativeString.length) {
                        $low = var$6.$nativeString.charCodeAt(var$5);
                        $stringIndex = var$8 ? 0 : 1;
                        if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                            break a;
                        else
                            return $this.$lt0.$isLineTerminator((($high & 1023) << 10 | $low & 1023) + 65536 | 0) ? (-1) : $this.$next0.$matches(var$10, $testString, $matchResult);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
        }
        return $this.$lt0.$isLineTerminator($high) ? (-1) : $this.$next0.$matches(var$5, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_DotSet_getName = $this => {
    return $rt_s(168);
},
jur_DotSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_DotSet_getType = $this => {
    return (-2147483602);
},
jur_DotSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
let jur_UEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, var$5, var$6;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound : $testString.$nativeString.length;
    if ($strIndex >= $rightBound) {
        $rightBound = $this.$consCounter2;
        $matchResult.$consumers.data[$rightBound] = 0;
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    a: {
        if (($rightBound - $strIndex | 0) == 1) {
            var$5 = $testString;
            if ($strIndex >= 0 && $strIndex < var$5.$nativeString.length) {
                if (var$5.$nativeString.charCodeAt($strIndex) != 10)
                    break a;
                else {
                    var$6 = $this.$consCounter2;
                    $matchResult.$consumers.data[var$6] = 1;
                    return $this.$next0.$matches($strIndex + 1 | 0, $testString, $matchResult);
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
    }
    return (-1);
},
jur_UEOLSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3, $res;
    var$2 = $this.$consCounter2;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
},
jur_UEOLSet_getName = $this => {
    return $rt_s(434);
};
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
let jur_UMultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif, var$5, var$6;
    if (($matchResult.$anchoringBounds ? $matchResult.$rightBound - $strIndex | 0 : $testString.$nativeString.length - $strIndex | 0) <= 0) {
        $strDif = $this.$consCounter3;
        $matchResult.$consumers.data[$strDif] = 0;
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $testString;
    if ($strIndex >= 0 && $strIndex < var$5.$nativeString.length) {
        if (var$5.$nativeString.charCodeAt($strIndex) != 10)
            return (-1);
        var$6 = $this.$consCounter3;
        $matchResult.$consumers.data[var$6] = 1;
        return $this.$next0.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_UMultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3, $res;
    var$2 = $this.$consCounter3;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
},
jur_UMultiLineEOLSet_getName = $this => {
    return $rt_s(438);
};
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter1 = 0;
}
let jur_MultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif, var$5, $ch1, $ch2;
    $strDif = $matchResult.$anchoringBounds ? $matchResult.$rightBound - $strIndex | 0 : $testString.$nativeString.length - $strIndex | 0;
    if (!$strDif) {
        $strDif = $this.$consCounter1;
        $matchResult.$consumers.data[$strDif] = 0;
        return $this.$next0.$matches($strIndex, $testString, $matchResult);
    }
    a: {
        if ($strDif < 2) {
            var$5 = $testString;
            if ($strIndex >= 0 && $strIndex < var$5.$nativeString.length) {
                $ch1 = var$5.$nativeString.charCodeAt($strIndex);
                $ch2 = 97;
                break a;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        var$5 = $testString;
        if ($strIndex >= 0 && $strIndex < var$5.$nativeString.length) {
            $ch1 = var$5.$nativeString.charCodeAt($strIndex);
            $strDif = $strIndex + 1 | 0;
            if ($strDif >= 0 && $strDif < var$5.$nativeString.length) {
                $ch2 = var$5.$nativeString.charCodeAt($strDif);
                break a;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $strDif = $this.$consCounter1;
            $matchResult.$consumers.data[$strDif] = 0;
            return $this.$next0.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $strDif = $this.$consCounter1;
                $matchResult.$consumers.data[$strDif] = 0;
                return $this.$next0.$matches($strIndex, $testString, $matchResult);
            }
            $strDif = $this.$consCounter1;
            $matchResult.$consumers.data[$strDif] = 0;
            return $this.$next0.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
},
jur_MultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3, $res;
    var$2 = $this.$consCounter1;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
},
jur_MultiLineEOLSet_getName = $this => {
    return $rt_s(439);
};
function jur_CIBackReferenceSet() {
    let a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter = 0;
}
let jur_CIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6, var$7, var$8, var$9;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $i = 0;
        var$6 = $testString;
        a: {
            b: {
                c: {
                    d: {
                        while (true) {
                            if ($i >= $group.$nativeString.length) {
                                var$7 = $this.$consCounter;
                                $matchResult.$consumers.data[var$7] = $group.$nativeString.length;
                                return $this.$next0.$matches($stringIndex + $group.$nativeString.length | 0, $testString, $matchResult);
                            }
                            if ($i < 0)
                                break c;
                            if ($i >= $group.$nativeString.length)
                                break c;
                            var$8 = $group.$nativeString.charCodeAt($i);
                            var$9 = $stringIndex + $i | 0;
                            if (var$9 < 0)
                                break d;
                            if (var$9 >= var$6.$nativeString.length)
                                break d;
                            if (var$8 != var$6.$nativeString.charCodeAt(var$9)) {
                                if ($i < 0)
                                    break a;
                                if ($i >= $group.$nativeString.length)
                                    break a;
                                var$7 = jur_Pattern_getSupplement($group.$nativeString.charCodeAt($i));
                                if (var$9 < 0)
                                    break b;
                                if (var$9 >= var$6.$nativeString.length)
                                    break b;
                                if (var$7 != var$6.$nativeString.charCodeAt(var$9))
                                    break;
                            }
                            $i = $i + 1 | 0;
                        }
                        return (-1);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return (-1);
},
jur_CIBackReferenceSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_CIBackReferenceSet_getString = ($this, $matchResult) => {
    let var$2, var$3, var$4, var$5, var$6;
    var$2 = $this.$referencedGroup;
    var$3 = $matchResult.$groupBounds.data;
    var$4 = var$2 * 2 | 0;
    var$5 = var$3[var$4];
    var$6 = var$3[var$4 + 1 | 0];
    return (var$6 | var$5 | (var$6 - var$5 | 0)) >= 0 && var$6 <= $matchResult.$string2.$nativeString.length ? jl_String_substring($matchResult.$string2, var$5, var$6) : null;
},
jur_CIBackReferenceSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$groupIndex;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(440);
    jl_AbstractStringBuilder_insert(var$4, var$3, var$5);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$1, 10);
    var$6 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$3 = var$2.$length0;
    var$9 = var$8.length;
    if (var$3 >= 0 && var$3 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$3);
        return var$6;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
jur_CIBackReferenceSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3, $res;
    var$2 = $this.$consCounter;
    var$3 = $matchResult.$consumers.data;
    $res = !var$3[var$2] ? 0 : 1;
    var$3[var$2] = (-1);
    return $res;
},
jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet),
jur_BackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $shift, var$6;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $shift = !jl_String_startsWith0($testString, $group, $stringIndex) ? (-1) : $group.$nativeString.length;
        if ($shift < 0)
            return (-1);
        var$6 = $this.$consCounter;
        $matchResult.$consumers.data[var$6] = $shift;
        return $this.$next0.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_BackReferenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $group, $strLength, $testStr;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    $strLength = $matchResult.$leftBound;
    if ($group !== null && ($strIndex + $group.$nativeString.length | 0) <= $strLength) {
        $testStr = $testString;
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            $strIndex = jl_String_indexOf0($testStr, $group, $strIndex);
            if ($strIndex < 0)
                return (-1);
            if ($this.$next0.$matches($strIndex + $group.$nativeString.length | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = $strIndex + 1 | 0;
        }
        return $strIndex;
    }
    return (-1);
},
jur_BackReferenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $group, $testStr, var$7;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = jl_String_lastIndexOf0($testStr, $group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next0.$matches(var$7 + $group.$nativeString.length | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_BackReferenceSet_first = ($this, $set) => {
    return 1;
},
jur_BackReferenceSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$groupIndex;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(441);
    jl_AbstractStringBuilder_insert(var$4, var$3, var$5);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$1, 10);
    var$6 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$3 = var$2.$length0;
    var$9 = var$8.length;
    if (var$3 >= 0 && var$3 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$3);
        return var$6;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
};
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
let jur_UCIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, var$5, var$6, var$7, $i, $group, var$10;
    var$4 = $this.$referencedGroup;
    var$5 = $matchResult.$groupBounds.data;
    var$6 = var$4 * 2 | 0;
    var$7 = var$5[var$6];
    $i = var$5[var$6 + 1 | 0];
    $group = ($i | var$7 | ($i - var$7 | 0)) >= 0 && $i <= $matchResult.$string2.$nativeString.length ? jl_String_substring($matchResult.$string2, var$7, $i) : null;
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $i = 0;
        var$10 = $testString;
        a: {
            b: {
                while (true) {
                    if ($i >= $group.$nativeString.length) {
                        var$4 = $this.$consCounter;
                        $matchResult.$consumers.data[var$4] = $group.$nativeString.length;
                        return $this.$next0.$matches($stringIndex + $group.$nativeString.length | 0, $testString, $matchResult);
                    }
                    if ($i < 0)
                        break a;
                    if ($i >= $group.$nativeString.length)
                        break a;
                    var$4 = $group.$nativeString.charCodeAt($i);
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                    }
                    var$4 = jl_Character_mapChar(jl_Character_upperCaseMapping, var$4) & 65535;
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                    }
                    var$6 = jl_Character_mapChar(jl_Character_lowerCaseMapping, var$4) & 65535;
                    var$7 = $stringIndex + $i | 0;
                    if (var$7 < 0)
                        break b;
                    if (var$7 >= var$10.$nativeString.length)
                        break b;
                    var$4 = var$10.$nativeString.charCodeAt(var$7);
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                    }
                    var$4 = jl_Character_mapChar(jl_Character_upperCaseMapping, var$4) & 65535;
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                    }
                    if (var$6 != (jl_Character_mapChar(jl_Character_lowerCaseMapping, var$4) & 65535))
                        break;
                    $i = $i + 1 | 0;
                }
                return (-1);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    return (-1);
},
jur_UCIBackReferenceSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$groupIndex1;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(442);
    jl_AbstractStringBuilder_insert(var$4, var$3, var$5);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$1, 10);
    var$6 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$3 = var$2.$length0;
    var$9 = var$8.length;
    if (var$3 >= 0 && var$3 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$3);
        return var$6;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuffer_insert0 = ($this, $index, $s, $start, $end) => {
    jl_AbstractStringBuilder_insert5($this, $index, $s, $start, $end);
    return $this;
},
jl_StringBuffer_insert2 = ($this, var$1, var$2, var$3, var$4) => {
    let var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + var$4 | 0);
    var$5 = var$4 + var$3 | 0;
    while (var$3 < var$5) {
        var$6 = var$2.data;
        var$7 = $this.$buffer.data;
        var$4 = var$1 + 1 | 0;
        var$8 = var$3 + 1 | 0;
        var$7[var$1] = var$6[var$3];
        var$1 = var$4;
        var$3 = var$8;
    }
    return $this;
},
jl_StringBuffer_append = ($this, var$1, var$2, var$3) => {
    let var$4, var$5, var$6, var$7, var$8, var$9;
    var$4 = $this.$length0;
    var$5 = $this;
    jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + var$3 | 0);
    var$3 = var$3 + var$2 | 0;
    while (var$2 < var$3) {
        var$6 = var$1.data;
        var$7 = var$5.$buffer.data;
        var$8 = var$4 + 1 | 0;
        var$9 = var$2 + 1 | 0;
        var$7[var$4] = var$6[var$2];
        var$4 = var$8;
        var$2 = var$9;
    }
    return $this;
},
jl_StringBuffer_insert = ($this, var$1, var$2, var$3, var$4) => {
    jl_AbstractStringBuilder_insert5($this, var$1, var$2, var$3, var$4);
    return $this;
},
jl_StringBuffer_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuffer_insert3 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + 1 | 0);
    $this.$buffer.data[var$1] = var$2;
    return $this;
},
jl_StringBuffer_insert1 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
};
function jur_SequenceSet() {
    let a = this; jur_LeafSet.call(a);
    a.$string = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
let jur_SequenceSet__init_ = ($this, $substring) => {
    let $j, var$3, var$4, var$5, var$6, var$7;
    $j = jur_AbstractSet_counter;
    jur_AbstractSet_counter = $j + 1 | 0;
    var$3 = new jl_AbstractStringBuilder;
    var$3.$buffer = $rt_createCharArray(20);
    $this.$index = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length0, $j, 10)).$toString();
    $this.$charCount0 = 1;
    var$3 = new jl_String;
    var$4 = $substring.$buffer;
    var$5 = var$4.data;
    var$6 = $substring.$length0;
    var$7 = var$5.length;
    if (var$6 >= 0 && var$6 <= (var$7 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$4.data, 0, var$6);
        $this.$string = var$3;
        $j = $substring.$length0;
        $this.$charCount0 = $j;
        $this.$leftToRight = jur_SequenceSet$IntHash__init_($j);
        $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount0);
        $j = 0;
        a: {
            b: {
                while ($j < ($this.$charCount0 - 1 | 0)) {
                    $substring = $this.$leftToRight;
                    var$3 = $this.$string;
                    if ($j < 0)
                        break a;
                    if ($j >= var$3.$nativeString.length)
                        break a;
                    jur_SequenceSet$IntHash_put($substring, var$3.$nativeString.charCodeAt($j), ($this.$charCount0 - $j | 0) - 1 | 0);
                    $substring = $this.$rightToLeft;
                    var$3 = $this.$string;
                    var$6 = ($this.$charCount0 - $j | 0) - 1 | 0;
                    if (var$6 < 0)
                        break b;
                    if (var$6 >= var$3.$nativeString.length)
                        break b;
                    jur_SequenceSet$IntHash_put($substring, var$3.$nativeString.charCodeAt(var$6), ($this.$charCount0 - $j | 0) - 1 | 0);
                    $j = $j + 1 | 0;
                }
                return;
            }
            $substring = new jl_StringIndexOutOfBoundsException;
            $substring.$suppressionEnabled = 1;
            $substring.$writableStackTrace = 1;
            $rt_throw($substring);
        }
        $substring = new jl_StringIndexOutOfBoundsException;
        $substring.$suppressionEnabled = 1;
        $substring.$writableStackTrace = 1;
        $rt_throw($substring);
    }
    $substring = new jl_IndexOutOfBoundsException;
    $substring.$suppressionEnabled = 1;
    $substring.$writableStackTrace = 1;
    $rt_throw($substring);
},
jur_SequenceSet__init_0 = var_0 => {
    let var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_SequenceSet_accepts = ($this, $strIndex, $testString) => {
    let var$3, var$4, var$5, var$6;
    var$3 = 0;
    var$4 = $testString;
    a: {
        b: {
            c: {
                while (var$3 < $this.$charCount0) {
                    var$5 = var$3 + $strIndex | 0;
                    if (var$5 < 0)
                        break a;
                    if (var$5 >= var$4.$nativeString.length)
                        break a;
                    var$6 = var$4.$nativeString.charCodeAt(var$5);
                    $testString = $this.$string;
                    if (var$3 < 0)
                        break b;
                    if (var$3 >= $testString.$nativeString.length)
                        break b;
                    if (var$6 != $testString.$nativeString.charCodeAt(var$3)) {
                        $strIndex = 0;
                        break c;
                    }
                    var$3 = var$3 + 1 | 0;
                }
                $strIndex = 1;
            }
            return !$strIndex ? (-1) : $this.$charCount0;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_SequenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $strLength, var$5;
    $strLength = $matchResult.$rightBound;
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = jur_SequenceSet_indexOf($this, $testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next0.$matches(var$5 + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
},
jur_SequenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        $lastIndex = jur_SequenceSet_lastIndexOf($this, $testString, $strIndex, $lastIndex);
        if ($lastIndex < 0)
            return (-1);
        if ($this.$next0.$matches($lastIndex + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = $lastIndex + (-1) | 0;
    }
    return $lastIndex;
},
jur_SequenceSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$string;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(443);
    var$6 = var$4;
    jl_AbstractStringBuilder_insert(var$6, var$3, var$5);
    jl_AbstractStringBuilder_insert(var$6, var$2.$length0, var$1 === null ? $rt_s(1) : var$1);
    var$1 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$9 = var$2.$length0;
    var$10 = var$8.length;
    if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
},
jur_SequenceSet_first = ($this, $set) => {
    let var$2, var$3, var$4;
    if ($set instanceof jur_CharSet) {
        var$2 = $set.$ch0;
        $set = $this.$string;
        if (0 < $set.$nativeString.length)
            return var$2 != $set.$nativeString.charCodeAt(0) ? 0 : 1;
        $set = new jl_StringIndexOutOfBoundsException;
        $set.$suppressionEnabled = 1;
        $set.$writableStackTrace = 1;
        $rt_throw($set);
    }
    if ($set instanceof jur_RangeSet) {
        $set = $set;
        var$3 = jl_String_substring($this.$string, 0, 1);
        $set = $set.$chars1;
        var$3 = var$3;
        if (0 >= var$3.$nativeString.length) {
            $set = new jl_StringIndexOutOfBoundsException;
            $set.$suppressionEnabled = 1;
            $set.$writableStackTrace = 1;
            $rt_throw($set);
        }
        return (!$set.$contains0(var$3.$nativeString.charCodeAt(0)) ? (-1) : 1) <= 0 ? 0 : 1;
    }
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            if ($this.$string.$nativeString.length > 1) {
                var$4 = $set.$ch1;
                $set = $this.$string;
                if (0 >= $set.$nativeString.length) {
                    $set = new jl_StringIndexOutOfBoundsException;
                    $set.$suppressionEnabled = 1;
                    $set.$writableStackTrace = 1;
                    $rt_throw($set);
                }
                var$2 = $set.$nativeString.charCodeAt(0);
                $set = $this.$string;
                if (1 >= $set.$nativeString.length) {
                    $set = new jl_StringIndexOutOfBoundsException;
                    $set.$suppressionEnabled = 1;
                    $set.$writableStackTrace = 1;
                    $rt_throw($set);
                }
                if (var$4 == (((var$2 & 1023) << 10 | $set.$nativeString.charCodeAt(1) & 1023) + 65536 | 0)) {
                    var$2 = 1;
                    break a;
                }
            }
            var$2 = 0;
        }
        return var$2;
    }
    $set = $set;
    var$3 = $this.$string;
    if (0 >= var$3.$nativeString.length) {
        $set = new jl_StringIndexOutOfBoundsException;
        $set.$suppressionEnabled = 1;
        $set.$writableStackTrace = 1;
        $rt_throw($set);
    }
    b: {
        c: {
            if (!$set.$contains0(var$3.$nativeString.charCodeAt(0))) {
                if ($this.$string.$nativeString.length <= 1)
                    break c;
                var$3 = $this.$string;
                if (0 >= var$3.$nativeString.length) {
                    $set = new jl_StringIndexOutOfBoundsException;
                    $set.$suppressionEnabled = 1;
                    $set.$writableStackTrace = 1;
                    $rt_throw($set);
                }
                var$2 = var$3.$nativeString.charCodeAt(0);
                var$3 = $this.$string;
                if (1 >= var$3.$nativeString.length) {
                    $set = new jl_StringIndexOutOfBoundsException;
                    $set.$suppressionEnabled = 1;
                    $set.$writableStackTrace = 1;
                    $rt_throw($set);
                }
                if (!$set.$contains0(((var$2 & 1023) << 10 | var$3.$nativeString.charCodeAt(1) & 1023) + 65536 | 0))
                    break c;
            }
            var$2 = 1;
            break b;
        }
        var$2 = 0;
    }
    return var$2;
},
jur_SequenceSet_indexOf = ($this, $str, $i, $to) => {
    let var$4, var$5, $last, var$7, $ch, var$9;
    var$4 = $this.$string;
    var$5 = $this.$charCount0 - 1 | 0;
    if (var$5 >= 0 && var$5 < var$4.$nativeString.length) {
        $last = var$4.$nativeString.charCodeAt(var$5);
        $str = $str;
        a: {
            b: {
                c: {
                    while (true) {
                        var$7 = $this.$charCount0;
                        if ($i > ($to - var$7 | 0))
                            return (-1);
                        var$5 = ($i + var$7 | 0) - 1 | 0;
                        if (var$5 < 0)
                            break c;
                        if (var$5 >= $str.$nativeString.length)
                            break c;
                        $ch = $str.$nativeString.charCodeAt(var$5);
                        if ($ch == $last) {
                            var$9 = 0;
                            d: {
                                while (var$9 < $this.$charCount0) {
                                    var$5 = var$9 + $i | 0;
                                    if (var$5 < 0)
                                        break a;
                                    if (var$5 >= $str.$nativeString.length)
                                        break a;
                                    var$5 = $str.$nativeString.charCodeAt(var$5);
                                    var$4 = $this.$string;
                                    if (var$9 < 0)
                                        break b;
                                    if (var$9 >= var$4.$nativeString.length)
                                        break b;
                                    if (var$5 != var$4.$nativeString.charCodeAt(var$9)) {
                                        var$7 = 0;
                                        break d;
                                    }
                                    var$9 = var$9 + 1 | 0;
                                }
                                var$7 = 1;
                            }
                            if (var$7)
                                break;
                        }
                        $i = $i + jur_SequenceSet$IntHash_get($this.$leftToRight, $ch) | 0;
                    }
                    return $i;
                }
                $str = new jl_StringIndexOutOfBoundsException;
                $str.$suppressionEnabled = 1;
                $str.$writableStackTrace = 1;
                $rt_throw($str);
            }
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
},
jur_SequenceSet_lastIndexOf = ($this, $str, $to, $i) => {
    let var$4, $first, $delta, $ch, $size, var$9;
    var$4 = $this.$string;
    if (0 >= var$4.$nativeString.length) {
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $first = var$4.$nativeString.charCodeAt(0);
    var$4 = $str;
    $delta = (var$4.$nativeString.length - $i | 0) - $this.$charCount0 | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    a: {
        b: {
            c: {
                while (true) {
                    if ($i < $to)
                        return (-1);
                    if ($i < 0)
                        break c;
                    if ($i >= var$4.$nativeString.length)
                        break c;
                    $ch = var$4.$nativeString.charCodeAt($i);
                    if ($ch == $first) {
                        $size = 0;
                        d: {
                            while ($size < $this.$charCount0) {
                                $delta = $size + $i | 0;
                                if ($delta < 0)
                                    break a;
                                if ($delta >= var$4.$nativeString.length)
                                    break a;
                                var$9 = var$4.$nativeString.charCodeAt($delta);
                                $str = $this.$string;
                                if ($size < 0)
                                    break b;
                                if ($size >= $str.$nativeString.length)
                                    break b;
                                if (var$9 != $str.$nativeString.charCodeAt($size)) {
                                    $size = 0;
                                    break d;
                                }
                                $size = $size + 1 | 0;
                            }
                            $size = 1;
                        }
                        if ($size)
                            break;
                    }
                    $i = $i - jur_SequenceSet$IntHash_get($this.$rightToLeft, $ch) | 0;
                }
                return $i;
            }
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    $str = new jl_StringIndexOutOfBoundsException;
    $str.$suppressionEnabled = 1;
    $str.$writableStackTrace = 1;
    $rt_throw($str);
};
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string4 = null;
}
let jur_UCISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4, var$5, var$6, var$7;
    $i = 0;
    var$4 = $testString;
    a: {
        b: {
            while (true) {
                if ($i >= $this.$string4.$nativeString.length)
                    return $this.$string4.$nativeString.length;
                $testString = $this.$string4;
                if ($i < 0)
                    break a;
                if ($i >= $testString.$nativeString.length)
                    break a;
                var$5 = $testString.$nativeString.charCodeAt($i);
                var$6 = $strIndex + $i | 0;
                if (var$6 < 0)
                    break b;
                if (var$6 >= var$4.$nativeString.length)
                    break b;
                var$7 = var$4.$nativeString.charCodeAt(var$6);
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                }
                var$7 = jl_Character_mapChar(jl_Character_upperCaseMapping, var$7) & 65535;
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                }
                if (var$5 != (jl_Character_mapChar(jl_Character_lowerCaseMapping, var$7) & 65535))
                    break;
                $i = $i + 1 | 0;
            }
            return (-1);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_UCISequenceSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$string4;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(444);
    var$6 = var$4;
    jl_AbstractStringBuilder_insert(var$6, var$3, var$5);
    jl_AbstractStringBuilder_insert(var$6, var$2.$length0, var$1 === null ? $rt_s(1) : var$1);
    var$1 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$9 = var$2.$length0;
    var$10 = var$8.length;
    if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
};
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string3 = null;
}
let jur_CISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4, var$5, var$6, var$7;
    $i = 0;
    var$4 = $testString;
    a: {
        b: {
            c: {
                d: {
                    while (true) {
                        if ($i >= $this.$string3.$nativeString.length)
                            return $this.$string3.$nativeString.length;
                        $testString = $this.$string3;
                        if ($i < 0)
                            break c;
                        if ($i >= $testString.$nativeString.length)
                            break c;
                        var$5 = $testString.$nativeString.charCodeAt($i);
                        var$6 = $strIndex + $i | 0;
                        if (var$6 < 0)
                            break d;
                        if (var$6 >= var$4.$nativeString.length)
                            break d;
                        if (var$5 != var$4.$nativeString.charCodeAt(var$6)) {
                            $testString = $this.$string3;
                            if ($i < 0)
                                break a;
                            if ($i >= $testString.$nativeString.length)
                                break a;
                            var$7 = jur_Pattern_getSupplement($testString.$nativeString.charCodeAt($i));
                            if (var$6 < 0)
                                break b;
                            if (var$6 >= var$4.$nativeString.length)
                                break b;
                            if (var$7 != var$4.$nativeString.charCodeAt(var$6))
                                break;
                        }
                        $i = $i + 1 | 0;
                    }
                    return (-1);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_CISequenceSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$string3;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(445);
    var$6 = var$4;
    jl_AbstractStringBuilder_insert(var$6, var$3, var$5);
    jl_AbstractStringBuilder_insert(var$6, var$2.$length0, var$1 === null ? $rt_s(1) : var$1);
    var$1 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$9 = var$2.$length0;
    var$10 = var$8.length;
    if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
};
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch4 = 0;
}
let jur_UCISupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let $low, $high;
    $low = $strIndex + 1 | 0;
    $testString = $testString;
    if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length) {
        $high = $testString.$nativeString.charCodeAt($strIndex);
        if ($low >= 0 && $low < $testString.$nativeString.length) {
            $low = $testString.$nativeString.charCodeAt($low);
            $strIndex = $this.$ch4;
            $low = (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
            if (jl_Character_upperCaseMapping === null) {
                if (jl_Character_$$metadata$$1 === null)
                    jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
            }
            $low = jl_Character_mapChar(jl_Character_upperCaseMapping, $low);
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
            }
            return $strIndex != jl_Character_mapChar(jl_Character_lowerCaseMapping, $low) ? (-1) : 2;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_UCISupplCharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = new jl_String;
    var$2 = jl_Character_toChars($this.$ch4);
    var$1.$nativeString = $rt_charArrayToString(var$2.data, 0, var$2.data.length);
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    var$6 = $rt_s(426);
    var$7 = var$5;
    jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
    jl_AbstractStringBuilder_insert(var$7, var$3.$length0, var$1);
    var$1 = new jl_String;
    var$2 = var$3.$buffer;
    var$8 = var$2.data;
    var$9 = var$3.$length0;
    var$10 = var$8.length;
    if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$2.data, 0, var$9);
        return var$1;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    $rt_throw(var$1);
};
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
let jur_LowSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_LowSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, var$5, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$rightBound) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$5 = $testString;
    if ($stringIndex >= 0 && $stringIndex < var$5.$nativeString.length) {
        a: {
            $low = var$5.$nativeString.charCodeAt($stringIndex);
            if ($stringIndex > $matchResult.$leftBound) {
                $high = $stringIndex - 1 | 0;
                if ($high >= 0 && $high < var$5.$nativeString.length) {
                    if (!((var$5.$nativeString.charCodeAt($high) & 64512) != 55296 ? 0 : 1))
                        break a;
                    return (-1);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        if ($this.$low != $low)
            return (-1);
        return $this.$next0.$matches(var$4, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_LowSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $strLength, var$5, $testStr, $startStr, var$8;
    if (!($testString instanceof jl_String)) {
        $strLength = $matchResult.$rightBound;
        var$5 = $this;
        a: {
            while (true) {
                if ($strIndex > $strLength) {
                    $strIndex = (-1);
                    break a;
                }
                if (jur_LowSurrogateCharSet_matches(var$5, $strIndex, $testString, $matchResult) >= 0)
                    break;
                $strIndex = $strIndex + 1 | 0;
            }
        }
        return $strIndex;
    }
    $testStr = $testString;
    $startStr = $matchResult.$leftBound;
    $strLength = $matchResult.$rightBound;
    b: {
        while (true) {
            if ($strIndex >= $strLength)
                return (-1);
            var$8 = jl_String_indexOf($testStr, $this.$low, $strIndex);
            if (var$8 < 0)
                return (-1);
            if (var$8 > $startStr) {
                $strIndex = var$8 - 1 | 0;
                if ($strIndex < 0)
                    break b;
                if ($strIndex >= $testStr.$nativeString.length)
                    break b;
                if (($testStr.$nativeString.charCodeAt($strIndex) & 64512) != 55296 ? 0 : 1) {
                    $strIndex = var$8 + 1 | 0;
                    continue;
                }
            }
            var$5 = $this.$next0;
            $strIndex = var$8 + 1 | 0;
            if (var$5.$matches($strIndex, $testString, $matchResult) >= 0)
                break;
        }
        return var$8;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_LowSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let var$5, $startStr, $testStr, var$8;
    if (!($testString instanceof jl_String)) {
        var$5 = $this;
        a: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break a;
                }
                if (jur_LowSurrogateCharSet_matches(var$5, $lastIndex, $testString, $matchResult) >= 0)
                    break;
                $lastIndex = $lastIndex + (-1) | 0;
            }
        }
        return $lastIndex;
    }
    $startStr = $matchResult.$leftBound;
    $testStr = $testString;
    b: {
        c: {
            while (true) {
                if ($lastIndex < $strIndex)
                    return (-1);
                var$8 = jl_String_lastIndexOf($testStr, $this.$low, $lastIndex);
                if (var$8 < 0)
                    break c;
                if (var$8 < $strIndex)
                    break c;
                if (var$8 > $startStr) {
                    $lastIndex = var$8 - 1 | 0;
                    if ($lastIndex < 0)
                        break b;
                    if ($lastIndex >= $testStr.$nativeString.length)
                        break b;
                    if (($testStr.$nativeString.charCodeAt($lastIndex) & 64512) != 55296 ? 0 : 1) {
                        $lastIndex = var$8 + (-2) | 0;
                        continue;
                    }
                }
                if ($this.$next0.$matches(var$8 + 1 | 0, $testString, $matchResult) >= 0)
                    break;
                $lastIndex = var$8 + (-1) | 0;
            }
            return var$8;
        }
        return (-1);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_LowSurrogateCharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$low;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$4.$buffer.data[var$3] = var$1;
    var$4 = new jl_String;
    var$5 = var$2.$buffer;
    var$6 = var$5.data;
    var$3 = var$2.$length0;
    var$7 = var$6.length;
    if (var$3 >= 0 && var$3 <= (var$7 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$5.data, 0, var$3);
        return var$4;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
jur_LowSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
},
jur_LowSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high = 0;
}
let jur_HighSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next0 = $next;
},
jur_HighSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    $strLength = $rt_compare(var$5, $strLength);
    if ($strLength > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$6 = $testString;
    if ($stringIndex >= 0 && $stringIndex < var$6.$nativeString.length) {
        a: {
            $high = var$6.$nativeString.charCodeAt($stringIndex);
            if ($strLength < 0) {
                if (var$5 >= 0 && var$5 < var$6.$nativeString.length) {
                    if (!((var$6.$nativeString.charCodeAt(var$5) & 64512) != 56320 ? 0 : 1))
                        break a;
                    return (-1);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        if ($this.$high != $high)
            return (-1);
        return $this.$next0.$matches(var$5, $testString, $matchResult);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_HighSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let var$4, $testStr, $strLength, var$7;
    if (!($testString instanceof jl_String)) {
        var$4 = $matchResult.$rightBound;
        $testStr = $this;
        a: {
            while (true) {
                if ($strIndex > var$4) {
                    $strIndex = (-1);
                    break a;
                }
                if (jur_HighSurrogateCharSet_matches($testStr, $strIndex, $testString, $matchResult) >= 0)
                    break;
                $strIndex = $strIndex + 1 | 0;
            }
        }
        return $strIndex;
    }
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    b: {
        while (true) {
            if ($strIndex >= $strLength)
                return (-1);
            var$7 = jl_String_indexOf($testStr, $this.$high, $strIndex);
            if (var$7 < 0)
                return (-1);
            $strIndex = var$7 + 1 | 0;
            if ($strIndex < $strLength) {
                if ($strIndex < 0)
                    break b;
                if ($strIndex >= $testStr.$nativeString.length)
                    break b;
                if (($testStr.$nativeString.charCodeAt($strIndex) & 64512) != 56320 ? 0 : 1) {
                    $strIndex = var$7 + 2 | 0;
                    continue;
                }
            }
            if ($this.$next0.$matches($strIndex, $testString, $matchResult) >= 0)
                break;
        }
        return var$7;
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_HighSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let var$5, $testStr, $strLength, var$8, var$9;
    if (!($testString instanceof jl_String)) {
        var$5 = $this;
        a: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break a;
                }
                if (jur_HighSurrogateCharSet_matches(var$5, $lastIndex, $testString, $matchResult) >= 0)
                    break;
                $lastIndex = $lastIndex + (-1) | 0;
            }
        }
        return $lastIndex;
    }
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    b: {
        c: {
            while (true) {
                if ($lastIndex < $strIndex)
                    return (-1);
                var$8 = jl_String_lastIndexOf($testStr, $this.$high, $lastIndex);
                if (var$8 < 0)
                    break c;
                if (var$8 < $strIndex)
                    break c;
                var$9 = var$8 + 1 | 0;
                if (var$9 < $strLength) {
                    if (var$9 < 0)
                        break b;
                    if (var$9 >= $testStr.$nativeString.length)
                        break b;
                    if (($testStr.$nativeString.charCodeAt(var$9) & 64512) != 56320 ? 0 : 1) {
                        $lastIndex = var$8 + (-1) | 0;
                        continue;
                    }
                }
                if ($this.$next0.$matches(var$9, $testString, $matchResult) >= 0)
                    break;
                $lastIndex = var$8 + (-1) | 0;
            }
            return var$8;
        }
        return (-1);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_HighSurrogateCharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$high;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
    var$4.$buffer.data[var$3] = var$1;
    var$4 = new jl_String;
    var$5 = var$2.$buffer;
    var$6 = var$5.data;
    var$3 = var$2.$length0;
    var$7 = var$6.length;
    if (var$3 >= 0 && var$3 <= (var$7 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$5.data, 0, var$3);
        return var$4;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
jur_HighSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high != $this.$high ? 0 : 1;
},
jur_HighSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_SupplCharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$high0 = 0;
    a.$low0 = 0;
    a.$ch1 = 0;
}
let jur_SupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let $low, $high;
    $low = $strIndex + 1 | 0;
    $testString = $testString;
    if ($strIndex >= 0 && $strIndex < $testString.$nativeString.length) {
        $high = $testString.$nativeString.charCodeAt($strIndex);
        if ($low >= 0 && $low < $testString.$nativeString.length) {
            $low = $testString.$nativeString.charCodeAt($low);
            return $this.$high0 == $high && $this.$low0 == $low ? 2 : (-1);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    $testString.$suppressionEnabled = 1;
    $testString.$writableStackTrace = 1;
    $rt_throw($testString);
},
jur_SupplCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, $ch, var$8, var$9, var$10, var$11;
    if ($testString instanceof jl_String) {
        $testStr = $testString;
        $strLength = $matchResult.$rightBound;
        a: {
            while ($strIndex < $strLength) {
                var$6 = jl_String_indexOf($testStr, $this.$high0, $strIndex);
                if (var$6 < 0)
                    return (-1);
                $strIndex = var$6 + 1 | 0;
                if ($strIndex >= $strLength)
                    continue;
                if ($strIndex < 0)
                    break a;
                if ($strIndex >= $testStr.$nativeString.length)
                    break a;
                $ch = $testStr.$nativeString.charCodeAt($strIndex);
                if ($this.$low0 == $ch && $this.$next0.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
                    return $strIndex + (-1) | 0;
                $strIndex = $strIndex + 1 | 0;
            }
            return (-1);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $ch = $matchResult.$rightBound;
    var$8 = $this;
    var$9 = var$8;
    $testStr = var$8;
    var$10 = $testString;
    b: {
        c: {
            d: {
                while (true) {
                    if ($strIndex > $ch) {
                        $strIndex = (-1);
                        break d;
                    }
                    if (($strIndex + var$9.$charCount0 | 0) > $matchResult.$rightBound) {
                        $matchResult.$hitEnd = 1;
                        var$6 = (-1);
                    } else {
                        var$6 = $strIndex + 1 | 0;
                        if ($strIndex < 0)
                            break b;
                        if ($strIndex >= var$10.$nativeString.length)
                            break b;
                        var$11 = var$10.$nativeString.charCodeAt($strIndex);
                        if (var$6 < 0)
                            break c;
                        if (var$6 >= var$10.$nativeString.length)
                            break c;
                        $strLength = var$10.$nativeString.charCodeAt(var$6);
                        var$6 = $testStr.$high0 == var$11 && $testStr.$low0 == $strLength ? 2 : (-1);
                        var$6 = var$6 < 0 ? (-1) : var$8.$next0.$matches($strIndex + var$6 | 0, $testString, $matchResult);
                    }
                    if (var$6 >= 0)
                        break;
                    $strIndex = $strIndex + 1 | 0;
                }
            }
            return $strIndex;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_($testString);
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_($testString);
    $rt_throw($testString);
},
jur_SupplCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6, var$7, var$8, var$9, var$10, var$11;
    if ($testString instanceof jl_String) {
        $testStr = $testString;
        a: {
            b: {
                while (true) {
                    if ($lastIndex < $strIndex)
                        return (-1);
                    var$6 = jl_String_lastIndexOf($testStr, $this.$low0, $lastIndex) + (-1) | 0;
                    if (var$6 < 0)
                        break b;
                    if (var$6 < $strIndex)
                        break b;
                    var$7 = $this.$high0;
                    if (var$6 < 0)
                        break a;
                    if (var$6 >= $testStr.$nativeString.length)
                        break a;
                    if (var$7 == $testStr.$nativeString.charCodeAt(var$6) && $this.$next0.$matches(var$6 + 2 | 0, $testString, $matchResult) >= 0)
                        break;
                    $lastIndex = var$6 + (-1) | 0;
                }
                return var$6;
            }
            return (-1);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    $testStr = $this;
    var$8 = $testStr;
    var$9 = $testStr;
    var$10 = $testString;
    c: {
        d: {
            e: {
                while (true) {
                    if ($lastIndex < $strIndex) {
                        $lastIndex = (-1);
                        break e;
                    }
                    if (($lastIndex + var$8.$charCount0 | 0) > $matchResult.$rightBound) {
                        $matchResult.$hitEnd = 1;
                        var$6 = (-1);
                    } else {
                        var$7 = $lastIndex + 1 | 0;
                        if ($lastIndex < 0)
                            break c;
                        if ($lastIndex >= var$10.$nativeString.length)
                            break c;
                        var$6 = var$10.$nativeString.charCodeAt($lastIndex);
                        if (var$7 < 0)
                            break d;
                        if (var$7 >= var$10.$nativeString.length)
                            break d;
                        var$11 = var$10.$nativeString.charCodeAt(var$7);
                        var$6 = var$9.$high0 == var$6 && var$9.$low0 == var$11 ? 2 : (-1);
                        var$6 = var$6 < 0 ? (-1) : $testStr.$next0.$matches($lastIndex + var$6 | 0, $testString, $matchResult);
                    }
                    if (var$6 >= 0)
                        break;
                    $lastIndex = $lastIndex + (-1) | 0;
                }
            }
            return $lastIndex;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_($testString);
        $rt_throw($testString);
    }
    $testString = new jl_StringIndexOutOfBoundsException;
    jl_Throwable__init_($testString);
    $rt_throw($testString);
},
jur_SupplCharSet_getName = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$high0;
    var$2 = $this.$low0;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$4 = var$3.$length0;
    var$5 = var$3;
    jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
    var$5.$buffer.data[var$4] = var$1;
    var$1 = var$3.$length0;
    jl_AbstractStringBuilder_insertSpace(var$5, var$1, var$1 + 1 | 0);
    var$5.$buffer.data[var$1] = var$2;
    var$5 = new jl_String;
    var$6 = var$3.$buffer;
    var$7 = var$6.data;
    var$2 = var$3.$length0;
    var$4 = var$7.length;
    if (var$2 >= 0 && var$2 <= (var$4 - 0 | 0)) {
        var$5.$nativeString = $rt_charArrayToString(var$6.data, 0, var$2);
        return var$5;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$3);
    $rt_throw(var$3);
},
jur_SupplCharSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return $set.$ch1 != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains0($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
},
jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$1_isLineTerminator = ($this, $ch) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$1_isAfterLineTerminator = ($this, $ch, $ch2) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$2_isLineTerminator = ($this, $ch) => {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
},
jur_AbstractLineTerminator$2_isAfterLineTerminator = ($this, $ch, $ch2) => {
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
};
function jur_SequenceSet$IntHash() {
    let a = this; jl_Object.call(a);
    a.$table = null;
    a.$values = null;
    a.$mask1 = 0;
    a.$size8 = 0;
}
let jur_SequenceSet$IntHash__init_0 = ($this, $size) => {
    let var$2, var$3;
    while (true) {
        var$2 = $this.$mask1;
        if ($size < var$2)
            break;
        $this.$mask1 = var$2 << 1 | 1;
    }
    var$3 = var$2 << 1 | 1;
    $this.$mask1 = var$3;
    var$3 = var$3 + 1 | 0;
    $this.$table = $rt_createIntArray(var$3);
    $this.$values = $rt_createIntArray(var$3);
    $this.$size8 = $size;
},
jur_SequenceSet$IntHash__init_ = var_0 => {
    let var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
},
jur_SequenceSet$IntHash_put = ($this, $key, $value) => {
    let $i, var$4, $hashCode, var$6;
    $i = 0;
    var$4 = $this.$mask1;
    $hashCode = $key & var$4;
    while (true) {
        var$6 = $this.$table.data;
        if (!var$6[$hashCode])
            break;
        if (var$6[$hashCode] == $key)
            break;
        $i = ($i + 1 | 0) & var$4;
        $hashCode = ($hashCode + $i | 0) & var$4;
    }
    var$6[$hashCode] = $key;
    $this.$values.data[$hashCode] = $value;
},
jur_SequenceSet$IntHash_get = ($this, $key) => {
    let var$2, $hashCode, $i, $storedKey;
    var$2 = $this.$mask1;
    $hashCode = $key & var$2;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values.data[$hashCode];
        $i = ($i + 1 | 0) & var$2;
        $hashCode = ($hashCode + $i | 0) & var$2;
    }
    return $this.$size8;
},
jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpace_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add(var$1, 9, 13), 32);
},
jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyDigit_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(var$1, 48, 57);
},
jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyLower_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(var$1, 97, 122);
},
jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyUpper_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(var$1, 65, 90);
},
jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyASCII_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(var$1, 0, 127);
},
jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyAlpha_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add(var$1, 97, 122), 65, 90);
},
jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha),
jur_AbstractCharClass$LazyAlnum_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(var$1, 97, 122), 65, 90), 48, 57);
},
jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyPunct_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(var$1, 33, 64), 91, 96), 123, 126);
},
jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum),
jur_AbstractCharClass$LazyGraph_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(var$1, 97, 122), 65, 90), 48, 57), 33, 64), 91, 96), 123, 126);
},
jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph),
jur_AbstractCharClass$LazyPrint_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(var$1, 97, 122), 65, 90), 48, 57), 33, 64), 91, 96), 123, 126), 32);
},
jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyBlank_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add0(var$1, 32), 9);
},
jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyCntrl_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add(var$1, 0, 31), 127);
},
jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyXDigit_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(var$1, 48, 57), 97, 102), 65, 70);
},
jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLowerCase_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaLowerCase$1;
    $chCl.$this$033 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUpperCase_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaUpperCase$1;
    $chCl.$this$036 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaWhitespace_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaWhitespace$1;
    var$1.$this$031 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
},
jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaMirrored_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaMirrored$1;
    var$1.$this$028 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
},
jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDefined_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaDefined$1;
    $chCl.$this$043 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    ju_BitSet_set(var$2, 0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDigit_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaDigit$1;
    $chCl.$this$037 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1;
    $chCl.$this$047 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaISOControl_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaISOControl$1;
    var$1.$this$034 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1;
    $chCl.$this$018 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1;
    $chCl.$this$038 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
};
let jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetter_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaLetter$1;
    $chCl.$this$042 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1;
    $chCl.$this$045 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaSpaceChar_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1;
    var$1.$this$032 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
},
jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaTitleCase_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_AbstractCharClass$LazyJavaTitleCase$1;
    var$1.$this$040 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    return var$1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1;
    $chCl.$this$019 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1;
    $chCl.$this$053 = $this;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyWord_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(var$1, 97, 122), 65, 90), 48, 57), 95);
},
jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord),
jur_AbstractCharClass$LazyNonWord_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    $chCl.$bits = var$2;
    $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add0(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add($chCl, 97, 122), 65, 90), 48, 57), 95), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace),
jur_AbstractCharClass$LazyNonSpace_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    $chCl.$bits = var$2;
    $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add0(jur_CharClass_add($chCl, 9, 13), 32), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit),
jur_AbstractCharClass$LazyNonDigit_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    $chCl.$bits = var$2;
    $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add($chCl, 48, 57), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
};
function jur_AbstractCharClass$LazyRange() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start = 0;
    a.$end0 = 0;
}
let jur_AbstractCharClass$LazyRange__init_0 = ($this, $start, $end) => {
    $this.$start = $start;
    $this.$end0 = $end;
},
jur_AbstractCharClass$LazyRange__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyRange_computeValue = $this => {
    let $chCl, var$2;
    $chCl = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    $chCl.$bits = var$2;
    return jur_CharClass_add($chCl, $this.$start, $this.$end0);
},
jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpecialsBlock_computeValue = $this => {
    let var$1, var$2;
    var$1 = new jur_CharClass;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(64);
    var$1.$lowHighSurrogates = var$2;
    var$2 = new ju_BitSet;
    var$2.$data = $rt_createIntArray(2);
    var$1.$bits = var$2;
    return jur_CharClass_add(jur_CharClass_add(var$1, 65279, 65279), 65520, 65533);
};
function jur_AbstractCharClass$LazyCategory() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category1 = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates0 = 0;
}
let jur_AbstractCharClass$LazyCategory__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategory__init_2 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_1 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategory_computeValue = $this => {
    let $chCl, var$2, var$3;
    $chCl = new jur_UnicodeCategory;
    var$2 = $this.$category1;
    var$3 = new ju_BitSet;
    var$3.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$3;
    $chCl.$category = var$2;
    if ($this.$containsAllSurrogates0)
        ju_BitSet_set(var$3, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
};
function jur_AbstractCharClass$LazyCategoryScope() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates = 0;
}
let jur_AbstractCharClass$LazyCategoryScope__init_1 = ($this, $cat, $mayContainSupplCodepoints) => {
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategoryScope__init_0 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategoryScope_computeValue = $this => {
    let $chCl, var$2, var$3;
    $chCl = new jur_UnicodeCategoryScope;
    var$2 = $this.$category0;
    var$3 = new ju_BitSet;
    var$3.$data = $rt_createIntArray(64);
    $chCl.$lowHighSurrogates = var$3;
    $chCl.$category = var$2;
    if ($this.$containsAllSurrogates)
        ju_BitSet_set(var$3, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
},
jur_IntHash = $rt_classWithoutFields(),
otpp_ResourceAccessor = $rt_classWithoutFields(),
otciu_UnicodeHelper = $rt_classWithoutFields(),
otciu_UnicodeHelper_decodeIntPairsDiff = $text => {
    let $flow, $data, var$4, $sz, var$6, $j, $lastKey, $lastValue, $i, var$11, var$12;
    $flow = new otci_CharFlow;
    $data = $rt_createCharArray($text.$nativeString.length);
    var$4 = $data.data;
    $sz = 0;
    var$6 = var$4.length;
    while (true) {
        if ($sz >= var$6) {
            $flow.$characters = $data;
            $sz = otci_Base46_decodeUnsigned($flow);
            $data = $rt_createIntArray($sz * 2 | 0);
            var$4 = $data.data;
            $j = 0;
            $lastKey = 0;
            $lastValue = 0;
            $i = 0;
            while ($i < $sz) {
                var$11 = otci_Base46_decodeUnsigned($flow);
                var$12 = var$11 / 2 | 0;
                if (var$11 % 2 | 0)
                    var$12 =  -var$12 | 0;
                $lastKey = $lastKey + var$12 | 0;
                var$11 = otci_Base46_decodeUnsigned($flow);
                var$6 = var$11 / 2 | 0;
                if (var$11 % 2 | 0)
                    var$6 =  -var$6 | 0;
                $lastValue = $lastValue + var$6 | 0;
                var$6 = $j + 1 | 0;
                var$4[$j] = $lastKey;
                $j = var$6 + 1 | 0;
                var$4[var$6] = $lastValue;
                $i = $i + 1 | 0;
            }
            return $data;
        }
        if ($sz < 0)
            break;
        if ($sz >= $text.$nativeString.length)
            break;
        var$4[$sz] = $text.$nativeString.charCodeAt($sz);
        $sz = $sz + 1 | 0;
    }
    $text = new jl_StringIndexOutOfBoundsException;
    $text.$suppressionEnabled = 1;
    $text.$writableStackTrace = 1;
    $rt_throw($text);
},
otciu_UnicodeHelper_decodeCaseMapping = $text => {
    let $flow, $data, var$4, $sz, var$6, $last, $i, var$9, var$10, var$11;
    $flow = new otci_CharFlow;
    $data = $rt_createCharArray($text.$nativeString.length);
    var$4 = $data.data;
    $sz = 0;
    var$6 = var$4.length;
    while (true) {
        if ($sz >= var$6) {
            $flow.$characters = $data;
            $sz = otci_Base46_decodeUnsigned($flow);
            $data = $rt_createIntArray($sz * 2 | 0);
            var$4 = $data.data;
            $last = 0;
            $i = 0;
            while ($i < $sz) {
                $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
                var$6 = $i * 2 | 0;
                var$4[var$6] = $last;
                var$9 = var$6 + 1 | 0;
                var$10 = otci_Base46_decodeUnsigned($flow);
                var$11 = var$10 / 2 | 0;
                if (var$10 % 2 | 0)
                    var$11 =  -var$11 | 0;
                var$4[var$9] = var$11;
                $i = $i + 1 | 0;
            }
            return $data;
        }
        if ($sz < 0)
            break;
        if ($sz >= $text.$nativeString.length)
            break;
        var$4[$sz] = $text.$nativeString.charCodeAt($sz);
        $sz = $sz + 1 | 0;
    }
    $text = new jl_StringIndexOutOfBoundsException;
    $text.$suppressionEnabled = 1;
    $text.$writableStackTrace = 1;
    $rt_throw($text);
},
otciu_UnicodeHelper_createCharMapping = $data => {
    let $result, var$3, $last, $lastValue, $i, var$7, $key, $value, var$10, var$11, var$12;
    $result = $rt_createIntArray(65536);
    var$3 = $result.data;
    $last = 0;
    $lastValue = 0;
    $i = 0;
    a: {
        while (true) {
            var$7 = $data.data;
            if ($i >= var$7.length)
                break a;
            $key = var$7[$i];
            $value = var$7[$i + 1 | 0];
            var$10 = var$3.length;
            if ($key < var$10)
                var$10 = $key;
            else if ($key == $last)
                break;
            if ($last > var$10) {
                var$11 = new jl_IllegalArgumentException;
                var$11.$suppressionEnabled = 1;
                var$11.$writableStackTrace = 1;
                $rt_throw(var$11);
            }
            while ($last < var$10) {
                var$12 = $last + 1 | 0;
                var$3[$last] = $lastValue;
                $last = var$12;
            }
            $i = $i + 2 | 0;
            $last = var$10;
            $lastValue = $value;
        }
    }
    var$11 = new otciu_CharMapping;
    var$11.$binarySearchTable0 = $data;
    var$11.$fastTable = $result;
    return var$11;
},
otciu_UnicodeHelper_decodeByte = $c => {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
},
otciu_UnicodeHelper_extractRle = $encoded => {
    let $ranges, var$3, var$4, $index, $rangeIndex, $codePoint, $i, var$9, $b, $count, $pos, $j, var$14, var$15, $buffer, var$17, $digit;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    var$3 = $ranges.data;
    var$4 = $rt_createByteArray(16384).data;
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    a: {
        b: {
            c: {
                while (true) {
                    if ($i >= $encoded.$nativeString.length) {
                        var$9 = $ranges.constructor;
                        if (var$9 === null)
                            $encoded = null;
                        else {
                            $encoded = var$9.classObject;
                            if ($encoded === null) {
                                $encoded = new jl_Class;
                                $encoded.$platformClass = var$9;
                                var$9.classObject = $encoded;
                            }
                        }
                        $encoded = jl_Class_getComponentType($encoded);
                        if ($encoded === null) {
                            $encoded = new jl_NullPointerException;
                            $encoded.$suppressionEnabled = 1;
                            $encoded.$writableStackTrace = 1;
                            $rt_throw($encoded);
                        }
                        if ($encoded === $rt_cls($rt_voidcls)) {
                            $encoded = new jl_IllegalArgumentException;
                            $encoded.$suppressionEnabled = 1;
                            $encoded.$writableStackTrace = 1;
                            $rt_throw($encoded);
                        }
                        if ($rangeIndex < 0) {
                            $encoded = new jl_NegativeArraySizeException;
                            $encoded.$suppressionEnabled = 1;
                            $encoded.$writableStackTrace = 1;
                            $rt_throw($encoded);
                        }
                        $ranges = jlr_Array_newInstanceImpl($encoded.$platformClass, $rangeIndex);
                        $index = var$3.length;
                        if ($rangeIndex < $index)
                            $index = $rangeIndex;
                        $rangeIndex = 0;
                        while ($rangeIndex < $index) {
                            $ranges.data[$rangeIndex] = var$3[$rangeIndex];
                            $rangeIndex = $rangeIndex + 1 | 0;
                        }
                        return $ranges;
                    }
                    if ($i < 0)
                        break c;
                    if ($i >= $encoded.$nativeString.length)
                        break c;
                    $b = otciu_UnicodeHelper_decodeByte($encoded.$nativeString.charCodeAt($i));
                    if ($b == 64) {
                        $i = $i + 1 | 0;
                        if ($i < 0)
                            break b;
                        if ($i >= $encoded.$nativeString.length)
                            break b;
                        $b = otciu_UnicodeHelper_decodeByte($encoded.$nativeString.charCodeAt($i));
                        $count = 0;
                        $pos = 1;
                        $j = 0;
                        while ($j < 3) {
                            $i = $i + 1 | 0;
                            if ($i < 0)
                                break a;
                            if ($i >= $encoded.$nativeString.length)
                                break a;
                            $count = $count | $rt_imul($pos, otciu_UnicodeHelper_decodeByte($encoded.$nativeString.charCodeAt($i)));
                            $pos = $pos * 64 | 0;
                            $j = $j + 1 | 0;
                        }
                    } else if ($b < 32)
                        $count = 1;
                    else {
                        $b = ($b - 32 | 0) << 24 >> 24;
                        $i = $i + 1 | 0;
                        if ($i < 0)
                            break;
                        if ($i >= $encoded.$nativeString.length)
                            break;
                        $count = otciu_UnicodeHelper_decodeByte($encoded.$nativeString.charCodeAt($i));
                    }
                    if (!$b && $count >= 128) {
                        if ($index > 0) {
                            var$14 = $rangeIndex + 1 | 0;
                            var$9 = new otciu_UnicodeHelper$Range;
                            var$15 = $codePoint + $index | 0;
                            $buffer = $rt_createByteArray($index);
                            $pos = var$4.length;
                            if ($index < $pos)
                                $pos = $index;
                            var$17 = $buffer.data;
                            $j = 0;
                            while ($j < $pos) {
                                var$17[$j] = var$4[$j];
                                $j = $j + 1 | 0;
                            }
                            var$9.$start8 = $codePoint;
                            var$9.$end1 = var$15;
                            var$9.$data3 = $buffer;
                            var$3[$rangeIndex] = var$9;
                            $rangeIndex = var$14;
                        }
                        $codePoint = $codePoint + ($index + $count | 0) | 0;
                        $index = 0;
                    } else {
                        $j = $index + $count | 0;
                        $digit = var$4.length;
                        if ($j < $digit)
                            var$14 = $rangeIndex;
                        else {
                            var$14 = $rangeIndex + 1 | 0;
                            var$9 = new otciu_UnicodeHelper$Range;
                            var$15 = $codePoint + $index | 0;
                            $buffer = $rt_createByteArray($index);
                            if ($index < $digit)
                                $digit = $index;
                            var$17 = $buffer.data;
                            $index = 0;
                            while ($index < $digit) {
                                var$17[$index] = var$4[$index];
                                $index = $index + 1 | 0;
                            }
                            var$9.$start8 = $codePoint;
                            var$9.$end1 = var$15;
                            var$9.$data3 = $buffer;
                            var$3[$rangeIndex] = var$9;
                            $codePoint = $codePoint + $j | 0;
                            $index = 0;
                        }
                        while (true) {
                            $rangeIndex = $count + (-1) | 0;
                            if ($count <= 0)
                                break;
                            $pos = $index + 1 | 0;
                            var$4[$index] = $b;
                            $index = $pos;
                            $count = $rangeIndex;
                        }
                        $rangeIndex = var$14;
                    }
                    $i = $i + 1 | 0;
                }
                $encoded = new jl_StringIndexOutOfBoundsException;
                $encoded.$suppressionEnabled = 1;
                $encoded.$writableStackTrace = 1;
                $rt_throw($encoded);
            }
            $encoded = new jl_StringIndexOutOfBoundsException;
            $encoded.$suppressionEnabled = 1;
            $encoded.$writableStackTrace = 1;
            $rt_throw($encoded);
        }
        $encoded = new jl_StringIndexOutOfBoundsException;
        $encoded.$suppressionEnabled = 1;
        $encoded.$writableStackTrace = 1;
        $rt_throw($encoded);
    }
    $encoded = new jl_StringIndexOutOfBoundsException;
    $encoded.$suppressionEnabled = 1;
    $encoded.$writableStackTrace = 1;
    $rt_throw($encoded);
};
function otciu_CharMapping() {
    let a = this; jl_Object.call(a);
    a.$binarySearchTable0 = null;
    a.$fastTable = null;
}
function otciu_UnicodeHelper$Range() {
    let a = this; jl_Object.call(a);
    a.$start8 = 0;
    a.$end1 = 0;
    a.$data3 = null;
}
function otci_CharFlow() {
    let a = this; jl_Object.call(a);
    a.$characters = null;
    a.$pointer = 0;
}
let otci_Base46 = $rt_classWithoutFields(),
otci_Base46_decodeUnsigned = $seq => {
    let $number, $pos, var$4, $hasMore, $digit;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters.data;
        $hasMore = $seq.$pointer;
        $seq.$pointer = $hasMore + 1 | 0;
        $digit = var$4[$hasMore];
        $digit = $digit < 34 ? $digit - 32 | 0 : $digit >= 92 ? ($digit - 32 | 0) - 2 | 0 : ($digit - 32 | 0) - 1 | 0;
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
},
otcir_Flags = $rt_classWithoutFields(),
otcir_Flags_getModifiers = ($flags, $access) => {
    let $modifiers;
    a: {
        $modifiers = 0;
        switch ($access) {
            case 1:
                $modifiers = 2;
                break a;
            case 2:
                $modifiers = 4;
                break a;
            case 3:
                $modifiers = 1;
                break a;
            default:
        }
    }
    $access = $flags >>> 6 | 0;
    return $modifiers | $access & 8 | $flags << 2 & 16 | $access & 32 | ($flags >>> 8 | 0) & 64 | ($flags >>> 5 | 0) & 128 | $flags & 256 | $flags << 8 & 512 | $flags << 10 & 1024 | $flags << 1 & 2048;
},
cbgu_NumberUtils = $rt_classWithoutFields(),
jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException),
cgxgbtd_StyleWrapper$Unit = $rt_classWithoutFields(jl_Enum),
cgxgbtd_StyleWrapper$Unit_PX = null,
cgxgbtd_StyleWrapper$Unit_PCT = null,
cgxgbtd_StyleWrapper$Unit_EM = null,
cgxgbtd_StyleWrapper$Unit_EX = null,
cgxgbtd_StyleWrapper$Unit_PT = null,
cgxgbtd_StyleWrapper$Unit_PC = null,
cgxgbtd_StyleWrapper$Unit_IN = null,
cgxgbtd_StyleWrapper$Unit_CM = null,
cgxgbtd_StyleWrapper$Unit_MM = null,
cgxgbtd_StyleWrapper$Unit_$VALUES = null,
cgxgbtd_StyleWrapper$Unit_$callClinit = () => {
    cgxgbtd_StyleWrapper$Unit_$callClinit = $rt_eraseClinit(cgxgbtd_StyleWrapper$Unit);
    cgxgbtd_StyleWrapper$Unit__clinit_();
},
cgxgbtd_StyleWrapper$Unit__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = new cgxgbtd_StyleWrapper$Unit$1;
    cgxgbtd_StyleWrapper$Unit_$callClinit();
    var$1.$name0 = $rt_s(446);
    var$1.$ordinal0 = 0;
    cgxgbtd_StyleWrapper$Unit_PX = var$1;
    var$2 = new cgxgbtd_StyleWrapper$Unit$2;
    var$2.$name0 = $rt_s(447);
    var$2.$ordinal0 = 1;
    cgxgbtd_StyleWrapper$Unit_PCT = var$2;
    var$3 = new cgxgbtd_StyleWrapper$Unit$3;
    var$3.$name0 = $rt_s(448);
    var$3.$ordinal0 = 2;
    cgxgbtd_StyleWrapper$Unit_EM = var$3;
    var$4 = new cgxgbtd_StyleWrapper$Unit$4;
    var$4.$name0 = $rt_s(449);
    var$4.$ordinal0 = 3;
    cgxgbtd_StyleWrapper$Unit_EX = var$4;
    var$5 = new cgxgbtd_StyleWrapper$Unit$5;
    var$5.$name0 = $rt_s(450);
    var$5.$ordinal0 = 4;
    cgxgbtd_StyleWrapper$Unit_PT = var$5;
    var$6 = new cgxgbtd_StyleWrapper$Unit$6;
    var$6.$name0 = $rt_s(451);
    var$6.$ordinal0 = 5;
    cgxgbtd_StyleWrapper$Unit_PC = var$6;
    var$7 = new cgxgbtd_StyleWrapper$Unit$7;
    var$7.$name0 = $rt_s(452);
    var$7.$ordinal0 = 6;
    cgxgbtd_StyleWrapper$Unit_IN = var$7;
    var$8 = new cgxgbtd_StyleWrapper$Unit$8;
    var$8.$name0 = $rt_s(453);
    var$8.$ordinal0 = 7;
    cgxgbtd_StyleWrapper$Unit_CM = var$8;
    var$9 = new cgxgbtd_StyleWrapper$Unit$9;
    var$9.$name0 = $rt_s(454);
    var$9.$ordinal0 = 8;
    cgxgbtd_StyleWrapper$Unit_MM = var$9;
    cgxgbtd_StyleWrapper$Unit_$VALUES = $rt_wrapArray(cgxgbtd_StyleWrapper$Unit, [var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9]);
};
function ju_HashMap$HashEntry() {
    let a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next1 = null;
}
function jur_AbstractCharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$044 = null;
}
let jur_AbstractCharClass$1_contains = ($this, $ch) => {
    let $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS, $index) : 0;
};
function jur_AbstractCharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$041 = null;
}
let jur_AbstractCharClass$2_contains = ($this, $ch) => {
    let $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS0, $index) : 0;
    return $this.$val$thisClass.$contains0($ch) && !$containslHS ? 1 : 0;
};
function jur_CharClass$18() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$020 = null;
}
let jur_CharClass$18_contains = ($this, $ch) => {
    return $this.$alt ^ ju_BitSet_get($this.$val$bs, $ch);
},
jur_CharClass$18_toString = $this => {
    let $temp, $i, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $temp = new jl_StringBuilder;
    $temp.$buffer = $rt_createCharArray(16);
    $i = ju_BitSet_nextSetBit($this.$val$bs, 0);
    var$3 = $temp;
    while ($i >= 0) {
        var$4 = (jl_Character_toChars($i)).data;
        var$5 = 0;
        var$6 = var$4.length;
        var$7 = var$3.$length0;
        var$8 = var$3;
        jl_AbstractStringBuilder_insertSpace(var$8, var$7, var$7 + var$6 | 0);
        var$9 = var$6 + var$5 | 0;
        while (var$5 < var$9) {
            var$10 = var$8.$buffer.data;
            var$11 = var$7 + 1 | 0;
            var$6 = var$5 + 1 | 0;
            var$10[var$7] = var$4[var$5];
            var$7 = var$11;
            var$5 = var$6;
        }
        var$7 = $temp.$length0;
        jl_AbstractStringBuilder_insertSpace(var$3, var$7, var$7 + 1 | 0);
        var$3.$buffer.data[var$7] = 124;
        $i = ju_BitSet_nextSetBit($this.$val$bs, $i + 1 | 0);
    }
    var$5 = $temp.$length0;
    if (var$5 > 0)
        jl_AbstractStringBuilder_deleteCharAt($temp, var$5 - 1 | 0);
    var$3 = new jl_String;
    var$4 = $temp.$buffer;
    var$10 = var$4.data;
    var$5 = $temp.$length0;
    var$6 = var$10.length;
    if (var$5 >= 0 && var$5 <= (var$6 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$4.data, 0, var$5);
        return var$3;
    }
    $temp = new jl_IndexOutOfBoundsException;
    $temp.$suppressionEnabled = 1;
    $temp.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($temp);
    $rt_throw($temp);
};
function jur_CharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$cc1 = null;
    a.$this$035 = null;
}
let jur_CharClass$1_contains = ($this, $ch) => {
    return $this.$val$cc1.$contains0($ch);
};
function jur_CharClass$3() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc = null;
    a.$this$06 = null;
}
let jur_CharClass$3_contains = ($this, $ch) => {
    return !($this.$val$curAlt ^ ju_BitSet_get($this.$this$06.$bits, $ch)) && !($this.$val$curAlt ^ $this.$this$06.$inverted ^ $this.$val$cc.$contains0($ch)) ? 0 : 1;
};
function jur_CharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$cc3 = null;
    a.$this$07 = null;
}
let jur_CharClass$2_contains = ($this, $ch) => {
    return !($this.$val$curAlt0 ^ ju_BitSet_get($this.$this$07.$bits, $ch)) && !($this.$val$curAlt0 ^ $this.$this$07.$inverted ^ $this.$val$cc3.$contains0($ch)) ? 1 : 0;
};
function jur_CharClass$5() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt10 = 0;
    a.$val$nb4 = null;
    a.$val$cc2 = null;
    a.$this$024 = null;
}
let jur_CharClass$5_contains = ($this, $ch) => {
    return $this.$val$curAlt10 ^ (!$this.$val$nb4.$contains0($ch) && !$this.$val$cc2.$contains0($ch) ? 0 : 1);
};
function jur_CharClass$4() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt2 = 0;
    a.$val$nb2 = null;
    a.$val$cc0 = null;
    a.$this$049 = null;
}
let jur_CharClass$4_contains = ($this, $ch) => {
    return $this.$val$curAlt2 ^ (!$this.$val$nb2.$contains0($ch) && !$this.$val$cc0.$contains0($ch) ? 0 : 1) ? 0 : 1;
};
function jur_CharClass$7() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz2 = null;
    a.$this$052 = null;
}
let jur_CharClass$7_contains = ($this, $ch) => {
    let var$2, var$3;
    var$2 = $this.$val$clazz2;
    var$3 = var$2.$nonBitSet;
    return var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch);
};
function jur_CharClass$6() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz8 = null;
    a.$this$026 = null;
}
let jur_CharClass$6_contains = ($this, $ch) => {
    let var$2, var$3;
    var$2 = $this.$val$clazz8;
    var$3 = var$2.$nonBitSet;
    return (var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch)) ? 0 : 1;
};
function jur_CharClass$9() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$val$curAlt1 = 0;
    a.$this$014 = null;
}
let jur_CharClass$9_contains = ($this, $ch) => {
    let var$2, var$3, var$4;
    var$2 = $this.$val$clazz4;
    var$3 = var$2.$nonBitSet;
    var$4 = var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch);
    return !var$4 && !($this.$val$curAlt1 ^ ju_BitSet_get($this.$this$014.$bits, $ch)) ? 0 : 1;
};
function jur_CharClass$8() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz5 = null;
    a.$val$curAlt5 = 0;
    a.$this$011 = null;
}
let jur_CharClass$8_contains = ($this, $ch) => {
    let var$2, var$3, var$4;
    var$2 = $this.$val$clazz5;
    var$3 = var$2.$nonBitSet;
    var$4 = var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch);
    return !var$4 && !($this.$val$curAlt5 ^ ju_BitSet_get($this.$this$011.$bits, $ch)) ? 1 : 0;
};
function jur_CharClass$11() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb3 = null;
    a.$val$clazz9 = null;
    a.$this$021 = null;
}
let jur_CharClass$11_contains = ($this, $ch) => {
    let var$2, var$3;
    a: {
        if (!($this.$val$curAlt7 ^ $this.$val$nb3.$contains0($ch))) {
            var$2 = $this.$val$clazz9;
            var$3 = var$2.$nonBitSet;
            if (!(var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch))) {
                $ch = 0;
                break a;
            }
        }
        $ch = 1;
    }
    return $ch;
};
function jur_CharClass$10() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt9 = 0;
    a.$val$nb0 = null;
    a.$val$clazz = null;
    a.$this$025 = null;
}
let jur_CharClass$10_contains = ($this, $ch) => {
    let var$2, var$3;
    a: {
        if (!($this.$val$curAlt9 ^ $this.$val$nb0.$contains0($ch))) {
            var$2 = $this.$val$clazz;
            var$3 = var$2.$nonBitSet;
            if (!(var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch))) {
                $ch = 1;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch;
};
function jur_CharClass$13() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$this$027 = null;
}
let jur_CharClass$13_contains = ($this, $ch) => {
    let var$2, var$3;
    var$2 = $this.$val$clazz0;
    var$3 = var$2.$nonBitSet;
    return var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch);
};
function jur_CharClass$12() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$048 = null;
}
let jur_CharClass$12_contains = ($this, $ch) => {
    let var$2, var$3;
    var$2 = $this.$val$clazz1;
    var$3 = var$2.$nonBitSet;
    return (var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch)) ? 0 : 1;
};
function jur_CharClass$15() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt4 = 0;
    a.$this$016 = null;
}
let jur_CharClass$15_contains = ($this, $ch) => {
    let var$2, var$3, var$4;
    var$2 = $this.$val$clazz10;
    var$3 = var$2.$nonBitSet;
    var$4 = var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch);
    return var$4 && $this.$val$curAlt4 ^ ju_BitSet_get($this.$this$016.$bits, $ch) ? 1 : 0;
};
function jur_CharClass$14() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz6 = null;
    a.$val$curAlt3 = 0;
    a.$this$012 = null;
}
let jur_CharClass$14_contains = ($this, $ch) => {
    let var$2, var$3, var$4;
    var$2 = $this.$val$clazz6;
    var$3 = var$2.$nonBitSet;
    var$4 = var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch);
    return var$4 && $this.$val$curAlt3 ^ ju_BitSet_get($this.$this$012.$bits, $ch) ? 0 : 1;
};
function jur_CharClass$17() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb1 = null;
    a.$val$clazz3 = null;
    a.$this$023 = null;
}
let jur_CharClass$17_contains = ($this, $ch) => {
    let var$2, var$3;
    a: {
        if ($this.$val$curAlt8 ^ $this.$val$nb1.$contains0($ch)) {
            var$2 = $this.$val$clazz3;
            var$3 = var$2.$nonBitSet;
            if (var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch)) {
                $ch = 1;
                break a;
            }
        }
        $ch = 0;
    }
    return $ch;
};
function jur_CharClass$16() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt6 = 0;
    a.$val$nb = null;
    a.$val$clazz7 = null;
    a.$this$030 = null;
}
let jur_CharClass$16_contains = ($this, $ch) => {
    let var$2, var$3;
    a: {
        if ($this.$val$curAlt6 ^ $this.$val$nb.$contains0($ch)) {
            var$2 = $this.$val$clazz7;
            var$3 = var$2.$nonBitSet;
            if (var$3 !== null ? var$2.$alt ^ var$3.$contains0($ch) : var$2.$alt ^ ju_BitSet_get(var$2.$bits, $ch)) {
                $ch = 0;
                break a;
            }
        }
        $ch = 1;
    }
    return $ch;
};
function jl_Object$Monitor() {
    let a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
function jl_Thread() {
    let a = this; jl_Object.call(a);
    a.$uncaughtExceptionHandler = null;
    a.$id0 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$interruptHandler = null;
    a.$key0 = null;
    a.$name1 = null;
    a.$alive = 0;
    a.$target = null;
}
let jl_Thread_mainThread = null,
jl_Thread_currentThread = null,
jl_Thread_nextId = 0,
jl_Thread_activeCount = 0,
jl_Thread_defaultUncaughtExceptionHandler = null,
jl_Thread_runThread = $this => {
    let $t, var$2, $$je;
    a: {
        b: {
            c: {
                d: {
                    try {
                        jl_Thread_activeCount = jl_Thread_activeCount + 1 | 0;
                        jl_Thread_setCurrentThread($this);
                        $this.$key0 = jl_Object__init_0();
                        cgxgbta_AssetDownloadImpl$3_run($this);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $t = $$je;
                            break d;
                        } else{
                            $t = $$je;
                            break c;
                        }
                    }
                    $t = $this.$finishedLock;
                    jl_Object_monitorEnterSync($t);
                    e: {
                        try {
                            jl_Object_notifyAll($t);
                            jl_Object_monitorExitSync($t);
                            break e;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$2 = $$je;

                        }
                        jl_Object_monitorExitSync($t);
                        $rt_throw(var$2);
                    }
                    $this.$alive = 0;
                    jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
                    $this.$key0 = null;
                    $t = jl_Thread_mainThread;
                    if (jl_Thread_currentThread !== $t)
                        jl_Thread_currentThread = $t;
                    jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
                    break a;
                }
                try {
                    jl_DefaultUncaughtExceptionHandler_uncaughtException(jl_Thread_getUncaughtExceptionHandler($this), $this, $t);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    $t = $$je;

                }
            }
            var$2 = $this.$finishedLock;
            jl_Object_monitorEnterSync(var$2);
            f: {
                try {
                    jl_Object_notifyAll(var$2);
                    jl_Object_monitorExitSync(var$2);
                    break f;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    $t = $$je;

                }
                jl_Object_monitorExitSync(var$2);
                $rt_throw($t);
            }
            $this.$alive = 0;
            jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
            $this.$key0 = null;
            var$2 = jl_Thread_mainThread;
            if (jl_Thread_currentThread !== var$2)
                jl_Thread_currentThread = var$2;
            jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
            $rt_throw($t);
        }
        $t = $this.$finishedLock;
        jl_Object_monitorEnterSync($t);
        g: {
            try {
                jl_Object_notifyAll($t);
                jl_Object_monitorExitSync($t);
                break g;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;

            }
            jl_Object_monitorExitSync($t);
            $rt_throw(var$2);
        }
        $this.$alive = 0;
        jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
        $this.$key0 = null;
        $t = jl_Thread_mainThread;
        if (jl_Thread_currentThread !== $t)
            jl_Thread_currentThread = $t;
        jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
    }
},
jl_Thread_setCurrentThread = $thread_0 => {
    if (jl_Thread_currentThread !== $thread_0)
        jl_Thread_currentThread = $thread_0;
    jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
},
jl_Thread_currentThread0 = () => {
    return jl_Thread_currentThread;
},
jl_Thread_sleep = var$1 => {
    let $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$1 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        jl_Thread_sleep$_asyncCall_$(var$1);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$1, $ptr);
},
jl_Thread_sleep0 = ($millis, $callback) => {
    let $current, $handler;
    $current = jl_Thread_currentThread;
    $handler = new jl_Thread$SleepHandler;
    $handler.$thread = $current;
    $handler.$callback = $callback;
    $handler.$scheduleId = otp_Platform_schedule($handler, Long_ge($millis, Long_fromInt(2147483647)) ? 2147483647 : Long_lo($millis));
    $current.$interruptHandler = $handler;
},
jl_Thread_getUncaughtExceptionHandler = $this => {
    let var$1;
    var$1 = $this.$uncaughtExceptionHandler;
    if (var$1 !== null)
        return var$1;
    return jl_Thread_defaultUncaughtExceptionHandler;
},
jl_Thread__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new jl_Thread;
    var$2 = null;
    var$1.$finishedLock = new jl_Object;
    var$1.$alive = 1;
    var$1.$name1 = $rt_s(455);
    var$1.$target = var$2;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    var$1.$id0 = Long_fromInt(var$3);
    jl_Thread_mainThread = var$1;
    jl_Thread_currentThread = var$1;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = new jl_DefaultUncaughtExceptionHandler;
},
jl_Thread_sleep$_asyncCall_$ = var$1 => {
    let thread = $rt_nativeThread();
    let javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        let result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    let callback = function() {
    };
    callback.$complete = val => {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error = e => {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    thread.suspend(() => {
        try {
            jl_Thread_sleep0(var$1, callback);
            ;
        } catch ($e){
            callback.$error($e);
        }
    });
    return null;
},
jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException),
otjf_JSMapping = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_013 = null;
}
let cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6;
    var$2 = var$2 === null ? null : var$2 instanceof $rt_objcls() ? var$2 : otji_JSWrapper_wrap(var$2);
    var$1 = var$1;
    var$2 = var$2 === null ? null : !(var$2 instanceof otji_JSWrapper) ? var$2 : var$2.$js;
    var$1 = var$1.$_013;
    var$3 = var$2.length;
    var$4 = $rt_createArray(cgxgbtf_FileData, var$3);
    var$5 = var$4.data;
    var$6 = 0;
    while (var$6 < var$3) {
        var$5[var$6] = var$2[var$6];
        var$6 = var$6 + 1 | 0;
    }
    a: {
        var$1.$windowListener.$filesDropped(var$4);
        if ($rt_s(456) instanceof $rt_objcls()) {
            var$6 = $rt_s(456) instanceof otji_JSWrapper;
            if (var$6) {
                var$1 = !var$6 ? $rt_s(456) : $rt_s(456).$js;
                break a;
            }
        }
        var$1 = $rt_s(456);
    }
    return var$1;
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0 = (var$1, var$2) => {
    let var$3;
    if (var$2 !== null) {
        if (var$2 instanceof $rt_objcls())
            var$2;
        else
            otji_JSWrapper_wrap(var$2);
    }
    a: {
        var$1;
        if ($rt_s(457) instanceof $rt_objcls()) {
            var$3 = $rt_s(457) instanceof otji_JSWrapper;
            if (var$3) {
                var$1 = !var$3 ? $rt_s(457) : $rt_s(457).$js;
                break a;
            }
        }
        var$1 = $rt_s(457);
    }
    return var$1;
},
otjf_JSSupplier = $rt_classWithoutFields(0),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0 = var$1 => {
    var$1;
    return null;
},
cgxgbtu_KeyCodes = $rt_classWithoutFields(),
cgxgbtu_KeyCodes_keyForCode = $keyCode => {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                return 61;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                return 66;
            case 16:
                return 59;
            case 17:
                return 129;
            case 18:
                return 57;
            case 19:
                return 0;
            case 20:
                return 0;
            case 27:
                return 111;
            case 32:
                return 62;
            case 33:
                return 92;
            case 34:
                return 93;
            case 35:
                return 123;
            case 36:
                return 3;
            case 37:
                return 21;
            case 38:
                return 19;
            case 39:
                return 22;
            case 40:
                return 20;
            case 45:
                return 124;
            case 46:
                return 112;
            case 48:
                return 7;
            case 49:
                return 8;
            case 50:
                return 9;
            case 51:
                return 10;
            case 52:
                return 11;
            case 53:
                return 12;
            case 54:
                return 13;
            case 55:
                return 14;
            case 56:
                return 15;
            case 57:
                return 16;
            case 65:
                return 29;
            case 66:
                return 30;
            case 67:
                return 31;
            case 68:
                return 32;
            case 69:
                return 33;
            case 70:
                return 34;
            case 71:
                return 35;
            case 72:
                return 36;
            case 73:
                return 37;
            case 74:
                return 38;
            case 75:
                return 39;
            case 76:
                return 40;
            case 77:
                return 41;
            case 78:
                return 42;
            case 79:
                return 43;
            case 80:
                return 44;
            case 81:
                return 45;
            case 82:
                return 46;
            case 83:
                return 47;
            case 84:
                return 48;
            case 85:
                return 49;
            case 86:
                return 50;
            case 87:
                return 51;
            case 88:
                return 52;
            case 89:
                return 53;
            case 90:
                return 54;
            case 91:
                return 0;
            case 92:
                return 0;
            case 96:
                return 144;
            case 97:
                return 145;
            case 98:
                return 146;
            case 99:
                return 147;
            case 100:
                return 148;
            case 101:
                return 149;
            case 102:
                return 150;
            case 103:
                return 151;
            case 104:
                return 152;
            case 105:
                return 153;
            case 106:
                return 0;
            case 107:
                return 81;
            case 109:
                return 69;
            case 110:
                return 56;
            case 111:
                return 0;
            case 112:
                return 131;
            case 113:
                return 132;
            case 114:
                return 133;
            case 115:
                return 134;
            case 116:
                return 135;
            case 117:
                return 136;
            case 118:
                return 137;
            case 119:
                return 138;
            case 120:
                return 139;
            case 121:
                return 140;
            case 122:
                return 141;
            case 123:
                return 142;
            case 144:
                return 78;
            case 145:
                return 0;
            case 186:
                return 74;
            case 187:
                return 70;
            case 188:
                return 55;
            case 189:
                return 69;
            case 190:
                return 56;
            case 191:
                return 76;
            case 192:
                return 0;
            case 219:
                return 71;
            case 220:
                return 73;
            case 221:
                return 72;
            case 222:
                return 75;
            default:
                break a;
        }
        return 67;
    }
    return 0;
},
cbgu_TimeUtils = $rt_classWithoutFields(),
otp_PlatformQueue = $rt_classWithoutFields(),
otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_07 = null;
}
let jl_Object$monitorExit$lambda$_8_0_run = var$0 => {
    jl_Object_waitForOtherThreads(var$0.$_07);
},
cgxgbt_TeaWindowListener = $rt_classWithoutFields(0),
otjc_JSPromise$Executor = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl$getFile$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_03 = null;
    a.$_1 = null;
    a.$_2 = null;
}
let cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0 = (var$1, var$2, var$3) => {
    let var$4, var$5;
    var$2 = otji_JS_functionAsObject(var$2, "accept");
    otji_JS_functionAsObject(var$3, "accept");
    var$1 = var$1;
    var$3 = var$1.$_03;
    var$4 = var$1.$_1;
    var$1 = var$1.$_2;
    var$5 = new FileReader();
    var$5.readAsArrayBuffer(var$4);
    var$4 = new cgxgbta_AssetLoadImpl$4;
    var$4.$this$051 = var$3;
    var$4.$val$name = var$1;
    var$4.$val$resolve = var$2;
    var$5.addEventListener("load", otji_JS_function(!(var$4 instanceof otji_JSWrapper) ? var$4 : var$4.$js, "handleEvent"));
},
otji_IDBObjectStoreParameters = $rt_classWithoutFields(),
otji_IDBObjectStoreParameters_create$js_body$_1 = () => {
    return {  };
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_05 = null;
    a.$_10 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0 = var$1 => {
    var$1 = var$1;
    cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$5(var$1.$_05, var$1.$_10);
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1() {
    jl_Object.call(this);
    this.$_015 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0 = var$1 => {
    var$1 = var$1.$_015;
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2() {
    jl_Object.call(this);
    this.$_00 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4;
    var$1 = var$1.$_00;
    if (jl_System_errCache === null) {
        var$2 = new otcic_JSStderrPrintStream;
        var$3 = null;
        var$4 = null;
        jl_Object__init_(var$2);
        var$2.$out = var$3;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_0(var$3, 16);
        var$2.$sb = var$3;
        var$2.$buffer1 = $rt_createCharArray(32);
        var$2.$autoFlush = 0;
        var$2.$charset = var$4;
        jl_System_errCache = var$2;
    }
    $rt_putStderr("IndexedDB Error cursor");
    $rt_putStderr("\n");
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
},
jl_AutoCloseable = $rt_classWithoutFields(0),
ji_Closeable = $rt_classWithoutFields(0),
ji_Flushable = $rt_classWithoutFields(0),
ji_OutputStream = $rt_classWithoutFields(),
ji_OutputStream__init_ = $this => {
    return;
};
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out = null;
}
function ji_PrintStream() {
    let a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$sb = null;
    a.$buffer1 = null;
    a.$charset = null;
}
let otcic_JsConsolePrintStream = $rt_classWithoutFields(ji_PrintStream),
otcic_JSStderrPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStderrPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(1);
    $rt_putStderr($rt_ustr($s));
},
cgxgbtd_StyleWrapper$Unit$1 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$2 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$3 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$4 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$5 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$6 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$7 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$8 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$9 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0),
jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields(),
jl_DefaultUncaughtExceptionHandler_uncaughtException = ($this, $t, $e) => {
    let var$3, var$4;
    if (jl_System_errCache === null) {
        $t = new otcic_JSStderrPrintStream;
        var$3 = null;
        var$4 = null;
        $t.$out = var$3;
        var$3 = new jl_StringBuilder;
        jl_Object__init_(var$3);
        var$3.$buffer = $rt_createCharArray(16);
        $t.$sb = var$3;
        $t.$buffer1 = $rt_createCharArray(32);
        $t.$autoFlush = 0;
        $t.$charset = var$4;
        jl_System_errCache = $t;
    }
    jl_Throwable_printStackTrace($e, jl_System_errCache);
};
function jnc_Charset() {
    let a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
let jnc_Charset_checkCanonicalName = $name => {
    let var$2, $i, $c;
    if ($name.$nativeString.length ? 0 : 1) {
        var$2 = new jnc_IllegalCharsetNameException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$charsetName = $name;
        $rt_throw(var$2);
    }
    if (0 >= $name.$nativeString.length) {
        $name = new jl_StringIndexOutOfBoundsException;
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $rt_throw($name);
    }
    if (!jnc_Charset_isValidCharsetStart($name.$nativeString.charCodeAt(0))) {
        var$2 = new jnc_IllegalCharsetNameException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$charsetName = $name;
        $rt_throw(var$2);
    }
    $i = 1;
    a: {
        while ($i < $name.$nativeString.length) {
            if ($i < 0)
                break a;
            if ($i >= $name.$nativeString.length)
                break a;
            b: {
                $c = $name.$nativeString.charCodeAt($i);
                switch ($c) {
                    case 43:
                    case 45:
                    case 46:
                    case 58:
                    case 95:
                        break;
                    default:
                        if (jnc_Charset_isValidCharsetStart($c))
                            break b;
                        else {
                            var$2 = new jnc_IllegalCharsetNameException;
                            var$2.$suppressionEnabled = 1;
                            var$2.$writableStackTrace = 1;
                            var$2.$charsetName = $name;
                            $rt_throw(var$2);
                        }
                }
            }
            $i = $i + 1 | 0;
        }
        return;
    }
    $name = new jl_StringIndexOutOfBoundsException;
    $name.$suppressionEnabled = 1;
    $name.$writableStackTrace = 1;
    $rt_throw($name);
},
jnc_Charset_isValidCharsetStart = $c => {
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            $c = 1;
            break a;
        }
        $c = 0;
    }
    return $c;
},
oti_AsyncCallback = $rt_classWithoutFields(0);
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
let otpp_AsyncCallbackWrapper_create = $realAsyncCallback => {
    let var$2;
    var$2 = new otpp_AsyncCallbackWrapper;
    var$2.$realAsyncCallback = $realAsyncCallback;
    return var$2;
},
otpp_AsyncCallbackWrapper_complete = ($this, $result) => {
    $this.$realAsyncCallback.$complete($result);
},
otpp_AsyncCallbackWrapper_error = ($this, $e) => {
    $this.$realAsyncCallback.$error($e);
};
function jl_Object$monitorEnterWait$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_06 = null;
    a.$_11 = null;
    a.$_20 = 0;
    a.$_3 = null;
}
let otjc_JSObjects = $rt_classWithoutFields(),
otji_JSWrapper$Helper = $rt_classWithoutFields(),
otji_JSWrapper$Helper_hashCodes = null,
otji_JSWrapper$Helper_wrappers = null,
otji_JSWrapper$Helper_stringWrappers = null,
otji_JSWrapper$Helper_numberWrappers = null,
otji_JSWrapper$Helper_undefinedWrapper = null,
otji_JSWrapper$Helper_stringFinalizationRegistry = null,
otji_JSWrapper$Helper_numberFinalizationRegistry = null,
otji_JSWrapper$Helper_$callClinit = () => {
    otji_JSWrapper$Helper_$callClinit = $rt_eraseClinit(otji_JSWrapper$Helper);
    otji_JSWrapper$Helper__clinit_();
},
otji_JSWrapper$Helper__clinit_ = () => {
    let var$1;
    otji_JSWrapper$Helper_hashCodes = new WeakMap();
    otji_JSWrapper$Helper_wrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new WeakMap();
    otji_JSWrapper$Helper_stringWrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    otji_JSWrapper$Helper_numberWrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    if (otji_JSWrapper$Helper_stringWrappers === null)
        var$1 = null;
    else {
        var$1 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_0;
        var$1 = new FinalizationRegistry(otji_JS_function(!(var$1 instanceof otji_JSWrapper) ? var$1 : var$1.$js, "accept"));
    }
    otji_JSWrapper$Helper_stringFinalizationRegistry = var$1;
    if (otji_JSWrapper$Helper_numberWrappers === null)
        var$1 = null;
    else {
        var$1 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_1;
        var$1 = new FinalizationRegistry(otji_JS_function(!(var$1 instanceof otji_JSWrapper) ? var$1 : var$1.$js, "accept"));
    }
    otji_JSWrapper$Helper_numberFinalizationRegistry = var$1;
},
otjc_JSUndefined = $rt_classWithoutFields(),
otjc_JSWeakRef = $rt_classWithoutFields(),
otjc_JSFinalizationRegistryConsumer = $rt_classWithoutFields(0),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0 = (var$1, var$2) => {
    var$2 = var$2 === null ? null : var$2 instanceof $rt_objcls() ? var$2 : otji_JSWrapper_wrap(var$2);
    var$1;
    otji_JSWrapper$Helper_$callClinit();
    var$1 = otji_JSWrapper$Helper_stringWrappers;
    var$2 = var$2 === null ? null : !(var$2 instanceof otji_JSWrapper) ? var$2 : var$2.$js;
    var$1.delete(var$2);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0 = (var$1, var$2) => {
    var$2 = var$2 === null ? null : var$2 instanceof $rt_objcls() ? var$2 : otji_JSWrapper_wrap(var$2);
    var$1;
    otji_JSWrapper$Helper_$callClinit();
    var$1 = otji_JSWrapper$Helper_numberWrappers;
    var$2 = var$2 === null ? null : !(var$2 instanceof otji_JSWrapper) ? var$2 : var$2.$js;
    var$1.delete(var$2);
},
jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet),
jur_BackReferencedSingleSet_find = ($this, $startSearch, $testString, $matchResult) => {
    let $res, $lastIndex, var$6, var$7, var$8, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$rightBound;
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            var$6 = $this.$groupIndex;
            var$7 = $matchResult.$groupBounds.data;
            var$8 = var$6 * 2 | 0;
            $saveStart = var$7[var$8];
            var$7[var$8] = $startSearch;
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            var$8 = $this.$groupIndex;
            $matchResult.$groupBounds.data[var$8 * 2 | 0] = $saveStart;
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $res, var$6, var$7, var$8, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            var$6 = $this.$groupIndex;
            var$7 = $matchResult.$groupBounds.data;
            var$8 = var$6 * 2 | 0;
            $saveStart = var$7[var$8];
            var$7[var$8] = $startSearch;
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            var$8 = $this.$groupIndex;
            $matchResult.$groupBounds.data[var$8 * 2 | 0] = $saveStart;
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_processBackRefReplacement = $this => {
    return null;
},
cgxgbt_TeaApplication$6 = $rt_classWithoutFields(),
cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = null,
cgxgbt_TeaApplication$6_$callClinit = () => {
    cgxgbt_TeaApplication$6_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$6);
    cgxgbt_TeaApplication$6__clinit_();
},
cgxgbt_TeaApplication$6__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cgxgbt_TeaApplication$AppState_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = var$1;
    var$2[cgxgbt_TeaApplication$AppState_INIT.$ordinal0] = 1;
    var$2[cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS.$ordinal0] = 2;
    var$2[cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS.$ordinal0] = 3;
    var$2[cgxgbt_TeaApplication$AppState_APP_LOOP.$ordinal0] = 4;
};
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$033 = null;
}
let jur_AbstractCharClass$LazyJavaLowerCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 2 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$036 = null;
}
let jur_AbstractCharClass$LazyJavaUpperCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 1 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$031 = null;
}
let jur_AbstractCharClass$LazyJavaWhitespace$1_contains = ($this, $ch) => {
    a: {
        switch ($ch) {
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 28:
            case 29:
            case 30:
            case 31:
                break;
            case 160:
            case 8199:
            case 8239:
                $ch = 0;
                break a;
            default:
                b: {
                    switch (jl_Character_getType($ch)) {
                        case 12:
                        case 13:
                        case 14:
                            break;
                        default:
                            $ch = 0;
                            break b;
                    }
                    $ch = 1;
                }
                break a;
        }
        $ch = 1;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$028 = null;
}
let jur_AbstractCharClass$LazyJavaMirrored$1_contains = ($this, $ch) => {
    return 0;
};
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$043 = null;
}
let jur_AbstractCharClass$LazyJavaDefined$1_contains = ($this, $ch) => {
    return !jl_Character_getType($ch) ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$037 = null;
}
let jur_AbstractCharClass$LazyJavaDigit$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 9 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$047 = null;
}
let jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains = ($this, $ch) => {
    return jl_Character_isIdentifierIgnorable($ch);
};
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$034 = null;
}
let jur_AbstractCharClass$LazyJavaISOControl$1_contains = ($this, $ch) => {
    a: {
        b: {
            if (!($ch >= 0 && $ch <= 31)) {
                if ($ch < 127)
                    break b;
                if ($ch > 159)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$018 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                case 26:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$038 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                case 23:
                case 26:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$042 = null;
}
let jur_AbstractCharClass$LazyJavaLetter$1_contains = ($this, $ch) => {
    a: {
        switch (jl_Character_getType($ch)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                $ch = 0;
                break a;
        }
        $ch = 1;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$045 = null;
}
let jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 9:
                    break;
                case 6:
                case 7:
                case 8:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$032 = null;
}
let jur_AbstractCharClass$LazyJavaSpaceChar$1_contains = ($this, $ch) => {
    a: {
        switch (jl_Character_getType($ch)) {
            case 12:
            case 13:
            case 14:
                break;
            default:
                $ch = 0;
                break a;
        }
        $ch = 1;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$040 = null;
}
let jur_AbstractCharClass$LazyJavaTitleCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 3 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$019 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$053 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category = 0;
}
let jur_UnicodeCategory_contains = ($this, $ch) => {
    return $this.$alt ^ ($this.$category != jl_Character_getType($ch & 65535) ? 0 : 1);
},
jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory),
jur_UnicodeCategoryScope_contains = ($this, $ch) => {
    return $this.$alt ^ (!($this.$category >> jl_Character_getType($ch & 65535) & 1) ? 0 : 1);
};
function ju_AbstractList$1() {
    let a = this; jl_Object.call(a);
    a.$index4 = 0;
    a.$modCount1 = 0;
    a.$size6 = 0;
    a.$removeIndex0 = 0;
    a.$this$02 = null;
}
function cgxgbta_AssetDownloadImpl$2() {
    let a = this; jl_Object.call(a);
    a.$val$listener2 = null;
    a.$val$url0 = null;
    a.$this$00 = null;
}
let cgxgbta_AssetDownloadImpl$2_onSuccess = ($this, $url, $result) => {
    let $script, var$4, $byteArray, var$6, var$7, var$8, var$9, $current, var$11, $document, var$13, var$14, $$je;
    $script = $result.$data2;
    $result = new Int8Array($script);
    var$4 = $result.length;
    $byteArray = $rt_createByteArray(var$4).data;
    var$6 = 0;
    while (var$6 < var$4) {
        $byteArray[var$6] = $result[var$6];
        var$6 = var$6 + 1 | 0;
    }
    $script = new jl_String;
    var$4 = $byteArray.length;
    var$7 = jnci_UTF8Charset_INSTANCE;
    if (var$4 >= 0 && var$4 <= (var$4 - 0 | 0)) {
        var$8 = new jn_ByteBufferImpl;
        var$9 = 0 + var$4 | 0;
        var$8.$mark = (-1);
        var$8.$capacity = var$4;
        var$8.$limit0 = var$4;
        var$8.$order = jn_ByteOrder_BIG_ENDIAN;
        var$8.$start0 = 0;
        var$8.$bkArray = $rt_createByteArray(var$4);
        $current = new cgxgbtdt_Int8ArrayNative;
        $current.$buffer0 = new Int8Array(var$4);
        var$8.$array = $current;
        var$11 = 0;
        while (var$11 < var$4) {
            var$6 = $byteArray[var$11];
            $result = var$8.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($result);
            $result.$buffer0[var$11] = var$6;
            var$11 = var$11 + 1 | 0;
        }
        var$8.$position0 = 0;
        var$8.$limit0 = var$9;
        var$8.$direct = 0;
        var$8.$readOnly0 = 0;
        a: {
            try {
                $result = jnc_CharsetDecoder_decode0(jnc_CharsetDecoder_onUnmappableCharacter(jnc_CharsetDecoder_onMalformedInput(jnci_UTF8Charset_newDecoder(var$7), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), var$8);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jnc_CharacterCodingException) {
                    $result = $$je;
                } else {
                    throw $$e;
                }
            }
            $script = new jl_AssertionError;
            $script.$suppressionEnabled = 1;
            $script.$writableStackTrace = 1;
            $script.$message = $rt_s(124);
            $script.$cause = $result;
            $rt_throw($script);
        }
        var$4 = $result.$position0;
        if (!var$4 && $result.$limit0 == $result.$capacity)
            $byteArray = $result.$array1;
        else {
            $byteArray = $rt_createCharArray($result.$limit0 - var$4 | 0);
            jn_CharBuffer_get($result, $byteArray, 0, $byteArray.data.length);
        }
        $script.$nativeString = $rt_fullArrayToString($byteArray.data);
        $document = window.document;
        $result = $document.createElement("script");
        $result.text = $rt_ustr($script);
        $document.body.appendChild($result);
        if ($this.$this$00.$showLogs) {
            if (jl_System_outCache === null) {
                $result = new otcic_JSStdoutPrintStream;
                $script = null;
                $document = null;
                $result.$out = $script;
                $script = new jl_StringBuilder;
                $script.$buffer = $rt_createCharArray(16);
                $result.$sb = $script;
                $result.$buffer1 = $rt_createCharArray(32);
                $result.$autoFlush = 0;
                $result.$charset = $document;
                jl_System_outCache = $result;
            }
            $result = new jl_StringBuilder;
            $result.$buffer = $rt_createCharArray(16);
            var$6 = $result.$length0;
            $document = $result;
            $current = $rt_s(458);
            $script = $document;
            jl_AbstractStringBuilder_insert($script, var$6, $current);
            jl_AbstractStringBuilder_insert($script, $result.$length0, $url === null ? $rt_s(1) : $url);
            $url = new jl_String;
            $byteArray = $result.$buffer;
            var$13 = $byteArray.data;
            var$14 = $result.$length0;
            var$4 = var$13.length;
            if (var$14 >= 0 && var$14 <= (var$4 - 0 | 0)) {
                $url.$nativeString = $rt_charArrayToString($byteArray.data, 0, var$14);
                $rt_putStdout($rt_ustr($url));
                $rt_putStdout("\n");
            } else {
                $url = new jl_IndexOutOfBoundsException;
                $url.$suppressionEnabled = 1;
                $url.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($url);
                $rt_throw($url);
            }
        }
        return;
    }
    $url = new jl_IndexOutOfBoundsException;
    $url.$suppressionEnabled = 1;
    $url.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($url);
    $rt_throw($url);
},
cgxgbta_AssetDownloadImpl$2_onFailure = ($this, $url) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($this.$this$00.$showLogs) {
        if (jl_System_errCache === null) {
            var$2 = new otcic_JSStderrPrintStream;
            var$3 = null;
            var$4 = null;
            var$2.$out = var$3;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$2.$sb = var$3;
            var$2.$buffer1 = $rt_createCharArray(32);
            var$2.$autoFlush = 0;
            var$2.$charset = var$4;
            jl_System_errCache = var$2;
        }
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$5 = var$2.$length0;
        var$6 = var$2;
        var$4 = $rt_s(459);
        var$3 = var$6;
        jl_AbstractStringBuilder_insert(var$3, var$5, var$4);
        jl_AbstractStringBuilder_insert(var$3, var$2.$length0, $url === null ? $rt_s(1) : $url);
        $url = new jl_String;
        var$7 = var$2.$buffer;
        var$8 = var$7.data;
        var$9 = var$2.$length0;
        var$10 = var$8.length;
        if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
            $url.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
            $rt_putStderr($rt_ustr($url));
            $rt_putStderr("\n");
        } else {
            $url = new jl_IndexOutOfBoundsException;
            $url.$suppressionEnabled = 1;
            $url.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($url);
            $rt_throw($url);
        }
    }
},
cgxgbta_AssetDownloadImpl$2_onProgress = ($this, $total, $loaded) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if ($this.$this$00.$showDownloadProgress) {
        if (jl_System_outCache === null) {
            var$3 = new otcic_JSStdoutPrintStream;
            var$4 = null;
            var$5 = null;
            var$3.$out = var$4;
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            var$3.$sb = var$4;
            var$3.$buffer1 = $rt_createCharArray(32);
            var$3.$autoFlush = 0;
            var$3.$charset = var$5;
            jl_System_outCache = var$3;
        }
        var$3 = $this.$val$url0;
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        var$7 = var$6.$length0;
        var$4 = var$6;
        var$5 = $rt_s(460);
        var$4 = var$4;
        jl_AbstractStringBuilder_insert(var$4, var$7, var$5);
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $total, 10);
        jl_AbstractStringBuilder_insert(var$4, var$6.$length0, $rt_s(461));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $loaded, 10);
        jl_AbstractStringBuilder_insert(var$4, var$6.$length0, $rt_s(462));
        jl_AbstractStringBuilder_insert(var$4, var$6.$length0, var$3 === null ? $rt_s(1) : var$3);
        var$3 = new jl_String;
        var$8 = var$6.$buffer;
        var$9 = var$8.data;
        $loaded = var$6.$length0;
        var$7 = var$9.length;
        if ($loaded >= 0 && $loaded <= (var$7 - 0 | 0)) {
            var$3.$nativeString = $rt_charArrayToString(var$8.data, 0, $loaded);
            $rt_putStdout($rt_ustr(var$3));
            $rt_putStdout("\n");
        } else {
            var$3 = new jl_IndexOutOfBoundsException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$3);
            $rt_throw(var$3);
        }
    }
},
cgxgbta_AssetDownloadImpl$2_onSuccess0 = ($this, var$1, var$2) => {
    cgxgbta_AssetDownloadImpl$2_onSuccess($this, var$1, var$2);
},
cbgu_Collections = $rt_classWithoutFields(),
cbgu_Collections_allocateIterators = 0;
function cbgu_Array$ArrayIterator() {
    let a = this; jl_Object.call(a);
    a.$array4 = null;
    a.$allowRemove = 0;
    a.$index3 = 0;
    a.$valid0 = 0;
}
let cbgu_Array$ArrayIterator_hasNext = $this => {
    let var$1;
    if ($this.$valid0)
        return $this.$index3 >= $this.$array4.$size ? 0 : 1;
    var$1 = new cbgu_GdxRuntimeException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    var$1.$message = $rt_s(463);
    $rt_throw(var$1);
},
cbgu_Array$ArrayIterator_next = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = $this.$index3;
    var$2 = $this.$array4;
    if (var$1 < var$2.$size) {
        if ($this.$valid0) {
            var$3 = var$2.$items.data;
            $this.$index3 = var$1 + 1 | 0;
            return var$3[var$1];
        }
        var$2 = new cbgu_GdxRuntimeException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(463);
        $rt_throw(var$2);
    }
    var$2 = new ju_NoSuchElementException;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, var$1, 10);
    var$5 = new jl_String;
    var$3 = var$4.$buffer;
    var$6 = var$3.data;
    var$1 = var$4.$length0;
    var$7 = var$6.length;
    if (var$1 >= 0 && var$1 <= (var$7 - 0 | 0)) {
        var$5.$nativeString = $rt_charArrayToString(var$3.data, 0, var$1);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$2);
    $rt_throw(var$2);
};
function cbgu_Array$ArrayIterable() {
    let a = this; jl_Object.call(a);
    a.$array6 = null;
    a.$allowRemove0 = 0;
    a.$iterator1 = null;
    a.$iterator2 = null;
}
let cbgu_Array$ArrayIterable_iterator = $this => {
    let var$1, var$2, var$3;
    if (cbgu_Collections_allocateIterators) {
        var$1 = new cbgu_Array$ArrayIterator;
        var$2 = $this.$array6;
        var$3 = $this.$allowRemove0;
        var$1.$valid0 = 1;
        var$1.$array4 = var$2;
        var$1.$allowRemove = var$3;
        return var$1;
    }
    if ($this.$iterator1 === null) {
        var$1 = new cbgu_Array$ArrayIterator;
        var$2 = $this.$array6;
        var$3 = $this.$allowRemove0;
        var$1.$valid0 = 1;
        var$1.$array4 = var$2;
        var$1.$allowRemove = var$3;
        $this.$iterator1 = var$1;
        var$1 = new cbgu_Array$ArrayIterator;
        var$1.$valid0 = 1;
        var$1.$array4 = var$2;
        var$1.$allowRemove = var$3;
        $this.$iterator2 = var$1;
    }
    var$1 = $this.$iterator1;
    if (var$1.$valid0) {
        var$2 = $this.$iterator2;
        var$2.$index3 = 0;
        var$2.$valid0 = 1;
        var$1.$valid0 = 0;
        return var$2;
    }
    var$1.$index3 = 0;
    var$1.$valid0 = 1;
    $this.$iterator2.$valid0 = 0;
    return var$1;
};
function cgxgbta_AssetDownloadImpl$3() {
    let a = this; jl_Thread.call(a);
    a.$val$url = null;
    a.$val$listener = null;
    a.$val$count = 0;
    a.$this$0 = null;
}
let cgxgbta_AssetDownloadImpl$3_run = $this => {
    cgxgbta_AssetDownloadImpl_loadBinaryInternally($this.$this$0, 1, $this.$val$url, $this.$val$listener, $this.$val$count);
},
otcic_JSStdoutPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStdoutPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(1);
    $rt_putStdout($rt_ustr($s));
},
cgxgbtd_EventTargetWrapper = $rt_classWithoutFields(0),
cgxgbtd_FileReaderWrapper = $rt_classWithoutFields();
function cgxgbta_AssetLoadImpl$4() {
    let a = this; jl_Object.call(a);
    a.$val$name = null;
    a.$val$resolve = null;
    a.$this$051 = null;
}
let cgxgbta_AssetLoadImpl$4_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$1 = var$1;
    var$2 = var$2.target.result;
    var$3 = new Int8Array(var$2);
    var$2 = new Int8Array(var$3);
    var$4 = var$2.length;
    var$5 = $rt_createByteArray(var$4);
    var$6 = var$5.data;
    var$7 = 0;
    while (var$7 < var$4) {
        var$6[var$7] = var$2[var$7];
        var$7 = var$7 + 1 | 0;
    }
    var$2 = new cgxgbtf_FileData;
    var$3 = var$1.$val$name;
    if (jl_String_endsWith(var$3, $rt_s(113)))
        var$3 = jl_String_substring(var$3, 0, var$3.$nativeString.length - 1 | 0);
    a: {
        var$2.$path0 = var$3;
        var$2.$bytes = var$5;
        var$2.$type3 = 2;
        var$1 = var$1.$val$resolve;
        var$3 = "accept";
        if (var$2 instanceof $rt_objcls()) {
            var$7 = var$2 instanceof otji_JSWrapper;
            if (var$7) {
                var$2 = !var$7 ? var$2 : var$2.$js;
                break a;
            }
        }
        var$2 = var$2;
    }
    var$1[var$3](var$2);
},
cgxgbtdt_TypedArrays = $rt_classWithoutFields(),
cgxgbtdt_TypedArrays_getTypedArray = ($isUnsigned, $buffer) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    if ($buffer instanceof jn_ByteBuffer) {
        if (!$isUnsigned) {
            $buffer = $buffer;
            if ($rt_isInstance($buffer, cgxgbtdt_HasArrayBufferView)) {
                $buffer = $buffer.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($buffer);
                return $buffer.$buffer0;
            }
            var$3 = new cbgu_GdxRuntimeException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = $rt_s(464);
            $rt_throw(var$3);
        }
        $buffer = $buffer;
        if ($rt_isInstance($buffer, cgxgbtdt_HasArrayBufferView)) {
            $buffer = $buffer.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($buffer);
            return $buffer.$buffer0;
        }
        var$3 = new cbgu_GdxRuntimeException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(464);
        $rt_throw(var$3);
    }
    if ($buffer instanceof jn_ShortBuffer) {
        if (!$isUnsigned) {
            $buffer = $buffer;
            if ($rt_isInstance($buffer, cgxgbtdt_HasArrayBufferView)) {
                $buffer = $buffer.$byteByffer1.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($buffer);
                return $buffer.$buffer0;
            }
            var$3 = new cbgu_GdxRuntimeException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = $rt_s(464);
            $rt_throw(var$3);
        }
        $buffer = $buffer;
        if ($rt_isInstance($buffer, cgxgbtdt_HasArrayBufferView)) {
            $buffer = $buffer.$byteByffer1.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($buffer);
            return $buffer.$buffer0;
        }
        var$3 = new cbgu_GdxRuntimeException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(464);
        $rt_throw(var$3);
    }
    if ($buffer instanceof jn_IntBuffer) {
        $buffer = $buffer;
        if ($rt_isInstance($buffer, cgxgbtdt_HasArrayBufferView))
            return $buffer.$getArrayBufferView();
        var$3 = new cbgu_GdxRuntimeException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(464);
        $rt_throw(var$3);
    }
    if ($buffer instanceof jn_FloatBuffer) {
        $buffer = $buffer;
        if ($rt_isInstance($buffer, cgxgbtdt_HasArrayBufferView)) {
            $buffer = $buffer.$byteByffer.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($buffer);
            return $buffer.$buffer0;
        }
        var$3 = new cbgu_GdxRuntimeException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(464);
        $rt_throw(var$3);
    }
    var$3 = new cbgu_GdxRuntimeException;
    $buffer = $buffer.constructor;
    if ($buffer === null)
        var$4 = null;
    else {
        var$4 = $buffer.classObject;
        if (var$4 === null) {
            var$4 = new jl_Class;
            var$4.$platformClass = $buffer;
            $buffer.classObject = var$4;
        }
    }
    $buffer = new jl_StringBuilder;
    $buffer.$buffer = $rt_createCharArray(16);
    $isUnsigned = $buffer.$length0;
    var$5 = $buffer;
    var$6 = $rt_s(465);
    var$5 = var$5;
    jl_AbstractStringBuilder_insert(var$5, $isUnsigned, var$6);
    $isUnsigned = $buffer.$length0;
    if (var$4 === null)
        var$6 = $rt_s(1);
    else {
        var$6 = var$4;
        var$4 = (!(var$6.$platformClass.$meta.flags & 2) ? 0 : 1) ? $rt_s(66) : !(var$6.$platformClass.$meta.primitive ? 1 : 0) ? $rt_s(67) : $rt_s(40);
        if (var$6.$name === null)
            var$6.$name = $rt_str(var$6.$platformClass.$meta.name);
        var$7 = var$6.$name;
        var$8 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_0(var$8, 16);
        var$9 = var$8.$length0;
        var$6 = var$8;
        jl_StringBuilder_insert1(var$6, var$9, var$4);
        jl_StringBuilder_insert1(var$6, var$8.$length0, var$7);
        var$6 = jl_String__init_(var$8.$buffer, 0, var$8.$length0);
    }
    jl_AbstractStringBuilder_insert(var$5, $isUnsigned, var$6);
    var$6 = new jl_String;
    var$10 = $buffer.$buffer;
    var$11 = var$10.data;
    var$9 = $buffer.$length0;
    var$12 = var$11.length;
    if (var$9 >= 0 && var$9 <= (var$12 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$10.data, 0, var$9);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    $buffer = new jl_IndexOutOfBoundsException;
    $buffer.$suppressionEnabled = 1;
    $buffer.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($buffer);
    $rt_throw($buffer);
},
jur_IntArrHash = $rt_classWithoutFields();
function cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0() {
    let a = this; jl_Object.call(a);
    a.$_010 = null;
    a.$_12 = null;
    a.$_21 = null;
    a.$_30 = null;
    a.$_4 = 0;
    a.$_5 = 0;
}
let cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();var$1 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$1 = var$1;
        var$3 = var$1.$_010;
        var$4 = var$1.$_12;
        var$5 = var$1.$_21;
        var$6 = var$1.$_30;
        var$7 = var$1.$_4;
        var$8 = var$1.$_5;
        $ptr = 1;
    case 1:
        cgxgbta_AssetDownloadImpl_lambda$loadBinaryInternally$0(var$3, var$4, var$5, var$6, var$7, var$8, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, $ptr);
};
function cgxgbtf_FileData() {
    let a = this; jl_Object.call(a);
    a.$path0 = null;
    a.$bytes = null;
    a.$type3 = 0;
}
let cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException),
cbgu_GdxRuntimeException__init_2 = ($this, $message) => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
},
cbgu_GdxRuntimeException__init_ = var_0 => {
    let var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_2(var_1, var_0);
    return var_1;
},
cbgu_GdxRuntimeException__init_1 = ($this, $message, $t) => {
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $t;
},
cbgu_GdxRuntimeException__init_0 = (var_0, var_1) => {
    let var_2 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_1(var_2, var_0, var_1);
    return var_2;
};
function cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0() {
    jl_Object.call(this);
    this.$_012 = null;
}
let cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1.$_012;
    var$3 = var$2.loaded;
    var$4 = var$2.total;
    if (var$1 !== null)
        var$1.$onProgress(var$4, var$3);
},
otjde_EventTarget = $rt_classWithoutFields(0),
otja_XMLHttpRequest = $rt_classWithoutFields();
function otjde_Registration() {
    let a = this; jl_Object.call(a);
    a.$target0 = null;
    a.$type6 = null;
    a.$listener0 = null;
    a.$useCapture = null;
}
let ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException);
function cgxgbta_AssetLoadImpl$5() {
    let a = this; jl_Object.call(a);
    a.$val$config = null;
    a.$val$assetFileUrl = null;
    a.$this$05 = null;
}
let cgxgbta_AssetLoadImpl$5_onSuccess = ($this, $url, $result) => {
    let $shouldOverwriteLocalData, var$4, var$5, $assets, var$7, var$8, $fileTypeStr, var$10, var$11, $byteArray, $line, $assetTypeStr, $assetUrl, $fileType, $assetType, $$je;
    $result = $result.$data2;
    $url = new Int8Array($result);
    $shouldOverwriteLocalData = $url.length;
    var$4 = $rt_createByteArray($shouldOverwriteLocalData).data;
    var$5 = 0;
    while (var$5 < $shouldOverwriteLocalData) {
        var$4[var$5] = $url[var$5];
        var$5 = var$5 + 1 | 0;
    }
    $assets = new jl_String;
    var$7 = var$4.length;
    $url = jnci_UTF8Charset_INSTANCE;
    if (var$7 >= 0 && var$7 <= (var$7 - 0 | 0)) {
        $result = new jn_ByteBufferImpl;
        var$8 = 0 + var$7 | 0;
        $result.$mark = (-1);
        $result.$capacity = var$7;
        $result.$limit0 = var$7;
        $result.$order = jn_ByteOrder_BIG_ENDIAN;
        $result.$start0 = 0;
        $result.$bkArray = $rt_createByteArray(var$7);
        $fileTypeStr = new cgxgbtdt_Int8ArrayNative;
        $fileTypeStr.$buffer0 = new Int8Array(var$7);
        $result.$array = $fileTypeStr;
        var$10 = 0;
        while (var$10 < var$7) {
            var$11 = var$4[var$10];
            $fileTypeStr = $result.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($fileTypeStr);
            $fileTypeStr.$buffer0[var$10] = var$11;
            var$10 = var$10 + 1 | 0;
        }
        $result.$position0 = 0;
        $result.$limit0 = var$8;
        $result.$direct = 0;
        $result.$readOnly0 = 0;
        a: {
            try {
                $url = jnc_CharsetDecoder_decode0(jnc_CharsetDecoder_onUnmappableCharacter(jnc_CharsetDecoder_onMalformedInput(jnci_UTF8Charset_newDecoder($url), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $result);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jnc_CharacterCodingException) {
                    $result = $$je;
                } else {
                    throw $$e;
                }
            }
            $assets = new jl_AssertionError;
            $assets.$suppressionEnabled = 1;
            $assets.$writableStackTrace = 1;
            $assets.$message = $rt_s(124);
            $assets.$cause = $result;
            $rt_throw($assets);
        }
        $shouldOverwriteLocalData = $url.$position0;
        if (!$shouldOverwriteLocalData && $url.$limit0 == $url.$capacity)
            $byteArray = $url.$array1;
        else {
            $byteArray = $rt_createCharArray($url.$limit0 - $shouldOverwriteLocalData | 0);
            jn_CharBuffer_get($url, $byteArray, 0, $byteArray.data.length);
        }
        $assets.$nativeString = $rt_fullArrayToString($byteArray.data);
        $byteArray = (jur_Pattern_split(jur_Pattern_compile($rt_s(117), 0), $assets, 0)).data;
        $url = $this.$this$05;
        var$5 = $byteArray.length;
        $url.$assetTotal = var$5;
        var$7 = 0;
        while (var$7 < var$5) {
            $line = $byteArray[var$7];
            $result = jur_Pattern_compile($rt_s(115), 0);
            $url = $line;
            var$4 = (jur_Pattern_split($result, $url, 0)).data;
            $shouldOverwriteLocalData = var$4.length;
            if ($shouldOverwriteLocalData != 5) {
                $result = new cbgu_GdxRuntimeException;
                $assets = new jl_StringBuilder;
                $assets.$buffer = $rt_createCharArray(16);
                var$5 = $assets.$length0;
                $assetTypeStr = $assets;
                $assetUrl = $rt_s(466);
                $fileTypeStr = $assetTypeStr;
                jl_AbstractStringBuilder_insert($fileTypeStr, var$5, $assetUrl);
                jl_AbstractStringBuilder_insert0($assets, $assets.$length0, $shouldOverwriteLocalData, 10);
                var$7 = $assets.$length0;
                jl_AbstractStringBuilder_insertSpace($assetTypeStr, var$7, var$7 + 1 | 0);
                $assetTypeStr.$buffer.data[var$7] = 32;
                jl_AbstractStringBuilder_insert($fileTypeStr, $assets.$length0, $line === null ? $rt_s(1) : $url);
                $url = new jl_String;
                $byteArray = $assets.$buffer;
                var$4 = $byteArray.data;
                var$7 = $assets.$length0;
                $shouldOverwriteLocalData = var$4.length;
                if (var$7 >= 0 && var$7 <= ($shouldOverwriteLocalData - 0 | 0)) {
                    $url.$nativeString = $rt_charArrayToString($byteArray.data, 0, var$7);
                    $result.$suppressionEnabled = 1;
                    $result.$writableStackTrace = 1;
                    $result.$message = $url;
                    $rt_throw($result);
                }
                $url = new jl_IndexOutOfBoundsException;
                $url.$suppressionEnabled = 1;
                $url.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($url);
                $rt_throw($url);
            }
            $fileTypeStr = var$4[0];
            $assetTypeStr = var$4[1];
            $assetUrl = jl_String_trim(var$4[2]);
            $result = var$4[4];
            if ($result === $rt_s(467))
                $shouldOverwriteLocalData = 1;
            else if (!($rt_s(467) instanceof jl_String))
                $shouldOverwriteLocalData = 0;
            else {
                $url = $rt_s(467);
                $shouldOverwriteLocalData = $result.$nativeString !== $url.$nativeString ? 0 : 1;
            }
            $result = jl_String_trim($assetUrl);
            if (!($result.$nativeString.length ? 0 : 1)) {
                $fileType = cbg_Files$FileType_Internal;
                if ($fileTypeStr === $rt_s(468))
                    var$10 = 1;
                else if (!($rt_s(468) instanceof jl_String))
                    var$10 = 0;
                else {
                    $url = $rt_s(468);
                    var$10 = $fileTypeStr.$nativeString !== $url.$nativeString ? 0 : 1;
                }
                if (var$10)
                    $fileType = cbg_Files$FileType_Classpath;
                else {
                    if ($fileTypeStr === $rt_s(469))
                        var$10 = 1;
                    else if (!($rt_s(469) instanceof jl_String))
                        var$10 = 0;
                    else {
                        $url = $rt_s(469);
                        var$10 = $fileTypeStr.$nativeString !== $url.$nativeString ? 0 : 1;
                    }
                    if (var$10)
                        $fileType = cbg_Files$FileType_Local;
                }
                $assetType = cgxgbta_AssetType_Binary;
                if ($assetTypeStr === $rt_s(258))
                    var$10 = 1;
                else if (!($rt_s(258) instanceof jl_String))
                    var$10 = 0;
                else {
                    $url = $rt_s(258);
                    var$10 = $assetTypeStr.$nativeString !== $url.$nativeString ? 0 : 1;
                }
                if (var$10)
                    $assetType = cgxgbta_AssetType_Directory;
                if (!(!$this.$val$config.$preloadAssets && $fileType !== cbg_Files$FileType_Classpath))
                    cgxgbta_AssetLoadImpl_loadAsset($this.$this$05, 1, $result, $assetType, $fileType, null, $shouldOverwriteLocalData);
            }
            var$7 = var$7 + 1 | 0;
        }
        return;
    }
    $url = new jl_IndexOutOfBoundsException;
    $url.$suppressionEnabled = 1;
    $url.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($url);
    $rt_throw($url);
},
cgxgbta_AssetLoadImpl$5_onSuccess0 = ($this, var$1, var$2) => {
    cgxgbta_AssetLoadImpl$5_onSuccess($this, var$1, var$2);
};
function cgxgbta_AssetType() {
    jl_Enum.call(this);
    this.$code = null;
}
let cgxgbta_AssetType_Binary = null,
cgxgbta_AssetType_Directory = null,
cgxgbta_AssetType_$VALUES = null,
cgxgbta_AssetType__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cgxgbta_AssetType;
    var$1.$name0 = $rt_s(470);
    var$1.$ordinal0 = 0;
    var$1.$code = $rt_s(471);
    cgxgbta_AssetType_Binary = var$1;
    var$2 = new cgxgbta_AssetType;
    var$2.$name0 = $rt_s(472);
    var$2.$ordinal0 = 1;
    var$2.$code = $rt_s(258);
    cgxgbta_AssetType_Directory = var$2;
    cgxgbta_AssetType_$VALUES = $rt_wrapArray(cgxgbta_AssetType, [var$1, var$2]);
},
cbggg_Batch = $rt_classWithoutFields(0);
function cbggg_SpriteBatch() {
    let a = this; jl_Object.call(a);
    a.$currentDataType = null;
    a.$mesh0 = null;
    a.$vertices1 = null;
    a.$idx = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$drawing = 0;
    a.$transformMatrix = null;
    a.$projectionMatrix = null;
    a.$combinedMatrix = null;
    a.$blendingDisabled = 0;
    a.$blendSrcFunc = 0;
    a.$blendDstFunc = 0;
    a.$blendSrcFuncAlpha = 0;
    a.$blendDstFuncAlpha = 0;
    a.$shader = null;
    a.$customShader = null;
    a.$ownsShader0 = 0;
    a.$color1 = null;
    a.$colorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
let cbggg_SpriteBatch_defaultVertexDataType = null,
cbggg_SpriteBatch_overrideVertexType = null,
cbggg_SpriteBatch_$callClinit = () => {
    cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
    cbggg_SpriteBatch__clinit_();
},
cbggg_SpriteBatch__init_ = ($this, $size, $defaultShader) => {
    let $vertexDataType, $j, var$5, $indices, var$7, $i, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
    cbggg_SpriteBatch_$callClinit();
    $this.$idx = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$drawing = 0;
    $this.$transformMatrix = cbgm_Matrix4__init_();
    $this.$projectionMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix = cbgm_Matrix4__init_();
    $this.$blendingDisabled = 0;
    $this.$blendSrcFunc = 770;
    $this.$blendDstFunc = 771;
    $this.$blendSrcFuncAlpha = 770;
    $this.$blendDstFuncAlpha = 771;
    $this.$customShader = null;
    $vertexDataType = new cbgg_Color;
    $vertexDataType.$r = 1.0;
    $vertexDataType.$g = 1.0;
    $vertexDataType.$b = 1.0;
    $vertexDataType.$a = 1.0;
    cbgg_Color_clamp($vertexDataType);
    $this.$color1 = $vertexDataType;
    $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191) {
        $defaultShader = new jl_IllegalArgumentException;
        $vertexDataType = new jl_StringBuilder;
        $vertexDataType.$buffer = $rt_createCharArray(16);
        $j = $vertexDataType.$length0;
        jl_AbstractStringBuilder_insert($vertexDataType, $j, $rt_s(473));
        jl_AbstractStringBuilder_insert0($vertexDataType, $vertexDataType.$length0, $size, 10);
        var$5 = new jl_String;
        $indices = $vertexDataType.$buffer;
        var$7 = $indices.data;
        $j = $vertexDataType.$length0;
        $i = var$7.length;
        if ($j >= 0 && $j <= ($i - 0 | 0)) {
            var$5.$nativeString = $rt_charArrayToString($indices.data, 0, $j);
            $defaultShader.$suppressionEnabled = 1;
            $defaultShader.$writableStackTrace = 1;
            $defaultShader.$message = var$5;
            $rt_throw($defaultShader);
        }
        $defaultShader = new jl_IndexOutOfBoundsException;
        $defaultShader.$suppressionEnabled = 1;
        $defaultShader.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace($defaultShader);
        $rt_throw($defaultShader);
    }
    $vertexDataType = cbg_Gdx_gl30 === null ? cbggg_SpriteBatch_defaultVertexDataType : cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    var$5 = cbggg_SpriteBatch_overrideVertexType;
    if (var$5 === null)
        var$5 = $vertexDataType;
    $this.$currentDataType = var$5;
    var$9 = new cbgg_Mesh;
    var$10 = $size * 4 | 0;
    var$11 = $size * 6 | 0;
    $indices = $rt_createArray(cbgg_VertexAttribute, 3);
    var$7 = $indices.data;
    var$12 = new cbgg_VertexAttribute;
    var$12.$usage = 1;
    var$12.$numComponents = 2;
    var$12.$type2 = 5126;
    var$12.$normalized = 0;
    var$12.$alias = $rt_s(474);
    var$12.$unit = 0;
    var$12.$usageIndex = jl_Integer_numberOfTrailingZeros(1);
    var$7[0] = var$12;
    $vertexDataType = new cbgg_VertexAttribute;
    $vertexDataType.$usage = 4;
    $vertexDataType.$numComponents = 4;
    $vertexDataType.$type2 = 5121;
    $vertexDataType.$normalized = 1;
    $vertexDataType.$alias = $rt_s(475);
    $vertexDataType.$unit = 0;
    $vertexDataType.$usageIndex = jl_Integer_numberOfTrailingZeros(4);
    var$7[1] = $vertexDataType;
    $vertexDataType = new cbgg_VertexAttribute;
    $vertexDataType.$usage = 16;
    $vertexDataType.$numComponents = 2;
    $vertexDataType.$type2 = 5126;
    $vertexDataType.$normalized = 0;
    $vertexDataType.$alias = $rt_s(476);
    $vertexDataType.$unit = 0;
    $vertexDataType.$usageIndex = jl_Integer_numberOfTrailingZeros(16);
    var$7[2] = $vertexDataType;
    cbgg_Mesh__init_(var$9, var$5, 0, var$10, var$11, cbgg_VertexAttributes__init_($indices));
    $this.$mesh0 = var$9;
    $vertexDataType = $this.$projectionMatrix;
    var$13 = cbg_Gdx_graphics.$canvas.width;
    var$14 = cbg_Gdx_graphics.$canvas.height;
    cbgm_Matrix4_setToOrtho($vertexDataType, 0.0, 0.0 + var$13, 0.0, 0.0 + var$14, 0.0, 1.0);
    $this.$vertices1 = $rt_createFloatArray($size * 20 | 0);
    $indices = $rt_createShortArray(var$11);
    var$7 = $indices.data;
    $j = 0;
    $i = 0;
    while ($i < var$11) {
        var$7[$i] = $j;
        var$7[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
        $size = $i + 2 | 0;
        var$15 = ($j + 2 | 0) << 16 >> 16;
        var$7[$size] = var$15;
        var$7[$i + 3 | 0] = var$15;
        var$7[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
        var$7[$i + 5 | 0] = $j;
        $i = $i + 6 | 0;
        $j = ($j + 4 | 0) << 16 >> 16;
    }
    $this.$mesh0.$indices.$setIndices($indices, 0, var$7.length);
    if ($defaultShader !== null)
        $this.$shader = $defaultShader;
    else {
        var$9 = cbggg_ShaderProgram__init_($rt_s(477), $rt_s(478));
        if (!var$9.$isCompiled) {
            $defaultShader = new jl_IllegalArgumentException;
            $vertexDataType = new jl_StringBuilder;
            $vertexDataType.$buffer = $rt_createCharArray(16);
            $size = $vertexDataType.$length0;
            var$12 = $vertexDataType;
            jl_AbstractStringBuilder_insert(var$12, $size, $rt_s(479));
            if (!var$9.$isCompiled)
                var$5 = var$9.$log0;
            else {
                var$5 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$9.$program);
                var$9.$log0 = var$5;
            }
            jl_AbstractStringBuilder_insert(var$12, $vertexDataType.$length0, var$5);
            var$5 = new jl_String;
            $indices = $vertexDataType.$buffer;
            var$7 = $indices.data;
            $j = $vertexDataType.$length0;
            $i = var$7.length;
            if ($j >= 0 && $j <= ($i - 0 | 0)) {
                var$5.$nativeString = $rt_charArrayToString($indices.data, 0, $j);
                $defaultShader.$suppressionEnabled = 1;
                $defaultShader.$writableStackTrace = 1;
                $defaultShader.$message = var$5;
                $rt_throw($defaultShader);
            }
            $defaultShader = new jl_IndexOutOfBoundsException;
            jl_Throwable__init_($defaultShader);
            $rt_throw($defaultShader);
        }
        $this.$shader = var$9;
        $this.$ownsShader0 = 1;
    }
    if (var$5 !== cbgg_Mesh$VertexDataType_VertexArray) {
        $this.$mesh0.$indices.$bind();
        $this.$mesh0.$indices.$unbind();
    }
},
cbggg_SpriteBatch__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_SpriteBatch_begin = $this => {
    let var$1, var$2;
    if ($this.$drawing) {
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(480);
        $rt_throw(var$1);
    }
    $this.$renderCalls = 0;
    cbg_Gdx_gl.$glDepthMask(0);
    var$2 = $this.$customShader;
    if (var$2 !== null)
        var$2.$bind();
    else {
        var$2 = $this.$shader;
        var$1 = cbg_Gdx_gl20;
        if (var$2.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$2, var$2.$vertexShaderSource, var$2.$fragmentShaderSource);
            var$2.$invalidated = 0;
        }
        var$1.$glUseProgram(var$2.$program);
    }
    cbggg_SpriteBatch_setupMatrices($this);
    $this.$drawing = 1;
},
cbggg_SpriteBatch_end = $this => {
    let var$1, $gl;
    if (!$this.$drawing) {
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(481);
        $rt_throw(var$1);
    }
    if ($this.$idx > 0)
        cbggg_SpriteBatch_flush($this);
    $this.$lastTexture = null;
    $this.$drawing = 0;
    $gl = cbg_Gdx_gl;
    $gl.$glDepthMask(1);
    if ($this.$blendingDisabled ? 0 : 1)
        $gl.$glDisable(3042);
},
cbggg_SpriteBatch_draw = ($this, $texture, $spriteVertices, $offset, $count) => {
    let $verticesLength, $copyCount;
    if (!$this.$drawing) {
        $texture = new jl_IllegalStateException;
        $texture.$suppressionEnabled = 1;
        $texture.$writableStackTrace = 1;
        $texture.$message = $rt_s(482);
        $rt_throw($texture);
    }
    $verticesLength = $this.$vertices1.data.length;
    if ($texture !== $this.$lastTexture) {
        cbggg_SpriteBatch_flush($this);
        $this.$lastTexture = $texture;
        $texture = $texture.$data1;
        $this.$invTexWidth = 1.0 / $texture.$width1;
        $this.$invTexHeight = 1.0 / $texture.$height1;
        $copyCount = $verticesLength;
    } else {
        $copyCount = $verticesLength - $this.$idx | 0;
        if (!$copyCount) {
            cbggg_SpriteBatch_flush($this);
            $copyCount = $verticesLength;
        }
    }
    if ($copyCount >= $count)
        $copyCount = $count;
    jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices1, $this.$idx, $copyCount);
    $this.$idx = $this.$idx + $copyCount | 0;
    $count = $count - $copyCount | 0;
    while ($count > 0) {
        $offset = $offset + $copyCount | 0;
        cbggg_SpriteBatch_flush($this);
        $copyCount = $verticesLength >= $count ? $count : $verticesLength;
        jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices1, 0, $copyCount);
        $this.$idx = $this.$idx + $copyCount | 0;
        $count = $count - $copyCount | 0;
    }
},
cbggg_SpriteBatch_flush = $this => {
    let $count, $spritesInBatch, $mesh, var$4, var$5, $indicesBuffer;
    $count = $this.$idx;
    if (!$count)
        return;
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $count / 20 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    $mesh = $this.$lastTexture;
    cbg_Gdx_gl.$glBindTexture($mesh.$glTarget, $mesh.$glHandle);
    $mesh = $this.$mesh0;
    var$4 = $this.$vertices1;
    var$5 = $this.$idx;
    $mesh.$vertices0.$setVertices(var$4, 0, var$5);
    if ($this.$currentDataType === cbgg_Mesh$VertexDataType_VertexArray) {
        $indicesBuffer = $mesh.$indices.$getBuffer(1);
        jn_Buffer_position($indicesBuffer, 0);
        jn_Buffer_limit($indicesBuffer, $count);
    }
    if ($this.$blendingDisabled)
        cbg_Gdx_gl.$glDisable(3042);
    else {
        cbg_Gdx_gl.$glEnable(3042);
        $spritesInBatch = $this.$blendSrcFunc;
        if ($spritesInBatch != (-1))
            cbg_Gdx_gl.$glBlendFuncSeparate($spritesInBatch, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
    }
    $indicesBuffer = $this.$customShader;
    if ($indicesBuffer === null)
        $indicesBuffer = $this.$shader;
    cbgg_Mesh_render($mesh, $indicesBuffer, 4, 0, $count, $mesh.$autoBind);
    $this.$idx = 0;
},
cbggg_SpriteBatch_setupMatrices = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbgm_Matrix4_mul(cbgm_Matrix4_set($this.$combinedMatrix, $this.$projectionMatrix.$val), $this.$transformMatrix);
    var$1 = $this.$customShader;
    if (var$1 !== null) {
        var$1.$setUniformMatrix($rt_s(483), $this.$combinedMatrix);
        $this.$customShader.$setUniformi($rt_s(484), 0);
    } else {
        var$1 = $this.$shader;
        var$2 = $this.$combinedMatrix;
        cbggg_ShaderProgram_$callClinit();
        var$3 = cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(483), cbggg_ShaderProgram_pedantic);
        var$4 = cbg_Gdx_gl20;
        if (var$1.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
            var$1.$invalidated = 0;
        }
        var$5 = var$2.$val;
        var$1 = var$4;
        var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(var$1.$uniforms, var$1.$currProgram), var$3);
        var$1 = var$1.$gl;
        var$4 = "uniformMatrix4fv";
        var$2 = !!0;
        if (var$5 === null)
            var$7 = null;
        else {
            var$5 = var$5.data;
            var$8 = var$5.length;
            var$7 = new Array(var$8);
            var$9 = 0;
            while (var$9 < var$8) {
                var$7[var$9] = var$5[var$9];
                var$9 = var$9 + 1 | 0;
            }
        }
        var$1[var$4](var$6, var$2, var$7);
        var$1 = $this.$shader;
        var$2 = cbg_Gdx_gl20;
        if (var$1.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
            var$1.$invalidated = 0;
        }
        var$2.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(484), cbggg_ShaderProgram_pedantic), 0);
    }
},
cbggg_SpriteBatch__clinit_ = () => {
    cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObject;
    cbggg_SpriteBatch_overrideVertexType = null;
},
cbg_Screen = $rt_classWithoutFields(0),
cbg_ScreenAdapter = $rt_classWithoutFields(),
cbg_ScreenAdapter_hide = $this => {
    return;
},
cbg_ScreenAdapter_pause = $this => {
    return;
},
cbg_ScreenAdapter_resume = $this => {
    return;
};
function cgtf_RandomScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random11 = null;
    a.$batch28 = null;
    a.$renderer1 = null;
    a.$amounts29 = null;
    a.$iterations3 = Long_ZERO;
    a.$font30 = null;
    a.$viewport19 = null;
    a.$mainGame0 = null;
}
let cgtf_RandomScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font30 = $this.$mainGame0.$font0;
    var$1 = new cgt_RandomRandom;
    var$2 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$3 = new cgt_Random;
    var$3.$haveNextNextGaussian = 0;
    cgt_Random_setSeed(var$3, Long_fromInt(1234567890));
    var$1.$base = var$3;
    cgt_Random_setSeed(var$3, var$2);
    $this.$random11 = var$1;
    $this.$batch28 = $this.$mainGame0.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$3 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$3);
    var$3.$zoom = 1.0;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3.$tmp0 = var$4;
    var$3.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$3;
    $this.$viewport19 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$5 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$5.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$5);
        var$1.$ownsShader = 1;
        $this.$renderer1 = var$1;
        var$6 = $this.$amounts29.data;
        var$7 = 0;
        var$8 = var$6.length;
        if (var$7 > var$8) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$7 < var$8) {
            var$9 = var$7 + 1 | 0;
            var$6[var$7] = Long_ZERO;
            var$7 = var$9;
        }
        $this.$iterations3 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$7 = var$3.$length0;
    var$10 = var$3;
    jl_AbstractStringBuilder_insert(var$10, var$7, $rt_s(479));
    if (!var$5.$isCompiled)
        var$4 = var$5.$log0;
    else {
        var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$5.$program);
        var$5.$log0 = var$4;
    }
    jl_AbstractStringBuilder_insert(var$10, var$3.$length0, var$4);
    var$4 = new jl_String;
    var$6 = var$3.$buffer;
    var$11 = var$6.data;
    var$8 = var$3.$length0;
    var$9 = var$11.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$4;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtf_RandomScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame0;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame0;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport19.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts29.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations3 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts29.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations3 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts29.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations3 = Long_ZERO;
    }
    $this.$iterations3 = Long_add($this.$iterations3, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgt_Random_nextInternal($this.$random11.$base, 24) * 5.9604644775390625E-8 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts29.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer1;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer1;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer1;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts29.data[$x]) / Long_toNumber($this.$iterations3), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer1;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer1;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer1);
    var$3 = $this.$batch28;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch28);
    var$3 = $this.$font30;
    var$6 = $this.$batch28;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(485);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(486).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(486), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch28);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtf_RandomScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport19;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport19, 1);
};
function cgtf_ChipScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random13 = null;
    a.$batch5 = null;
    a.$renderer31 = null;
    a.$amounts33 = null;
    a.$iterations7 = Long_ZERO;
    a.$font15 = null;
    a.$viewport18 = null;
    a.$mainGame = null;
}
let cgtf_ChipScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font15 = $this.$mainGame.$font0;
    var$1 = new cgtr_Chip32Random;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA1 = var$2;
    var$1.$stateB1 = var$3;
    var$1.$stateC1 = var$4;
    var$1.$stateD1 = var$5;
    $this.$random13 = var$1;
    $this.$batch5 = $this.$mainGame.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport18 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer31 = var$1;
        var$9 = $this.$amounts33.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations7 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtf_ChipScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport18.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts33.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations7 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts33.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations7 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts33.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations7 = Long_ZERO;
    }
    $this.$iterations7 = Long_add($this.$iterations7, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgtr_Chip32Random_nextFloat($this.$random13) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts33.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer31;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer31;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer31;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts33.data[$x]) / Long_toNumber($this.$iterations7), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer31;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer31;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer31);
    var$3 = $this.$batch5;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch5);
    var$3 = $this.$font15;
    var$6 = $this.$batch5;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(487);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(486).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(486), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch5);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtf_ChipScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport18;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport18, 1);
};
function cgtf_ChopScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random27 = null;
    a.$batch22 = null;
    a.$renderer20 = null;
    a.$amounts0 = null;
    a.$iterations = Long_ZERO;
    a.$font14 = null;
    a.$viewport = null;
    a.$mainGame15 = null;
}
let cgtf_ChopScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font14 = $this.$mainGame15.$font0;
    var$1 = new cgtr_ChopRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA2 = var$2;
    var$1.$stateB2 = var$3;
    var$1.$stateC3 = var$4;
    var$1.$stateD3 = var$5;
    $this.$random27 = var$1;
    $this.$batch22 = $this.$mainGame15.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer20 = var$1;
        var$9 = $this.$amounts0.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtf_ChopScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame15;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame15;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts0.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts0.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts0.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations = Long_ZERO;
    }
    $this.$iterations = Long_add($this.$iterations, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = (cgtr_ChopRandom_nextInt($this.$random27) >>> 8 | 0) * 5.9604644775390625E-8 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts0.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer20;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer20;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer20;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts0.data[$x]) / Long_toNumber($this.$iterations), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer20;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer20;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer20);
    var$3 = $this.$batch22;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch22);
    var$3 = $this.$font14;
    var$6 = $this.$batch22;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(488);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(486).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(486), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch22);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtf_ChopScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport, 1);
};
function cgtf_Xoshiro128PPScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random33 = null;
    a.$batch31 = null;
    a.$renderer2 = null;
    a.$amounts9 = null;
    a.$iterations2 = Long_ZERO;
    a.$font12 = null;
    a.$viewport24 = null;
    a.$mainGame4 = null;
}
let cgtf_Xoshiro128PPScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font12 = $this.$mainGame4.$font0;
    var$1 = new cgtr_Xoshiro128PlusPlusRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA3 = var$2;
    var$1.$stateB3 = var$3;
    var$1.$stateC2 = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD2 = var$5;
    $this.$random33 = var$1;
    $this.$batch31 = $this.$mainGame4.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport24 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer2 = var$1;
        var$9 = $this.$amounts9.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations2 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtf_Xoshiro128PPScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame4;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame4;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport24.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts9.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations2 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts9.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations2 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts9.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations2 = Long_ZERO;
    }
    $this.$iterations2 = Long_add($this.$iterations2, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = (cgtr_Xoshiro128PlusPlusRandom_nextInt($this.$random33) >>> 8 | 0) * 5.9604644775390625E-8 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts9.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer2;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer2;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer2;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts9.data[$x]) / Long_toNumber($this.$iterations2), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer2;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer2;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer2);
    var$3 = $this.$batch31;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch31);
    var$3 = $this.$font12;
    var$6 = $this.$batch31;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(489);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(486).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(486), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch31);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtf_Xoshiro128PPScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport24;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport24, 1);
};
function cgtf_RarxScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random15 = null;
    a.$batch24 = null;
    a.$renderer5 = null;
    a.$amounts23 = null;
    a.$iterations21 = Long_ZERO;
    a.$font10 = null;
    a.$viewport12 = null;
    a.$mainGame7 = null;
}
let cgtf_RarxScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$font10 = $this.$mainGame7.$font0;
    var$1 = new cgtr_Xoshiro160RoadroxoRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$6 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA0 = var$2;
    var$1.$stateB0 = var$3;
    var$1.$stateC = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD = var$5;
    var$1.$stateE0 = var$6;
    $this.$random15 = var$1;
    $this.$batch24 = $this.$mainGame7.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$7 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$7);
    var$7.$zoom = 1.0;
    var$8 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmp0 = var$8;
    var$7.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$7;
    $this.$viewport12 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$9 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$9.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$9);
        var$1.$ownsShader = 1;
        $this.$renderer5 = var$1;
        var$10 = $this.$amounts23.data;
        var$2 = 0;
        var$3 = var$10.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$10[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations21 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$2 = var$7.$length0;
    var$11 = var$7;
    jl_AbstractStringBuilder_insert(var$11, var$2, $rt_s(479));
    if (!var$9.$isCompiled)
        var$8 = var$9.$log0;
    else {
        var$8 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$9.$program);
        var$9.$log0 = var$8;
    }
    jl_AbstractStringBuilder_insert(var$11, var$7.$length0, var$8);
    var$8 = new jl_String;
    var$10 = var$7.$buffer;
    var$12 = var$10.data;
    var$3 = var$7.$length0;
    var$4 = var$12.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$10.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$8;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtf_RarxScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame7;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame7;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport12.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts23.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations21 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts23.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations21 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts23.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations21 = Long_ZERO;
    }
    $this.$iterations21 = Long_add($this.$iterations21, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgtr_Xoshiro160RoadroxoRandom_nextFloat($this.$random15) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts23.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer5;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer5;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer5;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts23.data[$x]) / Long_toNumber($this.$iterations21), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer5;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer5;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer5);
    var$3 = $this.$batch24;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch24);
    var$3 = $this.$font10;
    var$6 = $this.$batch24;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(490);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(486).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(486), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch24);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtf_RarxScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport12;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport12, 1);
};
function cgtf_AceScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random2 = null;
    a.$batch23 = null;
    a.$renderer32 = null;
    a.$amounts = null;
    a.$iterations33 = Long_ZERO;
    a.$font26 = null;
    a.$viewport4 = null;
    a.$mainGame16 = null;
}
let cgtf_AceScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$font26 = $this.$mainGame16.$font0;
    var$1 = new cgtr_AceRandom;
    var$1.$stateA = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateB = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateC0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateD0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateE = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    $this.$random2 = var$1;
    $this.$batch23 = $this.$mainGame16.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$2 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$2);
    var$2.$zoom = 1.0;
    var$3 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$2.$tmp0 = var$3;
    var$2.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$2;
    $this.$viewport4 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$4.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$4);
        var$1.$ownsShader = 1;
        $this.$renderer32 = var$1;
        var$5 = $this.$amounts.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = Long_ZERO;
            var$6 = var$8;
        }
        $this.$iterations33 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$6 = var$2.$length0;
    var$9 = var$2;
    jl_AbstractStringBuilder_insert(var$9, var$6, $rt_s(479));
    if (!var$4.$isCompiled)
        var$3 = var$4.$log0;
    else {
        var$3 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
        var$4.$log0 = var$3;
    }
    jl_AbstractStringBuilder_insert(var$9, var$2.$length0, var$3);
    var$3 = new jl_String;
    var$5 = var$2.$buffer;
    var$10 = var$5.data;
    var$7 = var$2.$length0;
    var$8 = var$10.length;
    if (var$7 >= 0 && var$7 <= (var$8 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$3;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtf_AceScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, var$11, var$12, var$13, var$14, var$15, $m, $color, var$18, var$19, var$20, var$21, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame16;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame16;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport4.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations33 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations33 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations33 = Long_ZERO;
    }
    $this.$iterations33 = Long_add($this.$iterations33, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random2;
        var$10 = var$3.$stateA;
        var$11 = var$3.$stateB;
        var$12 = var$3.$stateC0;
        var$13 = var$3.$stateD0;
        var$14 = var$3.$stateE;
        var$3.$stateA = Long_add(var$10, Long_create(2135587861, 2654435769));
        var$3.$stateB = Long_xor(var$10, var$14);
        var$3.$stateC0 = Long_add(var$11, var$13);
        var$3.$stateD0 = Long_or(Long_shl(var$12, 52), Long_shru(var$12, 12));
        var$15 = Long_sub(var$11, var$12);
        var$3.$stateE = var$15;
        $m = Long_toNumber(Long_shru(var$15, 40)) * 5.9604644775390625E-8 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer32;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer32;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer32;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts.data[$x]) / Long_toNumber($this.$iterations33), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer32;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer32;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer32);
    var$3 = $this.$batch23;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch23);
    var$3 = $this.$font26;
    var$6 = $this.$batch23;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(491);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$18 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$18 = new jl_Integer;
        var$18.$value = $j;
    }
    var$8[1] = var$18;
    var$18 = new jl_StringBuilder;
    var$18.$buffer = $rt_createCharArray($rt_s(486).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$18, $rt_s(486), var$2);
    var$19 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$19.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$20 = var$3.$cache;
        $m = var$19.$nativeString.length;
        var$21 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$18 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$18 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$18, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$18 = null;
            }
            $camera.$constructor = var$18;
            if (var$18 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$18 = $camera.$freeObjects;
            $x = var$18.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$18.$size = $x;
                var$2 = var$18.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$18 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$18.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$20 = var$3;
                        jl_StringBuilder_insert(var$20, $i, $rt_s(39));
                        var$21 = var$18.$constructor.$constructor0.$declaringClass;
                        if (var$21.$name === null)
                            var$21.$name = $rt_str(var$21.$platformClass.$meta.name);
                        var$18 = var$21.$name;
                        jl_StringBuilder_insert(var$20, var$3.$length0, var$18);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$20.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$20.$font, var$19, 0, $m, var$20.$color, 384.0, 1, 1, var$21);
        cbggg_BitmapFontCache_addToCache(var$20, $camera, 64.0, 522.0 + var$20.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch23);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtf_AceScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport4;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport4, 1);
};
function cgte_RandomScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random6 = null;
    a.$batch9 = null;
    a.$renderer7 = null;
    a.$amounts27 = null;
    a.$iterations34 = Long_ZERO;
    a.$font5 = null;
    a.$viewport11 = null;
    a.$mainGame9 = null;
}
let cgte_RandomScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font5 = $this.$mainGame9.$font0;
    var$1 = new cgt_RandomRandom;
    var$2 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$3 = new cgt_Random;
    var$3.$haveNextNextGaussian = 0;
    cgt_Random_setSeed(var$3, Long_fromInt(1234567890));
    var$1.$base = var$3;
    cgt_Random_setSeed(var$3, var$2);
    $this.$random6 = var$1;
    $this.$batch9 = $this.$mainGame9.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$3 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$3);
    var$3.$zoom = 1.0;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3.$tmp0 = var$4;
    var$3.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$3;
    $this.$viewport11 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$5 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$5.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$5);
        var$1.$ownsShader = 1;
        $this.$renderer7 = var$1;
        var$6 = $this.$amounts27.data;
        var$7 = 0;
        var$8 = var$6.length;
        if (var$7 > var$8) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$7 < var$8) {
            var$9 = var$7 + 1 | 0;
            var$6[var$7] = Long_ZERO;
            var$7 = var$9;
        }
        $this.$iterations34 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$7 = var$3.$length0;
    var$10 = var$3;
    jl_AbstractStringBuilder_insert(var$10, var$7, $rt_s(479));
    if (!var$5.$isCompiled)
        var$4 = var$5.$log0;
    else {
        var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$5.$program);
        var$5.$log0 = var$4;
    }
    jl_AbstractStringBuilder_insert(var$10, var$3.$length0, var$4);
    var$4 = new jl_String;
    var$6 = var$3.$buffer;
    var$11 = var$6.data;
    var$8 = var$3.$length0;
    var$9 = var$11.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$4;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgte_RandomScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, $m, $color, var$13, var$14, var$15, var$16, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame9;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame9;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport11.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts27.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations34 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts27.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations34 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts27.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations34 = Long_ZERO;
    }
    $this.$iterations34 = Long_add($this.$iterations34, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random6.$base;
        var$10 = Long_add(Long_shl(Long_fromNumber(cgt_Random_nextInternal(var$3, 32)), 32), Long_fromNumber(cgt_Random_nextInternal(var$3, 32)));
        $m = $rt_intBitsToFloat((126 - jl_Long_numberOfLeadingZeros(var$10) | 0) << 23 | Long_lo(var$10) & 8388607) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts27.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer7;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer7;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer7;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts27.data[$x]) / Long_toNumber($this.$iterations34), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer7;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer7;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer7);
    var$3 = $this.$batch9;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch9);
    var$3 = $this.$font5;
    var$6 = $this.$batch9;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(485);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$13 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$13 = new jl_Integer;
        var$13.$value = $j;
    }
    var$8[1] = var$13;
    var$13 = new jl_StringBuilder;
    var$13.$buffer = $rt_createCharArray($rt_s(492).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$13, $rt_s(492), var$2);
    var$14 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$14.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$15 = var$3.$cache;
        $m = var$14.$nativeString.length;
        var$16 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$13 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$13 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$13, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$13 = null;
            }
            $camera.$constructor = var$13;
            if (var$13 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$13 = $camera.$freeObjects;
            $x = var$13.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$13.$size = $x;
                var$2 = var$13.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$13 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$13.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$15 = var$3;
                        jl_StringBuilder_insert(var$15, $i, $rt_s(39));
                        var$16 = var$13.$constructor.$constructor0.$declaringClass;
                        if (var$16.$name === null)
                            var$16.$name = $rt_str(var$16.$platformClass.$meta.name);
                        var$13 = var$16.$name;
                        jl_StringBuilder_insert(var$15, var$3.$length0, var$13);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$15.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$15.$font, var$14, 0, $m, var$15.$color, 384.0, 1, 1, var$16);
        cbggg_BitmapFontCache_addToCache(var$15, $camera, 64.0, 522.0 + var$15.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch9);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgte_RandomScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport11;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport11, 1);
};
function cgte_ChipScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random26 = null;
    a.$batch13 = null;
    a.$renderer8 = null;
    a.$amounts14 = null;
    a.$iterations14 = Long_ZERO;
    a.$font32 = null;
    a.$viewport22 = null;
    a.$mainGame3 = null;
}
let cgte_ChipScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font32 = $this.$mainGame3.$font0;
    var$1 = new cgtr_Chip32Random;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA1 = var$2;
    var$1.$stateB1 = var$3;
    var$1.$stateC1 = var$4;
    var$1.$stateD1 = var$5;
    $this.$random26 = var$1;
    $this.$batch13 = $this.$mainGame3.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport22 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer8 = var$1;
        var$9 = $this.$amounts14.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations14 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgte_ChipScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, $m, $color, var$13, var$14, var$15, var$16, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame3;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame3;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport22.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts14.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations14 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts14.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations14 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts14.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations14 = Long_ZERO;
    }
    $this.$iterations14 = Long_add($this.$iterations14, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$10 = cgtr_Chip32Random_nextLong($this.$random26);
        $m = $rt_intBitsToFloat((126 - jl_Long_numberOfLeadingZeros(var$10) | 0) << 23 | Long_lo(var$10) & 8388607) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts14.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer8;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer8;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer8;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts14.data[$x]) / Long_toNumber($this.$iterations14), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer8;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer8;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer8);
    var$3 = $this.$batch13;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch13);
    var$3 = $this.$font32;
    var$6 = $this.$batch13;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(487);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$13 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$13 = new jl_Integer;
        var$13.$value = $j;
    }
    var$8[1] = var$13;
    var$13 = new jl_StringBuilder;
    var$13.$buffer = $rt_createCharArray($rt_s(492).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$13, $rt_s(492), var$2);
    var$14 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$14.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$15 = var$3.$cache;
        $m = var$14.$nativeString.length;
        var$16 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$13 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$13 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$13, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$13 = null;
            }
            $camera.$constructor = var$13;
            if (var$13 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$13 = $camera.$freeObjects;
            $x = var$13.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$13.$size = $x;
                var$2 = var$13.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$13 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$13.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$15 = var$3;
                        jl_StringBuilder_insert(var$15, $i, $rt_s(39));
                        var$16 = var$13.$constructor.$constructor0.$declaringClass;
                        if (var$16.$name === null)
                            var$16.$name = $rt_str(var$16.$platformClass.$meta.name);
                        var$13 = var$16.$name;
                        jl_StringBuilder_insert(var$15, var$3.$length0, var$13);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$15.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$15.$font, var$14, 0, $m, var$15.$color, 384.0, 1, 1, var$16);
        cbggg_BitmapFontCache_addToCache(var$15, $camera, 64.0, 522.0 + var$15.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch13);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgte_ChipScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport22;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport22, 1);
};
function cgte_ChopScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random16 = null;
    a.$batch4 = null;
    a.$renderer29 = null;
    a.$amounts11 = null;
    a.$iterations4 = Long_ZERO;
    a.$font36 = null;
    a.$viewport28 = null;
    a.$mainGame28 = null;
}
let cgte_ChopScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font36 = $this.$mainGame28.$font0;
    var$1 = new cgtr_ChopRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA2 = var$2;
    var$1.$stateB2 = var$3;
    var$1.$stateC3 = var$4;
    var$1.$stateD3 = var$5;
    $this.$random16 = var$1;
    $this.$batch4 = $this.$mainGame28.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport28 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer29 = var$1;
        var$9 = $this.$amounts11.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations4 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgte_ChopScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, $m, $color, var$13, var$14, var$15, var$16, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame28;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame28;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport28.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts11.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations4 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts11.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations4 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts11.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations4 = Long_ZERO;
    }
    $this.$iterations4 = Long_add($this.$iterations4, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$10 = cgtr_ChopRandom_nextLong($this.$random16);
        $m = $rt_intBitsToFloat((126 - jl_Long_numberOfLeadingZeros(var$10) | 0) << 23 | Long_lo(var$10) & 8388607) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts11.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer29;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer29;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer29;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts11.data[$x]) / Long_toNumber($this.$iterations4), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer29;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer29;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer29);
    var$3 = $this.$batch4;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch4);
    var$3 = $this.$font36;
    var$6 = $this.$batch4;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(488);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$13 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$13 = new jl_Integer;
        var$13.$value = $j;
    }
    var$8[1] = var$13;
    var$13 = new jl_StringBuilder;
    var$13.$buffer = $rt_createCharArray($rt_s(492).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$13, $rt_s(492), var$2);
    var$14 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$14.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$15 = var$3.$cache;
        $m = var$14.$nativeString.length;
        var$16 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$13 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$13 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$13, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$13 = null;
            }
            $camera.$constructor = var$13;
            if (var$13 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$13 = $camera.$freeObjects;
            $x = var$13.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$13.$size = $x;
                var$2 = var$13.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$13 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$13.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$15 = var$3;
                        jl_StringBuilder_insert(var$15, $i, $rt_s(39));
                        var$16 = var$13.$constructor.$constructor0.$declaringClass;
                        if (var$16.$name === null)
                            var$16.$name = $rt_str(var$16.$platformClass.$meta.name);
                        var$13 = var$16.$name;
                        jl_StringBuilder_insert(var$15, var$3.$length0, var$13);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$15.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$15.$font, var$14, 0, $m, var$15.$color, 384.0, 1, 1, var$16);
        cbggg_BitmapFontCache_addToCache(var$15, $camera, 64.0, 522.0 + var$15.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch4);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgte_ChopScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport28;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport28, 1);
};
function cgte_Xoshiro128PPScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random24 = null;
    a.$batch8 = null;
    a.$renderer17 = null;
    a.$amounts34 = null;
    a.$iterations11 = Long_ZERO;
    a.$font35 = null;
    a.$viewport17 = null;
    a.$mainGame14 = null;
}
let cgte_Xoshiro128PPScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font35 = $this.$mainGame14.$font0;
    var$1 = new cgtr_Xoshiro128PlusPlusRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA3 = var$2;
    var$1.$stateB3 = var$3;
    var$1.$stateC2 = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD2 = var$5;
    $this.$random24 = var$1;
    $this.$batch8 = $this.$mainGame14.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport17 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer17 = var$1;
        var$9 = $this.$amounts34.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations11 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgte_Xoshiro128PPScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, $m, $color, var$13, var$14, var$15, var$16, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame14;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame14;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport17.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts34.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations11 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts34.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations11 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts34.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations11 = Long_ZERO;
    }
    $this.$iterations11 = Long_add($this.$iterations11, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$10 = cgtr_Xoshiro128PlusPlusRandom_nextLong($this.$random24);
        $m = $rt_intBitsToFloat((126 - jl_Long_numberOfLeadingZeros(var$10) | 0) << 23 | Long_lo(var$10) & 8388607) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts34.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer17;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer17;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer17;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts34.data[$x]) / Long_toNumber($this.$iterations11), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer17;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer17;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer17);
    var$3 = $this.$batch8;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch8);
    var$3 = $this.$font35;
    var$6 = $this.$batch8;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(489);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$13 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$13 = new jl_Integer;
        var$13.$value = $j;
    }
    var$8[1] = var$13;
    var$13 = new jl_StringBuilder;
    var$13.$buffer = $rt_createCharArray($rt_s(492).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$13, $rt_s(492), var$2);
    var$14 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$14.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$15 = var$3.$cache;
        $m = var$14.$nativeString.length;
        var$16 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$13 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$13 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$13, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$13 = null;
            }
            $camera.$constructor = var$13;
            if (var$13 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$13 = $camera.$freeObjects;
            $x = var$13.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$13.$size = $x;
                var$2 = var$13.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$13 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$13.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$15 = var$3;
                        jl_StringBuilder_insert(var$15, $i, $rt_s(39));
                        var$16 = var$13.$constructor.$constructor0.$declaringClass;
                        if (var$16.$name === null)
                            var$16.$name = $rt_str(var$16.$platformClass.$meta.name);
                        var$13 = var$16.$name;
                        jl_StringBuilder_insert(var$15, var$3.$length0, var$13);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$15.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$15.$font, var$14, 0, $m, var$15.$color, 384.0, 1, 1, var$16);
        cbggg_BitmapFontCache_addToCache(var$15, $camera, 64.0, 522.0 + var$15.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch8);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgte_Xoshiro128PPScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport17;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport17, 1);
};
function cgte_RarxScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random = null;
    a.$batch20 = null;
    a.$renderer19 = null;
    a.$amounts10 = null;
    a.$iterations19 = Long_ZERO;
    a.$font19 = null;
    a.$viewport30 = null;
    a.$mainGame30 = null;
}
let cgte_RarxScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$font19 = $this.$mainGame30.$font0;
    var$1 = new cgtr_Xoshiro160RoadroxoRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$6 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA0 = var$2;
    var$1.$stateB0 = var$3;
    var$1.$stateC = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD = var$5;
    var$1.$stateE0 = var$6;
    $this.$random = var$1;
    $this.$batch20 = $this.$mainGame30.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$7 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$7);
    var$7.$zoom = 1.0;
    var$8 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmp0 = var$8;
    var$7.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$7;
    $this.$viewport30 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$9 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$9.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$9);
        var$1.$ownsShader = 1;
        $this.$renderer19 = var$1;
        var$10 = $this.$amounts10.data;
        var$2 = 0;
        var$3 = var$10.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$10[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations19 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$2 = var$7.$length0;
    var$11 = var$7;
    jl_AbstractStringBuilder_insert(var$11, var$2, $rt_s(479));
    if (!var$9.$isCompiled)
        var$8 = var$9.$log0;
    else {
        var$8 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$9.$program);
        var$9.$log0 = var$8;
    }
    jl_AbstractStringBuilder_insert(var$11, var$7.$length0, var$8);
    var$8 = new jl_String;
    var$10 = var$7.$buffer;
    var$12 = var$10.data;
    var$3 = var$7.$length0;
    var$4 = var$12.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$10.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$8;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgte_RarxScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, $m, $color, var$13, var$14, var$15, var$16, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame30;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame30;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport30.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts10.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations19 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts10.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations19 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts10.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations19 = Long_ZERO;
    }
    $this.$iterations19 = Long_add($this.$iterations19, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$10 = cgtr_Xoshiro160RoadroxoRandom_nextLong($this.$random);
        $m = $rt_intBitsToFloat((126 - jl_Long_numberOfLeadingZeros(var$10) | 0) << 23 | Long_lo(var$10) & 8388607) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts10.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer19;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer19;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer19;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts10.data[$x]) / Long_toNumber($this.$iterations19), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer19;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer19;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer19);
    var$3 = $this.$batch20;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch20);
    var$3 = $this.$font19;
    var$6 = $this.$batch20;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(490);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$13 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$13 = new jl_Integer;
        var$13.$value = $j;
    }
    var$8[1] = var$13;
    var$13 = new jl_StringBuilder;
    var$13.$buffer = $rt_createCharArray($rt_s(492).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$13, $rt_s(492), var$2);
    var$14 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$14.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$15 = var$3.$cache;
        $m = var$14.$nativeString.length;
        var$16 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$13 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$13 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$13, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$13 = null;
            }
            $camera.$constructor = var$13;
            if (var$13 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$13 = $camera.$freeObjects;
            $x = var$13.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$13.$size = $x;
                var$2 = var$13.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$13 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$13.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$15 = var$3;
                        jl_StringBuilder_insert(var$15, $i, $rt_s(39));
                        var$16 = var$13.$constructor.$constructor0.$declaringClass;
                        if (var$16.$name === null)
                            var$16.$name = $rt_str(var$16.$platformClass.$meta.name);
                        var$13 = var$16.$name;
                        jl_StringBuilder_insert(var$15, var$3.$length0, var$13);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$15.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$15.$font, var$14, 0, $m, var$15.$color, 384.0, 1, 1, var$16);
        cbggg_BitmapFontCache_addToCache(var$15, $camera, 64.0, 522.0 + var$15.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch20);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgte_RarxScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport30;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport30, 1);
};
function cgte_AceScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random34 = null;
    a.$batch2 = null;
    a.$renderer14 = null;
    a.$amounts13 = null;
    a.$iterations28 = Long_ZERO;
    a.$font4 = null;
    a.$viewport21 = null;
    a.$mainGame13 = null;
}
let cgte_AceScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$font4 = $this.$mainGame13.$font0;
    var$1 = new cgtr_AceRandom;
    var$1.$stateA = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateB = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateC0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateD0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateE = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    $this.$random34 = var$1;
    $this.$batch2 = $this.$mainGame13.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$2 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$2);
    var$2.$zoom = 1.0;
    var$3 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$2.$tmp0 = var$3;
    var$2.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$2;
    $this.$viewport21 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$4.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$4);
        var$1.$ownsShader = 1;
        $this.$renderer14 = var$1;
        var$5 = $this.$amounts13.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = Long_ZERO;
            var$6 = var$8;
        }
        $this.$iterations28 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$6 = var$2.$length0;
    var$9 = var$2;
    jl_AbstractStringBuilder_insert(var$9, var$6, $rt_s(479));
    if (!var$4.$isCompiled)
        var$3 = var$4.$log0;
    else {
        var$3 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
        var$4.$log0 = var$3;
    }
    jl_AbstractStringBuilder_insert(var$9, var$2.$length0, var$3);
    var$3 = new jl_String;
    var$5 = var$2.$buffer;
    var$10 = var$5.data;
    var$7 = var$2.$length0;
    var$8 = var$10.length;
    if (var$7 >= 0 && var$7 <= (var$8 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$3;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgte_AceScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, var$11, var$12, var$13, var$14, var$15, $m, $color, var$18, var$19, var$20, var$21, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame13;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame13;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport21.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts13.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations28 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts13.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations28 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts13.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations28 = Long_ZERO;
    }
    $this.$iterations28 = Long_add($this.$iterations28, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random34;
        var$10 = var$3.$stateA;
        var$11 = var$3.$stateB;
        var$12 = var$3.$stateC0;
        var$13 = var$3.$stateD0;
        var$14 = var$3.$stateE;
        var$3.$stateA = Long_add(var$10, Long_create(2135587861, 2654435769));
        var$3.$stateB = Long_xor(var$10, var$14);
        var$3.$stateC0 = Long_add(var$11, var$13);
        var$3.$stateD0 = Long_or(Long_shl(var$12, 52), Long_shru(var$12, 12));
        var$15 = Long_sub(var$11, var$12);
        var$3.$stateE = var$15;
        $m = $rt_intBitsToFloat((126 - jl_Long_numberOfLeadingZeros(var$15) | 0) << 23 | Long_lo(var$15) & 8388607) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts13.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer14;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer14;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer14;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts13.data[$x]) / Long_toNumber($this.$iterations28), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer14;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer14;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer14);
    var$3 = $this.$batch2;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch2);
    var$3 = $this.$font4;
    var$6 = $this.$batch2;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(491);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$18 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$18 = new jl_Integer;
        var$18.$value = $j;
    }
    var$8[1] = var$18;
    var$18 = new jl_StringBuilder;
    var$18.$buffer = $rt_createCharArray($rt_s(492).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$18, $rt_s(492), var$2);
    var$19 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$19.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$20 = var$3.$cache;
        $m = var$19.$nativeString.length;
        var$21 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$18 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$18 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$18, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$18 = null;
            }
            $camera.$constructor = var$18;
            if (var$18 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$18 = $camera.$freeObjects;
            $x = var$18.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$18.$size = $x;
                var$2 = var$18.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$18 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$18.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$20 = var$3;
                        jl_StringBuilder_insert(var$20, $i, $rt_s(39));
                        var$21 = var$18.$constructor.$constructor0.$declaringClass;
                        if (var$21.$name === null)
                            var$21.$name = $rt_str(var$21.$platformClass.$meta.name);
                        var$18 = var$21.$name;
                        jl_StringBuilder_insert(var$20, var$3.$length0, var$18);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$20.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$20.$font, var$19, 0, $m, var$20.$color, 384.0, 1, 1, var$21);
        cbggg_BitmapFontCache_addToCache(var$20, $camera, 64.0, 522.0 + var$20.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch2);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgte_AceScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport21;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport21, 1);
};
function cgtd_RandomScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random32 = null;
    a.$batch27 = null;
    a.$renderer0 = null;
    a.$amounts3 = null;
    a.$iterations16 = Long_ZERO;
    a.$font6 = null;
    a.$viewport14 = null;
    a.$mainGame11 = null;
}
let cgtd_RandomScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font6 = $this.$mainGame11.$font0;
    var$1 = new cgt_RandomRandom;
    var$2 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$3 = new cgt_Random;
    var$3.$haveNextNextGaussian = 0;
    cgt_Random_setSeed(var$3, Long_fromInt(1234567890));
    var$1.$base = var$3;
    cgt_Random_setSeed(var$3, var$2);
    $this.$random32 = var$1;
    $this.$batch27 = $this.$mainGame11.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$3 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$3);
    var$3.$zoom = 1.0;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3.$tmp0 = var$4;
    var$3.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$3;
    $this.$viewport14 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$5 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$5.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$5);
        var$1.$ownsShader = 1;
        $this.$renderer0 = var$1;
        var$6 = $this.$amounts3.data;
        var$7 = 0;
        var$8 = var$6.length;
        if (var$7 > var$8) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$7 < var$8) {
            var$9 = var$7 + 1 | 0;
            var$6[var$7] = Long_ZERO;
            var$7 = var$9;
        }
        $this.$iterations16 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$7 = var$3.$length0;
    var$10 = var$3;
    jl_AbstractStringBuilder_insert(var$10, var$7, $rt_s(479));
    if (!var$5.$isCompiled)
        var$4 = var$5.$log0;
    else {
        var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$5.$program);
        var$5.$log0 = var$4;
    }
    jl_AbstractStringBuilder_insert(var$10, var$3.$length0, var$4);
    var$4 = new jl_String;
    var$6 = var$3.$buffer;
    var$11 = var$6.data;
    var$8 = var$3.$length0;
    var$9 = var$11.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$4;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtd_RandomScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame11;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame11;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport14.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts3.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations16 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts3.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations16 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts3.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations16 = Long_ZERO;
    }
    $this.$iterations16 = Long_add($this.$iterations16, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random32.$base;
        $m = (cgt_Random_nextInternal(var$3, 26) * 1.4901161193847656E-8 + cgt_Random_nextInternal(var$3, 27) * 1.1102230246251565E-16) * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts3.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer0;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer0;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer0;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts3.data[$x]) / Long_toNumber($this.$iterations16), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer0;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer0;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer0);
    var$3 = $this.$batch27;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch27);
    var$3 = $this.$font6;
    var$6 = $this.$batch27;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(485);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(493).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(493), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch27);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtd_RandomScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport14;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport14, 1);
};
function cgtd_ChipScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random17 = null;
    a.$batch0 = null;
    a.$renderer23 = null;
    a.$amounts26 = null;
    a.$iterations25 = Long_ZERO;
    a.$font8 = null;
    a.$viewport2 = null;
    a.$mainGame19 = null;
}
let cgtd_ChipScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font8 = $this.$mainGame19.$font0;
    var$1 = new cgtr_Chip32Random;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA1 = var$2;
    var$1.$stateB1 = var$3;
    var$1.$stateC1 = var$4;
    var$1.$stateD1 = var$5;
    $this.$random17 = var$1;
    $this.$batch0 = $this.$mainGame19.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport2 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer23 = var$1;
        var$9 = $this.$amounts26.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations25 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtd_ChipScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame19;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame19;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport2.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts26.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations25 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts26.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations25 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts26.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations25 = Long_ZERO;
    }
    $this.$iterations25 = Long_add($this.$iterations25, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_toNumber(Long_shru(cgtr_Chip32Random_nextLong($this.$random17), 11)) * 1.1102230246251565E-16 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts26.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer23;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer23;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer23;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts26.data[$x]) / Long_toNumber($this.$iterations25), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer23;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer23;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer23);
    var$3 = $this.$batch0;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch0);
    var$3 = $this.$font8;
    var$6 = $this.$batch0;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(487);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(493).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(493), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch0);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtd_ChipScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport2;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport2, 1);
};
function cgtd_ChopScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random30 = null;
    a.$batch16 = null;
    a.$renderer13 = null;
    a.$amounts31 = null;
    a.$iterations32 = Long_ZERO;
    a.$font28 = null;
    a.$viewport20 = null;
    a.$mainGame1 = null;
}
let cgtd_ChopScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font28 = $this.$mainGame1.$font0;
    var$1 = new cgtr_ChopRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA2 = var$2;
    var$1.$stateB2 = var$3;
    var$1.$stateC3 = var$4;
    var$1.$stateD3 = var$5;
    $this.$random30 = var$1;
    $this.$batch16 = $this.$mainGame1.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport20 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer13 = var$1;
        var$9 = $this.$amounts31.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations32 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtd_ChopScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame1;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame1;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport20.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts31.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations32 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts31.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations32 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts31.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations32 = Long_ZERO;
    }
    $this.$iterations32 = Long_add($this.$iterations32, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_toNumber(Long_shru(cgtr_ChopRandom_nextLong($this.$random30), 11)) * 1.1102230246251565E-16 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts31.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer13;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer13;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer13;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts31.data[$x]) / Long_toNumber($this.$iterations32), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer13;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer13;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer13);
    var$3 = $this.$batch16;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch16);
    var$3 = $this.$font28;
    var$6 = $this.$batch16;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(488);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(493).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(493), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch16);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtd_ChopScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport20;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport20, 1);
};
function cgtd_Xoshiro128PPScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random9 = null;
    a.$batch21 = null;
    a.$renderer11 = null;
    a.$amounts28 = null;
    a.$iterations20 = Long_ZERO;
    a.$font29 = null;
    a.$viewport0 = null;
    a.$mainGame17 = null;
}
let cgtd_Xoshiro128PPScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font29 = $this.$mainGame17.$font0;
    var$1 = new cgtr_Xoshiro128PlusPlusRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA3 = var$2;
    var$1.$stateB3 = var$3;
    var$1.$stateC2 = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD2 = var$5;
    $this.$random9 = var$1;
    $this.$batch21 = $this.$mainGame17.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport0 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer11 = var$1;
        var$9 = $this.$amounts28.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations20 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtd_Xoshiro128PPScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame17;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame17;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport0.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts28.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations20 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts28.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations20 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts28.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations20 = Long_ZERO;
    }
    $this.$iterations20 = Long_add($this.$iterations20, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_toNumber(Long_shru(cgtr_Xoshiro128PlusPlusRandom_nextLong($this.$random9), 11)) * 1.1102230246251565E-16 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts28.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer11;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer11;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer11;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts28.data[$x]) / Long_toNumber($this.$iterations20), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer11;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer11;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer11);
    var$3 = $this.$batch21;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch21);
    var$3 = $this.$font29;
    var$6 = $this.$batch21;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(489);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(493).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(493), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch21);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtd_Xoshiro128PPScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport0;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport0, 1);
};
function cgtd_RarxScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random14 = null;
    a.$batch10 = null;
    a.$renderer9 = null;
    a.$amounts22 = null;
    a.$iterations6 = Long_ZERO;
    a.$font2 = null;
    a.$viewport13 = null;
    a.$mainGame10 = null;
}
let cgtd_RarxScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$font2 = $this.$mainGame10.$font0;
    var$1 = new cgtr_Xoshiro160RoadroxoRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$6 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA0 = var$2;
    var$1.$stateB0 = var$3;
    var$1.$stateC = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD = var$5;
    var$1.$stateE0 = var$6;
    $this.$random14 = var$1;
    $this.$batch10 = $this.$mainGame10.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$7 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$7);
    var$7.$zoom = 1.0;
    var$8 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmp0 = var$8;
    var$7.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$7;
    $this.$viewport13 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$9 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$9.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$9);
        var$1.$ownsShader = 1;
        $this.$renderer9 = var$1;
        var$10 = $this.$amounts22.data;
        var$2 = 0;
        var$3 = var$10.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$10[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations6 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$2 = var$7.$length0;
    var$11 = var$7;
    jl_AbstractStringBuilder_insert(var$11, var$2, $rt_s(479));
    if (!var$9.$isCompiled)
        var$8 = var$9.$log0;
    else {
        var$8 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$9.$program);
        var$9.$log0 = var$8;
    }
    jl_AbstractStringBuilder_insert(var$11, var$7.$length0, var$8);
    var$8 = new jl_String;
    var$10 = var$7.$buffer;
    var$12 = var$10.data;
    var$3 = var$7.$length0;
    var$4 = var$12.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$10.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$8;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtd_RarxScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame10;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame10;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport13.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts22.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations6 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts22.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations6 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts22.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations6 = Long_ZERO;
    }
    $this.$iterations6 = Long_add($this.$iterations6, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_toNumber(Long_shru(cgtr_Xoshiro160RoadroxoRandom_nextLong($this.$random14), 11)) * 1.1102230246251565E-16 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts22.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer9;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer9;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer9;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts22.data[$x]) / Long_toNumber($this.$iterations6), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer9;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer9;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer9);
    var$3 = $this.$batch10;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch10);
    var$3 = $this.$font2;
    var$6 = $this.$batch10;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(490);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(493).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(493), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch10);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtd_RarxScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport13;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport13, 1);
};
function cgtd_AceScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random10 = null;
    a.$batch26 = null;
    a.$renderer18 = null;
    a.$amounts8 = null;
    a.$iterations23 = Long_ZERO;
    a.$font11 = null;
    a.$viewport31 = null;
    a.$mainGame29 = null;
}
let cgtd_AceScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$font11 = $this.$mainGame29.$font0;
    var$1 = new cgtr_AceRandom;
    var$1.$stateA = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateB = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateC0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateD0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateE = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    $this.$random10 = var$1;
    $this.$batch26 = $this.$mainGame29.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$2 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$2);
    var$2.$zoom = 1.0;
    var$3 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$2.$tmp0 = var$3;
    var$2.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$2;
    $this.$viewport31 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$4.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$4);
        var$1.$ownsShader = 1;
        $this.$renderer18 = var$1;
        var$5 = $this.$amounts8.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = Long_ZERO;
            var$6 = var$8;
        }
        $this.$iterations23 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$6 = var$2.$length0;
    var$9 = var$2;
    jl_AbstractStringBuilder_insert(var$9, var$6, $rt_s(479));
    if (!var$4.$isCompiled)
        var$3 = var$4.$log0;
    else {
        var$3 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
        var$4.$log0 = var$3;
    }
    jl_AbstractStringBuilder_insert(var$9, var$2.$length0, var$3);
    var$3 = new jl_String;
    var$5 = var$2.$buffer;
    var$10 = var$5.data;
    var$7 = var$2.$length0;
    var$8 = var$10.length;
    if (var$7 >= 0 && var$7 <= (var$8 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$3;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtd_AceScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, var$11, var$12, var$13, var$14, var$15, $m, $color, var$18, var$19, var$20, var$21, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame29;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame29;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport31.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts8.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations23 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts8.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations23 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts8.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations23 = Long_ZERO;
    }
    $this.$iterations23 = Long_add($this.$iterations23, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random10;
        var$10 = var$3.$stateA;
        var$11 = var$3.$stateB;
        var$12 = var$3.$stateC0;
        var$13 = var$3.$stateD0;
        var$14 = var$3.$stateE;
        var$3.$stateA = Long_add(var$10, Long_create(2135587861, 2654435769));
        var$3.$stateB = Long_xor(var$10, var$14);
        var$3.$stateC0 = Long_add(var$11, var$13);
        var$3.$stateD0 = Long_or(Long_shl(var$12, 52), Long_shru(var$12, 12));
        var$15 = Long_sub(var$11, var$12);
        var$3.$stateE = var$15;
        $m = Long_toNumber(Long_shru(var$15, 11)) * 1.1102230246251565E-16 * 512.0 | 0;
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts8.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer18;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer18;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer18;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts8.data[$x]) / Long_toNumber($this.$iterations23), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer18;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer18;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer18);
    var$3 = $this.$batch26;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch26);
    var$3 = $this.$font11;
    var$6 = $this.$batch26;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(491);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$18 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$18 = new jl_Integer;
        var$18.$value = $j;
    }
    var$8[1] = var$18;
    var$18 = new jl_StringBuilder;
    var$18.$buffer = $rt_createCharArray($rt_s(493).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$18, $rt_s(493), var$2);
    var$19 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$19.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$20 = var$3.$cache;
        $m = var$19.$nativeString.length;
        var$21 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$18 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$18 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$18, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$18 = null;
            }
            $camera.$constructor = var$18;
            if (var$18 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$18 = $camera.$freeObjects;
            $x = var$18.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$18.$size = $x;
                var$2 = var$18.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$18 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$18.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$20 = var$3;
                        jl_StringBuilder_insert(var$20, $i, $rt_s(39));
                        var$21 = var$18.$constructor.$constructor0.$declaringClass;
                        if (var$21.$name === null)
                            var$21.$name = $rt_str(var$21.$platformClass.$meta.name);
                        var$18 = var$21.$name;
                        jl_StringBuilder_insert(var$20, var$3.$length0, var$18);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$20.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$20.$font, var$19, 0, $m, var$20.$color, 384.0, 1, 1, var$21);
        cbggg_BitmapFontCache_addToCache(var$20, $camera, 64.0, 522.0 + var$20.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch26);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtd_AceScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport31;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport31, 1);
};
function cgti_RandomScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random0 = null;
    a.$batch18 = null;
    a.$renderer21 = null;
    a.$amounts1 = null;
    a.$iterations26 = Long_ZERO;
    a.$font21 = null;
    a.$viewport3 = null;
    a.$mainGame20 = null;
}
let cgti_RandomScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font21 = $this.$mainGame20.$font0;
    var$1 = new cgt_RandomRandom;
    var$2 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$3 = new cgt_Random;
    var$3.$haveNextNextGaussian = 0;
    cgt_Random_setSeed(var$3, Long_fromInt(1234567890));
    var$1.$base = var$3;
    cgt_Random_setSeed(var$3, var$2);
    $this.$random0 = var$1;
    $this.$batch18 = $this.$mainGame20.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$3 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$3);
    var$3.$zoom = 1.0;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3.$tmp0 = var$4;
    var$3.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$3;
    $this.$viewport3 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$5 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$5.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$5);
        var$1.$ownsShader = 1;
        $this.$renderer21 = var$1;
        var$6 = $this.$amounts1.data;
        var$7 = 0;
        var$8 = var$6.length;
        if (var$7 > var$8) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$7 < var$8) {
            var$9 = var$7 + 1 | 0;
            var$6[var$7] = Long_ZERO;
            var$7 = var$9;
        }
        $this.$iterations26 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$7 = var$3.$length0;
    var$10 = var$3;
    jl_AbstractStringBuilder_insert(var$10, var$7, $rt_s(479));
    if (!var$5.$isCompiled)
        var$4 = var$5.$log0;
    else {
        var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$5.$program);
        var$5.$log0 = var$4;
    }
    jl_AbstractStringBuilder_insert(var$10, var$3.$length0, var$4);
    var$4 = new jl_String;
    var$6 = var$3.$buffer;
    var$11 = var$6.data;
    var$8 = var$3.$length0;
    var$9 = var$11.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$4;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgti_RandomScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame20;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame20;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport3.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts1.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations26 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts1.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations26 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts1.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations26 = Long_ZERO;
    }
    $this.$iterations26 = Long_add($this.$iterations26, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgt_Random_nextInt($this.$random0.$base, 512);
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts1.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer21;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer21;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer21;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts1.data[$x]) / Long_toNumber($this.$iterations26), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer21;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer21;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer21);
    var$3 = $this.$batch18;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch18);
    var$3 = $this.$font21;
    var$6 = $this.$batch18;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(485);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(494).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(494), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch18);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgti_RandomScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport3;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport3, 1);
};
function cgti_ChipScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random25 = null;
    a.$batch19 = null;
    a.$renderer26 = null;
    a.$amounts7 = null;
    a.$iterations18 = Long_ZERO;
    a.$font1 = null;
    a.$viewport32 = null;
    a.$mainGame34 = null;
}
let cgti_ChipScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font1 = $this.$mainGame34.$font0;
    var$1 = new cgtr_Chip32Random;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA1 = var$2;
    var$1.$stateB1 = var$3;
    var$1.$stateC1 = var$4;
    var$1.$stateD1 = var$5;
    $this.$random25 = var$1;
    $this.$batch19 = $this.$mainGame34.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport32 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer26 = var$1;
        var$9 = $this.$amounts7.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations18 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgti_ChipScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame34;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame34;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport32.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts7.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations18 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts7.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations18 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts7.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations18 = Long_ZERO;
    }
    $this.$iterations18 = Long_add($this.$iterations18, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgtr_Chip32Random_nextInt($this.$random25, 512);
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts7.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer26;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer26;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer26;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts7.data[$x]) / Long_toNumber($this.$iterations18), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer26;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer26;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer26);
    var$3 = $this.$batch19;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch19);
    var$3 = $this.$font1;
    var$6 = $this.$batch19;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(487);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(494).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(494), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch19);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgti_ChipScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport32;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport32, 1);
};
function cgti_ChopScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random22 = null;
    a.$batch12 = null;
    a.$renderer25 = null;
    a.$amounts20 = null;
    a.$iterations10 = Long_ZERO;
    a.$font23 = null;
    a.$viewport8 = null;
    a.$mainGame24 = null;
}
let cgti_ChopScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font23 = $this.$mainGame24.$font0;
    var$1 = new cgtr_ChopRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA2 = var$2;
    var$1.$stateB2 = var$3;
    var$1.$stateC3 = var$4;
    var$1.$stateD3 = var$5;
    $this.$random22 = var$1;
    $this.$batch12 = $this.$mainGame24.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport8 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer25 = var$1;
        var$9 = $this.$amounts20.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations10 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgti_ChopScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, var$16, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame24;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame24;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport8.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts20.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations10 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts20.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations10 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts20.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations10 = Long_ZERO;
    }
    $this.$iterations10 = Long_add($this.$iterations10, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_hi(Long_mul(Long_fromInt(512), Long_and(Long_fromInt(cgtr_ChopRandom_nextInt($this.$random22)), Long_create(4294967295, 0)))) & (-1);
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts20.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer25;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer25;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer25;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts20.data[$x]) / Long_toNumber($this.$iterations10), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer25;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer25;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer25);
    var$3 = $this.$batch12;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch12);
    var$3 = $this.$font23;
    var$6 = $this.$batch12;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(488);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(494).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(494), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        var$15 = var$13.$nativeString.length;
        var$16 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $j = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $j < 0 ? null : $camera.$valueTable.data[$j];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                var$12 = var$2[$x];
                var$2[$x] = null;
            } else {
                $camera = $camera;
                try {
                    var$12 = cbgur_Constructor_newInstance($camera.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        var$12 = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$16 = $camera.$constructor.$constructor0.$declaringClass;
                        if (var$16.$name === null)
                            var$16.$name = $rt_str(var$16.$platformClass.$meta.name);
                        $camera = var$16.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, $camera);
                        jl_Exception__init_1(var$12, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw(var$12);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = var$12;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, var$15, var$14.$color, 384.0, 1, 1, var$16);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch12);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgti_ChopScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport8;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport8, 1);
};
function cgti_Xoshiro128PPScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random19 = null;
    a.$batch1 = null;
    a.$renderer6 = null;
    a.$amounts19 = null;
    a.$iterations5 = Long_ZERO;
    a.$font31 = null;
    a.$viewport10 = null;
    a.$mainGame8 = null;
}
let cgti_Xoshiro128PPScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font31 = $this.$mainGame8.$font0;
    var$1 = new cgtr_Xoshiro128PlusPlusRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA3 = var$2;
    var$1.$stateB3 = var$3;
    var$1.$stateC2 = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD2 = var$5;
    $this.$random19 = var$1;
    $this.$batch1 = $this.$mainGame8.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport10 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer6 = var$1;
        var$9 = $this.$amounts19.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations5 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgti_Xoshiro128PPScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, var$16, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame8;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame8;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport10.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts19.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations5 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts19.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations5 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts19.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations5 = Long_ZERO;
    }
    $this.$iterations5 = Long_add($this.$iterations5, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_hi(Long_mul(Long_fromInt(512), Long_and(Long_fromInt(cgtr_Xoshiro128PlusPlusRandom_nextInt($this.$random19)), Long_create(4294967295, 0)))) & (-1);
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts19.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer6;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer6;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer6;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts19.data[$x]) / Long_toNumber($this.$iterations5), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer6;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer6;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer6);
    var$3 = $this.$batch1;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch1);
    var$3 = $this.$font31;
    var$6 = $this.$batch1;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(489);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(494).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(494), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        var$15 = var$13.$nativeString.length;
        var$16 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $j = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $j < 0 ? null : $camera.$valueTable.data[$j];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                var$12 = var$2[$x];
                var$2[$x] = null;
            } else {
                $camera = $camera;
                try {
                    var$12 = cbgur_Constructor_newInstance($camera.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        var$12 = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$16 = $camera.$constructor.$constructor0.$declaringClass;
                        if (var$16.$name === null)
                            var$16.$name = $rt_str(var$16.$platformClass.$meta.name);
                        $camera = var$16.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, $camera);
                        jl_Exception__init_1(var$12, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw(var$12);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = var$12;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, var$15, var$14.$color, 384.0, 1, 1, var$16);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch1);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgti_Xoshiro128PPScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport10;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport10, 1);
};
function cgti_RarxScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random1 = null;
    a.$batch14 = null;
    a.$renderer16 = null;
    a.$amounts5 = null;
    a.$iterations29 = Long_ZERO;
    a.$font9 = null;
    a.$viewport7 = null;
    a.$mainGame22 = null;
}
let cgti_RarxScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$font9 = $this.$mainGame22.$font0;
    var$1 = new cgtr_Xoshiro160RoadroxoRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$6 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA0 = var$2;
    var$1.$stateB0 = var$3;
    var$1.$stateC = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD = var$5;
    var$1.$stateE0 = var$6;
    $this.$random1 = var$1;
    $this.$batch14 = $this.$mainGame22.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$7 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$7);
    var$7.$zoom = 1.0;
    var$8 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmp0 = var$8;
    var$7.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$7;
    $this.$viewport7 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$9 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$9.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$9);
        var$1.$ownsShader = 1;
        $this.$renderer16 = var$1;
        var$10 = $this.$amounts5.data;
        var$2 = 0;
        var$3 = var$10.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$10[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations29 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$2 = var$7.$length0;
    var$11 = var$7;
    jl_AbstractStringBuilder_insert(var$11, var$2, $rt_s(479));
    if (!var$9.$isCompiled)
        var$8 = var$9.$log0;
    else {
        var$8 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$9.$program);
        var$9.$log0 = var$8;
    }
    jl_AbstractStringBuilder_insert(var$11, var$7.$length0, var$8);
    var$8 = new jl_String;
    var$10 = var$7.$buffer;
    var$12 = var$10.data;
    var$3 = var$7.$length0;
    var$4 = var$12.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$10.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$8;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgti_RarxScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame22;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame22;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport7.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts5.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations29 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts5.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations29 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts5.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations29 = Long_ZERO;
    }
    $this.$iterations29 = Long_add($this.$iterations29, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = cgtr_Xoshiro160RoadroxoRandom_nextInt($this.$random1, 512);
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts5.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer16;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer16;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer16;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts5.data[$x]) / Long_toNumber($this.$iterations29), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer16;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer16;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer16);
    var$3 = $this.$batch14;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch14);
    var$3 = $this.$font9;
    var$6 = $this.$batch14;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(490);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(494).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(494), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch14);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgti_RarxScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport7;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport7, 1);
};
function cgti_AceScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random8 = null;
    a.$batch30 = null;
    a.$renderer24 = null;
    a.$amounts6 = null;
    a.$iterations1 = Long_ZERO;
    a.$font18 = null;
    a.$viewport23 = null;
    a.$mainGame2 = null;
}
let cgti_AceScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$font18 = $this.$mainGame2.$font0;
    var$1 = new cgtr_AceRandom;
    var$1.$stateA = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateB = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateC0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateD0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateE = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    $this.$random8 = var$1;
    $this.$batch30 = $this.$mainGame2.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$2 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$2);
    var$2.$zoom = 1.0;
    var$3 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$2.$tmp0 = var$3;
    var$2.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$2;
    $this.$viewport23 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$4.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$4);
        var$1.$ownsShader = 1;
        $this.$renderer24 = var$1;
        var$5 = $this.$amounts6.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = Long_ZERO;
            var$6 = var$8;
        }
        $this.$iterations1 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$6 = var$2.$length0;
    var$9 = var$2;
    jl_AbstractStringBuilder_insert(var$9, var$6, $rt_s(479));
    if (!var$4.$isCompiled)
        var$3 = var$4.$log0;
    else {
        var$3 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
        var$4.$log0 = var$3;
    }
    jl_AbstractStringBuilder_insert(var$9, var$2.$length0, var$3);
    var$3 = new jl_String;
    var$5 = var$2.$buffer;
    var$10 = var$5.data;
    var$7 = var$2.$length0;
    var$8 = var$10.length;
    if (var$7 >= 0 && var$7 <= (var$8 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$3;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgti_AceScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, var$11, var$12, var$13, var$14, $m, $color, var$17, var$18, var$19, var$20, var$21, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame2;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame2;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport23.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts6.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations1 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts6.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations1 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts6.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations1 = Long_ZERO;
    }
    $this.$iterations1 = Long_add($this.$iterations1, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random8;
        var$10 = var$3.$stateA;
        var$11 = var$3.$stateB;
        var$12 = var$3.$stateC0;
        var$13 = var$3.$stateD0;
        var$14 = var$3.$stateE;
        var$3.$stateA = Long_add(var$10, Long_create(2135587861, 2654435769));
        var$3.$stateB = Long_xor(var$10, var$14);
        var$3.$stateC0 = Long_add(var$11, var$13);
        var$3.$stateD0 = Long_or(Long_shl(var$12, 52), Long_shru(var$12, 12));
        var$10 = Long_sub(var$11, var$12);
        var$3.$stateE = var$10;
        $m = Long_hi(Long_mul(Long_fromInt(512), Long_and(var$10, Long_create(4294967295, 0)))) & (-1);
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts6.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer24;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer24;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer24;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts6.data[$x]) / Long_toNumber($this.$iterations1), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer24;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer24;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer24);
    var$3 = $this.$batch30;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch30);
    var$3 = $this.$font18;
    var$6 = $this.$batch30;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(491);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$17 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$17 = new jl_Integer;
        var$17.$value = $j;
    }
    var$8[1] = var$17;
    var$17 = new jl_StringBuilder;
    var$17.$buffer = $rt_createCharArray($rt_s(494).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$17, $rt_s(494), var$2);
    var$18 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$18.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$19 = var$3.$cache;
        var$20 = var$18.$nativeString.length;
        var$21 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $j = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $j < 0 ? null : $camera.$valueTable.data[$j];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$17 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$17 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$17, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$17 = null;
            }
            $camera.$constructor = var$17;
            if (var$17 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$17 = $camera.$freeObjects;
            $x = var$17.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$17.$size = $x;
                var$2 = var$17.$items.data;
                var$17 = var$2[$x];
                var$2[$x] = null;
            } else {
                $camera = $camera;
                try {
                    var$17 = cbgur_Constructor_newInstance($camera.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        var$17 = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$19 = var$3;
                        jl_StringBuilder_insert(var$19, $i, $rt_s(39));
                        var$21 = $camera.$constructor.$constructor0.$declaringClass;
                        if (var$21.$name === null)
                            var$21.$name = $rt_str(var$21.$platformClass.$meta.name);
                        $camera = var$21.$name;
                        jl_StringBuilder_insert(var$19, var$3.$length0, $camera);
                        jl_Exception__init_1(var$17, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw(var$17);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = var$17;
        cbgu_Array_add(var$19.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$19.$font, var$18, 0, var$20, var$19.$color, 384.0, 1, 1, var$21);
        cbggg_BitmapFontCache_addToCache(var$19, $camera, 64.0, 522.0 + var$19.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch30);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgti_AceScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport23;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport23, 1);
};
function cgtl_RandomScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random5 = null;
    a.$batch3 = null;
    a.$renderer4 = null;
    a.$amounts2 = null;
    a.$iterations9 = Long_ZERO;
    a.$font34 = null;
    a.$viewport15 = null;
    a.$mainGame12 = null;
}
let cgtl_RandomScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font34 = $this.$mainGame12.$font0;
    var$1 = new cgt_RandomRandom;
    var$2 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$3 = new cgt_Random;
    var$3.$haveNextNextGaussian = 0;
    cgt_Random_setSeed(var$3, Long_fromInt(1234567890));
    var$1.$base = var$3;
    cgt_Random_setSeed(var$3, var$2);
    $this.$random5 = var$1;
    $this.$batch3 = $this.$mainGame12.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$3 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$3);
    var$3.$zoom = 1.0;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3.$tmp0 = var$4;
    var$3.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$3;
    $this.$viewport15 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$5 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$5.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$5);
        var$1.$ownsShader = 1;
        $this.$renderer4 = var$1;
        var$6 = $this.$amounts2.data;
        var$7 = 0;
        var$8 = var$6.length;
        if (var$7 > var$8) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$7 < var$8) {
            var$9 = var$7 + 1 | 0;
            var$6[var$7] = Long_ZERO;
            var$7 = var$9;
        }
        $this.$iterations9 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$7 = var$3.$length0;
    var$10 = var$3;
    jl_AbstractStringBuilder_insert(var$10, var$7, $rt_s(479));
    if (!var$5.$isCompiled)
        var$4 = var$5.$log0;
    else {
        var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$5.$program);
        var$5.$log0 = var$4;
    }
    jl_AbstractStringBuilder_insert(var$10, var$3.$length0, var$4);
    var$4 = new jl_String;
    var$6 = var$3.$buffer;
    var$11 = var$6.data;
    var$8 = var$3.$length0;
    var$9 = var$11.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$4;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtl_RandomScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame12;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame12;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport15.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts2.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations9 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts2.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations9 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts2.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations9 = Long_ZERO;
    }
    $this.$iterations9 = Long_add($this.$iterations9, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo((cgtr_EnhancedRandom_nextLong($this.$random5, Long_ZERO, Long_fromInt(512))));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts2.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer4;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer4;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer4;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts2.data[$x]) / Long_toNumber($this.$iterations9), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer4;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer4;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer4);
    var$3 = $this.$batch3;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch3);
    var$3 = $this.$font34;
    var$6 = $this.$batch3;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(485);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(495).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(495), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch3);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtl_RandomScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport15;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport15, 1);
};
function cgtl_ChipScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random28 = null;
    a.$batch17 = null;
    a.$renderer22 = null;
    a.$amounts18 = null;
    a.$iterations31 = Long_ZERO;
    a.$font17 = null;
    a.$viewport6 = null;
    a.$mainGame23 = null;
}
let cgtl_ChipScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font17 = $this.$mainGame23.$font0;
    var$1 = new cgtr_Chip32Random;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA1 = var$2;
    var$1.$stateB1 = var$3;
    var$1.$stateC1 = var$4;
    var$1.$stateD1 = var$5;
    $this.$random28 = var$1;
    $this.$batch17 = $this.$mainGame23.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport6 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer22 = var$1;
        var$9 = $this.$amounts18.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations31 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtl_ChipScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame23;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame23;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport6.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts18.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations31 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts18.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations31 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts18.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations31 = Long_ZERO;
    }
    $this.$iterations31 = Long_add($this.$iterations31, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo((cgtr_Chip32Random_nextLong0($this.$random28, Long_fromInt(512))));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts18.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer22;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer22;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer22;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts18.data[$x]) / Long_toNumber($this.$iterations31), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer22;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer22;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer22);
    var$3 = $this.$batch17;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch17);
    var$3 = $this.$font17;
    var$6 = $this.$batch17;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(487);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(495).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(495), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch17);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtl_ChipScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport6;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport6, 1);
};
function cgtl_ChopScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random20 = null;
    a.$batch32 = null;
    a.$renderer34 = null;
    a.$amounts15 = null;
    a.$iterations24 = Long_ZERO;
    a.$font16 = null;
    a.$viewport29 = null;
    a.$mainGame32 = null;
}
let cgtl_ChopScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font16 = $this.$mainGame32.$font0;
    var$1 = new cgtr_ChopRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA2 = var$2;
    var$1.$stateB2 = var$3;
    var$1.$stateC3 = var$4;
    var$1.$stateD3 = var$5;
    $this.$random20 = var$1;
    $this.$batch32 = $this.$mainGame32.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport29 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer34 = var$1;
        var$9 = $this.$amounts15.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations24 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtl_ChopScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame32;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame32;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport29.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts15.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations24 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts15.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations24 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts15.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations24 = Long_ZERO;
    }
    $this.$iterations24 = Long_add($this.$iterations24, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo((cgtr_ChopRandom_nextLong0($this.$random20, Long_ZERO, Long_fromInt(512))));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts15.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer34;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer34;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer34;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts15.data[$x]) / Long_toNumber($this.$iterations24), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer34;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer34;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer34);
    var$3 = $this.$batch32;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch32);
    var$3 = $this.$font16;
    var$6 = $this.$batch32;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(488);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(495).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(495), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch32);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtl_ChopScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport29;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport29, 1);
};
function cgtl_Xoshiro128PPScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random29 = null;
    a.$batch35 = null;
    a.$renderer27 = null;
    a.$amounts16 = null;
    a.$iterations17 = Long_ZERO;
    a.$font22 = null;
    a.$viewport27 = null;
    a.$mainGame26 = null;
}
let cgtl_Xoshiro128PPScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font22 = $this.$mainGame26.$font0;
    var$1 = new cgtr_Xoshiro128PlusPlusRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA3 = var$2;
    var$1.$stateB3 = var$3;
    var$1.$stateC2 = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD2 = var$5;
    $this.$random29 = var$1;
    $this.$batch35 = $this.$mainGame26.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport27 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer27 = var$1;
        var$9 = $this.$amounts16.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations17 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtl_Xoshiro128PPScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame26;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame26;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport27.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts16.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations17 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts16.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations17 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts16.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations17 = Long_ZERO;
    }
    $this.$iterations17 = Long_add($this.$iterations17, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo((cgtr_Xoshiro128PlusPlusRandom_nextLong0($this.$random29, Long_ZERO, Long_fromInt(512))));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts16.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer27;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer27;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer27;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts16.data[$x]) / Long_toNumber($this.$iterations17), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer27;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer27;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer27);
    var$3 = $this.$batch35;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch35);
    var$3 = $this.$font22;
    var$6 = $this.$batch35;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(489);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(495).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(495), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch35);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtl_Xoshiro128PPScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport27;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport27, 1);
};
function cgtl_RarxScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random3 = null;
    a.$batch25 = null;
    a.$renderer33 = null;
    a.$amounts17 = null;
    a.$iterations0 = Long_ZERO;
    a.$font33 = null;
    a.$viewport1 = null;
    a.$mainGame31 = null;
}
let cgtl_RarxScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$font33 = $this.$mainGame31.$font0;
    var$1 = new cgtr_Xoshiro160RoadroxoRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$6 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA0 = var$2;
    var$1.$stateB0 = var$3;
    var$1.$stateC = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD = var$5;
    var$1.$stateE0 = var$6;
    $this.$random3 = var$1;
    $this.$batch25 = $this.$mainGame31.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$7 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$7);
    var$7.$zoom = 1.0;
    var$8 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmp0 = var$8;
    var$7.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$7;
    $this.$viewport1 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$9 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$9.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$9);
        var$1.$ownsShader = 1;
        $this.$renderer33 = var$1;
        var$10 = $this.$amounts17.data;
        var$2 = 0;
        var$3 = var$10.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$10[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations0 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$2 = var$7.$length0;
    var$11 = var$7;
    jl_AbstractStringBuilder_insert(var$11, var$2, $rt_s(479));
    if (!var$9.$isCompiled)
        var$8 = var$9.$log0;
    else {
        var$8 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$9.$program);
        var$9.$log0 = var$8;
    }
    jl_AbstractStringBuilder_insert(var$11, var$7.$length0, var$8);
    var$8 = new jl_String;
    var$10 = var$7.$buffer;
    var$12 = var$10.data;
    var$3 = var$7.$length0;
    var$4 = var$12.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$10.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$8;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtl_RarxScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame31;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame31;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport1.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts17.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations0 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts17.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations0 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts17.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations0 = Long_ZERO;
    }
    $this.$iterations0 = Long_add($this.$iterations0, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo((cgtr_Xoshiro160RoadroxoRandom_nextLong0($this.$random3, Long_fromInt(512))));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts17.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer33;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer33;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer33;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts17.data[$x]) / Long_toNumber($this.$iterations0), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer33;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer33;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer33);
    var$3 = $this.$batch25;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch25);
    var$3 = $this.$font33;
    var$6 = $this.$batch25;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(490);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(495).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(495), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch25);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtl_RarxScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport1;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport1, 1);
};
function cgtl_AceScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random21 = null;
    a.$batch11 = null;
    a.$renderer10 = null;
    a.$amounts24 = null;
    a.$iterations27 = Long_ZERO;
    a.$font20 = null;
    a.$viewport16 = null;
    a.$mainGame5 = null;
}
let cgtl_AceScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$font20 = $this.$mainGame5.$font0;
    var$1 = new cgtr_AceRandom;
    var$1.$stateA = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateB = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateC0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateD0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateE = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    $this.$random21 = var$1;
    $this.$batch11 = $this.$mainGame5.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$2 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$2);
    var$2.$zoom = 1.0;
    var$3 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$2.$tmp0 = var$3;
    var$2.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$2;
    $this.$viewport16 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$4.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$4);
        var$1.$ownsShader = 1;
        $this.$renderer10 = var$1;
        var$5 = $this.$amounts24.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = Long_ZERO;
            var$6 = var$8;
        }
        $this.$iterations27 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$6 = var$2.$length0;
    var$9 = var$2;
    jl_AbstractStringBuilder_insert(var$9, var$6, $rt_s(479));
    if (!var$4.$isCompiled)
        var$3 = var$4.$log0;
    else {
        var$3 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
        var$4.$log0 = var$3;
    }
    jl_AbstractStringBuilder_insert(var$9, var$2.$length0, var$3);
    var$3 = new jl_String;
    var$5 = var$2.$buffer;
    var$10 = var$5.data;
    var$7 = var$2.$length0;
    var$8 = var$10.length;
    if (var$7 >= 0 && var$7 <= (var$8 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$3;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtl_AceScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame5;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame5;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport16.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts24.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations27 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts24.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations27 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts24.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations27 = Long_ZERO;
    }
    $this.$iterations27 = Long_add($this.$iterations27, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo((cgtr_EnhancedRandom_nextLong($this.$random21, Long_ZERO, Long_fromInt(512))));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts24.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer10;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer10;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer10;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts24.data[$x]) / Long_toNumber($this.$iterations27), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer10;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer10;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer10);
    var$3 = $this.$batch11;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch11);
    var$3 = $this.$font20;
    var$6 = $this.$batch11;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(491);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(495).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(495), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch11);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtl_AceScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport16;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport16, 1);
};
function cgtu_RandomScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random7 = null;
    a.$batch34 = null;
    a.$renderer12 = null;
    a.$amounts30 = null;
    a.$iterations15 = Long_ZERO;
    a.$font13 = null;
    a.$viewport5 = null;
    a.$mainGame18 = null;
}
let cgtu_RandomScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font13 = $this.$mainGame18.$font0;
    var$1 = new cgt_RandomRandom;
    var$2 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$3 = new cgt_Random;
    var$3.$haveNextNextGaussian = 0;
    cgt_Random_setSeed(var$3, Long_fromInt(1234567890));
    var$1.$base = var$3;
    cgt_Random_setSeed(var$3, var$2);
    $this.$random7 = var$1;
    $this.$batch34 = $this.$mainGame18.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$3 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$3);
    var$3.$zoom = 1.0;
    var$4 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$3.$tmp0 = var$4;
    var$3.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$3;
    $this.$viewport5 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$5 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$5.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$5);
        var$1.$ownsShader = 1;
        $this.$renderer12 = var$1;
        var$6 = $this.$amounts30.data;
        var$7 = 0;
        var$8 = var$6.length;
        if (var$7 > var$8) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$7 < var$8) {
            var$9 = var$7 + 1 | 0;
            var$6[var$7] = Long_ZERO;
            var$7 = var$9;
        }
        $this.$iterations15 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$3 = new jl_StringBuilder;
    var$3.$buffer = $rt_createCharArray(16);
    var$7 = var$3.$length0;
    var$10 = var$3;
    jl_AbstractStringBuilder_insert(var$10, var$7, $rt_s(479));
    if (!var$5.$isCompiled)
        var$4 = var$5.$log0;
    else {
        var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$5.$program);
        var$5.$log0 = var$4;
    }
    jl_AbstractStringBuilder_insert(var$10, var$3.$length0, var$4);
    var$4 = new jl_String;
    var$6 = var$3.$buffer;
    var$11 = var$6.data;
    var$8 = var$3.$length0;
    var$9 = var$11.length;
    if (var$8 >= 0 && var$8 <= (var$9 - 0 | 0)) {
        var$4.$nativeString = $rt_charArrayToString(var$6.data, 0, var$8);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$4;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtu_RandomScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame18;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame18;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport5.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts30.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations15 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts30.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations15 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts30.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations15 = Long_ZERO;
    }
    $this.$iterations15 = Long_add($this.$iterations15, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random7.$base;
        $m = Long_lo(Long_shru(Long_add(Long_shl(Long_fromNumber(cgt_Random_nextInternal(var$3, 32)), 32), Long_fromNumber(cgt_Random_nextInternal(var$3, 32))), 55));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts30.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer12;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer12;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer12;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts30.data[$x]) / Long_toNumber($this.$iterations15), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer12;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer12;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer12);
    var$3 = $this.$batch34;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch34);
    var$3 = $this.$font13;
    var$6 = $this.$batch34;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(485);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(496).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(496), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch34);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtu_RandomScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport5;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport5, 1);
};
function cgtu_ChipScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random18 = null;
    a.$batch33 = null;
    a.$renderer15 = null;
    a.$amounts21 = null;
    a.$iterations22 = Long_ZERO;
    a.$font25 = null;
    a.$viewport9 = null;
    a.$mainGame21 = null;
}
let cgtu_ChipScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font25 = $this.$mainGame21.$font0;
    var$1 = new cgtr_Chip32Random;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA1 = var$2;
    var$1.$stateB1 = var$3;
    var$1.$stateC1 = var$4;
    var$1.$stateD1 = var$5;
    $this.$random18 = var$1;
    $this.$batch33 = $this.$mainGame21.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport9 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer15 = var$1;
        var$9 = $this.$amounts21.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations22 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtu_ChipScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame21;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame21;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport9.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts21.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations22 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts21.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations22 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts21.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations22 = Long_ZERO;
    }
    $this.$iterations22 = Long_add($this.$iterations22, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo(Long_shru(cgtr_Chip32Random_nextLong($this.$random18), 55));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts21.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer15;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer15;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer15;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts21.data[$x]) / Long_toNumber($this.$iterations22), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer15;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer15;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer15);
    var$3 = $this.$batch33;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch33);
    var$3 = $this.$font25;
    var$6 = $this.$batch33;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(487);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(496).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(496), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch33);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtu_ChipScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport9;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport9, 1);
};
function cgtu_ChopScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random23 = null;
    a.$batch15 = null;
    a.$renderer = null;
    a.$amounts25 = null;
    a.$iterations13 = Long_ZERO;
    a.$font3 = null;
    a.$viewport33 = null;
    a.$mainGame27 = null;
}
let cgtu_ChopScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font3 = $this.$mainGame27.$font0;
    var$1 = new cgtr_ChopRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA2 = var$2;
    var$1.$stateB2 = var$3;
    var$1.$stateC3 = var$4;
    var$1.$stateD3 = var$5;
    $this.$random23 = var$1;
    $this.$batch15 = $this.$mainGame27.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport33 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer = var$1;
        var$9 = $this.$amounts25.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations13 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtu_ChopScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame27;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame27;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport33.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts25.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations13 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts25.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations13 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts25.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations13 = Long_ZERO;
    }
    $this.$iterations13 = Long_add($this.$iterations13, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo(Long_shru(cgtr_ChopRandom_nextLong($this.$random23), 55));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts25.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts25.data[$x]) / Long_toNumber($this.$iterations13), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer);
    var$3 = $this.$batch15;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch15);
    var$3 = $this.$font3;
    var$6 = $this.$batch15;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(488);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(496).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(496), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch15);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtu_ChopScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport33;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport33, 1);
};
function cgtu_Xoshiro128PPScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random4 = null;
    a.$batch6 = null;
    a.$renderer3 = null;
    a.$amounts12 = null;
    a.$iterations30 = Long_ZERO;
    a.$font24 = null;
    a.$viewport25 = null;
    a.$mainGame6 = null;
}
let cgtu_Xoshiro128PPScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $this.$font24 = $this.$mainGame6.$font0;
    var$1 = new cgtr_Xoshiro128PlusPlusRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA3 = var$2;
    var$1.$stateB3 = var$3;
    var$1.$stateC2 = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD2 = var$5;
    $this.$random4 = var$1;
    $this.$batch6 = $this.$mainGame6.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$6 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$6);
    var$6.$zoom = 1.0;
    var$7 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$6.$tmp0 = var$7;
    var$6.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$6;
    $this.$viewport25 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$8 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$8.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$8);
        var$1.$ownsShader = 1;
        $this.$renderer3 = var$1;
        var$9 = $this.$amounts12.data;
        var$2 = 0;
        var$3 = var$9.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$9[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations30 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$6 = new jl_StringBuilder;
    var$6.$buffer = $rt_createCharArray(16);
    var$2 = var$6.$length0;
    var$10 = var$6;
    jl_AbstractStringBuilder_insert(var$10, var$2, $rt_s(479));
    if (!var$8.$isCompiled)
        var$7 = var$8.$log0;
    else {
        var$7 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$8.$program);
        var$8.$log0 = var$7;
    }
    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, var$7);
    var$7 = new jl_String;
    var$9 = var$6.$buffer;
    var$11 = var$9.data;
    var$3 = var$6.$length0;
    var$4 = var$11.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$7;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtu_Xoshiro128PPScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame6;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame6;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport25.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts12.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations30 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts12.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations30 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts12.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations30 = Long_ZERO;
    }
    $this.$iterations30 = Long_add($this.$iterations30, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo(Long_shru(cgtr_Xoshiro128PlusPlusRandom_nextLong($this.$random4), 55));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts12.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer3;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer3;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer3;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts12.data[$x]) / Long_toNumber($this.$iterations30), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer3;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer3;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer3);
    var$3 = $this.$batch6;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch6);
    var$3 = $this.$font24;
    var$6 = $this.$batch6;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(489);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(496).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(496), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch6);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtu_Xoshiro128PPScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport25;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport25, 1);
};
function cgtu_RarxScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random12 = null;
    a.$batch7 = null;
    a.$renderer30 = null;
    a.$amounts32 = null;
    a.$iterations8 = Long_ZERO;
    a.$font27 = null;
    a.$viewport34 = null;
    a.$mainGame33 = null;
}
let cgtu_RarxScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$font27 = $this.$mainGame33.$font0;
    var$1 = new cgtr_Xoshiro160RoadroxoRandom;
    var$2 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$3 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$4 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$5 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$6 = Long_lo(Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19)));
    var$1.$stateA0 = var$2;
    var$1.$stateB0 = var$3;
    var$1.$stateC = var$4;
    if (!(var$2 | var$3 | var$4 | var$5))
        var$5 = 1;
    var$1.$stateD = var$5;
    var$1.$stateE0 = var$6;
    $this.$random12 = var$1;
    $this.$batch7 = $this.$mainGame33.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$7 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$7);
    var$7.$zoom = 1.0;
    var$8 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmp0 = var$8;
    var$7.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$7;
    $this.$viewport34 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$9 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$9.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$9);
        var$1.$ownsShader = 1;
        $this.$renderer30 = var$1;
        var$10 = $this.$amounts32.data;
        var$2 = 0;
        var$3 = var$10.length;
        if (var$2 > var$3) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$2 < var$3) {
            var$4 = var$2 + 1 | 0;
            var$10[var$2] = Long_ZERO;
            var$2 = var$4;
        }
        $this.$iterations8 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$2 = var$7.$length0;
    var$11 = var$7;
    jl_AbstractStringBuilder_insert(var$11, var$2, $rt_s(479));
    if (!var$9.$isCompiled)
        var$8 = var$9.$log0;
    else {
        var$8 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$9.$program);
        var$9.$log0 = var$8;
    }
    jl_AbstractStringBuilder_insert(var$11, var$7.$length0, var$8);
    var$8 = new jl_String;
    var$10 = var$7.$buffer;
    var$12 = var$10.data;
    var$3 = var$7.$length0;
    var$4 = var$12.length;
    if (var$3 >= 0 && var$3 <= (var$4 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$10.data, 0, var$3);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$8;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtu_RarxScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, $m, $color, var$12, var$13, var$14, var$15, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame33;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame33;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport34.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts32.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations8 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts32.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations8 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts32.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations8 = Long_ZERO;
    }
    $this.$iterations8 = Long_add($this.$iterations8, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        $m = Long_lo(Long_shru(cgtr_Xoshiro160RoadroxoRandom_nextLong($this.$random12), 55));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts32.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer30;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer30;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer30;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts32.data[$x]) / Long_toNumber($this.$iterations8), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer30;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer30;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer30);
    var$3 = $this.$batch7;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch7);
    var$3 = $this.$font27;
    var$6 = $this.$batch7;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(490);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$12 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$12 = new jl_Integer;
        var$12.$value = $j;
    }
    var$8[1] = var$12;
    var$12 = new jl_StringBuilder;
    var$12.$buffer = $rt_createCharArray($rt_s(496).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$12, $rt_s(496), var$2);
    var$13 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$13.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$14 = var$3.$cache;
        $m = var$13.$nativeString.length;
        var$15 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$12 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$12 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$12, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$12 = null;
            }
            $camera.$constructor = var$12;
            if (var$12 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$12 = $camera.$freeObjects;
            $x = var$12.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$12.$size = $x;
                var$2 = var$12.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$12 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$12.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$14 = var$3;
                        jl_StringBuilder_insert(var$14, $i, $rt_s(39));
                        var$15 = var$12.$constructor.$constructor0.$declaringClass;
                        if (var$15.$name === null)
                            var$15.$name = $rt_str(var$15.$platformClass.$meta.name);
                        var$12 = var$15.$name;
                        jl_StringBuilder_insert(var$14, var$3.$length0, var$12);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$14.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$14.$font, var$13, 0, $m, var$14.$color, 384.0, 1, 1, var$15);
        cbggg_BitmapFontCache_addToCache(var$14, $camera, 64.0, 522.0 + var$14.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch7);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtu_RarxScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport34;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport34, 1);
};
function cgtu_AceScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$random31 = null;
    a.$batch29 = null;
    a.$renderer28 = null;
    a.$amounts4 = null;
    a.$iterations12 = Long_ZERO;
    a.$font7 = null;
    a.$viewport26 = null;
    a.$mainGame25 = null;
}
let cgtu_AceScreen_show = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $this.$font7 = $this.$mainGame25.$font0;
    var$1 = new cgtr_AceRandom;
    var$1.$stateA = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateB = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateC0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateD0 = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    var$1.$stateE = Long_xor(Long_fromNumber((jl_Math_randomImpl() - 0.5) * 4.503599627370496E15), Long_fromNumber((jl_Math_randomImpl() - 0.5) * 1.8446744073709552E19));
    $this.$random31 = var$1;
    $this.$batch29 = $this.$mainGame25.$batch;
    var$1 = new cbguv_ScreenViewport;
    var$2 = new cbgg_OrthographicCamera;
    cbgg_Camera__init_(var$2);
    var$2.$zoom = 1.0;
    var$3 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$2.$tmp0 = var$3;
    var$2.$near = 0.0;
    var$1.$tmp = new cbgm_Vector3;
    var$1.$unitsPerPixel = 1.0;
    var$1.$camera = var$2;
    $this.$viewport26 = var$1;
    var$1 = new cbggg_ImmediateModeRenderer20;
    var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
    if (var$4.$isCompiled) {
        cbggg_ImmediateModeRenderer20__init_(var$1, 1536, 0, 1, 0, var$4);
        var$1.$ownsShader = 1;
        $this.$renderer28 = var$1;
        var$5 = $this.$amounts4.data;
        var$6 = 0;
        var$7 = var$5.length;
        if (var$6 > var$7) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$6 < var$7) {
            var$8 = var$6 + 1 | 0;
            var$5[var$6] = Long_ZERO;
            var$6 = var$8;
        }
        $this.$iterations12 = Long_ZERO;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$6 = var$2.$length0;
    var$9 = var$2;
    jl_AbstractStringBuilder_insert(var$9, var$6, $rt_s(479));
    if (!var$4.$isCompiled)
        var$3 = var$4.$log0;
    else {
        var$3 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
        var$4.$log0 = var$3;
    }
    jl_AbstractStringBuilder_insert(var$9, var$2.$length0, var$3);
    var$3 = new jl_String;
    var$5 = var$2.$buffer;
    var$10 = var$5.data;
    var$7 = var$2.$length0;
    var$8 = var$10.length;
    if (var$7 >= 0 && var$7 <= (var$8 - 0 | 0)) {
        var$3.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$3;
        $rt_throw(var$1);
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cgtu_AceScreen_render = ($this, $delta) => {
    let var$2, var$3, $i, $x, var$6, $camera, var$8, $j, var$10, var$11, var$12, var$13, var$14, var$15, $m, $color, var$18, var$19, var$20, var$21, $$je;
    var$2 = cbg_Gdx_input.$justPressedKeys.data;
    if (var$2[71]) {
        var$3 = $this.$mainGame25;
        $i = var$3.$screenIndex;
        var$2 = var$3.$screens.data;
        $x = var$2.length;
        $i = (($i + $x | 0) - 1 | 0) % $x | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[72]) {
        var$3 = $this.$mainGame25;
        $i = var$3.$screenIndex + 1 | 0;
        var$2 = var$3.$screens.data;
        $i = $i % var$2.length | 0;
        var$3.$screenIndex = $i;
        var$6 = var$2[$i];
        var$3 = var$3;
        var$3.$screen = var$6;
        if (var$6 !== null) {
            var$6.$show();
            var$3.$screen.$resize0(cbg_Gdx_graphics.$canvas.width, cbg_Gdx_graphics.$canvas.height);
        }
        return;
    }
    if (var$2[111])
        return;
    cbg_Gdx_gl.$glClearColor(1.0, 1.0, 1.0, 1.0);
    cbg_Gdx_gl.$glClear(16384);
    $camera = $this.$viewport26.$camera;
    cbgg_OrthographicCamera_update($camera, 1);
    var$8 = cbg_Gdx_input.$pressedKeys.data;
    if (var$8[29]) {
        var$2 = $this.$amounts4.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations12 = Long_ZERO;
    }
    if (var$8[30]) {
        var$2 = $this.$amounts4.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations12 = Long_ZERO;
    }
    if (var$8[31]) {
        var$2 = $this.$amounts4.data;
        $i = 0;
        $x = var$2.length;
        if ($i > $x) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        while ($i < $x) {
            $j = $i + 1 | 0;
            var$2[$i] = Long_ZERO;
            $i = $j;
        }
        $this.$iterations12 = Long_ZERO;
    }
    $this.$iterations12 = Long_add($this.$iterations12, Long_fromInt(1));
    $i = 0;
    while ($i < 524288) {
        var$3 = $this.$random31;
        var$10 = var$3.$stateA;
        var$11 = var$3.$stateB;
        var$12 = var$3.$stateC0;
        var$13 = var$3.$stateD0;
        var$14 = var$3.$stateE;
        var$3.$stateA = Long_add(var$10, Long_create(2135587861, 2654435769));
        var$3.$stateB = Long_xor(var$10, var$14);
        var$3.$stateC0 = Long_add(var$11, var$13);
        var$3.$stateD0 = Long_or(Long_shl(var$12, 52), Long_shru(var$12, 12));
        var$15 = Long_sub(var$11, var$12);
        var$3.$stateE = var$15;
        $m = Long_lo(Long_shru(var$15, 55));
        if ($m >= 0 && $m < 512) {
            var$2 = $this.$amounts4.data;
            var$2[$m] = Long_add(var$2[$m], Long_fromInt(1));
        }
        $i = $i + 1 | 0;
    }
    var$3 = $this.$renderer28;
    var$6 = $camera.$combined;
    cbgm_Matrix4_set(var$3.$projModelView, var$6.$val);
    var$3.$primitiveType = 1;
    $x = 0;
    while ($x < 512) {
        $color = $x & 63 ? (-1.5436749266448052E38) : (-1.5203096921934465E38);
        var$3 = $this.$renderer28;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        $delta = $x;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0, 0.0);
        var$3 = $this.$renderer28;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = $color;
        cbggg_ImmediateModeRenderer20_vertex(var$3, $delta, 0.0625 * Long_toNumber($this.$amounts4.data[$x]) / Long_toNumber($this.$iterations12), 0.0);
        $x = $x + 1 | 0;
    }
    $j = 8;
    while ($j < 520) {
        var$3 = $this.$renderer28;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        $color = $j;
        cbggg_ImmediateModeRenderer20_vertex(var$3, 0.0, $color, 0.0);
        var$3 = $this.$renderer28;
        var$3.$vertices.data[var$3.$vertexIdx + var$3.$colorOffset | 0] = (-6.221923240859403E37);
        cbggg_ImmediateModeRenderer20_vertex(var$3, 10.0, $color, 0.0);
        $j = $j + 32 | 0;
    }
    cbggg_ImmediateModeRenderer20_flush($this.$renderer28);
    var$3 = $this.$batch29;
    var$6 = $camera.$combined;
    if (var$3.$drawing)
        cbggg_SpriteBatch_flush(var$3);
    cbgm_Matrix4_set(var$3.$projectionMatrix, var$6.$val);
    if (var$3.$drawing)
        cbggg_SpriteBatch_setupMatrices(var$3);
    cbggg_SpriteBatch_begin($this.$batch29);
    var$3 = $this.$font7;
    var$6 = $this.$batch29;
    var$2 = $rt_createArray(jl_Object, 2);
    var$8 = var$2.data;
    var$8[0] = $rt_s(491);
    $j = cbg_Gdx_graphics.$fps | 0;
    if ($j >= (-128) && $j <= 127) {
        jl_Integer_ensureIntegerCache();
        var$18 = jl_Integer_integerCache.data[$j + 128 | 0];
    } else {
        var$18 = new jl_Integer;
        var$18.$value = $j;
    }
    var$8[1] = var$18;
    var$18 = new jl_StringBuilder;
    var$18.$buffer = $rt_createCharArray($rt_s(496).$nativeString.length);
    $camera = cgtd_Stringf_appendf(var$18, $rt_s(496), var$2);
    var$19 = new jl_String;
    var$2 = $camera.$buffer;
    var$8 = var$2.data;
    $x = $camera.$length0;
    $j = var$8.length;
    if ($x >= 0 && $x <= ($j - 0 | 0)) {
        var$19.$nativeString = $rt_charArrayToString(var$2.data, 0, $x);
        cbggg_BitmapFontCache_clear(var$3.$cache);
        var$20 = var$3.$cache;
        $m = var$19.$nativeString.length;
        var$21 = null;
        cbgu_Pools_$callClinit();
        $camera = cbgu_Pools_typePools;
        $x = cbgu_ObjectMap_locateKey($camera, $rt_cls(cbggg_GlyphLayout));
        $camera = $x < 0 ? null : $camera.$valueTable.data[$x];
        if ($camera === null) {
            $camera = new cbgu_ReflectionPool;
            jl_Object__init_($camera);
            $camera.$freeObjects = cbgu_Array__init_(0, 4);
            $camera.$max1 = 100;
            a: {
                try {
                    var$18 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$18 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$18, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$18 = null;
            }
            $camera.$constructor = var$18;
            if (var$18 === null) {
                var$3 = new jl_RuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(33));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append(var$6, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$6));
                $rt_throw(var$3);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), $camera);
        }
        b: {
            var$18 = $camera.$freeObjects;
            $x = var$18.$size;
            if ($x) {
                if (!$x) {
                    var$3 = new jl_IllegalStateException;
                    jl_Exception__init_(var$3, $rt_s(38));
                    $rt_throw(var$3);
                }
                $x = $x - 1 | 0;
                var$18.$size = $x;
                var$2 = var$18.$items.data;
                $camera = var$2[$x];
                var$2[$x] = null;
            } else {
                var$18 = $camera;
                try {
                    $camera = cbgur_Constructor_newInstance(var$18.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$6 = $$je;
                        $camera = new cbgu_GdxRuntimeException;
                        var$3 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_0(var$3, 16);
                        $i = var$3.$length0;
                        var$20 = var$3;
                        jl_StringBuilder_insert(var$20, $i, $rt_s(39));
                        var$21 = var$18.$constructor.$constructor0.$declaringClass;
                        if (var$21.$name === null)
                            var$21.$name = $rt_str(var$21.$platformClass.$meta.name);
                        var$18 = var$21.$name;
                        jl_StringBuilder_insert(var$20, var$3.$length0, var$18);
                        jl_Exception__init_1($camera, jl_String__init_(var$3.$buffer, 0, var$3.$length0), var$6);
                        $rt_throw($camera);
                    } else {
                        throw $$e;
                    }
                }
            }
        }
        $camera = $camera;
        cbgu_Array_add(var$20.$pooledLayouts, $camera);
        cbggg_GlyphLayout_setText($camera, var$20.$font, var$19, 0, $m, var$20.$color, 384.0, 1, 1, var$21);
        cbggg_BitmapFontCache_addToCache(var$20, $camera, 64.0, 522.0 + var$20.$font.$data0.$ascent);
        cbggg_BitmapFontCache_draw(var$3.$cache, var$6);
        cbggg_SpriteBatch_end($this.$batch29);
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_(var$3);
    $rt_throw(var$3);
},
cgtu_AceScreen_resize = ($this, $width, $height) => {
    let var$3, var$4, var$5, var$6;
    var$3 = $this.$viewport26;
    var$4 = var$3;
    var$4.$screenX = 0;
    var$4.$screenY = 0;
    var$4.$screenWidth = $width;
    var$4.$screenHeight = $height;
    var$5 = $width;
    var$6 = var$3.$unitsPerPixel;
    var$5 = var$5 * var$6;
    var$6 = $height * var$6;
    var$4.$worldWidth = var$5;
    var$4.$worldHeight = var$6;
    cbguv_Viewport_apply(var$4, 1);
    cbguv_Viewport_apply($this.$viewport26, 1);
};
function jl_Thread$start$lambda$_4_0() {
    jl_Object.call(this);
    this.$_0 = null;
}
let jl_Thread$start$lambda$_4_0_run = var$0 => {
    jl_Thread_runThread(var$0.$_0);
},
cgxgbtfi_IndexedDBFileData = $rt_classWithoutFields(),
cgxgbtfi_IndexedDBFileData_create$js_body$_5 = (var$1, var$2) => {
    return { type : var$1, date : var$2 };
};
function cgxgbtft_LocalDBStorage$putFile$lambda$_2_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
let cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = var$1.$_01;
    if (jl_System_errCache === null) {
        var$2 = new otcic_JSStderrPrintStream;
        var$3 = null;
        var$4 = null;
        jl_Object__init_(var$2);
        var$2.$out = var$3;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_0(var$3, 16);
        var$2.$sb = var$3;
        var$2.$buffer1 = $rt_createCharArray(32);
        var$2.$autoFlush = 0;
        var$2.$charset = var$4;
        jl_System_errCache = var$2;
    }
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$5 = var$2.$length0;
    var$4 = var$2;
    var$6 = $rt_s(497);
    var$3 = var$4;
    jl_StringBuilder_insert0(var$3, var$5, var$6);
    jl_StringBuilder_insert0(var$3, var$2.$length0, var$1 === null ? $rt_s(1) : var$1);
    var$1 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$9 = var$2.$length0;
    var$10 = var$8.length;
    if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
        $rt_putStderr($rt_ustr(var$1));
        $rt_putStderr("\n");
        return;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException),
otjc_JSNumber = $rt_classWithoutFields();
function cgxgbta_Blob() {
    let a = this; jl_Object.call(a);
    a.$response = null;
    a.$data2 = null;
}
function cbggg_BitmapFont$BitmapFontData() {
    let a = this; jl_Object.call(a);
    a.$name5 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped = 0;
    a.$padTop = 0.0;
    a.$padRight = 0.0;
    a.$padBottom = 0.0;
    a.$padLeft = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY = 0.0;
    a.$markupEnabled = 0;
    a.$glyphs0 = null;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
let cbggg_BitmapFont$BitmapFontData__init_0 = ($this, $fontFile, $flip) => {
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX = 1.0;
    $this.$scaleY = 1.0;
    $this.$glyphs0 = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
    $this.$xHeight = 1.0;
    $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
    $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
    $this.$fontFile = $fontFile;
    $this.$flipped = $flip;
    cbggg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip);
},
cbggg_BitmapFont$BitmapFontData__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_BitmapFont$BitmapFontData();
    cbggg_BitmapFont$BitmapFontData__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_BitmapFont$BitmapFontData_load = ($this, $fontFile, $flip) => {
    let $tokens, $glyph, $ch, $reader, $glyph_0, $line, $xadvanceGlyph, $padding, $padY, $p, $baseLine, $pageCount, $matcher, $id, $ex, $fileName, $first, $second, $amount, $hasMetricsOverride, $overrideAscent, $overrideDescent, $overrideDown, $overrideCapHeight, $overrideLineHeight, $overrideSpaceXAdvance, $overrideXHeight, $spaceGlyph, var$31, $xGlyph, $capGlyph, $page, $common, $$je;
    if ($this.$imagePaths !== null) {
        $fontFile = new jl_IllegalStateException;
        $fontFile.$suppressionEnabled = 1;
        $fontFile.$writableStackTrace = 1;
        $fontFile.$message = $rt_s(498);
        $rt_throw($fontFile);
    }
    $tokens = $fontFile;
    $glyph = $tokens.$file;
    $ch = jl_String_lastIndexOf($glyph, 47, $glyph.$nativeString.length - 1 | 0);
    if ($ch < 0)
        $glyph = $tokens.$file;
    else {
        $glyph = $tokens.$file;
        $glyph = jl_String_substring($glyph, $ch + 1 | 0, $glyph.$nativeString.length);
    }
    $ch = jl_String_lastIndexOf($glyph, 46, $glyph.$nativeString.length - 1 | 0);
    if ($ch != (-1))
        $glyph = jl_String_substring($glyph, 0, $ch);
    $this.$name5 = $glyph;
    $reader = new ji_BufferedReader;
    $glyph = new ji_InputStreamReader;
    $glyph_0 = cgxgbt_TeaFileHandle_read($tokens);
    $line = jnci_UTF8Charset_INSTANCE;
    $xadvanceGlyph = new jnci_UTF8Decoder;
    jnc_CharsetDecoder__init_($xadvanceGlyph, $line, 0.3333333432674408, 0.5);
    $xadvanceGlyph.$inArray = $rt_createByteArray(512);
    $xadvanceGlyph.$outArray = $rt_createCharArray(512);
    $line = jnc_CodingErrorAction_REPLACE;
    if ($line === null) {
        $glyph = new jl_IllegalArgumentException;
        $glyph.$suppressionEnabled = 1;
        $glyph.$writableStackTrace = 1;
        $glyph.$message = $rt_s(499);
        $rt_throw($glyph);
    }
    $xadvanceGlyph.$malformedAction = $line;
    $xadvanceGlyph.$unmappableAction = $line;
    ji_InputStreamReader__init_($glyph, $glyph_0, $xadvanceGlyph);
    $reader.$lock = new jl_Object;
    $reader.$mark0 = (-1);
    $reader.$innerReader = $glyph;
    $reader.$buffer8 = $rt_createCharArray(512);
    a: {
        b: {
            try {
                $line = ji_BufferedReader_readLine($reader);
                if ($line === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(500)));
                $glyph = jl_String_substring0($line, jl_String_indexOf2($line, $rt_s(501)) + 8 | 0);
                $padding = (jl_String_split(jl_String_substring($glyph, 0, jl_String_indexOf1($glyph, 32)), $rt_s(502), 4)).data;
                if ($padding.length != 4)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(503)));
                $this.$padTop = jl_Integer_parseInt($padding[0]);
                $this.$padRight = jl_Integer_parseInt($padding[1]);
                $this.$padBottom = jl_Integer_parseInt($padding[2]);
                $this.$padLeft = jl_Integer_parseInt($padding[3]);
                $padY = $this.$padTop + $this.$padBottom;
                $glyph = ji_BufferedReader_readLine($reader);
                if ($glyph === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(504)));
                $padding = (jl_String_split($glyph, $rt_s(419), 9)).data;
                $p = $padding.length;
                if ($p < 3)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(505)));
                if (!jl_String_startsWith($padding[1], $rt_s(506)))
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(507)));
                $this.$lineHeight = jl_Integer_parseInt(jl_String_substring0($padding[1], 11));
                if (!jl_String_startsWith($padding[2], $rt_s(508)))
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(509)));
                c: {
                    $baseLine = jl_Integer_parseInt(jl_String_substring0($padding[2], 5));
                    $pageCount = 1;
                    if ($p < 6)
                        $ch = $pageCount;
                    else if ($padding[5] === null)
                        $ch = $pageCount;
                    else if (!jl_String_startsWith($padding[5], $rt_s(510)))
                        $ch = $pageCount;
                    else {
                        try {
                            $ch = jl_Math_max0(1, jl_Integer_parseInt(jl_String_substring0($padding[5], 6)));
                            $pageCount = $ch;
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                            } else {
                                throw $$e;
                            }
                        }
                        $ch = $pageCount;
                    }
                }
                $this.$imagePaths = $rt_createArray(jl_String, $ch);
                $p = 0;
                d: {
                    e: {
                        f: {
                            while (true) {
                                if ($p >= $ch)
                                    break d;
                                $glyph = ji_BufferedReader_readLine($reader);
                                if ($glyph === null)
                                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(511)));
                                g: {
                                    $matcher = jur_Pattern_matcher(jur_Pattern_compile0($rt_s(512)), $glyph);
                                    if (jur_Matcher_find($matcher)) {
                                        $id = jur_Matcher_group($matcher, 1);
                                        try {
                                            if (jl_Integer_parseInt($id) != $p)
                                                break f;
                                            break g;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_NumberFormatException) {
                                                $ex = $$je;
                                                break e;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                }
                                $glyph = jur_Pattern_matcher(jur_Pattern_compile0($rt_s(513)), $glyph);
                                if (!jur_Matcher_find($glyph))
                                    break;
                                $fileName = jur_Matcher_group($glyph, 1);
                                $this.$imagePaths.data[$p] = jl_String_replaceAll(cgxgbt_TeaFileHandle_path(cgxgbt_TeaFileHandle_child(cgxgbt_TeaFileHandle_parent($tokens), $fileName)), $rt_s(514), $rt_s(113));
                                $p = $p + 1 | 0;
                            }
                            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(515)));
                        }
                        try {
                            $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_(), $rt_s(516)), $id))));
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                                $ex = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder__init_(), $rt_s(517)), $id)), $ex));
                }
                $this.$descent = 0.0;
                h: {
                    while (true) {
                        $glyph = ji_BufferedReader_readLine($reader);
                        if ($glyph === null)
                            break;
                        if (jl_String_startsWith($glyph, $rt_s(518)))
                            break h;
                        if (jl_String_startsWith($glyph, $rt_s(519)))
                            break h;
                        if (!jl_String_startsWith($glyph, $rt_s(520)))
                            continue;
                        $glyph_0 = cbggg_BitmapFont$Glyph__init_();
                        $tokens = ju_StringTokenizer__init_($glyph, $rt_s(521));
                        ju_StringTokenizer_nextToken($tokens);
                        ju_StringTokenizer_nextToken($tokens);
                        $ch = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if ($ch <= 0)
                            $this.$missingGlyph = $glyph_0;
                        else {
                            if ($ch > 65535)
                                continue;
                            cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph_0);
                        }
                        $glyph_0.$id = $ch;
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph_0.$srcX = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph_0.$srcY = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph_0.$width0 = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph_0.$height0 = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph_0.$xoffset = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        if ($flip)
                            $glyph_0.$yoffset = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        else
                            $glyph_0.$yoffset =  -($glyph_0.$height0 + jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens)) | 0) | 0;
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph_0.$xadvance = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if (ju_StringTokenizer_hasMoreTokens($tokens))
                            ju_StringTokenizer_nextToken($tokens);
                        i: {
                            if (ju_StringTokenizer_hasMoreTokens($tokens))
                                try {
                                    $glyph_0.$page = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                                    break i;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_NumberFormatException) {
                                    } else {
                                        throw $$e;
                                    }
                                }
                        }
                        if ($glyph_0.$width0 > 0 && $glyph_0.$height0 > 0)
                            $this.$descent = jl_Math_min($baseLine + $glyph_0.$yoffset, $this.$descent);
                    }
                }
                $this.$descent = $this.$descent + $this.$padBottom;
                j: {
                    while (true) {
                        $glyph = ji_BufferedReader_readLine($reader);
                        if ($glyph === null)
                            break;
                        if (!jl_String_startsWith($glyph, $rt_s(522)))
                            break j;
                        $tokens = ju_StringTokenizer__init_($glyph, $rt_s(521));
                        ju_StringTokenizer_nextToken($tokens);
                        ju_StringTokenizer_nextToken($tokens);
                        $first = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $second = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if ($first < 0)
                            continue;
                        if ($first > 65535)
                            continue;
                        if ($second < 0)
                            continue;
                        if ($second > 65535)
                            continue;
                        $glyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $first & 65535);
                        ju_StringTokenizer_nextToken($tokens);
                        $amount = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if ($glyph !== null)
                            cbggg_BitmapFont$Glyph_setKerning($glyph, $second, $amount);
                    }
                }
                $hasMetricsOverride = 0;
                $overrideAscent = 0.0;
                $overrideDescent = 0.0;
                $overrideDown = 0.0;
                $overrideCapHeight = 0.0;
                $overrideLineHeight = 0.0;
                $overrideSpaceXAdvance = 0.0;
                $overrideXHeight = 0.0;
                if ($glyph !== null && jl_String_startsWith($glyph, $rt_s(519))) {
                    $hasMetricsOverride = 1;
                    $tokens = ju_StringTokenizer__init_($glyph, $rt_s(521));
                    ju_StringTokenizer_nextToken($tokens);
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideAscent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideDescent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideDown = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideCapHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideLineHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideSpaceXAdvance = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideXHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                }
                $spaceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 32);
                if ($spaceGlyph === null) {
                    $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
                    $spaceGlyph.$id = 32;
                    $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 108);
                    if ($xadvanceGlyph === null)
                        $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                    $spaceGlyph.$xadvance = $xadvanceGlyph.$xadvance;
                    cbggg_BitmapFont$BitmapFontData_setGlyph($this, 32, $spaceGlyph);
                }
                if (!$spaceGlyph.$width0) {
                    var$31 = $this.$padLeft;
                    $spaceGlyph.$width0 = var$31 + $spaceGlyph.$xadvance + $this.$padRight | 0;
                    $spaceGlyph.$xoffset =  -var$31 | 0;
                }
                $this.$spaceXadvance = $spaceGlyph.$xadvance;
                $xGlyph = null;
                $padding = $this.$xChars.data;
                $ch = $padding.length;
                $p = 0;
                k: {
                    while ($p < $ch) {
                        $xGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                        if ($xGlyph !== null)
                            break k;
                        $p = $p + 1 | 0;
                    }
                }
                if ($xGlyph === null)
                    $xGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                $this.$xHeight = $xGlyph.$height0 - $padY;
                $capGlyph = null;
                $padding = $this.$capChars.data;
                $ch = $padding.length;
                $p = 0;
                l: {
                    while ($p < $ch) {
                        $capGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                        if ($capGlyph !== null)
                            break l;
                        $p = $p + 1 | 0;
                    }
                }
                if ($capGlyph !== null)
                    $this.$capHeight = $capGlyph.$height0;
                else {
                    $padding = $this.$glyphs0.data;
                    $pageCount = $padding.length;
                    $ch = 0;
                    while ($ch < $pageCount) {
                        m: {
                            $page = $padding[$ch];
                            if ($page !== null) {
                                $common = $page.data;
                                $p = $common.length;
                                $first = 0;
                                while (true) {
                                    if ($first >= $p)
                                        break m;
                                    $glyph = $common[$first];
                                    if ($glyph !== null) {
                                        $second = $glyph.$height0;
                                        if ($second && $glyph.$width0)
                                            $this.$capHeight = jl_Math_max($this.$capHeight, $second);
                                    }
                                    $first = $first + 1 | 0;
                                }
                            }
                        }
                        $ch = $ch + 1 | 0;
                    }
                }
                $padY = $this.$capHeight - $padY;
                $this.$capHeight = $padY;
                $baseLine = $baseLine - $padY;
                $this.$ascent = $baseLine;
                $padY =  -$this.$lineHeight;
                $this.$down = $padY;
                if ($flip) {
                    $this.$ascent =  -$baseLine;
                    $this.$down =  -$padY;
                }
                if ($hasMetricsOverride) {
                    $this.$ascent = $overrideAscent;
                    $this.$descent = $overrideDescent;
                    $this.$down = $overrideDown;
                    $this.$capHeight = $overrideCapHeight;
                    $this.$lineHeight = $overrideLineHeight;
                    $this.$spaceXadvance = $overrideSpaceXAdvance;
                    $this.$xHeight = $overrideXHeight;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break b;
                } else{
                    $fontFile = $$je;
                    break a;
                }
            }
            n: {
                try {
                    ji_BufferedReader_close($reader);
                    break n;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
            }
            return;
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder__init_(), $rt_s(523)), $fontFile)), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $fontFile = $$je;

        }
    }
    o: {
        try {
            ji_BufferedReader_close($reader);
            break o;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
            } else {
                throw $$e;
            }
        }
    }
    $rt_throw($fontFile);
},
cbggg_BitmapFont$BitmapFontData_setGlyphRegion = ($this, $glyph, $region) => {
    let $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, var$13, $x, var$15, $x2, $y, var$18, $y2, $amount;
    $texture = $region.$texture.$data1;
    $invTexWidth = 1.0 / $texture.$width1;
    $invTexHeight = 1.0 / $texture.$height1;
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u0;
    $v = $region.$v0;
    $regionWidth = $region.$regionWidth;
    $regionHeight = $region.$regionHeight;
    if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX;
        $offsetY = ($atlasRegion.$originalHeight - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY;
    }
    var$13 = $glyph.$srcX;
    $x = var$13;
    var$15 = $glyph.$width0;
    $x2 = var$13 + var$15 | 0;
    var$13 = $glyph.$srcY;
    $y = var$13;
    var$18 = $glyph.$height0;
    $y2 = var$13 + var$18 | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width0 = var$15 + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        $offsetX = $x2 - $offsetX;
        if ($offsetX <= $regionWidth)
            $regionWidth = $offsetX;
        else
            $glyph.$width0 = $glyph.$width0 - ($offsetX - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            var$13 = var$18 + $y | 0;
            $glyph.$height0 = var$13;
            if (var$13 < 0)
                $glyph.$height0 = 0;
            $y = 0.0;
        }
        $offsetX = $y2 - $offsetY;
        if ($offsetX <= $regionHeight)
            $regionHeight = $offsetX;
        else {
            $amount = $offsetX - $regionHeight;
            $glyph.$height0 = $glyph.$height0 - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u = $u + $x * $invTexWidth;
    $glyph.$u2 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped) {
        $glyph.$v2 = $v + $y * $invTexHeight;
        $glyph.$v = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v = $v + $y * $invTexHeight;
        $glyph.$v2 = $v + $regionHeight * $invTexHeight;
    }
},
cbggg_BitmapFont$BitmapFontData_setGlyph = ($this, $ch, $glyph) => {
    let var$3, var$4, $page;
    var$3 = $this.$glyphs0.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
},
cbggg_BitmapFont$BitmapFontData_getFirstGlyph = $this => {
    let var$1, var$2, var$3, var$4, $page, var$6, var$7, $glyph;
    var$1 = $this.$glyphs0.data;
    var$2 = var$1.length;
    var$3 = 0;
    a: while (true) {
        if (var$3 >= var$2) {
            var$4 = new cbgu_GdxRuntimeException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = $rt_s(524);
            $rt_throw(var$4);
        }
        b: {
            $page = var$1[var$3];
            if ($page !== null) {
                $page = $page.data;
                var$6 = $page.length;
                var$7 = 0;
                while (true) {
                    if (var$7 >= var$6)
                        break b;
                    $glyph = $page[var$7];
                    if ($glyph !== null && $glyph.$height0 && $glyph.$width0)
                        break a;
                    var$7 = var$7 + 1 | 0;
                }
            }
        }
        var$3 = var$3 + 1 | 0;
    }
    return $glyph;
},
cbggg_BitmapFont$BitmapFontData_getGlyph = ($this, $ch) => {
    let $page;
    $page = $this.$glyphs0.data[$ch / 512 | 0];
    if ($page === null)
        return null;
    return $page.data[$ch & 511];
},
cbggg_BitmapFont$BitmapFontData_getGlyphs = ($this, $run, $str, $start, $end, $lastGlyph) => {
    let $max, $markupEnabled, $scaleX, $glyphs, $xAdvances, $ch, var$12, $glyph, $lastGlyphWidth, var$15;
    $max = $end - $start | 0;
    if (!$max)
        return;
    $markupEnabled = $this.$markupEnabled;
    $scaleX = $this.$scaleX;
    $glyphs = $run.$glyphs;
    $xAdvances = $run.$xAdvances;
    cbgu_Array_ensureCapacity($glyphs, $max);
    cbgu_FloatArray_ensureCapacity($run.$xAdvances, $max + 1 | 0);
    $run = $str;
    a: {
        while (true) {
            $max = $start + 1 | 0;
            if ($start < 0)
                break;
            if ($start >= $run.$nativeString.length)
                break;
            b: {
                $ch = $run.$nativeString.charCodeAt($start);
                if ($ch != 13) {
                    var$12 = $this.$glyphs0.data[$ch / 512 | 0];
                    $glyph = var$12 === null ? null : var$12.data[$ch & 511];
                    if ($glyph === null) {
                        $glyph = $this.$missingGlyph;
                        if ($glyph === null)
                            break b;
                    }
                    cbgu_Array_add($glyphs, $glyph);
                    if ($lastGlyph === null)
                        $lastGlyphWidth = $glyph.$fixedWidth ? 0.0 : ( -$glyph.$xoffset | 0) * $scaleX - $this.$padLeft;
                    else {
                        c: {
                            var$15 = $lastGlyph.$xadvance;
                            var$12 = $lastGlyph.$kerning;
                            if (var$12 !== null) {
                                var$12 = var$12.data[$ch >>> 9 | 0];
                                if (var$12 !== null) {
                                    $start = var$12.data[$ch & 511];
                                    break c;
                                }
                            }
                            $start = 0;
                        }
                        $lastGlyphWidth = (var$15 + $start | 0) * $scaleX;
                    }
                    cbgu_FloatArray_add($xAdvances, $lastGlyphWidth);
                    if (!$markupEnabled)
                        $lastGlyph = $glyph;
                    else if ($ch != 91)
                        $lastGlyph = $glyph;
                    else if ($max >= $end)
                        $lastGlyph = $glyph;
                    else {
                        if ($max < 0)
                            break a;
                        if ($max >= $run.$nativeString.length)
                            break a;
                        if ($run.$nativeString.charCodeAt($max) != 91)
                            $lastGlyph = $glyph;
                        else {
                            $max = $max + 1 | 0;
                            $lastGlyph = $glyph;
                        }
                    }
                }
            }
            if ($max >= $end) {
                if ($lastGlyph !== null)
                    cbgu_FloatArray_add($xAdvances, $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width0 + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight);
                return;
            }
            $start = $max;
        }
        $run = new jl_StringIndexOutOfBoundsException;
        $run.$suppressionEnabled = 1;
        $run.$writableStackTrace = 1;
        $rt_throw($run);
    }
    $run = new jl_StringIndexOutOfBoundsException;
    $run.$suppressionEnabled = 1;
    $run.$writableStackTrace = 1;
    $rt_throw($run);
},
cbggg_BitmapFont$BitmapFontData_getWrapIndex = ($this, $glyphs, $start) => {
    let $i, $glyphsItems, $ch, var$6, var$7, var$8;
    a: {
        $i = $start - 1 | 0;
        $glyphsItems = $glyphs.$items.data;
        $ch = $glyphsItems[$i].$id & 65535;
        switch ($ch) {
            case 9:
            case 10:
            case 13:
            case 32:
                break;
            default:
                $start = 0;
                break a;
        }
        $start = 1;
    }
    if ($start)
        return $i;
    b: {
        var$6 = $this.$breakChars;
        if (var$6 === null)
            $start = 0;
        else {
            var$7 = var$6.data;
            $start = var$7.length;
            var$8 = 0;
            while (var$8 < $start) {
                if ($ch == var$7[var$8]) {
                    $start = 1;
                    break b;
                }
                var$8 = var$8 + 1 | 0;
            }
            $start = 0;
        }
    }
    if ($start)
        $i = $i + (-1) | 0;
    c: {
        while ($i > 0) {
            d: {
                $start = $glyphsItems[$i].$id & 65535;
                switch ($start) {
                    case 9:
                    case 10:
                    case 13:
                    case 32:
                        break;
                    default:
                        $ch = 0;
                        break d;
                }
                $ch = 1;
            }
            if ($ch)
                break c;
            e: {
                if (var$6 === null)
                    $start = 0;
                else {
                    var$7 = var$6.data;
                    $ch = var$7.length;
                    var$8 = 0;
                    while (var$8 < $ch) {
                        if ($start == var$7[var$8]) {
                            $start = 1;
                            break e;
                        }
                        var$8 = var$8 + 1 | 0;
                    }
                    $start = 0;
                }
            }
            if ($start)
                break c;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
},
cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum),
cbgg_Mesh$VertexDataType_VertexArray = null,
cbgg_Mesh$VertexDataType_VertexBufferObject = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null,
cbgg_Mesh$VertexDataType_$VALUES = null,
cbgg_Mesh$VertexDataType__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = new cbgg_Mesh$VertexDataType;
    var$1.$name0 = $rt_s(525);
    var$1.$ordinal0 = 0;
    cbgg_Mesh$VertexDataType_VertexArray = var$1;
    var$2 = new cbgg_Mesh$VertexDataType;
    var$2.$name0 = $rt_s(526);
    var$2.$ordinal0 = 1;
    cbgg_Mesh$VertexDataType_VertexBufferObject = var$2;
    var$3 = new cbgg_Mesh$VertexDataType;
    var$3.$name0 = $rt_s(527);
    var$3.$ordinal0 = 2;
    cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = var$3;
    var$4 = new cbgg_Mesh$VertexDataType;
    var$4.$name0 = $rt_s(528);
    var$4.$ordinal0 = 3;
    cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = var$4;
    cbgg_Mesh$VertexDataType_$VALUES = $rt_wrapArray(cbgg_Mesh$VertexDataType, [var$1, var$2, var$3, var$4]);
};
function cbgg_Mesh() {
    let a = this; jl_Object.call(a);
    a.$vertices0 = null;
    a.$indices = null;
    a.$autoBind = 0;
    a.$isVertexArray = 0;
    a.$instances = null;
    a.$isInstanced = 0;
    a.$tmpV = null;
}
let cbgg_Mesh_meshes = null,
cbgg_Mesh__init_ = ($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) => {
    let var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
    a: {
        b: {
            $this.$autoBind = 1;
            $this.$isInstanced = 0;
            var$6 = new cbgm_Vector3;
            cbgm_Vector3_$callClinit();
            $this.$tmpV = var$6;
            cbgg_Mesh$1_$callClinit();
            switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[$type.$ordinal0]) {
                case 1:
                    $this.$vertices0 = cbggg_VertexBufferObject__init_($isStatic, $maxVertices, $attributes);
                    $type = new cbggg_IndexBufferObject;
                    $type.$isDirty = 1;
                    $type.$isBound = 0;
                    $type.$isDirect = 1;
                    if (!cgxgbt_TeaTool_isProd) {
                        var$7 = $rt_createShortArray($maxIndices);
                        $maxIndices = var$7.data.length;
                        $attributes = new jn_ShortBufferOverArray;
                        var$8 = 0 + $maxIndices | 0;
                        jl_Object__init_($attributes);
                        $attributes.$mark = (-1);
                        $attributes.$capacity = $maxIndices;
                        $attributes.$limit0 = $maxIndices;
                        $attributes.$position0 = 0;
                        $attributes.$limit0 = var$8;
                        $attributes.$start7 = 0;
                        $attributes.$readOnly4 = 0;
                        $attributes.$array5 = var$7;
                    } else {
                        $maxVertices = $maxIndices * 2 | 0;
                        if ($maxVertices < 0) {
                            $type = new jl_IllegalArgumentException;
                            $attributes = new jl_StringBuilder;
                            $attributes.$buffer = $rt_createCharArray(16);
                            $isStatic = $attributes.$length0;
                            var$9 = $attributes;
                            var$6 = jl_String_toString($rt_s(529));
                            jl_StringBuilder_insert(var$9, $isStatic, var$6);
                            jl_AbstractStringBuilder_insert0($attributes, $attributes.$length0, $maxVertices, 10);
                            var$6 = new jl_String;
                            var$7 = $attributes.$buffer;
                            var$10 = var$7.data;
                            $maxVertices = $attributes.$length0;
                            $maxIndices = var$10.length;
                            if ($maxVertices >= 0 && $maxVertices <= ($maxIndices - 0 | 0)) {
                                var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, $maxVertices);
                                $type.$suppressionEnabled = 1;
                                $type.$writableStackTrace = 1;
                                $type.$message = var$6;
                                $rt_throw($type);
                            }
                            $type = new jl_IndexOutOfBoundsException;
                            jl_RuntimeException__init_($type);
                            $rt_throw($type);
                        }
                        $attributes = new jn_ByteBufferImpl;
                        var$7 = $rt_createByteArray($maxVertices).data;
                        $attributes.$mark = (-1);
                        $attributes.$capacity = $maxVertices;
                        $attributes.$limit0 = $maxVertices;
                        $attributes.$order = jn_ByteOrder_BIG_ENDIAN;
                        $attributes.$start0 = 0;
                        var$11 = var$7.length;
                        $attributes.$bkArray = $rt_createByteArray(var$11);
                        var$6 = new cgxgbtdt_Int8ArrayNative;
                        var$6.$buffer0 = new Int8Array(var$11);
                        $attributes.$array = var$6;
                        var$12 = 0;
                        while (var$12 < var$11) {
                            var$13 = var$7[var$12];
                            var$6 = $attributes.$array;
                            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$6);
                            var$6.$buffer0[var$12] = var$13;
                            var$12 = var$12 + 1 | 0;
                        }
                        $attributes.$position0 = 0;
                        $attributes.$limit0 = $maxVertices;
                        $attributes.$direct = 1;
                        $attributes.$readOnly0 = 0;
                        $attributes.$order = jn_ByteOrder_nativeOrder();
                        $attributes = jn_ByteBufferImpl_asShortBuffer($attributes);
                    }
                    $type.$buffer3 = $attributes;
                    $attributes.$limit0 = $attributes.$position0;
                    $attributes.$position0 = 0;
                    $attributes.$mark = (-1);
                    $attributes = cbg_Gdx_gl20;
                    var$6 = $attributes.$gl.createBuffer();
                    $type.$bufferHandle = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($attributes.$buffers, var$6);
                    $type.$usage0 = !$isStatic ? 35048 : 35044;
                    $this.$indices = $type;
                    $this.$isVertexArray = 0;
                    break a;
                case 2:
                    break;
                case 3:
                    $this.$vertices0 = cbggg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $attributes);
                    $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 4:
                    break b;
                default:
                    break b;
            }
            $this.$vertices0 = cbggg_VertexBufferObjectSubData__init_0($isStatic, $maxVertices, $attributes);
            $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
            $this.$isVertexArray = 0;
            break a;
        }
        $type = new cbggg_VertexArray;
        cbggg_VertexBufferObject__init_0($type, 0, $maxVertices, $attributes);
        $this.$vertices0 = $type;
        $type = new cbggg_IndexArray;
        $type.$isDirty = 1;
        $type.$isBound = 0;
        $type.$isDirect = 1;
        if (!cgxgbt_TeaTool_isProd) {
            var$7 = $rt_createShortArray($maxIndices);
            $maxVertices = var$7.data.length;
            $attributes = new jn_ShortBufferOverArray;
            var$11 = 0 + $maxVertices | 0;
            jn_Buffer__init_($attributes, $maxVertices);
            $attributes.$position0 = 0;
            $attributes.$limit0 = var$11;
            $attributes.$start7 = 0;
            $attributes.$readOnly4 = 0;
            $attributes.$array5 = var$7;
        } else {
            $isStatic = $maxIndices * 2 | 0;
            if ($isStatic < 0) {
                $type = new jl_IllegalArgumentException;
                $attributes = new jl_StringBuilder;
                $attributes.$buffer = $rt_createCharArray(16);
                $maxVertices = $attributes.$length0;
                jl_AbstractStringBuilder_insert2($attributes, $maxVertices, $rt_s(529));
                jl_AbstractStringBuilder_insert0($attributes, $attributes.$length0, $isStatic, 10);
                var$6 = new jl_String;
                var$7 = $attributes.$buffer;
                var$10 = var$7.data;
                $maxVertices = $attributes.$length0;
                $maxIndices = var$10.length;
                if ($maxVertices >= 0 && $maxVertices <= ($maxIndices - 0 | 0)) {
                    var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, $maxVertices);
                    $type.$suppressionEnabled = 1;
                    $type.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace($type);
                    $type.$message = var$6;
                    $rt_throw($type);
                }
                $rt_throw(jl_IndexOutOfBoundsException__init_());
            }
            $attributes = new jn_ByteBufferImpl;
            var$7 = $rt_createByteArray($isStatic).data;
            jl_Object__init_($attributes);
            $attributes.$mark = (-1);
            $attributes.$capacity = $isStatic;
            $attributes.$limit0 = $isStatic;
            $attributes.$order = jn_ByteOrder_BIG_ENDIAN;
            $attributes.$start0 = 0;
            $maxIndices = var$7.length;
            $attributes.$bkArray = $rt_createByteArray($maxIndices);
            var$6 = new cgxgbtdt_Int8ArrayNative;
            jl_Object__init_(var$6);
            var$6.$buffer0 = new Int8Array($maxIndices);
            $attributes.$array = var$6;
            var$14 = 0;
            while (var$14 < $maxIndices) {
                var$12 = var$7[var$14];
                cgxgbtdt_Int8ArrayNative_set($attributes.$array, var$14, var$12);
                var$14 = var$14 + 1 | 0;
            }
            $attributes.$position0 = 0;
            $attributes.$limit0 = $isStatic;
            $attributes.$direct = 1;
            $attributes.$readOnly0 = 0;
            $attributes.$order = jn_ByteOrder_nativeOrder();
            $attributes = jn_ByteBufferImpl_asShortBuffer($attributes);
        }
        $type.$buffer3 = $attributes;
        $attributes.$limit0 = $attributes.$position0;
        $attributes.$position0 = 0;
        $attributes.$mark = (-1);
        $attributes = cbg_Gdx_gl20;
        var$6 = $attributes.$gl.createBuffer();
        $type.$bufferHandle = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($attributes.$buffers, var$6);
        $type.$usage0 = 35044;
        $this.$indices = $type;
        $this.$isVertexArray = 1;
    }
    $type = cbg_Gdx_app;
    $attributes = cbgg_Mesh_meshes;
    if ($type === null) {
        $attributes = $attributes.$elementData.data[0];
        while ($attributes !== null && $attributes.$key !== null) {
            $attributes = $attributes.$next1;
        }
    } else {
        var$15 = $type;
        var$16 = var$15;
        if (!var$16.$id$)
            var$16.$id$ = $rt_nextId();
        $isStatic = var$15.$id$;
        var$7 = $attributes.$elementData.data;
        $attributes = var$7[$isStatic & (var$7.length - 1 | 0)];
        while ($attributes !== null) {
            if ($attributes.$origKeyHash == $isStatic) {
                var$6 = $attributes.$key;
                if ($type !== var$6 && !(var$15 !== var$6 ? 0 : 1) ? 0 : 1)
                    break;
            }
            $attributes = $attributes.$next1;
        }
    }
    $attributes = $attributes === null ? null : $attributes.$value0;
    if ($attributes === null) {
        $attributes = new cbgu_Array;
        $attributes.$ordered = 1;
        $attributes.$items = $rt_createArray(jl_Object, 16);
    }
    cbgu_Array_add($attributes, $this);
    ju_HashMap_putImpl(cbgg_Mesh_meshes, $type, $attributes);
},
cbgg_Mesh__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbgg_Mesh_render = ($this, $shader, $primitiveType, $offset, $count, $autoBind) => {
    let $buffer, var$7, $oldPosition, $numInstances, var$10, var$11, var$12;
    if (!$count)
        return;
    if ($autoBind) {
        $buffer = null;
        var$7 = null;
        $this.$vertices0.$bind0($shader, $buffer);
        $buffer = $this.$instances;
        if ($buffer !== null && $buffer.$getNumInstances() > 0)
            $this.$instances.$bind0($shader, var$7);
        if ($this.$indices.$getNumIndices() > 0)
            $this.$indices.$bind();
    }
    if ($this.$isVertexArray) {
        if ($this.$indices.$getNumIndices() <= 0)
            cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        else {
            $buffer = $this.$indices.$getBuffer(0);
            $oldPosition = $buffer.$position0;
            var$7 = $buffer;
            jn_Buffer_position(var$7, $offset);
            cbg_Gdx_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
            jn_Buffer_position(var$7, $oldPosition);
        }
    } else {
        $numInstances = 0;
        if ($this.$isInstanced)
            $numInstances = $this.$instances.$getNumInstances();
        if ($this.$indices.$getNumIndices() <= 0) {
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawArraysInstanced($primitiveType, $offset, $count, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        } else {
            if (($count + $offset | 0) > $this.$indices.$getNumMaxIndices()) {
                $shader = new cbgu_GdxRuntimeException;
                $buffer = new jl_StringBuilder;
                $buffer.$buffer = $rt_createCharArray(16);
                $primitiveType = $buffer.$length0;
                var$10 = $buffer;
                jl_AbstractStringBuilder_insert(var$10, $primitiveType, $rt_s(530));
                jl_AbstractStringBuilder_insert0($buffer, $buffer.$length0, $count, 10);
                jl_AbstractStringBuilder_insert(var$10, $buffer.$length0, $rt_s(531));
                jl_AbstractStringBuilder_insert0($buffer, $buffer.$length0, $offset, 10);
                jl_AbstractStringBuilder_insert(var$10, $buffer.$length0, $rt_s(532));
                $primitiveType = $this.$indices.$getNumMaxIndices();
                jl_AbstractStringBuilder_insert0($buffer, $buffer.$length0, $primitiveType, 10);
                jl_AbstractStringBuilder_insert(var$10, $buffer.$length0, $rt_s(533));
                var$7 = new jl_String;
                var$11 = $buffer.$buffer;
                var$12 = var$11.data;
                $offset = $buffer.$length0;
                $count = var$12.length;
                if ($offset >= 0 && $offset <= ($count - 0 | 0)) {
                    var$7.$nativeString = $rt_charArrayToString(var$11.data, 0, $offset);
                    $shader.$suppressionEnabled = 1;
                    $shader.$writableStackTrace = 1;
                    $shader.$message = var$7;
                    $rt_throw($shader);
                }
                $shader = new jl_IndexOutOfBoundsException;
                $shader.$suppressionEnabled = 1;
                $shader.$writableStackTrace = 1;
                $rt_throw($shader);
            }
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawElementsInstanced($primitiveType, $count, 5123, $offset * 2 | 0, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
        }
    }
    if ($autoBind) {
        $buffer = null;
        var$7 = null;
        $this.$vertices0.$unbind0($shader, $buffer);
        $buffer = $this.$instances;
        if ($buffer !== null && $buffer.$getNumInstances() > 0)
            $this.$instances.$unbind0($shader, var$7);
        if ($this.$indices.$getNumIndices() > 0)
            $this.$indices.$unbind();
    }
},
cbgg_Mesh__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = new ju_HashMap;
    var$2 = ju_HashMap_calculateCapacity(16);
    var$1.$elementCount = 0;
    var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
    var$4 = var$3.data;
    var$1.$elementData = var$3;
    var$1.$loadFactor = 0.75;
    var$1.$threshold = var$4.length * 0.75 | 0;
    cbgg_Mesh_meshes = var$1;
};
function cbggg_BitmapFont$Glyph() {
    let a = this; jl_Object.call(a);
    a.$id = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width0 = 0;
    a.$height0 = 0;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v2 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning = null;
    a.$fixedWidth = 0;
    a.$page = 0;
}
let cbggg_BitmapFont$Glyph__init_0 = $this => {
    $this.$page = 0;
},
cbggg_BitmapFont$Glyph__init_ = () => {
    let var_0 = new cbggg_BitmapFont$Glyph();
    cbggg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
},
cbggg_BitmapFont$Glyph_setKerning = ($this, $ch, $value) => {
    let var$3, var$4, $page;
    if ($this.$kerning === null)
        $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls), 128);
    var$3 = $this.$kerning.data;
    var$4 = $ch >>> 9 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
},
cbggg_BitmapFont$Glyph_toString = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$id & 65535;
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$4 = var$3.data;
    var$4[0] = var$1;
    var$2.$nativeString = $rt_charArrayToString(var$3.data, 0, var$4.length);
    return var$2;
};
function cbgg_VertexAttributes() {
    let a = this; jl_Object.call(a);
    a.$attributes = null;
    a.$vertexSize = 0;
    a.$mask4 = Long_ZERO;
    a.$boneWeightUnits = 0;
    a.$textureCoordinates = 0;
}
let cbgg_VertexAttributes__init_0 = ($this, $attributes) => {
    let var$2, var$3, $list, var$5, $i, var$7;
    $attributes = $attributes.data;
    $this.$mask4 = Long_fromInt(-1);
    $this.$boneWeightUnits = (-1);
    $this.$textureCoordinates = (-1);
    var$2 = $attributes.length;
    if (!var$2) {
        var$3 = new jl_IllegalArgumentException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(534);
        $rt_throw(var$3);
    }
    $list = $rt_createArray(cbgg_VertexAttribute, var$2);
    var$5 = $list.data;
    $i = 0;
    while ($i < var$2) {
        var$5[$i] = $attributes[$i];
        $i = $i + 1 | 0;
    }
    $this.$attributes = $list;
    var$2 = 0;
    var$7 = 0;
    while (var$7 < var$5.length) {
        a: {
            b: {
                var$3 = var$5[var$7];
                var$3.$offset = var$2;
                switch (var$3.$type2) {
                    case 5120:
                    case 5121:
                        break;
                    case 5122:
                    case 5123:
                        $i = 2 * var$3.$numComponents | 0;
                        break a;
                    case 5124:
                    case 5125:
                    case 5127:
                    case 5128:
                    case 5129:
                    case 5130:
                    case 5131:
                        break b;
                    case 5126:
                    case 5132:
                        $i = 4 * var$3.$numComponents | 0;
                        break a;
                    default:
                        break b;
                }
                $i = var$3.$numComponents;
                break a;
            }
            $i = 0;
        }
        var$2 = var$2 + $i | 0;
        var$7 = var$7 + 1 | 0;
    }
    $this.$vertexSize = var$2;
},
cbgg_VertexAttributes__init_ = var_0 => {
    let var_1 = new cbgg_VertexAttributes();
    cbgg_VertexAttributes__init_0(var_1, var_0);
    return var_1;
};
function cbggg_ShaderProgram() {
    let a = this; jl_Object.call(a);
    a.$log0 = null;
    a.$isCompiled = 0;
    a.$uniforms0 = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$uniformNames = null;
    a.$attributes1 = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$attributeNames = null;
    a.$program = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$matrix = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$invalidated = 0;
    a.$refCount = 0;
    a.$params = null;
    a.$type5 = null;
}
let cbggg_ShaderProgram_pedantic = 0,
cbggg_ShaderProgram_prependVertexCode = null,
cbggg_ShaderProgram_prependFragmentCode = null,
cbggg_ShaderProgram_shaders = null,
cbggg_ShaderProgram_intbuf = null,
cbggg_ShaderProgram_$callClinit = () => {
    cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
    cbggg_ShaderProgram__clinit_();
},
cbggg_ShaderProgram__init_0 = ($this, $vertexShader, $fragmentShader) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    cbggg_ShaderProgram_$callClinit();
    $this.$log0 = $rt_s(40);
    $this.$uniforms0 = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$uniformTypes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$uniformSizes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$attributes1 = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$attributeTypes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$attributeSizes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
    $this.$refCount = 0;
    if (!cgxgbt_TeaTool_isProd) {
        var$3 = $rt_createIntArray(1);
        var$4 = var$3.data.length;
        var$5 = new jn_IntBufferOverArray;
        var$6 = 0 + var$4 | 0;
        var$5.$mark = (-1);
        var$5.$capacity = var$4;
        var$5.$limit0 = var$4;
        var$5.$position0 = 0;
        var$5.$limit0 = var$6;
        var$5.$start4 = 0;
        var$5.$readOnly2 = 0;
        var$5.$array2 = var$3;
    } else {
        var$5 = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray(4).data;
        var$5.$mark = (-1);
        var$5.$capacity = 4;
        var$5.$limit0 = 4;
        var$5.$order = jn_ByteOrder_BIG_ENDIAN;
        var$5.$start0 = 0;
        var$7 = var$3.length;
        var$5.$bkArray = $rt_createByteArray(var$7);
        var$8 = new cgxgbtdt_Int8ArrayNative;
        var$8.$buffer0 = new Int8Array(var$7);
        var$5.$array = var$8;
        var$9 = 0;
        while (var$9 < var$7) {
            var$10 = var$3[var$9];
            var$8 = var$5.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$8);
            var$8.$buffer0[var$9] = var$10;
            var$9 = var$9 + 1 | 0;
        }
        var$5.$position0 = 0;
        var$5.$limit0 = 4;
        var$5.$direct = 1;
        var$5.$readOnly0 = 0;
        var$5.$order = jn_ByteOrder_nativeOrder();
        var$5 = jn_ByteBufferImpl_asIntBuffer(var$5);
    }
    $this.$params = var$5;
    if (!cgxgbt_TeaTool_isProd) {
        var$3 = $rt_createIntArray(1);
        var$4 = var$3.data.length;
        var$5 = new jn_IntBufferOverArray;
        var$6 = 0 + var$4 | 0;
        var$5.$mark = (-1);
        var$5.$capacity = var$4;
        var$5.$limit0 = var$4;
        var$5.$position0 = 0;
        var$5.$limit0 = var$6;
        var$5.$start4 = 0;
        var$5.$readOnly2 = 0;
        var$5.$array2 = var$3;
    } else {
        var$8 = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray(4).data;
        var$8.$mark = (-1);
        var$8.$capacity = 4;
        var$8.$limit0 = 4;
        var$8.$order = jn_ByteOrder_BIG_ENDIAN;
        var$8.$start0 = 0;
        var$7 = var$3.length;
        var$8.$bkArray = $rt_createByteArray(var$7);
        var$11 = new cgxgbtdt_Int8ArrayNative;
        var$11.$buffer0 = new Int8Array(var$7);
        var$8.$array = var$11;
        var$9 = 0;
        while (var$9 < var$7) {
            var$10 = var$3[var$9];
            var$5 = var$8.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$5);
            var$5.$buffer0[var$9] = var$10;
            var$9 = var$9 + 1 | 0;
        }
        var$8.$position0 = 0;
        var$8.$limit0 = 4;
        var$8.$direct = 1;
        var$8.$readOnly0 = 0;
        var$8.$order = jn_ByteOrder_nativeOrder();
        var$5 = jn_ByteBufferImpl_asIntBuffer(var$8);
    }
    $this.$type5 = var$5;
    if ($vertexShader === null) {
        $vertexShader = new jl_IllegalArgumentException;
        $vertexShader.$suppressionEnabled = 1;
        $vertexShader.$writableStackTrace = 1;
        $vertexShader.$message = $rt_s(535);
        $rt_throw($vertexShader);
    }
    if ($fragmentShader === null) {
        $vertexShader = new jl_IllegalArgumentException;
        $vertexShader.$suppressionEnabled = 1;
        $vertexShader.$writableStackTrace = 1;
        $vertexShader.$message = $rt_s(536);
        $rt_throw($vertexShader);
    }
    var$5 = cbggg_ShaderProgram_prependVertexCode;
    if (var$5 !== null && var$5.$nativeString.length > 0) {
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        var$8 = cbggg_ShaderProgram_prependVertexCode;
        var$12 = var$5.$length0;
        var$13 = var$5;
        jl_AbstractStringBuilder_insert(var$13, var$12, var$8);
        jl_AbstractStringBuilder_insert(var$13, var$5.$length0, $vertexShader);
        $vertexShader = new jl_String;
        var$3 = var$5.$buffer;
        var$14 = var$3.data;
        var$4 = var$5.$length0;
        var$7 = var$14.length;
        if (var$4 >= 0 && var$4 <= (var$7 - 0 | 0))
            $vertexShader.$nativeString = $rt_charArrayToString(var$3.data, 0, var$4);
        else {
            $vertexShader = new jl_IndexOutOfBoundsException;
            $vertexShader.$suppressionEnabled = 1;
            $vertexShader.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($vertexShader);
            $rt_throw($vertexShader);
        }
    }
    var$5 = cbggg_ShaderProgram_prependFragmentCode;
    if (var$5 !== null && var$5.$nativeString.length > 0) {
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        var$8 = cbggg_ShaderProgram_prependFragmentCode;
        var$12 = var$5.$length0;
        var$13 = var$5;
        jl_AbstractStringBuilder_insert(var$13, var$12, var$8);
        jl_AbstractStringBuilder_insert(var$13, var$5.$length0, $fragmentShader);
        $fragmentShader = new jl_String;
        var$3 = var$5.$buffer;
        var$14 = var$3.data;
        var$4 = var$5.$length0;
        var$7 = var$14.length;
        if (var$4 >= 0 && var$4 <= (var$7 - 0 | 0))
            $fragmentShader.$nativeString = $rt_charArrayToString(var$3.data, 0, var$4);
        else {
            $vertexShader = new jl_IndexOutOfBoundsException;
            $vertexShader.$suppressionEnabled = 1;
            $vertexShader.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($vertexShader);
            $rt_throw($vertexShader);
        }
    }
    $this.$vertexShaderSource = $vertexShader;
    $this.$fragmentShaderSource = $fragmentShader;
    if (!cgxgbt_TeaTool_isProd) {
        var$14 = $rt_createFloatArray(16);
        var$4 = var$14.data.length;
        var$5 = new jn_FloatBufferOverArray;
        var$6 = 0 + var$4 | 0;
        var$5.$mark = (-1);
        var$5.$capacity = var$4;
        var$5.$limit0 = var$4;
        var$5.$position0 = 0;
        var$5.$limit0 = var$6;
        var$5.$start6 = 0;
        var$5.$readOnly3 = 0;
        var$5.$array3 = var$14;
    } else {
        var$11 = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray(64).data;
        var$11.$mark = (-1);
        var$11.$capacity = 64;
        var$11.$limit0 = 64;
        var$11.$order = jn_ByteOrder_BIG_ENDIAN;
        var$11.$start0 = 0;
        var$10 = var$3.length;
        var$11.$bkArray = $rt_createByteArray(var$10);
        var$5 = new cgxgbtdt_Int8ArrayNative;
        var$5.$buffer0 = new Int8Array(var$10);
        var$11.$array = var$5;
        var$12 = 0;
        while (var$12 < var$10) {
            var$4 = var$3[var$12];
            var$5 = var$11.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$5);
            var$5.$buffer0[var$12] = var$4;
            var$12 = var$12 + 1 | 0;
        }
        var$11.$position0 = 0;
        var$11.$limit0 = 64;
        var$11.$direct = 1;
        var$11.$readOnly0 = 0;
        var$11.$order = jn_ByteOrder_nativeOrder();
        var$5 = jn_ByteBufferImpl_asFloatBuffer(var$11);
    }
    $this.$matrix = var$5;
    cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader);
    if ($this.$isCompiled) {
        cbggg_ShaderProgram_fetchAttributes($this);
        cbggg_ShaderProgram_fetchUniforms($this);
        $vertexShader = cbg_Gdx_app;
        $fragmentShader = cbggg_ShaderProgram_shaders;
        var$12 = cbgu_ObjectMap_locateKey($fragmentShader, $vertexShader);
        $fragmentShader = var$12 < 0 ? null : $fragmentShader.$valueTable.data[var$12];
        if ($fragmentShader === null) {
            $fragmentShader = new cbgu_Array;
            $fragmentShader.$ordered = 1;
            $fragmentShader.$items = $rt_createArray(jl_Object, 16);
        }
        cbgu_Array_add($fragmentShader, $this);
        cbgu_ObjectMap_put(cbggg_ShaderProgram_shaders, $vertexShader, $fragmentShader);
    }
},
cbggg_ShaderProgram__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_ShaderProgram();
    cbggg_ShaderProgram__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_ShaderProgram_compileShaders = ($this, $vertexShader, $fragmentShader) => {
    let var$3;
    $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
    var$3 = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
    $this.$fragmentShaderHandle = var$3;
    if ($this.$vertexShaderHandle != (-1) && var$3 != (-1)) {
        var$3 = cbg_Gdx_gl20.$glCreateProgram();
        if (!var$3)
            var$3 = (-1);
        var$3 = cbggg_ShaderProgram_linkProgram($this, var$3);
        $this.$program = var$3;
        if (var$3 != (-1)) {
            $this.$isCompiled = 1;
            return;
        }
        $this.$isCompiled = 0;
        return;
    }
    $this.$isCompiled = 0;
},
cbggg_ShaderProgram_loadShader = ($this, $type, $source) => {
    let $gl, var$4, $compiled, $intbuf, var$7, $infoLog, var$9, var$10, var$11, var$12, $shader, var$14;
    $gl = cbg_Gdx_gl20;
    if (!cgxgbt_TeaTool_isProd) {
        var$4 = $rt_createIntArray(1);
        $compiled = var$4.data.length;
        $intbuf = new jn_IntBufferOverArray;
        var$7 = 0 + $compiled | 0;
        $intbuf.$mark = (-1);
        $intbuf.$capacity = $compiled;
        $intbuf.$limit0 = $compiled;
        $intbuf.$position0 = 0;
        $intbuf.$limit0 = var$7;
        $intbuf.$start4 = 0;
        $intbuf.$readOnly2 = 0;
        $intbuf.$array2 = var$4;
    } else {
        $infoLog = new jn_ByteBufferImpl;
        var$4 = $rt_createByteArray(4).data;
        $infoLog.$mark = (-1);
        $infoLog.$capacity = 4;
        $infoLog.$limit0 = 4;
        $infoLog.$order = jn_ByteOrder_BIG_ENDIAN;
        $infoLog.$start0 = 0;
        var$9 = var$4.length;
        $infoLog.$bkArray = $rt_createByteArray(var$9);
        var$10 = new cgxgbtdt_Int8ArrayNative;
        var$10.$buffer0 = new Int8Array(var$9);
        $infoLog.$array = var$10;
        var$11 = 0;
        while (var$11 < var$9) {
            var$12 = var$4[var$11];
            $intbuf = $infoLog.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($intbuf);
            $intbuf.$buffer0[var$11] = var$12;
            var$11 = var$11 + 1 | 0;
        }
        $infoLog.$position0 = 0;
        $infoLog.$limit0 = 4;
        $infoLog.$direct = 1;
        $infoLog.$readOnly0 = 0;
        $infoLog.$order = jn_ByteOrder_nativeOrder();
        $intbuf = jn_ByteBufferImpl_asIntBuffer($infoLog);
    }
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    if (jn_IntBufferImpl_get($intbuf, 0))
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $source = new jl_StringBuilder;
    $source.$buffer = $rt_createCharArray(16);
    $gl = $this.$log0;
    $shader = $source.$length0;
    $intbuf = $source;
    jl_AbstractStringBuilder_insert($intbuf, $shader, $gl);
    $gl = $type != 35633 ? $rt_s(537) : $rt_s(538);
    jl_AbstractStringBuilder_insert($intbuf, $source.$length0, $gl);
    $gl = new jl_String;
    var$4 = $source.$buffer;
    var$14 = var$4.data;
    $shader = $source.$length0;
    $compiled = var$14.length;
    if ($shader >= 0 && $shader <= ($compiled - 0 | 0)) {
        $gl.$nativeString = $rt_charArrayToString(var$4.data, 0, $shader);
        $this.$log0 = $gl;
        $source = new jl_StringBuilder;
        $source.$buffer = $rt_createCharArray(16);
        $type = $source.$length0;
        $intbuf = $source;
        jl_AbstractStringBuilder_insert($intbuf, $type, $gl);
        jl_AbstractStringBuilder_insert($intbuf, $source.$length0, $infoLog);
        $gl = new jl_String;
        var$4 = $source.$buffer;
        var$14 = var$4.data;
        $shader = $source.$length0;
        $compiled = var$14.length;
        if ($shader >= 0 && $shader <= ($compiled - 0 | 0)) {
            $gl.$nativeString = $rt_charArrayToString(var$4.data, 0, $shader);
            $this.$log0 = $gl;
            return (-1);
        }
        $source = new jl_IndexOutOfBoundsException;
        $source.$suppressionEnabled = 1;
        $source.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace($source);
        $rt_throw($source);
    }
    $source = new jl_IndexOutOfBoundsException;
    $source.$suppressionEnabled = 1;
    $source.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($source);
    $rt_throw($source);
},
cbggg_ShaderProgram_linkProgram = ($this, $program) => {
    let $gl, $tmp_0, var$4, var$5, var$6, var$7, $linked, $intbuf;
    $gl = cbg_Gdx_gl20;
    if ($program == (-1))
        return (-1);
    $gl.$glAttachShader($program, $this.$vertexShaderHandle);
    $gl.$glAttachShader($program, $this.$fragmentShaderHandle);
    $gl.$glLinkProgram($program);
    $tmp_0 = new jn_ByteBufferImpl;
    var$4 = $rt_createByteArray(4).data;
    $tmp_0.$mark = (-1);
    $tmp_0.$capacity = 4;
    $tmp_0.$limit0 = 4;
    $tmp_0.$order = jn_ByteOrder_BIG_ENDIAN;
    $tmp_0.$start0 = 0;
    var$5 = var$4.length;
    $tmp_0.$bkArray = $rt_createByteArray(var$5);
    var$6 = new cgxgbtdt_Int8ArrayNative;
    var$6.$buffer0 = new Int8Array(var$5);
    $tmp_0.$array = var$6;
    var$7 = 0;
    while (var$7 < var$5) {
        $linked = var$4[var$7];
        $intbuf = $tmp_0.$array;
        cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($intbuf);
        $intbuf.$buffer0[var$7] = $linked;
        var$7 = var$7 + 1 | 0;
    }
    $tmp_0.$position0 = 0;
    $tmp_0.$limit0 = 4;
    $tmp_0.$direct = 1;
    $tmp_0.$readOnly0 = 0;
    $tmp_0.$order = jn_ByteOrder_nativeOrder();
    $intbuf = jn_ByteBufferImpl_asIntBuffer($tmp_0);
    $gl.$glGetProgramiv($program, 35714, $intbuf);
    if (jn_IntBufferImpl_get($intbuf, 0))
        return $program;
    $this.$log0 = cbg_Gdx_gl20.$glGetProgramInfoLog($program);
    return (-1);
},
cbggg_ShaderProgram_fetchUniformLocation = ($this, $name, $pedantic) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$3 = $this.$uniforms0;
    var$4 = (-2);
    var$5 = cbgu_ObjectIntMap_locateKey(var$3, $name);
    if (var$5 >= 0)
        var$4 = var$3.$valueTable0.data[var$5];
    if (var$4 == (-2)) {
        var$4 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        if (var$4 == (-1) && $pedantic) {
            if ($this.$isCompiled) {
                var$3 = new jl_IllegalArgumentException;
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                $pedantic = var$6.$length0;
                var$7 = var$6;
                jl_AbstractStringBuilder_insert(var$7, $pedantic, $rt_s(539));
                jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $name);
                jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(540));
                $name = new jl_String;
                var$8 = var$6.$buffer;
                var$9 = var$8.data;
                var$4 = var$6.$length0;
                var$5 = var$9.length;
                if (var$4 >= 0 && var$4 <= (var$5 - 0 | 0)) {
                    $name.$nativeString = $rt_charArrayToString(var$8.data, 0, var$4);
                    var$3.$suppressionEnabled = 1;
                    var$3.$writableStackTrace = 1;
                    var$3.$message = $name;
                    $rt_throw(var$3);
                }
                $name = new jl_IndexOutOfBoundsException;
                $name.$suppressionEnabled = 1;
                $name.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($name);
                $rt_throw($name);
            }
            $name = new jl_IllegalStateException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            $pedantic = var$3.$length0;
            var$10 = var$3;
            jl_AbstractStringBuilder_insert(var$10, $pedantic, $rt_s(541));
            if (!$this.$isCompiled)
                var$6 = $this.$log0;
            else {
                var$6 = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program);
                $this.$log0 = var$6;
            }
            jl_AbstractStringBuilder_insert(var$10, var$3.$length0, var$6);
            var$6 = new jl_String;
            var$8 = var$3.$buffer;
            var$9 = var$8.data;
            var$4 = var$3.$length0;
            var$5 = var$9.length;
            if (var$4 >= 0 && var$4 <= (var$5 - 0 | 0)) {
                var$6.$nativeString = $rt_charArrayToString(var$8.data, 0, var$4);
                $name.$suppressionEnabled = 1;
                $name.$writableStackTrace = 1;
                $name.$message = var$6;
                $rt_throw($name);
            }
            $name = new jl_IndexOutOfBoundsException;
            $name.$suppressionEnabled = 1;
            $name.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($name);
            $rt_throw($name);
        }
        cbgu_ObjectIntMap_put($this.$uniforms0, $name, var$4);
    }
    return var$4;
},
cbggg_ShaderProgram_fetchUniforms = $this => {
    let var$1, var$2, $numUniforms, $i, $name, $location;
    var$1 = $this.$params;
    var$2 = var$1;
    var$2.$position0 = 0;
    var$2.$limit0 = var$2.$capacity;
    var$2.$mark = (-1);
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35718, var$1);
    $numUniforms = jn_IntBufferImpl_get($this.$params, 0);
    $this.$uniformNames = $rt_createArray(jl_String, $numUniforms);
    $i = 0;
    while ($i < $numUniforms) {
        var$2 = $this.$params;
        var$1 = var$2;
        var$1.$position0 = 0;
        var$1.$limit0 = var$1.$capacity;
        var$1.$mark = (-1);
        jn_IntBufferImpl_put(var$2, 0, 1);
        var$2 = $this.$type5;
        var$1 = var$2;
        var$1.$position0 = 0;
        var$1.$limit0 = var$1.$capacity;
        var$1.$mark = (-1);
        $name = cbg_Gdx_gl20.$glGetActiveUniform($this.$program, $i, $this.$params, var$2);
        $location = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
        cbgu_ObjectIntMap_put($this.$uniforms0, $name, $location);
        cbgu_ObjectIntMap_put($this.$uniformTypes, $name, jn_IntBufferImpl_get($this.$type5, 0));
        cbgu_ObjectIntMap_put($this.$uniformSizes, $name, jn_IntBufferImpl_get($this.$params, 0));
        $this.$uniformNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
},
cbggg_ShaderProgram_fetchAttributes = $this => {
    let var$1, var$2, $numAttributes, $i, $name, $location;
    var$1 = $this.$params;
    var$2 = var$1;
    var$2.$position0 = 0;
    var$2.$limit0 = var$2.$capacity;
    var$2.$mark = (-1);
    cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35721, var$1);
    $numAttributes = jn_IntBufferImpl_get($this.$params, 0);
    $this.$attributeNames = $rt_createArray(jl_String, $numAttributes);
    $i = 0;
    while ($i < $numAttributes) {
        var$2 = $this.$params;
        var$1 = var$2;
        var$1.$position0 = 0;
        var$1.$limit0 = var$1.$capacity;
        var$1.$mark = (-1);
        jn_IntBufferImpl_put(var$2, 0, 1);
        var$2 = $this.$type5;
        var$1 = var$2;
        var$1.$position0 = 0;
        var$1.$limit0 = var$1.$capacity;
        var$1.$mark = (-1);
        $name = cbg_Gdx_gl20.$glGetActiveAttrib($this.$program, $i, $this.$params, var$2);
        $location = cbg_Gdx_gl20.$glGetAttribLocation($this.$program, $name);
        cbgu_ObjectIntMap_put($this.$attributes1, $name, $location);
        cbgu_ObjectIntMap_put($this.$attributeTypes, $name, jn_IntBufferImpl_get($this.$type5, 0));
        cbgu_ObjectIntMap_put($this.$attributeSizes, $name, jn_IntBufferImpl_get($this.$params, 0));
        $this.$attributeNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
},
cbggg_ShaderProgram__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbggg_ShaderProgram_pedantic = 1;
    cbggg_ShaderProgram_prependVertexCode = $rt_s(40);
    cbggg_ShaderProgram_prependFragmentCode = $rt_s(40);
    cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_0(51, 0.800000011920929);
    if (!cgxgbt_TeaTool_isProd) {
        var$1 = $rt_createIntArray(1);
        var$2 = var$1.data.length;
        var$3 = new jn_IntBufferOverArray;
        var$4 = 0 + var$2 | 0;
        var$3.$mark = (-1);
        var$3.$capacity = var$2;
        var$3.$limit0 = var$2;
        var$3.$position0 = 0;
        var$3.$limit0 = var$4;
        var$3.$start4 = 0;
        var$3.$readOnly2 = 0;
        var$3.$array2 = var$1;
    } else {
        var$3 = new jn_ByteBufferImpl;
        var$1 = $rt_createByteArray(4).data;
        var$3.$mark = (-1);
        var$3.$capacity = 4;
        var$3.$limit0 = 4;
        var$3.$order = jn_ByteOrder_BIG_ENDIAN;
        var$3.$start0 = 0;
        var$5 = var$1.length;
        var$3.$bkArray = $rt_createByteArray(var$5);
        var$6 = new cgxgbtdt_Int8ArrayNative;
        var$6.$buffer0 = new Int8Array(var$5);
        var$3.$array = var$6;
        var$7 = 0;
        while (var$7 < var$5) {
            var$8 = var$1[var$7];
            var$9 = var$3.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$9);
            var$9.$buffer0[var$7] = var$8;
            var$7 = var$7 + 1 | 0;
        }
        var$3.$position0 = 0;
        var$3.$limit0 = 4;
        var$3.$direct = 1;
        var$3.$readOnly0 = 0;
        var$3.$order = jn_ByteOrder_nativeOrder();
        var$3 = jn_ByteBufferImpl_asIntBuffer(var$3);
    }
    cbggg_ShaderProgram_intbuf = var$3;
},
cbgg_Mesh$1 = $rt_classWithoutFields(),
cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null,
cbgg_Mesh$1_$callClinit = () => {
    cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
    cbgg_Mesh$1__clinit_();
},
cbgg_Mesh$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbgg_Mesh$VertexDataType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = var$1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObject.$ordinal0] = 1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectSubData.$ordinal0] = 2;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO.$ordinal0] = 3;
    var$2[cbgg_Mesh$VertexDataType_VertexArray.$ordinal0] = 4;
},
cbggg_VertexData = $rt_classWithoutFields(0);
function cbggg_VertexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$attributes2 = null;
    a.$buffer7 = null;
    a.$bufferHandle2 = 0;
    a.$isStatic0 = 0;
    a.$usage2 = 0;
    a.$isDirty3 = 0;
    a.$isBound0 = 0;
}
let cbggg_VertexBufferObject__init_0 = ($this, $isStatic, $numVertices, $attributes) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    $this.$isDirty3 = 0;
    $this.$isBound0 = 0;
    $this.$isStatic0 = $isStatic;
    $this.$attributes2 = $attributes;
    $numVertices = $rt_imul($attributes.$vertexSize / 4 | 0, $numVertices);
    if (!cgxgbt_TeaTool_isProd) {
        var$4 = $rt_createFloatArray($numVertices);
        var$5 = var$4.data.length;
        $attributes = new jn_FloatBufferOverArray;
        var$6 = 0 + var$5 | 0;
        $attributes.$mark = (-1);
        $attributes.$capacity = var$5;
        $attributes.$limit0 = var$5;
        $attributes.$position0 = 0;
        $attributes.$limit0 = var$6;
        $attributes.$start6 = 0;
        $attributes.$readOnly3 = 0;
        $attributes.$array3 = var$4;
    } else {
        $numVertices = $numVertices * 4 | 0;
        if ($numVertices < 0) {
            $attributes = new jl_IllegalArgumentException;
            var$7 = new jl_StringBuilder;
            var$7.$buffer = $rt_createCharArray(16);
            $isStatic = var$7.$length0;
            var$8 = var$7;
            var$9 = $rt_s(529);
            jl_StringBuilder_insert0(var$8, $isStatic, var$9);
            jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $numVertices, 10);
            var$10 = new jl_String;
            var$4 = var$7.$buffer;
            var$11 = var$4.data;
            $numVertices = var$7.$length0;
            var$5 = var$11.length;
            if ($numVertices >= 0 && $numVertices <= (var$5 - 0 | 0)) {
                var$10.$nativeString = $rt_charArrayToString(var$4.data, 0, $numVertices);
                $attributes.$suppressionEnabled = 1;
                $attributes.$writableStackTrace = 1;
                $attributes.$message = var$10;
                $rt_throw($attributes);
            }
            $attributes = new jl_IndexOutOfBoundsException;
            jl_Exception__init_0($attributes);
            $rt_throw($attributes);
        }
        var$8 = new jn_ByteBufferImpl;
        var$4 = $rt_createByteArray($numVertices).data;
        var$8.$mark = (-1);
        var$8.$capacity = $numVertices;
        var$8.$limit0 = $numVertices;
        var$8.$order = jn_ByteOrder_BIG_ENDIAN;
        var$8.$start0 = 0;
        var$12 = var$4.length;
        var$8.$bkArray = $rt_createByteArray(var$12);
        $attributes = new cgxgbtdt_Int8ArrayNative;
        $attributes.$buffer0 = new Int8Array(var$12);
        var$8.$array = $attributes;
        var$6 = 0;
        while (var$6 < var$12) {
            var$13 = var$4[var$6];
            $attributes = var$8.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($attributes);
            $attributes.$buffer0[var$6] = var$13;
            var$6 = var$6 + 1 | 0;
        }
        var$8.$position0 = 0;
        var$8.$limit0 = $numVertices;
        var$8.$direct = 1;
        var$8.$readOnly0 = 0;
        var$8.$order = jn_ByteOrder_nativeOrder();
        $attributes = jn_ByteBufferImpl_asFloatBuffer(var$8);
    }
    $this.$buffer7 = $attributes;
    $attributes.$limit0 = $attributes.$position0;
    $attributes.$position0 = 0;
    $attributes.$mark = (-1);
    $attributes = cbg_Gdx_gl20;
    var$7 = $attributes.$gl.createBuffer();
    $this.$bufferHandle2 = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($attributes.$buffers, var$7);
    $this.$usage2 = !$isStatic ? 35048 : 35044;
},
cbggg_VertexBufferObject__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObject();
    cbggg_VertexBufferObject__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObject_getAttributes = $this => {
    return $this.$attributes2;
},
cbggg_VertexBufferObject_getNumVertices = $this => {
    return $this.$buffer7.$limit0 / ($this.$attributes2.$vertexSize / 4 | 0) | 0;
},
cbggg_VertexBufferObject_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5, var$6, var$7;
    $this.$isDirty3 = 1;
    var$4 = $this.$buffer7;
    var$5 = null;
    var$6 = var$4 instanceof jn_ByteBuffer;
    if (var$6)
        var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
    else if (var$4 instanceof jn_FloatBuffer)
        var$5 = var$4;
    if (var$5 === null) {
        var$4 = new cbgu_GdxRuntimeException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = $rt_s(542);
        $rt_throw(var$4);
    }
    var$5.$position0 = 0;
    var$5.$limit0 = var$5.$capacity;
    var$5.$mark = (-1);
    var$7 = var$4;
    jn_Buffer_position(var$7, 0);
    jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
    jn_Buffer_position(var$7, 0);
    if (!var$6)
        jn_Buffer_limit(var$7, $count);
    else
        jn_Buffer_limit(var$7, $count << 2);
    jn_Buffer_position($this.$buffer7, 0);
    jn_Buffer_limit($this.$buffer7, $count);
    if ($this.$isBound0) {
        var$7 = cbg_Gdx_gl20;
        var$4 = $this.$buffer7;
        var$7.$glBufferData(34962, var$4.$limit0, var$4, $this.$usage2);
        $this.$isDirty3 = 0;
    }
},
cbggg_VertexBufferObject_bind = ($this, $shader, $locations) => {
    let $gl, var$4, $numAttributes, $i, var$7, $attribute, $location, var$10, var$11, var$12, var$13, var$14, var$15;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle2);
    if ($this.$isDirty3) {
        var$4 = $this.$buffer7;
        $gl.$glBufferData(34962, var$4.$limit0, var$4, $this.$usage2);
        $this.$isDirty3 = 0;
    }
    a: {
        $numAttributes = $this.$attributes2.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$7 = $locations.data;
                $attribute = $this.$attributes2.$attributes.data[$i];
                $location = var$7[$i];
                if ($location >= 0) {
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glEnableVertexAttribArray($location);
                    var$10 = $attribute.$numComponents;
                    var$11 = $attribute.$type2;
                    var$12 = $attribute.$normalized;
                    var$13 = $this.$attributes2.$vertexSize;
                    var$14 = $attribute.$offset;
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glVertexAttribPointer($location, var$10, var$11, var$12, var$13, var$14);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = $this.$attributes2.$attributes.data[$i];
            $gl = $attribute.$alias;
            var$4 = $shader.$attributes1;
            var$15 = (-1);
            $location = cbgu_ObjectIntMap_locateKey(var$4, $gl);
            if ($location >= 0)
                var$15 = var$4.$valueTable0.data[$location];
            if (var$15 >= 0) {
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glEnableVertexAttribArray(var$15);
                $location = $attribute.$numComponents;
                var$10 = $attribute.$type2;
                var$11 = $attribute.$normalized;
                var$12 = $this.$attributes2.$vertexSize;
                var$13 = $attribute.$offset;
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glVertexAttribPointer(var$15, $location, var$10, var$11, var$12, var$13);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound0 = 1;
},
cbggg_VertexBufferObject_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location, var$7, $i_0, var$9, var$10, var$11;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = $this.$attributes2.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0) {
                    var$7 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$7.$glDisableVertexAttribArray($location);
                }
                $i = $i + 1 | 0;
            }
        }
        $i_0 = 0;
        while ($i_0 < $numAttributes) {
            var$9 = $this.$attributes2.$attributes.data[$i_0].$alias;
            var$10 = cbg_Gdx_gl20;
            if ($shader.$invalidated) {
                cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                $shader.$invalidated = 0;
            }
            var$11 = cbg_Gdx_gl20;
            var$7 = $shader.$attributes1;
            $location = (-2);
            $i = cbgu_ObjectIntMap_locateKey(var$7, var$9);
            if ($i >= 0)
                $location = var$7.$valueTable0.data[$i];
            if ($location == (-2)) {
                $location = var$11.$glGetAttribLocation($shader.$program, var$9);
                cbgu_ObjectIntMap_put($shader.$attributes1, var$9, $location);
            }
            if ($location != (-1))
                var$10.$glDisableVertexAttribArray($location);
            $i_0 = $i_0 + 1 | 0;
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound0 = 0;
},
cbggg_IndexData = $rt_classWithoutFields(0);
function cbggg_IndexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$buffer3 = null;
    a.$bufferHandle = 0;
    a.$isDirect = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
    a.$usage0 = 0;
}
let cbggg_IndexBufferObject_getNumIndices = $this => {
    return $this.$buffer3.$limit0;
},
cbggg_IndexBufferObject_getNumMaxIndices = $this => {
    return $this.$buffer3.$capacity;
},
cbggg_IndexBufferObject_setIndices = ($this, $indices, $offset, $count) => {
    let var$4;
    $this.$isDirty = 1;
    var$4 = $this.$buffer3;
    var$4.$position0 = 0;
    var$4.$limit0 = var$4.$capacity;
    var$4.$mark = (-1);
    jn_ShortBuffer_put(var$4, $indices, $offset, $count);
    var$4 = $this.$buffer3;
    $offset = var$4.$position0;
    var$4.$limit0 = $offset;
    var$4.$position0 = 0;
    var$4.$mark = (-1);
    if ($this.$isBound) {
        cbg_Gdx_gl20.$glBufferData(34963, $offset, var$4, $this.$usage0);
        $this.$isDirty = 0;
    }
},
cbggg_IndexBufferObject_getBuffer = ($this, $forWriting) => {
    $this.$isDirty = $this.$isDirty | $forWriting;
    return $this.$buffer3;
},
cbggg_IndexBufferObject_bind = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$bufferHandle;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(543);
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty) {
        var$2 = cbg_Gdx_gl20;
        var$3 = $this.$buffer3;
        var$2.$glBufferData(34963, var$3.$limit0, var$3, $this.$usage0);
        $this.$isDirty = 0;
    }
    $this.$isBound = 1;
},
cbggg_IndexBufferObject_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound = 0;
};
function cbggg_VertexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$attributes0 = null;
    a.$buffer4 = null;
    a.$byteBuffer = null;
    a.$bufferHandle1 = 0;
    a.$isDirect0 = 0;
    a.$isStatic = 0;
    a.$usage1 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
}
let cbggg_VertexBufferObjectSubData__init_ = ($this, $isStatic, $numVertices, $attributes) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    a: {
        $this.$isDirty1 = 0;
        $this.$isBound1 = 0;
        $this.$isStatic = $isStatic;
        $this.$attributes0 = $attributes;
        $numVertices = $rt_imul($attributes.$vertexSize, $numVertices);
        if (!cgxgbt_TeaTool_isProd) {
            var$4 = $rt_createByteArray($numVertices).data;
            var$5 = var$4.length;
            if (var$5 >= 0 && var$5 <= (var$5 - 0 | 0)) {
                $attributes = new jn_ByteBufferImpl;
                var$6 = 0 + var$5 | 0;
                $attributes.$mark = (-1);
                $attributes.$capacity = var$5;
                $attributes.$limit0 = var$5;
                $attributes.$order = jn_ByteOrder_BIG_ENDIAN;
                $attributes.$start0 = 0;
                $attributes.$bkArray = $rt_createByteArray(var$5);
                var$7 = new cgxgbtdt_Int8ArrayNative;
                var$7.$buffer0 = new Int8Array(var$5);
                $attributes.$array = var$7;
                var$8 = 0;
                while (var$8 < var$5) {
                    var$9 = var$4[var$8];
                    var$10 = $attributes.$array;
                    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$10);
                    var$10.$buffer0[var$8] = var$9;
                    var$8 = var$8 + 1 | 0;
                }
                $attributes.$position0 = 0;
                $attributes.$limit0 = var$6;
                $attributes.$direct = 0;
                $attributes.$readOnly0 = 0;
                break a;
            }
            $attributes = new jl_IndexOutOfBoundsException;
            $attributes.$suppressionEnabled = 1;
            $attributes.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($attributes);
            $rt_throw($attributes);
        }
        if ($numVertices < 0) {
            $attributes = new jl_IllegalArgumentException;
            var$10 = new jl_StringBuilder;
            var$10.$buffer = $rt_createCharArray(16);
            $isStatic = var$10.$length0;
            var$11 = var$10;
            var$12 = $rt_s(529);
            jl_StringBuilder_insert0(var$11, $isStatic, var$12);
            jl_AbstractStringBuilder_insert0(var$10, var$10.$length0, $numVertices, 10);
            var$7 = new jl_String;
            var$4 = var$10.$buffer;
            var$13 = var$4.data;
            $numVertices = var$10.$length0;
            var$5 = var$13.length;
            if ($numVertices >= 0 && $numVertices <= (var$5 - 0 | 0)) {
                var$7.$nativeString = $rt_charArrayToString(var$4.data, 0, $numVertices);
                $attributes.$suppressionEnabled = 1;
                $attributes.$writableStackTrace = 1;
                $attributes.$message = var$7;
                $rt_throw($attributes);
            }
            $attributes = new jl_IndexOutOfBoundsException;
            jl_Exception__init_0($attributes);
            $rt_throw($attributes);
        }
        $attributes = new jn_ByteBufferImpl;
        var$4 = $rt_createByteArray($numVertices).data;
        $attributes.$mark = (-1);
        $attributes.$capacity = $numVertices;
        $attributes.$limit0 = $numVertices;
        $attributes.$order = jn_ByteOrder_BIG_ENDIAN;
        $attributes.$start0 = 0;
        var$14 = var$4.length;
        $attributes.$bkArray = $rt_createByteArray(var$14);
        var$10 = new cgxgbtdt_Int8ArrayNative;
        var$10.$buffer0 = new Int8Array(var$14);
        $attributes.$array = var$10;
        var$8 = 0;
        while (var$8 < var$14) {
            var$9 = var$4[var$8];
            var$10 = $attributes.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$10);
            var$10.$buffer0[var$8] = var$9;
            var$8 = var$8 + 1 | 0;
        }
        $attributes.$position0 = 0;
        $attributes.$limit0 = $numVertices;
        $attributes.$direct = 1;
        $attributes.$readOnly0 = 0;
        $attributes.$order = jn_ByteOrder_nativeOrder();
    }
    $this.$byteBuffer = $attributes;
    $this.$isDirect0 = 1;
    $this.$usage1 = !$isStatic ? 35048 : 35044;
    $this.$buffer4 = jn_ByteBufferImpl_asFloatBuffer($attributes);
    $attributes = cbg_Gdx_gl20;
    var$10 = $attributes.$gl.createBuffer();
    var$5 = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($attributes.$buffers, var$10);
    cbg_Gdx_gl20.$glBindBuffer(34962, var$5);
    cbg_Gdx_gl20.$glBufferData(34962, $this.$byteBuffer.$capacity, null, $this.$usage1);
    cbg_Gdx_gl20.$glBindBuffer(34962, 0);
    $this.$bufferHandle1 = var$5;
    $attributes = $this.$buffer4;
    $attributes.$limit0 = $attributes.$position0;
    $attributes.$position0 = 0;
    $attributes.$mark = (-1);
    $attributes = $this.$byteBuffer;
    $attributes.$limit0 = $attributes.$position0;
    $attributes.$position0 = 0;
    $attributes.$mark = (-1);
},
cbggg_VertexBufferObjectSubData__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObjectSubData();
    cbggg_VertexBufferObjectSubData__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObjectSubData_getAttributes = $this => {
    return $this.$attributes0;
},
cbggg_VertexBufferObjectSubData_getNumVertices = $this => {
    return ($this.$buffer4.$limit0 * 4 | 0) / $this.$attributes0.$vertexSize | 0;
},
cbggg_VertexBufferObjectSubData_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5, var$6;
    $this.$isDirty1 = 1;
    if (!$this.$isDirect0) {
        var$4 = $this.$buffer4;
        var$5 = var$4;
        var$5.$position0 = 0;
        var$5.$limit0 = var$5.$capacity;
        var$5.$mark = (-1);
        jn_FloatBuffer_put(var$4, $vertices, $offset, $count);
        var$4 = $this.$buffer4;
        var$4.$limit0 = var$4.$position0;
        var$4.$position0 = 0;
        var$4.$mark = (-1);
        jn_Buffer_position($this.$byteBuffer, 0);
        var$4 = $this.$byteBuffer;
        $offset = $this.$buffer4.$limit0 << 2;
        jn_Buffer_limit(var$4, $offset);
    } else {
        var$4 = $this.$byteBuffer;
        var$5 = null;
        var$6 = var$4 instanceof jn_ByteBuffer;
        if (var$6)
            var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
        else if (var$4 instanceof jn_FloatBuffer)
            var$5 = var$4;
        if (var$5 === null) {
            var$5 = new cbgu_GdxRuntimeException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$message = $rt_s(542);
            $rt_throw(var$5);
        }
        var$5.$position0 = 0;
        var$5.$limit0 = var$5.$capacity;
        var$5.$mark = (-1);
        var$4 = var$4;
        jn_Buffer_position(var$4, 0);
        jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
        jn_Buffer_position(var$4, 0);
        if (!var$6)
            jn_Buffer_limit(var$4, $count);
        else
            jn_Buffer_limit(var$4, $count << 2);
        jn_Buffer_position($this.$buffer4, 0);
        jn_Buffer_limit($this.$buffer4, $count);
    }
    if ($this.$isBound1) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer;
        var$4.$glBufferSubData(34962, 0, var$5.$limit0, var$5);
        $this.$isDirty1 = 0;
    }
},
cbggg_VertexBufferObjectSubData_bind = ($this, $shader, $locations) => {
    let $gl, var$4, $location, $numAttributes, $i, var$8, $attribute, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle1);
    if ($this.$isDirty1) {
        var$4 = $this.$byteBuffer;
        $location = $this.$buffer4.$limit0 * 4 | 0;
        jn_Buffer_limit(var$4, $location);
        var$4 = $this.$byteBuffer;
        $gl.$glBufferData(34962, var$4.$limit0, var$4, $this.$usage1);
        $this.$isDirty1 = 0;
    }
    a: {
        $numAttributes = $this.$attributes0.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$8 = $locations.data;
                $attribute = $this.$attributes0.$attributes.data[$i];
                $location = var$8[$i];
                if ($location >= 0) {
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glEnableVertexAttribArray($location);
                    var$10 = $attribute.$numComponents;
                    var$11 = $attribute.$type2;
                    var$12 = $attribute.$normalized;
                    var$13 = $this.$attributes0.$vertexSize;
                    var$14 = $attribute.$offset;
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glVertexAttribPointer($location, var$10, var$11, var$12, var$13, var$14);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = $this.$attributes0.$attributes.data[$i];
            var$15 = $attribute.$alias;
            var$4 = $shader.$attributes1;
            var$16 = (-1);
            $location = cbgu_ObjectIntMap_locateKey(var$4, var$15);
            if ($location >= 0)
                var$16 = var$4.$valueTable0.data[$location];
            if (var$16 >= 0) {
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glEnableVertexAttribArray(var$16);
                $location = $attribute.$numComponents;
                var$10 = $attribute.$type2;
                var$11 = $attribute.$normalized;
                var$12 = $this.$attributes0.$vertexSize;
                var$13 = $attribute.$offset;
                var$4 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$4.$glVertexAttribPointer(var$16, $location, var$10, var$11, var$12, var$13);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound1 = 1;
},
cbggg_VertexBufferObjectSubData_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location, var$7, $i_0, var$9, var$10, var$11;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = $this.$attributes0.$attributes.data.length;
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0) {
                    var$7 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$7.$glDisableVertexAttribArray($location);
                }
                $i = $i + 1 | 0;
            }
        }
        $i_0 = 0;
        while ($i_0 < $numAttributes) {
            var$9 = $this.$attributes0.$attributes.data[$i_0].$alias;
            var$10 = cbg_Gdx_gl20;
            if ($shader.$invalidated) {
                cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                $shader.$invalidated = 0;
            }
            var$11 = cbg_Gdx_gl20;
            var$7 = $shader.$attributes1;
            $location = (-2);
            $i = cbgu_ObjectIntMap_locateKey(var$7, var$9);
            if ($i >= 0)
                $location = var$7.$valueTable0.data[$i];
            if ($location == (-2)) {
                $location = var$11.$glGetAttribLocation($shader.$program, var$9);
                cbgu_ObjectIntMap_put($shader.$attributes1, var$9, $location);
            }
            if ($location != (-1))
                var$10.$glDisableVertexAttribArray($location);
            $i_0 = $i_0 + 1 | 0;
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound1 = 0;
};
function cbggg_IndexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$buffer6 = null;
    a.$byteBuffer0 = null;
    a.$bufferHandle3 = 0;
    a.$isDirect1 = 0;
    a.$isDirty0 = 0;
    a.$isBound2 = 0;
    a.$usage4 = 0;
}
let cbggg_IndexBufferObjectSubData__init_0 = ($this, $isStatic, $maxIndices) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    a: {
        $this.$isDirty0 = 1;
        $this.$isBound2 = 0;
        $maxIndices = $maxIndices * 2 | 0;
        if (!cgxgbt_TeaTool_isProd) {
            var$3 = $rt_createByteArray($maxIndices).data;
            var$4 = var$3.length;
            if (var$4 >= 0 && var$4 <= (var$4 - 0 | 0)) {
                var$5 = new jn_ByteBufferImpl;
                var$6 = 0 + var$4 | 0;
                var$5.$mark = (-1);
                var$5.$capacity = var$4;
                var$5.$limit0 = var$4;
                var$5.$order = jn_ByteOrder_BIG_ENDIAN;
                var$5.$start0 = 0;
                var$5.$bkArray = $rt_createByteArray(var$4);
                var$7 = new cgxgbtdt_Int8ArrayNative;
                var$7.$buffer0 = new Int8Array(var$4);
                var$5.$array = var$7;
                var$8 = 0;
                while (var$8 < var$4) {
                    var$9 = var$3[var$8];
                    var$7 = var$5.$array;
                    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$7);
                    var$7.$buffer0[var$8] = var$9;
                    var$8 = var$8 + 1 | 0;
                }
                var$5.$position0 = 0;
                var$5.$limit0 = var$6;
                var$5.$direct = 0;
                var$5.$readOnly0 = 0;
                break a;
            }
            var$5 = new jl_IndexOutOfBoundsException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$5);
            $rt_throw(var$5);
        }
        if ($maxIndices < 0) {
            var$5 = new jl_IllegalArgumentException;
            var$7 = new jl_StringBuilder;
            var$7.$buffer = $rt_createCharArray(16);
            $isStatic = var$7.$length0;
            var$10 = var$7;
            var$11 = $rt_s(529);
            jl_StringBuilder_insert0(var$10, $isStatic, var$11);
            jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $maxIndices, 10);
            var$12 = new jl_String;
            var$3 = var$7.$buffer;
            var$13 = var$3.data;
            $maxIndices = var$7.$length0;
            var$4 = var$13.length;
            if ($maxIndices >= 0 && $maxIndices <= (var$4 - 0 | 0)) {
                var$12.$nativeString = $rt_charArrayToString(var$3.data, 0, $maxIndices);
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = var$12;
                $rt_throw(var$5);
            }
            var$5 = new jl_IndexOutOfBoundsException;
            jl_Exception__init_0(var$5);
            $rt_throw(var$5);
        }
        var$5 = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray($maxIndices).data;
        var$5.$mark = (-1);
        var$5.$capacity = $maxIndices;
        var$5.$limit0 = $maxIndices;
        var$5.$order = jn_ByteOrder_BIG_ENDIAN;
        var$5.$start0 = 0;
        var$14 = var$3.length;
        var$5.$bkArray = $rt_createByteArray(var$14);
        var$7 = new cgxgbtdt_Int8ArrayNative;
        var$7.$buffer0 = new Int8Array(var$14);
        var$5.$array = var$7;
        var$8 = 0;
        while (var$8 < var$14) {
            var$9 = var$3[var$8];
            var$7 = var$5.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$7);
            var$7.$buffer0[var$8] = var$9;
            var$8 = var$8 + 1 | 0;
        }
        var$5.$position0 = 0;
        var$5.$limit0 = $maxIndices;
        var$5.$direct = 1;
        var$5.$readOnly0 = 0;
        var$5.$order = jn_ByteOrder_nativeOrder();
    }
    $this.$byteBuffer0 = var$5;
    $this.$isDirect1 = 1;
    $this.$usage4 = !$isStatic ? 35048 : 35044;
    var$5 = jn_ByteBufferImpl_asShortBuffer(var$5);
    $this.$buffer6 = var$5;
    var$5 = var$5;
    var$5.$limit0 = var$5.$position0;
    var$5.$position0 = 0;
    var$5.$mark = (-1);
    var$5 = $this.$byteBuffer0;
    var$5.$limit0 = var$5.$position0;
    var$5.$position0 = 0;
    var$5.$mark = (-1);
    var$5 = cbg_Gdx_gl20;
    var$7 = var$5.$gl.createBuffer();
    $maxIndices = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4(var$5.$buffers, var$7);
    cbg_Gdx_gl20.$glBindBuffer(34963, $maxIndices);
    cbg_Gdx_gl20.$glBufferData(34963, $this.$byteBuffer0.$capacity, null, $this.$usage4);
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$bufferHandle3 = $maxIndices;
},
cbggg_IndexBufferObjectSubData__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_IndexBufferObjectSubData();
    cbggg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_IndexBufferObjectSubData_getNumIndices = $this => {
    return $this.$buffer6.$limit0;
},
cbggg_IndexBufferObjectSubData_getNumMaxIndices = $this => {
    return $this.$buffer6.$capacity;
},
cbggg_IndexBufferObjectSubData_setIndices = ($this, $indices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty0 = 1;
    var$4 = $this.$buffer6;
    var$5 = var$4;
    var$5.$position0 = 0;
    var$5.$limit0 = var$5.$capacity;
    var$5.$mark = (-1);
    jn_ShortBuffer_put(var$4, $indices, $offset, $count);
    var$4 = $this.$buffer6;
    var$4.$limit0 = var$4.$position0;
    var$4.$position0 = 0;
    var$4.$mark = (-1);
    jn_Buffer_position($this.$byteBuffer0, 0);
    var$4 = $this.$byteBuffer0;
    $offset = $count << 1;
    jn_Buffer_limit(var$4, $offset);
    if ($this.$isBound2) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer0;
        var$4.$glBufferSubData(34963, 0, var$5.$limit0, var$5);
        $this.$isDirty0 = 0;
    }
},
cbggg_IndexBufferObjectSubData_getBuffer = ($this, $forWriting) => {
    $this.$isDirty0 = $this.$isDirty0 | $forWriting;
    return $this.$buffer6;
},
cbggg_IndexBufferObjectSubData_bind = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$bufferHandle3;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(544);
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty0) {
        var$2 = $this.$byteBuffer0;
        var$3 = $this.$buffer6.$limit0 * 2 | 0;
        jn_Buffer_limit(var$2, var$3);
        var$2 = cbg_Gdx_gl20;
        var$4 = $this.$byteBuffer0;
        var$2.$glBufferSubData(34963, 0, var$4.$limit0, var$4);
        $this.$isDirty0 = 0;
    }
    $this.$isBound2 = 1;
},
cbggg_IndexBufferObjectSubData_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound2 = 0;
};
function cbggg_VertexBufferObjectWithVAO() {
    let a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$buffer5 = null;
    a.$bufferHandle0 = 0;
    a.$isStatic1 = 0;
    a.$usage3 = 0;
    a.$isDirty2 = 0;
    a.$isBound3 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
let cbggg_VertexBufferObjectWithVAO_tmpHandle = null,
cbggg_VertexBufferObjectWithVAO_$callClinit = () => {
    cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
    cbggg_VertexBufferObjectWithVAO__clinit_();
},
cbggg_VertexBufferObjectWithVAO__init_0 = ($this, $isStatic, $numVertices, $attributes) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    $this.$isDirty2 = 0;
    $this.$isBound3 = 0;
    $this.$vaoHandle = (-1);
    var$4 = new cbgu_IntArray;
    var$4.$ordered0 = 1;
    var$4.$items0 = $rt_createIntArray(16);
    $this.$cachedLocations = var$4;
    $this.$isStatic1 = $isStatic;
    $this.$attributes3 = $attributes;
    $numVertices = $rt_imul($attributes.$vertexSize / 4 | 0, $numVertices);
    if (!cgxgbt_TeaTool_isProd) {
        var$5 = $rt_createFloatArray($numVertices);
        var$6 = var$5.data.length;
        $attributes = new jn_FloatBufferOverArray;
        var$7 = 0 + var$6 | 0;
        $attributes.$mark = (-1);
        $attributes.$capacity = var$6;
        $attributes.$limit0 = var$6;
        $attributes.$position0 = 0;
        $attributes.$limit0 = var$7;
        $attributes.$start6 = 0;
        $attributes.$readOnly3 = 0;
        $attributes.$array3 = var$5;
    } else {
        $numVertices = $numVertices * 4 | 0;
        if ($numVertices < 0) {
            $attributes = new jl_IllegalArgumentException;
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            $isStatic = var$4.$length0;
            var$8 = var$4;
            var$9 = $rt_s(529);
            jl_StringBuilder_insert0(var$8, $isStatic, var$9);
            jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $numVertices, 10);
            var$10 = new jl_String;
            var$5 = var$4.$buffer;
            var$11 = var$5.data;
            $numVertices = var$4.$length0;
            var$6 = var$11.length;
            if ($numVertices >= 0 && $numVertices <= (var$6 - 0 | 0)) {
                var$10.$nativeString = $rt_charArrayToString(var$5.data, 0, $numVertices);
                $attributes.$suppressionEnabled = 1;
                $attributes.$writableStackTrace = 1;
                $attributes.$message = var$10;
                $rt_throw($attributes);
            }
            $attributes = new jl_IndexOutOfBoundsException;
            jl_Exception__init_0($attributes);
            $rt_throw($attributes);
        }
        var$8 = new jn_ByteBufferImpl;
        var$5 = $rt_createByteArray($numVertices).data;
        var$8.$mark = (-1);
        var$8.$capacity = $numVertices;
        var$8.$limit0 = $numVertices;
        var$8.$order = jn_ByteOrder_BIG_ENDIAN;
        var$8.$start0 = 0;
        var$12 = var$5.length;
        var$8.$bkArray = $rt_createByteArray(var$12);
        var$10 = new cgxgbtdt_Int8ArrayNative;
        var$10.$buffer0 = new Int8Array(var$12);
        var$8.$array = var$10;
        var$13 = 0;
        while (var$13 < var$12) {
            var$14 = var$5[var$13];
            $attributes = var$8.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($attributes);
            $attributes.$buffer0[var$13] = var$14;
            var$13 = var$13 + 1 | 0;
        }
        var$8.$position0 = 0;
        var$8.$limit0 = $numVertices;
        var$8.$direct = 1;
        var$8.$readOnly0 = 0;
        var$8.$order = jn_ByteOrder_nativeOrder();
        $attributes = jn_ByteBufferImpl_asFloatBuffer(var$8);
    }
    $this.$buffer5 = $attributes;
    $attributes.$limit0 = $attributes.$position0;
    $attributes.$position0 = 0;
    $attributes.$mark = (-1);
    $attributes = cbg_Gdx_gl20;
    var$4 = $attributes.$gl.createBuffer();
    $this.$bufferHandle0 = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($attributes.$buffers, var$4);
    $this.$usage3 = !$isStatic ? 35048 : 35044;
    $attributes = cbggg_VertexBufferObjectWithVAO_tmpHandle;
    $attributes.$position0 = 0;
    $attributes.$limit0 = $attributes.$capacity;
    $attributes.$mark = (-1);
    cbg_Gdx_gl30.$glGenVertexArrays(1, $attributes);
    $attributes = cbggg_VertexBufferObjectWithVAO_tmpHandle;
    $numVertices = $attributes.$position0;
    if ($numVertices < $attributes.$limit0) {
        $attributes.$position0 = $numVertices + 1 | 0;
        $this.$vaoHandle = $attributes.$getElement($numVertices);
        return;
    }
    $attributes = new jn_BufferUnderflowException;
    $attributes.$suppressionEnabled = 1;
    $attributes.$writableStackTrace = 1;
    $rt_throw($attributes);
},
cbggg_VertexBufferObjectWithVAO__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObjectWithVAO();
    cbggg_VertexBufferObjectWithVAO__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObjectWithVAO_getAttributes = $this => {
    return $this.$attributes3;
},
cbggg_VertexBufferObjectWithVAO_getNumVertices = $this => {
    return ($this.$buffer5.$limit0 * 4 | 0) / $this.$attributes3.$vertexSize | 0;
},
cbggg_VertexBufferObjectWithVAO_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5, var$6, var$7;
    $this.$isDirty2 = 1;
    var$4 = $this.$buffer5;
    var$5 = null;
    var$6 = var$4 instanceof jn_ByteBuffer;
    if (var$6)
        var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
    else if (var$4 instanceof jn_FloatBuffer)
        var$5 = var$4;
    if (var$5 === null) {
        var$4 = new cbgu_GdxRuntimeException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = $rt_s(542);
        $rt_throw(var$4);
    }
    var$5.$position0 = 0;
    var$5.$limit0 = var$5.$capacity;
    var$5.$mark = (-1);
    var$7 = var$4;
    jn_Buffer_position(var$7, 0);
    jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
    jn_Buffer_position(var$7, 0);
    if (!var$6)
        jn_Buffer_limit(var$7, $count);
    else
        jn_Buffer_limit(var$7, $count << 2);
    jn_Buffer_position($this.$buffer5, 0);
    jn_Buffer_limit($this.$buffer5, $count);
    if ($this.$isBound3) {
        var$7 = cbg_Gdx_gl20;
        var$4 = $this.$buffer5;
        var$7.$glBufferData(34962, var$4.$limit0, var$4, $this.$usage3);
        $this.$isDirty2 = 0;
    }
},
cbggg_VertexBufferObjectWithVAO_bind = ($this, $shader, $locations) => {
    let $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations);
    if ($this.$isDirty2) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle0);
        $shader = $this.$buffer5;
        jn_Buffer_limit($shader, $shader.$limit0);
        $shader = $this.$buffer5;
        $gl.$glBufferData(34962, $shader.$limit0, $shader, $this.$usage3);
        $this.$isDirty2 = 0;
    }
    $this.$isBound3 = 1;
},
cbggg_VertexBufferObjectWithVAO_bindAttributes = ($this, $shader, $locations) => {
    let $attribute, $i, $stillValid, $numAttributes, var$7, $i_0, $attribute_0, var$10, var$11, var$12, $location, var$14, var$15;
    $attribute = $this.$cachedLocations;
    $i = $attribute.$size0;
    $stillValid = !$i ? 0 : 1;
    a: {
        $numAttributes = $this.$attributes3.$attributes.data.length;
        if ($stillValid) {
            if ($locations === null) {
                $i = 0;
                b: {
                    while (true) {
                        if (!$stillValid)
                            break b;
                        if ($i >= $numAttributes)
                            break b;
                        $attribute = $this.$attributes3.$attributes.data[$i].$alias;
                        var$7 = $shader.$attributes1;
                        $i_0 = (-1);
                        $stillValid = cbgu_ObjectIntMap_locateKey(var$7, $attribute);
                        if ($stillValid >= 0)
                            $i_0 = var$7.$valueTable0.data[$stillValid];
                        $attribute = $this.$cachedLocations;
                        if ($i >= $attribute.$size0)
                            break;
                        $stillValid = $i_0 != $attribute.$items0.data[$i] ? 0 : 1;
                        $i = $i + 1 | 0;
                    }
                    var$7 = new jl_IndexOutOfBoundsException;
                    $shader = new jl_StringBuilder;
                    $shader.$buffer = $rt_createCharArray(16);
                    $stillValid = $shader.$length0;
                    $attribute_0 = $shader;
                    jl_AbstractStringBuilder_insert($attribute_0, $stillValid, $rt_s(31));
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length0, $i, 10);
                    jl_AbstractStringBuilder_insert($attribute_0, $shader.$length0, $rt_s(32));
                    $i = $attribute.$size0;
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length0, $i, 10);
                    $attribute = new jl_String;
                    $locations = $shader.$buffer;
                    var$10 = $locations.data;
                    $stillValid = $shader.$length0;
                    $numAttributes = var$10.length;
                    if ($stillValid >= 0 && $stillValid <= ($numAttributes - 0 | 0)) {
                        $attribute.$nativeString = $rt_charArrayToString($locations.data, 0, $stillValid);
                        var$7.$suppressionEnabled = 1;
                        var$7.$writableStackTrace = 1;
                        var$7.$message = $attribute;
                        $rt_throw(var$7);
                    }
                    $shader = new jl_IndexOutOfBoundsException;
                    jl_Throwable__init_($shader);
                    $rt_throw($shader);
                }
            } else {
                var$10 = $locations.data;
                $stillValid = var$10.length != $i ? 0 : 1;
                $i_0 = 0;
                while (true) {
                    if (!$stillValid)
                        break a;
                    if ($i_0 >= $numAttributes)
                        break a;
                    $stillValid = var$10[$i_0];
                    if ($i_0 >= $i)
                        break;
                    $stillValid = $stillValid != $attribute.$items0.data[$i_0] ? 0 : 1;
                    $i_0 = $i_0 + 1 | 0;
                }
                var$7 = new jl_IndexOutOfBoundsException;
                $shader = new jl_StringBuilder;
                $shader.$buffer = $rt_createCharArray(16);
                $i = $shader.$length0;
                $attribute_0 = $shader;
                jl_AbstractStringBuilder_insert($attribute_0, $i, $rt_s(31));
                jl_AbstractStringBuilder_insert0($shader, $shader.$length0, $i_0, 10);
                jl_AbstractStringBuilder_insert($attribute_0, $shader.$length0, $rt_s(32));
                $i = $attribute.$size0;
                jl_AbstractStringBuilder_insert0($shader, $shader.$length0, $i, 10);
                $attribute = new jl_String;
                $locations = $shader.$buffer;
                var$10 = $locations.data;
                $stillValid = $shader.$length0;
                $numAttributes = var$10.length;
                if ($stillValid >= 0 && $stillValid <= ($numAttributes - 0 | 0)) {
                    $attribute.$nativeString = $rt_charArrayToString($locations.data, 0, $stillValid);
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    var$7.$message = $attribute;
                    $rt_throw(var$7);
                }
                $shader = new jl_IndexOutOfBoundsException;
                jl_Throwable__init_($shader);
                $rt_throw($shader);
            }
        }
    }
    c: {
        if (!$stillValid) {
            d: {
                cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle0);
                if ($this.$cachedLocations.$size0) {
                    var$11 = $this.$attributes3.$attributes.data.length;
                    $i = 0;
                    while (true) {
                        if ($i >= var$11)
                            break d;
                        $attribute = $this.$cachedLocations;
                        if ($i >= $attribute.$size0)
                            break;
                        $i_0 = $attribute.$items0.data[$i];
                        if ($i_0 >= 0) {
                            $attribute = cbg_Gdx_gl20;
                            if ($shader.$invalidated) {
                                cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                                $shader.$invalidated = 0;
                            }
                            $attribute.$glDisableVertexAttribArray($i_0);
                        }
                        $i = $i + 1 | 0;
                    }
                    var$7 = new jl_IndexOutOfBoundsException;
                    $shader = new jl_StringBuilder;
                    $shader.$buffer = $rt_createCharArray(16);
                    $stillValid = $shader.$length0;
                    $attribute_0 = $shader;
                    jl_AbstractStringBuilder_insert($attribute_0, $stillValid, $rt_s(31));
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length0, $i, 10);
                    jl_AbstractStringBuilder_insert($attribute_0, $shader.$length0, $rt_s(32));
                    $i = $attribute.$size0;
                    jl_AbstractStringBuilder_insert0($shader, $shader.$length0, $i, 10);
                    $attribute = new jl_String;
                    $locations = $shader.$buffer;
                    var$10 = $locations.data;
                    $stillValid = $shader.$length0;
                    $numAttributes = var$10.length;
                    if ($stillValid >= 0 && $stillValid <= ($numAttributes - 0 | 0)) {
                        $attribute.$nativeString = $rt_charArrayToString($locations.data, 0, $stillValid);
                        var$7.$suppressionEnabled = 1;
                        var$7.$writableStackTrace = 1;
                        var$7.$message = $attribute;
                        $rt_throw(var$7);
                    }
                    $shader = new jl_IndexOutOfBoundsException;
                    jl_Exception__init_0($shader);
                    $rt_throw($shader);
                }
            }
            $this.$cachedLocations.$size0 = 0;
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break c;
                $attribute_0 = $this.$attributes3.$attributes.data[$i];
                if ($locations !== null) {
                    var$10 = $locations.data;
                    cbgu_IntArray_add($this.$cachedLocations, var$10[$i]);
                } else {
                    $attribute = $this.$cachedLocations;
                    var$7 = $attribute_0.$alias;
                    var$12 = $shader.$attributes1;
                    $stillValid = (-1);
                    $i_0 = cbgu_ObjectIntMap_locateKey(var$12, var$7);
                    if ($i_0 >= 0)
                        $stillValid = var$12.$valueTable0.data[$i_0];
                    cbgu_IntArray_add($attribute, $stillValid);
                }
                $attribute = $this.$cachedLocations;
                if ($i >= $attribute.$size0) {
                    var$12 = new jl_IndexOutOfBoundsException;
                    var$7 = new jl_StringBuilder;
                    var$7.$buffer = $rt_createCharArray(16);
                    $stillValid = var$7.$length0;
                    $shader = var$7;
                    jl_AbstractStringBuilder_insert($shader, $stillValid, $rt_s(31));
                    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $i, 10);
                    jl_AbstractStringBuilder_insert($shader, var$7.$length0, $rt_s(32));
                    $i = $attribute.$size0;
                    jl_AbstractStringBuilder_insert0(var$7, var$7.$length0, $i, 10);
                    $shader = new jl_String;
                    $locations = var$7.$buffer;
                    var$10 = $locations.data;
                    $stillValid = var$7.$length0;
                    $numAttributes = var$10.length;
                    if ($stillValid >= 0 && $stillValid <= ($numAttributes - 0 | 0)) {
                        $shader.$nativeString = $rt_charArrayToString($locations.data, 0, $stillValid);
                        var$12.$suppressionEnabled = 1;
                        var$12.$writableStackTrace = 1;
                        var$12.$message = $shader;
                        $rt_throw(var$12);
                    }
                    $shader = new jl_IndexOutOfBoundsException;
                    jl_Throwable__init_($shader);
                    $rt_throw($shader);
                }
                $location = $attribute.$items0.data[$i];
                if ($location >= 0) {
                    $attribute = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    $attribute.$glEnableVertexAttribArray($location);
                    $stillValid = $attribute_0.$numComponents;
                    $i_0 = $attribute_0.$type2;
                    var$11 = $attribute_0.$normalized;
                    var$14 = $this.$attributes3.$vertexSize;
                    var$15 = $attribute_0.$offset;
                    $attribute = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    $attribute.$glVertexAttribPointer($location, $stillValid, $i_0, var$11, var$14, var$15);
                }
                $i = $i + 1 | 0;
            }
        }
    }
},
cbggg_VertexBufferObjectWithVAO_unbind = ($this, $shader, $locations) => {
    cbg_Gdx_gl30.$glBindVertexArray(0);
    $this.$isBound3 = 0;
},
cbggg_VertexBufferObjectWithVAO__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    if (!cgxgbt_TeaTool_isProd) {
        var$1 = $rt_createIntArray(1);
        var$2 = var$1.data.length;
        var$3 = new jn_IntBufferOverArray;
        var$4 = 0 + var$2 | 0;
        var$3.$mark = (-1);
        var$3.$capacity = var$2;
        var$3.$limit0 = var$2;
        var$3.$position0 = 0;
        var$3.$limit0 = var$4;
        var$3.$start4 = 0;
        var$3.$readOnly2 = 0;
        var$3.$array2 = var$1;
    } else {
        var$3 = new jn_ByteBufferImpl;
        var$1 = $rt_createByteArray(4).data;
        var$3.$mark = (-1);
        var$3.$capacity = 4;
        var$3.$limit0 = 4;
        var$3.$order = jn_ByteOrder_BIG_ENDIAN;
        var$3.$start0 = 0;
        var$5 = var$1.length;
        var$3.$bkArray = $rt_createByteArray(var$5);
        var$6 = new cgxgbtdt_Int8ArrayNative;
        var$6.$buffer0 = new Int8Array(var$5);
        var$3.$array = var$6;
        var$7 = 0;
        while (var$7 < var$5) {
            var$8 = var$1[var$7];
            var$6 = var$3.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$6);
            var$6.$buffer0[var$7] = var$8;
            var$7 = var$7 + 1 | 0;
        }
        var$3.$position0 = 0;
        var$3.$limit0 = 4;
        var$3.$direct = 1;
        var$3.$readOnly0 = 0;
        var$3.$order = jn_ByteOrder_nativeOrder();
        var$3 = jn_ByteBufferImpl_asIntBuffer(var$3);
    }
    cbggg_VertexBufferObjectWithVAO_tmpHandle = var$3;
},
cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject),
cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject);
function cbgu_ObjectIntMap() {
    let a = this; jl_Object.call(a);
    a.$size7 = 0;
    a.$keyTable2 = null;
    a.$valueTable0 = null;
    a.$loadFactor0 = 0.0;
    a.$threshold4 = 0;
    a.$shift2 = 0;
    a.$mask3 = 0;
}
let cbgu_ObjectIntMap__init_0 = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor0 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold4 = $tableSize * $loadFactor | 0;
        $initialCapacity = $tableSize - 1 | 0;
        $this.$mask3 = $initialCapacity;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
        $this.$keyTable2 = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable0 = $rt_createIntArray($tableSize);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $initialCapacity = var$5.$length0;
    var$6 = var$5;
    jl_AbstractStringBuilder_insert(var$6, $initialCapacity, $rt_s(56));
    jl_AbstractStringBuilder_insert1(var$6, var$5.$length0, $loadFactor);
    var$7 = new jl_String;
    var$8 = var$5.$buffer;
    var$9 = var$8.data;
    $tableSize = var$5.$length0;
    var$10 = var$9.length;
    if ($tableSize >= 0 && $tableSize <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    var$5.$suppressionEnabled = 1;
    var$5.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$5);
    $rt_throw(var$5);
},
cbgu_ObjectIntMap__init_ = (var_0, var_1) => {
    let var_2 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_ObjectIntMap_locateKey = ($this, $key) => {
    let $other, $keyTable, $i, var$5, var$6;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        $other.$suppressionEnabled = 1;
        $other.$writableStackTrace = 1;
        $other.$message = $rt_s(57);
        $rt_throw($other);
    }
    a: {
        $keyTable = $this.$keyTable2;
        $other = $key;
        if (!$other.$hashCode0) {
            $i = 0;
            while (true) {
                if ($i >= $other.$nativeString.length)
                    break a;
                $other.$hashCode0 = (31 * $other.$hashCode0 | 0) + $other.$nativeString.charCodeAt($i) | 0;
                $i = $i + 1 | 0;
            }
        }
    }
    $i = Long_lo(Long_shru(Long_mul(Long_fromInt($other.$hashCode0), Long_create(2135587861, 2654435769)), $this.$shift2));
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        $other = $other;
        if ($other === $key)
            var$5 = 1;
        else if (!($key instanceof jl_String))
            var$5 = 0;
        else {
            var$6 = $key;
            var$5 = $other.$nativeString !== var$6.$nativeString ? 0 : 1;
        }
        if (var$5)
            break;
        $i = ($i + 1 | 0) & $this.$mask3;
    }
    return $i;
},
cbgu_ObjectIntMap_put = ($this, $key, $value) => {
    let $i, var$4;
    $i = cbgu_ObjectIntMap_locateKey($this, $key);
    if ($i >= 0) {
        $this.$valueTable0.data[$i] = $value;
        return;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable2.data;
    var$4[$i] = $key;
    $this.$valueTable0.data[$i] = $value;
    $value = $this.$size7 + 1 | 0;
    $this.$size7 = $value;
    if ($value >= $this.$threshold4)
        cbgu_ObjectIntMap_resize($this, var$4.length << 1);
},
cbgu_ObjectIntMap_resize = ($this, $newSize) => {
    let $oldCapacity, var$3, $oldKeyTable, $oldValueTable, $i, $key, var$8, var$9, var$10, var$11, var$12;
    a: {
        $oldCapacity = $this.$keyTable2.data.length;
        $this.$threshold4 = $newSize * $this.$loadFactor0 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask3 = var$3;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $oldKeyTable = $this.$keyTable2;
        $oldValueTable = $this.$valueTable0;
        $this.$keyTable2 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable0 = $rt_createIntArray($newSize);
        if ($this.$size7 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null) {
                    b: {
                        var$8 = $oldValueTable.data[$i];
                        var$9 = $this.$keyTable2;
                        var$10 = $key;
                        if (!var$10.$hashCode0) {
                            var$11 = 0;
                            while (true) {
                                if (var$11 >= var$10.$nativeString.length)
                                    break b;
                                var$10.$hashCode0 = (31 * var$10.$hashCode0 | 0) + var$10.$nativeString.charCodeAt(var$11) | 0;
                                var$11 = var$11 + 1 | 0;
                            }
                        }
                    }
                    $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt(var$10.$hashCode0), Long_create(2135587861, 2654435769)), $this.$shift2));
                    while (true) {
                        var$12 = var$9.data;
                        if (var$12[$newSize] === null)
                            break;
                        $newSize = ($newSize + 1 | 0) & $this.$mask3;
                    }
                    var$12[$newSize] = $key;
                    $this.$valueTable0.data[$newSize] = var$8;
                }
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgu_BufferUtils = $rt_classWithoutFields(),
cbgu_BufferUtils_unsafeBuffers = null,
cbgu_BufferUtils_allocatedUnsafe = 0,
cbgu_BufferUtils__clinit_ = () => {
    let var$1;
    var$1 = new cbgu_Array;
    var$1.$ordered = 1;
    var$1.$items = $rt_createArray(jl_Object, 16);
    cbgu_BufferUtils_unsafeBuffers = var$1;
    cbgu_BufferUtils_allocatedUnsafe = 0;
},
otr_EventQueue$Event = $rt_classWithoutFields(0),
jl_ThreadInterruptHandler = $rt_classWithoutFields(0);
function jl_Thread$SleepHandler() {
    let a = this; jl_Object.call(a);
    a.$thread = null;
    a.$callback = null;
    a.$isInterrupted = 0;
    a.$scheduleId = 0;
}
let jl_Thread$SleepHandler_run = $this => {
    let var$1, var$2;
    if (!$this.$isInterrupted) {
        var$1 = $this.$thread;
        var$1.$interruptHandler = null;
        if (jl_Thread_currentThread !== var$1)
            jl_Thread_currentThread = var$1;
        jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
        var$2 = $this.$callback;
        var$1 = null;
        var$2.$realAsyncCallback.$complete(var$1);
    }
},
cbgf_FileHandle = $rt_classWithoutFields(),
cbgf_FileHandle_estimateLength = $this => {
    let var$1, var$2, var$3, $length;
    var$1 = $this;
    var$2 = var$1.$teaFiles;
    var$3 = var$1.$type1;
    var$2 = var$3 === cbg_Files$FileType_Internal ? var$2.$internalStorage : var$3 === cbg_Files$FileType_Classpath ? var$2.$classpathStorage : var$3 !== cbg_Files$FileType_Local ? null : var$2.$localStorage;
    var$1 = cgxgbtf_MemoryFileStorage_getInternal(var$2, cgxgbtf_MemoryFileStorage_fixPath(var$2, var$1.$file));
    $length = Long_lo((var$1 !== null && !(var$1.$type3 != 1 ? 0 : 1) ? Long_fromInt(var$1.$bytes.data.length) : Long_ZERO));
    if (!$length)
        $length = 512;
    return $length;
};
function jn_Buffer() {
    let a = this; jl_Object.call(a);
    a.$capacity = 0;
    a.$position0 = 0;
    a.$limit0 = 0;
    a.$mark = 0;
}
let jn_Buffer__init_ = ($this, $capacity) => {
    $this.$mark = (-1);
    $this.$capacity = $capacity;
    $this.$limit0 = $capacity;
},
jn_Buffer_position = ($this, $newPosition) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($newPosition >= 0 && $newPosition <= $this.$limit0) {
        $this.$position0 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(545);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $newPosition, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, var$3, 10);
    var$3 = var$4.$length0;
    jl_AbstractStringBuilder_insertSpace(var$6, var$3, var$3 + 1 | 0);
    var$6.$buffer.data[var$3] = 93;
    var$7 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$3 = var$4.$length0;
    var$5 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$5 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$7;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
},
jn_Buffer_limit = ($this, $newLimit) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($newLimit >= 0 && $newLimit <= $this.$capacity) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit0 = $newLimit;
        if ($this.$position0 > $newLimit)
            $this.$position0 = $newLimit;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$capacity;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(547);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $newLimit, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, var$3, 10);
    var$3 = var$4.$length0;
    jl_AbstractStringBuilder_insertSpace(var$6, var$3, var$3 + 1 | 0);
    var$6.$buffer.data[var$3] = 93;
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$3 = var$4.$length0;
    var$5 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$5 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
},
jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer),
jn_FloatBuffer_put = ($this, $src, $offset, $length) => {
    let var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11, var$12, var$13;
    if ($this.$readOnly()) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    var$5 = $this.$limit0;
    $pos = $this.$position0;
    if ((var$5 - $pos | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        var$5 = var$7.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i > var$5) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                $offset = var$9.$length0;
                var$10 = var$9;
                var$11 = $rt_s(548);
                var$10 = var$10;
                jl_AbstractStringBuilder_insert(var$10, $offset, var$11);
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $i, 10);
                jl_AbstractStringBuilder_insert(var$10, var$9.$length0, $rt_s(549));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, var$5, 10);
                var$11 = new jl_String;
                $src = var$9.$buffer;
                var$7 = $src.data;
                $length = var$9.$length0;
                var$5 = var$7.length;
                if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                    var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$11;
                    $rt_throw(var$4);
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace(var$4);
                $rt_throw(var$4);
            }
            if ($length >= 0) {
                $i = 0;
                while ($i < $length) {
                    var$12 = $pos + 1 | 0;
                    var$5 = $offset + 1 | 0;
                    $this.$putElement($pos, var$7[$offset]);
                    $i = $i + 1 | 0;
                    $pos = var$12;
                    $offset = var$5;
                }
                $this.$position0 = $this.$position0 + $length | 0;
                return $this;
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$9 = new jl_StringBuilder;
            var$9.$buffer = $rt_createCharArray(16);
            $offset = var$9.$length0;
            var$10 = var$9;
            var$13 = $rt_s(550);
            var$11 = var$10;
            jl_AbstractStringBuilder_insert(var$11, $offset, var$13);
            jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
            jl_AbstractStringBuilder_insert(var$11, var$9.$length0, $rt_s(551));
            var$11 = new jl_String;
            $src = var$9.$buffer;
            var$7 = $src.data;
            $length = var$9.$length0;
            var$5 = var$7.length;
            if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$11;
                $rt_throw(var$4);
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$4);
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    var$5 = var$9.$length0;
    var$10 = var$9;
    var$13 = $rt_s(552);
    var$11 = var$10;
    jl_AbstractStringBuilder_insert(var$11, var$5, var$13);
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $offset, 10);
    jl_AbstractStringBuilder_insert(var$11, var$9.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
    $length = var$9.$length0;
    jl_AbstractStringBuilder_insertSpace(var$10, $length, $length + 1 | 0);
    var$10.$buffer.data[$length] = 41;
    var$11 = new jl_String;
    $src = var$9.$buffer;
    var$7 = $src.data;
    $length = var$9.$length0;
    var$5 = var$7.length;
    if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$11;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$4);
    $rt_throw(var$4);
},
jn_FloatBuffer_limit0 = ($this, $newLimit) => {
    jn_Buffer_limit($this, $newLimit);
    return $this;
},
jn_FloatBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position($this, $newPosition);
    return $this;
},
jn_FloatBuffer_flip = $this => {
    $this.$limit0 = $this.$position0;
    $this.$position0 = 0;
    $this.$mark = (-1);
    return $this;
},
jn_FloatBuffer_clear = $this => {
    $this.$position0 = 0;
    $this.$limit0 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
},
jn_FloatBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_FloatBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
},
jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer),
jn_ShortBuffer_put = ($this, $src, $offset, $length) => {
    let var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11, var$12, var$13;
    if ($this.$readOnly()) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    var$5 = $this.$limit0;
    $pos = $this.$position0;
    if ((var$5 - $pos | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        var$5 = var$7.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i > var$5) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                $offset = var$9.$length0;
                var$10 = var$9;
                var$11 = $rt_s(553);
                var$10 = var$10;
                jl_AbstractStringBuilder_insert(var$10, $offset, var$11);
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $i, 10);
                jl_AbstractStringBuilder_insert(var$10, var$9.$length0, $rt_s(549));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, var$5, 10);
                var$11 = new jl_String;
                $src = var$9.$buffer;
                var$7 = $src.data;
                $length = var$9.$length0;
                var$5 = var$7.length;
                if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                    var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$11;
                    $rt_throw(var$4);
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace(var$4);
                $rt_throw(var$4);
            }
            if ($length >= 0) {
                $i = 0;
                while ($i < $length) {
                    var$12 = $pos + 1 | 0;
                    var$5 = $offset + 1 | 0;
                    $this.$putElement0($pos, var$7[$offset]);
                    $i = $i + 1 | 0;
                    $pos = var$12;
                    $offset = var$5;
                }
                $this.$position0 = $this.$position0 + $length | 0;
                return $this;
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$9 = new jl_StringBuilder;
            var$9.$buffer = $rt_createCharArray(16);
            $offset = var$9.$length0;
            var$10 = var$9;
            var$13 = $rt_s(550);
            var$11 = var$10;
            jl_AbstractStringBuilder_insert(var$11, $offset, var$13);
            jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
            jl_AbstractStringBuilder_insert(var$11, var$9.$length0, $rt_s(551));
            var$11 = new jl_String;
            $src = var$9.$buffer;
            var$7 = $src.data;
            $length = var$9.$length0;
            var$5 = var$7.length;
            if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$11;
                $rt_throw(var$4);
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$4);
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    var$5 = var$9.$length0;
    var$10 = var$9;
    var$13 = $rt_s(552);
    var$11 = var$10;
    jl_AbstractStringBuilder_insert(var$11, var$5, var$13);
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $offset, 10);
    jl_AbstractStringBuilder_insert(var$11, var$9.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
    $length = var$9.$length0;
    jl_AbstractStringBuilder_insertSpace(var$10, $length, $length + 1 | 0);
    var$10.$buffer.data[$length] = 41;
    var$11 = new jl_String;
    $src = var$9.$buffer;
    var$7 = $src.data;
    $length = var$9.$length0;
    var$5 = var$7.length;
    if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$11;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$4);
    $rt_throw(var$4);
},
jn_ShortBuffer_limit0 = ($this, $newLimit) => {
    jn_Buffer_limit($this, $newLimit);
    return $this;
},
jn_ShortBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position($this, $newPosition);
    return $this;
},
jn_ShortBuffer_flip = $this => {
    $this.$limit0 = $this.$position0;
    $this.$position0 = 0;
    $this.$mark = (-1);
    return $this;
},
jn_ShortBuffer_clear = $this => {
    $this.$position0 = 0;
    $this.$limit0 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
},
jn_ShortBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_ShortBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
},
cgxgbt_TeaTool = $rt_classWithoutFields(),
cgxgbt_TeaTool_isProd = 0,
cgxgbt_TeaTool__clinit_ = () => {
    cgxgbt_TeaTool_isProd = 1;
},
jn_IntBuffer = $rt_classWithoutFields(jn_Buffer),
jn_IntBuffer_clear = $this => {
    $this.$position0 = 0;
    $this.$limit0 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
},
cgxgbtdt_HasArrayBufferView = $rt_classWithoutFields(0);
function jn_ByteBuffer() {
    let a = this; jn_Buffer.call(a);
    a.$start0 = 0;
    a.$array = null;
    a.$bkArray = null;
    a.$order = null;
}
let jn_ByteBuffer_get = ($this, $dst, $offset, $length) => {
    let var$4, var$5, $pos, var$7, var$8, var$9, var$10, $i, var$12, var$13;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            $pos = $offset + $length | 0;
            if ($pos > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                $offset = var$8.$length0;
                var$9 = var$8;
                var$10 = $rt_s(554);
                var$9 = var$9;
                jl_AbstractStringBuilder_insert(var$9, $offset, var$10);
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $pos, 10);
                jl_AbstractStringBuilder_insert(var$9, var$8.$length0, $rt_s(549));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, var$5, 10);
                var$10 = new jl_String;
                $dst = var$8.$buffer;
                var$4 = $dst.data;
                $length = var$8.$length0;
                var$5 = var$4.length;
                if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                    var$10.$nativeString = $rt_charArrayToString($dst.data, 0, $length);
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    var$7.$message = var$10;
                    $rt_throw(var$7);
                }
                var$7 = new jl_IndexOutOfBoundsException;
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                $rt_throw(var$7);
            }
            var$5 = $this.$limit0;
            $pos = $this.$position0;
            if ((var$5 - $pos | 0) < $length) {
                var$7 = new jn_BufferUnderflowException;
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                $rt_throw(var$7);
            }
            if ($length >= 0) {
                $pos = $pos + $this.$start0 | 0;
                $i = 0;
                while ($i < $length) {
                    var$12 = $offset + 1 | 0;
                    var$7 = $this.$array;
                    var$5 = $pos + 1 | 0;
                    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$7);
                    var$4[$offset] = var$7.$buffer0[$pos];
                    $i = $i + 1 | 0;
                    $offset = var$12;
                    $pos = var$5;
                }
                $this.$position0 = $this.$position0 + $length | 0;
                return $this;
            }
            var$7 = new jl_IndexOutOfBoundsException;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            $offset = var$8.$length0;
            var$9 = var$8;
            var$10 = $rt_s(550);
            var$9 = var$9;
            jl_AbstractStringBuilder_insert(var$9, $offset, var$10);
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $length, 10);
            jl_AbstractStringBuilder_insert(var$9, var$8.$length0, $rt_s(551));
            var$10 = new jl_String;
            $dst = var$8.$buffer;
            var$4 = $dst.data;
            $length = var$8.$length0;
            var$5 = var$4.length;
            if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                var$10.$nativeString = $rt_charArrayToString($dst.data, 0, $length);
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                var$7.$message = var$10;
                $rt_throw(var$7);
            }
            var$7 = new jl_IndexOutOfBoundsException;
            var$7.$suppressionEnabled = 1;
            var$7.$writableStackTrace = 1;
            $rt_throw(var$7);
        }
    }
    $dst = $dst.data;
    var$7 = new jl_IndexOutOfBoundsException;
    $length = $dst.length;
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    var$5 = var$8.$length0;
    var$9 = var$8;
    var$13 = $rt_s(552);
    var$10 = var$9;
    jl_AbstractStringBuilder_insert(var$10, var$5, var$13);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $offset, 10);
    jl_AbstractStringBuilder_insert(var$10, var$8.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $length, 10);
    $length = var$8.$length0;
    jl_AbstractStringBuilder_insertSpace(var$9, $length, $length + 1 | 0);
    var$9.$buffer.data[$length] = 41;
    var$10 = new jl_String;
    $dst = var$8.$buffer;
    var$4 = $dst.data;
    $length = var$8.$length0;
    var$5 = var$4.length;
    if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
        var$10.$nativeString = $rt_charArrayToString($dst.data, 0, $length);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$10;
        $rt_throw(var$7);
    }
    var$7 = new jl_IndexOutOfBoundsException;
    var$7.$suppressionEnabled = 1;
    var$7.$writableStackTrace = 1;
    $rt_throw(var$7);
},
jn_ByteBuffer_put = ($this, $src, $offset, $length) => {
    let var$4, $pos, $b, var$7, $i, var$9, var$10, var$11, var$12, var$13, var$14;
    if (!$length)
        return $this;
    if ($this.$readOnly0) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    $pos = $this.$limit0;
    $b = $this.$position0;
    if (($pos - $b | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        $pos = var$7.length;
        if ($offset <= $pos) {
            $i = $offset + $length | 0;
            if ($i > $pos) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                $offset = var$9.$length0;
                var$10 = var$9;
                var$11 = $rt_s(555);
                var$10 = var$10;
                jl_AbstractStringBuilder_insert(var$10, $offset, var$11);
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $i, 10);
                jl_AbstractStringBuilder_insert(var$10, var$9.$length0, $rt_s(549));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $pos, 10);
                var$11 = new jl_String;
                $src = var$9.$buffer;
                var$7 = $src.data;
                $length = var$9.$length0;
                $pos = var$7.length;
                if ($length >= 0 && $length <= ($pos - 0 | 0)) {
                    var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$11;
                    $rt_throw(var$4);
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                $rt_throw(var$4);
            }
            if ($length >= 0) {
                $pos = $b + $this.$start0 | 0;
                $i = 0;
                while ($i < $length) {
                    var$12 = $offset + 1 | 0;
                    $b = var$7[$offset];
                    var$4 = $this.$array;
                    var$13 = $pos + 1 | 0;
                    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
                    var$4.$buffer0[$pos] = $b;
                    $i = $i + 1 | 0;
                    $offset = var$12;
                    $pos = var$13;
                }
                $this.$position0 = $this.$position0 + $length | 0;
                return $this;
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$9 = new jl_StringBuilder;
            var$9.$buffer = $rt_createCharArray(16);
            $offset = var$9.$length0;
            var$10 = var$9;
            var$14 = $rt_s(550);
            var$11 = var$10;
            jl_AbstractStringBuilder_insert(var$11, $offset, var$14);
            jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
            jl_AbstractStringBuilder_insert(var$11, var$9.$length0, $rt_s(551));
            var$11 = new jl_String;
            $src = var$9.$buffer;
            var$7 = $src.data;
            $length = var$9.$length0;
            $pos = var$7.length;
            if ($length >= 0 && $length <= ($pos - 0 | 0)) {
                var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$11;
                $rt_throw(var$4);
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    $pos = var$9.$length0;
    var$10 = var$9;
    var$14 = $rt_s(552);
    var$11 = var$10;
    jl_AbstractStringBuilder_insert(var$11, $pos, var$14);
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $offset, 10);
    jl_AbstractStringBuilder_insert(var$11, var$9.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
    $length = var$9.$length0;
    jl_AbstractStringBuilder_insertSpace(var$10, $length, $length + 1 | 0);
    var$10.$buffer.data[$length] = 41;
    var$11 = new jl_String;
    $src = var$9.$buffer;
    var$7 = $src.data;
    $length = var$9.$length0;
    $pos = var$7.length;
    if ($length >= 0 && $length <= ($pos - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$11;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    $rt_throw(var$4);
},
jn_ByteBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_ByteBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
};
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name3 = null;
}
let jn_ByteOrder_BIG_ENDIAN = null,
jn_ByteOrder_LITTLE_ENDIAN = null,
jn_ByteOrder_nativeOrder0 = null,
jn_ByteOrder_nativeOrder = () => {
    let $buffer;
    if (jn_ByteOrder_nativeOrder0 === null) {
        $buffer = new ArrayBuffer(2);
        (new Int16Array($buffer))[0] = 1;
        jn_ByteOrder_nativeOrder0 = (new Int8Array($buffer))[0] ? jn_ByteOrder_LITTLE_ENDIAN : jn_ByteOrder_BIG_ENDIAN;
    }
    return jn_ByteOrder_nativeOrder0;
},
jn_ByteOrder__clinit_ = () => {
    let var$1;
    var$1 = new jn_ByteOrder;
    var$1.$name3 = $rt_s(78);
    jn_ByteOrder_BIG_ENDIAN = var$1;
    var$1 = new jn_ByteOrder;
    var$1.$name3 = $rt_s(79);
    jn_ByteOrder_LITTLE_ENDIAN = var$1;
},
cbgg_TextureData$Factory = $rt_classWithoutFields();
function jn_ByteBufferImpl() {
    let a = this; jn_ByteBuffer.call(a);
    a.$direct = 0;
    a.$readOnly0 = 0;
}
let jn_ByteBufferImpl_compact = $this => {
    let var$1, $dst, var$3, $sz, $src, $i, var$7, var$8, var$9;
    if ($this.$readOnly0) {
        var$1 = new jn_ReadOnlyBufferException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    a: {
        $dst = $this.$limit0;
        var$3 = $this.$position0;
        $sz = $dst - var$3 | 0;
        if (var$3 > 0) {
            $dst = $this.$start0;
            $src = $dst + var$3 | 0;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$7 = $this.$array;
                var$8 = $dst + 1 | 0;
                var$9 = $src + 1 | 0;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$7);
                var$3 = var$7.$buffer0[$src];
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$7);
                var$7.$buffer0[$dst] = var$3;
                $i = $i + 1 | 0;
                $dst = var$8;
                $src = var$9;
            }
        }
    }
    $this.$position0 = $sz;
    $this.$limit0 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
},
jn_ByteBufferImpl_asShortBuffer = $this => {
    let var$1, var$2, $sz, var$4, var$5, var$6;
    var$1 = $this.$limit0;
    var$2 = $this.$position0;
    $sz = (var$1 - var$2 | 0) / 2 | 0;
    if ($this.$order !== jn_ByteOrder_BIG_ENDIAN) {
        var$4 = new jn_ShortBufferOverByteBufferLittleEndian;
        var$5 = $this.$start0 + var$2 | 0;
        var$2 = $this.$readOnly0;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit0 = $sz;
        var$4.$position0 = 0;
        var$4.$limit0 = $sz;
        var$4.$start5 = var$5;
        var$4.$byteByffer1 = $this;
        var$4.$readOnly5 = var$2;
        return var$4;
    }
    var$4 = new jn_ShortBufferOverByteBufferBigEndian;
    var$1 = $this.$start0 + var$2 | 0;
    var$6 = $this.$readOnly0;
    var$4.$mark = (-1);
    var$4.$capacity = $sz;
    var$4.$limit0 = $sz;
    var$4.$position0 = 0;
    var$4.$limit0 = $sz;
    var$4.$start5 = var$1;
    var$4.$byteByffer1 = $this;
    var$4.$readOnly5 = var$6;
    return var$4;
},
jn_ByteBufferImpl_asIntBuffer = $this => {
    let var$1, var$2, $sz, var$4, var$5, var$6;
    var$1 = $this.$limit0;
    var$2 = $this.$position0;
    $sz = (var$1 - var$2 | 0) / 4 | 0;
    if ($this.$order !== jn_ByteOrder_BIG_ENDIAN) {
        var$4 = new jn_IntBufferOverByteBufferLittleEndian;
        var$5 = $this.$start0 + var$2 | 0;
        var$2 = $this.$readOnly0;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit0 = $sz;
        var$4.$position0 = 0;
        var$4.$limit0 = $sz;
        var$4.$start2 = var$5;
        var$4.$byteByffer0 = $this;
        var$4.$readOnly6 = var$2;
        return var$4;
    }
    var$4 = new jn_IntBufferOverByteBufferBigEndian;
    var$1 = $this.$start0 + var$2 | 0;
    var$6 = $this.$readOnly0;
    var$4.$mark = (-1);
    var$4.$capacity = $sz;
    var$4.$limit0 = $sz;
    var$4.$position0 = 0;
    var$4.$limit0 = $sz;
    var$4.$start2 = var$1;
    var$4.$byteByffer0 = $this;
    var$4.$readOnly6 = var$6;
    return var$4;
},
jn_ByteBufferImpl_asFloatBuffer = $this => {
    let var$1, var$2, $sz, var$4, var$5, var$6;
    var$1 = $this.$limit0;
    var$2 = $this.$position0;
    $sz = (var$1 - var$2 | 0) / 4 | 0;
    if ($this.$order !== jn_ByteOrder_LITTLE_ENDIAN) {
        var$4 = new jn_FloatBufferOverByteBufferLittleEndian;
        var$5 = $this.$start0 + var$2 | 0;
        var$2 = $this.$readOnly0;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit0 = $sz;
        var$4.$position0 = 0;
        var$4.$limit0 = $sz;
        var$4.$start1 = var$5;
        var$4.$byteByffer = $this;
        var$4.$readOnly7 = var$2;
        return var$4;
    }
    var$4 = new jn_FloatBufferOverByteBufferBigEndian;
    var$1 = $this.$start0 + var$2 | 0;
    var$6 = $this.$readOnly0;
    var$4.$mark = (-1);
    var$4.$capacity = $sz;
    var$4.$limit0 = $sz;
    var$4.$position0 = 0;
    var$4.$limit0 = $sz;
    var$4.$start1 = var$1;
    var$4.$byteByffer = $this;
    var$4.$readOnly7 = var$6;
    return var$4;
},
cbgur_ArrayReflection = $rt_classWithoutFields(),
cbgg_TextureData = $rt_classWithoutFields(0);
function cbggg_FileTextureData() {
    let a = this; jl_Object.call(a);
    a.$file0 = null;
    a.$width1 = 0;
    a.$height1 = 0;
    a.$format0 = null;
    a.$pixmap = null;
    a.$useMipMaps = 0;
    a.$isPrepared = 0;
}
let cbggg_FileTextureData_copyToPOT = 0,
cbggg_FileTextureData__init_ = ($this, $file, $preloadedPixmap, $format, $useMipMaps) => {
    $this.$width1 = 0;
    $this.$height1 = 0;
    $this.$isPrepared = 0;
    $this.$file0 = $file;
    $this.$pixmap = $preloadedPixmap;
    $this.$format0 = $format;
    $this.$useMipMaps = $useMipMaps;
    if ($preloadedPixmap !== null) {
        $file = cbggg_FileTextureData_ensurePot($this, $preloadedPixmap);
        $this.$pixmap = $file;
        $file = $file.$nativePixmap;
        $this.$width1 = $file.$width;
        $this.$height1 = $file.$height;
        if ($format === null)
            $this.$format0 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat($file.$format);
    }
},
cbggg_FileTextureData__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_FileTextureData();
    cbggg_FileTextureData__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_FileTextureData_prepare = $this => {
    let var$1, var$2;
    if ($this.$isPrepared) {
        var$1 = new cbgu_GdxRuntimeException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(556);
        $rt_throw(var$1);
    }
    if ($this.$pixmap === null) {
        var$1 = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_($this.$file0));
        $this.$pixmap = var$1;
        var$2 = var$1.$nativePixmap;
        $this.$width1 = var$2.$width;
        $this.$height1 = var$2.$height;
        if ($this.$format0 === null)
            $this.$format0 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat(var$2.$format);
    }
    $this.$isPrepared = 1;
},
cbggg_FileTextureData_ensurePot = ($this, $pixmap) => {
    let $tmp_0, var$3, var$4, $potWidth, $potHeight, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
    a: {
        if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
            $tmp_0 = $pixmap.$nativePixmap;
            var$3 = $tmp_0.$width;
            var$4 = $tmp_0.$height;
            $potWidth = cbgm_MathUtils_nextPowerOfTwo(var$3);
            $potHeight = cbgm_MathUtils_nextPowerOfTwo(var$4);
            if (var$3 != $potWidth)
                break a;
            if (var$4 != $potHeight)
                break a;
        }
        return $pixmap;
    }
    $tmp_0 = new cbgg_Pixmap;
    var$7 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat($pixmap.$nativePixmap.$format);
    $tmp_0.$blending = cbgg_Pixmap$Blending_SourceOver;
    $tmp_0.$filter = cbgg_Pixmap$Filter_BiLinear;
    $tmp_0.$color0 = 0;
    var$8 = new cbggg_Gdx2DPixmap;
    var$9 = cbgg_Pixmap$Format_toGdx2DPixmapFormat(var$7);
    var$10 = $rt_createByteArray(0).data;
    var$11 = var$10.length;
    if (var$11 >= 0 && var$11 <= (var$11 - 0 | 0)) {
        var$12 = new jn_ByteBufferImpl;
        var$13 = 0 + var$11 | 0;
        var$12.$mark = (-1);
        var$12.$capacity = var$11;
        var$12.$limit0 = var$11;
        var$12.$order = jn_ByteOrder_BIG_ENDIAN;
        var$12.$start0 = 0;
        var$12.$bkArray = $rt_createByteArray(var$11);
        var$14 = new cgxgbtdt_Int8ArrayNative;
        var$14.$buffer0 = new Int8Array(var$11);
        var$12.$array = var$14;
        var$15 = 0;
        while (var$15 < var$11) {
            var$16 = var$10[var$15];
            var$7 = var$12.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$7);
            var$7.$buffer0[var$15] = var$16;
            var$15 = var$15 + 1 | 0;
        }
        var$12.$position0 = 0;
        var$12.$limit0 = var$13;
        var$12.$direct = 0;
        var$12.$readOnly0 = 0;
        var$8.$buffer2 = var$12;
        var$8.$nativeData = cbggg_Gdx2DPixmap_newPixmapNative$js_body$_35($potWidth, $potHeight, var$9);
        cbggg_Gdx2DPixmap_updateNativeData(var$8);
        $tmp_0.$nativePixmap = var$8;
        $potWidth = cbgg_Color_rgba8888(0.0, 0.0, 0.0, 0.0);
        $tmp_0.$color0 = $potWidth;
        Gdx.Gdx.prototype.g2d_clear($tmp_0.$nativePixmap.$basePtr, $potWidth);
        var$8 = $tmp_0.$nativePixmap;
        Gdx.Gdx.prototype.g2d_draw_pixmap($pixmap.$nativePixmap.$basePtr, var$8.$basePtr, 0, 0, var$3, var$4, 0, 0, var$3, var$4);
        if (!$pixmap.$disposed) {
            Gdx.Gdx.prototype.g2d_free($pixmap.$nativePixmap.$basePtr);
            $pixmap.$disposed = 1;
            return $tmp_0;
        }
        $tmp_0 = new cbgu_GdxRuntimeException;
        $tmp_0.$suppressionEnabled = 1;
        $tmp_0.$writableStackTrace = 1;
        $tmp_0.$message = $rt_s(45);
        $rt_throw($tmp_0);
    }
    $pixmap = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($pixmap);
    $rt_throw($pixmap);
};
function cbgg_Pixmap() {
    let a = this; jl_Object.call(a);
    a.$blending = null;
    a.$filter = null;
    a.$color0 = 0;
    a.$nativePixmap = null;
    a.$disposed = 0;
}
let cbgg_Pixmap__init_0 = ($this, $file) => {
    let $webFileHandler, $path, $bytes, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $$je;
    $this.$blending = cbgg_Pixmap$Blending_SourceOver;
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color0 = 0;
    $webFileHandler = $file;
    $path = $webFileHandler.$file;
    if (!cgxgbt_TeaFileHandle_exists($webFileHandler)) {
        $file = new cbgu_GdxRuntimeException;
        $file.$suppressionEnabled = 1;
        $file.$writableStackTrace = 1;
        $file.$message = $webFileHandler;
        $rt_throw($file);
    }
    $webFileHandler = cgxgbt_TeaFileHandle_read($webFileHandler);
    a: {
        try {
            try {
                $bytes = cbgu_StreamUtils_copyStreamToByteArray($webFileHandler, cbgf_FileHandle_estimateLength($file));
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    var$5 = $$je;
                } else {
                    throw $$e;
                }
            }
            $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder__init_(), $rt_s(557)), $file)), var$5));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $file = $$je;

        }
        b: {
            if ($webFileHandler !== null)
                try {
                    ji_ByteArrayInputStream_close($webFileHandler);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
        }
        $rt_throw($file);
    }
    c: {
        if ($webFileHandler !== null)
            try {
                ji_ByteArrayInputStream_close($webFileHandler);
                break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
    }
    var$6 = $bytes.data;
    $file = new cbggg_Gdx2DPixmap;
    var$7 = var$6.length;
    var$6 = $rt_createByteArray(0).data;
    var$8 = var$6.length;
    if (var$8 >= 0 && var$8 <= (var$8 - 0 | 0)) {
        $webFileHandler = new jn_ByteBufferImpl;
        var$9 = 0 + var$8 | 0;
        $webFileHandler.$mark = (-1);
        $webFileHandler.$capacity = var$8;
        $webFileHandler.$limit0 = var$8;
        $webFileHandler.$order = jn_ByteOrder_BIG_ENDIAN;
        $webFileHandler.$start0 = 0;
        $webFileHandler.$bkArray = $rt_createByteArray(var$8);
        var$10 = new cgxgbtdt_Int8ArrayNative;
        var$10.$buffer0 = new Int8Array(var$8);
        $webFileHandler.$array = var$10;
        var$11 = 0;
        while (var$11 < var$8) {
            var$12 = var$6[var$11];
            $path = $webFileHandler.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($path);
            $path.$buffer0[var$11] = var$12;
            var$11 = var$11 + 1 | 0;
        }
        $webFileHandler.$position0 = 0;
        $webFileHandler.$limit0 = var$9;
        $webFileHandler.$direct = 0;
        $webFileHandler.$readOnly0 = 0;
        $file.$buffer2 = $webFileHandler;
        $file.$nativeData = cbggg_Gdx2DPixmap_loadNative$js_body$_34(otji_JS_wrap($bytes), 0, var$7);
        cbggg_Gdx2DPixmap_updateNativeData($file);
        $this.$nativePixmap = $file;
        return;
    }
    $file = new jl_IndexOutOfBoundsException;
    $file.$suppressionEnabled = 1;
    $file.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($file);
    $rt_throw($file);
},
cbgg_Pixmap__init_ = var_0 => {
    let var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_0(var_1, var_0);
    return var_1;
},
jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer),
jn_IntBufferImpl_get0 = $this => {
    let var$1, var$2;
    var$1 = $this.$position0;
    if (var$1 < $this.$limit0) {
        $this.$position0 = var$1 + 1 | 0;
        return $this.$getElement(var$1);
    }
    var$2 = new jn_BufferUnderflowException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    $rt_throw(var$2);
},
jn_IntBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(558);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, var$3, 10);
    var$3 = var$4.$length0;
    jl_AbstractStringBuilder_insertSpace(var$6, var$3, var$3 + 1 | 0);
    var$6.$buffer.data[var$3] = 41;
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$3 = var$4.$length0;
    var$5 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$5 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
jn_IntBufferImpl_put = ($this, $index, $b) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($this.$readOnly()) {
        var$3 = new jn_ReadOnlyBufferException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit0) {
        $this.$putElement1($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    $b = $this.$limit0;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(558);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $b, 10);
    $b = var$4.$length0;
    jl_AbstractStringBuilder_insertSpace(var$6, $b, $b + 1 | 0);
    var$6.$buffer.data[$b] = 41;
    var$7 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    $b = var$4.$length0;
    var$5 = var$10.length;
    if ($b >= 0 && $b <= (var$5 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$9.data, 0, $b);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$3);
    $rt_throw(var$3);
},
jn_IntBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_IntBufferOverArray() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$readOnly2 = 0;
    a.$start4 = 0;
    a.$array2 = null;
}
let jn_IntBufferOverArray_getElement = ($this, $index) => {
    return $this.$array2.data[$index + $this.$start4 | 0];
},
jn_IntBufferOverArray_putElement = ($this, $index, $value) => {
    $this.$array2.data[$index + $this.$start4 | 0] = $value;
},
jn_IntBufferOverArray_readOnly = $this => {
    return $this.$readOnly2;
},
jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer),
jn_FloatBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement0($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(558);
    var$8 = var$6;
    jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$8, var$4.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, var$3, 10);
    var$3 = var$4.$length0;
    jl_AbstractStringBuilder_insertSpace(var$6, var$3, var$3 + 1 | 0);
    var$6.$buffer.data[var$3] = 41;
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$3 = var$4.$length0;
    var$5 = var$10.length;
    if (var$3 >= 0 && var$3 <= (var$5 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
jn_FloatBufferImpl_put = ($this, $index, $b) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if ($this.$readOnly()) {
        var$3 = new jn_ReadOnlyBufferException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit0) {
        $this.$putElement($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit0;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    var$6 = var$5.$length0;
    var$7 = var$5;
    var$8 = $rt_s(558);
    var$9 = var$7;
    jl_AbstractStringBuilder_insert(var$9, var$6, var$8);
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $index, 10);
    jl_AbstractStringBuilder_insert(var$9, var$5.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, var$4, 10);
    var$4 = var$5.$length0;
    jl_AbstractStringBuilder_insertSpace(var$7, var$4, var$4 + 1 | 0);
    var$7.$buffer.data[var$4] = 41;
    var$8 = new jl_String;
    var$10 = var$5.$buffer;
    var$11 = var$10.data;
    var$4 = var$5.$length0;
    var$6 = var$11.length;
    if (var$4 >= 0 && var$4 <= (var$6 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$10.data, 0, var$4);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$8;
        $rt_throw(var$3);
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$3.$suppressionEnabled = 1;
    var$3.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$3);
    $rt_throw(var$3);
},
jn_FloatBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_FloatBufferOverArray() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly3 = 0;
    a.$start6 = 0;
    a.$array3 = null;
}
let jn_FloatBufferOverArray_getElement = ($this, $index) => {
    return $this.$array3.data[$index + $this.$start6 | 0];
},
jn_FloatBufferOverArray_putElement = ($this, $index, $value) => {
    $this.$array3.data[$index + $this.$start6 | 0] = $value;
},
jn_FloatBufferOverArray_readOnly = $this => {
    return $this.$readOnly3;
},
cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Blending_None = null,
cbgg_Pixmap$Blending_SourceOver = null,
cbgg_Pixmap$Blending_$VALUES = null,
cbgg_Pixmap$Blending__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgg_Pixmap$Blending;
    var$1.$name0 = $rt_s(559);
    var$1.$ordinal0 = 0;
    cbgg_Pixmap$Blending_None = var$1;
    var$2 = new cbgg_Pixmap$Blending;
    var$2.$name0 = $rt_s(560);
    var$2.$ordinal0 = 1;
    cbgg_Pixmap$Blending_SourceOver = var$2;
    cbgg_Pixmap$Blending_$VALUES = $rt_wrapArray(cbgg_Pixmap$Blending, [var$1, var$2]);
},
cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Filter_NearestNeighbour = null,
cbgg_Pixmap$Filter_BiLinear = null,
cbgg_Pixmap$Filter_$VALUES = null,
cbgg_Pixmap$Filter__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgg_Pixmap$Filter;
    var$1.$name0 = $rt_s(561);
    var$1.$ordinal0 = 0;
    cbgg_Pixmap$Filter_NearestNeighbour = var$1;
    var$2 = new cbgg_Pixmap$Filter;
    var$2.$name0 = $rt_s(562);
    var$2.$ordinal0 = 1;
    cbgg_Pixmap$Filter_BiLinear = var$2;
    cbgg_Pixmap$Filter_$VALUES = $rt_wrapArray(cbgg_Pixmap$Filter, [var$1, var$2]);
};
function cgxgbt_TeaFileHandle() {
    let a = this; cbgf_FileHandle.call(a);
    a.$file = null;
    a.$type1 = null;
    a.$teaFiles = null;
}
let cgxgbt_TeaFileHandle__init_0 = ($this, $teaFiles, $fileName, $type) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath && $type !== cbg_Files$FileType_Local) {
        $teaFiles = new cbgu_GdxRuntimeException;
        $fileName = new jl_StringBuilder;
        $fileName.$buffer = $rt_createCharArray(16);
        var$4 = $fileName.$length0;
        var$5 = $fileName;
        var$6 = $rt_s(563);
        var$7 = var$5;
        jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
        jl_AbstractStringBuilder_insert(var$7, $fileName.$length0, $type === null ? $rt_s(1) : $type.$name0);
        jl_AbstractStringBuilder_insert(var$7, $fileName.$length0, $rt_s(564));
        $type = new jl_String;
        var$8 = $fileName.$buffer;
        var$9 = var$8.data;
        var$10 = $fileName.$length0;
        var$11 = var$9.length;
        if (var$10 >= 0 && var$10 <= (var$11 - 0 | 0)) {
            $type.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
            $teaFiles.$suppressionEnabled = 1;
            $teaFiles.$writableStackTrace = 1;
            $teaFiles.$message = $type;
            $rt_throw($teaFiles);
        }
        $teaFiles = new jl_IndexOutOfBoundsException;
        $teaFiles.$suppressionEnabled = 1;
        $teaFiles.$writableStackTrace = 1;
        $rt_throw($teaFiles);
    }
    $fileName = jl_String_replace($fileName, $rt_s(127), $rt_s(113));
    if (jl_String_endsWith($fileName, $rt_s(113)))
        $fileName = jl_String_substring($fileName, 0, $fileName.$nativeString.length - 1 | 0);
    $this.$file = $fileName;
    $this.$type1 = $type;
    $this.$teaFiles = $teaFiles;
},
cgxgbt_TeaFileHandle__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbt_TeaFileHandle();
    cgxgbt_TeaFileHandle__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbt_TeaFileHandle_path = $this => {
    return $this.$file;
},
cgxgbt_TeaFileHandle_type = $this => {
    return $this.$type1;
},
cgxgbt_TeaFileHandle_read = $this => {
    let $input, var$2, $exists, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $input = $this.$teaFiles;
    var$2 = $this.$type1;
    $input = var$2 === cbg_Files$FileType_Internal ? $input.$internalStorage : var$2 === cbg_Files$FileType_Classpath ? $input.$classpathStorage : var$2 !== cbg_Files$FileType_Local ? null : $input.$localStorage;
    $exists = cgxgbtf_MemoryFileStorage_exists($input, $this);
    $input = $this.$type1;
    var$2 = cbg_Files$FileType_Classpath;
    if ($input !== var$2) {
        var$4 = cbg_Files$FileType_Internal;
        if (!($input === var$4 && !$exists)) {
            var$5 = cbg_Files$FileType_Local;
            if (!($input === var$5 && !$exists)) {
                var$6 = $this.$teaFiles;
                return cgxgbtf_MemoryFileStorage_read($input === var$4 ? var$6.$internalStorage : $input === var$2 ? var$6.$classpathStorage : $input !== var$5 ? null : var$6.$localStorage, $this);
            }
        }
    }
    $input = $this.$teaFiles;
    $input = var$2 === cbg_Files$FileType_Internal ? $input.$internalStorage : var$2 === var$2 ? $input.$classpathStorage : var$2 !== cbg_Files$FileType_Local ? null : $input.$localStorage;
    $input = cgxgbtf_MemoryFileStorage_read($input, $this);
    if ($input !== null)
        return $input;
    $input = new cbgu_GdxRuntimeException;
    var$2 = $this.$file;
    var$4 = $this.$type1;
    var$5 = new jl_StringBuilder;
    var$5.$buffer = $rt_createCharArray(16);
    $exists = var$5.$length0;
    var$7 = var$5;
    var$8 = $rt_s(565);
    var$6 = var$7;
    jl_AbstractStringBuilder_insert(var$6, $exists, var$8);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$2 === null ? $rt_s(1) : var$2);
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(566));
    jl_AbstractStringBuilder_insert(var$6, var$5.$length0, var$4 === null ? $rt_s(1) : var$4.$name0);
    var$9 = var$5.$length0;
    jl_AbstractStringBuilder_insertSpace(var$7, var$9, var$9 + 1 | 0);
    var$7.$buffer.data[var$9] = 41;
    var$2 = new jl_String;
    var$10 = var$5.$buffer;
    var$11 = var$10.data;
    var$9 = var$5.$length0;
    var$12 = var$11.length;
    if (var$9 >= 0 && var$9 <= (var$12 - 0 | 0)) {
        var$2.$nativeString = $rt_charArrayToString(var$10.data, 0, var$9);
        $input.$suppressionEnabled = 1;
        $input.$writableStackTrace = 1;
        $input.$message = var$2;
        $rt_throw($input);
    }
    $input = new jl_IndexOutOfBoundsException;
    $input.$suppressionEnabled = 1;
    $input.$writableStackTrace = 1;
    $rt_throw($input);
},
cgxgbt_TeaFileHandle_child = ($this, $name) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    var$2 = new cgxgbt_TeaFileHandle;
    var$3 = $this.$teaFiles;
    if ($this.$file.$nativeString.length ? 0 : 1)
        var$4 = $rt_s(40);
    else {
        var$5 = $this.$file;
        var$6 = !jl_String_endsWith(var$5, $rt_s(113)) ? $rt_s(113) : $rt_s(40);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        var$8 = var$7.$length0;
        var$4 = var$7;
        var$9 = var$5;
        var$4 = var$4;
        jl_AbstractStringBuilder_insert(var$4, var$8, var$9);
        jl_AbstractStringBuilder_insert(var$4, var$7.$length0, var$6);
        var$4 = new jl_String;
        var$10 = var$7.$buffer;
        var$11 = var$10.data;
        var$12 = var$7.$length0;
        var$13 = var$11.length;
        if (var$12 >= 0 && var$12 <= (var$13 - 0 | 0))
            var$4.$nativeString = $rt_charArrayToString(var$10.data, 0, var$12);
        else {
            $name = new jl_IndexOutOfBoundsException;
            $name.$suppressionEnabled = 1;
            $name.$writableStackTrace = 1;
            $rt_throw($name);
        }
    }
    var$7 = new jl_StringBuilder;
    var$7.$buffer = $rt_createCharArray(16);
    var$8 = var$7.$length0;
    var$9 = var$7;
    var$4 = var$4;
    var$9 = var$9;
    jl_AbstractStringBuilder_insert(var$9, var$8, var$4);
    jl_AbstractStringBuilder_insert(var$9, var$7.$length0, $name === null ? $rt_s(1) : $name);
    $name = new jl_String;
    var$10 = var$7.$buffer;
    var$11 = var$10.data;
    var$13 = var$7.$length0;
    var$8 = var$11.length;
    if (var$13 >= 0 && var$13 <= (var$8 - 0 | 0)) {
        $name.$nativeString = $rt_charArrayToString(var$10.data, 0, var$13);
        cgxgbt_TeaFileHandle__init_0(var$2, var$3, $name, $this.$type1);
        return var$2;
    }
    $name = new jl_IndexOutOfBoundsException;
    $name.$suppressionEnabled = 1;
    $name.$writableStackTrace = 1;
    $rt_throw($name);
},
cgxgbt_TeaFileHandle_parent = $this => {
    let var$1, $index, $dir;
    var$1 = $this.$file;
    $index = jl_String_lastIndexOf0(var$1, $rt_s(113), var$1.$nativeString.length);
    $dir = $rt_s(40);
    if ($index > 0)
        $dir = jl_String_substring($this.$file, 0, $index);
    return cgxgbt_TeaFileHandle__init_($this.$teaFiles, $dir, $this.$type1);
},
cgxgbt_TeaFileHandle_exists = $this => {
    let var$1, var$2, $exists;
    var$1 = $this.$teaFiles;
    var$2 = $this.$type1;
    var$1 = var$2 === cbg_Files$FileType_Internal ? var$1.$internalStorage : var$2 === cbg_Files$FileType_Classpath ? var$1.$classpathStorage : var$2 !== cbg_Files$FileType_Local ? null : var$1.$localStorage;
    a: {
        $exists = cgxgbtf_MemoryFileStorage_exists(var$1, $this);
        cgxgbt_TeaFileHandle$1_$callClinit();
        switch (cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType.data[$this.$type1.$ordinal0]) {
            case 1:
                if (!$exists)
                    break a;
                return 1;
            case 2:
                break a;
            default:
        }
        return $exists;
    }
    var$1 = $this.$teaFiles;
    var$2 = cbg_Files$FileType_Classpath;
    return cgxgbtf_MemoryFileStorage_exists(var$2 === cbg_Files$FileType_Internal ? var$1.$internalStorage : var$2 === var$2 ? var$1.$classpathStorage : var$2 !== cbg_Files$FileType_Local ? null : var$1.$localStorage, $this);
},
cgxgbt_TeaFileHandle_toString = $this => {
    return $this.$file;
},
cgxgbtdt_Int8ArrayNative$Int8ArrayNativeListener = $rt_classWithoutFields(0);
function cbggg_Gdx2DPixmap() {
    let a = this; jl_Object.call(a);
    a.$basePtr = 0;
    a.$width = 0;
    a.$height = 0;
    a.$format = 0;
    a.$heapStartIndex = 0;
    a.$heapEndIndex = 0;
    a.$nativeData = null;
    a.$buffer2 = null;
    a.$nativeBuffer = null;
}
let cbggg_Gdx2DPixmap_updateNativeData = $this => {
    let var$1, $hasArrayBufferView, var$3;
    $this.$basePtr = $this.$nativeData[0];
    $this.$width = $this.$nativeData[1];
    $this.$height = $this.$nativeData[2];
    $this.$format = $this.$nativeData[3];
    $this.$heapStartIndex = $this.$nativeData[4];
    $this.$heapEndIndex = $this.$nativeData[5];
    var$1 = new cgxgbtdt_Int8ArrayNative;
    $this.$nativeBuffer = var$1;
    var$1.$listener = $this;
    $hasArrayBufferView = $this.$buffer2;
    $hasArrayBufferView.$array = var$1;
    if (!$hasArrayBufferView.$capacity) {
        cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$1);
        var$3 = var$1.$buffer0.length;
        $hasArrayBufferView.$capacity = var$3;
        jn_Buffer_limit($hasArrayBufferView, var$3);
        jn_Buffer_position($hasArrayBufferView, 0);
    }
},
cbggg_Gdx2DPixmap_convert = ($this, $requestedFormat) => {
    let $pixmap, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    $pixmap = new cbggg_Gdx2DPixmap;
    var$3 = $this.$width;
    var$4 = $this.$height;
    var$5 = $rt_createByteArray(0).data;
    var$6 = var$5.length;
    if (var$6 >= 0 && var$6 <= (var$6 - 0 | 0)) {
        var$7 = new jn_ByteBufferImpl;
        var$8 = 0 + var$6 | 0;
        var$7.$mark = (-1);
        var$7.$capacity = var$6;
        var$7.$limit0 = var$6;
        var$7.$order = jn_ByteOrder_BIG_ENDIAN;
        var$7.$start0 = 0;
        var$7.$bkArray = $rt_createByteArray(var$6);
        var$9 = new cgxgbtdt_Int8ArrayNative;
        var$9.$buffer0 = new Int8Array(var$6);
        var$7.$array = var$9;
        var$10 = 0;
        while (var$10 < var$6) {
            var$11 = var$5[var$10];
            var$9 = var$7.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$9);
            var$9.$buffer0[var$10] = var$11;
            var$10 = var$10 + 1 | 0;
        }
        var$7.$position0 = 0;
        var$7.$limit0 = var$8;
        var$7.$direct = 0;
        var$7.$readOnly0 = 0;
        $pixmap.$buffer2 = var$7;
        $pixmap.$nativeData = cbggg_Gdx2DPixmap_newPixmapNative$js_body$_35(var$3, var$4, $requestedFormat);
        cbggg_Gdx2DPixmap_updateNativeData($pixmap);
        Gdx.Gdx.prototype.g2d_set_blend($pixmap.$basePtr, 0);
        var$11 = $this.$width;
        var$4 = $this.$height;
        Gdx.Gdx.prototype.g2d_draw_pixmap($this.$basePtr, $pixmap.$basePtr, 0, 0, var$11, var$4, 0, 0, var$11, var$4);
        Gdx.Gdx.prototype.g2d_free($this.$basePtr);
        $this.$basePtr = $pixmap.$basePtr;
        $this.$format = $pixmap.$format;
        $this.$width = $pixmap.$width;
        $this.$height = $pixmap.$height;
        $this.$nativeData = $pixmap.$nativeData;
        $this.$buffer2 = $pixmap.$buffer2;
        $this.$nativeBuffer = $pixmap.$nativeBuffer;
        $this.$heapStartIndex = $pixmap.$heapStartIndex;
        $this.$heapEndIndex = $pixmap.$heapEndIndex;
        return;
    }
    $pixmap = new jl_IndexOutOfBoundsException;
    $pixmap.$suppressionEnabled = 1;
    $pixmap.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($pixmap);
    $rt_throw($pixmap);
},
cbggg_Gdx2DPixmap_getHeapDataNative$js_body$_33 = (var$1, var$2, var$3) => {
    var heapArray = Gdx.HEAPU8.subarray(var$2, var$3);
    if (var$1) {
        var newArray = new Uint8Array(heapArray);
        return newArray;
    }
    return heapArray;
},
cbggg_Gdx2DPixmap_loadNative$js_body$_34 = (var$1, var$2, var$3) => {
    var cBufferSize = var$1.length * Uint8Array.BYTES_PER_ELEMENT;
    var cBuffer = Gdx._malloc(cBufferSize);
    Gdx.writeArrayToMemory(var$1, cBuffer);
    var pixmap = Gdx.Gdx.prototype.g2d_load(cBuffer, var$2, var$3);
    Gdx._free(cBuffer);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var format = pixmap.get_format();
    var width = pixmap.get_width();
    var height = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(format);
    var bytesSize = width * height * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = width;
    nativeData[2] = height;
    nativeData[3] = format;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
},
cbggg_Gdx2DPixmap_newPixmapNative$js_body$_35 = (var$1, var$2, var$3) => {
    var pixmap = Gdx.Gdx.prototype.g2d_new(var$1, var$2, var$3);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var var$3 = pixmap.get_format();
    var var$1 = pixmap.get_width();
    var var$2 = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(var$3);
    var bytesSize = var$1 * var$2 * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = var$1;
    nativeData[2] = var$2;
    nativeData[3] = var$3;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
},
jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer),
jn_ShortBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_ShortBufferOverArray() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly4 = 0;
    a.$start7 = 0;
    a.$array5 = null;
}
let jn_ShortBufferOverArray_putElement = ($this, $index, $value) => {
    $this.$array5.data[$index + $this.$start7 | 0] = $value;
},
jn_ShortBufferOverArray_readOnly = $this => {
    return $this.$readOnly4;
};
function cbgg_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
let cbgg_Texture$TextureFilter_Nearest = null,
cbgg_Texture$TextureFilter_Linear = null,
cbgg_Texture$TextureFilter_MipMap = null,
cbgg_Texture$TextureFilter_MipMapNearestNearest = null,
cbgg_Texture$TextureFilter_MipMapLinearNearest = null,
cbgg_Texture$TextureFilter_MipMapNearestLinear = null,
cbgg_Texture$TextureFilter_MipMapLinearLinear = null,
cbgg_Texture$TextureFilter_$VALUES = null,
cbgg_Texture$TextureFilter_$values = () => {
    let var$1, var$2;
    var$1 = $rt_createArray(cbgg_Texture$TextureFilter, 7);
    var$2 = var$1.data;
    var$2[0] = cbgg_Texture$TextureFilter_Nearest;
    var$2[1] = cbgg_Texture$TextureFilter_Linear;
    var$2[2] = cbgg_Texture$TextureFilter_MipMap;
    var$2[3] = cbgg_Texture$TextureFilter_MipMapNearestNearest;
    var$2[4] = cbgg_Texture$TextureFilter_MipMapLinearNearest;
    var$2[5] = cbgg_Texture$TextureFilter_MipMapNearestLinear;
    var$2[6] = cbgg_Texture$TextureFilter_MipMapLinearLinear;
    return var$1;
},
cbgg_Texture$TextureFilter__clinit_ = () => {
    let var$1;
    var$1 = new cbgg_Texture$TextureFilter;
    var$1.$name0 = $rt_s(567);
    var$1.$ordinal0 = 0;
    var$1.$glEnum = 9728;
    cbgg_Texture$TextureFilter_Nearest = var$1;
    var$1 = new cbgg_Texture$TextureFilter;
    var$1.$name0 = $rt_s(568);
    var$1.$ordinal0 = 1;
    var$1.$glEnum = 9729;
    cbgg_Texture$TextureFilter_Linear = var$1;
    var$1 = new cbgg_Texture$TextureFilter;
    var$1.$name0 = $rt_s(569);
    var$1.$ordinal0 = 2;
    var$1.$glEnum = 9987;
    cbgg_Texture$TextureFilter_MipMap = var$1;
    var$1 = new cbgg_Texture$TextureFilter;
    var$1.$name0 = $rt_s(570);
    var$1.$ordinal0 = 3;
    var$1.$glEnum = 9984;
    cbgg_Texture$TextureFilter_MipMapNearestNearest = var$1;
    var$1 = new cbgg_Texture$TextureFilter;
    var$1.$name0 = $rt_s(571);
    var$1.$ordinal0 = 4;
    var$1.$glEnum = 9985;
    cbgg_Texture$TextureFilter_MipMapLinearNearest = var$1;
    var$1 = new cbgg_Texture$TextureFilter;
    var$1.$name0 = $rt_s(572);
    var$1.$ordinal0 = 5;
    var$1.$glEnum = 9986;
    cbgg_Texture$TextureFilter_MipMapNearestLinear = var$1;
    var$1 = new cbgg_Texture$TextureFilter;
    var$1.$name0 = $rt_s(573);
    var$1.$ordinal0 = 6;
    var$1.$glEnum = 9987;
    cbgg_Texture$TextureFilter_MipMapLinearLinear = var$1;
    cbgg_Texture$TextureFilter_$VALUES = cbgg_Texture$TextureFilter_$values();
};
function cbgg_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
let cbgg_Texture$TextureWrap_MirroredRepeat = null,
cbgg_Texture$TextureWrap_ClampToEdge = null,
cbgg_Texture$TextureWrap_Repeat = null,
cbgg_Texture$TextureWrap_$VALUES = null,
cbgg_Texture$TextureWrap__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Texture$TextureWrap;
    var$1.$name0 = $rt_s(574);
    var$1.$ordinal0 = 0;
    var$1.$glEnum0 = 33648;
    cbgg_Texture$TextureWrap_MirroredRepeat = var$1;
    var$2 = new cbgg_Texture$TextureWrap;
    var$2.$name0 = $rt_s(575);
    var$2.$ordinal0 = 1;
    var$2.$glEnum0 = 33071;
    cbgg_Texture$TextureWrap_ClampToEdge = var$2;
    var$3 = new cbgg_Texture$TextureWrap;
    var$3.$name0 = $rt_s(576);
    var$3.$ordinal0 = 2;
    var$3.$glEnum0 = 10497;
    cbgg_Texture$TextureWrap_Repeat = var$3;
    cbgg_Texture$TextureWrap_$VALUES = $rt_wrapArray(cbgg_Texture$TextureWrap, [var$1, var$2, var$3]);
};
function cgxgbtdt_Int8ArrayNative() {
    let a = this; jl_Object.call(a);
    a.$listener = null;
    a.$buffer0 = null;
}
let cgxgbtdt_Int8ArrayNative_set = ($this, $index, $value) => {
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($this);
    $this.$buffer0[$index] = $value;
},
cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer = $this => {
    let $arrayBuffer, var$2, var$3, var$4;
    $arrayBuffer = $this.$buffer0;
    if ($arrayBuffer === null ? 1 : ($arrayBuffer.buffer.detached ? 1 : 0)) {
        $arrayBuffer = $this.$listener;
        var$2 = $arrayBuffer.$heapStartIndex;
        $this.$buffer0 = !var$2 && !$arrayBuffer.$heapEndIndex ? null : cbggg_Gdx2DPixmap_getHeapDataNative$js_body$_33(!!0, var$2, $arrayBuffer.$heapEndIndex);
        $arrayBuffer = $this.$listener;
        var$3 = $arrayBuffer.$buffer2;
        $arrayBuffer = $arrayBuffer.$nativeBuffer;
        var$3 = var$3;
        var$3.$array = $arrayBuffer;
        if (!var$3.$capacity) {
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($arrayBuffer);
            var$4 = $arrayBuffer.$buffer0.length;
            var$3.$capacity = var$4;
            jn_Buffer_limit(var$3, var$4);
            jn_Buffer_position(var$3, 0);
        }
    }
},
cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Format_Alpha = null,
cbgg_Pixmap$Format_Intensity = null,
cbgg_Pixmap$Format_LuminanceAlpha = null,
cbgg_Pixmap$Format_RGB565 = null,
cbgg_Pixmap$Format_RGBA4444 = null,
cbgg_Pixmap$Format_RGB888 = null,
cbgg_Pixmap$Format_RGBA8888 = null,
cbgg_Pixmap$Format_$VALUES = null,
cbgg_Pixmap$Format_toGdx2DPixmapFormat = $format => {
    let var$2;
    if ($format === cbgg_Pixmap$Format_Alpha)
        return 1;
    if ($format === cbgg_Pixmap$Format_Intensity)
        return 1;
    if ($format === cbgg_Pixmap$Format_LuminanceAlpha)
        return 2;
    if ($format === cbgg_Pixmap$Format_RGB565)
        return 5;
    if ($format === cbgg_Pixmap$Format_RGBA4444)
        return 6;
    if ($format === cbgg_Pixmap$Format_RGB888)
        return 3;
    if ($format === cbgg_Pixmap$Format_RGBA8888)
        return 4;
    var$2 = new cbgu_GdxRuntimeException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $format;
    $rt_throw(var$2);
},
cbgg_Pixmap$Format_fromGdx2DPixmapFormat = $format => {
    let var$2, var$3;
    if ($format == 1)
        return cbgg_Pixmap$Format_Alpha;
    if ($format == 2)
        return cbgg_Pixmap$Format_LuminanceAlpha;
    if ($format == 5)
        return cbgg_Pixmap$Format_RGB565;
    if ($format == 6)
        return cbgg_Pixmap$Format_RGBA4444;
    if ($format == 3)
        return cbgg_Pixmap$Format_RGB888;
    if ($format == 4)
        return cbgg_Pixmap$Format_RGBA8888;
    var$2 = new cbgu_GdxRuntimeException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = var$3;
    $rt_throw(var$2);
},
cbgg_Pixmap$Format__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    var$1 = new cbgg_Pixmap$Format;
    var$1.$name0 = $rt_s(228);
    var$1.$ordinal0 = 0;
    cbgg_Pixmap$Format_Alpha = var$1;
    var$2 = new cbgg_Pixmap$Format;
    var$2.$name0 = $rt_s(577);
    var$2.$ordinal0 = 1;
    cbgg_Pixmap$Format_Intensity = var$2;
    var$3 = new cbgg_Pixmap$Format;
    var$3.$name0 = $rt_s(578);
    var$3.$ordinal0 = 2;
    cbgg_Pixmap$Format_LuminanceAlpha = var$3;
    var$4 = new cbgg_Pixmap$Format;
    var$4.$name0 = $rt_s(579);
    var$4.$ordinal0 = 3;
    cbgg_Pixmap$Format_RGB565 = var$4;
    var$5 = new cbgg_Pixmap$Format;
    var$5.$name0 = $rt_s(580);
    var$5.$ordinal0 = 4;
    cbgg_Pixmap$Format_RGBA4444 = var$5;
    var$6 = new cbgg_Pixmap$Format;
    var$6.$name0 = $rt_s(581);
    var$6.$ordinal0 = 5;
    cbgg_Pixmap$Format_RGB888 = var$6;
    var$7 = new cbgg_Pixmap$Format;
    var$7.$name0 = $rt_s(582);
    var$7.$ordinal0 = 6;
    cbgg_Pixmap$Format_RGBA8888 = var$7;
    cbgg_Pixmap$Format_$VALUES = $rt_wrapArray(cbgg_Pixmap$Format, [var$1, var$2, var$3, var$4, var$5, var$6, var$7]);
};
function jn_IntBufferOverByteBuffer() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$byteByffer0 = null;
    a.$readOnly6 = 0;
    a.$start2 = 0;
}
let jn_IntBufferOverByteBuffer_readOnly = $this => {
    return $this.$readOnly6;
},
jn_IntBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer),
jn_IntBufferOverByteBufferLittleEndian_getElement = ($this, $index) => {
    let var$2, var$3, var$4;
    var$2 = $this.$byteByffer0.$array;
    var$3 = $this.$start2;
    $index = $index * 4 | 0;
    var$4 = var$3 + $index | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    var$4 = var$2.$buffer0[var$4] & 255;
    var$2 = $this.$byteByffer0.$array;
    var$3 = ($this.$start2 + $index | 0) + 1 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    var$4 = var$4 | (var$2.$buffer0[var$3] & 255) << 8;
    var$2 = $this.$byteByffer0.$array;
    var$3 = ($this.$start2 + $index | 0) + 2 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    var$4 = var$4 | (var$2.$buffer0[var$3] & 255) << 16;
    var$2 = $this.$byteByffer0.$array;
    $index = ($this.$start2 + $index | 0) + 3 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    return var$4 | (var$2.$buffer0[$index] & 255) << 24;
},
jn_IntBufferOverByteBufferLittleEndian_putElement = ($this, $index, $value) => {
    let var$3, var$4, var$5;
    var$3 = $this.$byteByffer0.$array;
    var$4 = $this.$start2;
    $index = $index * 4 | 0;
    var$5 = var$4 + $index | 0;
    var$4 = $value << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer0.$array;
    var$5 = ($this.$start2 + $index | 0) + 1 | 0;
    var$4 = $value >> 8 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer0.$array;
    var$5 = ($this.$start2 + $index | 0) + 2 | 0;
    var$4 = $value >> 16 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer0.$array;
    $index = ($this.$start2 + $index | 0) + 3 | 0;
    $value = $value >> 24 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[$index] = $value;
},
jn_IntBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer),
jn_IntBufferOverByteBufferBigEndian_getElement = ($this, $index) => {
    let var$2, var$3, var$4;
    var$2 = $this.$byteByffer0.$array;
    var$3 = $this.$start2;
    $index = $index * 4 | 0;
    var$4 = var$3 + $index | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    var$4 = (var$2.$buffer0[var$4] & 255) << 24;
    var$2 = $this.$byteByffer0.$array;
    var$3 = ($this.$start2 + $index | 0) + 1 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    var$4 = var$4 | (var$2.$buffer0[var$3] & 255) << 16;
    var$2 = $this.$byteByffer0.$array;
    var$3 = ($this.$start2 + $index | 0) + 2 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    var$4 = var$4 | (var$2.$buffer0[var$3] & 255) << 8;
    var$2 = $this.$byteByffer0.$array;
    $index = ($this.$start2 + $index | 0) + 3 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    return var$4 | var$2.$buffer0[$index] & 255;
},
jn_IntBufferOverByteBufferBigEndian_putElement = ($this, $index, $value) => {
    let var$3, var$4, var$5;
    var$3 = $this.$byteByffer0.$array;
    var$4 = $this.$start2;
    $index = $index * 4 | 0;
    var$5 = var$4 + $index | 0;
    var$4 = $value >> 24 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer0.$array;
    var$5 = ($this.$start2 + $index | 0) + 1 | 0;
    var$4 = $value >> 16 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer0.$array;
    var$5 = ($this.$start2 + $index | 0) + 2 | 0;
    var$4 = $value >> 8 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer0.$array;
    $index = ($this.$start2 + $index | 0) + 3 | 0;
    $value = $value << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[$index] = $value;
};
function jn_FloatBufferOverByteBuffer() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$byteByffer = null;
    a.$readOnly7 = 0;
    a.$start1 = 0;
}
let jn_FloatBufferOverByteBuffer_getArrayBufferView = $this => {
    let var$1;
    var$1 = $this.$byteByffer.$array;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$1);
    return var$1.$buffer0;
},
jn_FloatBufferOverByteBuffer_readOnly = $this => {
    return $this.$readOnly7;
},
jn_FloatBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer),
jn_FloatBufferOverByteBufferLittleEndian_getElement = ($this, $index) => {
    let var$2, var$3, $value;
    var$2 = $this.$byteByffer.$array;
    var$3 = $this.$start1;
    $index = $index * 4 | 0;
    $value = var$3 + $index | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    $value = (var$2.$buffer0[$value] & 255) << 24;
    var$2 = $this.$byteByffer.$array;
    var$3 = ($this.$start1 + $index | 0) + 1 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    $value = $value | (var$2.$buffer0[var$3] & 255) << 16;
    var$2 = $this.$byteByffer.$array;
    var$3 = ($this.$start1 + $index | 0) + 2 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    $value = $value | (var$2.$buffer0[var$3] & 255) << 8;
    var$2 = $this.$byteByffer.$array;
    $index = ($this.$start1 + $index | 0) + 3 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    return $rt_intBitsToFloat($value | var$2.$buffer0[$index] & 255);
},
jn_FloatBufferOverByteBufferLittleEndian_putElement = ($this, $index, $f) => {
    let $value, var$4, var$5, var$6;
    $value = (isNaN($f) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits($f);
    var$4 = $this.$byteByffer.$array;
    var$5 = $this.$start1;
    $index = $index * 4 | 0;
    var$6 = var$5 + $index | 0;
    var$5 = $value >> 24 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[var$6] = var$5;
    var$4 = $this.$byteByffer.$array;
    var$6 = ($this.$start1 + $index | 0) + 1 | 0;
    var$5 = $value >> 16 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[var$6] = var$5;
    var$4 = $this.$byteByffer.$array;
    var$6 = ($this.$start1 + $index | 0) + 2 | 0;
    var$5 = $value >> 8 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[var$6] = var$5;
    var$4 = $this.$byteByffer.$array;
    $index = ($this.$start1 + $index | 0) + 3 | 0;
    var$6 = $value << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[$index] = var$6;
},
jn_FloatBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer),
jn_FloatBufferOverByteBufferBigEndian_getElement = ($this, $index) => {
    let var$2, var$3, $value;
    var$2 = $this.$byteByffer.$array;
    var$3 = $this.$start1;
    $index = $index * 4 | 0;
    $value = var$3 + $index | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    $value = var$2.$buffer0[$value] & 255;
    var$2 = $this.$byteByffer.$array;
    var$3 = ($this.$start1 + $index | 0) + 1 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    $value = $value | (var$2.$buffer0[var$3] & 255) << 8;
    var$2 = $this.$byteByffer.$array;
    var$3 = ($this.$start1 + $index | 0) + 2 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    $value = $value | (var$2.$buffer0[var$3] & 255) << 16;
    var$2 = $this.$byteByffer.$array;
    $index = ($this.$start1 + $index | 0) + 3 | 0;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
    return $rt_intBitsToFloat($value | (var$2.$buffer0[$index] & 255) << 24);
},
jn_FloatBufferOverByteBufferBigEndian_putElement = ($this, $index, $f) => {
    let $value, var$4, var$5, var$6;
    $value = (isNaN($f) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits($f);
    var$4 = $this.$byteByffer.$array;
    var$5 = $this.$start1;
    $index = $index * 4 | 0;
    var$6 = var$5 + $index | 0;
    var$5 = $value << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[var$6] = var$5;
    var$4 = $this.$byteByffer.$array;
    var$6 = ($this.$start1 + $index | 0) + 1 | 0;
    var$5 = $value >> 8 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[var$6] = var$5;
    var$4 = $this.$byteByffer.$array;
    var$6 = ($this.$start1 + $index | 0) + 2 | 0;
    var$5 = $value >> 16 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[var$6] = var$5;
    var$4 = $this.$byteByffer.$array;
    $index = ($this.$start1 + $index | 0) + 3 | 0;
    var$6 = $value >> 24 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$4);
    var$4.$buffer0[$index] = var$6;
};
function jn_ShortBufferOverByteBuffer() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$byteByffer1 = null;
    a.$readOnly5 = 0;
    a.$start5 = 0;
}
let jn_ShortBufferOverByteBuffer_getArrayBufferView = $this => {
    let var$1;
    var$1 = $this.$byteByffer1.$array;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$1);
    return var$1.$buffer0;
},
jn_ShortBufferOverByteBuffer_readOnly = $this => {
    return $this.$readOnly5;
},
jn_ShortBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer),
jn_ShortBufferOverByteBufferLittleEndian_putElement = ($this, $index, $value) => {
    let var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array;
    var$4 = $this.$start5;
    $index = $index * 2 | 0;
    var$5 = var$4 + $index | 0;
    var$4 = $value << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer1.$array;
    $index = ($this.$start5 + $index | 0) + 1 | 0;
    $value = $value >> 8 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[$index] = $value;
},
jn_ShortBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer),
jn_ShortBufferOverByteBufferBigEndian_putElement = ($this, $index, $value) => {
    let var$3, var$4, var$5;
    var$3 = $this.$byteByffer1.$array;
    var$4 = $this.$start5;
    $index = $index * 2 | 0;
    var$5 = var$4 + $index | 0;
    var$4 = $value >> 8 << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[var$5] = var$4;
    var$3 = $this.$byteByffer1.$array;
    $index = ($this.$start5 + $index | 0) + 1 | 0;
    $value = $value << 24 >> 24;
    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$3);
    var$3.$buffer0[$index] = $value;
},
jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException),
jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException),
jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
function cgxgbta_AssetDownloadImpl$1() {
    let a = this; jl_Object.call(a);
    a.$val$listener0 = null;
    a.$this$08 = null;
}
let cgxgbta_AssetDownloadImpl$1_onFailure = ($this, $url) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if ($this.$this$08.$showLogs) {
        if (jl_System_errCache === null) {
            var$2 = new otcic_JSStderrPrintStream;
            var$3 = null;
            var$4 = null;
            var$2.$out = var$3;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$2.$sb = var$3;
            var$2.$buffer1 = $rt_createCharArray(32);
            var$2.$autoFlush = 0;
            var$2.$charset = var$4;
            jl_System_errCache = var$2;
        }
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$5 = var$2.$length0;
        var$4 = var$2;
        var$6 = $rt_s(583);
        var$3 = var$4;
        jl_AbstractStringBuilder_insert(var$3, var$5, var$6);
        jl_AbstractStringBuilder_insert(var$3, var$2.$length0, $url === null ? $rt_s(1) : $url);
        $url = new jl_String;
        var$7 = var$2.$buffer;
        var$8 = var$7.data;
        var$9 = var$2.$length0;
        var$10 = var$8.length;
        if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
            $url.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
            $rt_putStderr($rt_ustr($url));
            $rt_putStderr("\n");
        } else {
            $url = new jl_IndexOutOfBoundsException;
            $url.$suppressionEnabled = 1;
            $url.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($url);
            $rt_throw($url);
        }
    }
},
cgxgbta_AssetDownloadImpl$1_onProgress = ($this, $total, $loaded) => {
    let var$3;
    var$3 = $this.$val$listener0;
    if (var$3 !== null)
        var$3.$onProgress($total, $loaded);
},
cgxgbta_AssetDownloadImpl$1_onSuccess = ($this, var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = var$2;
    if ($this.$this$08.$showLogs) {
        if (jl_System_outCache === null) {
            var$3 = new otcic_JSStdoutPrintStream;
            var$4 = null;
            var$5 = null;
            var$3.$out = var$4;
            var$4 = new jl_StringBuilder;
            jl_Object__init_(var$4);
            var$4.$buffer = $rt_createCharArray(16);
            var$3.$sb = var$4;
            var$3.$buffer1 = $rt_createCharArray(32);
            var$3.$autoFlush = 0;
            var$3.$charset = var$5;
            jl_System_outCache = var$3;
        }
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        var$7 = var$6.$length0;
        var$3 = var$6;
        var$5 = $rt_s(584);
        var$4 = var$3;
        jl_AbstractStringBuilder_insert(var$4, var$7, var$5);
        jl_AbstractStringBuilder_insert(var$4, var$6.$length0, var$1 === null ? $rt_s(1) : var$1);
        var$3 = new jl_String;
        var$8 = var$6.$buffer;
        var$9 = var$8.data;
        var$7 = var$6.$length0;
        var$10 = var$9.length;
        if (var$7 >= 0 && var$7 <= (var$10 - 0 | 0)) {
            var$3.$nativeString = $rt_charArrayToString(var$8.data, 0, var$7);
            $rt_putStdout($rt_ustr(var$3));
            $rt_putStdout("\n");
        } else {
            var$1 = new jl_IndexOutOfBoundsException;
            jl_Throwable__init_(var$1);
            $rt_throw(var$1);
        }
    }
    $this.$val$listener0.$onSuccess(var$1, var$2);
},
cgxgbta_AssetDownloadImpl$4 = $rt_classWithoutFields(),
cgxgbta_AssetDownloadImpl$4_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = null,
cgxgbta_AssetDownloadImpl$4_$callClinit = () => {
    cgxgbta_AssetDownloadImpl$4_$callClinit = $rt_eraseClinit(cgxgbta_AssetDownloadImpl$4);
    cgxgbta_AssetDownloadImpl$4__clinit_();
},
cgxgbta_AssetDownloadImpl$4__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cgxgbta_AssetType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbta_AssetDownloadImpl$4_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = var$1;
    var$2[cgxgbta_AssetType_Binary.$ordinal0] = 1;
    var$2[cgxgbta_AssetType_Directory.$ordinal0] = 2;
},
cbg_Files$FileType = $rt_classWithoutFields(jl_Enum),
cbg_Files$FileType_Classpath = null,
cbg_Files$FileType_Internal = null,
cbg_Files$FileType_External = null,
cbg_Files$FileType_Absolute = null,
cbg_Files$FileType_Local = null,
cbg_Files$FileType_$VALUES = null,
cbg_Files$FileType__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new cbg_Files$FileType;
    var$1.$name0 = $rt_s(585);
    var$1.$ordinal0 = 0;
    cbg_Files$FileType_Classpath = var$1;
    var$2 = new cbg_Files$FileType;
    var$2.$name0 = $rt_s(586);
    var$2.$ordinal0 = 1;
    cbg_Files$FileType_Internal = var$2;
    var$3 = new cbg_Files$FileType;
    var$3.$name0 = $rt_s(587);
    var$3.$ordinal0 = 2;
    cbg_Files$FileType_External = var$3;
    var$4 = new cbg_Files$FileType;
    var$4.$name0 = $rt_s(588);
    var$4.$ordinal0 = 3;
    cbg_Files$FileType_Absolute = var$4;
    var$5 = new cbg_Files$FileType;
    var$5.$name0 = $rt_s(589);
    var$5.$ordinal0 = 4;
    cbg_Files$FileType_Local = var$5;
    cbg_Files$FileType_$VALUES = $rt_wrapArray(cbg_Files$FileType, [var$1, var$2, var$3, var$4, var$5]);
},
jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset),
jnci_UTF8Charset_INSTANCE = null,
jnci_UTF8Charset_newDecoder = $this => {
    let var$1;
    var$1 = new jnci_UTF8Decoder;
    jnc_CharsetDecoder__init_(var$1, $this, 0.3333333432674408, 0.5);
    var$1.$inArray = $rt_createByteArray(512);
    var$1.$outArray = $rt_createCharArray(512);
    return var$1;
},
jnci_UTF8Charset_newEncoder = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Encoder;
    var$2 = $rt_createByteArray(1);
    var$3 = var$2.data;
    var$3[0] = 63;
    var$4 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction0 = var$4;
    var$1.$unmappableAction0 = var$4;
    var$5 = var$3.length;
    if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
        var$1.$charset0 = $this;
        var$1.$replacement1 = var$2.$clone0();
        var$1.$averageBytesPerChar = 2.0;
        var$1.$maxBytesPerChar = 4.0;
        var$1.$inArray0 = $rt_createCharArray(512);
        var$1.$outArray0 = $rt_createByteArray(512);
        return var$1;
    }
    var$4 = new jl_IllegalArgumentException;
    jl_Throwable__init_0(var$4, $rt_s(590));
    $rt_throw(var$4);
},
jnci_UTF8Charset__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Charset;
    var$2 = $rt_createArray(jl_String, 0);
    var$3 = var$2.data;
    jnc_Charset_checkCanonicalName($rt_s(80));
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        jnc_Charset_checkCanonicalName(var$3[var$5]);
        var$5 = var$5 + 1 | 0;
    }
    var$1.$canonicalName = $rt_s(80);
    var$1.$aliases = var$2.$clone0();
    jnci_UTF8Charset_INSTANCE = var$1;
},
jl_Readable = $rt_classWithoutFields(0);
function ji_Reader() {
    jl_Object.call(this);
    this.$lock = null;
}
function ji_BufferedReader() {
    let a = this; ji_Reader.call(a);
    a.$innerReader = null;
    a.$buffer8 = null;
    a.$index2 = 0;
    a.$count1 = 0;
    a.$eof = 0;
    a.$mark0 = 0;
}
let ji_BufferedReader_close = $this => {
    let var$1;
    if ($this.$innerReader !== null) {
        $this.$innerReader = null;
        return;
    }
    var$1 = new ji_IOException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
ji_BufferedReader_readLine = $this => {
    let $line, var$2, var$3, $ch, var$5, var$6, var$7;
    if ($this.$innerReader === null) {
        $line = new ji_IOException;
        $line.$suppressionEnabled = 1;
        $line.$writableStackTrace = 1;
        $rt_throw($line);
    }
    if ($this.$eof && $this.$index2 >= $this.$count1)
        return null;
    $line = new jl_StringBuilder;
    $line.$buffer = $rt_createCharArray(16);
    var$2 = $line;
    a: {
        while (true) {
            if ($this.$index2 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0))
                break a;
            var$3 = $this.$buffer8.data;
            $ch = $this.$index2;
            var$5 = $ch + 1 | 0;
            $this.$index2 = var$5;
            $ch = var$3[$ch];
            if ($ch == 10)
                break;
            if ($ch == 13) {
                if (var$5 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0))
                    break a;
                var$3 = $this.$buffer8.data;
                var$5 = $this.$index2;
                if (var$3[var$5] != 10)
                    break a;
                $this.$index2 = var$5 + 1 | 0;
                break a;
            }
            var$5 = $line.$length0;
            jl_AbstractStringBuilder_insertSpace(var$2, var$5, var$5 + 1 | 0);
            var$2.$buffer.data[var$5] = $ch;
        }
    }
    var$2 = new jl_String;
    var$3 = $line.$buffer;
    var$6 = var$3.data;
    $ch = $line.$length0;
    var$7 = var$6.length;
    if ($ch >= 0 && $ch <= (var$7 - 0 | 0)) {
        var$2.$nativeString = $rt_charArrayToString(var$3.data, 0, $ch);
        return var$2;
    }
    $line = new jl_IndexOutOfBoundsException;
    $line.$suppressionEnabled = 1;
    $line.$writableStackTrace = 1;
    $rt_throw($line);
},
ji_BufferedReader_fillBuffer = ($this, $offset) => {
    let var$2, $charsRead, var$4;
    if ($this.$eof)
        return 0;
    a: {
        while (true) {
            var$2 = $this.$buffer8;
            $charsRead = var$2.data.length;
            if ($offset >= $charsRead)
                break a;
            var$4 = $this.$innerReader;
            $charsRead = $charsRead - $offset | 0;
            $charsRead = ji_InputStreamReader_read(var$4, var$2, $offset, $charsRead);
            if ($charsRead == (-1)) {
                $this.$eof = 1;
                break a;
            }
            if (!$charsRead)
                break;
            $offset = $offset + $charsRead | 0;
        }
    }
    $this.$count1 = $offset;
    $this.$index2 = 0;
    $this.$mark0 = (-1);
    return 1;
};
function ji_InputStreamReader() {
    let a = this; ji_Reader.call(a);
    a.$stream = null;
    a.$decoder = null;
    a.$inData = null;
    a.$inBuffer = null;
    a.$outData = null;
    a.$outBuffer = null;
    a.$streamEof = 0;
    a.$eof0 = 0;
}
let ji_InputStreamReader__init_ = ($this, $in, $decoder) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$lock = new jl_Object;
    var$3 = $rt_createByteArray(8192);
    var$4 = var$3.data;
    $this.$inData = var$3;
    var$5 = var$4.length;
    if (var$5 >= 0 && var$5 <= (var$5 - 0 | 0)) {
        var$6 = new jn_ByteBufferImpl;
        var$7 = 0 + var$5 | 0;
        var$6.$mark = (-1);
        var$6.$capacity = var$5;
        var$6.$limit0 = var$5;
        var$6.$order = jn_ByteOrder_BIG_ENDIAN;
        var$6.$start0 = 0;
        var$6.$bkArray = $rt_createByteArray(var$5);
        var$8 = new cgxgbtdt_Int8ArrayNative;
        var$8.$buffer0 = new Int8Array(var$5);
        var$6.$array = var$8;
        var$9 = 0;
        while (var$9 < var$5) {
            var$10 = var$4[var$9];
            var$11 = var$6.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$11);
            var$11.$buffer0[var$9] = var$10;
            var$9 = var$9 + 1 | 0;
        }
        var$6.$position0 = 0;
        var$6.$limit0 = var$7;
        var$6.$direct = 0;
        var$6.$readOnly0 = 0;
        $this.$inBuffer = var$6;
        var$4 = $rt_createCharArray(1024);
        var$3 = var$4.data;
        $this.$outData = var$4;
        var$7 = var$3.length;
        var$6 = new jn_CharBufferOverArray;
        var$12 = 0 + var$7 | 0;
        var$6.$mark = (-1);
        var$6.$capacity = var$7;
        var$6.$limit0 = var$7;
        var$6.$position0 = 0;
        var$6.$limit0 = var$12;
        var$6.$start3 = 0;
        var$6.$readOnly1 = 0;
        var$6.$array1 = var$4;
        $this.$outBuffer = var$6;
        $this.$stream = $in;
        $this.$decoder = $decoder;
        jn_Buffer_position(var$6, var$12);
        $in = $this.$inBuffer;
        jn_Buffer_position($in, $in.$limit0);
        return;
    }
    $in = new jl_IndexOutOfBoundsException;
    $in.$suppressionEnabled = 1;
    $in.$writableStackTrace = 1;
    $rt_throw($in);
},
ji_InputStreamReader__init_0 = (var_0, var_1) => {
    let var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_(var_2, var_0, var_1);
    return var_2;
},
ji_InputStreamReader_read = ($this, $cbuf, $off, $len) => {
    let var$4, $bytesRead, $sz, var$7;
    if ($this.$eof0) {
        var$4 = $this.$outBuffer;
        if (!(var$4.$position0 >= var$4.$limit0 ? 0 : 1))
            return (-1);
    }
    $bytesRead = 0;
    a: {
        while ($len > 0) {
            var$4 = $this.$outBuffer;
            $sz = var$4.$limit0 - var$4.$position0 | 0;
            if ($len < $sz)
                $sz = $len;
            jn_CharBuffer_get(var$4, $cbuf, $off + $bytesRead | 0, $sz);
            $len = $len - $sz | 0;
            $bytesRead = $bytesRead + $sz | 0;
            var$4 = $this.$outBuffer;
            var$7 = var$4.$position0 >= var$4.$limit0 ? 0 : 1;
            if (!var$7 && !ji_InputStreamReader_fillBuffer($this))
                break a;
        }
    }
    return $bytesRead;
},
ji_InputStreamReader_fillBuffer = $this => {
    let $result, var$2, var$3;
    if ($this.$eof0)
        return 0;
    jn_CharBufferImpl_compact($this.$outBuffer);
    a: {
        while (true) {
            $result = $this.$inBuffer;
            var$2 = $result.$position0 >= $result.$limit0 ? 0 : 1;
            if (!var$2 && !ji_InputStreamReader_fillReadBuffer($this))
                break a;
            var$3 = (jnc_CharsetDecoder_decode($this.$decoder, $this.$inBuffer, $this.$outBuffer, $this.$streamEof)).$kind;
            if (var$3 != 1 ? 0 : 1)
                break;
            if (var$3 ? 0 : 1)
                ji_InputStreamReader_fillReadBuffer($this);
        }
    }
    $result = $this.$inBuffer;
    var$2 = $result.$position0 >= $result.$limit0 ? 0 : 1;
    if (!var$2 && $this.$streamEof) {
        $result = $this.$decoder;
        var$3 = $result.$state;
        if (var$3 != 3 && var$3 != 2) {
            $result = new jl_IllegalStateException;
            $result.$suppressionEnabled = 1;
            $result.$writableStackTrace = 1;
            $rt_throw($result);
        }
        $result.$state = 3;
        if (jnc_CoderResult_UNDERFLOW.$kind ? 0 : 1)
            $this.$eof0 = 1;
    }
    $result = $this.$outBuffer;
    $result.$limit0 = $result.$position0;
    $result.$position0 = 0;
    $result.$mark = (-1);
    return 1;
},
ji_InputStreamReader_fillReadBuffer = $this => {
    let var$1, var$2, var$3, $bytesRead, var$5, $array, var$7;
    if ($this.$streamEof)
        return 0;
    jn_ByteBufferImpl_compact($this.$inBuffer);
    a: {
        while (true) {
            var$1 = $this.$inBuffer;
            if (!(var$1.$position0 >= var$1.$limit0 ? 0 : 1))
                break a;
            var$2 = var$1.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
            var$3 = var$2.$buffer0.length;
            $bytesRead = 0;
            while ($bytesRead < var$3) {
                var$5 = var$1.$bkArray.data;
                var$2 = var$1.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
                var$5[$bytesRead] = var$2.$buffer0[$bytesRead];
                $bytesRead = $bytesRead + 1 | 0;
            }
            $array = var$1.$bkArray;
            var$1 = $this.$stream;
            var$2 = $this.$inBuffer;
            var$7 = var$2.$position0;
            $bytesRead = var$2.$limit0 - var$7 | 0;
            $bytesRead = ji_ByteArrayInputStream_read(var$1, $array, var$7, $bytesRead);
            var$1 = $this.$inBuffer;
            var$7 = 0;
            while (true) {
                var$5 = $array.data;
                if (var$7 >= var$5.length)
                    break;
                var$3 = var$5[var$7];
                var$2 = var$1.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$2);
                var$2.$buffer0[var$7] = var$3;
                var$7 = var$7 + 1 | 0;
            }
            if ($bytesRead == (-1)) {
                $this.$streamEof = 1;
                break a;
            }
            var$1 = $this.$inBuffer;
            jn_Buffer_position(var$1, var$1.$position0 + $bytesRead | 0);
            if (!$bytesRead)
                break;
        }
    }
    var$1 = $this.$inBuffer;
    var$1.$limit0 = var$1.$position0;
    var$1.$position0 = 0;
    var$1.$mark = (-1);
    return 1;
};
function ju_StringTokenizer() {
    let a = this; jl_Object.call(a);
    a.$string1 = null;
    a.$delimiters = null;
    a.$returnDelimiters = 0;
    a.$position1 = 0;
}
let ju_StringTokenizer__init_0 = ($this, $string, $delimiters) => {
    if ($string !== null) {
        $this.$string1 = $string;
        $this.$delimiters = $delimiters;
        $this.$returnDelimiters = 0;
        $this.$position1 = 0;
        return;
    }
    $string = new jl_NullPointerException;
    $string.$suppressionEnabled = 1;
    $string.$writableStackTrace = 1;
    $rt_throw($string);
},
ju_StringTokenizer__init_ = (var_0, var_1) => {
    let var_2 = new ju_StringTokenizer();
    ju_StringTokenizer__init_0(var_2, var_0, var_1);
    return var_2;
},
ju_StringTokenizer_hasMoreTokens = $this => {
    let var$1, $length, $i, var$4;
    if ($this.$delimiters === null) {
        var$1 = new jl_NullPointerException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    a: {
        b: {
            $length = $this.$string1.$nativeString.length;
            $i = $this.$position1;
            if ($i < $length) {
                if ($this.$returnDelimiters)
                    return 1;
                while (true) {
                    if ($i >= $length)
                        break b;
                    var$1 = $this.$delimiters;
                    var$4 = $this.$string1;
                    if ($i < 0)
                        break a;
                    if ($i >= var$4.$nativeString.length)
                        break a;
                    if (jl_String_indexOf(var$1, var$4.$nativeString.charCodeAt($i), 0) == (-1))
                        return 1;
                    $i = $i + 1 | 0;
                }
            }
        }
        return 0;
    }
    var$1 = new jl_StringIndexOutOfBoundsException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
ju_StringTokenizer_nextToken = $this => {
    let var$1, $i, $length, var$4, var$5, var$6, var$7;
    if ($this.$delimiters === null) {
        var$1 = new jl_NullPointerException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    $i = $this.$position1;
    $length = $this.$string1.$nativeString.length;
    if ($i < $length) {
        if ($this.$returnDelimiters) {
            var$1 = $this.$delimiters;
            var$4 = $this.$string1;
            var$5 = $this.$position1;
            if (var$5 >= 0 && var$5 < var$4.$nativeString.length) {
                if (jl_String_indexOf(var$1, var$4.$nativeString.charCodeAt(var$5), 0) >= 0) {
                    var$1 = $this.$string1;
                    $i = $this.$position1;
                    $this.$position1 = $i + 1 | 0;
                    if ($i >= 0 && $i < var$1.$nativeString.length) {
                        $i = var$1.$nativeString.charCodeAt($i);
                        var$1 = new jl_String;
                        var$6 = $rt_createCharArray(1);
                        var$7 = var$6.data;
                        var$7[0] = $i;
                        var$1.$nativeString = $rt_charArrayToString(var$6.data, 0, var$7.length);
                        return var$1;
                    }
                    var$1 = new jl_StringIndexOutOfBoundsException;
                    var$1.$suppressionEnabled = 1;
                    var$1.$writableStackTrace = 1;
                    $rt_throw(var$1);
                }
                $this.$position1 = $this.$position1 + 1 | 0;
                a: {
                    while (true) {
                        var$5 = $this.$position1;
                        if (var$5 >= $length) {
                            var$1 = $this.$string1;
                            return jl_String_substring(var$1, $i, var$1.$nativeString.length);
                        }
                        var$1 = $this.$delimiters;
                        var$4 = $this.$string1;
                        if (var$5 < 0)
                            break a;
                        if (var$5 >= var$4.$nativeString.length)
                            break a;
                        if (jl_String_indexOf(var$1, var$4.$nativeString.charCodeAt(var$5), 0) >= 0)
                            break;
                        $this.$position1 = $this.$position1 + 1 | 0;
                    }
                    return jl_String_substring($this.$string1, $i, $this.$position1);
                }
                var$1 = new jl_StringIndexOutOfBoundsException;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                $rt_throw(var$1);
            }
            var$1 = new jl_StringIndexOutOfBoundsException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        b: {
            while (true) {
                var$5 = $rt_compare($i, $length);
                if (var$5 >= 0)
                    break b;
                var$1 = $this.$delimiters;
                var$4 = $this.$string1;
                if ($i < 0)
                    break;
                if ($i >= var$4.$nativeString.length)
                    break;
                if (jl_String_indexOf(var$1, var$4.$nativeString.charCodeAt($i), 0) < 0)
                    break b;
                $i = $i + 1 | 0;
            }
            var$1 = new jl_StringIndexOutOfBoundsException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        $this.$position1 = $i;
        if (var$5 < 0) {
            $this.$position1 = $i + 1 | 0;
            c: {
                while (true) {
                    var$5 = $this.$position1;
                    if (var$5 >= $length) {
                        var$1 = $this.$string1;
                        return jl_String_substring(var$1, $i, var$1.$nativeString.length);
                    }
                    var$1 = $this.$delimiters;
                    var$4 = $this.$string1;
                    if (var$5 < 0)
                        break c;
                    if (var$5 >= var$4.$nativeString.length)
                        break c;
                    if (jl_String_indexOf(var$1, var$4.$nativeString.charCodeAt(var$5), 0) >= 0)
                        break;
                    $this.$position1 = $this.$position1 + 1 | 0;
                }
                return jl_String_substring($this.$string1, $i, $this.$position1);
            }
            var$1 = new jl_StringIndexOutOfBoundsException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
    }
    var$1 = new ju_NoSuchElementException;
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    $rt_throw(var$1);
},
cbgu_StreamUtils = $rt_classWithoutFields(),
cbgu_StreamUtils_EMPTY_BYTES = null,
cbgu_StreamUtils_copyStreamToByteArray = ($input, $estimatedSize) => {
    let $baos, var$4, var$5, var$6;
    $baos = new cbgu_StreamUtils$OptimizedByteArrayOutputStream;
    if (0 > $estimatedSize)
        $estimatedSize = 0;
    $baos.$buf = $rt_createByteArray($estimatedSize);
    var$4 = $rt_createByteArray(4096);
    $estimatedSize = var$4.data.length;
    var$5 = $input;
    $input = $baos;
    while (true) {
        var$6 = ji_ByteArrayInputStream_read(var$5, var$4, 0, $estimatedSize);
        if (var$6 == (-1))
            break;
        ji_ByteArrayOutputStream_write($input, var$4, 0, var$6);
    }
    return cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray($baos);
},
cbgu_StreamUtils__clinit_ = () => {
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
};
function cbggg_BitmapFontCache() {
    let a = this; jl_Object.call(a);
    a.$font = null;
    a.$integer = 0;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$glyphCount0 = 0;
    a.$x4 = 0.0;
    a.$y4 = 0.0;
    a.$color = null;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
let cbggg_BitmapFontCache_tempColor = null,
cbggg_BitmapFontCache__init_0 = ($this, $font, $integer) => {
    let var$3, $pageCount, var$5, var$6, $i, $n;
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 1);
    $this.$layouts = var$3;
    var$3 = new cbgu_Array;
    var$3.$ordered = 1;
    var$3.$items = $rt_createArray(jl_Object, 0);
    $this.$pooledLayouts = var$3;
    var$3 = new cbgg_Color;
    var$3.$r = 1.0;
    var$3.$g = 1.0;
    var$3.$b = 1.0;
    var$3.$a = 1.0;
    cbgg_Color_clamp(var$3);
    $this.$color = var$3;
    $this.$font = $font;
    $this.$integer = $integer;
    $pageCount = $font.$regions.$size;
    if (!$pageCount) {
        $font = new jl_IllegalArgumentException;
        $font.$suppressionEnabled = 1;
        $font.$writableStackTrace = 1;
        $font.$message = $rt_s(591);
        $rt_throw($font);
    }
    a: {
        $this.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls), $pageCount);
        $this.$idx0 = $rt_createIntArray($pageCount);
        if ($pageCount > 1) {
            var$5 = $rt_createArray(cbgu_IntArray, $pageCount);
            var$6 = var$5.data;
            $this.$pageGlyphIndices = var$5;
            $i = 0;
            $n = var$6.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $font = new cbgu_IntArray;
                $font.$ordered0 = 1;
                $font.$items0 = $rt_createIntArray(16);
                var$6[$i] = $font;
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
},
cbggg_BitmapFontCache__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_BitmapFontCache();
    cbggg_BitmapFontCache__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_BitmapFontCache_draw = ($this, $spriteBatch) => {
    let $regions, $j, $n, var$5, var$6, $vertices, var$8, var$9;
    $regions = $this.$font.$regions;
    $j = 0;
    $n = $this.$pageVertices.data.length;
    var$5 = $spriteBatch;
    while ($j < $n) {
        var$6 = $this.$idx0.data;
        if (var$6[$j] > 0) {
            $vertices = $this.$pageVertices.data[$j];
            if ($j >= $regions.$size) {
                var$5 = new jl_IndexOutOfBoundsException;
                $spriteBatch = new jl_StringBuilder;
                $spriteBatch.$buffer = $rt_createCharArray(16);
                var$8 = $spriteBatch.$length0;
                var$9 = $spriteBatch;
                jl_AbstractStringBuilder_insert(var$9, var$8, $rt_s(31));
                jl_AbstractStringBuilder_insert0($spriteBatch, $spriteBatch.$length0, $j, 10);
                jl_AbstractStringBuilder_insert(var$9, $spriteBatch.$length0, $rt_s(32));
                var$8 = $regions.$size;
                jl_AbstractStringBuilder_insert0($spriteBatch, $spriteBatch.$length0, var$8, 10);
                $regions = new jl_String;
                var$6 = $spriteBatch.$buffer;
                $vertices = var$6.data;
                $j = $spriteBatch.$length0;
                $n = $vertices.length;
                if ($j >= 0 && $j <= ($n - 0 | 0)) {
                    $regions.$nativeString = $rt_charArrayToString(var$6.data, 0, $j);
                    var$5.$suppressionEnabled = 1;
                    var$5.$writableStackTrace = 1;
                    var$5.$message = $regions;
                    $rt_throw(var$5);
                }
                $spriteBatch = new jl_IndexOutOfBoundsException;
                $spriteBatch.$suppressionEnabled = 1;
                $spriteBatch.$writableStackTrace = 1;
                $rt_throw($spriteBatch);
            }
            cbggg_SpriteBatch_draw(var$5, $regions.$items.data[$j].$texture, $vertices, 0, var$6[$j]);
        }
        $j = $j + 1 | 0;
    }
},
cbggg_BitmapFontCache_clear = $this => {
    let var$1, var$2, var$3, $i, var$5, var$6, $n;
    $this.$x4 = 0.0;
    $this.$y4 = 0.0;
    cbgu_Pools_freeAll($this.$pooledLayouts, 1);
    var$1 = $this.$pooledLayouts;
    var$2 = var$1.$items;
    var$3 = 0;
    $i = var$1.$size;
    var$5 = null;
    if (var$3 > $i) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < $i) {
        var$6 = var$2.data;
        $n = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = $n;
    }
    var$1.$size = 0;
    var$1 = $this.$layouts;
    var$2 = var$1.$items;
    var$3 = 0;
    $i = var$1.$size;
    var$5 = null;
    if (var$3 > $i) {
        var$1 = new jl_IllegalArgumentException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    while (var$3 < $i) {
        var$6 = var$2.data;
        $n = var$3 + 1 | 0;
        var$6[var$3] = var$5;
        var$3 = $n;
    }
    var$1.$size = 0;
    $i = 0;
    var$2 = $this.$idx0.data;
    $n = var$2.length;
    while ($i < $n) {
        var$6 = $this.$pageGlyphIndices;
        if (var$6 !== null)
            var$6.data[$i].$size0 = 0;
        var$2[$i] = 0;
        $i = $i + 1 | 0;
    }
},
cbggg_BitmapFontCache_requireGlyphs = ($this, $layout) => {
    let $tempGlyphCount, $n, $n_0, var$5, $i, var$7, $glyphs, var$9, $glyphItems, $ii, $nn;
    a: {
        if ($this.$pageVertices.data.length == 1)
            cbggg_BitmapFontCache_requirePageGlyphs($this, 0, $layout.$glyphCount);
        else {
            $tempGlyphCount = $this.$tempGlyphCount.data;
            $n = 0;
            $n_0 = $tempGlyphCount.length;
            if ($n > $n_0) {
                $layout = new jl_IllegalArgumentException;
                $layout.$suppressionEnabled = 1;
                $layout.$writableStackTrace = 1;
                $rt_throw($layout);
            }
            while ($n < $n_0) {
                var$5 = $n + 1 | 0;
                $tempGlyphCount[$n] = 0;
                $n = var$5;
            }
            $i = 0;
            $layout = $layout.$runs;
            $n = $layout.$size;
            while (true) {
                var$5 = $rt_compare($i, $n);
                if (var$5 >= 0)
                    break;
                if (var$5 >= 0) {
                    var$7 = new jl_IndexOutOfBoundsException;
                    $glyphs = new jl_StringBuilder;
                    $glyphs.$buffer = $rt_createCharArray(16);
                    $n = $glyphs.$length0;
                    var$9 = $glyphs;
                    jl_AbstractStringBuilder_insert(var$9, $n, $rt_s(31));
                    jl_AbstractStringBuilder_insert0($glyphs, $glyphs.$length0, $i, 10);
                    jl_AbstractStringBuilder_insert(var$9, $glyphs.$length0, $rt_s(32));
                    $i = $layout.$size;
                    jl_AbstractStringBuilder_insert0($glyphs, $glyphs.$length0, $i, 10);
                    $layout = new jl_String;
                    $tempGlyphCount = $glyphs.$buffer;
                    $glyphItems = $tempGlyphCount.data;
                    $n = $glyphs.$length0;
                    var$5 = $glyphItems.length;
                    if ($n >= 0 && $n <= (var$5 - 0 | 0)) {
                        $layout.$nativeString = $rt_charArrayToString($tempGlyphCount.data, 0, $n);
                        var$7.$suppressionEnabled = 1;
                        var$7.$writableStackTrace = 1;
                        var$7.$message = $layout;
                        $rt_throw(var$7);
                    }
                    $layout = new jl_IndexOutOfBoundsException;
                    $layout.$suppressionEnabled = 1;
                    $layout.$writableStackTrace = 1;
                    $rt_throw($layout);
                }
                $glyphs = $layout.$items.data[$i].$glyphs;
                $glyphItems = $glyphs.$items;
                $ii = 0;
                $nn = $glyphs.$size;
                while ($ii < $nn) {
                    var$5 = $glyphItems.data[$ii].$page;
                    $tempGlyphCount[var$5] = $tempGlyphCount[var$5] + 1 | 0;
                    $ii = $ii + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            $i = 0;
            while (true) {
                if ($i >= $n_0)
                    break a;
                cbggg_BitmapFontCache_requirePageGlyphs($this, $i, $tempGlyphCount[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
},
cbggg_BitmapFontCache_requirePageGlyphs = ($this, $page, $glyphCount) => {
    let var$3, $newVertices, $vertexCount, $vertices;
    var$3 = $this.$pageGlyphIndices;
    if (var$3 !== null) {
        $newVertices = var$3.data;
        if ($glyphCount > $newVertices[$page].$items0.data.length)
            cbgu_IntArray_ensureCapacity($newVertices[$page], $glyphCount - $newVertices[$page].$size0 | 0);
    }
    var$3 = $this.$idx0.data;
    $vertexCount = var$3[$page] + ($glyphCount * 20 | 0) | 0;
    $newVertices = $this.$pageVertices.data;
    $vertices = $newVertices[$page];
    if ($vertices === null)
        $newVertices[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_fastArraycopy($vertices, 0, $newVertices, 0, var$3[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
},
cbggg_BitmapFontCache_setPageCount = ($this, $pageCount) => {
    let $newPageVertices, $newPageGlyphIndices, $newIdx, $i, var$6;
    $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls), $pageCount);
    $newPageGlyphIndices = $this.$pageVertices;
    jl_System_fastArraycopy($newPageGlyphIndices, 0, $newPageVertices, 0, $newPageGlyphIndices.data.length);
    $this.$pageVertices = $newPageVertices;
    $newIdx = $rt_createIntArray($pageCount);
    $newPageVertices = $this.$idx0;
    jl_System_fastArraycopy($newPageVertices, 0, $newIdx, 0, $newPageVertices.data.length);
    $this.$idx0 = $newIdx;
    $newPageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
    $i = 0;
    $newIdx = $this.$pageGlyphIndices;
    if ($newIdx !== null) {
        $i = $newIdx.data.length;
        jl_System_fastArraycopy($newIdx, 0, $newPageGlyphIndices, 0, $i);
    }
    $newIdx = $newPageGlyphIndices.data;
    while ($i < $pageCount) {
        var$6 = new cbgu_IntArray;
        var$6.$ordered0 = 1;
        var$6.$items0 = $rt_createIntArray(16);
        $newIdx[$i] = var$6;
        $i = $i + 1 | 0;
    }
    $this.$pageGlyphIndices = $newPageGlyphIndices;
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
},
cbggg_BitmapFontCache_addToCache = ($this, $layout, $x, $y) => {
    let $runCount, var$5, $i, $colors, $colorsIndex, $nextColorGlyphIndex, $glyphIndex, $lastColorFloatBits, var$12, var$13, var$14, $glyphs, $run, $xAdvances, $gx, $gy, $ii, $nn, var$22, var$23;
    $runCount = $layout.$runs.$size;
    if (!$runCount)
        return;
    var$5 = $this.$pageVertices.data.length;
    $i = $this.$font.$regions.$size;
    if (var$5 < $i)
        cbggg_BitmapFontCache_setPageCount($this, $i);
    cbgu_Array_add($this.$layouts, $layout);
    cbggg_BitmapFontCache_requireGlyphs($this, $layout);
    $colors = $layout.$colors;
    $colorsIndex = 0;
    $nextColorGlyphIndex = 0;
    $glyphIndex = 0;
    $lastColorFloatBits = 0.0;
    $i = 0;
    while ($i < $runCount) {
        var$12 = $layout.$runs;
        if ($i >= var$12.$size) {
            $colors = new jl_IndexOutOfBoundsException;
            $layout = new jl_StringBuilder;
            $layout.$buffer = $rt_createCharArray(16);
            $runCount = $layout.$length0;
            var$13 = $layout;
            jl_AbstractStringBuilder_insert(var$13, $runCount, $rt_s(31));
            jl_AbstractStringBuilder_insert0($layout, $layout.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$13, $layout.$length0, $rt_s(32));
            $runCount = var$12.$size;
            jl_AbstractStringBuilder_insert0($layout, $layout.$length0, $runCount, 10);
            var$12 = new jl_String;
            var$14 = $layout.$buffer;
            $glyphs = var$14.data;
            var$5 = $layout.$length0;
            $i = $glyphs.length;
            if (var$5 >= 0 && var$5 <= ($i - 0 | 0)) {
                var$12.$nativeString = $rt_charArrayToString(var$14.data, 0, var$5);
                $colors.$suppressionEnabled = 1;
                $colors.$writableStackTrace = 1;
                $colors.$message = var$12;
                $rt_throw($colors);
            }
            $layout = new jl_IndexOutOfBoundsException;
            $layout.$suppressionEnabled = 1;
            $layout.$writableStackTrace = 1;
            $rt_throw($layout);
        }
        $run = var$12.$items.data[$i];
        var$12 = $run.$glyphs;
        $glyphs = var$12.$items;
        $xAdvances = $run.$xAdvances.$items1;
        $gx = $x + $run.$x0;
        $gy = $y + $run.$y3;
        $ii = 0;
        $nn = var$12.$size;
        while ($ii < $nn) {
            var$22 = $glyphIndex + 1 | 0;
            if ($glyphIndex == $nextColorGlyphIndex) {
                $colorsIndex = $colorsIndex + 1 | 0;
                if ($colorsIndex >= $colors.$size0) {
                    var$12 = new jl_IndexOutOfBoundsException;
                    $layout = new jl_StringBuilder;
                    $layout.$buffer = $rt_createCharArray(16);
                    $runCount = $layout.$length0;
                    var$13 = $layout;
                    jl_AbstractStringBuilder_insert(var$13, $runCount, $rt_s(31));
                    jl_AbstractStringBuilder_insert0($layout, $layout.$length0, $colorsIndex, 10);
                    jl_AbstractStringBuilder_insert(var$13, $layout.$length0, $rt_s(32));
                    $runCount = $colors.$size0;
                    jl_AbstractStringBuilder_insert0($layout, $layout.$length0, $runCount, 10);
                    $colors = new jl_String;
                    var$14 = $layout.$buffer;
                    $glyphs = var$14.data;
                    var$5 = $layout.$length0;
                    $i = $glyphs.length;
                    if (var$5 >= 0 && var$5 <= ($i - 0 | 0)) {
                        $colors.$nativeString = $rt_charArrayToString(var$14.data, 0, var$5);
                        var$12.$suppressionEnabled = 1;
                        var$12.$writableStackTrace = 1;
                        var$12.$message = $colors;
                        $rt_throw(var$12);
                    }
                    $layout = new jl_IndexOutOfBoundsException;
                    $layout.$suppressionEnabled = 1;
                    $layout.$writableStackTrace = 1;
                    $rt_throw($layout);
                }
                $lastColorFloatBits = $rt_intBitsToFloat($colors.$items0.data[$colorsIndex] & (-16777217));
                $colorsIndex = $colorsIndex + 1 | 0;
                var$5 = $rt_compare($colorsIndex, $colors.$size0);
                if (var$5 >= 0)
                    $nextColorGlyphIndex = (-1);
                else {
                    if (var$5 >= 0) {
                        var$12 = new jl_IndexOutOfBoundsException;
                        $layout = new jl_StringBuilder;
                        $layout.$buffer = $rt_createCharArray(16);
                        $runCount = $layout.$length0;
                        var$13 = $layout;
                        jl_AbstractStringBuilder_insert(var$13, $runCount, $rt_s(31));
                        jl_AbstractStringBuilder_insert0($layout, $layout.$length0, $colorsIndex, 10);
                        jl_AbstractStringBuilder_insert(var$13, $layout.$length0, $rt_s(32));
                        $runCount = $colors.$size0;
                        jl_AbstractStringBuilder_insert0($layout, $layout.$length0, $runCount, 10);
                        $colors = new jl_String;
                        var$14 = $layout.$buffer;
                        $glyphs = var$14.data;
                        var$5 = $layout.$length0;
                        $i = $glyphs.length;
                        if (var$5 >= 0 && var$5 <= ($i - 0 | 0)) {
                            $colors.$nativeString = $rt_charArrayToString(var$14.data, 0, var$5);
                            var$12.$suppressionEnabled = 1;
                            var$12.$writableStackTrace = 1;
                            var$12.$message = $colors;
                            $rt_throw(var$12);
                        }
                        $layout = new jl_IndexOutOfBoundsException;
                        $layout.$suppressionEnabled = 1;
                        $layout.$writableStackTrace = 1;
                        $rt_throw($layout);
                    }
                    $nextColorGlyphIndex = $colors.$items0.data[$colorsIndex];
                }
            }
            var$14 = $xAdvances.data;
            var$23 = $glyphs.data;
            $gx = $gx + var$14[$ii];
            cbggg_BitmapFontCache_addGlyph($this, var$23[$ii], $gx, $gy, $lastColorFloatBits);
            $ii = $ii + 1 | 0;
            $glyphIndex = var$22;
        }
        $i = $i + 1 | 0;
    }
    $this.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
},
cbggg_BitmapFontCache_addGlyph = ($this, $glyph, $x, $y, $color) => {
    let var$5, $scaleX, $scaleY, var$8, var$9, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $vertices, $idx, var$21, var$22;
    var$5 = $this.$font.$data0;
    $scaleX = var$5.$scaleX;
    $scaleY = var$5.$scaleY;
    var$8 = $x + $glyph.$xoffset * $scaleX;
    var$9 = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width0 * $scaleX;
    $height = $glyph.$height0 * $scaleY;
    $u = $glyph.$u;
    $u2 = $glyph.$u2;
    $v = $glyph.$v;
    $v2 = $glyph.$v2;
    if ($this.$integer) {
        var$8 = var$8 + jl_Math_sign(var$8) * 0.5 | 0;
        var$9 = var$9 + jl_Math_sign(var$9) * 0.5 | 0;
        $width = $width + jl_Math_sign($width) * 0.5 | 0;
        $height = $height + jl_Math_sign($height) * 0.5 | 0;
    }
    $x2 = var$8 + $width;
    $y2 = var$9 + $height;
    $page = $glyph.$page;
    $vertices = $this.$idx0.data;
    $idx = $vertices[$page];
    $vertices[$page] = $vertices[$page] + 20 | 0;
    $vertices = $this.$pageGlyphIndices;
    if ($vertices !== null) {
        $glyph = $vertices.data[$page];
        var$21 = $this.$glyphCount0;
        $this.$glyphCount0 = var$21 + 1 | 0;
        cbgu_IntArray_add($glyph, var$21);
    }
    $vertices = $this.$pageVertices.data[$page].data;
    var$21 = $idx + 1 | 0;
    $vertices[$idx] = var$8;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = var$9;
    var$21 = var$22 + 1 | 0;
    $vertices[var$22] = $color;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = $u;
    var$21 = var$22 + 1 | 0;
    $vertices[var$22] = $v;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = var$8;
    $page = var$22 + 1 | 0;
    $vertices[var$22] = $y2;
    var$21 = $page + 1 | 0;
    $vertices[$page] = $color;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = $u;
    var$21 = var$22 + 1 | 0;
    $vertices[var$22] = $v2;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = $x2;
    var$21 = var$22 + 1 | 0;
    $vertices[var$22] = $y2;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = $color;
    var$21 = var$22 + 1 | 0;
    $vertices[var$22] = $u2;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = $v2;
    var$21 = var$22 + 1 | 0;
    $vertices[var$22] = $x2;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = var$9;
    var$21 = var$22 + 1 | 0;
    $vertices[var$22] = $color;
    var$22 = var$21 + 1 | 0;
    $vertices[var$21] = $u2;
    $vertices[var$22] = $v;
},
cbggg_BitmapFontCache__clinit_ = () => {
    let var$1;
    var$1 = new cbgg_Color;
    var$1.$r = 1.0;
    var$1.$g = 1.0;
    var$1.$b = 1.0;
    var$1.$a = 1.0;
    cbgg_Color_clamp(var$1);
    cbggg_BitmapFontCache_tempColor = var$1;
},
jl_AbstractStringBuilder$Constants = $rt_classWithoutFields(),
jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null,
jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null,
jl_AbstractStringBuilder$Constants_floatAnalysisResult = null,
jl_AbstractStringBuilder$Constants__clinit_ = () => {
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = new otcit_DoubleAnalyzer$Result;
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = new otcit_FloatAnalyzer$Result;
},
otcit_FloatAnalyzer = $rt_classWithoutFields(),
otcit_FloatAnalyzer_MAX_MANTISSA = 0,
otcit_FloatAnalyzer_mantissa10Table = null,
otcit_FloatAnalyzer_exp10Table = null,
otcit_FloatAnalyzer_analyze = ($d, $result) => {
    let $bits, $mantissa, $exponent, var$6, $decExponent, $mantissaShift, var$9, $decMantissa, $upperPos, $upperPos_0, var$13, $decMantissaHi, $decMantissaLow, $lowerPos, $lowerPos_0, $posCmp;
    $bits = (isNaN($d) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits($d);
    $result.$sign1 = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent = 0;
        return;
    }
    if ($exponent)
        $bits = $mantissa | 8388608;
    else {
        $bits = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt($bits), Long_fromInt(8388608)), Long_ZERO)) {
            $bits = $bits << 1;
            $exponent = $exponent + (-1) | 0;
        }
    }
    var$6 = otcit_FloatAnalyzer_exp10Table;
    $decExponent = ju_Arrays_binarySearch(var$6, 0, var$6.data.length, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent | 0;
    var$6 = otcit_FloatAnalyzer_exp10Table.data;
    $mantissa = $decExponent + 1 | 0;
    $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
    $mantissa = otcit_FloatAnalyzer_mantissa10Table.data[$mantissa];
    var$9 = Long_and(Long_fromInt($bits), Long_create(4294967295, 0));
    $decMantissa = Long_lo(Long_shru(Long_mul(var$9, Long_and(Long_fromInt($mantissa), Long_create(4294967295, 0))), 32 - $mantissaShift | 0));
    if ($decMantissa < otcit_FloatAnalyzer_MAX_MANTISSA) {
        while ($rt_ucmp($decMantissa, otcit_FloatAnalyzer_MAX_MANTISSA) <= 0) {
            $decExponent = $decExponent + (-1) | 0;
            $decMantissa = ($decMantissa * 10 | 0) + 9 | 0;
        }
        var$6 = otcit_FloatAnalyzer_exp10Table.data;
        $mantissa = $decExponent + 1 | 0;
        $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
        $decMantissa = Long_lo(Long_shru(Long_mul(var$9, Long_and(Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$mantissa]), Long_create(4294967295, 0))), 32 - $mantissaShift | 0));
    }
    $bits = $bits << 1;
    $upperPos = $bits + 1 | 0;
    var$6 = otcit_FloatAnalyzer_mantissa10Table.data;
    $exponent = $decExponent + 1 | 0;
    $mantissa = var$6[$exponent];
    $upperPos_0 = $mantissaShift - 1 | 0;
    var$13 = Long_mul(Long_and(Long_fromInt($upperPos), Long_create(4294967295, 0)), Long_and(Long_fromInt($mantissa), Long_create(4294967295, 0)));
    $mantissa = 32 - $upperPos_0 | 0;
    $decMantissaHi = Long_lo(Long_shru(var$13, $mantissa));
    $decMantissaLow = Long_lo(Long_shru(Long_mul(Long_and(Long_fromInt($bits - 1 | 0), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$6[$exponent]), Long_create(4294967295, 0))), $mantissa));
    $lowerPos = 1;
    while (true) {
        $lowerPos_0 = $lowerPos * 10 | 0;
        if ($rt_ucmp($rt_udiv($decMantissa, $lowerPos_0), $rt_udiv($decMantissaLow, $lowerPos_0)) <= 0)
            break;
        $lowerPos = $lowerPos_0;
    }
    $upperPos_0 = 1;
    while (true) {
        $upperPos = $upperPos_0 * 10 | 0;
        if ($rt_ucmp($rt_udiv($decMantissa, $upperPos), $rt_udiv($decMantissaHi, $upperPos)) >= 0)
            break;
        $upperPos_0 = $upperPos;
    }
    $posCmp = $rt_ucmp($lowerPos, $upperPos_0);
    $bits = $posCmp > 0 ? $rt_imul($rt_udiv($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? $rt_imul($rt_udiv($decMantissa, $upperPos_0), $upperPos_0) + $upperPos_0 | 0 : $rt_imul($rt_udiv(($decMantissa + ($upperPos_0 / 2 | 0) | 0), $upperPos_0), $upperPos_0);
    if (jl_Long_compareUnsigned(Long_fromInt($bits), Long_fromInt(1000000000)) >= 0)
        while (true) {
            $decExponent = $decExponent + 1 | 0;
            $bits = $rt_udiv($bits, 10);
            if ($rt_ucmp($bits, 1000000000) < 0)
                break;
        }
    else if ($rt_ucmp($bits, 100000000) < 0) {
        $decExponent = $decExponent + (-1) | 0;
        $bits = $bits * 10 | 0;
    }
    $result.$mantissa = $bits;
    $result.$exponent = $decExponent - 50 | 0;
},
otcit_FloatAnalyzer__clinit_ = () => {
    otcit_FloatAnalyzer_MAX_MANTISSA = $rt_udiv((-1), 10);
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArrayFromData([(-18543760), (-873828468), (-1558056233), (-2105438446), (-791721136), (-1492370368), (-2052889754), (-707643228), (-1425108042), (-1999079893), (-621547450), (-1356231419), (-1943978595), (-533385374), (-1285701758), (-1887554866), (-443107408), (-1213479385), (-1829776968), (-350662770), (-1139523676), (-1770612400), (-255999462), (-1063793029), (-1710027882), (-159064234), (-986244846), (-1647989336), (-59802560), (-906835507), (-1584461865),
    (-2126562952), (-825520345), (-1519409735), (-2074521247), (-742253618), (-1452796353), (-2021230542), (-656988489), (-1384584251), (-1966660860), (-569676998), (-1314735058), (-1910781505), (-480270031), (-1243209484), (-1853561046), (-388717296), (-1169967296), (-1794967296), (-294967296), (-1094967296), (-1734967296), (-198967296), (-1018167296), (-1673527296), (-100663296), (-939524096), (-1610612736), (-2147483648), (-858993460), (-1546188227), (-2095944041), (-776530088), (-1480217529), (-2043167483),
    (-692087595), (-1412663535), (-1989124287), (-605618482), (-1343488245), (-1933784055), (-517074110), (-1272652747), (-1877115657), (-426404674), (-1200117198), (-1819087218), (-333559171), (-1125840796), (-1759666096), (-238485376), (-1049781760), (-1698818867), (-141129810), (-971897307), (-1636511305), (-41437710), (-892143627), (-1572708361), (-2117160148), (-810475859), (-1507374147), (-2064892777), (-726848065), (-1440471911), (-2011370988), (-641213203), (-1371964022), (-1956564688)]);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArrayFromData([(-37), (-34), (-31), (-28), (-24), (-21), (-18), (-14), (-11), (-8), (-4), (-1), 2, 6, 9, 12, 16, 19, 22, 26, 29, 32, 36, 39, 42, 46, 49, 52, 56, 59, 62, 65, 69, 72, 75, 79, 82, 85, 89, 92, 95, 99, 102, 105, 109, 112, 115, 119, 122, 125, 129, 132, 135, 139, 142, 145, 149, 152, 155, 158, 162, 165, 168, 172, 175, 178, 182, 185, 188, 192, 195, 198, 202, 205, 208, 212, 215, 218, 222, 225, 228, 232, 235, 238, 242, 245, 248, 252, 255, 258, 261, 265,
    268, 271, 275, 278, 281, 285, 288, 291]);
};
function otcit_FloatAnalyzer$Result() {
    let a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent = 0;
    a.$sign1 = 0;
}
let otcit_FloatSynthesizer = $rt_classWithoutFields(),
otcit_FloatSynthesizer_mantissa10Table = null,
otcit_FloatSynthesizer_exp10Table = null,
otcit_FloatSynthesizer_synthesizeFloat = ($mantissa, $exp, $negative) => {
    let $indexInTable, var$5, $binMantissa, $binExp, $binMantissaShift, $iee754;
    $indexInTable = 50 + $exp | 0;
    if ($mantissa && $indexInTable >= 0) {
        var$5 = otcit_FloatSynthesizer_mantissa10Table.data;
        if ($indexInTable >= var$5.length)
            return !$negative ? Infinity : (-Infinity);
        $binMantissa = Long_hi(Long_mul(Long_and(Long_fromInt($mantissa), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$5[$indexInTable]), Long_create(4294967295, 0))));
        $binExp = otcit_FloatSynthesizer_exp10Table.data[$indexInTable] - 1 | 0;
        $binMantissaShift = (32 - jl_Integer_numberOfLeadingZeros($binMantissa) | 0) - 30 | 0;
        $mantissa = $binMantissaShift >= 0 ? $binMantissa >>> $binMantissaShift | 0 : $binMantissa << ( -$binMantissaShift | 0);
        $exp = $binExp + $binMantissaShift | 0;
        if ($exp >= 255)
            return !$negative ? Infinity : (-Infinity);
        $mantissa = $mantissa + 32 | 0;
        if ($mantissa & (-1073741824)) {
            $mantissa = $mantissa >>> 1 | 0;
            $exp = $exp + 1 | 0;
        }
        if ($exp <= 0) {
            $exp = ( -$exp | 0) + 1 | 0;
            $indexInTable = 32;
            if ($exp < $indexInTable)
                $indexInTable = $exp;
            $mantissa = $mantissa >> $indexInTable;
            $exp = 0;
        }
        $iee754 = ($mantissa >>> 6 | 0) & 8388607 | $exp << 23;
        if ($negative)
            $iee754 = $iee754 ^ (-2147483648);
        return $rt_intBitsToFloat($iee754);
    }
    return $rt_intBitsToFloat(!$negative ? 0 : (-2147483648));
},
otcit_FloatSynthesizer__clinit_ = () => {
    otcit_FloatSynthesizer_mantissa10Table = $rt_createIntArrayFromData([(-1598972629), (-924973963), (-82475629), (-1662160004), (-1003958181), (-181205903), (-1723866425), (-1081091207), (-277622185), (-1784126602), (-1156416428), (-371778711), (-1842974431), (-1229976214), (-463728444), (-1900443013), (-1301811943), (-553523104), (-1956564676), (-1371964021), (-641213203), (-2011370988), (-1440471911), (-726848064), (-2064892776), (-1507374146), (-810475859), (-2117160148), (-1572708361), (-892143627), (-41437709),
    (-1636511304), (-971897307), (-141129809), (-1698818867), (-1049781759), (-238485375), (-1759666096), (-1125840795), (-333559170), (-1819087217), (-1200117198), (-426404673), (-1877115657), (-1272652747), (-517074110), (-1933784055), (-1343488244), (-605618481), (-1989124287), (-1412663534), (-692087594), (-2043167482), (-1480217529), (-776530087), (-2095944040), (-1546188227), (-858993459), (-2147483648), (-1610612736), (-939524096), (-100663296), (-1673527296), (-1018167296), (-198967296), (-1734967296),
    (-1094967296), (-294967296), (-1794967296), (-1169967296), (-388717296), (-1853561046), (-1243209483), (-480270030), (-1910781505), (-1314735057), (-569676998), (-1966660859), (-1384584250), (-656988489), (-2021230542), (-1452796353), (-742253617), (-2074521247), (-1519409734), (-825520344), (-2126562951), (-1584461865), (-906835507), (-59802560), (-1647989336), (-986244846), (-159064233), (-1710027882), (-1063793028), (-255999461), (-1770612399), (-1139523675), (-350662770), (-1829776967)]);
    otcit_FloatSynthesizer_exp10Table = $rt_createIntArrayFromData([(-35), (-32), (-29), (-25), (-22), (-19), (-15), (-12), (-9), (-5), (-2), 1, 5, 8, 11, 15, 18, 21, 25, 28, 31, 35, 38, 41, 45, 48, 51, 55, 58, 61, 64, 68, 71, 74, 78, 81, 84, 88, 91, 94, 98, 101, 104, 108, 111, 114, 118, 121, 124, 128, 131, 134, 138, 141, 144, 148, 151, 154, 158, 161, 164, 167, 171, 174, 177, 181, 184, 187, 191, 194, 197, 201, 204, 207, 211, 214, 217, 221, 224, 227, 231, 234, 237, 241, 244, 247, 251, 254, 257, 260, 264, 267,
    270, 274, 277, 280, 284, 287, 290, 294]);
},
jl_Object$NotifyListener = $rt_classWithoutFields(0);
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name2 = null;
}
let jnc_CodingErrorAction_IGNORE = null,
jnc_CodingErrorAction_REPLACE = null,
jnc_CodingErrorAction_REPORT = null,
jnc_CodingErrorAction__clinit_ = () => {
    let var$1;
    var$1 = new jnc_CodingErrorAction;
    var$1.$name2 = $rt_s(81);
    jnc_CodingErrorAction_IGNORE = var$1;
    var$1 = new jnc_CodingErrorAction;
    var$1.$name2 = $rt_s(82);
    jnc_CodingErrorAction_REPLACE = var$1;
    var$1 = new jnc_CodingErrorAction;
    var$1.$name2 = $rt_s(83);
    jnc_CodingErrorAction_REPORT = var$1;
};
function jnc_CharsetDecoder() {
    let a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement = null;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$state = 0;
}
let jnc_CharsetDecoder__init_ = ($this, $cs, $averageCharsPerByte, $maxCharsPerByte) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $this.$replacement = $rt_s(592);
    var$4 = jnc_CodingErrorAction_REPORT;
    $this.$malformedAction = var$4;
    $this.$unmappableAction = var$4;
    if ($averageCharsPerByte <= 0.0) {
        $cs = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        var$5 = var$4.$length0;
        var$6 = var$4;
        var$7 = $rt_s(593);
        jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
        jl_AbstractStringBuilder_insert1(var$6, var$4.$length0, $averageCharsPerByte);
        var$8 = new jl_String;
        var$9 = var$4.$buffer;
        var$10 = var$9.data;
        var$11 = var$4.$length0;
        var$12 = var$10.length;
        if (var$11 >= 0 && var$11 <= (var$12 - 0 | 0)) {
            var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$11);
            $cs.$suppressionEnabled = 1;
            $cs.$writableStackTrace = 1;
            $cs.$message = var$8;
            $rt_throw($cs);
        }
        $cs = new jl_IndexOutOfBoundsException;
        $cs.$suppressionEnabled = 1;
        $cs.$writableStackTrace = 1;
        $rt_throw($cs);
    }
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        return;
    }
    $cs = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    var$5 = var$4.$length0;
    var$6 = var$4;
    var$7 = $rt_s(594);
    jl_AbstractStringBuilder_insert(var$6, var$5, var$7);
    jl_AbstractStringBuilder_insert1(var$6, var$4.$length0, $maxCharsPerByte);
    var$8 = new jl_String;
    var$9 = var$4.$buffer;
    var$10 = var$9.data;
    var$11 = var$4.$length0;
    var$12 = var$10.length;
    if (var$11 >= 0 && var$11 <= (var$12 - 0 | 0)) {
        var$8.$nativeString = $rt_charArrayToString(var$9.data, 0, var$11);
        $cs.$suppressionEnabled = 1;
        $cs.$writableStackTrace = 1;
        $cs.$message = var$8;
        $rt_throw($cs);
    }
    $cs = new jl_IndexOutOfBoundsException;
    $cs.$suppressionEnabled = 1;
    $cs.$writableStackTrace = 1;
    $rt_throw($cs);
},
jnc_CharsetDecoder_onMalformedInput = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(499);
    $rt_throw(var$2);
},
jnc_CharsetDecoder_onUnmappableCharacter = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(499);
    $rt_throw(var$2);
},
jnc_CharsetDecoder_decode = ($this, $in, $out, $endOfInput) => {
    let var$4, $e, $result, var$7, var$8, var$9, $$je;
    var$4 = $this.$state;
    if (!(var$4 == 2 && !$endOfInput) && var$4 != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        $e = $this;
        while (true) {
            try {
                $result = jnci_BufferedDecoder_decodeLoop($e, $in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $in = new jnc_CoderMalfunctionError;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $in.$cause = $e;
                    $rt_throw($in);
                } else {
                    throw $$e;
                }
            }
            var$4 = $result.$kind;
            if (var$4 != 1 ? 0 : 1)
                break;
            if (var$4 ? 0 : 1) {
                if ($endOfInput) {
                    $endOfInput = $in.$position0;
                    var$7 = $in.$limit0;
                    if ($endOfInput >= var$7 ? 0 : 1) {
                        if ($this.$malformedAction === jnc_CodingErrorAction_REPORT) {
                            var$7 = var$7 - $endOfInput | 0;
                            $in = new jnc_CoderResult;
                            $in.$kind = 2;
                            $in.$length3 = var$7;
                            return $in;
                        }
                        if (($out.$limit0 - $out.$position0 | 0) <= $this.$replacement.$nativeString.length)
                            return jnc_CoderResult_OVERFLOW;
                        var$7 = $in.$position0;
                        jn_Buffer_position($in, var$7 + ($in.$limit0 - var$7 | 0) | 0);
                        if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE) {
                            $in = $this.$replacement;
                            jn_CharBuffer_put($out, $in, 0, $in.$nativeString.length);
                        }
                    }
                }
                return $result;
            }
            if (var$4 != 2 ? 0 : 1) {
                var$8 = $this.$malformedAction;
                if (var$8 === jnc_CodingErrorAction_REPORT)
                    return $result;
                if (var$8 === jnc_CodingErrorAction_REPLACE) {
                    if (($out.$limit0 - $out.$position0 | 0) < $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    var$8 = $this.$replacement;
                    jn_CharBuffer_put($out, var$8, 0, var$8.$nativeString.length);
                }
                var$9 = $in.$position0;
                var$4 = $result.$kind;
                var$7 = var$4 != 2 ? 0 : 1;
                if (!(!var$7 && !(var$4 != 3 ? 0 : 1) ? 0 : 1)) {
                    $in = new jl_UnsupportedOperationException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                }
                jn_Buffer_position($in, var$9 + $result.$length3 | 0);
            } else if (var$4 != 3 ? 0 : 1) {
                var$8 = $this.$unmappableAction;
                if (var$8 === jnc_CodingErrorAction_REPORT)
                    return $result;
                if (var$8 === jnc_CodingErrorAction_REPLACE) {
                    if (($out.$limit0 - $out.$position0 | 0) < $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    var$8 = $this.$replacement;
                    jn_CharBuffer_put($out, var$8, 0, var$8.$nativeString.length);
                }
                var$9 = $in.$position0;
                var$4 = $result.$kind;
                var$7 = var$4 != 2 ? 0 : 1;
                if (!(!var$7 && !(var$4 != 3 ? 0 : 1) ? 0 : 1)) {
                    $in = new jl_UnsupportedOperationException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                }
                jn_Buffer_position($in, var$9 + $result.$length3 | 0);
            }
        }
        return $result;
    }
    $in = new jl_IllegalStateException;
    $in.$suppressionEnabled = 1;
    $in.$writableStackTrace = 1;
    $rt_throw($in);
},
jnc_CharsetDecoder_decode0 = ($this, $in) => {
    let var$2, var$3, var$4, $out, var$6, var$7, $result, var$9, var$10, var$11, var$12, var$13;
    var$2 = $this.$state;
    if (var$2 && var$2 != 3) {
        $in = new jl_IllegalStateException;
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $rt_throw($in);
    }
    var$3 = $in.$limit0 - $in.$position0 | 0;
    if (!var$3) {
        $in = new jn_CharBufferOverArray;
        var$4 = $rt_createCharArray(0);
        $in.$mark = (-1);
        $in.$capacity = 0;
        $in.$limit0 = 0;
        $in.$position0 = 0;
        $in.$limit0 = 0;
        $in.$start3 = 0;
        $in.$readOnly1 = 0;
        $in.$array1 = var$4;
        return $in;
    }
    if (var$2)
        $this.$state = 0;
    var$3 = var$3 * $this.$averageCharsPerByte | 0;
    if (8 > var$3)
        var$3 = 8;
    if (var$3 < 0) {
        $in = new jl_IllegalArgumentException;
        $out = new jl_StringBuilder;
        $out.$buffer = $rt_createCharArray(16);
        var$2 = $out.$length0;
        var$6 = $out;
        var$7 = $rt_s(529);
        jl_AbstractStringBuilder_insert(var$6, var$2, var$7);
        jl_AbstractStringBuilder_insert0($out, $out.$length0, var$3, 10);
        $result = new jl_String;
        var$4 = $out.$buffer;
        var$9 = var$4.data;
        var$3 = $out.$length0;
        var$10 = var$9.length;
        if (var$3 >= 0 && var$3 <= (var$10 - 0 | 0)) {
            $result.$nativeString = $rt_charArrayToString(var$4.data, 0, var$3);
            $in.$suppressionEnabled = 1;
            $in.$writableStackTrace = 1;
            $in.$message = $result;
            $rt_throw($in);
        }
        $in = new jl_IndexOutOfBoundsException;
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $rt_throw($in);
    }
    $out = new jn_CharBufferOverArray;
    var$4 = $rt_createCharArray(var$3);
    $out.$mark = (-1);
    $out.$capacity = var$3;
    $out.$limit0 = var$3;
    $out.$position0 = 0;
    $out.$limit0 = var$3;
    $out.$start3 = 0;
    $out.$readOnly1 = 0;
    $out.$array1 = var$4;
    a: while (true) {
        $result = jnc_CharsetDecoder_decode($this, $in, $out, 0);
        var$2 = $result.$kind;
        if (var$2 ? 0 : 1) {
            $in = jnc_CharsetDecoder_decode($this, $in, $out, 1);
            var$3 = $in.$kind;
            var$2 = var$3 != 2 ? 0 : 1;
            var$2 = !var$2 && !(var$3 != 3 ? 0 : 1) ? 0 : 1;
            b: {
                if (var$2) {
                    switch (var$3) {
                        case 0:
                            break;
                        case 1:
                            $in = new jnc_BufferOverflowException;
                            $in.$suppressionEnabled = 1;
                            $in.$writableStackTrace = 1;
                            $rt_throw($in);
                        case 2:
                            $out = new jnc_MalformedInputException;
                            var$2 = $in.$length3;
                            $out.$suppressionEnabled = 1;
                            $out.$writableStackTrace = 1;
                            $out.$length5 = var$2;
                            $rt_throw($out);
                        case 3:
                            $out = new jnc_UnmappableCharacterException;
                            var$2 = $in.$length3;
                            $out.$suppressionEnabled = 1;
                            $out.$writableStackTrace = 1;
                            $out.$length4 = var$2;
                            $rt_throw($out);
                        default:
                            break b;
                    }
                    $in = new jnc_BufferUnderflowException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                }
            }
            while (true) {
                var$3 = $this.$state;
                if (var$3 != 3 && var$3 != 2) {
                    $in = new jl_IllegalStateException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                }
                $this.$state = 3;
                if (jnc_CoderResult_UNDERFLOW.$kind ? 0 : 1)
                    break;
                var$4 = $out.$array1.data;
                var$10 = var$4.length;
                var$3 = var$10 * 2 | 0;
                if (8 > var$3)
                    var$3 = 8;
                var$9 = $rt_createCharArray(var$3);
                if (var$3 < var$10)
                    var$10 = var$3;
                var$11 = var$9.data;
                var$2 = 0;
                while (var$2 < var$10) {
                    var$11[var$2] = var$4[var$2];
                    var$2 = var$2 + 1 | 0;
                }
                var$3 = var$11.length;
                $in = new jn_CharBufferOverArray;
                var$12 = 0 + var$3 | 0;
                $in.$mark = (-1);
                $in.$capacity = var$3;
                $in.$limit0 = var$3;
                $in.$position0 = 0;
                $in.$limit0 = var$12;
                $in.$start3 = 0;
                $in.$readOnly1 = 0;
                $in.$array1 = var$9;
                jn_Buffer_position($in, $out.$position0);
                $out = $in;
            }
            $out.$limit0 = $out.$position0;
            $out.$position0 = 0;
            $out.$mark = (-1);
            return $out;
        }
        if (var$2 != 1 ? 0 : 1) {
            var$4 = $out.$array1.data;
            var$10 = var$4.length;
            var$3 = var$10 * 2 | 0;
            if (8 > var$3)
                var$3 = 8;
            var$9 = $rt_createCharArray(var$3);
            if (var$3 < var$10)
                var$10 = var$3;
            var$11 = var$9.data;
            var$2 = 0;
            while (var$2 < var$10) {
                var$11[var$2] = var$4[var$2];
                var$2 = var$2 + 1 | 0;
            }
            var$12 = var$11.length;
            var$6 = new jn_CharBufferOverArray;
            var$13 = 0 + var$12 | 0;
            var$6.$mark = (-1);
            var$6.$capacity = var$12;
            var$6.$limit0 = var$12;
            var$6.$position0 = 0;
            var$6.$limit0 = var$13;
            var$6.$start3 = 0;
            var$6.$readOnly1 = 0;
            var$6.$array1 = var$9;
            jn_Buffer_position(var$6, $out.$position0);
            $out = var$6;
        }
        var$3 = $result.$kind;
        var$2 = var$3 != 2 ? 0 : 1;
        if (!(!var$2 && !(var$3 != 3 ? 0 : 1) ? 0 : 1))
            continue;
        switch (var$3) {
            case 0:
                break a;
            case 1:
                $in = new jnc_BufferOverflowException;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $rt_throw($in);
            case 2:
                $in = new jnc_MalformedInputException;
                var$2 = $result.$length3;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $in.$length5 = var$2;
                $rt_throw($in);
            case 3:
                $in = new jnc_UnmappableCharacterException;
                var$2 = $result.$length3;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $in.$length4 = var$2;
                $rt_throw($in);
            default:
        }
    }
    $in = new jnc_BufferUnderflowException;
    $in.$suppressionEnabled = 1;
    $in.$writableStackTrace = 1;
    $rt_throw($in);
},
cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum),
cbgg_TextureData$TextureDataType_Pixmap = null,
cbgg_TextureData$TextureDataType_Custom = null,
cbgg_TextureData$TextureDataType_$VALUES = null,
cbgg_TextureData$TextureDataType__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbgg_TextureData$TextureDataType;
    var$1.$name0 = $rt_s(595);
    var$1.$ordinal0 = 0;
    cbgg_TextureData$TextureDataType_Pixmap = var$1;
    var$2 = new cbgg_TextureData$TextureDataType;
    var$2.$name0 = $rt_s(596);
    var$2.$ordinal0 = 1;
    cbgg_TextureData$TextureDataType_Custom = var$2;
    cbgg_TextureData$TextureDataType_$VALUES = $rt_wrapArray(cbgg_TextureData$TextureDataType, [var$1, var$2]);
},
cbggg_MipMapGenerator = $rt_classWithoutFields(),
cbggg_MipMapGenerator_useHWMipMap = 0,
cbggg_MipMapGenerator_generateMipMap = ($target, $pixmap, $textureWidth, $textureHeight) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if (!cbggg_MipMapGenerator_useHWMipMap) {
        cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
        return;
    }
    var$5 = cbg_Application$ApplicationType_WebGL;
    if (var$5 !== cbg_Application$ApplicationType_Android && var$5 !== var$5 && var$5 !== cbg_Application$ApplicationType_iOS)
        cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight);
    else {
        a: {
            var$6 = cbg_Gdx_gl;
            $pixmap = $pixmap.$nativePixmap;
            var$7 = $pixmap.$format;
            switch (var$7) {
                case 1:
                    var$8 = 6406;
                    break a;
                case 2:
                    var$8 = 6410;
                    break a;
                case 3:
                case 5:
                    var$8 = 6407;
                    break a;
                case 4:
                case 6:
                    var$8 = 6408;
                    break a;
                default:
            }
            $pixmap = new cbgu_GdxRuntimeException;
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = var$6;
            $rt_throw($pixmap);
        }
        b: {
            var$9 = $pixmap.$width;
            var$10 = $pixmap.$height;
            switch (var$7) {
                case 1:
                    var$11 = 6406;
                    break b;
                case 2:
                    var$11 = 6410;
                    break b;
                case 3:
                case 5:
                    var$11 = 6407;
                    break b;
                case 4:
                case 6:
                    var$11 = 6408;
                    break b;
                default:
            }
            $pixmap = new cbgu_GdxRuntimeException;
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = var$6;
            $rt_throw($pixmap);
        }
        c: {
            switch (var$7) {
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                case 5:
                    var$7 = 33635;
                    break c;
                case 6:
                    var$7 = 32819;
                    break c;
                default:
                    $pixmap = new cbgu_GdxRuntimeException;
                    $pixmap.$suppressionEnabled = 1;
                    $pixmap.$writableStackTrace = 1;
                    $pixmap.$message = var$6;
                    $rt_throw($pixmap);
            }
            var$7 = 5121;
        }
        var$6.$glTexImage2D($target, 0, var$8, var$9, var$10, 0, var$11, var$7, $pixmap.$buffer2);
        cbg_Gdx_gl20.$glGenerateMipmap($target);
    }
},
cbggg_MipMapGenerator_generateMipMapDesktop = ($target, $pixmap, $textureWidth, $textureHeight) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    var$5 = cbg_Gdx_graphics.$context.getExtension("GL_ARB_framebuffer_object") === null ? 0 : 1;
    a: {
        if (!var$5 && !(cbg_Gdx_graphics.$context.getExtension("GL_EXT_framebuffer_object") === null ? 0 : 1)) {
            var$6 = cbg_Gdx_gl20.constructor;
            if (var$6 === null)
                var$7 = null;
            else {
                var$7 = var$6.classObject;
                if (var$7 === null) {
                    var$7 = new jl_Class;
                    var$7.$platformClass = var$6;
                    var$6.classObject = var$7;
                }
            }
            if (var$7.$name === null)
                var$7.$name = $rt_str(var$7.$platformClass.$meta.name);
            var$8 = var$7.$name;
            if (var$8 === $rt_s(597))
                var$5 = 1;
            else if (!($rt_s(597) instanceof jl_String))
                var$5 = 0;
            else {
                var$6 = $rt_s(597);
                var$5 = var$8.$nativeString !== var$6.$nativeString ? 0 : 1;
            }
            if (!var$5 && cbg_Gdx_gl30 === null) {
                cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
                break a;
            }
        }
        b: {
            var$6 = cbg_Gdx_gl;
            $pixmap = $pixmap.$nativePixmap;
            var$5 = $pixmap.$format;
            switch (var$5) {
                case 1:
                    var$9 = 6406;
                    break b;
                case 2:
                    var$9 = 6410;
                    break b;
                case 3:
                case 5:
                    var$9 = 6407;
                    break b;
                case 4:
                case 6:
                    var$9 = 6408;
                    break b;
                default:
            }
            $pixmap = new cbgu_GdxRuntimeException;
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = var$6;
            $rt_throw($pixmap);
        }
        c: {
            var$10 = $pixmap.$width;
            var$11 = $pixmap.$height;
            switch (var$5) {
                case 1:
                    var$12 = 6406;
                    break c;
                case 2:
                    var$12 = 6410;
                    break c;
                case 3:
                case 5:
                    var$12 = 6407;
                    break c;
                case 4:
                case 6:
                    var$12 = 6408;
                    break c;
                default:
            }
            $pixmap = new cbgu_GdxRuntimeException;
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = var$6;
            $rt_throw($pixmap);
        }
        d: {
            switch (var$5) {
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                case 5:
                    var$5 = 33635;
                    break d;
                case 6:
                    var$5 = 32819;
                    break d;
                default:
                    $pixmap = new cbgu_GdxRuntimeException;
                    $pixmap.$suppressionEnabled = 1;
                    $pixmap.$writableStackTrace = 1;
                    $pixmap.$message = var$6;
                    $rt_throw($pixmap);
            }
            var$5 = 5121;
        }
        var$6.$glTexImage2D($target, 0, var$9, var$10, var$11, 0, var$12, var$5, $pixmap.$buffer2);
        cbg_Gdx_gl20.$glGenerateMipmap($target);
    }
},
cbggg_MipMapGenerator_generateMipMapCPU = ($target, $pixmap, $textureWidth, $textureHeight) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11, $width, $height, $level, $tmp_0, var$16, var$17, var$18;
    a: {
        var$5 = cbg_Gdx_gl;
        var$6 = $pixmap.$nativePixmap;
        var$7 = var$6.$format;
        switch (var$7) {
            case 1:
                var$8 = 6406;
                break a;
            case 2:
                var$8 = 6410;
                break a;
            case 3:
            case 5:
                var$8 = 6407;
                break a;
            case 4:
            case 6:
                var$8 = 6408;
                break a;
            default:
        }
        $pixmap = new cbgu_GdxRuntimeException;
        $pixmap.$suppressionEnabled = 1;
        $pixmap.$writableStackTrace = 1;
        $pixmap.$message = var$5;
        $rt_throw($pixmap);
    }
    b: {
        var$9 = var$6.$width;
        var$10 = var$6.$height;
        switch (var$7) {
            case 1:
                var$11 = 6406;
                break b;
            case 2:
                var$11 = 6410;
                break b;
            case 3:
            case 5:
                var$11 = 6407;
                break b;
            case 4:
            case 6:
                var$11 = 6408;
                break b;
            default:
        }
        $pixmap = new cbgu_GdxRuntimeException;
        $pixmap.$suppressionEnabled = 1;
        $pixmap.$writableStackTrace = 1;
        $pixmap.$message = var$5;
        $rt_throw($pixmap);
    }
    c: {
        switch (var$7) {
            case 1:
            case 2:
            case 3:
            case 4:
                var$7 = 5121;
                break c;
            case 5:
                var$7 = 33635;
                break c;
            case 6:
                var$7 = 32819;
                break c;
            default:
        }
        $pixmap = new cbgu_GdxRuntimeException;
        $pixmap.$suppressionEnabled = 1;
        $pixmap.$writableStackTrace = 1;
        $pixmap.$message = var$5;
        $rt_throw($pixmap);
    }
    var$5.$glTexImage2D($target, 0, var$8, var$9, var$10, 0, var$11, var$7, var$6.$buffer2);
    if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight) {
        $pixmap = new cbgu_GdxRuntimeException;
        $pixmap.$suppressionEnabled = 1;
        $pixmap.$writableStackTrace = 1;
        $pixmap.$message = $rt_s(598);
        $rt_throw($pixmap);
    }
    var$5 = $pixmap.$nativePixmap;
    $width = var$5.$width / 2 | 0;
    $height = var$5.$height / 2 | 0;
    $level = 1;
    d: {
        while ($width > 0 && $height > 0) {
            $tmp_0 = new cbgg_Pixmap;
            var$6 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat($pixmap.$nativePixmap.$format);
            $tmp_0.$blending = cbgg_Pixmap$Blending_SourceOver;
            $tmp_0.$filter = cbgg_Pixmap$Filter_BiLinear;
            $tmp_0.$color0 = 0;
            var$16 = new cbggg_Gdx2DPixmap;
            var$8 = cbgg_Pixmap$Format_toGdx2DPixmapFormat(var$6);
            var$17 = $rt_createByteArray(0).data;
            $textureHeight = var$17.length;
            if ($textureHeight < 0)
                break d;
            if ($textureHeight > ($textureHeight - 0 | 0))
                break d;
            var$5 = new jn_ByteBufferImpl;
            var$11 = 0 + $textureHeight | 0;
            var$5.$mark = (-1);
            var$5.$capacity = $textureHeight;
            var$5.$limit0 = $textureHeight;
            var$5.$order = jn_ByteOrder_BIG_ENDIAN;
            var$5.$start0 = 0;
            var$5.$bkArray = $rt_createByteArray($textureHeight);
            var$6 = new cgxgbtdt_Int8ArrayNative;
            var$6.$buffer0 = new Int8Array($textureHeight);
            var$5.$array = var$6;
            var$7 = 0;
            while (var$7 < $textureHeight) {
                var$9 = var$17[var$7];
                var$6 = var$5.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer(var$6);
                var$6.$buffer0[var$7] = var$9;
                var$7 = var$7 + 1 | 0;
            }
            var$5.$position0 = 0;
            var$5.$limit0 = var$11;
            var$5.$direct = 0;
            var$5.$readOnly0 = 0;
            var$16.$buffer2 = var$5;
            var$16.$nativeData = cbggg_Gdx2DPixmap_newPixmapNative$js_body$_35($width, $height, var$8);
            cbggg_Gdx2DPixmap_updateNativeData(var$16);
            $tmp_0.$nativePixmap = var$16;
            $textureHeight = cbgg_Color_rgba8888(0.0, 0.0, 0.0, 0.0);
            $tmp_0.$color0 = $textureHeight;
            Gdx.Gdx.prototype.g2d_clear($tmp_0.$nativePixmap.$basePtr, $textureHeight);
            var$5 = cbgg_Pixmap$Blending_None;
            $tmp_0.$blending = var$5;
            var$6 = $tmp_0.$nativePixmap;
            $textureWidth = var$5 !== var$5 ? 1 : 0;
            Gdx.Gdx.prototype.g2d_set_blend(var$6.$basePtr, $textureWidth);
            var$6 = $pixmap.$nativePixmap;
            var$8 = var$6.$width;
            var$9 = var$6.$height;
            var$5 = $tmp_0.$nativePixmap;
            Gdx.Gdx.prototype.g2d_draw_pixmap(var$6.$basePtr, var$5.$basePtr, 0, 0, var$8, var$9, 0, 0, $width, $height);
            if ($level > 1) {
                if ($pixmap.$disposed) {
                    var$5 = new cbgu_GdxRuntimeException;
                    var$5.$suppressionEnabled = 1;
                    var$5.$writableStackTrace = 1;
                    var$5.$message = $rt_s(45);
                    $rt_throw(var$5);
                }
                Gdx.Gdx.prototype.g2d_free($pixmap.$nativePixmap.$basePtr);
                $pixmap.$disposed = 1;
            }
            e: {
                $pixmap = cbg_Gdx_gl;
                var$5 = $tmp_0.$nativePixmap;
                $textureHeight = var$5.$format;
                switch ($textureHeight) {
                    case 1:
                        break;
                    case 2:
                        var$11 = 6410;
                        break e;
                    case 3:
                    case 5:
                        var$11 = 6407;
                        break e;
                    case 4:
                    case 6:
                        var$11 = 6408;
                        break e;
                    default:
                        $pixmap = new cbgu_GdxRuntimeException;
                        $pixmap.$suppressionEnabled = 1;
                        $pixmap.$writableStackTrace = 1;
                        $pixmap.$message = var$5;
                        $rt_throw($pixmap);
                }
                var$11 = 6406;
            }
            f: {
                var$7 = var$5.$width;
                var$18 = var$5.$height;
                switch ($textureHeight) {
                    case 1:
                        break;
                    case 2:
                        $width = 6410;
                        break f;
                    case 3:
                    case 5:
                        $width = 6407;
                        break f;
                    case 4:
                    case 6:
                        $width = 6408;
                        break f;
                    default:
                        $pixmap = new cbgu_GdxRuntimeException;
                        $pixmap.$suppressionEnabled = 1;
                        $pixmap.$writableStackTrace = 1;
                        $pixmap.$message = var$5;
                        $rt_throw($pixmap);
                }
                $width = 6406;
            }
            g: {
                switch ($textureHeight) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        break;
                    case 5:
                        $textureHeight = 33635;
                        break g;
                    case 6:
                        $textureHeight = 32819;
                        break g;
                    default:
                        $pixmap = new cbgu_GdxRuntimeException;
                        $pixmap.$suppressionEnabled = 1;
                        $pixmap.$writableStackTrace = 1;
                        $pixmap.$message = var$5;
                        $rt_throw($pixmap);
                }
                $textureHeight = 5121;
            }
            $pixmap.$glTexImage2D($target, $level, var$11, var$7, var$18, 0, $width, $textureHeight, var$5.$buffer2);
            $pixmap = $tmp_0.$nativePixmap;
            $width = $pixmap.$width / 2 | 0;
            $height = $pixmap.$height / 2 | 0;
            $level = $level + 1 | 0;
            $pixmap = $tmp_0;
        }
        return;
    }
    $pixmap = new jl_IndexOutOfBoundsException;
    jl_Throwable__init_($pixmap);
    $rt_throw($pixmap);
},
cbggg_MipMapGenerator__clinit_ = () => {
    cbggg_MipMapGenerator_useHWMipMap = 1;
},
otcit_DoubleAnalyzer$Result = $rt_classWithoutFields();
function jur_Matcher$1() {
    let a = this; jl_Object.call(a);
    a.$grN = 0;
    a.$val$gr = 0;
    a.$this$015 = null;
}
let jur_Matcher$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$015 = $this$0;
    $this.$val$gr = var$2;
    $this.$grN = var$2;
},
jur_Matcher$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Matcher$1();
    jur_Matcher$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Matcher$1_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = $this.$this$015;
    var$2 = $this.$grN;
    var$1 = var$1.$matchResult;
    var$3 = var$1.$valid;
    if (!var$3) {
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace(var$1);
        $rt_throw(var$1);
    }
    if (var$2 >= 0) {
        var$4 = $rt_compare(var$2, var$1.$groupCount);
        if (var$4 < 0) {
            a: {
                var$5 = var$1.$groupBounds.data;
                var$6 = var$2 * 2 | 0;
                if (var$5[var$6] < 0)
                    var$1 = null;
                else {
                    var$1 = var$1.$string2;
                    if (!var$3) {
                        var$1 = new jl_IllegalStateException;
                        var$1.$suppressionEnabled = 1;
                        var$1.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace(var$1);
                        $rt_throw(var$1);
                    }
                    if (var$2 >= 0 && var$4 < 0) {
                        var$7 = var$5[var$6];
                        if (!var$3) {
                            var$1 = new jl_IllegalStateException;
                            var$1.$suppressionEnabled = 1;
                            var$1.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace(var$1);
                            $rt_throw(var$1);
                        }
                        if (var$2 < 0)
                            break a;
                        if (var$4 >= 0)
                            break a;
                        var$2 = var$5[var$6 + 1 | 0];
                        var$1 = jl_String_substring(var$1, var$7, var$2);
                    } else {
                        var$1 = new jl_IndexOutOfBoundsException;
                        var$8 = new jl_StringBuilder;
                        jl_Object__init_(var$8);
                        var$8.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, var$2, 10);
                        var$9 = new jl_String;
                        var$5 = var$8.$buffer;
                        var$10 = var$5.data;
                        var$7 = var$8.$length0;
                        jl_Object__init_(var$9);
                        ju_Objects_checkFromIndexSize(0, var$7, var$10.length);
                        var$9.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
                        var$1.$suppressionEnabled = 1;
                        var$1.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace(var$1);
                        var$1.$message = var$9;
                        $rt_throw(var$1);
                    }
                }
                return var$1;
            }
            var$1 = new jl_IndexOutOfBoundsException;
            var$8 = new jl_StringBuilder;
            jl_Object__init_(var$8);
            var$8.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, var$2, 10);
            var$9 = new jl_String;
            var$5 = var$8.$buffer;
            var$10 = var$5.data;
            var$7 = var$8.$length0;
            jl_Object__init_(var$9);
            ju_Objects_checkFromIndexSize(0, var$7, var$10.length);
            var$9.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$1);
            var$1.$message = var$9;
            $rt_throw(var$1);
        }
    }
    var$1 = new jl_IndexOutOfBoundsException;
    var$8 = new jl_StringBuilder;
    jl_Object__init_(var$8);
    var$8.$buffer = $rt_createCharArray(16);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, var$2, 10);
    var$9 = new jl_String;
    var$5 = var$8.$buffer;
    var$10 = var$5.data;
    var$7 = var$8.$length0;
    jl_Object__init_(var$9);
    ju_Objects_checkFromIndexSize(0, var$7, var$10.length);
    var$9.$nativeString = $rt_charArrayToString(var$5.data, 0, var$7);
    var$1.$suppressionEnabled = 1;
    var$1.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$1);
    var$1.$message = var$9;
    $rt_throw(var$1);
},
jn_CharBuffer = $rt_classWithoutFields(jn_Buffer),
jn_CharBuffer_get = ($this, $dst, $offset, $length) => {
    let var$4, var$5, $i, var$7, var$8, var$9, var$10, $pos, var$12, var$13, var$14;
    if ($offset >= 0) {
        var$4 = $dst.data;
        var$5 = var$4.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i > var$5) {
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                $offset = var$8.$length0;
                var$9 = var$8;
                var$10 = $rt_s(599);
                var$9 = var$9;
                jl_AbstractStringBuilder_insert(var$9, $offset, var$10);
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $i, 10);
                jl_AbstractStringBuilder_insert(var$9, var$8.$length0, $rt_s(549));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, var$5, 10);
                var$10 = new jl_String;
                $dst = var$8.$buffer;
                var$4 = $dst.data;
                $length = var$8.$length0;
                var$5 = var$4.length;
                if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                    var$10.$nativeString = $rt_charArrayToString($dst.data, 0, $length);
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    var$7.$message = var$10;
                    $rt_throw(var$7);
                }
                var$7 = new jl_IndexOutOfBoundsException;
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                $rt_throw(var$7);
            }
            var$5 = $this.$limit0;
            $pos = $this.$position0;
            if ((var$5 - $pos | 0) < $length) {
                var$7 = new jn_BufferUnderflowException;
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                $rt_throw(var$7);
            }
            if ($length >= 0) {
                $i = 0;
                var$7 = $this;
                var$12 = $pos;
                while ($i < $length) {
                    var$13 = $offset + 1 | 0;
                    var$5 = var$12 + 1 | 0;
                    var$4[$offset] = var$7.$array1.data[var$12 + var$7.$start3 | 0];
                    $i = $i + 1 | 0;
                    $offset = var$13;
                    var$12 = var$5;
                }
                $this.$position0 = $pos + $length | 0;
                return $this;
            }
            var$7 = new jl_IndexOutOfBoundsException;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            $offset = var$8.$length0;
            var$9 = var$8;
            var$10 = $rt_s(550);
            var$9 = var$9;
            jl_AbstractStringBuilder_insert(var$9, $offset, var$10);
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $length, 10);
            jl_AbstractStringBuilder_insert(var$9, var$8.$length0, $rt_s(551));
            var$10 = new jl_String;
            $dst = var$8.$buffer;
            var$4 = $dst.data;
            $length = var$8.$length0;
            var$5 = var$4.length;
            if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                var$10.$nativeString = $rt_charArrayToString($dst.data, 0, $length);
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                var$7.$message = var$10;
                $rt_throw(var$7);
            }
            var$7 = new jl_IndexOutOfBoundsException;
            var$7.$suppressionEnabled = 1;
            var$7.$writableStackTrace = 1;
            $rt_throw(var$7);
        }
    }
    $dst = $dst.data;
    var$7 = new jl_IndexOutOfBoundsException;
    $length = $dst.length;
    var$8 = new jl_StringBuilder;
    var$8.$buffer = $rt_createCharArray(16);
    var$5 = var$8.$length0;
    var$9 = var$8;
    var$10 = $rt_s(552);
    var$14 = var$9;
    jl_AbstractStringBuilder_insert(var$14, var$5, var$10);
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $offset, 10);
    jl_AbstractStringBuilder_insert(var$14, var$8.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $length, 10);
    $length = var$8.$length0;
    jl_AbstractStringBuilder_insertSpace(var$9, $length, $length + 1 | 0);
    var$9.$buffer.data[$length] = 41;
    var$10 = new jl_String;
    $dst = var$8.$buffer;
    var$4 = $dst.data;
    $length = var$8.$length0;
    var$5 = var$4.length;
    if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
        var$10.$nativeString = $rt_charArrayToString($dst.data, 0, $length);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$10;
        $rt_throw(var$7);
    }
    var$7 = new jl_IndexOutOfBoundsException;
    var$7.$suppressionEnabled = 1;
    var$7.$writableStackTrace = 1;
    $rt_throw(var$7);
},
jn_CharBuffer_put0 = ($this, $src, $offset, $length) => {
    let var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11, var$12, var$13, var$14;
    if ($this.$readOnly1) {
        var$4 = new jn_ReadOnlyBufferException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    var$5 = $this.$limit0;
    $pos = $this.$position0;
    if ((var$5 - $pos | 0) < $length) {
        var$4 = new jn_BufferOverflowException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        $rt_throw(var$4);
    }
    if ($offset >= 0) {
        var$7 = $src.data;
        var$5 = var$7.length;
        if ($offset <= var$5) {
            $i = $offset + $length | 0;
            if ($i > var$5) {
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                $offset = var$9.$length0;
                var$10 = var$9;
                var$11 = $rt_s(600);
                var$10 = var$10;
                jl_AbstractStringBuilder_insert(var$10, $offset, var$11);
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $i, 10);
                jl_AbstractStringBuilder_insert(var$10, var$9.$length0, $rt_s(549));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, var$5, 10);
                var$11 = new jl_String;
                $src = var$9.$buffer;
                var$7 = $src.data;
                $length = var$9.$length0;
                var$5 = var$7.length;
                if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                    var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$11;
                    $rt_throw(var$4);
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                $rt_throw(var$4);
            }
            if ($length >= 0) {
                $i = 0;
                var$4 = $this;
                var$12 = $pos;
                while ($i < $length) {
                    var$13 = var$12 + 1 | 0;
                    var$5 = $offset + 1 | 0;
                    var$4.$array1.data[var$12 + var$4.$start3 | 0] = var$7[$offset];
                    $i = $i + 1 | 0;
                    var$12 = var$13;
                    $offset = var$5;
                }
                $this.$position0 = $pos + $length | 0;
                return $this;
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$9 = new jl_StringBuilder;
            var$9.$buffer = $rt_createCharArray(16);
            $offset = var$9.$length0;
            var$10 = var$9;
            var$11 = $rt_s(550);
            var$10 = var$10;
            jl_AbstractStringBuilder_insert(var$10, $offset, var$11);
            jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
            jl_AbstractStringBuilder_insert(var$10, var$9.$length0, $rt_s(551));
            var$11 = new jl_String;
            $src = var$9.$buffer;
            var$7 = $src.data;
            $length = var$9.$length0;
            var$5 = var$7.length;
            if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
                var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$11;
                $rt_throw(var$4);
            }
            var$4 = new jl_IndexOutOfBoundsException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
    }
    $src = $src.data;
    var$4 = new jl_IndexOutOfBoundsException;
    $length = $src.length;
    var$9 = new jl_StringBuilder;
    var$9.$buffer = $rt_createCharArray(16);
    var$5 = var$9.$length0;
    var$10 = var$9;
    var$14 = $rt_s(552);
    var$11 = var$10;
    jl_AbstractStringBuilder_insert(var$11, var$5, var$14);
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $offset, 10);
    jl_AbstractStringBuilder_insert(var$11, var$9.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0(var$9, var$9.$length0, $length, 10);
    $length = var$9.$length0;
    jl_AbstractStringBuilder_insertSpace(var$10, $length, $length + 1 | 0);
    var$10.$buffer.data[$length] = 41;
    var$11 = new jl_String;
    $src = var$9.$buffer;
    var$7 = $src.data;
    $length = var$9.$length0;
    var$5 = var$7.length;
    if ($length >= 0 && $length <= (var$5 - 0 | 0)) {
        var$11.$nativeString = $rt_charArrayToString($src.data, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$11;
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    $rt_throw(var$4);
},
jn_CharBuffer_put = ($this, $src, $start, $end) => {
    let $sz, var$5, var$6, var$7, var$8, var$9, var$10, $pos, $pos_0, var$13;
    if ($this.$readOnly1) {
        $src = new jn_ReadOnlyBufferException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    $sz = $end - $start | 0;
    if (($this.$limit0 - $this.$position0 | 0) < $sz) {
        $src = new jn_BufferOverflowException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    if ($start >= 0 && $start <= $src.$nativeString.length) {
        if ($end > $src.$nativeString.length) {
            var$5 = new jl_IndexOutOfBoundsException;
            $sz = $src.$nativeString.length;
            var$6 = new jl_StringBuilder;
            var$6.$buffer = $rt_createCharArray(16);
            $start = var$6.$length0;
            var$7 = var$6;
            $src = $rt_s(600);
            var$7 = var$7;
            jl_AbstractStringBuilder_insert(var$7, $start, $src);
            jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $end, 10);
            jl_AbstractStringBuilder_insert(var$7, var$6.$length0, $rt_s(601));
            jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $sz, 10);
            $src = new jl_String;
            var$8 = var$6.$buffer;
            var$9 = var$8.data;
            var$10 = var$6.$length0;
            $start = var$9.length;
            if (var$10 >= 0 && var$10 <= ($start - 0 | 0)) {
                $src.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = $src;
                $rt_throw(var$5);
            }
            $src = new jl_IndexOutOfBoundsException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $rt_throw($src);
        }
        if ($start <= $end) {
            $pos = $this.$position0;
            var$5 = $this;
            a: {
                while ($start < $end) {
                    $pos_0 = $pos + 1 | 0;
                    var$10 = $start + 1 | 0;
                    if ($start < 0)
                        break a;
                    if ($start >= $src.$nativeString.length)
                        break a;
                    var$5.$array1.data[$pos + var$5.$start3 | 0] = $src.$nativeString.charCodeAt($start);
                    $pos = $pos_0;
                    $start = var$10;
                }
                $this.$position0 = $this.$position0 + $sz | 0;
                return $this;
            }
            $src = new jl_StringIndexOutOfBoundsException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $rt_throw($src);
        }
        $src = new jl_IndexOutOfBoundsException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        var$10 = var$5.$length0;
        var$6 = var$5;
        var$7 = $rt_s(602);
        var$6 = var$6;
        jl_AbstractStringBuilder_insert(var$6, var$10, var$7);
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $start, 10);
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(603));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $end, 10);
        var$6 = new jl_String;
        var$8 = var$5.$buffer;
        var$9 = var$8.data;
        $end = var$5.$length0;
        var$10 = var$9.length;
        if ($end >= 0 && $end <= (var$10 - 0 | 0)) {
            var$6.$nativeString = $rt_charArrayToString(var$8.data, 0, $end);
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $src.$message = var$6;
            $rt_throw($src);
        }
        $src = new jl_IndexOutOfBoundsException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    var$5 = new jl_IndexOutOfBoundsException;
    $end = $src.$nativeString.length;
    $src = new jl_StringBuilder;
    $src.$buffer = $rt_createCharArray(16);
    var$10 = $src.$length0;
    var$7 = $src;
    var$6 = $rt_s(602);
    var$13 = var$7;
    jl_AbstractStringBuilder_insert(var$13, var$10, var$6);
    jl_AbstractStringBuilder_insert0($src, $src.$length0, $start, 10);
    jl_AbstractStringBuilder_insert(var$13, $src.$length0, $rt_s(546));
    jl_AbstractStringBuilder_insert0($src, $src.$length0, $end, 10);
    $end = $src.$length0;
    jl_AbstractStringBuilder_insertSpace(var$7, $end, $end + 1 | 0);
    var$7.$buffer.data[$end] = 41;
    var$6 = new jl_String;
    var$8 = $src.$buffer;
    var$9 = var$8.data;
    $end = $src.$length0;
    var$10 = var$9.length;
    if ($end >= 0 && $end <= (var$10 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$8.data, 0, $end);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$6;
        $rt_throw(var$5);
    }
    $src = new jl_IndexOutOfBoundsException;
    $src.$suppressionEnabled = 1;
    $src.$writableStackTrace = 1;
    $rt_throw($src);
};
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
let jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer),
jn_CharBufferImpl_compact = $this => {
    let var$1, var$2, $src, $sz, $i, var$6, var$7;
    var$1 = $this;
    if (var$1.$readOnly1) {
        var$1 = new jn_ReadOnlyBufferException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    a: {
        var$2 = $this.$limit0;
        $src = $this.$position0;
        $sz = var$2 - $src | 0;
        if ($src > 0) {
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$2 = $src + 1 | 0;
                var$6 = var$1.$array1.data;
                var$7 = var$1.$start3;
                $src = var$6[$src + var$7 | 0];
                var$6[$i + var$7 | 0] = $src;
                $i = $i + 1 | 0;
                $src = var$2;
            }
        }
    }
    $this.$position0 = $sz;
    $this.$limit0 = $this.$capacity;
    $this.$mark = (-1);
    return $this;
};
function jn_CharBufferOverArray() {
    let a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$start3 = 0;
    a.$array1 = null;
}
let cgxgbt_TeaFileHandle$1 = $rt_classWithoutFields(),
cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = null,
cgxgbt_TeaFileHandle$1_$callClinit = () => {
    cgxgbt_TeaFileHandle$1_$callClinit = $rt_eraseClinit(cgxgbt_TeaFileHandle$1);
    cgxgbt_TeaFileHandle$1__clinit_();
},
cgxgbt_TeaFileHandle$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbg_Files$FileType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = var$1;
    var$2[cbg_Files$FileType_Internal.$ordinal0] = 1;
    var$2[cbg_Files$FileType_Classpath.$ordinal0] = 2;
},
ji_IOException = $rt_classWithoutFields(jl_Exception),
cbgu_ScreenUtils = $rt_classWithoutFields();
function cbgg_Camera() {
    let a = this; jl_Object.call(a);
    a.$position2 = null;
    a.$direction = null;
    a.$up = null;
    a.$projection = null;
    a.$view = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$frustum = null;
    a.$tmpVec = null;
    a.$ray = null;
}
let cbgg_Camera__init_ = $this => {
    let var$1, var$2, var$3;
    var$1 = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    $this.$position2 = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x = 0.0;
    var$1.$y = 0.0;
    var$1.$z = (-1.0);
    $this.$direction = var$1;
    var$1 = new cbgm_Vector3;
    var$1.$x = 0.0;
    var$1.$y = 1.0;
    var$1.$z = 0.0;
    $this.$up = var$1;
    $this.$projection = cbgm_Matrix4__init_();
    $this.$view = cbgm_Matrix4__init_();
    $this.$combined = cbgm_Matrix4__init_();
    $this.$invProjectionView = cbgm_Matrix4__init_();
    $this.$near = 1.0;
    $this.$far = 100.0;
    $this.$viewportWidth = 0.0;
    $this.$viewportHeight = 0.0;
    $this.$frustum = cbgm_Frustum__init_0();
    $this.$tmpVec = new cbgm_Vector3;
    var$1 = new cbgmc_Ray;
    cbgmc_Ray_$callClinit();
    var$2 = new cbgm_Vector3;
    var$1.$origin = var$2;
    var$3 = new cbgm_Vector3;
    var$1.$direction0 = var$3;
    var$2.$x = 0.0;
    var$2.$y = 0.0;
    var$2.$z = 0.0;
    var$3.$x = 0.0;
    var$3.$y = 0.0;
    var$3.$z = 0.0;
    $this.$ray = var$1;
},
cgtd_Stringf = $rt_classWithoutFields(),
cgtd_Stringf_appendf = ($sb, $fmt, $args) => {
    let $len, $arg, $i, $curr, $precision, $num, var$10, var$11, var$12, $d, var$14, var$15, var$16, var$17, $length, var$19;
    $len = $fmt.$nativeString.length;
    $arg = 0;
    $i = 0;
    a: {
        b: {
            c: {
                d: {
                    e: {
                        f: {
                            g: {
                                while ($i < $len) {
                                    if ($i < 0)
                                        break f;
                                    if ($i >= $fmt.$nativeString.length)
                                        break f;
                                    h: {
                                        $curr = $fmt.$nativeString.charCodeAt($i);
                                        if ($curr != 37) {
                                            $precision = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, $precision, $precision + 1 | 0);
                                            $num.$buffer.data[$precision] = $curr;
                                            break h;
                                        }
                                        $i = $i + 1 | 0;
                                        if ($i < 0)
                                            break g;
                                        if ($i >= $fmt.$nativeString.length)
                                            break g;
                                        $precision = $fmt.$nativeString.charCodeAt($i);
                                        if ($precision == 37) {
                                            $curr = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, $curr, $curr + 1 | 0);
                                            $num.$buffer.data[$curr] = 37;
                                            break h;
                                        }
                                        if ($precision == 115) {
                                            var$10 = $args.data;
                                            $precision = $arg + 1 | 0;
                                            var$11 = var$10[$arg].$toString();
                                            $curr = $sb.$length0;
                                            jl_AbstractStringBuilder_insert($sb, $curr, var$11);
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 100) {
                                            var$10 = $args.data;
                                            $precision = $arg + 1 | 0;
                                            var$12 = Long_fromInt(var$10[$arg].$value);
                                            $curr = $sb.$length0;
                                            jl_AbstractStringBuilder_insert4($sb, $curr, var$12, 10);
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 102) {
                                            var$10 = $args.data;
                                            $precision = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            cgtd_Base_$callClinit();
                                            cgtd_RyuDouble_appendDecimal($sb, $d, (-10000), 6);
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 101) {
                                            var$10 = $args.data;
                                            $precision = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            cgtd_Base_$callClinit();
                                            var$14 = cgtd_Base_BASE10.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $arg = cgtd_RyuDouble_scientific($d, var$14, 101);
                                            var$15 = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $arg | 0);
                                            $arg = $arg + var$15 | 0;
                                            while (var$15 < $arg) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $length = var$16 + 1 | 0;
                                                $curr = var$15 + 1 | 0;
                                                var$10[var$16] = var$17[var$15];
                                                var$16 = $length;
                                                var$15 = $curr;
                                            }
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 69) {
                                            var$10 = $args.data;
                                            $precision = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            cgtd_Base_$callClinit();
                                            var$14 = cgtd_Base_BASE10.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $arg = cgtd_RyuDouble_scientific($d, var$14, 69);
                                            var$15 = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $arg | 0);
                                            $arg = $arg + var$15 | 0;
                                            while (var$15 < $arg) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $length = var$16 + 1 | 0;
                                                $curr = var$15 + 1 | 0;
                                                var$10[var$16] = var$17[var$15];
                                                var$16 = $length;
                                                var$15 = $curr;
                                            }
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 103) {
                                            var$10 = $args.data;
                                            $precision = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            cgtd_Base_$callClinit();
                                            var$14 = cgtd_Base_BASE10.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $arg = cgtd_RyuDouble_general($d, var$14, (-3), 7, 101);
                                            var$15 = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $arg | 0);
                                            $arg = $arg + var$15 | 0;
                                            while (var$15 < $arg) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $length = var$16 + 1 | 0;
                                                $curr = var$15 + 1 | 0;
                                                var$10[var$16] = var$17[var$15];
                                                var$16 = $length;
                                                var$15 = $curr;
                                            }
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 71) {
                                            var$10 = $args.data;
                                            $precision = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            cgtd_Base_$callClinit();
                                            var$14 = cgtd_Base_BASE10.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $arg = cgtd_RyuDouble_general($d, var$14, (-3), 7, 69);
                                            var$15 = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $arg | 0);
                                            $arg = $arg + var$15 | 0;
                                            while (var$15 < $arg) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $length = var$16 + 1 | 0;
                                                $curr = var$15 + 1 | 0;
                                                var$10[var$16] = var$17[var$15];
                                                var$16 = $length;
                                                var$15 = $curr;
                                            }
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 120) {
                                            var$10 = $args.data;
                                            cgtd_Base_$callClinit();
                                            $num = cgtd_Base_BASE16;
                                            $precision = $arg + 1 | 0;
                                            $num = cgtd_Base_signed($num, Long_fromInt(var$10[$arg].$value));
                                            var$11 = $num.$nativeString.toLowerCase();
                                            if (var$11 !== $num.$nativeString)
                                                $num = jl_String__init_0(var$11);
                                            $curr = $sb.$length0;
                                            jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 88) {
                                            var$10 = $args.data;
                                            cgtd_Base_$callClinit();
                                            $num = cgtd_Base_BASE16;
                                            $precision = $arg + 1 | 0;
                                            cgtd_Base_appendSigned($num, $sb, Long_fromInt(var$10[$arg].$value));
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($precision == 48) {
                                            $i = $i + 1 | 0;
                                            if ($i < 0)
                                                break d;
                                            if ($i >= $fmt.$nativeString.length)
                                                break d;
                                            $precision = $fmt.$nativeString.charCodeAt($i);
                                            if ($precision == 120) {
                                                var$10 = $args.data;
                                                cgtd_Base_$callClinit();
                                                $num = cgtd_Base_BASE16;
                                                $precision = $arg + 1 | 0;
                                                $num = cgtd_Base_unsigned($num, Long_fromInt(var$10[$arg].$value));
                                                var$11 = $num.$nativeString.toLowerCase();
                                                if (var$11 !== $num.$nativeString)
                                                    $num = jl_String__init_0(var$11);
                                                $curr = $sb.$length0;
                                                jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                                $arg = $precision;
                                                break h;
                                            }
                                            if ($precision == 88) {
                                                var$10 = $args.data;
                                                cgtd_Base_$callClinit();
                                                $num = cgtd_Base_BASE16;
                                                $precision = $arg + 1 | 0;
                                                cgtd_Base_appendUnsigned($num, $sb, Long_fromInt(var$10[$arg].$value));
                                                $arg = $precision;
                                                break h;
                                            }
                                            cgtd_Base_$callClinit();
                                            $length = cgtd_Base_readInt(cgtd_Base_BASE10, $fmt, $i, $len);
                                            while (true) {
                                                $i = $i + 1 | 0;
                                                if ($i < 0)
                                                    break a;
                                                if ($i >= $fmt.$nativeString.length)
                                                    break a;
                                                $precision = $fmt.$nativeString.charCodeAt($i);
                                                if ($precision < 48)
                                                    break;
                                                if ($precision > 57)
                                                    break;
                                            }
                                            if ($precision == 120) {
                                                var$10 = $args.data;
                                                $num = cgtd_Base_BASE16;
                                                $precision = $arg + 1 | 0;
                                                $num = cgtd_TextTools_safeSubstring(cgtd_Base_unsigned($num, Long_fromInt(var$10[$arg].$value)), 16 - $length | 0, 16);
                                                var$11 = $num.$nativeString.toLowerCase();
                                                if (var$11 !== $num.$nativeString)
                                                    $num = jl_String__init_0(var$11);
                                                $curr = $sb.$length0;
                                                jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                                $arg = $precision;
                                            } else if ($precision == 88) {
                                                var$10 = $args.data;
                                                $num = cgtd_Base_BASE16;
                                                $precision = $arg + 1 | 0;
                                                $num = cgtd_TextTools_safeSubstring(cgtd_Base_unsigned($num, Long_fromInt(var$10[$arg].$value)), 16 - $length | 0, 16);
                                                $curr = $sb.$length0;
                                                jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                                $arg = $precision;
                                            } else if ($precision == 100) {
                                                var$10 = $args.data;
                                                $num = cgtd_Base_BASE10;
                                                $precision = $arg + 1 | 0;
                                                $num = cgtd_Base_unsigned($num, Long_fromInt(var$10[$arg].$value));
                                                $num = cgtd_TextTools_safeSubstring($num, $num.$nativeString.length - $length | 0, $num.$nativeString.length);
                                                $curr = $sb.$length0;
                                                jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                                $arg = $precision;
                                            }
                                            break h;
                                        }
                                        if ($precision != 46) {
                                            if ($precision < 49)
                                                break h;
                                            if ($precision > 57)
                                                break h;
                                            cgtd_Base_$callClinit();
                                            $length = cgtd_Base_readInt(cgtd_Base_BASE10, $fmt, $i, $len);
                                            while (true) {
                                                $i = $i + 1 | 0;
                                                if ($i < 0)
                                                    break c;
                                                if ($i >= $fmt.$nativeString.length)
                                                    break c;
                                                $curr = $fmt.$nativeString.charCodeAt($i);
                                                if ($curr < 48)
                                                    break;
                                                if ($curr > 57)
                                                    break;
                                            }
                                            if ($curr == 120) {
                                                var$10 = $args.data;
                                                $num = cgtd_Base_BASE16;
                                                $precision = $arg + 1 | 0;
                                                $num = cgtd_Base_signed($num, Long_fromInt(var$10[$arg].$value));
                                                $num = cgtd_TextTools_safeSubstring($num, $num.$nativeString.length - $length | 0, $num.$nativeString.length);
                                                var$11 = $num.$nativeString.toLowerCase();
                                                if (var$11 !== $num.$nativeString)
                                                    $num = jl_String__init_0(var$11);
                                                $curr = $sb.$length0;
                                                jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                                $arg = $precision;
                                            } else if ($curr == 88) {
                                                var$10 = $args.data;
                                                $num = cgtd_Base_BASE16;
                                                $precision = $arg + 1 | 0;
                                                $num = cgtd_Base_signed($num, Long_fromInt(var$10[$arg].$value));
                                                $num = cgtd_TextTools_safeSubstring($num, $num.$nativeString.length - $length | 0, $num.$nativeString.length);
                                                $curr = $sb.$length0;
                                                jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                                $arg = $precision;
                                            } else if ($curr == 100) {
                                                var$10 = $args.data;
                                                var$11 = cgtd_Base_BASE10;
                                                $precision = $arg + 1 | 0;
                                                $num = cgtd_Base_signed(var$11, Long_fromInt(var$10[$arg].$value));
                                                $num = cgtd_TextTools_safeSubstring($num, $num.$nativeString.length - $length | 0, $num.$nativeString.length);
                                                $curr = $sb.$length0;
                                                jl_AbstractStringBuilder_insert($sb, $curr, $num);
                                                $arg = $precision;
                                            }
                                            break h;
                                        }
                                        $i = $i + 1 | 0;
                                        if ($i < 0)
                                            break e;
                                        if ($i >= $fmt.$nativeString.length)
                                            break e;
                                        $curr = $fmt.$nativeString.charCodeAt($i);
                                        if ($curr == 102) {
                                            var$10 = $args.data;
                                            cgtd_Base_$callClinit();
                                            $precision = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            cgtd_RyuDouble_$callClinit();
                                            cgtd_RyuDouble_appendDecimal($sb, $d, (-10000), (-10000));
                                            $arg = $precision;
                                            break h;
                                        }
                                        if ($curr == 101) {
                                            var$10 = $args.data;
                                            cgtd_Base_$callClinit();
                                            $num = cgtd_Base_BASE10;
                                            var$15 = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$14 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_scientific($d, var$14, 101);
                                            $length = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $curr | 0);
                                            $curr = $curr + $length | 0;
                                            while ($length < $curr) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $arg = var$16 + 1 | 0;
                                                $precision = $length + 1 | 0;
                                                var$10[var$16] = var$17[$length];
                                                var$16 = $arg;
                                                $length = $precision;
                                            }
                                            $arg = var$15;
                                            break h;
                                        }
                                        if ($curr == 69) {
                                            var$10 = $args.data;
                                            cgtd_Base_$callClinit();
                                            $num = cgtd_Base_BASE10;
                                            var$15 = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$14 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_scientific($d, var$14, 69);
                                            $length = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $curr | 0);
                                            $curr = $curr + $length | 0;
                                            while ($length < $curr) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $arg = var$16 + 1 | 0;
                                                $precision = $length + 1 | 0;
                                                var$10[var$16] = var$17[$length];
                                                var$16 = $arg;
                                                $length = $precision;
                                            }
                                            $arg = var$15;
                                            break h;
                                        }
                                        if ($curr == 103) {
                                            var$10 = $args.data;
                                            cgtd_Base_$callClinit();
                                            $num = cgtd_Base_BASE10;
                                            $length = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$17 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_general($d, var$17, (-3), 7, 101);
                                            var$15 = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $curr | 0);
                                            $curr = $curr + var$15 | 0;
                                            while (var$15 < $curr) {
                                                var$14 = var$17.data;
                                                var$10 = $num.$buffer.data;
                                                $arg = var$16 + 1 | 0;
                                                $precision = var$15 + 1 | 0;
                                                var$10[var$16] = var$14[var$15];
                                                var$16 = $arg;
                                                var$15 = $precision;
                                            }
                                            $arg = $length;
                                            break h;
                                        }
                                        if ($curr == 71) {
                                            var$10 = $args.data;
                                            cgtd_Base_$callClinit();
                                            $num = cgtd_Base_BASE10;
                                            var$15 = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$14 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_general($d, var$14, (-3), 7, 69);
                                            var$16 = 0;
                                            var$19 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$19, var$19 + $curr | 0);
                                            $curr = $curr + var$16 | 0;
                                            while (var$16 < $curr) {
                                                var$10 = var$14.data;
                                                var$17 = $num.$buffer.data;
                                                $arg = var$19 + 1 | 0;
                                                $length = var$16 + 1 | 0;
                                                var$17[var$19] = var$10[var$16];
                                                var$19 = $arg;
                                                var$16 = $length;
                                            }
                                            $arg = var$15;
                                            break h;
                                        }
                                        cgtd_Base_$callClinit();
                                        $precision = cgtd_Base_readInt(cgtd_Base_BASE10, $fmt, $i, $len);
                                        while (true) {
                                            $i = $i + 1 | 0;
                                            if ($i < 0)
                                                break b;
                                            if ($i >= $fmt.$nativeString.length)
                                                break b;
                                            $length = $fmt.$nativeString.charCodeAt($i);
                                            if ($length < 48)
                                                break;
                                            if ($length > 57)
                                                break;
                                        }
                                        if ($length == 102) {
                                            var$10 = $args.data;
                                            var$15 = $arg + 1 | 0;
                                            cgtd_RyuDouble_appendDecimal($sb, var$10[$arg].$value, (-10000), $precision);
                                        } else if ($length == 101) {
                                            var$10 = $args.data;
                                            $num = cgtd_Base_BASE10;
                                            var$15 = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$14 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_scientific($d, var$14, 101);
                                            $length = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $curr | 0);
                                            $curr = $curr + $length | 0;
                                            while ($length < $curr) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $arg = var$16 + 1 | 0;
                                                $precision = $length + 1 | 0;
                                                var$10[var$16] = var$17[$length];
                                                var$16 = $arg;
                                                $length = $precision;
                                            }
                                        } else if ($length == 69) {
                                            var$10 = $args.data;
                                            $num = cgtd_Base_BASE10;
                                            var$15 = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$14 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_scientific($d, var$14, 69);
                                            $length = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $curr | 0);
                                            $curr = $curr + $length | 0;
                                            while ($length < $curr) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $arg = var$16 + 1 | 0;
                                                $precision = $length + 1 | 0;
                                                var$10[var$16] = var$17[$length];
                                                var$16 = $arg;
                                                $length = $precision;
                                            }
                                        } else if ($length == 103) {
                                            var$10 = $args.data;
                                            $num = cgtd_Base_BASE10;
                                            var$15 = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$14 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_general($d, var$14, (-3), 7, 101);
                                            $length = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $curr | 0);
                                            $curr = $curr + $length | 0;
                                            while ($length < $curr) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $arg = var$16 + 1 | 0;
                                                $precision = $length + 1 | 0;
                                                var$10[var$16] = var$17[$length];
                                                var$16 = $arg;
                                                $length = $precision;
                                            }
                                        } else if ($length != 71)
                                            var$15 = $arg;
                                        else {
                                            var$10 = $args.data;
                                            $num = cgtd_Base_BASE10;
                                            var$15 = $arg + 1 | 0;
                                            $d = var$10[$arg].$value;
                                            var$14 = $num.$progress;
                                            cgtd_RyuDouble_$callClinit();
                                            $curr = cgtd_RyuDouble_general($d, var$14, (-3), 7, 69);
                                            $length = 0;
                                            var$16 = $sb.$length0;
                                            $num = $sb;
                                            jl_AbstractStringBuilder_insertSpace($num, var$16, var$16 + $curr | 0);
                                            $curr = $curr + $length | 0;
                                            while ($length < $curr) {
                                                var$17 = var$14.data;
                                                var$10 = $num.$buffer.data;
                                                $arg = var$16 + 1 | 0;
                                                $precision = $length + 1 | 0;
                                                var$10[var$16] = var$17[$length];
                                                var$16 = $arg;
                                                $length = $precision;
                                            }
                                        }
                                        $arg = var$15;
                                    }
                                    $i = $i + 1 | 0;
                                }
                                return $sb;
                            }
                            $sb = new jl_StringIndexOutOfBoundsException;
                            $sb.$suppressionEnabled = 1;
                            $sb.$writableStackTrace = 1;
                            $rt_throw($sb);
                        }
                        $sb = new jl_StringIndexOutOfBoundsException;
                        $sb.$suppressionEnabled = 1;
                        $sb.$writableStackTrace = 1;
                        $rt_throw($sb);
                    }
                    $sb = new jl_StringIndexOutOfBoundsException;
                    $sb.$suppressionEnabled = 1;
                    $sb.$writableStackTrace = 1;
                    $rt_throw($sb);
                }
                $sb = new jl_StringIndexOutOfBoundsException;
                $sb.$suppressionEnabled = 1;
                $sb.$writableStackTrace = 1;
                $rt_throw($sb);
            }
            $sb = new jl_StringIndexOutOfBoundsException;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $rt_throw($sb);
        }
        $sb = new jl_StringIndexOutOfBoundsException;
        $sb.$suppressionEnabled = 1;
        $sb.$writableStackTrace = 1;
        $rt_throw($sb);
    }
    $sb = new jl_StringIndexOutOfBoundsException;
    $sb.$suppressionEnabled = 1;
    $sb.$writableStackTrace = 1;
    $rt_throw($sb);
};
function jnci_BufferedDecoder() {
    let a = this; jnc_CharsetDecoder.call(a);
    a.$inArray = null;
    a.$outArray = null;
}
let jnci_BufferedDecoder_decodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, var$7, $outSize, var$9, $i, var$11, $outSize_0, $result, $controller;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    var$7 = $this;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize) {
                $outSize = $in.$position0;
                var$9 = $in.$limit0;
                if ($outSize >= var$9 ? 0 : 1) {
                    $i = $inPos;
                    while ($i < $inSize) {
                        var$11 = $inArray.data;
                        var$11[$i - $inPos | 0] = var$11[$i];
                        $i = $i + 1 | 0;
                    }
                    var$11 = $inArray.data;
                    $i = $inSize - $inPos | 0;
                    $outSize_0 = (var$9 - $outSize | 0) + $i | 0;
                    $inSize = var$11.length;
                    if ($outSize_0 < $inSize)
                        $inSize = $outSize_0;
                    jn_ByteBuffer_get($in, $inArray, $i, $inSize - $i | 0);
                    $inPos = 0;
                }
            }
            $i = $out.$position0;
            $outSize_0 = $out.$limit0;
            if (!($i >= $outSize_0 ? 0 : 1)) {
                $i = $in.$position0 >= $in.$limit0 ? 0 : 1;
                $result = !$i && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$11 = $outArray.data;
            $outSize_0 = $outSize_0 - $i | 0;
            $outSize = var$11.length;
            if ($outSize_0 < $outSize)
                $outSize = $outSize_0;
            $controller = new jnci_BufferedDecoder$Controller;
            $controller.$in = $in;
            $controller.$out1 = $out;
            $result = jnci_UTF8Decoder_arrayDecode(var$7, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if ($result === null && 0 == $controller.$outPosition)
                $result = jnc_CoderResult_UNDERFLOW;
            jn_CharBuffer_put0($out, $outArray, 0, $controller.$outPosition);
            if ($result !== null)
                break;
        }
    }
    jn_Buffer_position($in, $in.$position0 - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_UTF8Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, $b2, $b, $b2_0, var$13, $code, $b3, $b4, $c;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    $b2 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if ($b2 >= $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            var$13 = $controller.$in;
                            if ((var$13.$limit0 - var$13.$position0 | 0) < 2 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2 = var$9[$b2];
                        if (!(($b2 & 192) != 128 ? 0 : 1)) {
                            $inPos = $inPos + (-2) | 0;
                            $result = new jnc_CoderResult;
                            $result.$kind = 2;
                            $result.$length3 = 1;
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        $b2 = $inPos;
                    } else if (($b & 240) != 224) {
                        if (($b & 248) != 240) {
                            $inPos = $b2 + (-1) | 0;
                            $result = new jnc_CoderResult;
                            $result.$kind = 2;
                            $result.$length3 = 1;
                            break a;
                        }
                        if (($b2 + 3 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            var$13 = $controller.$in;
                            if ((var$13.$limit0 - var$13.$position0 | 0) < 4 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = $b2 + (-1) | 0;
                            var$13 = $controller.$out1;
                            if ((var$13.$limit0 - var$13.$position0 | 0) < 2 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2_0 = var$9[$b2];
                        $code = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        $b2 = $code + 1 | 0;
                        $b4 = var$9[$code];
                        if (!(($b2_0 & 192) != 128 ? 0 : 1))
                            break c;
                        if (!(($b3 & 192) != 128 ? 0 : 1))
                            break c;
                        if (!(($b4 & 192) != 128 ? 0 : 1))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2_0 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        $inPos = $outPos + 1 | 0;
                        var$9[$outPos] = (55296 | ($code - 65536 | 0) >> 10 & 1023) & 65535;
                        $b2_0 = $inPos + 1 | 0;
                        var$9[$inPos] = (56320 | $code & 1023) & 65535;
                    } else {
                        if (($b2 + 2 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            var$13 = $controller.$in;
                            if ((var$13.$limit0 - var$13.$position0 | 0) < 3 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2_0 = var$9[$b2];
                        $b2 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        if (!(($b2_0 & 192) != 128 ? 0 : 1))
                            break b;
                        if (!(($b3 & 192) != 128 ? 0 : 1))
                            break b;
                        $c = (($b & 15) << 12 | ($b2_0 & 63) << 6 | $b3 & 63) & 65535;
                        $code = $c & 64512;
                        $inPos = $code != 55296 ? 0 : 1;
                        if (!$inPos && !($code != 56320 ? 0 : 1) ? 0 : 1) {
                            $inPos = $b2 + (-3) | 0;
                            $result = new jnc_CoderResult;
                            $result.$kind = 2;
                            $result.$length3 = 3;
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    }
                    $inPos = $b2;
                    $outPos = $b2_0;
                }
                break a;
            }
            $inPos = $b2 + (-3) | 0;
            $result = new jnc_CoderResult;
            $result.$kind = 2;
            $result.$length3 = 1;
            break a;
        }
        $inPos = $b2 + (-3) | 0;
        $result = new jnc_CoderResult;
        $result.$kind = 2;
        $result.$length3 = 1;
    }
    $controller.$inPosition0 = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
},
ji_Externalizable = $rt_classWithoutFields(0),
cgtr_EnhancedRandom = $rt_classWithoutFields(ju_Random),
cgtr_EnhancedRandom_nextLong = ($this, $inner, $outer) => {
    let $rand, $bound, $randLow, $boundLow, $randHigh, $boundHigh;
    $rand = $this.$nextLong();
    if (Long_ge($inner, $outer))
        return $inner;
    $bound = Long_sub($outer, $inner);
    $randLow = Long_and($rand, Long_create(4294967295, 0));
    $boundLow = Long_and($bound, Long_create(4294967295, 0));
    $randHigh = Long_shru($rand, 32);
    $boundHigh = Long_shru($bound, 32);
    return Long_add(Long_add(Long_add($inner, Long_shru(Long_mul($randHigh, $boundLow), 32)), Long_shru(Long_mul($randLow, $boundHigh), 32)), Long_mul($randHigh, $boundHigh));
};
function cgt_RandomRandom() {
    cgtr_EnhancedRandom.call(this);
    this.$base = null;
}
let cgt_RandomRandom_nextLong = $this => {
    let var$1;
    var$1 = $this.$base;
    return Long_add(Long_shl(Long_fromNumber(cgt_Random_nextInternal(var$1, 32)), 32), Long_fromNumber(cgt_Random_nextInternal(var$1, 32)));
};
function cbguv_Viewport() {
    let a = this; jl_Object.call(a);
    a.$camera = null;
    a.$worldWidth = 0.0;
    a.$worldHeight = 0.0;
    a.$screenX = 0;
    a.$screenY = 0;
    a.$screenWidth = 0;
    a.$screenHeight = 0;
    a.$tmp = null;
}
let cbguv_Viewport_apply = ($this, $centerCamera) => {
    let var$2, var$3, var$4, var$5;
    cbggg_HdpiUtils_glViewport($this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight);
    var$2 = $this.$camera;
    var$3 = $this.$worldWidth;
    var$2.$viewportWidth = var$3;
    var$4 = $this.$worldHeight;
    var$2.$viewportHeight = var$4;
    if ($centerCamera) {
        var$5 = var$2.$position2;
        var$3 = var$3 / 2.0;
        var$4 = var$4 / 2.0;
        var$5.$x = var$3;
        var$5.$y = var$4;
        var$5.$z = 0.0;
    }
    cbgg_OrthographicCamera_update(var$2, 1);
};
function cbguv_ScreenViewport() {
    cbguv_Viewport.call(this);
    this.$unitsPerPixel = 0.0;
}
let cbggg_ImmediateModeRenderer = $rt_classWithoutFields(0);
function cbggg_ImmediateModeRenderer20() {
    let a = this; jl_Object.call(a);
    a.$primitiveType = 0;
    a.$vertexIdx = 0;
    a.$numSetTexCoords = 0;
    a.$maxVertices = 0;
    a.$numVertices = 0;
    a.$mesh = null;
    a.$shader0 = null;
    a.$ownsShader = 0;
    a.$numTexCoords = 0;
    a.$vertexSize0 = 0;
    a.$normalOffset = 0;
    a.$colorOffset = 0;
    a.$texCoordOffset = 0;
    a.$projModelView = null;
    a.$vertices = null;
    a.$shaderUniformNames = null;
}
let cbggg_ImmediateModeRenderer20__init_ = ($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, $shader) => {
    let $attribs, var$7, var$8, var$9, var$10, $i, var$12, var$13, var$14, var$15, var$16;
    $this.$projModelView = cbgm_Matrix4__init_();
    $this.$maxVertices = $maxVertices;
    $this.$numTexCoords = $numTexCoords;
    $this.$shader0 = $shader;
    $attribs = cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColors, $numTexCoords);
    var$7 = new cbgg_Mesh;
    var$7.$autoBind = 1;
    var$7.$isInstanced = 0;
    $shader = new cbgm_Vector3;
    cbgm_Vector3_$callClinit();
    var$7.$tmpV = $shader;
    $shader = cbgg_VertexAttributes__init_($attribs);
    var$7.$vertices0 = cbg_Gdx_gl30 === null ? cbggg_VertexBufferObject__init_(0, $maxVertices, $shader) : cbggg_VertexBufferObjectWithVAO__init_(0, $maxVertices, $shader);
    $shader = new cbggg_IndexBufferObject;
    $shader.$isDirty = 1;
    $shader.$isBound = 0;
    $shader.$isDirect = 1;
    if (!cgxgbt_TeaTool_isProd) {
        $attribs = $rt_createShortArray(0);
        $hasColors = $attribs.data.length;
        var$8 = new jn_ShortBufferOverArray;
        var$9 = 0 + $hasColors | 0;
        jn_Buffer__init_(var$8, $hasColors);
        var$8.$position0 = 0;
        var$8.$limit0 = var$9;
        var$8.$start7 = 0;
        var$8.$readOnly4 = 0;
        var$8.$array5 = $attribs;
    } else {
        var$10 = new jn_ByteBufferImpl;
        $attribs = $rt_createByteArray(0).data;
        jl_Object__init_(var$10);
        var$10.$mark = (-1);
        var$10.$capacity = 0;
        var$10.$limit0 = 0;
        var$10.$order = jn_ByteOrder_BIG_ENDIAN;
        var$10.$start0 = 0;
        $i = $attribs.length;
        var$10.$bkArray = $rt_createByteArray($i);
        var$8 = new cgxgbtdt_Int8ArrayNative;
        jl_Object__init_(var$8);
        var$8.$buffer0 = new Int8Array($i);
        var$10.$array = var$8;
        var$12 = 0;
        while (var$12 < $i) {
            var$13 = $attribs[var$12];
            cgxgbtdt_Int8ArrayNative_set(var$10.$array, var$12, var$13);
            var$12 = var$12 + 1 | 0;
        }
        var$10.$position0 = 0;
        var$10.$limit0 = 0;
        var$10.$direct = 1;
        var$10.$readOnly0 = 0;
        var$10.$order = jn_ByteOrder_nativeOrder();
        var$8 = jn_ByteBufferImpl_asShortBuffer(var$10);
    }
    $shader.$buffer3 = var$8;
    var$8.$limit0 = var$8.$position0;
    var$8.$position0 = 0;
    var$8.$mark = (-1);
    var$8 = cbg_Gdx_gl20;
    var$10 = var$8.$gl.createBuffer();
    $shader.$bufferHandle = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4(var$8.$buffers, var$10);
    $shader.$usage0 = 35048;
    var$7.$indices = $shader;
    var$7.$isVertexArray = 0;
    $shader = cbg_Gdx_app;
    var$8 = cbgg_Mesh_meshes;
    if ($shader === null) {
        var$8 = var$8.$elementData.data[0];
        while (var$8 !== null && var$8.$key !== null) {
            var$8 = var$8.$next1;
        }
    } else {
        var$14 = $shader;
        var$10 = var$14;
        if (!var$10.$id$)
            var$10.$id$ = $rt_nextId();
        $i = var$14.$id$;
        $attribs = var$8.$elementData.data;
        var$8 = $attribs[$i & ($attribs.length - 1 | 0)];
        while (var$8 !== null) {
            if (var$8.$origKeyHash == $i) {
                var$10 = var$8.$key;
                if ($shader !== var$10 && !(var$14 !== var$10 ? 0 : 1) ? 0 : 1)
                    break;
            }
            var$8 = var$8.$next1;
        }
    }
    var$8 = var$8 === null ? null : var$8.$value0;
    if (var$8 === null) {
        var$8 = new cbgu_Array;
        var$8.$ordered = 1;
        var$8.$items = $rt_createArray(jl_Object, 16);
    }
    cbgu_Array_add(var$8, var$7);
    ju_HashMap_putImpl(cbgg_Mesh_meshes, $shader, var$8);
    $this.$mesh = var$7;
    $this.$vertices = $rt_createFloatArray($rt_imul($maxVertices, (var$7.$vertices0.$getAttributes()).$vertexSize / 4 | 0));
    $this.$vertexSize0 = ($this.$mesh.$vertices0.$getAttributes()).$vertexSize / 4 | 0;
    $attribs = ($this.$mesh.$vertices0.$getAttributes()).$attributes.data;
    $i = $attribs.length;
    $hasNormals = 0;
    a: {
        while ($hasNormals < $i) {
            if ($attribs[$hasNormals].$usage == 8) {
                $shader = $attribs[$hasNormals];
                break a;
            }
            $hasNormals = $hasNormals + 1 | 0;
        }
        $shader = null;
    }
    if ($shader === null)
        $maxVertices = 0;
    else {
        $attribs = ($this.$mesh.$vertices0.$getAttributes()).$attributes.data;
        $i = $attribs.length;
        $hasNormals = 0;
        b: {
            while ($hasNormals < $i) {
                if ($attribs[$hasNormals].$usage == 8) {
                    $shader = $attribs[$hasNormals];
                    break b;
                }
                $hasNormals = $hasNormals + 1 | 0;
            }
            $shader = null;
        }
        $maxVertices = $shader.$offset / 4 | 0;
    }
    $this.$normalOffset = $maxVertices;
    $attribs = ($this.$mesh.$vertices0.$getAttributes()).$attributes.data;
    $i = $attribs.length;
    $hasNormals = 0;
    c: {
        while ($hasNormals < $i) {
            if ($attribs[$hasNormals].$usage == 4) {
                $shader = $attribs[$hasNormals];
                break c;
            }
            $hasNormals = $hasNormals + 1 | 0;
        }
        $shader = null;
    }
    if ($shader === null)
        $maxVertices = 0;
    else {
        $attribs = ($this.$mesh.$vertices0.$getAttributes()).$attributes.data;
        $i = $attribs.length;
        $hasNormals = 0;
        d: {
            while ($hasNormals < $i) {
                if ($attribs[$hasNormals].$usage == 4) {
                    $shader = $attribs[$hasNormals];
                    break d;
                }
                $hasNormals = $hasNormals + 1 | 0;
            }
            $shader = null;
        }
        $maxVertices = $shader.$offset / 4 | 0;
    }
    $this.$colorOffset = $maxVertices;
    $attribs = ($this.$mesh.$vertices0.$getAttributes()).$attributes.data;
    $i = $attribs.length;
    $hasNormals = 0;
    e: {
        while ($hasNormals < $i) {
            if ($attribs[$hasNormals].$usage == 16) {
                $shader = $attribs[$hasNormals];
                break e;
            }
            $hasNormals = $hasNormals + 1 | 0;
        }
        $shader = null;
    }
    if ($shader === null)
        $maxVertices = 0;
    else {
        $attribs = ($this.$mesh.$vertices0.$getAttributes()).$attributes.data;
        $i = $attribs.length;
        $hasNormals = 0;
        f: {
            while ($hasNormals < $i) {
                if ($attribs[$hasNormals].$usage == 16) {
                    $shader = $attribs[$hasNormals];
                    break f;
                }
                $hasNormals = $hasNormals + 1 | 0;
            }
            $shader = null;
        }
        $maxVertices = $shader.$offset / 4 | 0;
    }
    $this.$texCoordOffset = $maxVertices;
    $this.$shaderUniformNames = $rt_createArray(jl_String, $numTexCoords);
    $i = 0;
    g: {
        while ($i < $numTexCoords) {
            $attribs = $this.$shaderUniformNames;
            var$8 = new jl_StringBuilder;
            var$8.$buffer = $rt_createCharArray(16);
            $maxVertices = var$8.$length0;
            jl_AbstractStringBuilder_insert(var$8, $maxVertices, $rt_s(604));
            jl_AbstractStringBuilder_insert0(var$8, var$8.$length0, $i, 10);
            $shader = new jl_String;
            var$15 = var$8.$buffer;
            var$16 = var$15.data;
            $hasNormals = var$8.$length0;
            $hasColors = var$16.length;
            if ($hasNormals < 0)
                break g;
            if ($hasNormals > ($hasColors - 0 | 0))
                break g;
            $attribs = $attribs.data;
            $shader.$nativeString = $rt_charArrayToString(var$15.data, 0, $hasNormals);
            $attribs[$i] = $shader;
            $i = $i + 1 | 0;
        }
        return;
    }
    $shader = new jl_IndexOutOfBoundsException;
    $shader.$suppressionEnabled = 1;
    $shader.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($shader);
    $rt_throw($shader);
},
cbggg_ImmediateModeRenderer20__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggg_ImmediateModeRenderer20();
    cbggg_ImmediateModeRenderer20__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggg_ImmediateModeRenderer20_buildVertexAttributes = ($this, $hasNormals, $hasColor, $numTexCoords) => {
    let $attribs, var$5, var$6, $i, $array, var$9, var$10, var$11, var$12, var$13, var$14;
    $attribs = new cbgu_Array;
    $attribs.$ordered = 1;
    $attribs.$items = $rt_createArray(jl_Object, 16);
    var$5 = new cbgg_VertexAttribute;
    var$5.$usage = 1;
    var$5.$numComponents = 3;
    var$5.$type2 = 5126;
    var$5.$normalized = 0;
    var$5.$alias = $rt_s(474);
    var$5.$unit = 0;
    var$5.$usageIndex = jl_Integer_numberOfTrailingZeros(1);
    cbgu_Array_add($attribs, var$5);
    if ($hasNormals) {
        var$6 = new cbgg_VertexAttribute;
        var$6.$usage = 8;
        var$6.$numComponents = 3;
        var$6.$type2 = 5126;
        var$6.$normalized = 0;
        var$6.$alias = $rt_s(605);
        var$6.$unit = 0;
        var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(8);
        cbgu_Array_add($attribs, var$6);
    }
    if ($hasColor) {
        var$6 = new cbgg_VertexAttribute;
        var$6.$usage = 4;
        var$6.$numComponents = 4;
        var$6.$type2 = 5121;
        var$6.$normalized = 1;
        var$6.$alias = $rt_s(475);
        var$6.$unit = 0;
        var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(4);
        cbgu_Array_add($attribs, var$6);
    }
    $i = 0;
    while (true) {
        if ($i >= $numTexCoords) {
            $hasNormals = $attribs.$size;
            $array = $rt_createArray(cbgg_VertexAttribute, $hasNormals);
            var$9 = $array.data;
            $i = 0;
            while (true) {
                $hasColor = $rt_compare($i, $hasNormals);
                if ($hasColor >= 0)
                    break;
                if ($hasColor >= 0) {
                    var$5 = new jl_IndexOutOfBoundsException;
                    var$6 = new jl_StringBuilder;
                    var$6.$buffer = $rt_createCharArray(16);
                    $hasNormals = var$6.$length0;
                    var$10 = var$6;
                    jl_AbstractStringBuilder_insert(var$10, $hasNormals, $rt_s(31));
                    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $i, 10);
                    jl_AbstractStringBuilder_insert(var$10, var$6.$length0, $rt_s(32));
                    $hasNormals = $attribs.$size;
                    jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $hasNormals, 10);
                    $attribs = new jl_String;
                    $array = var$6.$buffer;
                    var$9 = $array.data;
                    $hasColor = var$6.$length0;
                    $numTexCoords = var$9.length;
                    if ($hasColor >= 0 && $hasColor <= ($numTexCoords - 0 | 0)) {
                        $attribs.$nativeString = $rt_charArrayToString($array.data, 0, $hasColor);
                        var$5.$suppressionEnabled = 1;
                        var$5.$writableStackTrace = 1;
                        var$5.$message = $attribs;
                        $rt_throw(var$5);
                    }
                    $attribs = new jl_IndexOutOfBoundsException;
                    jl_Throwable__init_($attribs);
                    $rt_throw($attribs);
                }
                var$9[$i] = $attribs.$items.data[$i];
                $i = $i + 1 | 0;
            }
            return $array;
        }
        var$6 = new cbgg_VertexAttribute;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        var$11 = var$5.$length0;
        jl_AbstractStringBuilder_insert(var$5, var$11, $rt_s(606));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $i, 10);
        var$12 = new jl_String;
        $array = var$5.$buffer;
        var$9 = $array.data;
        var$13 = var$5.$length0;
        var$14 = var$9.length;
        if (var$13 < 0)
            break;
        if (var$13 > (var$14 - 0 | 0))
            break;
        var$12.$nativeString = $rt_charArrayToString($array.data, 0, var$13);
        var$6.$usage = 16;
        var$6.$numComponents = 2;
        var$6.$type2 = 5126;
        var$6.$normalized = 0;
        var$6.$alias = var$12;
        var$6.$unit = 0;
        var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(16);
        cbgu_Array_add($attribs, var$6);
        $i = $i + 1 | 0;
    }
    $attribs = new jl_IndexOutOfBoundsException;
    $attribs.$suppressionEnabled = 1;
    $attribs.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($attribs);
    $rt_throw($attribs);
},
cbggg_ImmediateModeRenderer20_vertex = ($this, $x, $y, $z) => {
    let $idx, var$5;
    $idx = $this.$vertexIdx;
    var$5 = $this.$vertices.data;
    var$5[$idx] = $x;
    var$5[$idx + 1 | 0] = $y;
    var$5[$idx + 2 | 0] = $z;
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = $idx + $this.$vertexSize0 | 0;
    $this.$numVertices = $this.$numVertices + 1 | 0;
},
cbggg_ImmediateModeRenderer20_flush = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, $i, var$9;
    if (!$this.$numVertices)
        return;
    var$1 = $this.$shader0;
    var$2 = cbg_Gdx_gl20;
    if (var$1.$invalidated) {
        cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
        var$1.$invalidated = 0;
    }
    var$2.$glUseProgram(var$1.$program);
    var$2 = $this.$shader0;
    var$3 = $this.$projModelView;
    cbggg_ShaderProgram_$callClinit();
    var$4 = cbggg_ShaderProgram_fetchUniformLocation(var$2, $rt_s(607), cbggg_ShaderProgram_pedantic);
    var$1 = cbg_Gdx_gl20;
    if (var$2.$invalidated) {
        cbggg_ShaderProgram_compileShaders(var$2, var$2.$vertexShaderSource, var$2.$fragmentShaderSource);
        var$2.$invalidated = 0;
    }
    var$5 = var$3.$val;
    var$1 = var$1;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(var$1.$uniforms, var$1.$currProgram), var$4);
    var$1 = var$1.$gl;
    var$2 = "uniformMatrix4fv";
    var$3 = !!0;
    if (var$5 === null)
        var$7 = null;
    else {
        var$5 = var$5.data;
        $i = var$5.length;
        var$7 = new Array($i);
        var$9 = 0;
        while (var$9 < $i) {
            var$7[var$9] = var$5[var$9];
            var$9 = var$9 + 1 | 0;
        }
    }
    var$1[var$2](var$6, var$3, var$7);
    $i = 0;
    while ($i < $this.$numTexCoords) {
        var$1 = $this.$shader0;
        var$2 = $this.$shaderUniformNames.data[$i];
        var$3 = cbg_Gdx_gl20;
        if (var$1.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
            var$1.$invalidated = 0;
        }
        var$3.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation(var$1, var$2, cbggg_ShaderProgram_pedantic), $i);
        $i = $i + 1 | 0;
    }
    var$1 = $this.$mesh;
    var$5 = $this.$vertices;
    var$9 = $this.$vertexIdx;
    var$1.$vertices0.$setVertices(var$5, 0, var$9);
    var$1 = $this.$mesh;
    cbgg_Mesh_render(var$1, $this.$shader0, $this.$primitiveType, 0, var$1.$indices.$getNumMaxIndices() <= 0 ? var$1.$vertices0.$getNumVertices() : var$1.$indices.$getNumIndices(), var$1.$autoBind);
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = 0;
    $this.$numVertices = 0;
},
cbggg_ImmediateModeRenderer20_createVertexShader = ($hasNormals, $hasColors, $numTexCoords) => {
    let var$4, $i, var$6, var$7, var$8, var$9, var$10, var$11;
    var$4 = new jl_StringBuilder;
    var$4.$buffer = $rt_createCharArray(16);
    $i = var$4.$length0;
    var$6 = var$4;
    jl_AbstractStringBuilder_insert(var$6, $i, $rt_s(608));
    var$7 = !$hasNormals ? $rt_s(40) : $rt_s(609);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$7);
    var$7 = !$hasColors ? $rt_s(40) : $rt_s(610);
    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$7);
    var$7 = new jl_String;
    var$8 = var$4.$buffer;
    var$9 = var$8.data;
    $i = var$4.$length0;
    var$10 = var$9.length;
    if ($i >= 0 && $i <= (var$10 - 0 | 0)) {
        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $i);
        $i = 0;
        while (true) {
            if ($i >= $numTexCoords) {
                var$4 = new jl_StringBuilder;
                var$4.$buffer = $rt_createCharArray(16);
                $hasNormals = var$4.$length0;
                var$6 = var$4;
                jl_AbstractStringBuilder_insert(var$6, $hasNormals, var$7);
                jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(611));
                var$7 = !$hasColors ? $rt_s(40) : $rt_s(612);
                jl_AbstractStringBuilder_insert(var$6, var$4.$length0, var$7);
                var$7 = new jl_String;
                var$8 = var$4.$buffer;
                var$9 = var$8.data;
                $i = var$4.$length0;
                var$10 = var$9.length;
                if ($i >= 0 && $i <= (var$10 - 0 | 0)) {
                    var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $i);
                    $i = 0;
                    while (true) {
                        if ($i >= $numTexCoords) {
                            var$4 = new jl_StringBuilder;
                            var$4.$buffer = $rt_createCharArray(16);
                            $hasNormals = var$4.$length0;
                            var$6 = var$4;
                            jl_AbstractStringBuilder_insert(var$6, $hasNormals, var$7);
                            jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(613));
                            var$7 = new jl_String;
                            var$8 = var$4.$buffer;
                            var$9 = var$8.data;
                            $i = var$4.$length0;
                            var$10 = var$9.length;
                            if ($i >= 0 && $i <= (var$10 - 0 | 0)) {
                                var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $i);
                                if ($hasColors) {
                                    var$4 = new jl_StringBuilder;
                                    var$4.$buffer = $rt_createCharArray(16);
                                    $hasNormals = var$4.$length0;
                                    var$6 = var$4;
                                    jl_AbstractStringBuilder_insert(var$6, $hasNormals, var$7);
                                    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(614));
                                    var$7 = new jl_String;
                                    var$8 = var$4.$buffer;
                                    var$9 = var$8.data;
                                    $hasColors = var$4.$length0;
                                    $i = var$9.length;
                                    if ($hasColors >= 0 && $hasColors <= ($i - 0 | 0))
                                        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $hasColors);
                                    else {
                                        var$4 = new jl_IndexOutOfBoundsException;
                                        var$4.$suppressionEnabled = 1;
                                        var$4.$writableStackTrace = 1;
                                        jl_Throwable_fillInStackTrace(var$4);
                                        $rt_throw(var$4);
                                    }
                                }
                                $i = 0;
                                while (true) {
                                    if ($i >= $numTexCoords) {
                                        var$4 = new jl_StringBuilder;
                                        var$4.$buffer = $rt_createCharArray(16);
                                        $hasNormals = var$4.$length0;
                                        var$6 = var$4;
                                        jl_AbstractStringBuilder_insert(var$6, $hasNormals, var$7);
                                        jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(615));
                                        var$7 = new jl_String;
                                        var$8 = var$4.$buffer;
                                        var$9 = var$8.data;
                                        $hasColors = var$4.$length0;
                                        $numTexCoords = var$9.length;
                                        if ($hasColors >= 0 && $hasColors <= ($numTexCoords - 0 | 0)) {
                                            var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $hasColors);
                                            return var$7;
                                        }
                                        var$4 = new jl_IndexOutOfBoundsException;
                                        var$4.$suppressionEnabled = 1;
                                        var$4.$writableStackTrace = 1;
                                        jl_Throwable_fillInStackTrace(var$4);
                                        $rt_throw(var$4);
                                    }
                                    var$4 = new jl_StringBuilder;
                                    var$4.$buffer = $rt_createCharArray(16);
                                    $hasNormals = var$4.$length0;
                                    var$6 = var$4;
                                    jl_AbstractStringBuilder_insert(var$6, $hasNormals, var$7);
                                    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(616));
                                    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $i, 10);
                                    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(617));
                                    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(606));
                                    jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $i, 10);
                                    jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(618));
                                    var$7 = new jl_String;
                                    var$8 = var$4.$buffer;
                                    var$9 = var$8.data;
                                    $hasColors = var$4.$length0;
                                    var$10 = var$9.length;
                                    if ($hasColors < 0)
                                        break;
                                    if ($hasColors > (var$10 - 0 | 0))
                                        break;
                                    var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, $hasColors);
                                    $i = $i + 1 | 0;
                                }
                                var$4 = new jl_IndexOutOfBoundsException;
                                var$4.$suppressionEnabled = 1;
                                var$4.$writableStackTrace = 1;
                                jl_Throwable_fillInStackTrace(var$4);
                                $rt_throw(var$4);
                            }
                            var$4 = new jl_IndexOutOfBoundsException;
                            var$4.$suppressionEnabled = 1;
                            var$4.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace(var$4);
                            $rt_throw(var$4);
                        }
                        var$4 = new jl_StringBuilder;
                        var$4.$buffer = $rt_createCharArray(16);
                        $hasNormals = var$4.$length0;
                        var$6 = var$4;
                        jl_AbstractStringBuilder_insert(var$6, $hasNormals, var$7);
                        jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(619));
                        jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $i, 10);
                        jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(618));
                        var$7 = new jl_String;
                        var$8 = var$4.$buffer;
                        var$9 = var$8.data;
                        var$11 = var$4.$length0;
                        $hasNormals = var$9.length;
                        if (var$11 < 0)
                            break;
                        if (var$11 > ($hasNormals - 0 | 0))
                            break;
                        var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$11);
                        $i = $i + 1 | 0;
                    }
                    var$4 = new jl_IndexOutOfBoundsException;
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace(var$4);
                    $rt_throw(var$4);
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace(var$4);
                $rt_throw(var$4);
            }
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            $hasNormals = var$4.$length0;
            var$6 = var$4;
            jl_AbstractStringBuilder_insert(var$6, $hasNormals, var$7);
            jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(620));
            jl_AbstractStringBuilder_insert0(var$4, var$4.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$6, var$4.$length0, $rt_s(618));
            var$7 = new jl_String;
            var$8 = var$4.$buffer;
            var$9 = var$8.data;
            var$10 = var$4.$length0;
            var$11 = var$9.length;
            if (var$10 < 0)
                break;
            if (var$10 > (var$11 - 0 | 0))
                break;
            var$7.$nativeString = $rt_charArrayToString(var$8.data, 0, var$10);
            $i = $i + 1 | 0;
        }
        var$4 = new jl_IndexOutOfBoundsException;
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace(var$4);
        $rt_throw(var$4);
    }
    var$4 = new jl_IndexOutOfBoundsException;
    var$4.$suppressionEnabled = 1;
    var$4.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$4);
    $rt_throw(var$4);
},
cbggg_ImmediateModeRenderer20_createFragmentShader = ($hasNormals, $hasColors, $numTexCoords) => {
    let $shader, var$5, var$6, var$7, var$8, $i, var$10, var$11;
    $shader = $rt_s(621);
    if ($hasColors) {
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        $hasNormals = var$5.$length0;
        var$6 = var$5;
        jl_AbstractStringBuilder_insert(var$6, $hasNormals, $shader);
        jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(612));
        $shader = new jl_String;
        var$7 = var$5.$buffer;
        var$8 = var$7.data;
        $i = var$5.$length0;
        var$10 = var$8.length;
        if ($i >= 0 && $i <= (var$10 - 0 | 0))
            $shader.$nativeString = $rt_charArrayToString(var$7.data, 0, $i);
        else {
            $shader = new jl_IndexOutOfBoundsException;
            $shader.$suppressionEnabled = 1;
            $shader.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($shader);
            $rt_throw($shader);
        }
    }
    $i = 0;
    a: {
        while (true) {
            if ($i >= $numTexCoords) {
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                $hasNormals = var$5.$length0;
                var$6 = var$5;
                jl_AbstractStringBuilder_insert(var$6, $hasNormals, $shader);
                jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(622));
                $shader = !$hasColors ? $rt_s(623) : $rt_s(624);
                jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $shader);
                $shader = new jl_String;
                var$7 = var$5.$buffer;
                var$8 = var$7.data;
                $hasColors = var$5.$length0;
                $i = var$8.length;
                if ($hasColors >= 0 && $hasColors <= ($i - 0 | 0)) {
                    $shader.$nativeString = $rt_charArrayToString(var$7.data, 0, $hasColors);
                    if ($numTexCoords > 0) {
                        var$6 = new jl_StringBuilder;
                        var$6.$buffer = $rt_createCharArray(16);
                        $hasNormals = var$6.$length0;
                        var$5 = var$6;
                        jl_AbstractStringBuilder_insert(var$5, $hasNormals, $shader);
                        jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(625));
                        $shader = new jl_String;
                        var$7 = var$6.$buffer;
                        var$8 = var$7.data;
                        $hasColors = var$6.$length0;
                        $i = var$8.length;
                        if ($hasColors >= 0 && $hasColors <= ($i - 0 | 0))
                            $shader.$nativeString = $rt_charArrayToString(var$7.data, 0, $hasColors);
                        else {
                            $shader = new jl_IndexOutOfBoundsException;
                            $shader.$suppressionEnabled = 1;
                            $shader.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace($shader);
                            $rt_throw($shader);
                        }
                    }
                    $i = 0;
                    var$10 = $numTexCoords - 1 | 0;
                    b: {
                        while (true) {
                            if ($i >= $numTexCoords) {
                                var$6 = new jl_StringBuilder;
                                var$6.$buffer = $rt_createCharArray(16);
                                $hasNormals = var$6.$length0;
                                var$5 = var$6;
                                jl_AbstractStringBuilder_insert(var$5, $hasNormals, $shader);
                                jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(626));
                                $shader = new jl_String;
                                var$7 = var$6.$buffer;
                                var$8 = var$7.data;
                                $hasColors = var$6.$length0;
                                $numTexCoords = var$8.length;
                                if ($hasColors >= 0 && $hasColors <= ($numTexCoords - 0 | 0)) {
                                    $shader.$nativeString = $rt_charArrayToString(var$7.data, 0, $hasColors);
                                    return $shader;
                                }
                                $shader = new jl_IndexOutOfBoundsException;
                                $shader.$suppressionEnabled = 1;
                                $shader.$writableStackTrace = 1;
                                jl_Throwable_fillInStackTrace($shader);
                                $rt_throw($shader);
                            }
                            if ($i != var$10) {
                                var$6 = new jl_StringBuilder;
                                var$6.$buffer = $rt_createCharArray(16);
                                $hasNormals = var$6.$length0;
                                var$5 = var$6;
                                jl_AbstractStringBuilder_insert(var$5, $hasNormals, $shader);
                                jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(627));
                                jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $i, 10);
                                jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(628));
                                jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $i, 10);
                                jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(629));
                                $shader = new jl_String;
                                var$8 = var$6.$buffer;
                                var$7 = var$8.data;
                                $hasNormals = var$6.$length0;
                                $hasColors = var$7.length;
                                if ($hasNormals < 0)
                                    break;
                                if ($hasNormals > ($hasColors - 0 | 0))
                                    break;
                                $shader.$nativeString = $rt_charArrayToString(var$8.data, 0, $hasNormals);
                            } else {
                                var$6 = new jl_StringBuilder;
                                var$6.$buffer = $rt_createCharArray(16);
                                $hasNormals = var$6.$length0;
                                var$5 = var$6;
                                jl_AbstractStringBuilder_insert(var$5, $hasNormals, $shader);
                                jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(627));
                                jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $i, 10);
                                jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(628));
                                jl_AbstractStringBuilder_insert0(var$6, var$6.$length0, $i, 10);
                                jl_AbstractStringBuilder_insert(var$5, var$6.$length0, $rt_s(533));
                                $shader = new jl_String;
                                var$7 = var$6.$buffer;
                                var$8 = var$7.data;
                                $hasColors = var$6.$length0;
                                var$11 = var$8.length;
                                if ($hasColors < 0)
                                    break b;
                                if ($hasColors > (var$11 - 0 | 0))
                                    break b;
                                $shader.$nativeString = $rt_charArrayToString(var$7.data, 0, $hasColors);
                            }
                            $i = $i + 1 | 0;
                        }
                        $shader = new jl_IndexOutOfBoundsException;
                        $shader.$suppressionEnabled = 1;
                        $shader.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace($shader);
                        $rt_throw($shader);
                    }
                    $shader = new jl_IndexOutOfBoundsException;
                    $shader.$suppressionEnabled = 1;
                    $shader.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace($shader);
                    $rt_throw($shader);
                }
                $shader = new jl_IndexOutOfBoundsException;
                $shader.$suppressionEnabled = 1;
                $shader.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($shader);
                $rt_throw($shader);
            }
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            $hasNormals = var$5.$length0;
            var$6 = var$5;
            jl_AbstractStringBuilder_insert(var$6, $hasNormals, $shader);
            jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(619));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(618));
            $shader = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$7.data;
            var$10 = var$5.$length0;
            var$11 = var$8.length;
            if (var$10 < 0)
                break a;
            if (var$10 > (var$11 - 0 | 0))
                break a;
            $shader.$nativeString = $rt_charArrayToString(var$7.data, 0, var$10);
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            $hasNormals = var$5.$length0;
            var$6 = var$5;
            jl_AbstractStringBuilder_insert(var$6, $hasNormals, $shader);
            jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(630));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length0, $i, 10);
            jl_AbstractStringBuilder_insert(var$6, var$5.$length0, $rt_s(618));
            $shader = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$7.data;
            var$10 = var$5.$length0;
            var$11 = var$8.length;
            if (var$10 < 0)
                break;
            if (var$10 > (var$11 - 0 | 0))
                break;
            $shader.$nativeString = $rt_charArrayToString(var$7.data, 0, var$10);
            $i = $i + 1 | 0;
        }
        $shader = new jl_IndexOutOfBoundsException;
        $shader.$suppressionEnabled = 1;
        $shader.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace($shader);
        $rt_throw($shader);
    }
    $shader = new jl_IndexOutOfBoundsException;
    $shader.$suppressionEnabled = 1;
    $shader.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($shader);
    $rt_throw($shader);
};
function cgtr_Chip32Random() {
    let a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA1 = 0;
    a.$stateB1 = 0;
    a.$stateC1 = 0;
    a.$stateD1 = 0;
}
let cgtr_Chip32Random_nextLong = $this => {
    let $fa, $fb, $fc, $fd, $hi, $ga, $gb, $gc, $gd, $lo;
    $fa = $this.$stateA1;
    $fb = $this.$stateB1;
    $fc = $this.$stateC1;
    $fd = $this.$stateD1;
    $hi = ($fa << 14 | ($fa >>> 18 | 0)) ^ (($fb << 23 | ($fb >>> 9 | 0)) + $fc | 0);
    $ga = $fb + $fc | 0;
    $gb = $fa ^ $fd;
    $gc = $fb << 11 | ($fb >>> 21 | 0);
    $gd = $fd + (-1640531527) | 0;
    $lo = ($ga << 14 | ($ga >>> 18 | 0)) ^ (($gb << 23 | ($gb >>> 9 | 0)) + $gc | 0);
    $this.$stateA1 = $gb + $gc | 0;
    $this.$stateB1 = $ga ^ $gd;
    $this.$stateC1 = $gb << 11 | ($gb >>> 21 | 0);
    $this.$stateD1 = $fd + 1013904242 | 0;
    return Long_xor(Long_shl(Long_fromInt($hi), 32), Long_fromInt($lo));
},
cgtr_Chip32Random_nextInt = ($this, $bound) => {
    let $fa, $fb, $fc, $fd, $res;
    $fa = $this.$stateA1;
    $fb = $this.$stateB1;
    $fc = $this.$stateC1;
    $fd = $this.$stateD1;
    $res = ($fa << 14 | ($fa >>> 18 | 0)) ^ (($fb << 23 | ($fb >>> 9 | 0)) + $fc | 0);
    $this.$stateA1 = $fb + $fc | 0;
    $this.$stateB1 = $fd ^ $fa;
    $this.$stateC1 = $fb << 11 | ($fb >>> 21 | 0);
    $this.$stateD1 = $fd + (-1640531527) | 0;
    return Long_hi(Long_mul(Long_fromInt($bound), Long_and(Long_fromInt($res), Long_create(4294967295, 0)))) & ($bound >> 31 ^ (-1));
},
cgtr_Chip32Random_nextLong0 = ($this, $bound) => {
    let $ga, $gb, $gc, $gd, $randLow, $fa, $fb, $fc, $fd, $randHigh, $boundLow, $boundHigh;
    $ga = $this.$stateA1;
    $gb = $this.$stateB1;
    $gc = $this.$stateC1;
    $gd = $this.$stateD1;
    $randLow = Long_and(Long_fromInt(($ga << 14 | ($ga >>> 18 | 0)) ^ (($gb << 23 | ($gb >>> 9 | 0)) + $gc | 0)), Long_create(4294967295, 0));
    $fa = $gb + $gc | 0;
    $fb = $gd ^ $ga;
    $fc = $gb << 11 | ($gb >>> 21 | 0);
    $fd = $gd + (-1640531527) | 0;
    $randHigh = Long_and(Long_fromInt(($fa << 14 | ($fa >>> 18 | 0)) ^ (($fb << 23 | ($fb >>> 9 | 0)) + $fc | 0)), Long_create(4294967295, 0));
    $this.$stateA1 = $fb + $fc | 0;
    $this.$stateB1 = $fd ^ $fa;
    $this.$stateC1 = $fb << 11 | ($fb >>> 21 | 0);
    $this.$stateD1 = $gd + 1013904242 | 0;
    if (Long_ge(Long_fromInt(1), $bound))
        return Long_ZERO;
    $boundLow = Long_and($bound, Long_create(4294967295, 0));
    $boundHigh = Long_shru($bound, 32);
    return Long_add(Long_add(Long_shru(Long_mul($randHigh, $boundLow), 32), Long_shru(Long_mul($randLow, $boundHigh), 32)), Long_mul($randHigh, $boundHigh));
},
cgtr_Chip32Random_nextFloat = $this => {
    let $fa, $fb, $fc, $fd, $res;
    $fa = $this.$stateA1;
    $fb = $this.$stateB1;
    $fc = $this.$stateC1;
    $fd = $this.$stateD1;
    $res = ($fa << 14 | ($fa >>> 18 | 0)) ^ (($fb << 23 | ($fb >>> 9 | 0)) + $fc | 0);
    $this.$stateA1 = $fb + $fc | 0;
    $this.$stateB1 = $fd ^ $fa;
    $this.$stateC1 = $fb << 11 | ($fb >>> 21 | 0);
    $this.$stateD1 = $fd + (-1640531527) | 0;
    return ($res >>> 8 | 0) * 5.9604644775390625E-8;
};
function cgtr_ChopRandom() {
    let a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA2 = 0;
    a.$stateB2 = 0;
    a.$stateC3 = 0;
    a.$stateD3 = 0;
}
let cgtr_ChopRandom_nextLong = $this => {
    let $fa, $fb, $fc, $fd, $ga, $gb, $gc, $gd, $sa, $sb;
    $fa = $this.$stateA2;
    $fb = $this.$stateB2;
    $fc = $this.$stateC3;
    $fd = $this.$stateD3;
    $ga = $fb ^ $fc;
    $ga = $ga << 26 | ($ga >>> 6 | 0);
    $gb = $fc ^ $fd;
    $gb = $gb << 11 | ($gb >>> 21 | 0);
    $gc = $fa ^ ($fb + $fc | 0);
    $gd = $fd + (-1380601499) | 0;
    $sa = $gb ^ $gc;
    $this.$stateA2 = $sa << 26 | ($sa >>> 6 | 0);
    $sb = $gc ^ $gd;
    $this.$stateB2 = $sb << 11 | ($sb >>> 21 | 0);
    $this.$stateC3 = $ga ^ ($gb + $gc | 0);
    $this.$stateD3 = $gd + (-1380601499) | 0;
    return Long_xor(Long_shl(Long_fromInt($fc), 32), Long_fromInt($gc));
},
cgtr_ChopRandom_nextInt = $this => {
    let $fa, $fb, $fc, $fd, $sa, $sb;
    $fa = $this.$stateA2;
    $fb = $this.$stateB2;
    $fc = $this.$stateC3;
    $fd = $this.$stateD3;
    $sa = $fb ^ $fc;
    $this.$stateA2 = $sa << 26 | ($sa >>> 6 | 0);
    $sb = $fc ^ $fd;
    $this.$stateB2 = $sb << 11 | ($sb >>> 21 | 0);
    $this.$stateC3 = $fa ^ ($fb + $fc | 0);
    $this.$stateD3 = $fd + (-1380601499) | 0;
    return $fc;
},
cgtr_ChopRandom_nextLong0 = ($this, $inner, $outer) => {
    let $randLow, $randHigh, $bound, $boundLow, $boundHigh;
    $randLow = Long_and(Long_fromInt(cgtr_ChopRandom_nextInt($this)), Long_create(4294967295, 0));
    $randHigh = Long_and(Long_fromInt(cgtr_ChopRandom_nextInt($this)), Long_create(4294967295, 0));
    if (Long_ge($inner, $outer))
        return $inner;
    $bound = Long_sub($outer, $inner);
    $boundLow = Long_and($bound, Long_create(4294967295, 0));
    $boundHigh = Long_shru($bound, 32);
    return Long_add(Long_add(Long_add($inner, Long_shru(Long_mul($randHigh, $boundLow), 32)), Long_shru(Long_mul($randLow, $boundHigh), 32)), Long_mul($randHigh, $boundHigh));
};
function cgtr_Xoshiro128PlusPlusRandom() {
    let a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA3 = 0;
    a.$stateB3 = 0;
    a.$stateC2 = 0;
    a.$stateD2 = 0;
}
let cgtr_Xoshiro128PlusPlusRandom_nextLong = $this => {
    let var$1, var$2, $h, var$4, var$5, $l, var$7, $t;
    var$1 = $this.$stateA3;
    var$2 = $this.$stateD2;
    $h = var$1 + var$2 | 0;
    $h = ($h << 7 | ($h >>> 25 | 0)) + var$1 | 0;
    var$4 = $this.$stateC2;
    var$5 = $this.$stateB3;
    $l = var$4 - var$5 | 0;
    var$7 = ($l << 13 | ($l >>> 19 | 0)) + var$4 | 0;
    $t = var$5 << 9;
    var$4 = var$4 ^ var$1;
    $this.$stateC2 = var$4;
    var$2 = var$2 ^ var$5;
    $this.$stateD2 = var$2;
    $this.$stateB3 = var$5 ^ var$4;
    $this.$stateA3 = var$1 ^ var$2;
    $this.$stateC2 = var$4 ^ $t;
    $this.$stateD2 = var$2 << 11 | (var$2 >>> 21 | 0);
    return Long_xor(Long_shl(Long_fromInt($h), 32), Long_and(Long_fromInt(var$7), Long_create(4294967295, 0)));
},
cgtr_Xoshiro128PlusPlusRandom_nextInt = $this => {
    let var$1, var$2, $result, var$4, var$5, $t;
    var$1 = $this.$stateA3;
    var$2 = $this.$stateD2;
    $result = var$1 + var$2 | 0;
    var$4 = ($result << 7 | ($result >>> 25 | 0)) + var$1 | 0;
    var$5 = $this.$stateB3;
    $t = var$5 << 9;
    $result = $this.$stateC2 ^ var$1;
    $this.$stateC2 = $result;
    var$2 = var$2 ^ var$5;
    $this.$stateD2 = var$2;
    $this.$stateB3 = var$5 ^ $result;
    $this.$stateA3 = var$1 ^ var$2;
    $this.$stateC2 = $result ^ $t;
    $this.$stateD2 = var$2 << 11 | (var$2 >>> 21 | 0);
    return var$4;
},
cgtr_Xoshiro128PlusPlusRandom_nextLong0 = ($this, $inner, $outer) => {
    let $rand, $randLow, $randHigh, $bound, $boundLow, $boundHigh;
    $rand = cgtr_Xoshiro128PlusPlusRandom_nextLong($this);
    if (Long_ge($inner, $outer))
        return $inner;
    $randLow = Long_and($rand, Long_create(4294967295, 0));
    $randHigh = Long_shru($rand, 32);
    $bound = Long_sub($outer, $inner);
    $boundLow = Long_and($bound, Long_create(4294967295, 0));
    $boundHigh = Long_shru($bound, 32);
    return Long_add(Long_add(Long_add($inner, Long_shru(Long_mul($randHigh, $boundLow), 32)), Long_shru(Long_mul($randLow, $boundHigh), 32)), Long_mul($randHigh, $boundHigh));
};
function cgtr_Xoshiro160RoadroxoRandom() {
    let a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA0 = 0;
    a.$stateB0 = 0;
    a.$stateC = 0;
    a.$stateD = 0;
    a.$stateE0 = 0;
}
let cgtr_Xoshiro160RoadroxoRandom_nextLong = $this => {
    let var$1, $a, var$3, $b, var$5, $c, var$7, $d, var$9, $e, $res, $t, var$13;
    var$1 = $this.$stateA0;
    $a = Long_fromInt(var$1);
    var$3 = $this.$stateB0;
    $b = Long_fromInt(var$3);
    var$5 = $this.$stateC;
    $c = Long_fromInt(var$5);
    var$7 = $this.$stateD;
    $d = Long_fromInt(var$7);
    var$9 = $this.$stateE0;
    $e = Long_fromInt(var$9);
    $res = Long_add(Long_add(Long_add(Long_add(Long_or(Long_shl($a, 11), Long_shru($a, 53)), $b), Long_or(Long_shl($c, 39), Long_shru($c, 25))), Long_or(Long_shl($d, 25), Long_shru($d, 39))), Long_or(Long_shl($e, 52), Long_shru($e, 12)));
    $t = var$3 << 9;
    $this.$stateE0 = var$9 + ((-1017753963) ^ var$7) | 0;
    var$13 = var$5 ^ var$1;
    $this.$stateC = var$13;
    var$5 = var$7 ^ var$3;
    $this.$stateD = var$5;
    $this.$stateB0 = var$3 ^ var$13;
    $this.$stateA0 = var$1 ^ var$5;
    $this.$stateC = var$13 ^ $t;
    $this.$stateD = var$5 << 11 | (var$5 >>> 21 | 0);
    return $res;
},
cgtr_Xoshiro160RoadroxoRandom_nextInt = ($this, $bound) => {
    let var$2, $t, var$4, $res, var$6, var$7, var$8;
    var$2 = $this.$stateE0;
    $t = var$2 << 23 | (var$2 >>> 9 | 0);
    var$4 = $this.$stateA0;
    $res = var$4 << 14 | (var$4 >>> 18 | 0);
    var$6 = $this.$stateB0;
    $res = $t ^ ($res + var$6 | 0);
    $t = var$6 << 9;
    var$7 = $this.$stateD;
    $this.$stateE0 = var$2 + ((-1017753963) ^ var$7) | 0;
    var$2 = $this.$stateC ^ var$4;
    $this.$stateC = var$2;
    var$8 = var$7 ^ var$6;
    $this.$stateD = var$8;
    $this.$stateB0 = var$6 ^ var$2;
    $this.$stateA0 = var$4 ^ var$8;
    $this.$stateC = var$2 ^ $t;
    $this.$stateD = var$8 << 11 | (var$8 >>> 21 | 0);
    return Long_hi(Long_mul(Long_fromInt($bound), Long_and(Long_fromInt($res), Long_create(4294967295, 0)))) & ($bound >> 31 ^ (-1));
},
cgtr_Xoshiro160RoadroxoRandom_nextLong0 = ($this, $bound) => {
    let var$2, $a, var$4, $b, var$6, $c, var$8, $d, var$10, $e, $res, $randHigh, $randLow, $t, var$16, $boundLow, $boundHigh;
    var$2 = $this.$stateA0;
    $a = Long_fromInt(var$2);
    var$4 = $this.$stateB0;
    $b = Long_fromInt(var$4);
    var$6 = $this.$stateC;
    $c = Long_fromInt(var$6);
    var$8 = $this.$stateD;
    $d = Long_fromInt(var$8);
    var$10 = $this.$stateE0;
    $e = Long_fromInt(var$10);
    $res = Long_add(Long_add(Long_add(Long_add(Long_or(Long_shl($a, 11), Long_shru($a, 53)), $b), Long_or(Long_shl($c, 39), Long_shru($c, 25))), Long_or(Long_shl($d, 25), Long_shru($d, 39))), Long_or(Long_shl($e, 52), Long_shru($e, 12)));
    $randHigh = Long_shru($res, 32);
    $randLow = Long_and($res, Long_create(4294967295, 0));
    $t = var$4 << 9;
    $this.$stateE0 = var$10 + ((-1017753963) ^ var$8) | 0;
    var$6 = var$6 ^ var$2;
    $this.$stateC = var$6;
    var$16 = var$8 ^ var$4;
    $this.$stateD = var$16;
    $this.$stateB0 = var$4 ^ var$6;
    $this.$stateA0 = var$2 ^ var$16;
    $this.$stateC = var$6 ^ $t;
    $this.$stateD = var$16 << 11 | (var$16 >>> 21 | 0);
    if (Long_ge(Long_fromInt(1), $bound))
        return Long_ZERO;
    $boundLow = Long_and($bound, Long_create(4294967295, 0));
    $boundHigh = Long_shru($bound, 32);
    return Long_add(Long_add(Long_shru(Long_mul($randHigh, $boundLow), 32), Long_shru(Long_mul($randLow, $boundHigh), 32)), Long_mul($randHigh, $boundHigh));
},
cgtr_Xoshiro160RoadroxoRandom_nextFloat = $this => {
    let var$1, $res, var$3, var$4, var$5, $t, var$7;
    var$1 = $this.$stateE0;
    $res = var$1 << 23 | (var$1 >>> 9 | 0);
    var$3 = $this.$stateA0;
    var$4 = var$3 << 14 | (var$3 >>> 18 | 0);
    var$5 = $this.$stateB0;
    $res = $res ^ (var$4 + var$5 | 0);
    $t = var$5 << 9;
    var$7 = $this.$stateD;
    $this.$stateE0 = var$1 + ((-1017753963) ^ var$7) | 0;
    var$4 = $this.$stateC ^ var$3;
    $this.$stateC = var$4;
    var$1 = var$7 ^ var$5;
    $this.$stateD = var$1;
    $this.$stateB0 = var$5 ^ var$4;
    $this.$stateA0 = var$3 ^ var$1;
    $this.$stateC = var$4 ^ $t;
    $this.$stateD = var$1 << 11 | (var$1 >>> 21 | 0);
    return ($res >>> 8 | 0) * 5.9604644775390625E-8;
};
function cgtr_AceRandom() {
    let a = this; cgtr_EnhancedRandom.call(a);
    a.$stateA = Long_ZERO;
    a.$stateB = Long_ZERO;
    a.$stateC0 = Long_ZERO;
    a.$stateD0 = Long_ZERO;
    a.$stateE = Long_ZERO;
}
let cgtr_AceRandom_nextLong = $this => {
    let $fa, $fb, $fc, $fd, $fe, var$6;
    $fa = $this.$stateA;
    $fb = $this.$stateB;
    $fc = $this.$stateC0;
    $fd = $this.$stateD0;
    $fe = $this.$stateE;
    $this.$stateA = Long_add($fa, Long_create(2135587861, 2654435769));
    $this.$stateB = Long_xor($fa, $fe);
    $this.$stateC0 = Long_add($fb, $fd);
    $this.$stateD0 = Long_or(Long_shl($fc, 52), Long_shru($fc, 12));
    var$6 = Long_sub($fb, $fc);
    $this.$stateE = var$6;
    return var$6;
};
function cbggg_TextureAtlas$AtlasRegion() {
    let a = this; cbggg_TextureRegion.call(a);
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$packedHeight = 0;
    a.$originalHeight = 0;
}
function ji_ByteArrayOutputStream() {
    let a = this; ji_OutputStream.call(a);
    a.$buf = null;
    a.$count0 = 0;
}
let ji_ByteArrayOutputStream_write = ($this, $b, $off, $len) => {
    let var$4, var$5, var$6, $i, var$8, var$9, var$10;
    var$4 = $this.$count0 + $len | 0;
    var$5 = $this.$buf.data;
    var$6 = var$5.length;
    if (var$6 < var$4) {
        $i = (var$6 * 3 | 0) / 2 | 0;
        if (var$4 > $i)
            $i = var$4;
        var$8 = $rt_createByteArray($i);
        if ($i < var$6)
            var$6 = $i;
        var$9 = var$8.data;
        $i = 0;
        while ($i < var$6) {
            var$9[$i] = var$5[$i];
            $i = $i + 1 | 0;
        }
        $this.$buf = var$8;
    }
    $i = 0;
    while ($i < $len) {
        var$8 = $b.data;
        var$5 = $this.$buf.data;
        var$10 = $this.$count0;
        $this.$count0 = var$10 + 1 | 0;
        var$6 = $off + 1 | 0;
        var$5[var$10] = var$8[$off];
        $i = $i + 1 | 0;
        $off = var$6;
    }
},
cbgu_StreamUtils$OptimizedByteArrayOutputStream = $rt_classWithoutFields(ji_ByteArrayOutputStream),
cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    jl_Object_monitorEnterSync($this);
    try {
        var$1 = $this.$count0;
        var$2 = $this.$buf;
        var$3 = var$2.data;
        var$4 = var$3.length;
        var$5 = $rt_compare(var$1, var$4);
        if (!var$5)
            return var$2;
        var$2 = $rt_createByteArray(var$1);
        if (var$5 < 0)
            var$4 = var$1;
        var$6 = var$2.data;
        var$1 = 0;
        while (var$1 < var$4) {
            var$6[var$1] = var$3[var$1];
            var$1 = var$1 + 1 | 0;
        }
        return var$2;
    } finally {
        jl_Object_monitorExitSync($this);
    }
};
function cbgg_OrthographicCamera() {
    let a = this; cbgg_Camera.call(a);
    a.$zoom = 0.0;
    a.$tmp0 = null;
}
let cbgg_OrthographicCamera_update = ($this, $updateFrustum) => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = $this.$projection;
    var$3 = $this.$zoom;
    var$4 = $this.$viewportWidth;
    var$5 = var$3 *  -var$4 / 2.0;
    var$4 = var$3 * var$4 / 2.0;
    var$6 = $this.$viewportHeight;
    cbgm_Matrix4_setToOrtho(var$2, var$5, var$4, var$3 *  -(var$6 / 2.0), var$3 * var$6 / 2.0, $this.$near, $this.$far);
    cbgm_Matrix4_setToLookAt($this.$view, $this.$direction, $this.$up);
    var$2 = $this.$view;
    var$7 = $this.$position2;
    cbgm_Matrix4_translate(var$2,  -var$7.$x,  -var$7.$y,  -var$7.$z);
    cbgm_Matrix4_set($this.$combined, $this.$projection.$val);
    cbgm_Matrix4_matrix4_mul($this.$combined.$val, $this.$view.$val);
    if ($updateFrustum) {
        cbgm_Matrix4_set($this.$invProjectionView, $this.$combined.$val);
        cbgm_Matrix4_matrix4_inv($this.$invProjectionView.$val);
        cbgm_Frustum_update($this.$frustum, $this.$invProjectionView);
    }
};
function jnc_CharsetEncoder() {
    let a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$replacement1 = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$status = 0;
}
let jnc_CharsetEncoder_onMalformedInput = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(631);
    $rt_throw(var$2);
},
jnc_CharsetEncoder_onUnmappableCharacter = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    var$2.$message = $rt_s(631);
    $rt_throw(var$2);
},
jnc_CharsetEncoder_encode = ($this, $in, $out, $endOfInput) => {
    let $remaining, $e, $result, $action, var$8, var$9, var$10, $$je;
    a: {
        $remaining = $this.$status;
        if ($remaining != 3) {
            if ($endOfInput)
                break a;
            if ($remaining != 2)
                break a;
        }
        $in = new jl_IllegalStateException;
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $rt_throw($in);
    }
    $this.$status = !$endOfInput ? 1 : 2;
    $e = $this;
    while (true) {
        try {
            $result = jnci_BufferedEncoder_encodeLoop($e, $in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $in = new jnc_CoderMalfunctionError;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $in.$cause = $e;
                $rt_throw($in);
            } else {
                throw $$e;
            }
        }
        $remaining = $result.$kind;
        if ($remaining ? 0 : 1) {
            if (!$endOfInput)
                return $result;
            $remaining = $in.$limit0 - $in.$position0 | 0;
            if ($remaining <= 0)
                return $result;
            $result = new jnc_CoderResult;
            $result.$kind = 2;
            $result.$length3 = $remaining;
        } else if ($remaining != 1 ? 0 : 1)
            break;
        $action = !($result.$kind != 3 ? 0 : 1) ? $this.$malformedAction0 : $this.$unmappableAction0;
        b: {
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            var$8 = $out.$limit0 - $out.$position0 | 0;
            var$9 = $this.$replacement1;
            $remaining = var$9.data.length;
            if (var$8 < $remaining)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, var$9, 0, $remaining);
        }
        var$10 = $in.$position0;
        $remaining = $result.$kind;
        var$8 = $remaining != 2 ? 0 : 1;
        if (!(!var$8 && !($remaining != 3 ? 0 : 1) ? 0 : 1)) {
            $in = new jl_UnsupportedOperationException;
            $in.$suppressionEnabled = 1;
            $in.$writableStackTrace = 1;
            $rt_throw($in);
        }
        jn_Buffer_position($in, var$10 + $result.$length3 | 0);
    }
    return $result;
},
jnc_CharsetEncoder_encode0 = ($this, $in) => {
    let var$2, var$3, var$4, $output, var$6, var$7, var$8, var$9, var$10, $result, var$12, var$13, var$14, $output_0;
    var$2 = $in.$limit0 - $in.$position0 | 0;
    if (!var$2) {
        $in = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray(0).data;
        $in.$mark = (-1);
        $in.$capacity = 0;
        $in.$limit0 = 0;
        $in.$order = jn_ByteOrder_BIG_ENDIAN;
        $in.$start0 = 0;
        var$4 = var$3.length;
        $in.$bkArray = $rt_createByteArray(var$4);
        $output = new cgxgbtdt_Int8ArrayNative;
        $output.$buffer0 = new Int8Array(var$4);
        $in.$array = $output;
        var$6 = 0;
        while (var$6 < var$4) {
            var$7 = var$3[var$6];
            $output = $in.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($output);
            $output.$buffer0[var$6] = var$7;
            var$6 = var$6 + 1 | 0;
        }
        $in.$position0 = 0;
        $in.$limit0 = 0;
        $in.$direct = 0;
        $in.$readOnly0 = 0;
        return $in;
    }
    $this.$status = 0;
    var$8 = var$2 * $this.$averageBytesPerChar | 0;
    if (var$8 < 0) {
        $in = new jl_IllegalArgumentException;
        $output = new jl_StringBuilder;
        $output.$buffer = $rt_createCharArray(16);
        var$2 = $output.$length0;
        var$9 = $output;
        var$10 = $rt_s(529);
        jl_AbstractStringBuilder_insert(var$9, var$2, var$10);
        jl_AbstractStringBuilder_insert0($output, $output.$length0, var$8, 10);
        $result = new jl_String;
        var$3 = $output.$buffer;
        var$12 = var$3.data;
        var$2 = $output.$length0;
        var$4 = var$12.length;
        if (var$2 >= 0 && var$2 <= (var$4 - 0 | 0)) {
            $result.$nativeString = $rt_charArrayToString(var$3.data, 0, var$2);
            $in.$suppressionEnabled = 1;
            $in.$writableStackTrace = 1;
            $in.$message = $result;
            $rt_throw($in);
        }
        $in = new jl_IndexOutOfBoundsException;
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $rt_throw($in);
    }
    $output = new jn_ByteBufferImpl;
    var$3 = $rt_createByteArray(var$8).data;
    $output.$mark = (-1);
    $output.$capacity = var$8;
    $output.$limit0 = var$8;
    $output.$order = jn_ByteOrder_BIG_ENDIAN;
    $output.$start0 = 0;
    var$4 = var$3.length;
    $output.$bkArray = $rt_createByteArray(var$4);
    $result = new cgxgbtdt_Int8ArrayNative;
    $result.$buffer0 = new Int8Array(var$4);
    $output.$array = $result;
    var$6 = 0;
    while (var$6 < var$4) {
        var$7 = var$3[var$6];
        $result = $output.$array;
        cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($result);
        $result.$buffer0[var$6] = var$7;
        var$6 = var$6 + 1 | 0;
    }
    $output.$position0 = 0;
    $output.$limit0 = var$8;
    $output.$direct = 0;
    $output.$readOnly0 = 0;
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        if ($result === jnc_CoderResult_UNDERFLOW) {
            $in = jnc_CharsetEncoder_encode($this, $in, $output, 1);
            var$2 = $in.$kind;
            var$8 = var$2 != 2 ? 0 : 1;
            var$8 = !var$8 && !(var$2 != 3 ? 0 : 1) ? 0 : 1;
            a: {
                if (var$8) {
                    switch (var$2) {
                        case 0:
                            break;
                        case 1:
                            $in = new jnc_BufferOverflowException;
                            $in.$suppressionEnabled = 1;
                            $in.$writableStackTrace = 1;
                            $rt_throw($in);
                        case 2:
                            $output = new jnc_MalformedInputException;
                            var$8 = $in.$length3;
                            $output.$suppressionEnabled = 1;
                            $output.$writableStackTrace = 1;
                            $output.$length5 = var$8;
                            $rt_throw($output);
                        case 3:
                            $output = new jnc_UnmappableCharacterException;
                            var$8 = $in.$length3;
                            $output.$suppressionEnabled = 1;
                            $output.$writableStackTrace = 1;
                            $output.$length4 = var$8;
                            $rt_throw($output);
                        default:
                            break a;
                    }
                    $in = new jnc_BufferUnderflowException;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $rt_throw($in);
                }
            }
            b: {
                while (true) {
                    var$2 = $this.$status;
                    if (var$2 != 2 && var$2 != 4) {
                        $in = new jl_IllegalStateException;
                        $in.$suppressionEnabled = 1;
                        $in.$writableStackTrace = 1;
                        $rt_throw($in);
                    }
                    $in = jnc_CoderResult_UNDERFLOW;
                    if ($in === $in)
                        $this.$status = 3;
                    var$2 = $in.$kind;
                    if (var$2 ? 0 : 1)
                        break;
                    if (!(var$2 != 1 ? 0 : 1))
                        continue;
                    $in = $output.$array;
                    cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($in);
                    var$4 = $in.$buffer0.length;
                    var$8 = 0;
                    while (var$8 < var$4) {
                        var$3 = $output.$bkArray.data;
                        $in = $output.$array;
                        cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($in);
                        var$3[var$8] = $in.$buffer0[var$8];
                        var$8 = var$8 + 1 | 0;
                    }
                    var$3 = $output.$bkArray.data;
                    var$2 = var$3.length;
                    var$8 = var$2 * 2 | 0;
                    var$12 = $rt_createByteArray(var$8);
                    if (var$8 < var$2)
                        var$2 = var$8;
                    var$12 = var$12.data;
                    var$8 = 0;
                    while (var$8 < var$2) {
                        var$12[var$8] = var$3[var$8];
                        var$8 = var$8 + 1 | 0;
                    }
                    var$2 = var$12.length;
                    if (var$2 < 0)
                        break b;
                    if (var$2 > (var$2 - 0 | 0))
                        break b;
                    $in = new jn_ByteBufferImpl;
                    var$13 = 0 + var$2 | 0;
                    $in.$mark = (-1);
                    $in.$capacity = var$2;
                    $in.$limit0 = var$2;
                    $in.$order = jn_ByteOrder_BIG_ENDIAN;
                    $in.$start0 = 0;
                    $in.$bkArray = $rt_createByteArray(var$2);
                    $result = new cgxgbtdt_Int8ArrayNative;
                    $result.$buffer0 = new Int8Array(var$2);
                    $in.$array = $result;
                    var$14 = 0;
                    while (var$14 < var$2) {
                        var$7 = var$12[var$14];
                        $result = $in.$array;
                        cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($result);
                        $result.$buffer0[var$14] = var$7;
                        var$14 = var$14 + 1 | 0;
                    }
                    $in.$position0 = 0;
                    $in.$limit0 = var$13;
                    $in.$direct = 0;
                    $in.$readOnly0 = 0;
                    jn_Buffer_position($in, $output.$position0);
                    $output = $in;
                }
                $output.$limit0 = $output.$position0;
                $output.$position0 = 0;
                $output.$mark = (-1);
                return $output;
            }
            $in = new jl_IndexOutOfBoundsException;
            $in.$suppressionEnabled = 1;
            $in.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($in);
            $rt_throw($in);
        }
        if ($result === jnc_CoderResult_OVERFLOW) {
            $result = $output.$array;
            cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($result);
            var$4 = $result.$buffer0.length;
            var$8 = 0;
            while (var$8 < var$4) {
                var$3 = $output.$bkArray.data;
                $result = $output.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($result);
                var$3[var$8] = $result.$buffer0[var$8];
                var$8 = var$8 + 1 | 0;
            }
            var$12 = $output.$bkArray.data;
            var$2 = var$12.length;
            var$8 = var$2 * 2 | 0;
            var$3 = $rt_createByteArray(var$8);
            if (var$8 < var$2)
                var$2 = var$8;
            var$3 = var$3.data;
            var$8 = 0;
            while (var$8 < var$2) {
                var$3[var$8] = var$12[var$8];
                var$8 = var$8 + 1 | 0;
            }
            var$2 = var$3.length;
            if (var$2 < 0)
                break;
            if (var$2 > (var$2 - 0 | 0))
                break;
            $output_0 = new jn_ByteBufferImpl;
            var$6 = 0 + var$2 | 0;
            $output_0.$mark = (-1);
            $output_0.$capacity = var$2;
            $output_0.$limit0 = var$2;
            $output_0.$order = jn_ByteOrder_BIG_ENDIAN;
            $output_0.$start0 = 0;
            $output_0.$bkArray = $rt_createByteArray(var$2);
            $result = new cgxgbtdt_Int8ArrayNative;
            $result.$buffer0 = new Int8Array(var$2);
            $output_0.$array = $result;
            var$4 = 0;
            while (var$4 < var$2) {
                var$14 = var$3[var$4];
                $result = $output_0.$array;
                cgxgbtdt_Int8ArrayNative_shouldRecreateBuffer($result);
                $result.$buffer0[var$4] = var$14;
                var$4 = var$4 + 1 | 0;
            }
            $output_0.$position0 = 0;
            $output_0.$limit0 = var$6;
            $output_0.$direct = 0;
            $output_0.$readOnly0 = 0;
            jn_Buffer_position($output_0, $output.$position0);
            $output = $output_0;
            continue;
        }
        var$2 = $result.$kind;
        var$8 = var$2 != 2 ? 0 : 1;
        if (!(!var$8 && !(var$2 != 3 ? 0 : 1) ? 0 : 1))
            continue;
        switch (var$2) {
            case 0:
                $in = new jnc_BufferUnderflowException;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $rt_throw($in);
            case 1:
                $in = new jnc_BufferOverflowException;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $rt_throw($in);
            case 2:
                $in = new jnc_MalformedInputException;
                var$8 = $result.$length3;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $in.$length5 = var$8;
                $rt_throw($in);
            case 3:
                $in = new jnc_UnmappableCharacterException;
                var$8 = $result.$length3;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $in.$length4 = var$8;
                $rt_throw($in);
            default:
        }
    }
    $in = new jl_IndexOutOfBoundsException;
    $in.$suppressionEnabled = 1;
    $in.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace($in);
    $rt_throw($in);
},
jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException),
jl_Error = $rt_classWithoutFields(jl_Throwable),
jl_AssertionError = $rt_classWithoutFields(jl_Error);
function cgt_Random() {
    let a = this; jl_Object.call(a);
    a.$haveNextNextGaussian = 0;
    a.$seedhi = 0.0;
    a.$seedlo = 0.0;
}
let cgt_Random_twoToTheXMinus24 = null,
cgt_Random_twoToTheXMinus48 = null,
cgt_Random_uniqueSeed = 0,
cgt_Random_nextInt = ($this, $n) => {
    let $bits, $val;
    if (($n & ( -$n | 0)) == $n)
        return $n * cgt_Random_nextInternal($this, 31) * 4.6566128730773926E-10 | 0;
    while (true) {
        $bits = cgt_Random_nextInternal($this, 31);
        $val = $bits % $n;
        if ($bits - $val + ($n - 1 | 0) < 0.0)
            continue;
        else
            break;
    }
    return $val | 0;
},
cgt_Random_setSeed = ($this, $seed) => {
    jl_Object_monitorEnterSync($this);
    try {
        cgt_Random_setSeed0($this, Long_lo(Long_shr($seed, 24)) & 16777215 ^ 1502, Long_lo(Long_and($seed, Long_fromInt(16777215))) ^ 15525485);
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cgt_Random_nextInternal = ($this, $bits) => {
    let $lo, $carry, $hi, $dval;
    jl_Object_monitorEnterSync($this);
    try {
        $lo = $this.$seedhi * 1.5525485E7;
        $carry = $this.$seedlo;
        $hi = $lo + $carry * 1502.0;
        $lo = $carry * 1.5525485E7 + 11.0;
        $carry = jl_Math_floor($lo * 5.9604644775390625E-8);
        $hi = $hi + $carry;
        $lo = $lo - $carry * 1.6777216E7;
        $hi = $hi % 1.6777216E7;
        $this.$seedhi = $hi;
        $this.$seedlo = $lo;
        if ($bits <= 24)
            return jl_Math_floor($hi * cgt_Random_twoToTheXMinus24.data[$bits]);
        $dval = $hi * (1 << ($bits - 24 | 0)) + jl_Math_floor($lo * cgt_Random_twoToTheXMinus48.data[$bits]);
        if ($dval >= 2.147483648E9)
            $dval = $dval - 4.294967296E9;
        return $dval;
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cgt_Random_setSeed0 = ($this, $seedhi, $seedlo) => {
    jl_Object_monitorEnterSync($this);
    try {
        $this.$seedhi = $seedhi ^ 1502;
        $this.$seedlo = $seedlo ^ 15525485;
        $this.$haveNextNextGaussian = 0;
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
cgt_Random__clinit_ = () => {
    let var$1, var$2, var$3, $twoToTheXMinus48Tmp, $i, $twoToTheXMinus24Tmp;
    var$1 = $rt_createDoubleArray(25);
    cgt_Random_twoToTheXMinus24 = var$1;
    var$2 = $rt_createDoubleArray(33);
    var$3 = var$2.data;
    cgt_Random_twoToTheXMinus48 = var$2;
    cgt_Random_uniqueSeed = 0;
    $twoToTheXMinus48Tmp = 1.52587890625E-5;
    $i = 32;
    while ($i >= 0) {
        var$3[$i] = $twoToTheXMinus48Tmp;
        $twoToTheXMinus48Tmp = $twoToTheXMinus48Tmp * 0.5;
        $i = $i + (-1) | 0;
    }
    var$1 = var$1.data;
    $twoToTheXMinus24Tmp = 1.0;
    $i = 24;
    while ($i >= 0) {
        var$1[$i] = $twoToTheXMinus24Tmp;
        $twoToTheXMinus24Tmp = $twoToTheXMinus24Tmp * 0.5;
        $i = $i + (-1) | 0;
    }
};
function jnc_CoderResult() {
    let a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length3 = 0;
}
let jnc_CoderResult_UNDERFLOW = null,
jnc_CoderResult_OVERFLOW = null,
jnc_CoderResult__clinit_ = () => {
    let var$1;
    var$1 = new jnc_CoderResult;
    var$1.$kind = 0;
    var$1.$length3 = 0;
    jnc_CoderResult_UNDERFLOW = var$1;
    var$1 = new jnc_CoderResult;
    var$1.$kind = 1;
    var$1.$length3 = 0;
    jnc_CoderResult_OVERFLOW = var$1;
};
function cbg_Graphics$BufferFormat() {
    let a = this; jl_Object.call(a);
    a.$r0 = 0;
    a.$g0 = 0;
    a.$b0 = 0;
    a.$a0 = 0;
    a.$depth = 0;
    a.$stencil0 = 0;
    a.$samples = 0;
    a.$coverageSampling = 0;
}
function cgtd_Base() {
    let a = this; jl_Object.call(a);
    a.$toEncoded = null;
    a.$fromEncoded = null;
    a.$paddingChar = 0;
    a.$positiveSign = 0;
    a.$negativeSign = 0;
    a.$caseInsensitive = 0;
    a.$base0 = 0;
    a.$length1Byte = 0;
    a.$length2Byte = 0;
    a.$length4Byte = 0;
    a.$length8Byte = 0;
    a.$progress = null;
}
let cgtd_Base_BASE2 = null,
cgtd_Base_BASE8 = null,
cgtd_Base_BASE10 = null,
cgtd_Base_BASE16 = null,
cgtd_Base_BASE36 = null,
cgtd_Base_BASE64 = null,
cgtd_Base_URI_SAFE = null,
cgtd_Base_SIMPLE64 = null,
cgtd_Base_BASE86 = null,
cgtd_Base_BASES = null,
cgtd_Base_long2D = null,
cgtd_Base_int2D = null,
cgtd_Base_short2D = null,
cgtd_Base_byte2D = null,
cgtd_Base_char2D = null,
cgtd_Base_double2D = null,
cgtd_Base_float2D = null,
cgtd_Base_$callClinit = () => {
    cgtd_Base_$callClinit = $rt_eraseClinit(cgtd_Base);
    cgtd_Base__clinit_();
},
cgtd_Base__init_0 = ($this, $digits, $caseInsensitive, $padding, $positiveSign, $negativeSign) => {
    let var$6, var$7, $i, $to, $logBase;
    cgtd_Base_$callClinit();
    $this.$paddingChar = $padding;
    $this.$caseInsensitive = $caseInsensitive;
    $this.$positiveSign = $positiveSign;
    $this.$negativeSign = $negativeSign;
    var$6 = $rt_createCharArray($digits.$nativeString.length);
    var$7 = var$6.data;
    $padding = 0;
    $positiveSign = var$7.length;
    while (true) {
        if ($padding >= $positiveSign) {
            $this.$toEncoded = var$6;
            $this.$base0 = $positiveSign;
            var$6 = $rt_createIntArray(128);
            var$7 = var$6.data;
            $this.$fromEncoded = var$6;
            $positiveSign = 0;
            $negativeSign = var$7.length;
            if ($positiveSign > $negativeSign) {
                $digits = new jl_IllegalArgumentException;
                $digits.$suppressionEnabled = 1;
                $digits.$writableStackTrace = 1;
                $rt_throw($digits);
            }
            while ($positiveSign < $negativeSign) {
                $i = $positiveSign + 1 | 0;
                var$7[$positiveSign] = (-1);
                $positiveSign = $i;
            }
            $i = 0;
            while (true) {
                $padding = $this.$base0;
                if ($i >= $padding)
                    break;
                $to = $this.$toEncoded.data[$i];
                var$6 = $this.$fromEncoded.data;
                var$6[$to & 127] = $i;
                if ($caseInsensitive) {
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                    }
                    var$6[jl_Character_mapChar(jl_Character_lowerCaseMapping, $to) & 65535 & 127] = $i;
                }
                $i = $i + 1 | 0;
            }
            $logBase = 1.0 / jl_Math_log($padding);
            $this.$length1Byte = jl_Math_ceil(jl_Math_log(256.0) * $logBase) | 0;
            $this.$length2Byte = jl_Math_ceil(jl_Math_log(65536.0) * $logBase) | 0;
            $this.$length4Byte = jl_Math_ceil(jl_Math_log(4.294967296E9) * $logBase) | 0;
            $caseInsensitive = jl_Math_ceil(jl_Math_log(1.8446744073709552E19) * $logBase) | 0;
            $this.$length8Byte = $caseInsensitive;
            $caseInsensitive = $caseInsensitive + 1 | 0;
            $padding = 32;
            if ($caseInsensitive > $padding)
                $padding = $caseInsensitive;
            $this.$progress = $rt_createCharArray($padding);
            return;
        }
        if ($padding < 0)
            break;
        if ($padding >= $digits.$nativeString.length)
            break;
        var$7[$padding] = $digits.$nativeString.charCodeAt($padding);
        $padding = $padding + 1 | 0;
    }
    $digits = new jl_StringIndexOutOfBoundsException;
    $digits.$suppressionEnabled = 1;
    $digits.$writableStackTrace = 1;
    $rt_throw($digits);
},
cgtd_Base__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cgtd_Base();
    cgtd_Base__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cgtd_Base_unsigned = ($this, $number) => {
    let var$2, $len, var$4, $halfBase, $i, var$7, var$8, $quotient, var$10, var$11, var$12;
    var$2 = $this.$length8Byte;
    $len = var$2 - 1 | 0;
    var$4 = $this.$base0;
    $halfBase = var$4 >>> 1 | 0;
    $i = 0;
    var$7 = Long_fromInt($halfBase);
    var$8 = Long_fromInt(var$4);
    while ($i <= $len) {
        $quotient = Long_div(Long_shru($number, 1), var$7);
        $this.$progress.data[$len - $i | 0] = $this.$toEncoded.data[Long_lo(Long_sub($number, Long_mul($quotient, var$8)))];
        $i = $i + 1 | 0;
        $number = $quotient;
    }
    var$10 = $this.$progress;
    var$11 = var$10.data;
    var$12 = new jl_String;
    $halfBase = var$11.length;
    if (var$2 >= 0 && var$2 <= ($halfBase - 0 | 0)) {
        var$12.$nativeString = $rt_charArrayToString(var$10.data, 0, var$2);
        return var$12;
    }
    var$12 = new jl_IndexOutOfBoundsException;
    var$12.$suppressionEnabled = 1;
    var$12.$writableStackTrace = 1;
    $rt_throw(var$12);
},
cgtd_Base_appendUnsigned = ($this, $builder, $number) => {
    let var$3, $len, var$5, $halfBase, $i, var$8, var$9, $quotient, var$11, var$12, var$13, var$14;
    var$3 = $this.$length8Byte;
    $len = var$3 - 1 | 0;
    var$5 = $this.$base0;
    $halfBase = var$5 >>> 1 | 0;
    $i = 0;
    var$8 = Long_fromInt($halfBase);
    var$9 = Long_fromInt(var$5);
    while ($i <= $len) {
        $quotient = Long_div(Long_shru($number, 1), var$8);
        $this.$progress.data[$len - $i | 0] = $this.$toEncoded.data[Long_lo(Long_sub($number, Long_mul($quotient, var$9)))];
        $i = $i + 1 | 0;
        $number = $quotient;
    }
    var$11 = $this.$progress;
    $halfBase = 0;
    $i = $builder.$length0;
    var$12 = $builder;
    jl_AbstractStringBuilder_insertSpace(var$12, $i, $i + var$3 | 0);
    $len = var$3 + $halfBase | 0;
    while ($halfBase < $len) {
        var$13 = var$11.data;
        var$14 = var$12.$buffer.data;
        var$5 = $i + 1 | 0;
        var$3 = $halfBase + 1 | 0;
        var$14[$i] = var$13[$halfBase];
        $i = var$5;
        $halfBase = var$3;
    }
    return $builder;
},
cgtd_Base_signed = ($this, $number) => {
    let $run, $sign, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $run = $this.$length8Byte;
    $sign = Long_shr($number, (-1));
    $number = Long_neg(Long_xor(Long_add($number, $sign), $sign));
    var$4 = $run;
    while (true) {
        var$5 = $this.$progress;
        var$6 = var$5.data;
        var$7 = $this.$toEncoded.data;
        var$8 = Long_fromInt($this.$base0);
        var$6[var$4] = var$7[Long_lo(Long_neg(Long_rem($number, var$8)))];
        $number = Long_div($number, var$8);
        if (Long_eq($number, Long_ZERO))
            break;
        var$4 = var$4 + (-1) | 0;
    }
    if (Long_ne($sign, Long_ZERO)) {
        var$4 = var$4 + (-1) | 0;
        var$6[var$4] = $this.$negativeSign;
    }
    var$9 = ($run + 1 | 0) - var$4 | 0;
    var$10 = new jl_String;
    $run = var$6.length;
    if (var$4 >= 0 && var$9 >= 0 && var$9 <= ($run - var$4 | 0)) {
        var$10.$nativeString = $rt_charArrayToString(var$5.data, var$4, var$9);
        return var$10;
    }
    var$10 = new jl_IndexOutOfBoundsException;
    var$10.$suppressionEnabled = 1;
    var$10.$writableStackTrace = 1;
    $rt_throw(var$10);
},
cgtd_Base_appendSigned = ($this, $builder, $number) => {
    let $run, $sign, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    $run = $this.$length8Byte;
    $sign = Long_shr($number, (-1));
    $number = Long_neg(Long_xor(Long_add($number, $sign), $sign));
    var$5 = $run;
    while (true) {
        var$6 = $this.$progress.data;
        var$7 = $this.$toEncoded.data;
        var$8 = Long_fromInt($this.$base0);
        var$6[var$5] = var$7[Long_lo(Long_neg(Long_rem($number, var$8)))];
        $number = Long_div($number, var$8);
        if (Long_eq($number, Long_ZERO))
            break;
        var$5 = var$5 + (-1) | 0;
    }
    if (Long_ne($sign, Long_ZERO)) {
        var$5 = var$5 + (-1) | 0;
        var$6[var$5] = $this.$negativeSign;
    }
    var$9 = ($run + 1 | 0) - var$5 | 0;
    $run = $builder.$length0;
    var$10 = $builder;
    jl_AbstractStringBuilder_insertSpace(var$10, $run, $run + var$9 | 0);
    var$11 = var$9 + var$5 | 0;
    while (var$5 < var$11) {
        var$7 = var$10.$buffer.data;
        var$12 = $run + 1 | 0;
        var$9 = var$5 + 1 | 0;
        var$7[$run] = var$6[var$5];
        $run = var$12;
        var$5 = var$9;
    }
    return $builder;
},
cgtd_Base_readInt = ($this, $cs, $start, $end) => {
    let $c, var$5, $h, $lim, $i, var$9;
    if ($start >= 0 && $end > 0 && ($end - $start | 0) > 0) {
        $cs = $cs;
        $c = $cs.$nativeString.length;
        if (($c - $start | 0) > 0 && $end <= $c) {
            if ($start >= 0 && $start < $cs.$nativeString.length) {
                $c = $cs.$nativeString.charCodeAt($start);
                if ($c == $this.$negativeSign) {
                    var$5 = (-1);
                    $h = 0;
                    $lim = $this.$length4Byte + 1 | 0;
                } else if ($c == $this.$positiveSign) {
                    var$5 = 1;
                    $h = 0;
                    $lim = $this.$length4Byte + 1 | 0;
                } else {
                    $h = $this.$fromEncoded.data[$c & 127];
                    if ($h < 0)
                        return 0;
                    var$5 = 1;
                    $lim = $this.$length4Byte;
                }
                $i = $start + 1 | 0;
                a: {
                    while ($i < $end && $i < ($start + $lim | 0)) {
                        var$9 = $this.$fromEncoded;
                        if ($i < 0)
                            break a;
                        if ($i >= $cs.$nativeString.length)
                            break a;
                        $c = var$9.data[$cs.$nativeString.charCodeAt($i) & 127];
                        if ($c < 0)
                            return $rt_imul($h, var$5);
                        $h = $rt_imul($h, $this.$base0) + $c | 0;
                        $i = $i + 1 | 0;
                    }
                    return $rt_imul($h, var$5);
                }
                $cs = new jl_StringIndexOutOfBoundsException;
                $cs.$suppressionEnabled = 1;
                $cs.$writableStackTrace = 1;
                $rt_throw($cs);
            }
            $cs = new jl_StringIndexOutOfBoundsException;
            $cs.$suppressionEnabled = 1;
            $cs.$writableStackTrace = 1;
            $rt_throw($cs);
        }
    }
    return 0;
},
cgtd_Base__clinit_ = () => {
    let var$1, var$2, var$3;
    cgtd_Base_BASE2 = cgtd_Base__init_($rt_s(632), 1, 36, 43, 45);
    cgtd_Base_BASE8 = cgtd_Base__init_($rt_s(633), 1, 36, 43, 45);
    cgtd_Base_BASE10 = cgtd_Base__init_($rt_s(634), 1, 36, 43, 45);
    cgtd_Base_BASE16 = cgtd_Base__init_($rt_s(635), 1, 112, 43, 45);
    cgtd_Base_BASE36 = cgtd_Base__init_($rt_s(636), 1, 36, 43, 45);
    cgtd_Base_BASE64 = cgtd_Base__init_($rt_s(637), 0, 61, 42, 45);
    cgtd_Base_URI_SAFE = cgtd_Base__init_($rt_s(638), 0, 36, 42, 33);
    cgtd_Base_SIMPLE64 = cgtd_Base__init_($rt_s(639), 0, 36, 43, 45);
    var$1 = cgtd_Base__init_($rt_s(640), 0, 92, 43, 45);
    cgtd_Base_BASE86 = var$1;
    var$2 = $rt_createArray(cgtd_Base, 9);
    var$3 = var$2.data;
    var$3[0] = cgtd_Base_BASE2;
    var$3[1] = cgtd_Base_BASE8;
    var$3[2] = cgtd_Base_BASE10;
    var$3[3] = cgtd_Base_BASE16;
    var$3[4] = cgtd_Base_BASE36;
    var$3[5] = cgtd_Base_BASE64;
    var$3[6] = cgtd_Base_URI_SAFE;
    var$3[7] = cgtd_Base_SIMPLE64;
    var$3[8] = var$1;
    var$1 = new ju_Arrays$ArrayAsList;
    var$1.$array7 = var$2;
    cgtd_Base_BASES = var$1;
    cgtd_Base_long2D = $rt_createLongMultiArray([0, 0]);
    cgtd_Base_int2D = $rt_createIntMultiArray([0, 0]);
    cgtd_Base_short2D = $rt_createShortMultiArray([0, 0]);
    cgtd_Base_byte2D = $rt_createByteMultiArray([0, 0]);
    cgtd_Base_char2D = $rt_createCharMultiArray([0, 0]);
    cgtd_Base_double2D = $rt_createDoubleMultiArray([0, 0]);
    cgtd_Base_float2D = $rt_createFloatMultiArray([0, 0]);
},
cgtd_TextTools = $rt_classWithoutFields(),
cgtd_TextTools_safeSubstring = ($source, $beginIndex, $endIndex) => {
    if ($source !== null && !($source.$nativeString.length ? 0 : 1)) {
        if ($beginIndex < 0)
            $beginIndex = 0;
        if (!($endIndex >= 0 && $endIndex <= $source.$nativeString.length))
            $endIndex = $source.$nativeString.length;
        if ($beginIndex < $endIndex)
            return jl_String_substring($source, $beginIndex, $endIndex);
        return $rt_s(40);
    }
    return $rt_s(40);
},
jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error),
ji_InputStream = $rt_classWithoutFields();
function ju_Arrays$ArrayAsList() {
    ju_AbstractList.call(this);
    this.$array7 = null;
}
function jnci_BufferedDecoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in = null;
    a.$out1 = null;
    a.$inPosition0 = 0;
    a.$outPosition = 0;
}
let cbggg_HdpiUtils = $rt_classWithoutFields(),
cbggg_HdpiUtils_mode = null,
cbggg_HdpiUtils_$callClinit = () => {
    cbggg_HdpiUtils_$callClinit = $rt_eraseClinit(cbggg_HdpiUtils);
    cbggg_HdpiUtils__clinit_();
},
cbggg_HdpiUtils_glViewport = ($x, $y, $width, $height) => {
    cbggg_HdpiUtils_$callClinit();
    a: {
        b: {
            if (cbggg_HdpiUtils_mode === cbggg_HdpiMode_Logical) {
                if (cbg_Gdx_graphics.$canvas.width != cbg_Gdx_graphics.$canvas.width)
                    break b;
                if (cbg_Gdx_graphics.$canvas.height != cbg_Gdx_graphics.$canvas.height)
                    break b;
            }
            cbg_Gdx_gl.$glViewport($x, $y, $width, $height);
            break a;
        }
        cbg_Gdx_gl.$glViewport($rt_imul($x, cbg_Gdx_graphics.$canvas.width) / cbg_Gdx_graphics.$canvas.width | 0, $rt_imul($y, cbg_Gdx_graphics.$canvas.height) / cbg_Gdx_graphics.$canvas.height | 0, $rt_imul($width, cbg_Gdx_graphics.$canvas.width) / cbg_Gdx_graphics.$canvas.width | 0, $rt_imul($height, cbg_Gdx_graphics.$canvas.height) / cbg_Gdx_graphics.$canvas.height | 0);
    }
},
cbggg_HdpiUtils__clinit_ = () => {
    cbggg_HdpiUtils_mode = cbggg_HdpiMode_Logical;
},
cgtd_BitConversion = $rt_classWithoutFields(),
jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length5 = 0;
}
let jnc_MalformedInputException_getMessage = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$length5;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(641);
    jl_AbstractStringBuilder_insert(var$4, var$3, var$5);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$1, 10);
    var$6 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$3 = var$2.$length0;
    var$9 = var$8.length;
    if (var$3 >= 0 && var$3 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$3);
        return var$6;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
};
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length4 = 0;
}
let jnc_UnmappableCharacterException_getMessage = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = $this.$length4;
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$3 = var$2.$length0;
    var$4 = var$2;
    var$5 = $rt_s(642);
    jl_AbstractStringBuilder_insert(var$4, var$3, var$5);
    jl_AbstractStringBuilder_insert0(var$2, var$2.$length0, var$1, 10);
    var$6 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$3 = var$2.$length0;
    var$9 = var$8.length;
    if (var$3 >= 0 && var$3 <= (var$9 - 0 | 0)) {
        var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$3);
        return var$6;
    }
    var$2 = new jl_IndexOutOfBoundsException;
    var$2.$suppressionEnabled = 1;
    var$2.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$2);
    $rt_throw(var$2);
},
cgtd_RyuDouble = $rt_classWithoutFields(),
cgtd_RyuDouble_POW5_SPLIT = null,
cgtd_RyuDouble_POW5_INV_SPLIT = null,
cgtd_RyuDouble_result = null,
cgtd_RyuDouble_$callClinit = () => {
    cgtd_RyuDouble_$callClinit = $rt_eraseClinit(cgtd_RyuDouble);
    cgtd_RyuDouble__clinit_();
},
cgtd_RyuDouble_general = ($value, $result, $low, $high, $scientificChar) => {
    let $bits, $idx, $ieeeExponent, $m2, $e2, $sign, $even, $mv, $mp, $mmShift, $mm, $dmIsTrailingZeros, $dvIsTrailingZeros, $q, $i, $j, $dv, $dp, $dm, $q_0, $vplength, $exp, $scientificNotation, $removed, $lastRemovedDigit, $output, var$32, $i_0, $current, $c;
    cgtd_RyuDouble_$callClinit();
    if (isNaN($value) ? 1 : 0) {
        $result = $result.data;
        $result[0] = 78;
        $result[1] = 97;
        $result[2] = 78;
        return 3;
    }
    if ($value !== Infinity && $value !== (-Infinity)) {
        $bits = !(isNaN($value) ? 1 : 0) ? $rt_doubleToRawLongBits($value) : Long_create(0, 2146959360);
        $idx = Long_compare($bits, Long_ZERO);
        if (!$idx) {
            $result = $result.data;
            $result[0] = 48;
            $result[1] = 46;
            $result[2] = 48;
            return 3;
        }
        if (Long_eq($bits, Long_create(0, 2147483648))) {
            $result = $result.data;
            $result[0] = 45;
            $result[1] = 48;
            $result[2] = 46;
            $result[3] = 48;
            return 4;
        }
        $ieeeExponent = Long_lo(Long_and(Long_shru($bits, 52), Long_fromInt(2047)));
        $m2 = Long_and($bits, Long_create(4294967295, 1048575));
        if (!$ieeeExponent)
            $e2 = (-1074);
        else {
            $e2 = ($ieeeExponent - 1023 | 0) - 52 | 0;
            $m2 = Long_or($m2, Long_create(0, 1048576));
        }
        $sign = $idx >= 0 ? 0 : 1;
        $even = Long_ne(Long_and($m2, Long_fromInt(1)), Long_ZERO) ? 0 : 1;
        $mv = Long_mul(Long_fromInt(4), $m2);
        $mp = Long_add($mv, Long_fromInt(2));
        $mmShift = Long_eq($m2, Long_create(0, 1048576)) && $ieeeExponent != 1 ? 0 : 1;
        $mm = Long_sub(Long_sub($mv, Long_fromInt(1)), Long_fromInt($mmShift));
        $idx = $e2 + (-2) | 0;
        $dmIsTrailingZeros = 0;
        $dvIsTrailingZeros = 0;
        if ($idx < 0) {
            $ieeeExponent =  -$idx | 0;
            $q = ($rt_imul($ieeeExponent, 732923) >>> 20 | 0) - 1 | 0;
            if (0 > $q)
                $q = 0;
            $i = $ieeeExponent - $q | 0;
            $j = $q - ((($rt_imul($i, 1217359) >>> 19 | 0) + 1 | 0) - 121 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5divPow2($mv, $i, $j);
            $dp = cgtd_RyuDouble_mulPow5divPow2($mp, $i, $j);
            $dm = cgtd_RyuDouble_mulPow5divPow2($mm, $i, $j);
            $q_0 = $q + $idx | 0;
            if ($q <= 1) {
                $dvIsTrailingZeros = 1;
                if (!$even)
                    $dp = Long_sub($dp, Long_fromInt(1));
                else
                    $dmIsTrailingZeros = $mmShift != 1 ? 0 : 1;
            } else if ($q < 63)
                $dvIsTrailingZeros = Long_ne(Long_and($mv, Long_sub(Long_shl(Long_fromInt(1), $q - 1 | 0), Long_fromInt(1))), Long_ZERO) ? 0 : 1;
        } else {
            $q_0 = (($idx * 78913 | 0) >>> 18 | 0) - 1 | 0;
            if (0 > $q_0)
                $q_0 = 0;
            $i = (( -$idx | 0) + $q_0 | 0) + ((122 + (($rt_imul($q_0, 1217359) >>> 19 | 0) + 1 | 0) | 0) - 1 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5InvDivPow2($mv, $q_0, $i);
            $dp = cgtd_RyuDouble_mulPow5InvDivPow2($mp, $q_0, $i);
            $dm = cgtd_RyuDouble_mulPow5InvDivPow2($mm, $q_0, $i);
            if ($q_0 <= 21) {
                if (Long_eq(Long_rem($mv, Long_fromInt(5)), Long_ZERO))
                    $dvIsTrailingZeros = cgtd_RyuDouble_pow5Factor($mv) < $q_0 ? 0 : 1;
                else if ($even)
                    $dmIsTrailingZeros = cgtd_RyuDouble_pow5Factor($mm) < $q_0 ? 0 : 1;
                else if (cgtd_RyuDouble_pow5Factor($mp) < $q_0 ? 0 : 1)
                    $dp = Long_sub($dp, Long_fromInt(1));
            }
        }
        $vplength = cgtd_RyuDouble_decimalLength($dp);
        $exp = ($q_0 + $vplength | 0) - 1 | 0;
        $scientificNotation = $exp >= $low && $exp < $high ? 0 : 1;
        $removed = 0;
        $lastRemovedDigit = 0;
        if (!$dmIsTrailingZeros && !$dvIsTrailingZeros) {
            a: {
                while (true) {
                    $m2 = Long_div($dp, Long_fromInt(10));
                    $mm = Long_div($dm, Long_fromInt(10));
                    if (Long_le($m2, $mm))
                        break a;
                    if (Long_lt($dp, Long_fromInt(100)) && $scientificNotation)
                        break;
                    $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                    $dv = Long_div($dv, Long_fromInt(10));
                    $removed = $removed + 1 | 0;
                    $dp = $m2;
                    $dm = $mm;
                }
            }
            $output = Long_add($dv, Long_fromInt(Long_ne($dv, $dm) && $lastRemovedDigit < 5 ? 0 : 1));
        } else {
            b: {
                while (true) {
                    $m2 = Long_div($dp, Long_fromInt(10));
                    $mm = Long_div($dm, Long_fromInt(10));
                    if (Long_le($m2, $mm))
                        break b;
                    if (Long_lt($dp, Long_fromInt(100)) && $scientificNotation)
                        break;
                    $dmIsTrailingZeros = $dmIsTrailingZeros & (Long_ne(Long_rem($dm, Long_fromInt(10)), Long_ZERO) ? 0 : 1);
                    $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                    $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                    $dv = Long_div($dv, Long_fromInt(10));
                    $removed = $removed + 1 | 0;
                    $dp = $m2;
                    $dm = $mm;
                }
            }
            c: {
                if ($dmIsTrailingZeros)
                    while (Long_eq(Long_rem($dm, Long_fromInt(10)), Long_ZERO)) {
                        if (Long_lt($dp, Long_fromInt(100)) && $scientificNotation)
                            break c;
                        $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                        $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                        $dp = Long_div($dp, Long_fromInt(10));
                        $dv = Long_div($dv, Long_fromInt(10));
                        $dm = Long_div($dm, Long_fromInt(10));
                        $removed = $removed + 1 | 0;
                    }
            }
            if ($dvIsTrailingZeros && $lastRemovedDigit == 5 && Long_eq(Long_and($dv, Long_fromInt(1)), Long_ZERO))
                $lastRemovedDigit = 4;
            $output = Long_add($dv, Long_fromInt(!(Long_eq($dv, $dm) && !$dmIsTrailingZeros) && $lastRemovedDigit < 5 ? 0 : 1));
        }
        $i = $vplength - $removed | 0;
        if (!$sign)
            $low = 0;
        else {
            var$32 = $result.data;
            $low = 1;
            var$32[0] = 45;
        }
        if (!$scientificNotation) {
            if ($exp < 0) {
                $result = $result.data;
                $high = $low + 1 | 0;
                $result[$low] = 48;
                $scientificChar = $high + 1 | 0;
                $result[$high] = 46;
                $i_0 = (-1);
                while ($i_0 > $exp) {
                    $low = $scientificChar + 1 | 0;
                    $result[$scientificChar] = 48;
                    $i_0 = $i_0 + (-1) | 0;
                    $scientificChar = $low;
                }
                $i_0 = 0;
                $low = $scientificChar;
                while ($i_0 < $i) {
                    $result[(($scientificChar + $i | 0) - $i_0 | 0) - 1 | 0] = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
                    $output = Long_div($output, Long_fromInt(10));
                    $low = $low + 1 | 0;
                    $i_0 = $i_0 + 1 | 0;
                }
            } else {
                $high = $exp + 1 | 0;
                if ($high >= $i) {
                    $i_0 = 0;
                    while ($i_0 < $i) {
                        $result.data[(($low + $i | 0) - $i_0 | 0) - 1 | 0] = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
                        $output = Long_div($output, Long_fromInt(10));
                        $i_0 = $i_0 + 1 | 0;
                    }
                    $low = $low + $i | 0;
                    while ($i < $high) {
                        var$32 = $result.data;
                        $scientificChar = $low + 1 | 0;
                        var$32[$low] = 48;
                        $i = $i + 1 | 0;
                        $low = $scientificChar;
                    }
                    $result = $result.data;
                    $high = $low + 1 | 0;
                    $result[$low] = 46;
                    $low = $high + 1 | 0;
                    $result[$high] = 48;
                } else {
                    $current = $low + 1 | 0;
                    $i_0 = 0;
                    while ($i_0 < $i) {
                        if ((($i - $i_0 | 0) - 1 | 0) == $exp) {
                            $result.data[(($current + $i | 0) - $i_0 | 0) - 1 | 0] = 46;
                            $current = $current + (-1) | 0;
                        }
                        $result.data[(($current + $i | 0) - $i_0 | 0) - 1 | 0] = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
                        $output = Long_div($output, Long_fromInt(10));
                        $i_0 = $i_0 + 1 | 0;
                    }
                    $low = $low + ($i + 1 | 0) | 0;
                }
            }
        } else {
            $i_0 = 0;
            $idx = $i - 1 | 0;
            while ($i_0 < $idx) {
                var$32 = $result.data;
                $c = Long_lo(Long_rem($output, Long_fromInt(10)));
                $output = Long_div($output, Long_fromInt(10));
                var$32[($low + $i | 0) - $i_0 | 0] = (48 + $c | 0) & 65535;
                $i_0 = $i_0 + 1 | 0;
            }
            $result = $result.data;
            $result[$low] = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
            $result[$low + 1 | 0] = 46;
            $low = $low + ($i + 1 | 0) | 0;
            if ($i != 1)
                $high = $low;
            else {
                $high = $low + 1 | 0;
                $result[$low] = 48;
            }
            $low = $high + 1 | 0;
            $result[$high] = $scientificChar;
            if ($exp >= 0)
                $high = $low;
            else {
                $high = $low + 1 | 0;
                $result[$low] = 45;
                $exp =  -$exp | 0;
            }
            if ($exp >= 100) {
                $low = $high + 1 | 0;
                $result[$high] = (48 + ($exp / 100 | 0) | 0) & 65535;
                $exp = $exp % 100 | 0;
                $scientificChar = $low + 1 | 0;
                $result[$low] = (48 + ($exp / 10 | 0) | 0) & 65535;
            } else if ($exp < 10)
                $scientificChar = $high;
            else {
                $scientificChar = $high + 1 | 0;
                $result[$high] = (48 + ($exp / 10 | 0) | 0) & 65535;
            }
            $low = $scientificChar + 1 | 0;
            $result[$scientificChar] = (48 + ($exp % 10 | 0) | 0) & 65535;
        }
        return $low;
    }
    if ($value !== (-Infinity))
        $low = 0;
    else {
        var$32 = $result.data;
        $low = 1;
        var$32[0] = 45;
    }
    $result = $result.data;
    $high = $low + 1 | 0;
    $result[$low] = 73;
    $low = $high + 1 | 0;
    $result[$high] = 110;
    $high = $low + 1 | 0;
    $result[$low] = 102;
    $low = $high + 1 | 0;
    $result[$high] = 105;
    $high = $low + 1 | 0;
    $result[$low] = 110;
    $low = $high + 1 | 0;
    $result[$high] = 105;
    $high = $low + 1 | 0;
    $result[$low] = 116;
    $low = $high + 1 | 0;
    $result[$high] = 121;
    return $low;
},
cgtd_RyuDouble_appendDecimal = ($builder, $value, $lengthLimit, $precision) => {
    let var$5, $mmShift, $bits, $ideal, $vplength, $ieeeExponent, $m2, $e2, $sign, $even, $mv, $mp, $mm, $dmIsTrailingZeros, $dvIsTrailingZeros, $i, $q, $j, $dv, $dp, $dm, $q_0, $exp, $removed, $lastRemovedDigit, $output, var$31, $i_0, $postDot, $decimalPlaces;
    cgtd_RyuDouble_$callClinit();
    if (isNaN($value) ? 1 : 0) {
        a: {
            $precision = $builder.$length0;
            var$5 = $builder;
            jl_AbstractStringBuilder_insert(var$5, $precision, $rt_s(643));
            if ($lengthLimit != (-10000)) {
                if (Long_lt(Long_add(Long_fromInt($precision), Long_fromInt($lengthLimit)), Long_fromInt($builder.$length0)))
                    $builder.$length0 = $precision + $lengthLimit | 0;
                else {
                    $lengthLimit = $precision + $lengthLimit | 0;
                    while (true) {
                        $mmShift = $builder.$length0;
                        if ($mmShift >= $lengthLimit)
                            break a;
                        jl_AbstractStringBuilder_insertSpace(var$5, $mmShift, $mmShift + 1 | 0);
                        var$5.$buffer.data[$mmShift] = 32;
                    }
                }
            }
        }
        return $builder;
    }
    if ($value !== Infinity && $value !== (-Infinity)) {
        $bits = !(isNaN($value) ? 1 : 0) ? $rt_doubleToRawLongBits($value) : Long_create(0, 2146959360);
        $mmShift = Long_compare($bits, Long_ZERO);
        if (!$mmShift) {
            b: {
                $mmShift = $builder.$length0;
                var$5 = $builder;
                jl_AbstractStringBuilder_insert(var$5, $mmShift, $rt_s(644));
                if ($precision >= 0) {
                    $ideal = jl_AbstractStringBuilder_indexOf($builder, $rt_s(168), $mmShift) + $precision | 0;
                    while (true) {
                        $vplength = $builder.$length0;
                        if ($vplength > $ideal)
                            break b;
                        jl_AbstractStringBuilder_insertSpace(var$5, $vplength, $vplength + 1 | 0);
                        var$5.$buffer.data[$vplength] = 48;
                    }
                }
            }
            c: {
                if ($lengthLimit != (-10000)) {
                    if (Long_lt(Long_add(Long_fromInt($mmShift), Long_fromInt($lengthLimit)), Long_fromInt($builder.$length0)))
                        $builder.$length0 = $mmShift + $lengthLimit | 0;
                    else {
                        $lengthLimit = $mmShift + $lengthLimit | 0;
                        while (true) {
                            $mmShift = $builder.$length0;
                            if ($mmShift >= $lengthLimit)
                                break c;
                            jl_AbstractStringBuilder_insertSpace(var$5, $mmShift, $mmShift + 1 | 0);
                            var$5.$buffer.data[$mmShift] = 48;
                        }
                    }
                }
            }
            return $builder;
        }
        if (Long_eq($bits, Long_create(0, 2147483648))) {
            d: {
                $precision = $builder.$length0;
                var$5 = $builder;
                jl_AbstractStringBuilder_insert(var$5, $precision, $rt_s(645));
                if ($lengthLimit != (-10000)) {
                    if (Long_lt(Long_add(Long_fromInt($precision), Long_fromInt($lengthLimit)), Long_fromInt($builder.$length0)))
                        $builder.$length0 = $precision + $lengthLimit | 0;
                    else {
                        $lengthLimit = $precision + $lengthLimit | 0;
                        while (true) {
                            $mmShift = $builder.$length0;
                            if ($mmShift >= $lengthLimit)
                                break d;
                            jl_AbstractStringBuilder_insertSpace(var$5, $mmShift, $mmShift + 1 | 0);
                            var$5.$buffer.data[$mmShift] = 48;
                        }
                    }
                }
            }
            return $builder;
        }
        $ieeeExponent = Long_lo(Long_and(Long_shru($bits, 52), Long_fromInt(2047)));
        $m2 = Long_and($bits, Long_create(4294967295, 1048575));
        if (!$ieeeExponent)
            $e2 = (-1074);
        else {
            $e2 = ($ieeeExponent - 1023 | 0) - 52 | 0;
            $m2 = Long_or($m2, Long_create(0, 1048576));
        }
        $sign = $mmShift >= 0 ? 0 : 1;
        $even = Long_ne(Long_and($m2, Long_fromInt(1)), Long_ZERO) ? 0 : 1;
        $mv = Long_mul(Long_fromInt(4), $m2);
        $mp = Long_add($mv, Long_fromInt(2));
        $mmShift = Long_eq($m2, Long_create(0, 1048576)) && $ieeeExponent != 1 ? 0 : 1;
        $mm = Long_sub(Long_sub($mv, Long_fromInt(1)), Long_fromInt($mmShift));
        $vplength = $e2 + (-2) | 0;
        $dmIsTrailingZeros = 0;
        $dvIsTrailingZeros = 0;
        if ($vplength < 0) {
            $i =  -$vplength | 0;
            $q = ($rt_imul($i, 732923) >>> 20 | 0) - 1 | 0;
            if (0 > $q)
                $q = 0;
            $i = $i - $q | 0;
            $j = $q - ((($rt_imul($i, 1217359) >>> 19 | 0) + 1 | 0) - 121 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5divPow2($mv, $i, $j);
            $dp = cgtd_RyuDouble_mulPow5divPow2($mp, $i, $j);
            $dm = cgtd_RyuDouble_mulPow5divPow2($mm, $i, $j);
            $q_0 = $q + $vplength | 0;
            if ($q <= 1) {
                $dvIsTrailingZeros = 1;
                if (!$even)
                    $dp = Long_sub($dp, Long_fromInt(1));
                else
                    $dmIsTrailingZeros = $mmShift != 1 ? 0 : 1;
            } else if ($q < 63)
                $dvIsTrailingZeros = Long_ne(Long_and($mv, Long_sub(Long_shl(Long_fromInt(1), $q - 1 | 0), Long_fromInt(1))), Long_ZERO) ? 0 : 1;
        } else {
            $q_0 = (($vplength * 78913 | 0) >>> 18 | 0) - 1 | 0;
            if (0 > $q_0)
                $q_0 = 0;
            $i = (( -$vplength | 0) + $q_0 | 0) + ((122 + (($rt_imul($q_0, 1217359) >>> 19 | 0) + 1 | 0) | 0) - 1 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5InvDivPow2($mv, $q_0, $i);
            $dp = cgtd_RyuDouble_mulPow5InvDivPow2($mp, $q_0, $i);
            $dm = cgtd_RyuDouble_mulPow5InvDivPow2($mm, $q_0, $i);
            if ($q_0 <= 21) {
                if (Long_eq(Long_rem($mv, Long_fromInt(5)), Long_ZERO))
                    $dvIsTrailingZeros = cgtd_RyuDouble_pow5Factor($mv) < $q_0 ? 0 : 1;
                else if ($even)
                    $dmIsTrailingZeros = cgtd_RyuDouble_pow5Factor($mm) < $q_0 ? 0 : 1;
                else if (cgtd_RyuDouble_pow5Factor($mp) < $q_0 ? 0 : 1)
                    $dp = Long_sub($dp, Long_fromInt(1));
            }
        }
        $vplength = cgtd_RyuDouble_decimalLength($dp);
        $exp = ($q_0 + $vplength | 0) - 1 | 0;
        $removed = 0;
        $lastRemovedDigit = 0;
        if (!$dmIsTrailingZeros && !$dvIsTrailingZeros) {
            while (true) {
                $dp = Long_div($dp, Long_fromInt(10));
                $mp = Long_div($dm, Long_fromInt(10));
                if (Long_le($dp, $mp))
                    break;
                $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                $dv = Long_div($dv, Long_fromInt(10));
                $removed = $removed + 1 | 0;
                $dm = $mp;
            }
            $output = Long_add($dv, Long_fromInt(Long_ne($dv, $dm) && $lastRemovedDigit < 5 ? 0 : 1));
        } else {
            while (true) {
                $dp = Long_div($dp, Long_fromInt(10));
                $m2 = Long_div($dm, Long_fromInt(10));
                if (Long_le($dp, $m2))
                    break;
                $dmIsTrailingZeros = $dmIsTrailingZeros & (Long_ne(Long_rem($dm, Long_fromInt(10)), Long_ZERO) ? 0 : 1);
                $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                $dv = Long_div($dv, Long_fromInt(10));
                $removed = $removed + 1 | 0;
                $dm = $m2;
            }
            if ($dmIsTrailingZeros)
                while (Long_eq(Long_rem($dm, Long_fromInt(10)), Long_ZERO)) {
                    $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                    $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                    $dv = Long_div($dv, Long_fromInt(10));
                    $dm = Long_div($dm, Long_fromInt(10));
                    $removed = $removed + 1 | 0;
                }
            if ($dvIsTrailingZeros && $lastRemovedDigit == 5 && Long_eq(Long_and($dv, Long_fromInt(1)), Long_ZERO))
                $lastRemovedDigit = 4;
            $output = Long_add($dv, Long_fromInt(!(Long_eq($dv, $dm) && !$dmIsTrailingZeros) && $lastRemovedDigit < 5 ? 0 : 1));
        }
        $i = $vplength - $removed | 0;
        $mmShift = $builder.$length0;
        if ($sign) {
            var$31 = $builder;
            jl_AbstractStringBuilder_insertSpace(var$31, $mmShift, $mmShift + 1 | 0);
            var$31.$buffer.data[$mmShift] = 45;
        }
        if ($exp >= 0) {
            $vplength = $exp + 1 | 0;
            if ($vplength >= $i) {
                $q_0 = $builder.$length0;
                $i_0 = 0;
                $dvIsTrailingZeros = $q_0 + 1 | 0;
                while ($i_0 < $i) {
                    $dmIsTrailingZeros = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
                    jl_AbstractStringBuilder_insertSpace($builder, $q_0, $dvIsTrailingZeros);
                    $builder.$buffer.data[$q_0] = $dmIsTrailingZeros;
                    $output = Long_div($output, Long_fromInt(10));
                    $i_0 = $i_0 + 1 | 0;
                }
                var$5 = $builder;
                while ($i < $vplength) {
                    $dvIsTrailingZeros = $builder.$length0;
                    jl_AbstractStringBuilder_insertSpace(var$5, $dvIsTrailingZeros, $dvIsTrailingZeros + 1 | 0);
                    var$5.$buffer.data[$dvIsTrailingZeros] = 48;
                    $i = $i + 1 | 0;
                }
                jl_AbstractStringBuilder_insert(var$5, $builder.$length0, $rt_s(646));
            } else {
                $q_0 = $builder.$length0;
                $postDot = $precision >= 0 ? $exp + $precision | 0 : 1023;
                $i_0 = 0;
                $dvIsTrailingZeros = $q_0 + 1 | 0;
                while ($i_0 < $i) {
                    $vplength = ($i - $i_0 | 0) - 1 | 0;
                    if ($vplength == $exp) {
                        jl_AbstractStringBuilder_insertSpace($builder, $q_0, $dvIsTrailingZeros);
                        $builder.$buffer.data[$q_0] = 46;
                    }
                    if ($vplength > $postDot)
                        $removed = $removed + 1 | 0;
                    else {
                        $vplength = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
                        jl_AbstractStringBuilder_insertSpace($builder, $q_0, $dvIsTrailingZeros);
                        $builder.$buffer.data[$q_0] = $vplength;
                    }
                    $output = Long_div($output, Long_fromInt(10));
                    $i_0 = $i_0 + 1 | 0;
                }
            }
        } else {
            $vplength = $builder.$length0;
            var$5 = $builder;
            jl_AbstractStringBuilder_insert(var$5, $vplength, $rt_s(647));
            $q_0 = $builder.$length0;
            $decimalPlaces = $precision >= 0 ? $precision : 1023;
            $i_0 = (-1);
            while ($i_0 > $exp && $decimalPlaces) {
                $dmIsTrailingZeros = $builder.$length0;
                jl_AbstractStringBuilder_insertSpace(var$5, $dmIsTrailingZeros, $dmIsTrailingZeros + 1 | 0);
                var$5.$buffer.data[$dmIsTrailingZeros] = 48;
                $i_0 = $i_0 + (-1) | 0;
                $decimalPlaces = $decimalPlaces + (-1) | 0;
            }
            $dvIsTrailingZeros = $builder.$length0;
            $i_0 = 0;
            $dmIsTrailingZeros = $dvIsTrailingZeros + 1 | 0;
            while ($i_0 < $i) {
                $vplength = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
                jl_AbstractStringBuilder_insertSpace($builder, $dvIsTrailingZeros, $dmIsTrailingZeros);
                $builder.$buffer.data[$dvIsTrailingZeros] = $vplength;
                $output = Long_div($output, Long_fromInt(10));
                $i_0 = $i_0 + 1 | 0;
                $decimalPlaces = $decimalPlaces + (-1) | 0;
            }
            $i = 0;
            while ($i < $decimalPlaces) {
                $dmIsTrailingZeros = $builder.$length0;
                jl_AbstractStringBuilder_insertSpace(var$5, $dmIsTrailingZeros, $dmIsTrailingZeros + 1 | 0);
                var$5.$buffer.data[$dmIsTrailingZeros] = 48;
                $i = $i + 1 | 0;
            }
            if ($precision >= 0)
                $builder.$length0 = $q_0 + $precision | 0;
        }
        e: {
            if ($precision >= 0) {
                $ideal = jl_AbstractStringBuilder_indexOf($builder, $rt_s(168), $mmShift) + $precision | 0;
                var$31 = $builder;
                while (true) {
                    $vplength = $builder.$length0;
                    if ($vplength > $ideal)
                        break e;
                    jl_AbstractStringBuilder_insertSpace(var$31, $vplength, $vplength + 1 | 0);
                    var$31.$buffer.data[$vplength] = 48;
                }
            }
        }
        if ($lengthLimit != (-10000)) {
            var$31 = $builder;
            while ($removed >= (-1)) {
                $vplength = $builder.$length0;
                jl_AbstractStringBuilder_insertSpace(var$31, $vplength, $vplength + 1 | 0);
                var$31.$buffer.data[$vplength] = 48;
                $removed = $removed + (-1) | 0;
            }
            if (Long_lt(Long_add(Long_fromInt($mmShift), Long_fromInt($lengthLimit)), Long_fromInt($builder.$length0)))
                $builder.$length0 = $mmShift + $lengthLimit | 0;
        }
        return $builder;
    }
    $precision = $builder.$length0;
    if ($value !== (-Infinity))
        jl_AbstractStringBuilder_insert($builder, $precision, $rt_s(648));
    else
        jl_AbstractStringBuilder_insert($builder, $precision, $rt_s(649));
    f: {
        if ($lengthLimit != (-10000)) {
            if (Long_lt(Long_add(Long_fromInt($precision), Long_fromInt($lengthLimit)), Long_fromInt($builder.$length0)))
                $builder.$length0 = $precision + $lengthLimit | 0;
            else {
                $lengthLimit = $precision + $lengthLimit | 0;
                var$31 = $builder;
                while (true) {
                    $mmShift = $builder.$length0;
                    if ($mmShift >= $lengthLimit)
                        break f;
                    jl_AbstractStringBuilder_insertSpace(var$31, $mmShift, $mmShift + 1 | 0);
                    var$31.$buffer.data[$mmShift] = 32;
                }
            }
        }
    }
    return $builder;
},
cgtd_RyuDouble_scientific = ($value, $result, $scientificChar) => {
    let $bits, $idx, $ieeeExponent, $m2, $e2, $sign, $even, $mv, $mp, $mmShift, $mm, $dmIsTrailingZeros, $dvIsTrailingZeros, $q, $i, $j, $dv, $dp, $dm, $q_0, $vplength, $exp, $removed, $lastRemovedDigit, $output, $olength, var$30, $c;
    cgtd_RyuDouble_$callClinit();
    if (isNaN($value) ? 1 : 0) {
        $result = $result.data;
        $result[0] = 78;
        $result[1] = 97;
        $result[2] = 78;
        return 3;
    }
    if ($value !== Infinity && $value !== (-Infinity)) {
        $bits = !(isNaN($value) ? 1 : 0) ? $rt_doubleToRawLongBits($value) : Long_create(0, 2146959360);
        $idx = Long_compare($bits, Long_ZERO);
        if (!$idx) {
            $result = $result.data;
            $result[0] = 48;
            $result[1] = 46;
            $result[2] = 48;
            $result[3] = $scientificChar;
            $result[4] = 48;
            return 5;
        }
        if (Long_eq($bits, Long_create(0, 2147483648))) {
            $result = $result.data;
            $result[0] = 45;
            $result[1] = 48;
            $result[2] = 46;
            $result[3] = 48;
            $result[4] = $scientificChar;
            $result[5] = 48;
            return 6;
        }
        $ieeeExponent = Long_lo(Long_and(Long_shru($bits, 52), Long_fromInt(2047)));
        $m2 = Long_and($bits, Long_create(4294967295, 1048575));
        if (!$ieeeExponent)
            $e2 = (-1074);
        else {
            $e2 = ($ieeeExponent - 1023 | 0) - 52 | 0;
            $m2 = Long_or($m2, Long_create(0, 1048576));
        }
        $sign = $idx >= 0 ? 0 : 1;
        $even = Long_ne(Long_and($m2, Long_fromInt(1)), Long_ZERO) ? 0 : 1;
        $mv = Long_mul(Long_fromInt(4), $m2);
        $mp = Long_add($mv, Long_fromInt(2));
        $mmShift = Long_eq($m2, Long_create(0, 1048576)) && $ieeeExponent != 1 ? 0 : 1;
        $mm = Long_sub(Long_sub($mv, Long_fromInt(1)), Long_fromInt($mmShift));
        $e2 = $e2 + (-2) | 0;
        $dmIsTrailingZeros = 0;
        $dvIsTrailingZeros = 0;
        if ($e2 < 0) {
            $ieeeExponent =  -$e2 | 0;
            $q = ($rt_imul($ieeeExponent, 732923) >>> 20 | 0) - 1 | 0;
            if (0 > $q)
                $q = 0;
            $i = $ieeeExponent - $q | 0;
            $j = $q - ((($rt_imul($i, 1217359) >>> 19 | 0) + 1 | 0) - 121 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5divPow2($mv, $i, $j);
            $dp = cgtd_RyuDouble_mulPow5divPow2($mp, $i, $j);
            $dm = cgtd_RyuDouble_mulPow5divPow2($mm, $i, $j);
            $q_0 = $q + $e2 | 0;
            if ($q <= 1) {
                $dvIsTrailingZeros = 1;
                if (!$even)
                    $dp = Long_sub($dp, Long_fromInt(1));
                else
                    $dmIsTrailingZeros = $mmShift != 1 ? 0 : 1;
            } else if ($q < 63)
                $dvIsTrailingZeros = Long_ne(Long_and($mv, Long_sub(Long_shl(Long_fromInt(1), $q - 1 | 0), Long_fromInt(1))), Long_ZERO) ? 0 : 1;
        } else {
            $q_0 = (($e2 * 78913 | 0) >>> 18 | 0) - 1 | 0;
            if (0 > $q_0)
                $q_0 = 0;
            $i = (( -$e2 | 0) + $q_0 | 0) + ((122 + (($rt_imul($q_0, 1217359) >>> 19 | 0) + 1 | 0) | 0) - 1 | 0) | 0;
            $dv = cgtd_RyuDouble_mulPow5InvDivPow2($mv, $q_0, $i);
            $dp = cgtd_RyuDouble_mulPow5InvDivPow2($mp, $q_0, $i);
            $dm = cgtd_RyuDouble_mulPow5InvDivPow2($mm, $q_0, $i);
            if ($q_0 <= 21) {
                if (Long_eq(Long_rem($mv, Long_fromInt(5)), Long_ZERO))
                    $dvIsTrailingZeros = cgtd_RyuDouble_pow5Factor($mv) < $q_0 ? 0 : 1;
                else if ($even)
                    $dmIsTrailingZeros = cgtd_RyuDouble_pow5Factor($mm) < $q_0 ? 0 : 1;
                else if (cgtd_RyuDouble_pow5Factor($mp) < $q_0 ? 0 : 1)
                    $dp = Long_sub($dp, Long_fromInt(1));
            }
        }
        $vplength = cgtd_RyuDouble_decimalLength($dp);
        $exp = ($q_0 + $vplength | 0) - 1 | 0;
        $removed = 0;
        $lastRemovedDigit = 0;
        if (!$dmIsTrailingZeros && !$dvIsTrailingZeros) {
            a: {
                while (true) {
                    $mv = Long_div($dp, Long_fromInt(10));
                    $m2 = Long_div($dm, Long_fromInt(10));
                    if (Long_le($mv, $m2))
                        break a;
                    if (Long_lt($dp, Long_fromInt(100)))
                        break;
                    $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                    $dv = Long_div($dv, Long_fromInt(10));
                    $removed = $removed + 1 | 0;
                    $dp = $mv;
                    $dm = $m2;
                }
            }
            $output = Long_add($dv, Long_fromInt(Long_ne($dv, $dm) && $lastRemovedDigit < 5 ? 0 : 1));
        } else {
            b: {
                while (true) {
                    $m2 = Long_div($dp, Long_fromInt(10));
                    $output = Long_div($dm, Long_fromInt(10));
                    if (Long_le($m2, $output))
                        break b;
                    if (Long_lt($dp, Long_fromInt(100)))
                        break;
                    $dmIsTrailingZeros = $dmIsTrailingZeros & (Long_ne(Long_rem($dm, Long_fromInt(10)), Long_ZERO) ? 0 : 1);
                    $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                    $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                    $dv = Long_div($dv, Long_fromInt(10));
                    $removed = $removed + 1 | 0;
                    $dp = $m2;
                    $dm = $output;
                }
            }
            c: {
                if ($dmIsTrailingZeros)
                    while (Long_eq(Long_rem($dm, Long_fromInt(10)), Long_ZERO)) {
                        if (Long_lt($dp, Long_fromInt(100)))
                            break c;
                        $dvIsTrailingZeros = $dvIsTrailingZeros & ($lastRemovedDigit ? 0 : 1);
                        $lastRemovedDigit = Long_lo(Long_rem($dv, Long_fromInt(10)));
                        $dp = Long_div($dp, Long_fromInt(10));
                        $dv = Long_div($dv, Long_fromInt(10));
                        $dm = Long_div($dm, Long_fromInt(10));
                        $removed = $removed + 1 | 0;
                    }
            }
            if ($dvIsTrailingZeros && $lastRemovedDigit == 5 && Long_eq(Long_and($dv, Long_fromInt(1)), Long_ZERO))
                $lastRemovedDigit = 4;
            $output = Long_add($dv, Long_fromInt(!(Long_eq($dv, $dm) && !$dmIsTrailingZeros) && $lastRemovedDigit < 5 ? 0 : 1));
        }
        $olength = $vplength - $removed | 0;
        if (!$sign)
            $e2 = 0;
        else {
            var$30 = $result.data;
            $e2 = 1;
            var$30[0] = 45;
        }
        $i = 0;
        $sign = $olength - 1 | 0;
        while ($i < $sign) {
            var$30 = $result.data;
            $c = Long_lo(Long_rem($output, Long_fromInt(10)));
            $output = Long_div($output, Long_fromInt(10));
            var$30[($e2 + $olength | 0) - $i | 0] = (48 + $c | 0) & 65535;
            $i = $i + 1 | 0;
        }
        $result = $result.data;
        $result[$e2] = Long_lo(Long_add(Long_fromInt(48), Long_rem($output, Long_fromInt(10)))) & 65535;
        $result[$e2 + 1 | 0] = 46;
        $ieeeExponent = $e2 + ($olength + 1 | 0) | 0;
        if ($olength != 1)
            $e2 = $ieeeExponent;
        else {
            $e2 = $ieeeExponent + 1 | 0;
            $result[$ieeeExponent] = 48;
        }
        $idx = $e2 + 1 | 0;
        $result[$e2] = $scientificChar;
        if ($exp >= 0)
            $sign = $idx;
        else {
            $sign = $idx + 1 | 0;
            $result[$idx] = 45;
            $exp =  -$exp | 0;
        }
        if ($exp >= 100) {
            $ieeeExponent = $sign + 1 | 0;
            $result[$sign] = (48 + ($exp / 100 | 0) | 0) & 65535;
            $exp = $exp % 100 | 0;
            $e2 = $ieeeExponent + 1 | 0;
            $result[$ieeeExponent] = (48 + ($exp / 10 | 0) | 0) & 65535;
        } else if ($exp < 10)
            $e2 = $sign;
        else {
            $e2 = $sign + 1 | 0;
            $result[$sign] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $scientificChar = $e2 + 1 | 0;
        $result[$e2] = (48 + ($exp % 10 | 0) | 0) & 65535;
        return $scientificChar;
    }
    if ($value !== (-Infinity))
        $scientificChar = 0;
    else {
        var$30 = $result.data;
        $scientificChar = 1;
        var$30[0] = 45;
    }
    $result = $result.data;
    $idx = $scientificChar + 1 | 0;
    $result[$scientificChar] = 73;
    $scientificChar = $idx + 1 | 0;
    $result[$idx] = 110;
    $idx = $scientificChar + 1 | 0;
    $result[$scientificChar] = 102;
    $scientificChar = $idx + 1 | 0;
    $result[$idx] = 105;
    $idx = $scientificChar + 1 | 0;
    $result[$scientificChar] = 110;
    $scientificChar = $idx + 1 | 0;
    $result[$idx] = 105;
    $idx = $scientificChar + 1 | 0;
    $result[$scientificChar] = 116;
    $scientificChar = $idx + 1 | 0;
    $result[$idx] = 121;
    return $scientificChar;
},
cgtd_RyuDouble_decimalLength = $v => {
    cgtd_RyuDouble_$callClinit();
    if (Long_ge($v, Long_create(2808348672, 232830643)))
        return 19;
    if (Long_ge($v, Long_create(1569325056, 23283064)))
        return 18;
    if (Long_ge($v, Long_create(1874919424, 2328306)))
        return 17;
    if (Long_ge($v, Long_create(2764472320, 232830)))
        return 16;
    if (Long_ge($v, Long_create(276447232, 23283)))
        return 15;
    if (Long_ge($v, Long_create(1316134912, 2328)))
        return 14;
    if (Long_ge($v, Long_create(3567587328, 232)))
        return 13;
    if (Long_ge($v, Long_create(1215752192, 23)))
        return 12;
    if (Long_ge($v, Long_create(1410065408, 2)))
        return 11;
    if (Long_ge($v, Long_fromInt(1000000000)))
        return 10;
    if (Long_ge($v, Long_fromInt(100000000)))
        return 9;
    if (Long_ge($v, Long_fromInt(10000000)))
        return 8;
    if (Long_ge($v, Long_fromInt(1000000)))
        return 7;
    if (Long_ge($v, Long_fromInt(100000)))
        return 6;
    if (Long_ge($v, Long_fromInt(10000)))
        return 5;
    if (Long_ge($v, Long_fromInt(1000)))
        return 4;
    if (Long_ge($v, Long_fromInt(100)))
        return 3;
    if (Long_lt($v, Long_fromInt(10)))
        return 1;
    return 2;
},
cgtd_RyuDouble_pow5Factor = $value => {
    let $count, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    cgtd_RyuDouble_$callClinit();
    if (Long_ne(Long_rem($value, Long_fromInt(5)), Long_ZERO))
        return 0;
    if (Long_ne(Long_rem($value, Long_fromInt(25)), Long_ZERO))
        return 1;
    if (Long_ne(Long_rem($value, Long_fromInt(125)), Long_ZERO))
        return 2;
    if (Long_ne(Long_rem($value, Long_fromInt(625)), Long_ZERO))
        return 3;
    $count = 4;
    $value = Long_div($value, Long_fromInt(625));
    while (true) {
        if (Long_le($value, Long_ZERO)) {
            var$3 = new jl_IllegalArgumentException;
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            $count = var$4.$length0;
            var$5 = var$4;
            jl_AbstractStringBuilder_insert(var$5, $count, $rt_s(40));
            jl_AbstractStringBuilder_insert4(var$5, var$4.$length0, $value, 10);
            var$6 = new jl_String;
            var$7 = var$4.$buffer;
            var$8 = var$7.data;
            var$9 = var$4.$length0;
            var$10 = var$8.length;
            if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
                var$6.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
                var$3.$suppressionEnabled = 1;
                var$3.$writableStackTrace = 1;
                var$3.$message = var$6;
                $rt_throw(var$3);
            }
            var$3 = new jl_IndexOutOfBoundsException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$3);
            $rt_throw(var$3);
        }
        if (Long_ne(Long_rem($value, Long_fromInt(5)), Long_ZERO))
            break;
        $value = Long_div($value, Long_fromInt(5));
        $count = $count + 1 | 0;
    }
    return $count;
},
cgtd_RyuDouble_mulPow5divPow2 = ($m, $i, $j) => {
    let $mHigh, $mLow, var$6, $bits13, $bits03, $bits12, $bits02, $bits11, $bits01, $bits10, $bits00, $actualShift, var$16, var$17, var$18, var$19;
    cgtd_RyuDouble_$callClinit();
    $mHigh = Long_shru($m, 31);
    $mLow = Long_and($m, Long_fromInt(2147483647));
    var$6 = cgtd_RyuDouble_POW5_SPLIT.data;
    $bits13 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[0]));
    $bits03 = Long_mul($mLow, Long_fromInt(var$6[$i].data[0]));
    $bits12 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[1]));
    $bits02 = Long_mul($mLow, Long_fromInt(var$6[$i].data[1]));
    $bits11 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[2]));
    $bits01 = Long_mul($mLow, Long_fromInt(var$6[$i].data[2]));
    $bits10 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[3]));
    $bits00 = Long_mul($mLow, Long_fromInt(var$6[$i].data[3]));
    $actualShift = ($j - 93 | 0) - 21 | 0;
    if ($actualShift >= 0)
        return Long_shru(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru($bits00, 31), $bits01), $bits10), 31), $bits02), $bits11), 31), $bits03), $bits12), 21), Long_shl($bits13, 10)), $actualShift);
    var$16 = new jl_IllegalArgumentException;
    var$17 = new jl_StringBuilder;
    var$17.$buffer = $rt_createCharArray(16);
    $i = var$17.$length0;
    jl_AbstractStringBuilder_insert(var$17, $i, $rt_s(40));
    jl_AbstractStringBuilder_insert0(var$17, var$17.$length0, $actualShift, 10);
    var$18 = new jl_String;
    var$6 = var$17.$buffer;
    var$19 = var$6.data;
    $j = var$17.$length0;
    $actualShift = var$19.length;
    if ($j >= 0 && $j <= ($actualShift - 0 | 0)) {
        var$18.$nativeString = $rt_charArrayToString(var$6.data, 0, $j);
        var$16.$suppressionEnabled = 1;
        var$16.$writableStackTrace = 1;
        var$16.$message = var$18;
        $rt_throw(var$16);
    }
    var$16 = new jl_IndexOutOfBoundsException;
    var$16.$suppressionEnabled = 1;
    var$16.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$16);
    $rt_throw(var$16);
},
cgtd_RyuDouble_mulPow5InvDivPow2 = ($m, $i, $j) => {
    let $mHigh, $mLow, var$6, $bits13, $bits03, $bits12, $bits02, $bits11, $bits01, $bits10, $bits00, $actualShift, var$16, var$17, var$18, var$19;
    cgtd_RyuDouble_$callClinit();
    $mHigh = Long_shru($m, 31);
    $mLow = Long_and($m, Long_fromInt(2147483647));
    var$6 = cgtd_RyuDouble_POW5_INV_SPLIT.data;
    $bits13 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[0]));
    $bits03 = Long_mul($mLow, Long_fromInt(var$6[$i].data[0]));
    $bits12 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[1]));
    $bits02 = Long_mul($mLow, Long_fromInt(var$6[$i].data[1]));
    $bits11 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[2]));
    $bits01 = Long_mul($mLow, Long_fromInt(var$6[$i].data[2]));
    $bits10 = Long_mul($mHigh, Long_fromInt(var$6[$i].data[3]));
    $bits00 = Long_mul($mLow, Long_fromInt(var$6[$i].data[3]));
    $actualShift = ($j - 93 | 0) - 21 | 0;
    if ($actualShift >= 0)
        return Long_shru(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru(Long_add(Long_add(Long_shru($bits00, 31), $bits01), $bits10), 31), $bits02), $bits11), 31), $bits03), $bits12), 21), Long_shl($bits13, 10)), $actualShift);
    var$16 = new jl_IllegalArgumentException;
    var$17 = new jl_StringBuilder;
    var$17.$buffer = $rt_createCharArray(16);
    $i = var$17.$length0;
    jl_AbstractStringBuilder_insert(var$17, $i, $rt_s(40));
    jl_AbstractStringBuilder_insert0(var$17, var$17.$length0, $actualShift, 10);
    var$18 = new jl_String;
    var$6 = var$17.$buffer;
    var$19 = var$6.data;
    $j = var$17.$length0;
    $actualShift = var$19.length;
    if ($j >= 0 && $j <= ($actualShift - 0 | 0)) {
        var$18.$nativeString = $rt_charArrayToString(var$6.data, 0, $j);
        var$16.$suppressionEnabled = 1;
        var$16.$writableStackTrace = 1;
        var$16.$message = var$18;
        $rt_throw(var$16);
    }
    var$16 = new jl_IndexOutOfBoundsException;
    var$16.$suppressionEnabled = 1;
    var$16.$writableStackTrace = 1;
    jl_Throwable_fillInStackTrace(var$16);
    $rt_throw(var$16);
},
cgtd_RyuDouble__clinit_ = () => {
    let $inv, $k, var$3, $invMask, $expectedPow5Bits, $mask, $i, $pow, $pow5len, var$10, $j, var$12, var$13, var$14, $j_0, var$16;
    cgtd_RyuDouble_POW5_SPLIT = $rt_createIntMultiArray([4, 326]);
    cgtd_RyuDouble_POW5_INV_SPLIT = $rt_createIntMultiArray([4, 291]);
    cgtd_RyuDouble_result = $rt_createCharArray(32);
    $inv = jm_BigInteger_ONE;
    if ($inv.$sign0) {
        $k = ($inv.$numberLength + 0 | 0) + 1 | 0;
        var$3 = $rt_createIntArray($k);
        jm_BitLevel_shiftLeft(var$3, $inv.$digits, 0, 31);
        $invMask = new jm_BigInteger;
        $expectedPow5Bits = $inv.$sign0;
        $invMask.$firstNonzeroDigit = (-2);
        $invMask.$sign0 = $expectedPow5Bits;
        $invMask.$numberLength = $k;
        $invMask.$digits = var$3;
        jm_BigInteger_cutOffLeadingZeroes($invMask);
        $inv = $invMask;
    }
    $mask = jm_Elementary_subtract($inv, jm_BigInteger_ONE);
    $inv = jm_BigInteger_ONE;
    if ($inv.$sign0) {
        $k = ($inv.$numberLength + 0 | 0) + 1 | 0;
        var$3 = $rt_createIntArray($k);
        jm_BitLevel_shiftLeft(var$3, $inv.$digits, 0, 31);
        $invMask = new jm_BigInteger;
        $expectedPow5Bits = $inv.$sign0;
        $invMask.$firstNonzeroDigit = (-2);
        $invMask.$sign0 = $expectedPow5Bits;
        $invMask.$numberLength = $k;
        $invMask.$digits = var$3;
        jm_BigInteger_cutOffLeadingZeroes($invMask);
        $inv = $invMask;
    }
    $invMask = jm_Elementary_subtract($inv, jm_BigInteger_ONE);
    $i = 0;
    while ($i < 326) {
        $pow = jm_BigInteger_pow(jm_BigInteger_valueOf(Long_fromInt(5)), $i);
        $pow5len = jm_BitLevel_bitLength($pow);
        cgtd_RyuDouble_$callClinit();
        $expectedPow5Bits = ($rt_imul($i, 1217359) >>> 19 | 0) + 1 | 0;
        if ($expectedPow5Bits != $pow5len) {
            $inv = new jl_IllegalStateException;
            $invMask = new jl_StringBuilder;
            $invMask.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0($invMask, $invMask.$length0, $pow5len, 10);
            $i = $invMask.$length0;
            jl_AbstractStringBuilder_insert($invMask, $i, $rt_s(650));
            jl_AbstractStringBuilder_insert0($invMask, $invMask.$length0, $expectedPow5Bits, 10);
            $mask = new jl_String;
            var$3 = $invMask.$buffer;
            var$10 = var$3.data;
            $i = $invMask.$length0;
            $k = var$10.length;
            if ($i >= 0 && $i <= ($k - 0 | 0)) {
                $mask.$nativeString = $rt_charArrayToString(var$3.data, 0, $i);
                $inv.$suppressionEnabled = 1;
                $inv.$writableStackTrace = 1;
                $inv.$message = $mask;
                $rt_throw($inv);
            }
            $inv = new jl_IndexOutOfBoundsException;
            $inv.$suppressionEnabled = 1;
            $inv.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($inv);
            $rt_throw($inv);
        }
        $j = 0;
        var$12 = $pow5len - 121 | 0;
        while ($j < 4) {
            var$13 = cgtd_RyuDouble_POW5_SPLIT.data[$i];
            $expectedPow5Bits = var$12 + ((3 - $j | 0) * 31 | 0) | 0;
            if ($expectedPow5Bits && $pow.$sign0) {
                if ($expectedPow5Bits > 0)
                    $inv = jm_BitLevel_shiftRight($pow, $expectedPow5Bits);
                else {
                    $expectedPow5Bits =  -$expectedPow5Bits | 0;
                    var$14 = $expectedPow5Bits >> 5;
                    $expectedPow5Bits = $expectedPow5Bits & 31;
                    $k = ($pow.$numberLength + var$14 | 0) + ($expectedPow5Bits ? 1 : 0) | 0;
                    var$3 = $rt_createIntArray($k);
                    jm_BitLevel_shiftLeft(var$3, $pow.$digits, var$14, $expectedPow5Bits);
                    $inv = new jm_BigInteger;
                    $expectedPow5Bits = $pow.$sign0;
                    $inv.$firstNonzeroDigit = (-2);
                    $inv.$sign0 = $expectedPow5Bits;
                    $inv.$numberLength = $k;
                    $inv.$digits = var$3;
                    jm_BigInteger_cutOffLeadingZeroes($inv);
                }
            } else
                $inv = $pow;
            var$3 = var$13.data;
            $inv = jm_Logical_and($inv, $mask);
            var$3[$j] = $rt_imul($inv.$sign0, $inv.$digits.data[0]);
            $j = $j + 1 | 0;
        }
        a: {
            if ($i < cgtd_RyuDouble_POW5_INV_SPLIT.data.length) {
                $j_0 = ($pow5len - 1 | 0) + 122 | 0;
                $inv = jm_BigInteger_ONE;
                if ($j_0 && $inv.$sign0) {
                    if ($j_0 <= 0)
                        $inv = jm_BitLevel_shiftRight($inv,  -$j_0 | 0);
                    else {
                        $expectedPow5Bits = $j_0 >> 5;
                        $k = $j_0 & 31;
                        $j_0 = ($inv.$numberLength + $expectedPow5Bits | 0) + ($k ? 1 : 0) | 0;
                        var$3 = $rt_createIntArray($j_0);
                        jm_BitLevel_shiftLeft(var$3, $inv.$digits, $expectedPow5Bits, $k);
                        var$16 = new jm_BigInteger;
                        $expectedPow5Bits = $inv.$sign0;
                        var$16.$firstNonzeroDigit = (-2);
                        var$16.$sign0 = $expectedPow5Bits;
                        var$16.$numberLength = $j_0;
                        var$16.$digits = var$3;
                        jm_BigInteger_cutOffLeadingZeroes(var$16);
                        $inv = var$16;
                    }
                }
                $inv = jm_Elementary_add(jm_BigInteger_divide($inv, $pow), jm_BigInteger_ONE);
                $k = 0;
                while (true) {
                    if ($k >= 4)
                        break a;
                    if (!$k) {
                        var$3 = cgtd_RyuDouble_POW5_INV_SPLIT.data[$i];
                        $expectedPow5Bits = (3 - $k | 0) * 31 | 0;
                        if ($expectedPow5Bits && $inv.$sign0) {
                            if ($expectedPow5Bits > 0)
                                $pow = jm_BitLevel_shiftRight($inv, $expectedPow5Bits);
                            else {
                                $expectedPow5Bits =  -$expectedPow5Bits | 0;
                                $j_0 = $expectedPow5Bits >> 5;
                                $expectedPow5Bits = $expectedPow5Bits & 31;
                                $pow5len = ($inv.$numberLength + $j_0 | 0) + ($expectedPow5Bits ? 1 : 0) | 0;
                                var$10 = $rt_createIntArray($pow5len);
                                jm_BitLevel_shiftLeft(var$10, $inv.$digits, $j_0, $expectedPow5Bits);
                                $pow = new jm_BigInteger;
                                $expectedPow5Bits = $inv.$sign0;
                                $pow.$firstNonzeroDigit = (-2);
                                $pow.$sign0 = $expectedPow5Bits;
                                $pow.$numberLength = $pow5len;
                                $pow.$digits = var$10;
                                jm_BigInteger_cutOffLeadingZeroes($pow);
                            }
                        } else
                            $pow = $inv;
                        var$3.data[$k] = $rt_imul($pow.$sign0, $pow.$digits.data[0]);
                    } else {
                        var$3 = cgtd_RyuDouble_POW5_INV_SPLIT.data[$i];
                        $expectedPow5Bits = (3 - $k | 0) * 31 | 0;
                        if ($expectedPow5Bits && $inv.$sign0) {
                            if ($expectedPow5Bits > 0)
                                $pow = jm_BitLevel_shiftRight($inv, $expectedPow5Bits);
                            else {
                                $expectedPow5Bits =  -$expectedPow5Bits | 0;
                                $j_0 = $expectedPow5Bits >> 5;
                                $expectedPow5Bits = $expectedPow5Bits & 31;
                                $pow5len = ($inv.$numberLength + $j_0 | 0) + ($expectedPow5Bits ? 1 : 0) | 0;
                                var$10 = $rt_createIntArray($pow5len);
                                jm_BitLevel_shiftLeft(var$10, $inv.$digits, $j_0, $expectedPow5Bits);
                                $pow = new jm_BigInteger;
                                $expectedPow5Bits = $inv.$sign0;
                                $pow.$firstNonzeroDigit = (-2);
                                $pow.$sign0 = $expectedPow5Bits;
                                $pow.$numberLength = $pow5len;
                                $pow.$digits = var$10;
                                jm_BigInteger_cutOffLeadingZeroes($pow);
                            }
                        } else
                            $pow = $inv;
                        var$3 = var$3.data;
                        $pow = jm_Logical_and($pow, $invMask);
                        var$3[$k] = $rt_imul($pow.$sign0, $pow.$digits.data[0]);
                    }
                    $k = $k + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
};
function jnci_BufferedEncoder() {
    let a = this; jnc_CharsetEncoder.call(a);
    a.$inArray0 = null;
    a.$outArray0 = null;
}
let jnci_BufferedEncoder_encodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, var$7, $outSize, var$9, $i, var$11, $outSize_0, $result, $controller;
    $inArray = $this.$inArray0;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray0;
    var$7 = $this;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize) {
                $outSize = $in.$position0;
                var$9 = $in.$limit0;
                if ($outSize >= var$9 ? 0 : 1) {
                    $i = $inPos;
                    while ($i < $inSize) {
                        var$11 = $inArray.data;
                        var$11[$i - $inPos | 0] = var$11[$i];
                        $i = $i + 1 | 0;
                    }
                    var$11 = $inArray.data;
                    $i = $inSize - $inPos | 0;
                    $outSize_0 = (var$9 - $outSize | 0) + $i | 0;
                    $inSize = var$11.length;
                    if ($outSize_0 < $inSize)
                        $inSize = $outSize_0;
                    jn_CharBuffer_get($in, $inArray, $i, $inSize - $i | 0);
                    $inPos = 0;
                }
            }
            $i = $out.$position0;
            $outSize_0 = $out.$limit0;
            if (!($i >= $outSize_0 ? 0 : 1)) {
                $i = $in.$position0 >= $in.$limit0 ? 0 : 1;
                $result = !$i && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$11 = $outArray.data;
            $outSize_0 = $outSize_0 - $i | 0;
            $outSize = var$11.length;
            if ($outSize_0 < $outSize)
                $outSize = $outSize_0;
            $controller = new jnci_BufferedEncoder$Controller;
            $controller.$in0 = $in;
            $controller.$out0 = $out;
            $result = jnci_UTF8Encoder_arrayEncode(var$7, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition;
            $i = $controller.$outPosition0;
            if ($result === null) {
                $outSize_0 = $in.$position0 >= $in.$limit0 ? 0 : 1;
                if (!$outSize_0 && $inPos >= $inSize)
                    $result = jnc_CoderResult_UNDERFLOW;
                else if (!($out.$position0 >= $out.$limit0 ? 0 : 1) && $inPos >= $inSize)
                    $result = jnc_CoderResult_OVERFLOW;
            }
            jn_ByteBuffer_put($out, $outArray, 0, $i);
            if ($result !== null)
                break;
        }
    }
    jn_Buffer_position($in, $in.$position0 - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder),
jnci_UTF8Encoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $ch, $low, var$13, $codePoint, var$15;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                $low = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    var$13 = $controller.$out0;
                    if ((var$13.$limit0 - var$13.$position0 | 0) < 2 ? 0 : 1)
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $inPos = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                $low = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else {
                $codePoint = $ch & 64512;
                $low = $rt_compare($codePoint, 55296);
                $inPos = $low ? 0 : 1;
                if (!(!$inPos && !($codePoint != 56320 ? 0 : 1) ? 0 : 1)) {
                    if (($outPos + 3 | 0) > $outSize) {
                        var$9 = var$9 + (-1) | 0;
                        var$13 = $controller.$out0;
                        if ((var$13.$limit0 - var$13.$position0 | 0) < 3 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$10 = $outArray.data;
                    $inPos = $outPos + 1 | 0;
                    var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                    $outPos = $inPos + 1 | 0;
                    var$10[$inPos] = (128 | $ch >> 6 & 63) << 24 >> 24;
                    $low = $outPos + 1 | 0;
                    var$10[$outPos] = (128 | $ch & 63) << 24 >> 24;
                } else {
                    if (!($low ? 0 : 1)) {
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length3 = 1;
                        break a;
                    }
                    if (var$9 >= $inSize) {
                        var$13 = $controller.$in0;
                        if (var$13.$position0 >= var$13.$limit0 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_UNDERFLOW;
                        break a;
                    }
                    var$15 = var$9 + 1 | 0;
                    $low = var$10[var$9];
                    if (!(($low & 64512) != 56320 ? 0 : 1)) {
                        var$9 = var$15 + (-2) | 0;
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length3 = 1;
                        break a;
                    }
                    if (($outPos + 4 | 0) > $outSize) {
                        var$9 = var$15 + (-2) | 0;
                        var$13 = $controller.$out0;
                        if ((var$13.$limit0 - var$13.$position0 | 0) < 4 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$10 = $outArray.data;
                    $codePoint = (($ch & 1023) << 10 | $low & 1023) + 65536 | 0;
                    $low = $outPos + 1 | 0;
                    var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                    $inPos = $low + 1 | 0;
                    var$10[$low] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                    $outPos = $inPos + 1 | 0;
                    var$10[$inPos] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                    $low = $outPos + 1 | 0;
                    var$10[$outPos] = (128 | $codePoint & 63) << 24 >> 24;
                    var$9 = var$15;
                }
            }
            $inPos = var$9;
            $outPos = $low;
        }
        var$9 = $inPos;
    }
    $controller.$inPosition = var$9;
    $controller.$outPosition0 = $outPos;
    return $result;
},
cbggg_HdpiMode = $rt_classWithoutFields(jl_Enum),
cbggg_HdpiMode_Logical = null,
cbggg_HdpiMode_Pixels = null,
cbggg_HdpiMode_$VALUES = null,
cbggg_HdpiMode__clinit_ = () => {
    let var$1, var$2;
    var$1 = new cbggg_HdpiMode;
    var$1.$name0 = $rt_s(651);
    var$1.$ordinal0 = 0;
    cbggg_HdpiMode_Logical = var$1;
    var$2 = new cbggg_HdpiMode;
    var$2.$name0 = $rt_s(652);
    var$2.$ordinal0 = 1;
    cbggg_HdpiMode_Pixels = var$2;
    cbggg_HdpiMode_$VALUES = $rt_wrapArray(cbggg_HdpiMode, [var$1, var$2]);
},
jl_Double = $rt_classWithoutFields(jl_Number),
jl_Double_TYPE = null,
jl_Double__clinit_ = () => {
    jl_Double_TYPE = $rt_cls($rt_doublecls);
};
function jm_BigInteger() {
    let a = this; jl_Number.call(a);
    a.$digits = null;
    a.$numberLength = 0;
    a.$sign0 = 0;
    a.$firstNonzeroDigit = 0;
}
let jm_BigInteger_ZERO = null,
jm_BigInteger_ONE = null,
jm_BigInteger_TWO = null,
jm_BigInteger_TEN = null,
jm_BigInteger_MINUS_ONE = null,
jm_BigInteger_SMALL_VALUES = null,
jm_BigInteger_TWO_POWS = null,
jm_BigInteger__init_0 = ($this, $sign, $val) => {
    let var$3;
    $this.$firstNonzeroDigit = (-2);
    $this.$sign0 = $sign;
    if (Long_eq(Long_and($val, Long_create(0, 4294967295)), Long_ZERO)) {
        $this.$numberLength = 1;
        var$3 = $rt_createIntArray(1);
        var$3.data[0] = Long_lo($val);
        $this.$digits = var$3;
    } else {
        $this.$numberLength = 2;
        $this.$digits = $rt_createIntArrayFromData([Long_lo($val), Long_hi($val)]);
    }
},
jm_BigInteger__init_ = (var_0, var_1) => {
    let var_2 = new jm_BigInteger();
    jm_BigInteger__init_0(var_2, var_0, var_1);
    return var_2;
},
jm_BigInteger__init_2 = ($this, $signum, $digits) => {
    let var$3, var$4;
    var$3 = $digits.data;
    $this.$firstNonzeroDigit = (-2);
    var$4 = var$3.length;
    if (var$4) {
        $this.$sign0 = $signum;
        $this.$numberLength = var$4;
        $this.$digits = $digits;
        jm_BigInteger_cutOffLeadingZeroes($this);
    } else {
        $this.$sign0 = 0;
        $this.$numberLength = 1;
        $digits = $rt_createIntArray(1);
        $digits.data[0] = 0;
        $this.$digits = $digits;
    }
},
jm_BigInteger__init_1 = (var_0, var_1) => {
    let var_2 = new jm_BigInteger();
    jm_BigInteger__init_2(var_2, var_0, var_1);
    return var_2;
},
jm_BigInteger_valueOf = $val => {
    if (Long_lt($val, Long_ZERO)) {
        if (Long_eq($val, Long_fromInt(-1)))
            return jm_BigInteger_MINUS_ONE;
        return jm_BigInteger__init_((-1), Long_neg($val));
    }
    if (Long_gt($val, Long_fromInt(10)))
        return jm_BigInteger__init_(1, $val);
    return jm_BigInteger_SMALL_VALUES.data[Long_lo($val)];
},
jm_BigInteger_testBit = ($this, $n) => {
    let var$2, $intCount, var$4, $digit, var$6, $firstNonZeroDigit;
    if (!$n)
        return !($this.$digits.data[0] & 1) ? 0 : 1;
    if ($n < 0) {
        var$2 = new jl_ArithmeticException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(653);
        $rt_throw(var$2);
    }
    $intCount = $n >> 5;
    if ($intCount >= $this.$numberLength)
        return $this.$sign0 >= 0 ? 0 : 1;
    var$4 = $this.$digits.data;
    $digit = var$4[$intCount];
    $n = 1 << ($n & 31);
    var$6 = $this.$sign0;
    if (var$6 < 0) {
        if ($this.$firstNonzeroDigit == (-2)) {
            if (!var$6)
                var$6 = (-1);
            else {
                var$6 = 0;
                while (!var$4[var$6]) {
                    var$6 = var$6 + 1 | 0;
                }
            }
            $this.$firstNonzeroDigit = var$6;
        }
        $firstNonZeroDigit = $this.$firstNonzeroDigit;
        if ($intCount < $firstNonZeroDigit)
            return 0;
        $digit = $firstNonZeroDigit == $intCount ?  -$digit | 0 : $digit ^ (-1);
    }
    return !($digit & $n) ? 0 : 1;
},
jm_BigInteger_equals = ($this, $x) => {
    let $x1, var$3, var$4, var$5;
    if ($this === $x)
        return 1;
    if (!($x instanceof jm_BigInteger))
        return 0;
    a: {
        $x1 = $x;
        if ($this.$sign0 == $x1.$sign0) {
            var$3 = $this.$numberLength;
            if (var$3 == $x1.$numberLength) {
                var$4 = $x1.$digits;
                var$3 = var$3 - 1 | 0;
                while (var$3 >= 0) {
                    var$5 = var$4.data;
                    if ($this.$digits.data[var$3] != var$5[var$3])
                        break;
                    var$3 = var$3 + (-1) | 0;
                }
                if (var$3 >= 0 ? 0 : 1) {
                    var$3 = 1;
                    break a;
                }
            }
        }
        var$3 = 0;
    }
    return var$3;
},
jm_BigInteger_pow = ($this, $exp) => {
    let var$2, $x, var$4, var$5, var$6, var$7;
    if ($exp < 0) {
        var$2 = new jl_ArithmeticException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(654);
        $rt_throw(var$2);
    }
    if (!$exp)
        return jm_BigInteger_ONE;
    if ($exp != 1 && !jm_BigInteger_equals($this, jm_BigInteger_ONE) && !jm_BigInteger_equals($this, jm_BigInteger_ZERO)) {
        if (jm_BigInteger_testBit($this, 0))
            return jm_Multiplication_pow($this, $exp);
        $x = 1;
        while (!jm_BigInteger_testBit($this, $x)) {
            $x = $x + 1 | 0;
        }
        var$2 = jm_BigInteger_getPowerOfTwo($rt_imul($x, $exp));
        if ($x && $this.$sign0) {
            if ($x > 0)
                $this = jm_BitLevel_shiftRight($this, $x);
            else {
                $x =  -$x | 0;
                var$4 = $x >> 5;
                $x = $x & 31;
                var$5 = ($this.$numberLength + var$4 | 0) + ($x ? 1 : 0) | 0;
                var$6 = $rt_createIntArray(var$5);
                jm_BitLevel_shiftLeft(var$6, $this.$digits, var$4, $x);
                var$7 = new jm_BigInteger;
                $x = $this.$sign0;
                var$7.$firstNonzeroDigit = (-2);
                var$7.$sign0 = $x;
                var$7.$numberLength = var$5;
                var$7.$digits = var$6;
                jm_BigInteger_cutOffLeadingZeroes(var$7);
                $this = var$7;
            }
        }
        var$7 = jm_BigInteger_pow($this, $exp);
        if (!var$7.$sign0)
            var$2 = jm_BigInteger_ZERO;
        else if (!var$2.$sign0)
            var$2 = jm_BigInteger_ZERO;
        else {
            jm_Multiplication_$callClinit();
            var$2 = jm_Multiplication_karatsuba(var$2, var$7);
        }
        return var$2;
    }
    return $this;
},
jm_BigInteger_divide = ($this, $divisor) => {
    let $divisorSign, $divisorLen, var$4, $thisSign, $resDigits, $thisLen, $val, $cmp, $resLength, $resSign, $result;
    $divisorSign = $divisor.$sign0;
    if (!$divisorSign) {
        $divisor = new jl_ArithmeticException;
        $divisor.$suppressionEnabled = 1;
        $divisor.$writableStackTrace = 1;
        $divisor.$message = $rt_s(655);
        $rt_throw($divisor);
    }
    $divisorLen = $divisor.$numberLength;
    var$4 = $rt_compare($divisorLen, 1);
    if (!var$4 && $divisor.$digits.data[0] == 1 ? 1 : 0) {
        if ($divisorSign <= 0) {
            $divisorSign = $this.$sign0;
            if (!$divisorSign)
                $divisor = $this;
            else {
                $divisor = new jm_BigInteger;
                $divisorSign =  -$divisorSign | 0;
                $thisSign = $this.$numberLength;
                $resDigits = $this.$digits;
                $divisor.$firstNonzeroDigit = (-2);
                $divisor.$sign0 = $divisorSign;
                $divisor.$numberLength = $thisSign;
                $divisor.$digits = $resDigits;
            }
            $this = $divisor;
        }
        return $this;
    }
    $thisSign = $this.$sign0;
    $thisLen = $this.$numberLength;
    if (($thisLen + $divisorLen | 0) == 2) {
        $val = Long_div(Long_and(Long_fromInt($this.$digits.data[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($divisor.$digits.data[0]), Long_create(4294967295, 0)));
        if ($thisSign != $divisorSign)
            $val = Long_neg($val);
        return jm_BigInteger_valueOf($val);
    }
    $cmp = $rt_compare($thisLen, $divisorLen);
    $cmp = !$cmp ? jm_Elementary_compareArrays($this.$digits, $divisor.$digits, $thisLen) : $cmp <= 0 ? (-1) : 1;
    if (!$cmp)
        return $thisSign != $divisorSign ? jm_BigInteger_MINUS_ONE : jm_BigInteger_ONE;
    if ($cmp == (-1))
        return jm_BigInteger_ZERO;
    $resLength = ($thisLen - $divisorLen | 0) + 1 | 0;
    $resDigits = $rt_createIntArray($resLength);
    $resSign = $thisSign != $divisorSign ? (-1) : 1;
    if (var$4)
        jm_Division_divide($resDigits, $resLength, $this.$digits, $thisLen, $divisor.$digits, $divisorLen);
    else
        jm_Division_divideArrayByInt($resDigits, $this.$digits, $thisLen, $divisor.$digits.data[0]);
    $result = new jm_BigInteger;
    $result.$firstNonzeroDigit = (-2);
    $result.$sign0 = $resSign;
    $result.$numberLength = $resLength;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_BigInteger_cutOffLeadingZeroes = $this => {
    let var$1, var$2, var$3;
    while (true) {
        var$1 = $this.$numberLength;
        if (var$1 <= 0)
            break;
        var$2 = $this.$digits.data;
        var$1 = var$1 - 1 | 0;
        $this.$numberLength = var$1;
        if (var$2[var$1])
            break;
    }
    var$2 = $this.$digits.data;
    var$3 = $this.$numberLength;
    $this.$numberLength = var$3 + 1 | 0;
    if (!var$2[var$3])
        $this.$sign0 = 0;
},
jm_BigInteger_getPowerOfTwo = $exp => {
    let $resDigits, $intCount, $bitN, var$5, var$6;
    $resDigits = jm_BigInteger_TWO_POWS.data;
    if ($exp < $resDigits.length)
        return $resDigits[$exp];
    $intCount = $exp >> 5;
    $bitN = $exp & 31;
    var$5 = $intCount + 1 | 0;
    $resDigits = $rt_createIntArray(var$5);
    $resDigits.data[$intCount] = 1 << $bitN;
    var$6 = new jm_BigInteger;
    var$6.$firstNonzeroDigit = (-2);
    var$6.$sign0 = 1;
    var$6.$numberLength = var$5;
    var$6.$digits = $resDigits;
    return var$6;
},
jm_BigInteger__clinit_ = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, $i;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 0;
    var$1.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 0;
    var$1.$digits = var$2;
    jm_BigInteger_ZERO = var$1;
    var$3 = new jm_BigInteger;
    var$3.$firstNonzeroDigit = (-2);
    var$3.$sign0 = 1;
    var$3.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 1;
    var$3.$digits = var$2;
    jm_BigInteger_ONE = var$3;
    var$4 = new jm_BigInteger;
    var$4.$firstNonzeroDigit = (-2);
    var$4.$sign0 = 1;
    var$4.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 2;
    var$4.$digits = var$2;
    jm_BigInteger_TWO = var$4;
    var$5 = new jm_BigInteger;
    var$5.$firstNonzeroDigit = (-2);
    var$5.$sign0 = 1;
    var$5.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 10;
    var$5.$digits = var$2;
    jm_BigInteger_TEN = var$5;
    var$6 = new jm_BigInteger;
    var$6.$firstNonzeroDigit = (-2);
    var$6.$sign0 = (-1);
    var$6.$numberLength = 1;
    var$2 = $rt_createIntArray(1);
    var$2.data[0] = 1;
    var$6.$digits = var$2;
    jm_BigInteger_MINUS_ONE = var$6;
    var$2 = $rt_createArray(jm_BigInteger, 11);
    var$7 = var$2.data;
    var$7[0] = var$1;
    var$7[1] = var$3;
    var$7[2] = var$4;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 1;
    var$1.$numberLength = 1;
    var$8 = $rt_createIntArray(1);
    var$8.data[0] = 3;
    var$1.$digits = var$8;
    var$7[3] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 1;
    var$1.$numberLength = 1;
    var$8 = $rt_createIntArray(1);
    var$8.data[0] = 4;
    var$1.$digits = var$8;
    var$7[4] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 1;
    var$1.$numberLength = 1;
    var$8 = $rt_createIntArray(1);
    var$8.data[0] = 5;
    var$1.$digits = var$8;
    var$7[5] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 1;
    var$1.$numberLength = 1;
    var$8 = $rt_createIntArray(1);
    var$8.data[0] = 6;
    var$1.$digits = var$8;
    var$7[6] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 1;
    var$1.$numberLength = 1;
    var$8 = $rt_createIntArray(1);
    var$8.data[0] = 7;
    var$1.$digits = var$8;
    var$7[7] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 1;
    var$1.$numberLength = 1;
    var$8 = $rt_createIntArray(1);
    var$8.data[0] = 8;
    var$1.$digits = var$8;
    var$7[8] = var$1;
    var$1 = new jm_BigInteger;
    var$1.$firstNonzeroDigit = (-2);
    var$1.$sign0 = 1;
    var$1.$numberLength = 1;
    var$8 = $rt_createIntArray(1);
    var$8.data[0] = 9;
    var$1.$digits = var$8;
    var$7[9] = var$1;
    var$7[10] = var$5;
    jm_BigInteger_SMALL_VALUES = var$2;
    jm_BigInteger_TWO_POWS = $rt_createArray(jm_BigInteger, 32);
    $i = 0;
    while (true) {
        var$2 = jm_BigInteger_TWO_POWS.data;
        if ($i >= var$2.length)
            break;
        var$2[$i] = jm_BigInteger_valueOf(Long_shl(Long_fromInt(1), $i));
        $i = $i + 1 | 0;
    }
};
function ji_ByteArrayInputStream() {
    let a = this; ji_InputStream.call(a);
    a.$buf0 = null;
    a.$pos = 0;
    a.$mark1 = 0;
    a.$count2 = 0;
}
let ji_ByteArrayInputStream__init_ = ($this, $buf) => {
    let var$2;
    var$2 = $buf.data.length;
    $this.$buf0 = $buf;
    $this.$pos = 0;
    $this.$mark1 = 0;
    $this.$count2 = 0 + var$2 | 0;
},
ji_ByteArrayInputStream__init_0 = var_0 => {
    let var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_(var_1, var_0);
    return var_1;
},
ji_ByteArrayInputStream_read = ($this, $b, $off, $bytesToRead) => {
    let $bytesToRead_0, $i, var$6, var$7, var$8;
    $bytesToRead_0 = $this.$count2 - $this.$pos | 0;
    if ($bytesToRead < $bytesToRead_0)
        $bytesToRead_0 = $bytesToRead;
    $i = 0;
    while ($i < $bytesToRead_0) {
        var$6 = $b.data;
        $bytesToRead = $off + 1 | 0;
        var$7 = $this.$buf0.data;
        var$8 = $this.$pos;
        $this.$pos = var$8 + 1 | 0;
        var$6[$off] = var$7[var$8];
        $i = $i + 1 | 0;
        $off = $bytesToRead;
    }
    if ($bytesToRead_0 <= 0)
        $bytesToRead_0 = (-1);
    return $bytesToRead_0;
},
ji_ByteArrayInputStream_close = $this => {
    return;
};
function jnci_BufferedEncoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out0 = null;
    a.$inPosition = 0;
    a.$outPosition0 = 0;
}
let jl_ArithmeticException = $rt_classWithoutFields(jl_RuntimeException),
jm_Multiplication = $rt_classWithoutFields(),
jm_Multiplication_tenPows = null,
jm_Multiplication_fivePows = null,
jm_Multiplication_bigTenPows = null,
jm_Multiplication_bigFivePows = null,
jm_Multiplication_$callClinit = () => {
    jm_Multiplication_$callClinit = $rt_eraseClinit(jm_Multiplication);
    jm_Multiplication__clinit_();
},
jm_Multiplication_karatsuba = ($op1, $op2) => {
    let $upperOp1, var$4, $ndiv2, var$6, var$7, var$8, $upperOp2, $upper, $lowerOp1, $lowerOp2, $lower;
    jm_Multiplication_$callClinit();
    if ($op2.$numberLength <= $op1.$numberLength) {
        $upperOp1 = $op2;
        $op2 = $op1;
        $op1 = $upperOp1;
    }
    if ($op1.$numberLength < 63)
        return jm_Multiplication_multiplyPAP($op2, $op1);
    var$4 = $op2.$numberLength;
    $ndiv2 = (var$4 & (-2)) << 4;
    if ($ndiv2 && $op2.$sign0) {
        if ($ndiv2 > 0)
            $upperOp1 = jm_BitLevel_shiftRight($op2, $ndiv2);
        else {
            var$6 =  -$ndiv2 | 0;
            var$7 = var$6 >> 5;
            var$6 = var$6 & 31;
            var$4 = (var$4 + var$7 | 0) + (var$6 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$4);
            jm_BitLevel_shiftLeft(var$8, $op2.$digits, var$7, var$6);
            $upperOp1 = new jm_BigInteger;
            var$7 = $op2.$sign0;
            $upperOp1.$firstNonzeroDigit = (-2);
            $upperOp1.$sign0 = var$7;
            $upperOp1.$numberLength = var$4;
            $upperOp1.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($upperOp1);
        }
    } else
        $upperOp1 = $op2;
    if ($ndiv2 && $op1.$sign0) {
        if ($ndiv2 > 0)
            $upperOp2 = jm_BitLevel_shiftRight($op1, $ndiv2);
        else {
            var$4 =  -$ndiv2 | 0;
            var$7 = var$4 >> 5;
            var$4 = var$4 & 31;
            var$6 = ($op1.$numberLength + var$7 | 0) + (var$4 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $op1.$digits, var$7, var$4);
            $upperOp2 = new jm_BigInteger;
            var$4 = $op1.$sign0;
            $upperOp2.$firstNonzeroDigit = (-2);
            $upperOp2.$sign0 = var$4;
            $upperOp2.$numberLength = var$6;
            $upperOp2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($upperOp2);
        }
    } else
        $upperOp2 = $op1;
    if ($ndiv2 && $upperOp1.$sign0) {
        if ($ndiv2 <= 0)
            $upper = jm_BitLevel_shiftRight($upperOp1,  -$ndiv2 | 0);
        else {
            var$4 = $ndiv2 >> 5;
            var$7 = $ndiv2 & 31;
            var$6 = ($upperOp1.$numberLength + var$4 | 0) + (var$7 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $upperOp1.$digits, var$4, var$7);
            $upper = new jm_BigInteger;
            var$4 = $upperOp1.$sign0;
            $upper.$firstNonzeroDigit = (-2);
            $upper.$sign0 = var$4;
            $upper.$numberLength = var$6;
            $upper.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($upper);
        }
    } else
        $upper = $upperOp1;
    $lowerOp1 = jm_Elementary_subtract($op2, $upper);
    if ($ndiv2 && $upperOp2.$sign0) {
        if ($ndiv2 <= 0)
            $op2 = jm_BitLevel_shiftRight($upperOp2,  -$ndiv2 | 0);
        else {
            var$4 = $ndiv2 >> 5;
            var$7 = $ndiv2 & 31;
            var$6 = ($upperOp2.$numberLength + var$4 | 0) + (var$7 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $upperOp2.$digits, var$4, var$7);
            $op2 = new jm_BigInteger;
            var$4 = $upperOp2.$sign0;
            $op2.$firstNonzeroDigit = (-2);
            $op2.$sign0 = var$4;
            $op2.$numberLength = var$6;
            $op2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($op2);
        }
    } else
        $op2 = $upperOp2;
    $lowerOp2 = jm_Elementary_subtract($op1, $op2);
    $upper = jm_Multiplication_karatsuba($upperOp1, $upperOp2);
    $lower = jm_Multiplication_karatsuba($lowerOp1, $lowerOp2);
    $op1 = jm_Elementary_add(jm_Elementary_add(jm_Multiplication_karatsuba(jm_Elementary_subtract($upperOp1, $lowerOp1), jm_Elementary_subtract($lowerOp2, $upperOp2)), $upper), $lower);
    if ($ndiv2 && $op1.$sign0) {
        if ($ndiv2 <= 0)
            $op1 = jm_BitLevel_shiftRight($op1,  -$ndiv2 | 0);
        else {
            var$4 = $ndiv2 >> 5;
            var$7 = $ndiv2 & 31;
            var$6 = ($op1.$numberLength + var$4 | 0) + (var$7 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$6);
            jm_BitLevel_shiftLeft(var$8, $op1.$digits, var$4, var$7);
            $op2 = new jm_BigInteger;
            var$4 = $op1.$sign0;
            $op2.$firstNonzeroDigit = (-2);
            $op2.$sign0 = var$4;
            $op2.$numberLength = var$6;
            $op2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($op2);
            $op1 = $op2;
        }
    }
    var$4 = $ndiv2 << 1;
    if (var$4 && $upper.$sign0) {
        if (var$4 <= 0)
            $upper = jm_BitLevel_shiftRight($upper,  -var$4 | 0);
        else {
            $ndiv2 = var$4 >> 5;
            var$4 = var$4 & 31;
            var$7 = ($upper.$numberLength + $ndiv2 | 0) + (var$4 ? 1 : 0) | 0;
            var$8 = $rt_createIntArray(var$7);
            jm_BitLevel_shiftLeft(var$8, $upper.$digits, $ndiv2, var$4);
            $op2 = new jm_BigInteger;
            var$4 = $upper.$sign0;
            $op2.$firstNonzeroDigit = (-2);
            $op2.$sign0 = var$4;
            $op2.$numberLength = var$7;
            $op2.$digits = var$8;
            jm_BigInteger_cutOffLeadingZeroes($op2);
            $upper = $op2;
        }
    }
    return jm_Elementary_add(jm_Elementary_add($upper, $op1), $lower);
},
jm_Multiplication_multiplyPAP = ($a, $b) => {
    let $aLen, $bLen, $resLength, $resSign, $aDigits, $bDigits, $resDigits, $result, $val, $valueLo, $valueHi;
    jm_Multiplication_$callClinit();
    $aLen = $a.$numberLength;
    $bLen = $b.$numberLength;
    $resLength = $aLen + $bLen | 0;
    $resSign = $a.$sign0 == $b.$sign0 ? 1 : (-1);
    if ($resLength != 2) {
        $aDigits = $a.$digits;
        $bDigits = $b.$digits;
        $resDigits = $rt_createIntArray($resLength);
        jm_Multiplication_multArraysPAP($aDigits, $aLen, $bDigits, $bLen, $resDigits);
        $result = new jm_BigInteger;
        $result.$firstNonzeroDigit = (-2);
        $result.$sign0 = $resSign;
        $result.$numberLength = $resLength;
        $result.$digits = $resDigits;
        jm_BigInteger_cutOffLeadingZeroes($result);
        return $result;
    }
    $val = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($a.$digits.data[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($b.$digits.data[0]), Long_create(4294967295, 0))), Long_ZERO), Long_ZERO);
    $valueLo = Long_lo($val);
    $valueHi = Long_hi($val);
    if (!$valueHi) {
        $a = new jm_BigInteger;
        $a.$firstNonzeroDigit = (-2);
        $a.$sign0 = $resSign;
        $a.$numberLength = 1;
        $aDigits = $rt_createIntArray(1);
        $aDigits.data[0] = $valueLo;
        $a.$digits = $aDigits;
    } else {
        $a = new jm_BigInteger;
        $aDigits = $rt_createIntArrayFromData([$valueLo, $valueHi]);
        $a.$firstNonzeroDigit = (-2);
        $a.$sign0 = $resSign;
        $a.$numberLength = 2;
        $a.$digits = $aDigits;
    }
    return $a;
},
jm_Multiplication_multArraysPAP = ($aDigits, $aLen, $bDigits, $bLen, $resDigits) => {
    let var$6, var$7, var$8, var$9, var$10;
    jm_Multiplication_$callClinit();
    if ($aLen && $bLen) {
        if ($aLen == 1) {
            var$6 = $aDigits.data[0];
            var$7 = Long_ZERO;
            $aLen = 0;
            var$8 = Long_and(Long_fromInt(var$6), Long_create(4294967295, 0));
            while ($aLen < $bLen) {
                $aDigits = $bDigits.data;
                var$9 = $resDigits.data;
                var$7 = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($aDigits[$aLen]), Long_create(4294967295, 0)), var$8), Long_and(Long_fromInt(Long_lo(var$7)), Long_create(4294967295, 0))), Long_ZERO);
                var$9[$aLen] = Long_lo(var$7);
                var$7 = Long_shru(var$7, 32);
                $aLen = $aLen + 1 | 0;
            }
            $resDigits.data[$bLen] = Long_lo(var$7);
        } else if ($bLen != 1)
            jm_Multiplication_multPAP($aDigits, $bDigits, $resDigits, $aLen, $bLen);
        else {
            $bLen = $bDigits.data[0];
            var$10 = Long_ZERO;
            var$6 = 0;
            var$7 = Long_and(Long_fromInt($bLen), Long_create(4294967295, 0));
            while (var$6 < $aLen) {
                $bDigits = $aDigits.data;
                var$9 = $resDigits.data;
                var$10 = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($bDigits[var$6]), Long_create(4294967295, 0)), var$7), Long_and(Long_fromInt(Long_lo(var$10)), Long_create(4294967295, 0))), Long_ZERO);
                var$9[var$6] = Long_lo(var$10);
                var$10 = Long_shru(var$10, 32);
                var$6 = var$6 + 1 | 0;
            }
            $resDigits.data[$aLen] = Long_lo(var$10);
        }
        return;
    }
},
jm_Multiplication_multPAP = ($a, $b, $t, $aLen, $bLen) => {
    let $i, var$7, $carry, $aI, $j, var$11, var$12, var$13, var$14, var$15;
    jm_Multiplication_$callClinit();
    if ($a === $b && $aLen == $bLen) {
        jm_Multiplication_square($a, $aLen, $t);
        return;
    }
    $i = 0;
    while ($i < $aLen) {
        var$7 = $a.data;
        $carry = Long_ZERO;
        $aI = var$7[$i];
        $j = 0;
        var$11 = Long_and(Long_fromInt($aI), Long_create(4294967295, 0));
        while ($j < $bLen) {
            var$7 = $b.data;
            var$12 = $t.data;
            $aI = var$7[$j];
            var$13 = $i + $j | 0;
            var$14 = var$12[var$13];
            var$15 = Long_lo($carry);
            $carry = Long_add(Long_add(Long_mul(var$11, Long_and(Long_fromInt($aI), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$14), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$15), Long_create(4294967295, 0)));
            var$12[var$13] = Long_lo($carry);
            $carry = Long_shru($carry, 32);
            $j = $j + 1 | 0;
        }
        $t.data[$i + $bLen | 0] = Long_lo($carry);
        $i = $i + 1 | 0;
    }
},
jm_Multiplication_pow = ($acc, $exponent) => {
    let $res, var$4, $acc_0, var$6;
    jm_Multiplication_$callClinit();
    $res = jm_BigInteger_ONE;
    while ($exponent > 1) {
        if ($exponent & 1)
            $res = !$acc.$sign0 ? jm_BigInteger_ZERO : !$res.$sign0 ? jm_BigInteger_ZERO : jm_Multiplication_karatsuba($res, $acc);
        var$4 = $acc.$numberLength;
        if (var$4 != 1)
            $acc_0 = jm_BigInteger__init_1(1, jm_Multiplication_square($acc.$digits, var$4, $rt_createIntArray(var$4 << 1)));
        else {
            var$6 = $acc.$sign0;
            $acc_0 = !var$6 ? jm_BigInteger_ZERO : !var$6 ? jm_BigInteger_ZERO : jm_Multiplication_karatsuba($acc, $acc);
        }
        $exponent = $exponent >> 1;
        $acc = $acc_0;
    }
    return !$acc.$sign0 ? jm_BigInteger_ZERO : !$res.$sign0 ? jm_BigInteger_ZERO : jm_Multiplication_karatsuba($res, $acc);
},
jm_Multiplication_square = ($a, $aLen, $res) => {
    let $i, $carry, $i_0, $j, var$8, var$9, $index, var$11, var$12, var$13, var$14, var$15;
    jm_Multiplication_$callClinit();
    $i = 0;
    while ($i < $aLen) {
        $carry = Long_ZERO;
        $i_0 = $i + 1 | 0;
        $j = $i_0;
        while ($j < $aLen) {
            var$8 = $a.data;
            var$9 = $res.data;
            $index = var$8[$i];
            var$11 = var$8[$j];
            var$12 = $i + $j | 0;
            var$13 = var$9[var$12];
            var$14 = Long_lo($carry);
            $carry = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($index), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$11), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$13), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$14), Long_create(4294967295, 0)));
            var$9[var$12] = Long_lo($carry);
            $carry = Long_shru($carry, 32);
            $j = $j + 1 | 0;
        }
        $res.data[$i + $aLen | 0] = Long_lo($carry);
        $i = $i_0;
    }
    $i = $aLen << 1;
    $index = 0;
    $j = 0;
    while ($j < $i) {
        var$8 = $res.data;
        var$11 = var$8[$j];
        var$8[$j] = var$11 << 1 | $index;
        $index = var$11 >>> 31 | 0;
        $j = $j + 1 | 0;
    }
    if ($index)
        $res.data[$i] = $index;
    $carry = Long_ZERO;
    $i = 0;
    $index = 0;
    while ($i < $aLen) {
        var$8 = $a.data;
        var$9 = $res.data;
        $i_0 = var$8[$i];
        $j = var$8[$i];
        var$12 = var$9[$index];
        var$11 = Long_lo($carry);
        $carry = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($i_0), Long_create(4294967295, 0)), Long_and(Long_fromInt($j), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$12), Long_create(4294967295, 0))), Long_and(Long_fromInt(var$11), Long_create(4294967295, 0)));
        var$9[$index] = Long_lo($carry);
        var$15 = Long_shru($carry, 32);
        $index = $index + 1 | 0;
        $carry = Long_add(var$15, Long_and(Long_fromInt(var$9[$index]), Long_create(4294967295, 0)));
        var$9[$index] = Long_lo($carry);
        $carry = Long_shru($carry, 32);
        $i = $i + 1 | 0;
        $index = $index + 1 | 0;
    }
    return $res;
},
jm_Multiplication__clinit_ = () => {
    let $fivePow, $i, var$3, var$4, var$5, var$6;
    jm_Multiplication_tenPows = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
    jm_Multiplication_fivePows = $rt_createIntArrayFromData([1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125]);
    jm_Multiplication_bigTenPows = $rt_createArray(jm_BigInteger, 32);
    jm_Multiplication_bigFivePows = $rt_createArray(jm_BigInteger, 32);
    $fivePow = Long_fromInt(1);
    $i = 0;
    while ($i <= 18) {
        jm_Multiplication_bigFivePows.data[$i] = jm_BigInteger_valueOf($fivePow);
        jm_Multiplication_bigTenPows.data[$i] = jm_BigInteger_valueOf(Long_shl($fivePow, $i));
        $fivePow = Long_mul($fivePow, Long_fromInt(5));
        $i = $i + 1 | 0;
    }
    while ($i < jm_Multiplication_bigTenPows.data.length) {
        var$3 = jm_Multiplication_bigFivePows.data;
        var$4 = $i - 1 | 0;
        var$5 = var$3[var$4];
        var$6 = var$3[1];
        if (!var$6.$sign0)
            var$5 = jm_BigInteger_ZERO;
        else if (!var$5.$sign0)
            var$5 = jm_BigInteger_ZERO;
        else {
            jm_Multiplication_$callClinit();
            var$5 = jm_Multiplication_karatsuba(var$5, var$6);
        }
        var$3[$i] = var$5;
        var$3 = jm_Multiplication_bigTenPows.data;
        var$5 = var$3[var$4];
        var$6 = jm_BigInteger_TEN;
        if (!var$6.$sign0)
            var$5 = jm_BigInteger_ZERO;
        else if (!var$5.$sign0)
            var$5 = jm_BigInteger_ZERO;
        else {
            jm_Multiplication_$callClinit();
            var$5 = jm_Multiplication_karatsuba(var$5, var$6);
        }
        var$3[$i] = var$5;
        $i = $i + 1 | 0;
    }
},
jm_BitLevel = $rt_classWithoutFields(),
jm_BitLevel_bitLength = $val => {
    let $i, var$3, $bLength, var$5, var$6, $highDigit;
    $i = $val.$sign0;
    if (!$i)
        return 0;
    var$3 = $val.$numberLength;
    $bLength = var$3 << 5;
    var$5 = $val.$digits.data;
    var$6 = var$3 - 1 | 0;
    $highDigit = var$5[var$6];
    if ($i < 0) {
        if ($val.$firstNonzeroDigit == (-2)) {
            if (!$i)
                $i = (-1);
            else {
                $i = 0;
                while (!var$5[$i]) {
                    $i = $i + 1 | 0;
                }
            }
            $val.$firstNonzeroDigit = $i;
        }
        if ($val.$firstNonzeroDigit == var$6)
            $highDigit = $highDigit + (-1) | 0;
    }
    return $bLength - jl_Integer_numberOfLeadingZeros($highDigit) | 0;
},
jm_BitLevel_shiftLeft = ($result, $source, $intCount, $count) => {
    let var$5, $rightShiftCount, $i, var$8, $i_0, var$10;
    a: {
        if (!$count)
            jl_System_fastArraycopy($source, 0, $result, $intCount, $result.data.length - $intCount | 0);
        else {
            var$5 = $result.data;
            $rightShiftCount = 32 - $count | 0;
            $i = var$5.length - 1 | 0;
            var$5[$i] = 0;
            while (true) {
                if ($i <= $intCount)
                    break a;
                var$8 = $source.data;
                $i_0 = var$5[$i];
                var$10 = ($i - $intCount | 0) - 1 | 0;
                var$5[$i] = $i_0 | (var$8[var$10] >>> $rightShiftCount | 0);
                var$5[$i - 1 | 0] = var$8[var$10] << $count;
                $i = $i + (-1) | 0;
            }
        }
    }
    $i_0 = 0;
    while ($i_0 < $intCount) {
        $result.data[$i_0] = 0;
        $i_0 = $i_0 + 1 | 0;
    }
},
jm_BitLevel_shiftRight = ($source, $count) => {
    let $intCount, $resLength, var$5, $resDigits, var$7, $i, var$9, var$10, var$11, $result;
    $intCount = $count >> 5;
    $count = $count & 31;
    $resLength = $source.$numberLength;
    if ($intCount >= $resLength)
        return $source.$sign0 >= 0 ? jm_BigInteger_ZERO : jm_BigInteger_MINUS_ONE;
    a: {
        $resLength = $resLength - $intCount | 0;
        var$5 = $resLength + 1 | 0;
        $resDigits = $rt_createIntArray(var$5);
        jm_BitLevel_shiftRight0($resDigits, $resLength, $source.$digits, $intCount, $count);
        var$7 = $source.$sign0;
        if (var$7 >= 0)
            var$5 = $resLength;
        else {
            $i = 0;
            while (true) {
                var$9 = $rt_compare($i, $intCount);
                if (var$9 >= 0)
                    break;
                if ($source.$digits.data[$i])
                    break;
                $i = $i + 1 | 0;
            }
            if (var$9 >= 0) {
                if ($count <= 0) {
                    var$5 = $resLength;
                    break a;
                }
                if (!($source.$digits.data[$i] << (32 - $count | 0))) {
                    var$5 = $resLength;
                    break a;
                }
            }
            var$10 = $resDigits.data;
            var$11 = 0;
            while (true) {
                $i = $rt_compare(var$11, $resLength);
                if ($i >= 0)
                    break;
                if (var$10[var$11] != (-1))
                    break;
                var$10[var$11] = 0;
                var$11 = var$11 + 1 | 0;
            }
            if ($i)
                var$5 = $resLength;
            var$10[var$11] = var$10[var$11] + 1 | 0;
        }
    }
    $result = new jm_BigInteger;
    $result.$firstNonzeroDigit = (-2);
    $result.$sign0 = var$7;
    $result.$numberLength = var$5;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_BitLevel_shiftRight0 = ($result, $resultLen, $source, $intCount, $count) => {
    let $allZero, $i, var$8, $leftShiftCount, var$10, var$11;
    $allZero = 1;
    $i = 0;
    while ($i < $intCount) {
        $allZero = $allZero & ($source.data[$i] ? 0 : 1);
        $i = $i + 1 | 0;
    }
    if (!$count)
        jl_System_fastArraycopy($source, $intCount, $result, 0, $resultLen);
    else {
        var$8 = $source.data;
        $leftShiftCount = 32 - $count | 0;
        $allZero = $allZero & (var$8[$i] << $leftShiftCount ? 0 : 1);
        var$10 = 0;
        var$11 = $resultLen - 1 | 0;
        while (var$10 < var$11) {
            $source = $result.data;
            $resultLen = var$10 + $intCount | 0;
            $source[var$10] = (var$8[$resultLen] >>> $count | 0) | var$8[$resultLen + 1 | 0] << $leftShiftCount;
            var$10 = var$10 + 1 | 0;
        }
        $result.data[var$10] = var$8[var$10 + $intCount | 0] >>> $count | 0;
    }
    return $allZero;
},
jm_Elementary = $rt_classWithoutFields(),
jm_Elementary_compareArrays = ($a, $b, $size) => {
    let $i, var$5;
    $i = $size - 1 | 0;
    while ($i >= 0) {
        var$5 = $b.data;
        if ($a.data[$i] != var$5[$i])
            break;
        $i = $i + (-1) | 0;
    }
    if ($i < 0)
        $size = 0;
    else {
        $b = $b.data;
        $size = Long_ge(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt($b[$i]), Long_create(4294967295, 0))) ? 1 : (-1);
    }
    return $size;
},
jm_Elementary_add = ($op1, $op2) => {
    let $op1Sign, $op2Sign, $op1Len, $op2Len, $a, $b, $res, $valueLo, $valueHi, var$12, var$13, $resDigits, $cmp, $res_0;
    $op1Sign = $op1.$sign0;
    $op2Sign = $op2.$sign0;
    if (!$op1Sign)
        return $op2;
    if (!$op2Sign)
        return $op1;
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), Long_create(4294967295, 0));
        if ($op1Sign != $op2Sign)
            return jm_BigInteger_valueOf($op1Sign >= 0 ? Long_sub($a, $b) : Long_sub($b, $a));
        $res = Long_add($a, $b);
        $valueLo = Long_lo($res);
        $valueHi = Long_hi($res);
        if (!$valueHi) {
            $op1 = new jm_BigInteger;
            $op1.$firstNonzeroDigit = (-2);
            $op1.$sign0 = $op1Sign;
            $op1.$numberLength = 1;
            var$12 = $rt_createIntArray(1);
            var$12.data[0] = $valueLo;
            $op1.$digits = var$12;
        } else {
            $op1 = new jm_BigInteger;
            var$12 = $rt_createIntArrayFromData([$valueLo, $valueHi]);
            $op1.$firstNonzeroDigit = (-2);
            $op1.$sign0 = $op1Sign;
            $op1.$numberLength = 2;
            $op1.$digits = var$12;
        }
        return $op1;
    }
    if ($op1Sign == $op2Sign) {
        if ($op1Len < $op2Len) {
            var$12 = $op2.$digits;
            var$13 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len + 1 | 0);
            jm_Elementary_add0($resDigits, var$12, $op2Len, var$13, $op1Len);
        } else {
            var$13 = $op1.$digits;
            var$12 = $op2.$digits;
            $resDigits = $rt_createIntArray($op1Len + 1 | 0);
            jm_Elementary_add0($resDigits, var$13, $op1Len, var$12, $op2Len);
        }
    } else {
        $cmp = $rt_compare($op1Len, $op2Len);
        $cmp = !$cmp ? jm_Elementary_compareArrays($op1.$digits, $op2.$digits, $op1Len) : $cmp <= 0 ? (-1) : 1;
        if (!$cmp)
            return jm_BigInteger_ZERO;
        if ($cmp != 1) {
            var$12 = $op2.$digits;
            var$13 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len);
            jm_Elementary_subtract0($resDigits, var$12, $op2Len, var$13, $op1Len);
            $op1Sign = $op2Sign;
        } else {
            var$12 = $op1.$digits;
            var$13 = $op2.$digits;
            $resDigits = $rt_createIntArray($op1Len);
            jm_Elementary_subtract0($resDigits, var$12, $op1Len, var$13, $op2Len);
        }
    }
    var$12 = $resDigits.data;
    $res_0 = new jm_BigInteger;
    $op2Sign = var$12.length;
    $res_0.$firstNonzeroDigit = (-2);
    $res_0.$sign0 = $op1Sign;
    $res_0.$numberLength = $op2Sign;
    $res_0.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($res_0);
    return $res_0;
},
jm_Elementary_add0 = ($res, $a, $aSize, $b, $bSize) => {
    let var$6, $carry, var$8, $i;
    var$6 = $res.data;
    $res = $b.data;
    $a = $a.data;
    $carry = Long_add(Long_and(Long_fromInt($a[0]), Long_create(4294967295, 0)), Long_and(Long_fromInt($res[0]), Long_create(4294967295, 0)));
    var$6[0] = Long_lo($carry);
    var$8 = Long_shr($carry, 32);
    if ($aSize < $bSize) {
        $i = 1;
        while ($i < $aSize) {
            $carry = Long_add(var$8, Long_add(Long_and(Long_fromInt($a[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt($res[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $bSize) {
            $carry = Long_add(var$8, Long_and(Long_fromInt($res[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
    } else {
        $i = 1;
        while ($i < $bSize) {
            $carry = Long_add(var$8, Long_add(Long_and(Long_fromInt($a[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt($res[$i]), Long_create(4294967295, 0))));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
        while ($i < $aSize) {
            $carry = Long_add(var$8, Long_and(Long_fromInt($a[$i]), Long_create(4294967295, 0)));
            var$6[$i] = Long_lo($carry);
            var$8 = Long_shr($carry, 32);
            $i = $i + 1 | 0;
        }
    }
    if (Long_ne(var$8, Long_ZERO))
        var$6[$i] = Long_lo(var$8);
},
jm_Elementary_subtract = ($op1, $op2) => {
    let $op1Sign, $op2Sign, var$5, $op1Len, $op2Len, $a, $b, $resSign, $cmp, var$12, $resDigits, $res;
    $op1Sign = $op1.$sign0;
    $op2Sign = $op2.$sign0;
    if (!$op2Sign)
        return $op1;
    if (!$op1Sign) {
        if (!$op2Sign)
            $op1 = $op2;
        else {
            $op1 = new jm_BigInteger;
            $op1Sign =  -$op2Sign | 0;
            $op2Sign = $op2.$numberLength;
            var$5 = $op2.$digits;
            $op1.$firstNonzeroDigit = (-2);
            $op1.$sign0 = $op1Sign;
            $op1.$numberLength = $op2Sign;
            $op1.$digits = var$5;
        }
        return $op1;
    }
    $op1Len = $op1.$numberLength;
    $op2Len = $op2.$numberLength;
    if (($op1Len + $op2Len | 0) == 2) {
        $a = Long_and(Long_fromInt($op1.$digits.data[0]), Long_create(4294967295, 0));
        $b = Long_and(Long_fromInt($op2.$digits.data[0]), Long_create(4294967295, 0));
        if ($op1Sign < 0)
            $a = Long_neg($a);
        if ($op2Sign < 0)
            $b = Long_neg($b);
        return jm_BigInteger_valueOf(Long_sub($a, $b));
    }
    $resSign = $rt_compare($op1Len, $op2Len);
    $cmp = !$resSign ? jm_Elementary_compareArrays($op1.$digits, $op2.$digits, $op1Len) : $resSign <= 0 ? (-1) : 1;
    if ($cmp == (-1)) {
        $resSign =  -$op2Sign | 0;
        if ($op1Sign == $op2Sign) {
            var$5 = $op2.$digits;
            var$12 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len);
            jm_Elementary_subtract0($resDigits, var$5, $op2Len, var$12, $op1Len);
        } else {
            var$5 = $op2.$digits;
            var$12 = $op1.$digits;
            $resDigits = $rt_createIntArray($op2Len + 1 | 0);
            jm_Elementary_add0($resDigits, var$5, $op2Len, var$12, $op1Len);
        }
    } else if ($op1Sign != $op2Sign) {
        var$5 = $op1.$digits;
        var$12 = $op2.$digits;
        $resDigits = $rt_createIntArray($op1Len + 1 | 0);
        jm_Elementary_add0($resDigits, var$5, $op1Len, var$12, $op2Len);
        $resSign = $op1Sign;
    } else {
        if (!$cmp)
            return jm_BigInteger_ZERO;
        var$5 = $op1.$digits;
        var$12 = $op2.$digits;
        $resDigits = $rt_createIntArray($op1Len);
        jm_Elementary_subtract0($resDigits, var$5, $op1Len, var$12, $op2Len);
        $resSign = $op1Sign;
    }
    var$5 = $resDigits.data;
    $res = new jm_BigInteger;
    $op1Sign = var$5.length;
    $res.$firstNonzeroDigit = (-2);
    $res.$sign0 = $resSign;
    $res.$numberLength = $op1Sign;
    $res.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($res);
    return $res;
},
jm_Elementary_subtract0 = ($res, $a, $aSize, $b, $bSize) => {
    let $borrow, $i, var$8, var$9, var$10, var$11;
    $borrow = Long_ZERO;
    $i = 0;
    while ($i < $bSize) {
        var$8 = $res.data;
        var$9 = $b.data;
        var$10 = Long_add($borrow, Long_sub(Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$9[$i]), Long_create(4294967295, 0))));
        var$8[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
    while ($i < $aSize) {
        var$11 = $res.data;
        var$10 = Long_add($borrow, Long_and(Long_fromInt($a.data[$i]), Long_create(4294967295, 0)));
        var$11[$i] = Long_lo(var$10);
        $borrow = Long_shr(var$10, 32);
        $i = $i + 1 | 0;
    }
},
jm_Division = $rt_classWithoutFields(),
jm_Division_divide = ($quot, $quotLength, $a, $j, $b, $bLength) => {
    let var$7, $normA, $normB, $borrow, $divisorShift, $firstDivisorDigit, $i, var$14, var$15, var$16, $res, $rem, $rOverflowed, $product, $carry, $longR, $k;
    var$7 = $b.data;
    $normA = $rt_createIntArray($j + 1 | 0);
    $normB = $rt_createIntArray($bLength + 1 | 0);
    $borrow = $bLength - 1 | 0;
    $divisorShift = jl_Integer_numberOfLeadingZeros(var$7[$borrow]);
    if ($divisorShift) {
        jm_BitLevel_shiftLeft($normB, $b, 0, $divisorShift);
        jm_BitLevel_shiftLeft($normA, $a, 0, $divisorShift);
    } else {
        jl_System_fastArraycopy($a, 0, $normA, 0, $j);
        jl_System_fastArraycopy($b, 0, $normB, 0, $bLength);
    }
    var$7 = $normB.data;
    $b = $normA.data;
    $firstDivisorDigit = var$7[$borrow];
    $i = $quotLength - 1 | 0;
    var$14 = $bLength - 2 | 0;
    var$15 = Long_and(Long_fromInt($firstDivisorDigit), Long_create(4294967295, 0));
    while ($i >= 0) {
        a: {
            if ($b[$j] == $firstDivisorDigit)
                var$16 = (-1);
            else {
                $res = jm_Division_divideLongByInt(Long_add(Long_shl(Long_and(Long_fromInt($b[$j]), Long_create(4294967295, 0)), 32), Long_and(Long_fromInt($b[$j - 1 | 0]), Long_create(4294967295, 0))), $firstDivisorDigit);
                var$16 = Long_lo($res);
                $rem = Long_hi($res);
                if (var$16) {
                    $rOverflowed = 0;
                    var$16 = var$16 + 1 | 0;
                    while (true) {
                        var$16 = var$16 + (-1) | 0;
                        if ($rOverflowed)
                            break;
                        $product = Long_mul(Long_and(Long_fromInt(var$16), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[var$14]), Long_create(4294967295, 0)));
                        $carry = Long_fromInt($rem);
                        $res = Long_add(Long_shl($carry, 32), Long_and(Long_fromInt($b[$j - 2 | 0]), Long_create(4294967295, 0)));
                        $longR = Long_add(Long_and($carry, Long_create(4294967295, 0)), var$15);
                        if (jl_Integer_numberOfLeadingZeros(Long_hi($longR)) >= 32)
                            $rem = Long_lo($longR);
                        else
                            $rOverflowed = 1;
                        if (Long_le(Long_xor($product, Long_create(0, 2147483648)), Long_xor($res, Long_create(0, 2147483648))))
                            break a;
                    }
                }
            }
        }
        if (var$16) {
            $quotLength = $j - $bLength | 0;
            if (jm_Division_multiplyAndSubtract($normA, $quotLength, $normB, $bLength, var$16)) {
                var$16 = var$16 + (-1) | 0;
                $carry = Long_ZERO;
                $k = 0;
                while ($k < $bLength) {
                    $borrow = $quotLength + $k | 0;
                    $carry = Long_add($carry, Long_add(Long_and(Long_fromInt($b[$borrow]), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$7[$k]), Long_create(4294967295, 0))));
                    $b[$borrow] = Long_lo($carry);
                    $carry = Long_shru($carry, 32);
                    $k = $k + 1 | 0;
                }
            }
        }
        if ($quot !== null)
            $quot.data[$i] = var$16;
        $j = $j + (-1) | 0;
        $i = $i + (-1) | 0;
    }
    if ($divisorShift) {
        jm_BitLevel_shiftRight0($normB, $bLength, $normA, 0, $divisorShift);
        return $normB;
    }
    jl_System_fastArraycopy($normA, 0, $normB, 0, $bLength);
    return $normA;
},
jm_Division_divideArrayByInt = ($dest, $src, $srcLength, $divisor) => {
    let $rem, $bLong, $i, $bPos, var$9, var$10, $temp, $quot, $aPos;
    $rem = Long_ZERO;
    $bLong = Long_and(Long_fromInt($divisor), Long_create(4294967295, 0));
    $i = $srcLength - 1 | 0;
    $bPos = Long_fromInt($divisor >>> 1 | 0);
    $divisor = $divisor & 1;
    var$9 = Long_shl($bLong, 1);
    while ($i >= 0) {
        var$10 = $src.data;
        $temp = Long_or(Long_shl($rem, 32), Long_and(Long_fromInt(var$10[$i]), Long_create(4294967295, 0)));
        if (Long_ge($temp, Long_ZERO)) {
            $quot = Long_div($temp, $bLong);
            $rem = Long_rem($temp, $bLong);
        } else {
            $aPos = Long_shru($temp, 1);
            $quot = Long_div($aPos, $bPos);
            $rem = Long_add(Long_shl(Long_rem($aPos, $bPos), 1), Long_and($temp, Long_fromInt(1)));
            if ($divisor) {
                if (Long_le($quot, $rem))
                    $rem = Long_sub($rem, $quot);
                else if (Long_gt(Long_sub($quot, $rem), $bLong)) {
                    $rem = Long_add($rem, Long_sub(var$9, $quot));
                    $quot = Long_sub($quot, Long_fromInt(2));
                } else {
                    $rem = Long_add($rem, Long_sub($bLong, $quot));
                    $quot = Long_sub($quot, Long_fromInt(1));
                }
            }
        }
        $dest.data[$i] = Long_lo(Long_and($quot, Long_create(4294967295, 0)));
        $i = $i + (-1) | 0;
    }
    return Long_lo($rem);
},
jm_Division_divideLongByInt = ($a, $b) => {
    let $bLong, $quot, $rem, $aPos, $bPos;
    $bLong = Long_and(Long_fromInt($b), Long_create(4294967295, 0));
    if (Long_ge($a, Long_ZERO)) {
        $quot = Long_div($a, $bLong);
        $rem = Long_rem($a, $bLong);
    } else {
        $aPos = Long_shru($a, 1);
        $bPos = Long_fromInt($b >>> 1 | 0);
        $quot = Long_div($aPos, $bPos);
        $rem = Long_add(Long_shl(Long_rem($aPos, $bPos), 1), Long_and($a, Long_fromInt(1)));
        if ($b & 1) {
            if (Long_le($quot, $rem))
                $rem = Long_sub($rem, $quot);
            else if (Long_le(Long_sub($quot, $rem), $bLong)) {
                $rem = Long_add($rem, Long_sub($bLong, $quot));
                $quot = Long_sub($quot, Long_fromInt(1));
            } else {
                $rem = Long_add($rem, Long_sub(Long_shl($bLong, 1), $quot));
                $quot = Long_sub($quot, Long_fromInt(2));
            }
        }
    }
    return Long_or(Long_shl($rem, 32), Long_and($quot, Long_create(4294967295, 0)));
},
jm_Division_multiplyAndSubtract = ($a, $start, $b, $bLen, $c) => {
    let $carry0, $carry1, $i, var$9, var$10, var$11, var$12, var$13;
    $carry0 = Long_ZERO;
    $carry1 = Long_ZERO;
    $i = 0;
    var$9 = Long_and(Long_fromInt($c), Long_create(4294967295, 0));
    while ($i < $bLen) {
        var$10 = $b.data;
        var$11 = $a.data;
        $c = var$10[$i];
        var$12 = Long_lo($carry0);
        jm_Multiplication_$callClinit();
        $carry0 = Long_add(Long_add(Long_mul(Long_and(Long_fromInt($c), Long_create(4294967295, 0)), var$9), Long_and(Long_fromInt(var$12), Long_create(4294967295, 0))), Long_ZERO);
        var$12 = $start + $i | 0;
        var$13 = Long_add(Long_sub(Long_and(Long_fromInt(var$11[var$12]), Long_create(4294967295, 0)), Long_and($carry0, Long_create(4294967295, 0))), $carry1);
        var$11[var$12] = Long_lo(var$13);
        $carry1 = Long_shr(var$13, 32);
        $carry0 = Long_shru($carry0, 32);
        $i = $i + 1 | 0;
    }
    $a = $a.data;
    $start = $start + $bLen | 0;
    var$9 = Long_add(Long_sub(Long_and(Long_fromInt($a[$start]), Long_create(4294967295, 0)), $carry0), $carry1);
    $a[$start] = Long_lo(var$9);
    return Long_hi(var$9);
};
function cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_08 = null;
}
let cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$1 = var$1.$_08;
    if (jl_System_errCache === null) {
        var$2 = new otcic_JSStderrPrintStream;
        var$3 = null;
        var$4 = null;
        jl_Object__init_(var$2);
        var$2.$out = var$3;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_0(var$3, 16);
        var$2.$sb = var$3;
        var$2.$buffer1 = $rt_createCharArray(32);
        var$2.$autoFlush = 0;
        var$2.$charset = var$4;
        jl_System_errCache = var$2;
    }
    var$2 = new jl_StringBuilder;
    var$2.$buffer = $rt_createCharArray(16);
    var$5 = var$2.$length0;
    var$4 = var$2;
    var$6 = $rt_s(656);
    var$3 = var$4;
    jl_StringBuilder_insert0(var$3, var$5, var$6);
    jl_StringBuilder_insert0(var$3, var$2.$length0, var$1 === null ? $rt_s(1) : var$1);
    var$1 = new jl_String;
    var$7 = var$2.$buffer;
    var$8 = var$7.data;
    var$9 = var$2.$length0;
    var$10 = var$8.length;
    if (var$9 >= 0 && var$9 <= (var$10 - 0 | 0)) {
        var$1.$nativeString = $rt_charArrayToString(var$7.data, 0, var$9);
        $rt_putStderr($rt_ustr(var$1));
        $rt_putStderr("\n");
        return;
    }
    var$1 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
};
function cgxgbta_AssetLoadImpl$6() {
    let a = this; jl_Object.call(a);
    a.$val$listener1 = null;
    a.$val$path1 = null;
    a.$val$fileHandle = null;
    a.$this$09 = null;
}
let cgxgbta_AssetLoadImpl$6_onProgress = ($this, $total, $loaded) => {
    let var$3;
    var$3 = $this.$val$listener1;
    if (var$3 !== null)
        var$3.$onProgress($total, $loaded);
},
cgxgbta_AssetLoadImpl$6_onSuccess = ($this, $url, $result) => {
    let $ex, var$4, $byteArray, var$6, var$7, var$8, var$9, var$10, var$11, $$je;
    $url = $this.$this$09.$assetInQueue;
    $ex = $this.$val$path1;
    $url = ju_HashMap_removeByKey($url.$backingMap, $ex);
    $ex = $result.$data2;
    $url = new Int8Array($ex);
    var$4 = $url.length;
    $byteArray = $rt_createByteArray(var$4);
    var$6 = $byteArray.data;
    var$7 = 0;
    while (var$7 < var$4) {
        var$6[var$7] = $url[var$7];
        var$7 = var$7 + 1 | 0;
    }
    $url = $this.$val$fileHandle;
    $ex = $url.$teaFiles;
    var$8 = $url.$type1;
    $ex = var$8 === cbg_Files$FileType_Internal ? $ex.$internalStorage : var$8 === cbg_Files$FileType_Classpath ? $ex.$classpathStorage : var$8 !== cbg_Files$FileType_Local ? null : $ex.$localStorage;
    var$9 = new ji_ByteArrayOutputStream;
    var$9.$buf = $rt_createByteArray(4096);
    var$8 = new cgxgbtf_FileDB$1;
    var$8.$this$013 = $ex;
    var$8.$val$buffer = var$9;
    var$8.$val$file = $url;
    var$8.$val$append = 0;
    var$8.$val$bufferSize = 4096;
    a: {
        b: {
            try {
                $url = var$8;
                cgxgbtf_FileDB$1_write($url, $byteArray);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $ex = $$je;
                    break b;
                } else{
                    $url = $$je;
                    break a;
                }
            }
            c: {
                try {
                    cgxgbtf_FileDB$1_close($url);
                    break c;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
            }
            $url = $this.$val$listener1;
            if ($url !== null)
                $url.$onSuccess($this.$val$path1, $result);
            return;
        }
        try {
            var$9 = new cbgu_GdxRuntimeException;
            $url = $this.$val$fileHandle;
            var$10 = cgxgbt_TeaFileHandle_type($url);
            var$11 = jl_StringBuilder__init_();
            jl_StringBuilder_append2(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder_append0(var$11, $rt_s(657)), $url), $rt_s(566)), var$10), 41);
            cbgu_GdxRuntimeException__init_1(var$9, jl_StringBuilder_toString(var$11), $ex);
            $rt_throw(var$9);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $url = $$je;

        }
    }
    d: {
        try {
            cgxgbtf_FileDB$1_close(var$8);
            break d;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
            } else {
                throw $$e;
            }
        }
    }
    $rt_throw($url);
},
cgxgbta_AssetLoadImpl$6_onSuccess0 = ($this, var$1, var$2) => {
    cgxgbta_AssetLoadImpl$6_onSuccess($this, var$1, var$2);
},
jm_Logical = $rt_classWithoutFields(),
jm_Logical_and = ($val, $that) => {
    if ($that.$sign0 && $val.$sign0) {
        if (jm_BigInteger_equals($that, jm_BigInteger_MINUS_ONE))
            return $val;
        if (jm_BigInteger_equals($val, jm_BigInteger_MINUS_ONE))
            return $that;
        if ($val.$sign0 > 0) {
            if ($that.$sign0 <= 0)
                return jm_Logical_andDiffSigns($val, $that);
            return jm_Logical_andPositive($val, $that);
        }
        if ($that.$sign0 > 0)
            return jm_Logical_andDiffSigns($that, $val);
        if ($val.$numberLength <= $that.$numberLength)
            return jm_Logical_andNegative($that, $val);
        return jm_Logical_andNegative($val, $that);
    }
    return jm_BigInteger_ZERO;
},
jm_Logical_andPositive = ($val, $that) => {
    let $resLength, $resLength_0, $i, $i_0, $resDigits, var$8, $result;
    $resLength = $val.$numberLength;
    $resLength_0 = $that.$numberLength;
    if ($resLength < $resLength_0)
        $resLength_0 = $resLength;
    if ($val.$firstNonzeroDigit == (-2)) {
        if (!$val.$sign0)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$val.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $val.$firstNonzeroDigit = $resLength;
    }
    $i = $val.$firstNonzeroDigit;
    if ($that.$firstNonzeroDigit == (-2)) {
        if (!$that.$sign0)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$that.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $that.$firstNonzeroDigit = $resLength;
    }
    $i_0 = $that.$firstNonzeroDigit;
    if ($i > $i_0)
        $i_0 = $i;
    if ($i_0 >= $resLength_0)
        return jm_BigInteger_ZERO;
    $resDigits = $rt_createIntArray($resLength_0);
    var$8 = $resDigits.data;
    while ($i_0 < $resLength_0) {
        var$8[$i_0] = $val.$digits.data[$i_0] & $that.$digits.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    $result = new jm_BigInteger;
    $result.$firstNonzeroDigit = (-2);
    $result.$sign0 = 1;
    $result.$numberLength = $resLength_0;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_Logical_andDiffSigns = ($positive, $negative) => {
    let $resLength, $i, $iNeg, $resDigits, $limit, var$8, $result;
    if ($positive.$firstNonzeroDigit == (-2)) {
        if (!$positive.$sign0)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$positive.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $positive.$firstNonzeroDigit = $resLength;
    }
    $i = $positive.$firstNonzeroDigit;
    if ($negative.$firstNonzeroDigit == (-2)) {
        if (!$negative.$sign0)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$negative.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $negative.$firstNonzeroDigit = $resLength;
    }
    $iNeg = $negative.$firstNonzeroDigit;
    $resLength = $positive.$numberLength;
    if ($iNeg >= $resLength)
        return jm_BigInteger_ZERO;
    $resDigits = $rt_createIntArray($resLength);
    if ($i <= $iNeg)
        $i = $iNeg;
    if ($i == $iNeg) {
        $resDigits.data[$i] = ( -$negative.$digits.data[$i] | 0) & $positive.$digits.data[$i];
        $i = $i + 1 | 0;
    }
    $iNeg = $negative.$numberLength;
    $limit = $iNeg >= $resLength ? $resLength : $iNeg;
    var$8 = $resDigits.data;
    while ($i < $limit) {
        var$8[$i] = ($negative.$digits.data[$i] ^ (-1)) & $positive.$digits.data[$i];
        $i = $i + 1 | 0;
    }
    a: {
        if ($i >= $iNeg)
            while (true) {
                if ($i >= $resLength)
                    break a;
                var$8[$i] = $positive.$digits.data[$i];
                $i = $i + 1 | 0;
            }
    }
    $result = new jm_BigInteger;
    $result.$firstNonzeroDigit = (-2);
    $result.$sign0 = 1;
    $result.$numberLength = $resLength;
    $result.$digits = $resDigits;
    jm_BigInteger_cutOffLeadingZeroes($result);
    return $result;
},
jm_Logical_andNegative = ($longer, $shorter) => {
    let $resLength, $i, $i_0, var$6, $digit, $resDigits, $result, $resLength_0, $resDigits_0, var$12;
    if ($longer.$firstNonzeroDigit == (-2)) {
        if (!$longer.$sign0)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$longer.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $longer.$firstNonzeroDigit = $resLength;
    }
    $i = $longer.$firstNonzeroDigit;
    if ($shorter.$firstNonzeroDigit == (-2)) {
        if (!$shorter.$sign0)
            $resLength = (-1);
        else {
            $resLength = 0;
            while (!$shorter.$digits.data[$resLength]) {
                $resLength = $resLength + 1 | 0;
            }
        }
        $shorter.$firstNonzeroDigit = $resLength;
    }
    $i_0 = $shorter.$firstNonzeroDigit;
    $resLength = $shorter.$numberLength;
    if ($i >= $resLength)
        return $longer;
    var$6 = $rt_compare($i_0, $i);
    if (var$6 > 0)
        $i = $i_0;
    $digit = var$6 > 0 ? ( -$shorter.$digits.data[$i] | 0) & ($longer.$digits.data[$i] ^ (-1)) : var$6 >= 0 ? ( -$shorter.$digits.data[$i] | 0) & ( -$longer.$digits.data[$i] | 0) : ($shorter.$digits.data[$i] ^ (-1)) & ( -$longer.$digits.data[$i] | 0);
    if (!$digit) {
        $i = $i + 1 | 0;
        a: {
            while ($i < $resLength) {
                $digit = ($longer.$digits.data[$i] | $shorter.$digits.data[$i]) ^ (-1);
                if ($digit)
                    break a;
                $i = $i + 1 | 0;
            }
        }
        if (!$digit) {
            b: {
                while (true) {
                    var$6 = $longer.$numberLength;
                    if ($i >= var$6)
                        break;
                    $digit = $longer.$digits.data[$i] ^ (-1);
                    if ($digit)
                        break b;
                    $i = $i + 1 | 0;
                }
            }
            if (!$digit) {
                $resLength = var$6 + 1 | 0;
                $resDigits = $rt_createIntArray($resLength);
                $resDigits.data[$resLength - 1 | 0] = 1;
                $result = new jm_BigInteger;
                $result.$firstNonzeroDigit = (-2);
                $result.$sign0 = (-1);
                $result.$numberLength = $resLength;
                $result.$digits = $resDigits;
                return $result;
            }
        }
    }
    $resLength_0 = $longer.$numberLength;
    $resDigits_0 = $rt_createIntArray($resLength_0);
    var$12 = $resDigits_0.data;
    var$12[$i] =  -$digit | 0;
    $digit = $i + 1 | 0;
    while ($digit < $resLength) {
        var$12[$digit] = $longer.$digits.data[$digit] | $shorter.$digits.data[$digit];
        $digit = $digit + 1 | 0;
    }
    while ($digit < $resLength_0) {
        var$12[$digit] = $longer.$digits.data[$digit];
        $digit = $digit + 1 | 0;
    }
    $result = new jm_BigInteger;
    $result.$firstNonzeroDigit = (-2);
    $result.$sign0 = (-1);
    $result.$numberLength = $resLength_0;
    $result.$digits = $resDigits_0;
    return $result;
};
function cbgu_StringBuilder() {
    let a = this; jl_Object.call(a);
    a.$chars = null;
    a.$length1 = 0;
}
let cbgu_StringBuilder_digits = null,
cbgu_StringBuilder_enlargeBuffer = ($this, $min) => {
    let var$2, var$3, $newSize, $newData;
    var$2 = $this.$chars;
    var$3 = var$2.data.length;
    $newSize = ((var$3 >> 1) + var$3 | 0) + 2 | 0;
    if ($min > $newSize)
        $newSize = $min;
    $newData = $rt_createCharArray($newSize);
    jl_System_fastArraycopy(var$2, 0, $newData, 0, $this.$length1);
    $this.$chars = $newData;
},
cbgu_StringBuilder_appendNull = $this => {
    let $newSize, var$2, var$3;
    $newSize = $this.$length1 + 4 | 0;
    if ($newSize > $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$2 = $this.$chars.data;
    var$3 = $this.$length1;
    $newSize = var$3 + 1 | 0;
    $this.$length1 = $newSize;
    var$2[var$3] = 110;
    var$3 = $newSize + 1 | 0;
    $this.$length1 = var$3;
    var$2[$newSize] = 117;
    $newSize = var$3 + 1 | 0;
    $this.$length1 = $newSize;
    var$2[var$3] = 108;
    $this.$length1 = $newSize + 1 | 0;
    var$2[$newSize] = 108;
},
cbgu_StringBuilder_append = ($this, $value, $minLength, $prefix) => {
    let var$4, var$5, $j;
    if ($value == (-2147483648)) {
        var$4 = $rt_s(658).$nativeString.length;
        $value = $this.$length1 + var$4 | 0;
        if ($value > $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $value);
        jl_String_getChars($rt_s(658), 0, var$4, $this.$chars, $this.$length1);
        $this.$length1 = $value;
        return $this;
    }
    if ($value < 0) {
        var$4 = $this.$length1;
        if (var$4 == $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, var$4 + 1 | 0);
        var$5 = $this.$chars.data;
        $j = $this.$length1;
        $this.$length1 = $j + 1 | 0;
        var$5[$j] = 45;
        $value =  -$value | 0;
    }
    a: {
        if ($minLength > 1) {
            var$4 = $value >= 0 ? 1 : 2;
            $j = $value;
            while (true) {
                $j = $j / 10 | 0;
                if (!$j)
                    break;
                var$4 = var$4 + 1 | 0;
            }
            $j = $minLength - var$4 | 0;
            while (true) {
                if ($j <= 0)
                    break a;
                var$4 = $this.$length1;
                if (var$4 == $this.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($this, var$4 + 1 | 0);
                var$5 = $this.$chars.data;
                $minLength = $this.$length1;
                $this.$length1 = $minLength + 1 | 0;
                var$5[$minLength] = $prefix;
                $j = $j + (-1) | 0;
            }
        }
    }
    if ($value >= 10000) {
        if ($value >= 1000000000) {
            $minLength = cbgu_StringBuilder_digits.data[Long_lo(Long_div(Long_rem(Long_fromInt($value), Long_create(1410065408, 2)), Long_fromInt(1000000000)))];
            $prefix = $this.$length1;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            var$4 = $this.$length1;
            $this.$length1 = var$4 + 1 | 0;
            var$5[var$4] = $minLength;
        }
        if ($value >= 100000000) {
            $minLength = cbgu_StringBuilder_digits.data[($value % 1000000000 | 0) / 100000000 | 0];
            $prefix = $this.$length1;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            var$4 = $this.$length1;
            $this.$length1 = var$4 + 1 | 0;
            var$5[var$4] = $minLength;
        }
        if ($value >= 10000000) {
            $minLength = cbgu_StringBuilder_digits.data[($value % 100000000 | 0) / 10000000 | 0];
            $prefix = $this.$length1;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            var$4 = $this.$length1;
            $this.$length1 = var$4 + 1 | 0;
            var$5[var$4] = $minLength;
        }
        if ($value >= 1000000) {
            $minLength = cbgu_StringBuilder_digits.data[($value % 10000000 | 0) / 1000000 | 0];
            $prefix = $this.$length1;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            var$4 = $this.$length1;
            $this.$length1 = var$4 + 1 | 0;
            var$5[var$4] = $minLength;
        }
        if ($value >= 100000) {
            $minLength = cbgu_StringBuilder_digits.data[($value % 1000000 | 0) / 100000 | 0];
            $prefix = $this.$length1;
            if ($prefix == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
            var$5 = $this.$chars.data;
            var$4 = $this.$length1;
            $this.$length1 = var$4 + 1 | 0;
            var$5[var$4] = $minLength;
        }
        $minLength = cbgu_StringBuilder_digits.data[($value % 100000 | 0) / 10000 | 0];
        $prefix = $this.$length1;
        if ($prefix == $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
        var$5 = $this.$chars.data;
        var$4 = $this.$length1;
        $this.$length1 = var$4 + 1 | 0;
        var$5[var$4] = $minLength;
    }
    if ($value >= 1000) {
        $minLength = cbgu_StringBuilder_digits.data[($value % 10000 | 0) / 1000 | 0];
        $prefix = $this.$length1;
        if ($prefix == $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
        var$5 = $this.$chars.data;
        var$4 = $this.$length1;
        $this.$length1 = var$4 + 1 | 0;
        var$5[var$4] = $minLength;
    }
    if ($value >= 100) {
        $minLength = cbgu_StringBuilder_digits.data[($value % 1000 | 0) / 100 | 0];
        $prefix = $this.$length1;
        if ($prefix == $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
        var$5 = $this.$chars.data;
        var$4 = $this.$length1;
        $this.$length1 = var$4 + 1 | 0;
        var$5[var$4] = $minLength;
    }
    if ($value >= 10) {
        $minLength = cbgu_StringBuilder_digits.data[($value % 100 | 0) / 10 | 0];
        $prefix = $this.$length1;
        if ($prefix == $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
        var$5 = $this.$chars.data;
        var$4 = $this.$length1;
        $this.$length1 = var$4 + 1 | 0;
        var$5[var$4] = $minLength;
    }
    $value = cbgu_StringBuilder_digits.data[$value % 10 | 0];
    $minLength = $this.$length1;
    if ($minLength == $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $minLength + 1 | 0);
    var$5 = $this.$chars.data;
    $prefix = $this.$length1;
    $this.$length1 = $prefix + 1 | 0;
    var$5[$prefix] = $value;
    return $this;
},
cbgu_StringBuilder__clinit_ = () => {
    cbgu_StringBuilder_digits = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
},
jl_InstantiationException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jl_IllegalAccessException = $rt_classWithoutFields(jl_ReflectiveOperationException),
jlr_InvocationTargetException = $rt_classWithoutFields(jl_ReflectiveOperationException),
otcir_Converter = $rt_classWithoutFields();
function jl_Boolean() {
    jl_Object.call(this);
    this.$value2 = 0;
}
let jl_Boolean_TRUE = null,
jl_Boolean_FALSE = null,
jl_Boolean_TYPE = null,
jl_Boolean_booleanValue = $this => {
    return $this.$value2;
},
jl_Boolean__clinit_ = () => {
    let var$1;
    var$1 = new jl_Boolean;
    var$1.$value2 = 1;
    jl_Boolean_TRUE = var$1;
    var$1 = new jl_Boolean;
    var$1.$value2 = 0;
    jl_Boolean_FALSE = var$1;
    jl_Boolean_TYPE = $rt_cls($rt_booleancls);
};
function cgxgbtf_FileDB$1() {
    let a = this; ji_OutputStream.call(a);
    a.$val$buffer = null;
    a.$val$file = null;
    a.$val$append = 0;
    a.$val$bufferSize = 0;
    a.$this$013 = null;
}
let cgxgbtf_FileDB$1_write = ($this, $b) => {
    let var$2, var$3, var$4;
    var$2 = $b.data;
    var$3 = $this.$val$buffer;
    var$4 = var$2.length;
    ji_ByteArrayOutputStream_write(var$3, $b, 0, var$4);
},
cgxgbtf_FileDB$1_close = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$val$buffer;
    var$2 = var$1.$buf.data;
    var$3 = var$1.$count0;
    var$4 = $rt_createByteArray(var$3);
    var$5 = var$2.length;
    if (var$3 < var$5)
        var$5 = var$3;
    var$6 = var$4.data;
    var$3 = 0;
    while (var$3 < var$5) {
        var$6[var$3] = var$2[var$3];
        var$3 = var$3 + 1 | 0;
    }
    var$1 = $this.$this$013;
    var$7 = $this.$val$file;
    var$3 = $this.$val$append;
    var$5 = var$6.length;
    var$8 = $this.$val$bufferSize;
    if (var$5 > var$8)
        var$8 = var$5;
    cgxgbtf_MemoryFileStorage_writeInternal(var$1, var$7, var$4, var$3, var$8);
},
cbgg_Colors = $rt_classWithoutFields(),
cbgg_Colors_map = null,
cbgg_Colors_$callClinit = () => {
    cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
    cbgg_Colors__clinit_();
},
cbgg_Colors_reset = () => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    cbgg_Colors_$callClinit();
    var$1 = cbgg_Colors_map;
    if (var$1.$size4) {
        var$1.$size4 = 0;
        var$2 = var$1.$keyTable.data;
        var$3 = null;
        var$4 = 0;
        var$5 = var$2.length;
        if (var$4 > var$5) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$4 < var$5) {
            var$6 = var$4 + 1 | 0;
            var$2[var$4] = var$3;
            var$4 = var$6;
        }
        var$2 = var$1.$valueTable.data;
        var$3 = null;
        var$4 = 0;
        var$5 = var$2.length;
        if (var$4 > var$5) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$4 < var$5) {
            var$6 = var$4 + 1 | 0;
            var$2[var$4] = var$3;
            var$4 = var$6;
        }
    }
    cbgu_ObjectMap_put(var$1, $rt_s(659), cbgg_Color_CLEAR);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(660), cbgg_Color_CLEAR_WHITE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(661), cbgg_Color_BLACK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(662), cbgg_Color_WHITE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(663), cbgg_Color_LIGHT_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(664), cbgg_Color_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(665), cbgg_Color_DARK_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(666), cbgg_Color_BLUE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(667), cbgg_Color_NAVY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(668), cbgg_Color_ROYAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(669), cbgg_Color_SLATE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(670), cbgg_Color_SKY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(671), cbgg_Color_CYAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(672), cbgg_Color_TEAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(673), cbgg_Color_GREEN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(674), cbgg_Color_CHARTREUSE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(675), cbgg_Color_LIME);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(676), cbgg_Color_FOREST);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(677), cbgg_Color_OLIVE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(678), cbgg_Color_YELLOW);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(679), cbgg_Color_GOLD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(680), cbgg_Color_GOLDENROD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(681), cbgg_Color_ORANGE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(682), cbgg_Color_BROWN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(683), cbgg_Color_TAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(684), cbgg_Color_FIREBRICK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(685), cbgg_Color_RED);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(686), cbgg_Color_SCARLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(687), cbgg_Color_CORAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(688), cbgg_Color_SALMON);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(689), cbgg_Color_PINK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(690), cbgg_Color_MAGENTA);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(691), cbgg_Color_PURPLE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(692), cbgg_Color_VIOLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(693), cbgg_Color_MAROON);
},
cbgg_Colors__clinit_ = () => {
    cbgg_Colors_map = cbgu_ObjectMap__init_0(51, 0.800000011920929);
    cbgg_Colors_reset();
};
$rt_packages([-1, "com", 0, "github", 1, "xpenatan", 2, "gdx", 3, "backends", 4, "teavm", 5, "assetloader", 5, "filesystem", 7, "types", 0, "badlogic", 9, "gdx", 10, "utils", 11, "reflect", 10, "scenes", 13, "scene2d", 14, "ui", 10, "graphics", 16, "glutils", 16, "g2d", -1, "java", 19, "util", 20, "regex", 19, "nio", 22, "charset", 19, "io", 19, "lang", 25, "reflect", -1, "org", 27, "teavm", 28, "classlib", 29, "impl", 30, "unicode"
]);
$rt_metadata([jl_Object, "Object", 25, 0, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString)],
cbgssu_UIUtilsEmu, 0, jl_Object, [], 0, 3, 0, cbgssu_UIUtilsEmu_$callClinit, 0,
cbgss_InputListener$1, 0, jl_Object, [], 32, 0, 0, cbgss_InputListener$1_$callClinit, 0,
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Enum_toString)],
cbgss_InputEvent$Type, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Event, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
cbgss_Action, 0, jl_Object, [cbgu_Pool$Poolable], 1, 3, 0, 0, 0,
cbgssa_TemporalAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_IntAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_AlphaAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_RotateToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_FloatAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_RelativeTemporalAction, 0, cbgssa_TemporalAction, [], 1, 3, 0, 0, 0,
cbgssa_ScaleByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_AddListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_RunnableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_MoveByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_DelegateAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_RemoveAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_RemoveListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_ScaleToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_Actions, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssa_RepeatAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgss_EventListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssa_EventAction$1, 0, jl_Object, [cbgss_EventListener], 0, 0, 0, 0, 0,
cbgssa_DelayAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssa_MoveToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_RemoveActorAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_EventAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
cbgssa_ParallelAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_TouchableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_AfterAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssa_SequenceAction, 0, cbgssa_ParallelAction, [], 0, 3, 0, 0, 0,
cbgssa_CountdownEventAction, 0, cbgssa_EventAction, [], 0, 3, 0, 0, 0,
cbgssa_ColorAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_AddAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_SizeToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_VisibleAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_SizeByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgssa_LayoutAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
cbgssa_TimeScaleAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
cbgssa_RotateByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
cbgss_Stage$TouchFocus, 0, jl_Object, [cbgu_Pool$Poolable], 4, 3, 0, 0, 0,
cbgss_Touchable, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgssu_Drawable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_BaseDrawable, 0, jl_Object, [cbgssu_Drawable], 0, 3, 0, 0, 0,
cbgssu_TransformDrawable, 0, jl_Object, [cbgssu_Drawable], 3, 3, 0, 0, 0]);
$rt_metadata([cbgssu_TextureRegionDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cbgssu_ChangeListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
cbgssu_FocusListener$FocusEvent$Type, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgssu_NinePatchDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cbgssu_ChangeListener$ChangeEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Timer$Task, 0, jl_Object, [jl_Runnable], 1, 3, 0, 0, 0,
cbgssu_DragScrollListener$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_Disableable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_DragAndDrop, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_UIUtils, 0, jl_Object, [], 4, 3, 0, cbgssu_UIUtils_$callClinit, 0,
cbgssu_FocusListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
cbgssu_FocusListener$1, 0, jl_Object, [], 32, 0, 0, cbgssu_FocusListener$1_$callClinit, 0,
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_Selection, 0, jl_Object, [cbgssu_Disableable, jl_Iterable], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop$Target, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgssu_ArraySelection, 0, cbgssu_Selection, [], 0, 3, 0, 0, 0,
cbgssu_FocusListener$FocusEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
cbgssu_DragScrollListener$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_ActorGestureListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop$Source, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgss_InputListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, 0, 0,
cbgssu_ClickListener, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
cbgssu_SpriteDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
cbgssu_ActorGestureListener$2, 0, jl_Object, [], 32, 0, 0, cbgssu_ActorGestureListener$2_$callClinit, 0,
cbgssu_DragListener, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop$Payload, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Cullable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_Layout, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_ScissorStack, 0, jl_Object, [], 0, 3, 0, cbgssu_ScissorStack_$callClinit, 0,
cbgssu_TiledDrawable, 0, cbgssu_TextureRegionDrawable, [], 0, 3, 0, 0, 0,
cbgssu_DragScrollListener, 0, cbgssu_DragListener, [], 0, 3, 0, 0, 0,
cbgssu_DragAndDrop$1, 0, cbgssu_DragListener, [], 0, 0, 0, 0, 0,
cbgi_GestureDetector$GestureListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgi_GestureDetector$GestureAdapter, 0, jl_Object, [cbgi_GestureDetector$GestureListener], 0, 3, 0, 0, 0,
cbgssu_ActorGestureListener$1, 0, cbgi_GestureDetector$GestureAdapter, [], 0, 0, 0, 0, 0,
cbg_InputProcessor, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_InputAdapter, 0, jl_Object, [cbg_InputProcessor], 0, 3, 0, 0, 0,
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Stage, 0, cbg_InputAdapter, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgss_InputEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
cbgssu_SplitPane$SplitPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Value, 0, jl_Object, [], 1, 3, 0, cbgssu_Value_$callClinit, 0,
cbgssu_Value$8, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgss_Actor, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgss_Group, 0, cbgss_Actor, [cbgssu_Cullable], 0, 3, 0, 0, 0,
cbgssu_WidgetGroup, 0, cbgss_Group, [cbgssu_Layout], 0, 3, 0, 0, 0,
cbgssu_Table, 0, cbgssu_WidgetGroup, [], 0, 3, 0, cbgssu_Table_$callClinit, 0,
cbgssu_Button, 0, cbgssu_Table, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_TextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0]);
$rt_metadata([cbgssu_Button$ButtonStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_ImageButton$ImageButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_Tooltip, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
cbgssu_Window$WindowStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Json$Serializer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Json$ReadOnlySerializer, 0, jl_Object, [cbgu_Json$Serializer], 1, 3, 0, 0, 0,
cbgssu_Skin$4, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_ButtonGroup, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_TextTooltip$TextTooltipStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Widget, 0, cbgss_Actor, [cbgssu_Layout], 0, 3, 0, 0, 0,
cbgssu_List, 0, cbgssu_Widget, [cbgssu_Cullable], 0, 3, 0, 0, 0,
cbgssu_SplitPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Container, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_Tooltip$1, 0, cbgssu_Container, [], 0, 0, 0, 0, 0,
cbgssu_TextField, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_TextArea, 0, cbgssu_TextField, [], 0, 3, 0, 0, 0,
cbgssu_Dialog$3, 0, cbgssu_FocusListener, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_ProgressBar$ProgressBarStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Slider$SliderStyle, 0, cbgssu_ProgressBar$ProgressBarStyle, [], 0, 3, 0, 0, 0,
cbgssu_Cell, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbgssu_Cell_$callClinit, 0,
cbgssu_Dialog$2, 0, cbgssu_ChangeListener, [], 0, 0, 0, 0, 0,
cbgssu_Label, 0, cbgssu_Widget, [], 0, 3, 0, cbgssu_Label_$callClinit, 0,
cbgssu_Table$4, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_ProgressBar, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_Slider, 0, cbgssu_ProgressBar, [], 0, 3, 0, 0, 0,
cbgssu_TextField$OnscreenKeyboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_Table$3, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_TooltipManager$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_Touchpad$TouchpadStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_ScrollPane$2, 0, cbgssu_ActorGestureListener, [], 0, 0, 0, 0, 0,
cbgssu_Value$6, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_List$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_VerticalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_SplitPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_Value$10, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_List$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Button$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_TextField$TextFieldStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Value$7, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_TextField$TextFieldFilter, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_ImageButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgssu_Table$Debug, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgssu_Value$4, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Tree$TreeStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Touchpad, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
cbgssu_ScrollPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_TextField$KeyRepeatTask, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_Window, 0, cbgssu_Table, [], 0, 3, 0, 0, 0,
cbgssu_TooltipManager$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0]);
$rt_metadata([cbgssu_ScrollPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane, 0, cbgssu_ScrollPane, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$1, 0, cbgssu_ArraySelection, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_TextTooltip, 0, cbgssu_Tooltip, [], 0, 3, 0, 0, 0,
cbgssu_Image, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
cbgssu_Window$1, 0, cbgssu_Table, [], 0, 0, 0, 0, 0,
cbgssu_Window$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Slider$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Value$1, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Value$9, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Tree, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_Dialog$4, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_TextButton$TextButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_ImageTextButton$ImageTextButtonStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_TextField$DefaultOnscreenKeyboard, 0, jl_Object, [cbgssu_TextField$OnscreenKeyboard], 0, 3, 0, 0, 0,
cbgssu_Tree$1, 0, cbgssu_Selection, [], 0, 0, 0, 0, 0,
cbgssu_Table$2, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_Skin$TintedDrawable, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Skin$2, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Value$3, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_TextField$TextFieldClickListener, 0, cbgssu_ClickListener, [], 0, 3, 0, 0, 0,
cbgssu_Window$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_CheckBox$CheckBoxStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter, 0, jl_Object, [cbgssu_TextField$TextFieldFilter], 0, 3, 0, 0, 0,
cbgssu_ScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Dialog$4$1, 0, jl_Object, [jl_Runnable], 0, 0, 0, 0, 0,
cbgssu_Label$LabelStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_TextArea$TextAreaListener, 0, cbgssu_TextField$TextFieldClickListener, [], 0, 3, 0, 0, 0,
cbgssu_HorizontalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_TextField$TextFieldListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_TextField$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
cbgssu_ParticleEffectActor, 0, cbgss_Actor, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgssu_Stack, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
cbgssu_Value$2, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
cbgssu_Dialog, 0, cbgssu_Window, [], 0, 3, 0, 0, 0,
cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgssu_Table$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$4, 0, cbgssu_List, [], 0, 0, 0, 0, 0,
cbgssu_Skin$3, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_Skin$5, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
cbgssu_ScrollPane$ScrollPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Tree$Node, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgssu_Dialog$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_SelectBox$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_Table$5, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_List$ListStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Tree$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0]);
$rt_metadata([cbgssu_TooltipManager, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Json, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Skin$1, 0, cbgu_Json, [], 0, 0, 0, 0, 0,
cbgssu_Skin, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgm_Shape2D, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Rectangle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgssu_Table$DebugRect, "Table$DebugRect", 15, cbgm_Rectangle, [], 0, 3, 0, cbgssu_Table$DebugRect_$callClinit, 0,
cbgssu_Value$Fixed, 0, cbgssu_Value, [], 0, 3, 0, 0, 0,
cbgssu_SelectBox$SelectBoxScrollPane$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
cbgssu_ImageTextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
cbgssu_Touchpad$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
cbgssu_Value$5, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
cbgssu_CheckBox, 0, cbgssu_TextButton, [], 0, 3, 0, 0, 0,
cbgm_Matrix4Emu, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4Emu_$callClinit, 0,
cbgm_Polygon, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgm_Interpolation, 0, jl_Object, [], 1, 3, 0, cbgm_Interpolation_$callClinit, 0,
cbgm_Interpolation$BounceOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgmc_BoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_BoundingBox_$callClinit, 0,
cbgmc_Sphere, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, 0,
cbgmc_OrientedBoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_OrientedBoundingBox_$callClinit, 0,
cbgmc_Segment, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Vector3, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, 0,
cbgm_Interpolation$7, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Matrix3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Interpolation$10, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Circle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgm_Interpolation$6, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_GridPoint2, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Interpolation$3, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Affine2, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
cbgm_Interpolation$1, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Octree, 0, jl_Object, [], 0, 3, 0, cbgm_Octree_$callClinit, 0,
cbgm_Interpolation$12, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Vector2, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, 0, 0,
cbgm_Interpolation$BounceIn, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
cbgm_Vector4, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, 0, 0,
cbgm_CumulativeDistribution, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Intersector, 0, jl_Object, [], 4, 3, 0, cbgm_Intersector_$callClinit, 0,
cbgm_Path, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_BSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, 0,
cbgm_Interpolation$Elastic, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ElasticIn, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
cbgm_Intersector$MinimumTranslationVector, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_EarClippingTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Bresenham2$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Pow, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Ellipse, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0]);
$rt_metadata([cbgm_Bresenham2, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Exp, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$11, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$13, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Octree$RayCastResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Bounce, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$4, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$9, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$ElasticOut, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
cbgm_CumulativeDistribution$CumulativeValue, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$5, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$SwingIn, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_MathUtils$Sin, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgm_Bezier, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowIn, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_Octree$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgm_CatmullRomSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
cbgm_Interpolation$2, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_GridPoint3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowOut, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_WindowedMean, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Octree$OctreeNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_RandomGenerator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Random, 0, jl_Object, [jur_RandomGenerator, ji_Serializable], 0, 3, 0, 0, 0,
cbgm_RandomXS128, 0, ju_Random, [], 0, 3, 0, 0, 0,
cbgm_DelaunayTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Plane$PlaneSide, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgm_Interpolation$Swing, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$SwingOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_GeometryUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Intersector$SplitTriangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_ConvexHull, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Octree$Collider, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, 0,
cbgm_Interpolation$ExpOut, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$8, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$14, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$ExpIn, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_Polyline, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
cbgm_FloatCounter, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
cbggg_GlyphLayout, "GlyphLayout", 18, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)],
cbggg_TextureRegion, "TextureRegion", 18, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_Sprite, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
cbggg_BitmapFont, "BitmapFont", 18, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggg_NinePatch, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Color, "Color", 16, jl_Object, [], 0, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbgg_Color_equals), "$hashCode", $rt_wrapFunction0(cbgg_Color_hashCode), "$toString", $rt_wrapFunction0(cbgg_Color_toString)],
cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, 0, 0]);
$rt_metadata([cbgg_Texture, "Texture", 16, cbgg_GLTexture, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbgg_Texture_toString)],
cbgu_Array, "Array", 11, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals", $rt_wrapFunction1(cbgu_Array_equals), "$toString", $rt_wrapFunction0(cbgu_Array_toString)],
cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, 0,
cbgu_Queue, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgg_VertexAttribute, "VertexAttribute", 16, jl_Object, [], 4, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbgg_VertexAttribute_equals0), "$hashCode", $rt_wrapFunction0(cbgg_VertexAttribute_hashCode)],
cbgggm_NodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_Node, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_Animation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMeshPart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelTexture, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMaterial$MaterialType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgggmd_ModelAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMesh, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelMaterial, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelNodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggmd_ModelData, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_NodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_NodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_MeshPart, 0, jl_Object, [], 0, 3, 0, cbgggm_MeshPart_$callClinit, 0,
cbg_Net, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_MapObject, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgmo_RectangleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_TextureMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_PolygonMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_PolylineMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_CircleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmo_EllipseMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
cbgmto_TiledMapTileMapObject, 0, cbgmo_TextureMapObject, [], 0, 3, 0, 0, 0,
cbgggp_ResourceData$Configurable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleEffect, 0, jl_Object, [cbgu_Disposable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgu_Json$Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleController, 0, jl_Object, [cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgggp_ResourceData, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggp_ParallelArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpv_ParticleValue, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggpv_SpawnShapeValue, 0, cbgggpv_ParticleValue, [cbgggp_ResourceData$Configurable, cbgu_Json$Serializable], 1, 3, 0, 0, 0,
cbgggpv_MeshSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, 0, 0,
cbgggpv_UnweightedMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_PrimitiveSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, cbgggpv_PrimitiveSpawnShapeValue_$callClinit, 0,
cbgggpv_PointSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_RangedNumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbgggpv_ScaledNumericValue, 0, cbgggpv_RangedNumericValue, [], 0, 3, 0, 0, 0,
cbgggpv_WeightMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_LineSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_MeshSpawnShapeValue$Triangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, 0, jl_Enum, [], 12, 3, 0, 0, 0]);
$rt_metadata([cbgggpv_GradientColorValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbgggpv_NumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
cbgggpv_CylinderSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_EllipseSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggpv_RectangleSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
cbgggp_ParticleControllerComponent, 0, jl_Object, [cbgu_Disposable, cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 1, 3, 0, 0, 0,
cbgggpe_Emitter, 0, cbgggp_ParticleControllerComponent, [cbgu_Json$Serializable], 1, 3, 0, 0, 0,
cbgggpe_RegularEmitter, 0, cbgggpe_Emitter, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggpe_RegularEmitter$EmissionMode, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgggpi_ModelInfluencer$Random$ModelInstancePool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgggpi_Influencer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier, 0, cbgggpi_Influencer, [], 1, 3, 0, cbgggpi_DynamicsModifier_$callClinit, 0,
cbgggpi_DynamicsModifier$FaceDirection, 0, cbgggpi_DynamicsModifier, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$AspectTextureRegion, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Strength, 0, cbgggpi_DynamicsModifier, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$CentripetalAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Random, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_SimpleInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_ScaleInfluencer, 0, cbgggpi_SimpleInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_RegionInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$Animated, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
cbgggpi_SpawnInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$Single, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerFinalizerInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
cbgggpi_ModelInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_ModelInfluencer$Random, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Angular, 0, cbgggpi_DynamicsModifier$Strength, [], 1, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Rotational3D, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$BrownianAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$PolarAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$Rotational2D, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
cbgggpi_ParticleControllerInfluencer$Single, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ModelInfluencer$Single, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ColorInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
cbgggpi_ColorInfluencer$Single, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_ColorInfluencer$Random, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_RegionInfluencer$Random, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
cbgggpi_DynamicsModifier$TangentialAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
cbgggpr_ParticleControllerRenderer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
cbgggpr_ParticleControllerRenderData, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgggpr_PointSpriteControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
cbgggpr_PointSpriteRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_ModelInstanceRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_ModelInstanceControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
cbgggpr_BillboardRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_ParticleControllerControllerRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
cbgggpr_BillboardControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0]);
$rt_metadata([jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, "Class", 25, jl_Object, [jlr_AnnotatedElement, jlr_Type], 4, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString)],
otji_JS, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage)],
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_RuntimeException, "RuntimeException", 25, jl_Exception, [], 0, 3, 0, 0, 0,
jl_ClassCastException, "ClassCastException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jl_CharSequence, "CharSequence", 25, jl_Object, [], 3, 3, 0, 0, 0,
jl_String, "String", 25, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_String_toString), "$equals", $rt_wrapFunction1(jl_String_equals), "$hashCode", $rt_wrapFunction0(jl_String_hashCode)],
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Integer_toString)],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert6", $rt_wrapFunction4(jl_StringBuilder_insert2), "$append6", $rt_wrapFunction3(jl_StringBuilder_append3), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert8", $rt_wrapFunction2(jl_StringBuilder_insert3), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert)],
cgtt_TeaVMLauncher, 0, jl_Object, [], 0, 3, 0, cgtt_TeaVMLauncher_$callClinit, 0,
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbt_TeaApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication, "TeaApplication", 5, jl_Object, [cbg_Application, jl_Runnable], 0, 3, 0, 0, 0,
cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_Game, 0, jl_Object, [cbg_ApplicationListener], 1, 3, 0, 0, 0,
cgt_SpeedDemo, 0, cbg_Game, [], 0, 3, 0, 0, 0,
cgxgbtu_TeaNavigator, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 18, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
cbgu_IntArray, "IntArray", 11, jl_Object, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals), "$toString", $rt_wrapFunction0(cbgu_IntArray_toString)],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, 0,
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_String$_clinit_$lambda$_115_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, 0,
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, 0,
cgxgbt_TeaApplication$AppState, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbtd_WindowWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtdi_TeaWindow, 0, jl_Object, [cgxgbtd_WindowWrapper, otjb_AnimationFrameCallback], 0, 3, 0, cgxgbtdi_TeaWindow_$callClinit, 0,
jl_IllegalArgumentException, "IllegalArgumentException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbta_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbta_AssetDownloader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl, 0, jl_Object, [cgxgbta_AssetDownloader], 0, 3, 0, 0, 0,
cgxgbta_AssetInstance, 0, jl_Object, [], 0, 3, 0, 0, 0]);
$rt_metadata([cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, 0, 0,
cgxgbta_AssetLoader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl, 0, jl_Object, [cgxgbta_AssetLoader], 0, 3, 0, 0, 0,
cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_AbstractInput, 0, jl_Object, [cbg_Input], 1, 3, 0, 0, 0,
cgxgbtd_EventListenerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaInput, 0, cbg_AbstractInput, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, 0,
cgxgbt_TeaNet, 0, jl_Object, [cbg_Net], 0, 3, 0, 0, 0,
cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, 0,
cbgu_Clipboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard, 0, jl_Object, [cbgu_Clipboard], 0, 3, 0, 0, 0,
cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Audio, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaAudio, 0, jl_Object, [cbg_Audio], 3, 3, 0, 0, 0,
cgxgbt_DefaultTeaAudio, 0, jl_Object, [cgxgbt_TeaAudio], 0, 3, 0, 0, 0,
cgxgbt_TeaApplication$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
otji_JSWrapper, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbt_TeaApplication$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbt_TeaApplication$3, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
jl_CloneNotSupportedException, "CloneNotSupportedException", 25, jl_Exception, [], 0, 3, 0, 0, 0,
cbgu_ReflectionPool, "ReflectionPool", 11, cbgu_Pool, [], 0, 3, 0, 0, 0,
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
cgxgbtg_WebGLContextAttributesWrapper, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGL20, "TeaGL20", 5, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindBuffer), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindTexture), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferSubData), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20_glClear),
"$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20_glClearColor), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCreateShader), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisable), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisableVertexAttribArray), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20_glDrawArrays),
"$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnable), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveUniform),
"$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetFloatv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetProgramInfoLog), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetProgramiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetShaderInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetShaderiv), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetString), "$glGetUniformLocation",
$rt_wrapFunction2(cgxgbt_TeaGL20_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glLinkProgram), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20_glPixelStorei), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20_glShaderSource), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameterf),
"$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20_glViewport)],
cbgg_GL30, 0, jl_Object, [cbgg_GL20], 3, 3, 0, 0, 0,
cgxgbt_TeaGL30, "TeaGL30", 5, cgxgbt_TeaGL20, [cbgg_GL30], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30_glBindVertexArray), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glGenVertexArrays), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetFloatv)],
cgxgbt_TeaGL30Debug, "TeaGL30Debug", 5, cgxgbt_TeaGL30, [], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glBindVertexArray), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGenVertexArrays), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindTexture),
"$glClear", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnable), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetString),
"$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL30Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindBuffer),
"$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL30Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisableVertexAttribArray),
"$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetFloatv),
"$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glShaderSource),
"$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL30Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cbggg_GLVersion, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbt_TeaGraphics$FullscreenChanged, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics$1, 0, jl_Object, [cgxgbt_TeaGraphics$FullscreenChanged], 0, 0, 0, 0, 0,
cgxgbt_TeaGL20Debug, "TeaGL20Debug", 5, cgxgbt_TeaGL20, [], 0, 3, 0, 0, ["$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements0),
"$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnable), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glViewport),
"$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20Debug_glCreateProgram),
"$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCreateShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveAttrib), "$glGetActiveUniform",
$rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetShaderInfoLog),
"$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5,
var_6) { cgxgbt_TeaGL20Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, 0,
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, 0, 0,
ju_HashSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtf_FileDB, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgxgbtf_MemoryFileStorage, 0, cgxgbtf_FileDB, [], 0, 3, 0, 0, ["$putFile", $rt_wrapFunction2(cgxgbtf_MemoryFileStorage_putFile), "$removeFile", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_removeFile)],
cgxgbtft_InternalStorage, "InternalStorage", 8, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, 0,
cgxgbtft_ClasspathStorage, "ClasspathStorage", 8, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, 0]);
$rt_metadata([cgxgbtft_LocalDBStorage, "LocalDBStorage", 8, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, ["$putFile", $rt_wrapFunction2(cgxgbtft_LocalDBStorage_putFile), "$removeFile", $rt_wrapFunction1(cgxgbtft_LocalDBStorage_removeFile)],
cgxgbt_TeaPermissions$TeaPermissionResult, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard$ClipboardWriteHandler, 0, jl_Object, [cgxgbt_TeaPermissions$TeaPermissionResult], 0, 0, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_0, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbta_AssetLoaderListener, 0, jl_Object, [], 3, 3, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cgxgbt_TeaApplication$4, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cgxgbt_TeaApplication$5, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cbg_LifecycleListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtwh_HowlerAudioManager, 0, jl_Object, [cbg_LifecycleListener], 0, 3, 0, 0, 0,
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, 0,
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, 0,
cgxgbt_TeaGL20$CustomIntMap, 0, jl_Object, [otj_JSObject], 0, 0, 0, 0, 0,
cbggg_GLVersion$Type, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbta_AssetLoadImpl$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbta_AssetLoadImpl$3, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cbgur_ClassReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgur_Constructor, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgur_ReflectionException, "ReflectionException", 12, jl_Exception, [], 0, 3, 0, 0, 0,
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, 0,
otji_IDBFactory, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
otji_EventHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
jl_SecurityException, 0, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0, 0,
jl_NoSuchMethodException, "NoSuchMethodException", 25, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, 0,
jl_NumberFormatException, "NumberFormatException", 25, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
jl_IllegalStateException, "IllegalStateException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jlr_Modifier, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0, 0,
jl_NullPointerException, "NullPointerException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$getType0", $rt_wrapFunction0(jur_AbstractSet_getType), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
jlr_Member, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Constructor, "Constructor", 26, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jlr_Constructor_toString)],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, 0]);
$rt_metadata([ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
jur_FSet, "FSet", 21, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$matches", $rt_wrapFunction3(jur_FSet_matches), "$getName", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_PatternSyntaxException, "PatternSyntaxException", 21, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
ju_SequencedCollection, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_List, 0, jl_Object, [ju_SequencedCollection], 3, 3, 0, 0, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, 0,
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, 0,
jur_NonCapFSet, "NonCapFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
jur_AheadFSet, "AheadFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName", $rt_wrapFunction0(jur_AheadFSet_getName)],
jur_BehindFSet, "BehindFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName", $rt_wrapFunction0(jur_BehindFSet_getName)],
jur_AtomicFSet, "AtomicFSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getName", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
jur_FinalSet, "FinalSet", 21, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName", $rt_wrapFunction0(jur_FinalSet_getName)],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_EmptySet, "EmptySet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find0", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
jur_JointSet, "JointSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName", $rt_wrapFunction0(jur_JointSet_getName), "$first", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_NonCapJointSet, "NonCapJointSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, "AtomicJointSet", 21, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
jur_PositiveLookAhead, "PositiveLookAhead", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
jur_NegativeLookAhead, "NegativeLookAhead", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookAhead_getName)],
jur_PositiveLookBehind, "PositiveLookBehind", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
jur_NegativeLookBehind, "NegativeLookBehind", 21, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
jur_SingleSet, "SingleSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find0", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
jl_NegativeArraySizeException, "NegativeArraySizeException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jl_ArrayStoreException, "ArrayStoreException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, 0, ["$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$getInstance", $rt_wrapFunction0(jur_AbstractCharClass_getInstance), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI)],
ju_MissingResourceException, "MissingResourceException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_CharClass, "CharClass", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass_contains), "$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$first", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_LeafQuantifierSet, "LeafQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
jur_GroupQuantifierSet, "GroupQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
jur_AltQuantifierSet, "AltQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, 0, 0,
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_Quantifier, "Quantifier", 21, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
jur_LowHighSurrogateRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$getName", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)],
jur_CompositeRangeSet, "CompositeRangeSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
jur_SupplRangeSet, "SupplRangeSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains0", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first", $rt_wrapFunction1(jur_SupplRangeSet_first), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
jur_UCISupplRangeSet, "UCISupplRangeSet", 21, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
jur_UCIRangeSet, "UCIRangeSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
jur_RangeSet, "RangeSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName", $rt_wrapFunction0(jur_RangeSet_getName), "$first", $rt_wrapFunction1(jur_RangeSet_first)],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
jur_CharSet, "CharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$charCount", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find0", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName", $rt_wrapFunction0(jur_CharSet_getName), "$first", $rt_wrapFunction1(jur_CharSet_first)]]);
$rt_metadata([jur_UCICharSet, "UCICharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCICharSet_getName)],
jur_CICharSet, "CICharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName", $rt_wrapFunction0(jur_CICharSet_getName)],
jur_DecomposedCharSet, "DecomposedCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$first", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 21, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 21, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 21, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 21, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 21, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 21, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 21, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
jur_DotAllQuantifierSet, "DotAllQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
jur_DotQuantifierSet, "DotQuantifierSet", 21, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 21, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 21, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 21, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 21, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 21, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
jur_SOLSet, "SOLSet", 21, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_SOLSet_getName)],
jur_WordBoundary, "WordBoundary", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName", $rt_wrapFunction0(jur_WordBoundary_getName)],
jur_PreviousMatch, "PreviousMatch", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName", $rt_wrapFunction0(jur_PreviousMatch_getName)],
jur_EOLSet, "EOLSet", 21, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOLSet_getName)],
jur_EOISet, "EOISet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOISet_getName)],
jur_MultiLineSOLSet, "MultiLineSOLSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
jur_DotAllSet, "DotAllSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
jur_DotSet, "DotSet", 21, jur_JointSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_UEOLSet, "UEOLSet", 21, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UEOLSet_getName)],
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
jur_MultiLineEOLSet, "MultiLineEOLSet", 21, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
jur_CIBackReferenceSet, "CIBackReferenceSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getName", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_BackReferenceSet, "BackReferenceSet", 21, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find0", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 21, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert6", $rt_wrapFunction4(jl_StringBuffer_insert2), "$append6", $rt_wrapFunction3(jl_StringBuffer_append), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert8", $rt_wrapFunction2(jl_StringBuffer_insert3), "$insert", $rt_wrapFunction2(jl_StringBuffer_insert1)],
jur_SequenceSet, "SequenceSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find0", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName", $rt_wrapFunction0(jur_SequenceSet_getName), "$first", $rt_wrapFunction1(jur_SequenceSet_first)],
jur_UCISequenceSet, "UCISequenceSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
jur_CISequenceSet, "CISequenceSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_CISequenceSet_getName)],
jur_UCISupplCharSet, "UCISupplCharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_LowSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 21, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_HighSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
jur_SupplCharSet, "SupplCharSet", 21, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find0", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName", $rt_wrapFunction0(jur_SupplCharSet_getName), "$first", $rt_wrapFunction1(jur_SupplCharSet_first)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)]]);
$rt_metadata([jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
otciu_CharMapping, 0, jl_Object, [], 0, 3, 0, 0, 0,
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 31, jl_Object, [], 0, 3, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, 0,
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 25, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit, 0, jl_Enum, [], 9, 3, 0, cgxgbtd_StyleWrapper$Unit_$callClinit, 0,
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$1, "AbstractCharClass$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
jur_CharClass$18, "CharClass$18", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)]]);
$rt_metadata([jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$1_contains)],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$3_contains)],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$7_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$6_contains)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$9_contains)],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$8_contains)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$11_contains)],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$10_contains)],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$13_contains)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$12_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$14_contains)],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$17_contains)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_CharClass$16_contains)],
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, 0,
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, 0,
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
otjf_JSMapping, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, 0,
otjf_JSSupplier, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2, 0, jl_Object, [otjf_JSSupplier], 0, 3, 0, 0, 0,
cgxgbtu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(jl_Object$monitorExit$lambda$_8_0_run)],
cgxgbt_TeaWindowListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjc_JSPromise$Executor, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$getFile$lambda$_2_0, 0, jl_Object, [otjc_JSPromise$Executor], 0, 3, 0, 0, 0,
otji_IDBObjectStoreParameters, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, 0,
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
ji_PrintStream, 0, ji_FilterOutputStream, [jl_Appendable], 0, 3, 0, 0, 0,
otcic_JsConsolePrintStream, 0, ji_PrintStream, [], 1, 3, 0, 0, 0,
otcic_JSStderrPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$print", $rt_wrapFunction1(otcic_JSStderrPrintStream_print)],
cgxgbtd_StyleWrapper$Unit$1, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$2, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$3, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$4, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$5, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0]);
$rt_metadata([cgxgbtd_StyleWrapper$Unit$6, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$7, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$8, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$9, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, 0,
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, 0,
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, 0,
otjc_JSObjects, 0, jl_Object, [], 4, 3, 0, 0, 0,
otji_JSWrapper$Helper, 0, jl_Object, [], 0, 0, 0, otji_JSWrapper$Helper_$callClinit, 0,
otjc_JSUndefined, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, 0,
otjc_JSWeakRef, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjc_JSFinalizationRegistryConsumer, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otji_JSWrapper$Helper$_clinit_$lambda$_3_0, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, 0,
otji_JSWrapper$Helper$_clinit_$lambda$_3_1, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, 0,
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 21, jur_SingleSet, [], 0, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
cgxgbt_TeaApplication$6, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaApplication$6_$callClinit, 0,
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jur_UnicodeCategory, "UnicodeCategory", 21, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 21, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$contains0", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$2, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onFailure", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$2_onFailure), "$onProgress", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$2_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$2_onSuccess0)],
cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$3, 0, jl_Thread, [], 0, 0, 0, 0, 0,
otcic_JSStdoutPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$print", $rt_wrapFunction1(otcic_JSStdoutPrintStream_print)],
cgxgbtd_EventTargetWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtd_FileReaderWrapper, 0, jl_Object, [cgxgbtd_EventTargetWrapper, otj_JSObject], 1, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$4, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbtdt_TypedArrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0]);
$rt_metadata([cgxgbtf_FileData, "FileData", 7, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_GdxRuntimeException, "GdxRuntimeException", 11, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 0, 3, 0, 0, 0,
otjde_Registration, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_NoSuchElementException, "NoSuchElementException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$5, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$5_onSuccess0)],
cgxgbta_AssetType, "AssetType", 6, jl_Enum, [], 12, 3, 0, 0, 0,
cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, 0,
cbg_Screen, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbg_ScreenAdapter, 0, jl_Object, [cbg_Screen], 0, 3, 0, 0, 0,
cgtf_RandomScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtf_RandomScreen_show), "$render", $rt_wrapFunction1(cgtf_RandomScreen_render), "$resize0", $rt_wrapFunction2(cgtf_RandomScreen_resize)],
cgtf_ChipScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtf_ChipScreen_show), "$render", $rt_wrapFunction1(cgtf_ChipScreen_render), "$resize0", $rt_wrapFunction2(cgtf_ChipScreen_resize)],
cgtf_ChopScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtf_ChopScreen_show), "$render", $rt_wrapFunction1(cgtf_ChopScreen_render), "$resize0", $rt_wrapFunction2(cgtf_ChopScreen_resize)],
cgtf_Xoshiro128PPScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtf_Xoshiro128PPScreen_show), "$render", $rt_wrapFunction1(cgtf_Xoshiro128PPScreen_render), "$resize0", $rt_wrapFunction2(cgtf_Xoshiro128PPScreen_resize)],
cgtf_RarxScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtf_RarxScreen_show), "$render", $rt_wrapFunction1(cgtf_RarxScreen_render), "$resize0", $rt_wrapFunction2(cgtf_RarxScreen_resize)],
cgtf_AceScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtf_AceScreen_show), "$render", $rt_wrapFunction1(cgtf_AceScreen_render), "$resize0", $rt_wrapFunction2(cgtf_AceScreen_resize)],
cgte_RandomScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgte_RandomScreen_show), "$render", $rt_wrapFunction1(cgte_RandomScreen_render), "$resize0", $rt_wrapFunction2(cgte_RandomScreen_resize)],
cgte_ChipScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgte_ChipScreen_show), "$render", $rt_wrapFunction1(cgte_ChipScreen_render), "$resize0", $rt_wrapFunction2(cgte_ChipScreen_resize)],
cgte_ChopScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgte_ChopScreen_show), "$render", $rt_wrapFunction1(cgte_ChopScreen_render), "$resize0", $rt_wrapFunction2(cgte_ChopScreen_resize)],
cgte_Xoshiro128PPScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgte_Xoshiro128PPScreen_show), "$render", $rt_wrapFunction1(cgte_Xoshiro128PPScreen_render), "$resize0", $rt_wrapFunction2(cgte_Xoshiro128PPScreen_resize)],
cgte_RarxScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgte_RarxScreen_show), "$render", $rt_wrapFunction1(cgte_RarxScreen_render), "$resize0", $rt_wrapFunction2(cgte_RarxScreen_resize)],
cgte_AceScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgte_AceScreen_show), "$render", $rt_wrapFunction1(cgte_AceScreen_render), "$resize0", $rt_wrapFunction2(cgte_AceScreen_resize)],
cgtd_RandomScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtd_RandomScreen_show), "$render", $rt_wrapFunction1(cgtd_RandomScreen_render), "$resize0", $rt_wrapFunction2(cgtd_RandomScreen_resize)],
cgtd_ChipScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtd_ChipScreen_show), "$render", $rt_wrapFunction1(cgtd_ChipScreen_render), "$resize0", $rt_wrapFunction2(cgtd_ChipScreen_resize)],
cgtd_ChopScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtd_ChopScreen_show), "$render", $rt_wrapFunction1(cgtd_ChopScreen_render), "$resize0", $rt_wrapFunction2(cgtd_ChopScreen_resize)],
cgtd_Xoshiro128PPScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtd_Xoshiro128PPScreen_show), "$render", $rt_wrapFunction1(cgtd_Xoshiro128PPScreen_render), "$resize0", $rt_wrapFunction2(cgtd_Xoshiro128PPScreen_resize)],
cgtd_RarxScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtd_RarxScreen_show), "$render", $rt_wrapFunction1(cgtd_RarxScreen_render), "$resize0", $rt_wrapFunction2(cgtd_RarxScreen_resize)],
cgtd_AceScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtd_AceScreen_show), "$render", $rt_wrapFunction1(cgtd_AceScreen_render), "$resize0", $rt_wrapFunction2(cgtd_AceScreen_resize)],
cgti_RandomScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgti_RandomScreen_show), "$render", $rt_wrapFunction1(cgti_RandomScreen_render), "$resize0", $rt_wrapFunction2(cgti_RandomScreen_resize)],
cgti_ChipScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgti_ChipScreen_show), "$render", $rt_wrapFunction1(cgti_ChipScreen_render), "$resize0", $rt_wrapFunction2(cgti_ChipScreen_resize)],
cgti_ChopScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgti_ChopScreen_show), "$render", $rt_wrapFunction1(cgti_ChopScreen_render), "$resize0", $rt_wrapFunction2(cgti_ChopScreen_resize)],
cgti_Xoshiro128PPScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgti_Xoshiro128PPScreen_show), "$render", $rt_wrapFunction1(cgti_Xoshiro128PPScreen_render), "$resize0", $rt_wrapFunction2(cgti_Xoshiro128PPScreen_resize)],
cgti_RarxScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgti_RarxScreen_show), "$render", $rt_wrapFunction1(cgti_RarxScreen_render), "$resize0", $rt_wrapFunction2(cgti_RarxScreen_resize)],
cgti_AceScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgti_AceScreen_show), "$render", $rt_wrapFunction1(cgti_AceScreen_render), "$resize0", $rt_wrapFunction2(cgti_AceScreen_resize)],
cgtl_RandomScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtl_RandomScreen_show), "$render", $rt_wrapFunction1(cgtl_RandomScreen_render), "$resize0", $rt_wrapFunction2(cgtl_RandomScreen_resize)],
cgtl_ChipScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtl_ChipScreen_show), "$render", $rt_wrapFunction1(cgtl_ChipScreen_render), "$resize0", $rt_wrapFunction2(cgtl_ChipScreen_resize)],
cgtl_ChopScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtl_ChopScreen_show), "$render", $rt_wrapFunction1(cgtl_ChopScreen_render), "$resize0", $rt_wrapFunction2(cgtl_ChopScreen_resize)],
cgtl_Xoshiro128PPScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtl_Xoshiro128PPScreen_show), "$render", $rt_wrapFunction1(cgtl_Xoshiro128PPScreen_render), "$resize0", $rt_wrapFunction2(cgtl_Xoshiro128PPScreen_resize)],
cgtl_RarxScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtl_RarxScreen_show), "$render", $rt_wrapFunction1(cgtl_RarxScreen_render), "$resize0", $rt_wrapFunction2(cgtl_RarxScreen_resize)],
cgtl_AceScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtl_AceScreen_show), "$render", $rt_wrapFunction1(cgtl_AceScreen_render), "$resize0", $rt_wrapFunction2(cgtl_AceScreen_resize)],
cgtu_RandomScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtu_RandomScreen_show), "$render", $rt_wrapFunction1(cgtu_RandomScreen_render), "$resize0", $rt_wrapFunction2(cgtu_RandomScreen_resize)],
cgtu_ChipScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtu_ChipScreen_show), "$render", $rt_wrapFunction1(cgtu_ChipScreen_render), "$resize0", $rt_wrapFunction2(cgtu_ChipScreen_resize)],
cgtu_ChopScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtu_ChopScreen_show), "$render", $rt_wrapFunction1(cgtu_ChopScreen_render), "$resize0", $rt_wrapFunction2(cgtu_ChopScreen_resize)],
cgtu_Xoshiro128PPScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtu_Xoshiro128PPScreen_show), "$render", $rt_wrapFunction1(cgtu_Xoshiro128PPScreen_render), "$resize0", $rt_wrapFunction2(cgtu_Xoshiro128PPScreen_resize)],
cgtu_RarxScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtu_RarxScreen_show), "$render", $rt_wrapFunction1(cgtu_RarxScreen_render), "$resize0", $rt_wrapFunction2(cgtu_RarxScreen_resize)],
cgtu_AceScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cgtu_AceScreen_show), "$render", $rt_wrapFunction1(cgtu_AceScreen_render), "$resize0", $rt_wrapFunction2(cgtu_AceScreen_resize)],
jl_Thread$start$lambda$_4_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(jl_Thread$start$lambda$_4_0_run)]]);
$rt_metadata([cgxgbtfi_IndexedDBFileData, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$putFile$lambda$_2_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
ju_ConcurrentModificationException, "ConcurrentModificationException", 20, jl_RuntimeException, [], 0, 3, 0, 0, 0,
otjc_JSNumber, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbta_Blob, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_BitmapFont$BitmapFontData, "BitmapFont$BitmapFontData", 18, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Mesh, "Mesh", 16, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggg_BitmapFont$Glyph, "BitmapFont$Glyph", 18, jl_Object, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbggg_BitmapFont$Glyph_toString)],
cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, 0,
cbggg_ShaderProgram, "ShaderProgram", 17, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, 0,
cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObject_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObject_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind)],
cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind), "$unbind", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind)],
cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind)],
cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind), "$unbind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind)],
cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind)],
cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, 0,
cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, 0,
cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
otr_EventQueue$Event, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_ThreadInterruptHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Thread$SleepHandler, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event, jl_ThreadInterruptHandler], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(jl_Thread$SleepHandler_run)],
cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, 0,
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$limit", $rt_wrapFunction1(jn_FloatBuffer_limit), "$position", $rt_wrapFunction1(jn_FloatBuffer_position)],
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
cgxgbt_TeaTool, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
cgxgbtdt_HasArrayBufferView, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable, cgxgbtdt_HasArrayBufferView], 1, 3, 0, 0, ["$limit", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position", $rt_wrapFunction1(jn_ByteBuffer_position)],
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_ByteBufferImpl, "ByteBufferImpl", 22, jn_ByteBuffer, [], 0, 0, 0, 0, 0,
cbgur_ArrayReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_FileTextureData, "FileTextureData", 17, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, 0,
cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, 0,
jn_IntBufferOverArray, 0, jn_IntBufferImpl, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverArray_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_IntBufferOverArray_readOnly)],
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, 0,
jn_FloatBufferOverArray, "FloatBufferOverArray", 22, jn_FloatBufferImpl, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverArray_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_FloatBufferOverArray_readOnly)],
cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbt_TeaFileHandle, "TeaFileHandle", 5, cbgf_FileHandle, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cgxgbt_TeaFileHandle_toString)],
cgxgbtdt_Int8ArrayNative$Int8ArrayNativeListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_Gdx2DPixmap, 0, jl_Object, [cbgu_Disposable, cgxgbtdt_Int8ArrayNative$Int8ArrayNativeListener], 0, 3, 0, 0, 0]);
$rt_metadata([jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, 0,
jn_ShortBufferOverArray, "ShortBufferOverArray", 22, jn_ShortBufferImpl, [], 0, 0, 0, 0, ["$putElement0", $rt_wrapFunction2(jn_ShortBufferOverArray_putElement), "$readOnly", $rt_wrapFunction0(jn_ShortBufferOverArray_readOnly)],
cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbtdt_Int8ArrayNative, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, 0, 0,
jn_IntBufferOverByteBuffer, 0, jn_IntBufferImpl, [cgxgbtdt_HasArrayBufferView], 1, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_IntBufferOverByteBuffer_readOnly)],
jn_IntBufferOverByteBufferLittleEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferLittleEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverByteBufferLittleEndian_putElement)],
jn_IntBufferOverByteBufferBigEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferBigEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverByteBufferBigEndian_putElement)],
jn_FloatBufferOverByteBuffer, 0, jn_FloatBufferImpl, [cgxgbtdt_HasArrayBufferView], 1, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_FloatBufferOverByteBuffer_readOnly)],
jn_FloatBufferOverByteBufferLittleEndian, "FloatBufferOverByteBufferLittleEndian", 22, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferLittleEndian_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverByteBufferLittleEndian_putElement)],
jn_FloatBufferOverByteBufferBigEndian, "FloatBufferOverByteBufferBigEndian", 22, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferBigEndian_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverByteBufferBigEndian_putElement)],
jn_ShortBufferOverByteBuffer, 0, jn_ShortBufferImpl, [cgxgbtdt_HasArrayBufferView], 1, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_ShortBufferOverByteBuffer_readOnly)],
jn_ShortBufferOverByteBufferLittleEndian, "ShortBufferOverByteBufferLittleEndian", 22, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$putElement0", $rt_wrapFunction2(jn_ShortBufferOverByteBufferLittleEndian_putElement)],
jn_ShortBufferOverByteBufferBigEndian, "ShortBufferOverByteBufferBigEndian", 22, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$putElement0", $rt_wrapFunction2(jn_ShortBufferOverByteBufferBigEndian_putElement)],
jl_UnsupportedOperationException, "UnsupportedOperationException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 22, jl_UnsupportedOperationException, [], 0, 3, 0, 0, 0,
jn_BufferUnderflowException, "BufferUnderflowException", 22, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$1, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onFailure", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$1_onFailure), "$onProgress", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$1_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$1_onSuccess)],
cgxgbta_AssetDownloadImpl$4, 0, jl_Object, [], 32, 0, 0, cgxgbta_AssetDownloadImpl$4_$callClinit, 0,
cbg_Files$FileType, "Files$FileType", 10, jl_Enum, [], 12, 3, 0, 0, 0,
jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, 0, 0,
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Reader, 0, jl_Object, [ji_Closeable, jl_Readable], 1, 3, 0, 0, 0,
ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, 0, ["$close", $rt_wrapFunction0(ji_BufferedReader_close)],
ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, 0, 0,
ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, 0, 0,
cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, 0, 0,
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, 0, 0,
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcit_FloatSynthesizer, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Object$NotifyListener, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event], 3, 0, 0, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, 0, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_Matcher$1, "Matcher$1", 21, jl_Object, [], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Matcher$1_toString)],
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, 0,
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 23, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, 0,
jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, 0, 0,
cgxgbt_TeaFileHandle$1, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaFileHandle$1_$callClinit, 0,
ji_IOException, "IOException", 24, jl_Exception, [], 0, 3, 0, 0, 0,
cbgu_ScreenUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgtd_Stringf, 0, jl_Object, [], 4, 3, 0, 0, 0,
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, 0]);
$rt_metadata([jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, 0,
ji_Externalizable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgtr_EnhancedRandom, 0, ju_Random, [ji_Externalizable], 1, 3, 0, 0, ["$nextLong0", $rt_wrapFunction2(cgtr_EnhancedRandom_nextLong)],
cgt_RandomRandom, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgt_RandomRandom_nextLong)],
cbguv_Viewport, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbguv_ScreenViewport, 0, cbguv_Viewport, [], 0, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer20, 0, jl_Object, [cbggg_ImmediateModeRenderer], 0, 3, 0, 0, 0,
cgtr_Chip32Random, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgtr_Chip32Random_nextLong)],
cgtr_ChopRandom, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgtr_ChopRandom_nextLong), "$nextLong0", $rt_wrapFunction2(cgtr_ChopRandom_nextLong0)],
cgtr_Xoshiro128PlusPlusRandom, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgtr_Xoshiro128PlusPlusRandom_nextLong), "$nextLong0", $rt_wrapFunction2(cgtr_Xoshiro128PlusPlusRandom_nextLong0)],
cgtr_Xoshiro160RoadroxoRandom, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgtr_Xoshiro160RoadroxoRandom_nextLong)],
cgtr_AceRandom, 0, cgtr_EnhancedRandom, [], 0, 3, 0, 0, ["$nextLong", $rt_wrapFunction0(cgtr_AceRandom_nextLong)],
cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
cbgu_StreamUtils$OptimizedByteArrayOutputStream, 0, ji_ByteArrayOutputStream, [], 0, 3, 0, 0, 0,
cbgg_OrthographicCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, 0,
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_AssertionError, "AssertionError", 25, jl_Error, [], 0, 3, 0, 0, 0,
cgt_Random, 0, jl_Object, [], 0, 3, 0, 0, 0,
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Graphics$BufferFormat, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgtd_Base, 0, jl_Object, [], 0, 3, 0, cgtd_Base_$callClinit, 0,
cgtd_TextTools, 0, jl_Object, [], 4, 3, 0, 0, 0,
jnc_CoderMalfunctionError, "CoderMalfunctionError", 23, jl_Error, [], 0, 3, 0, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, 0,
ju_Arrays$ArrayAsList, 0, ju_AbstractList, [ju_RandomAccess], 0, 0, 0, 0, 0,
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_HdpiUtils, 0, jl_Object, [], 0, 3, 0, cbggg_HdpiUtils_$callClinit, 0,
cgtd_BitConversion, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_BufferOverflowException, "BufferOverflowException", 22, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_BufferUnderflowException, "BufferUnderflowException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_BufferOverflowException, "BufferOverflowException", 23, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_MalformedInputException, "MalformedInputException", 23, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 23, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
cgtd_RyuDouble, 0, jl_Object, [], 4, 0, 0, cgtd_RyuDouble_$callClinit, 0,
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, 0,
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, 0,
cbggg_HdpiMode, 0, jl_Enum, [], 12, 3, 0, 0, 0,
jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
jm_BigInteger, 0, jl_Number, [jl_Comparable, ji_Serializable], 0, 3, 0, 0, 0,
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_ArithmeticException, "ArithmeticException", 25, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jm_Multiplication, 0, jl_Object, [], 0, 0, 0, jm_Multiplication_$callClinit, 0,
jm_BitLevel, 0, jl_Object, [], 0, 0, 0, 0, 0,
jm_Elementary, 0, jl_Object, [], 0, 0, 0, 0, 0,
jm_Division, 0, jl_Object, [], 0, 0, 0, 0, 0]);
$rt_metadata([cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$6, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onSuccess0)],
jm_Logical, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgu_StringBuilder, 0, jl_Object, [jl_Appendable, jl_CharSequence], 0, 3, 0, 0, 0,
jl_InstantiationException, "InstantiationException", 25, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jl_IllegalAccessException, "IllegalAccessException", 25, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
jlr_InvocationTargetException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, 0, 0,
cgxgbtf_FileDB$1, 0, ji_OutputStream, [], 0, 0, 0, 0, ["$close", $rt_wrapFunction0(cgxgbtf_FileDB$1_close)],
cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0]);
let $rt_booleanArrayCls = $rt_arraycls($rt_booleancls),
$rt_charArrayCls = $rt_arraycls($rt_charcls),
$rt_byteArrayCls = $rt_arraycls($rt_bytecls),
$rt_shortArrayCls = $rt_arraycls($rt_shortcls),
$rt_intArrayCls = $rt_arraycls($rt_intcls),
$rt_longArrayCls = $rt_arraycls($rt_longcls),
$rt_floatArrayCls = $rt_arraycls($rt_floatcls),
$rt_doubleArrayCls = $rt_arraycls($rt_doublecls);
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "null", "Android", "Mac", "Win", "Linux", "FreeBSD", "iPhone", "iPod", "iPad", "touchDown", "touchUp", "touchDragged", "mouseMoved", "enter", "exit", "scrolled", "keyDown", "keyUp", "keyTyped", "enabled", "disabled", "childrenOnly", "keyboard", "scroll", "none", "all", "table", "cell", "actor", "objects cannot be null.", "index can\'t be >= size: ", " >= ", "Class cannot be created (missing no-arg constructor): ", "bounces cannot be < 2 or > 5: ",
"OnPlane", "Back", "Front", "Array is empty.", "Unable to create new instance: ", "", "If no regions are specified, the font data must have an images path.", "0", "This TextureData implementation does not upload data itself", "Call prepare() before calling getPixmap()", "Pixmap already disposed!", "start + count must be <= size: ", " + ", " <= ", "end can\'t be >= size: ", "start can\'t be > end: ", " > ", "additionalCapacity must be >= 0: ", "newSize must be >= 0: ", "[]", ", ", "loadFactor must be > 0 and < 1: ",
"key cannot be null.", "Lambert", "Phong", "both", "top", "bottom", "Enabled", "EnabledUntilCycleEnd", "Disabled", "interface ", "class ", "<init>", ": ", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", "The value is too big for integer type", "The value is too big for int type: ", "Illegal radix: ", "canvas", "BIG_ENDIAN", "LITTLE_ENDIAN", "UTF-8", "IGNORE", "REPLACE", "REPORT", "app", "db/assets", "high-performance", "java.runtime.name", "userAgent",
"os.name", "Windows", "OS X", "no OS", ".html", "index.html", "index-debug.html", "scripts/", "gdx.wasm.js", "Loading script: ", "howler.js", "assets.txt", "Cozette.fnt", "offset + length must be <= size: ", "INIT", "PRELOAD_ASSETS", "DOWNLOAD_ASSETS", "APP_CREATE", "APP_LOOP", "Either src or dest is null", "java.version", "1.8", "TeaVM", "file.separator", "/", "path.separator", ":", "line.separator", "\n", "java.io.tmpdir", "/tmp", "java.vm.version", "user.home", "Loading asset: ", "Unsupported asset type ",
"Should never been thrown", "px", "assets/", "\\", "mousedown", "mouseup", "mousemove", "wheel", "touchstart", "CSS1Compat", "touchmove", "touchcancel", "touchend", "keydown", "keypress", "keyup", "Type ", " is not supported", "object", "function", "string", "number", "undefined", "hidden", "visible", "capacity must be >= 0: ", "The required capacity is too large: ", "glGetFloat not supported by WebGL backend", "GL error: ", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})", "WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})",
"Invalid version string: ", "\\.", "Error parsing number: ", ", assuming: ", "libGDX GL", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", " Error: ", ".", "./", " GET FOLDER: ", " GET FILE: ", "false", "true", " Size: ", " Path: ", " PUT FILE: ", " Bytes: ", "Cannot put an empty folder name", " PUT FOLDER: ", " REMOVE FOLDER: ", " REMOVE FILE: ", " CONTAINS FOLDER: ", " CONTAINS FILE: ", "IndexedDB is not supported in this browser", "PUT FOLDER DB: ", "PUT FILE DB: ", "REMOVE FILE DB: ", "OpenGL", "GLES",
"NONE", "Patter is null", "IndexedDB Error opening database: ", "public", "protected", "private", "abstract", "static", "final", "transient", "volatile", "synchronized", "native", "strictfp", "interface", "fSet", "\\Q", "\\E", "\\\\E\\Q", "Is", "In", "NonCapFSet", "AheadFSet", "BehindFSet", "AtomicFSet", "FinalSet", "<Empty set>", "JointSet", "NonCapJointSet", "PosLookaheadJointSet", "NegLookaheadJointSet", "PosBehindJointSet", "NegBehindJointSet", "<Quant>", "<GroupQuant>", "Lower", "Upper", "ASCII", "Alpha",
"Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions",
"SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu",
"TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols",
"Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended",
"CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms",
"SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "posFSet", " ", "^ ", "range:", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ", "UCI range:", "decomposed Hangul syllable:", "UCI ", "CI ", "decomposed char:", "<DotAllQuant>", "<DotQuant>",
"<SOL>", "WordBoundary", "PreviousMatch", "<EOL>", "EOI", "^", "DotAll", "<Unix MultiLine $>", "<MultiLine $>", "CI back reference: ", "back reference: ", "UCI back reference: ", "sequence: ", "UCI sequence: ", "CI sequence: ", "PX", "PCT", "EM", "EX", "PT", "PC", "IN", "CM", "MM", "main", "success", "failure", "Script download success: ", "Script download failed: ", "Total: ", " loaded: ", " URL: ", "#iterator() cannot be used nested.", "Buffer should have ArrayBufferView interface", "No support for buffer ",
"Invalid assets description file. ", "1", "c", "l", "Binary", "b", "Directory", "Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n", "#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}",
"Error compiling shader: ", "SpriteBatch.end must be called before begin.", "SpriteBatch.begin must be called before end.", "SpriteBatch.begin must be called before draw.", "u_projTrans", "u_texture", "RndR", "nextFloat() using %s at %d FPS", "ChiR", "ChpR", "XPPR", "XRAR", "AceR", "nextExclusiveFloat() using %s at %d FPS", "nextDouble() using %s at %d FPS", "nextInt() using %s at %d FPS", "nextLong() using %s at %d FPS", "nextLong() (upper bits) using %s at %d FPS", "IndexedDB Error putting file: ", "Already loaded.",
"newAction must be non-null", "File is empty.", "padding=", ",", "Invalid padding.", "Missing common header.", "Invalid common header.", "lineHeight=", "Missing: lineHeight", "base=", "Missing: base", "pages=", "Missing additional page definitions.", ".*id=(\\d+)", ".*file=\"?([^\"]+)\"?", "\\\\", "Missing: file", "Page IDs must be indices starting at 0: ", "Invalid page id: ", "kernings ", "metrics ", "char ", " =", "kerning ", "Error loading font file: ", "No glyphs found.", "VertexArray", "VertexBufferObject",
"VertexBufferObjectSubData", "VertexBufferObjectWithVAO", "Capacity is negative: ", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", ")", "attributes must be >= 1", "vertex shader must not be null", "fragment shader must not be null", "Fragment shader:\n", "Vertex shader\n", "No uniform with name \'", "\' in shader", "An attempted fetch uniform from uncompiled shader \n", "data must be a ByteBuffer or FloatBuffer", "No buffer allocated!", "IndexBufferObject cannot be used after it has been disposed.",
"New position ", " is outside of range [0;", "New limit ", "The last float in src ", " is outside of array of size ", "Length ", " must be non-negative", "Offset ", "The last short in src ", "The last byte in dst ", "The last byte in src ", "Already prepared", "Error reading file: ", "Index ", "None", "SourceOver", "NearestNeighbour", "BiLinear", "FileType \'", "\' Not supported in web backend", "File not found: ", " (", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear",
"MipMapLinearLinear", "MirroredRepeat", "ClampToEdge", "Repeat", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "Asset download failed: ", "Asset download success: ", "Classpath", "Internal", "External", "Absolute", "Local", "Replacement preconditions do not hold", "The specified font must contain at least one texture page.", "�", "averageCharsPerByte must be positive. Actual value is ", "maxCharsPerByte must be positive. Actual value is ", "Pixmap", "Custom", "com.badlogic.gdx.backends.lwjgl3.Lwjgl3GLES20",
"texture width and height must be square when using mipmapping.", "The last char in dst ", "The last char in src ", " is outside of string of size ", "Start ", " must be before end ", "u_sampler", "a_normal", "a_texCoord", "u_projModelView", "attribute vec4 a_position;\n", "attribute vec3 a_normal;\n", "attribute vec4 a_color;\n", "uniform mat4 u_projModelView;\n", "varying vec4 v_col;\n", "void main() {\n   gl_Position = u_projModelView * a_position;\n", "   v_col = a_color;\n   v_col.a *= 255.0 / 254.0;\n",
"   gl_PointSize = 1.0;\n}\n", "   v_tex", " = ", ";\n", "varying vec2 v_tex", "attribute vec2 a_texCoord", "#ifdef GL_ES\nprecision mediump float;\n#endif\n", "void main() {\n   gl_FragColor = ", "vec4(1, 1, 1, 1)", "v_col", " * ", ";\n}", " texture2D(u_sampler", ",  v_tex", ") *", "uniform sampler2D u_sampler", "Action must be non-null", "01", "01234567", "0123456789", "0123456789ABCDEF", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-",
"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!?", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\'/!@#$%^&*()[]{}<>:?;|_=", "Malformed input of length ", "Unmappable characters of length ", "NaN", "0.0", "-0.0", ".0", "0.", "Infinity", "-Infinity", " != ", "Logical", "Pixels", "Negative bit address", "Negative exponent", "BigInteger divide by zero", "IndexedDB Error removing file: ", "Error writing file: ", "-2147483648", "CLEAR", "CLEAR_WHITE", "BLACK", "WHITE", "LIGHT_GRAY",
"GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD", "GOLDENROD", "ORANGE", "BROWN", "TAN", "FIREBRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
let $rt_export_main = $rt_mainStarter(cgtt_TeaVMLauncher_main);
$rt_export_main.javaException = $rt_javaException;
let $rt_jso_marker = Symbol('jsoClass');
(() => {
    let c;
    c = cgxgbtdi_TeaWindow.prototype;
    c.onAnimationFrame = $rt_callWithReceiver(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0);
    c = cgxgbt_TeaInput.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaInput_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$1_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$2_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$3_handleEvent$exported$0);
    c = cgxgbt_TeaGraphics$1.prototype;
    c.fullscreenChanged = $rt_callWithReceiver(cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0);
    c = cgxgbt_TeaClipboard$ClipboardWriteHandler.prototype;
    c.denied = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2);
    c.prompt = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1);
    c.granted = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$1_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$3_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2.prototype;
    c.get = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0);
    c = cgxgbta_AssetLoadImpl$getFile$lambda$_2_0.prototype;
    c.onExecute = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_0.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_1.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0);
    c = cgxgbta_AssetLoadImpl$4.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$4_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$putFile$lambda$_2_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0);
})();
$rt_exports.main = $rt_export_main;
}));
